Model,Domain,Organization,Organization categorization,Authors,Publication date,Reference,Link,Citations,Notability criteria,Notability criteria notes,Parameters,Parameters notes,Training compute (FLOP),Training compute lower bound,Training compute upper bound,Training compute notes,Training dataset,Training dataset notes,Training dataset size (datapoints),Dataset size notes,Epochs,Training time (hours),Training time notes,Training hardware,Hardware quantity,Approach,Abstract,Benchmark data,Model accessibility,Hardware utilization,Confidence,Last modified,Country (from Organization),Base model,Finetune compute (FLOP),Finetune compute notes,Training cloud compute vendor,Training data center,Archived links,Batch size,Batch size notes,Foundation model
EXAONE 3.5-R 2.4B,,LG AI Research,Industry,,2025-03-14,,,,,,2400000000.0,2.4B,9.504e+22,,,9.36 × 10^22 (base model reported training compute) + 1.44 × 10^21 (finetune compute) = 9.504e+22,,,,,,,,,,,,,Unreleased,,Confident,2025-03-11 19:27:29+00:00,Korea (Republic of),EXAONE 3.5 2.4B,1.44e+21,1.44e21,,,,,,
EXAONE 3.5-R 32B,,LG AI Research,Industry,,2025-03-14,,,,,,32000000000.0,32B,1.2692e+24,,,1.25 × 10^24 (base model reported training compute) + 1.92 × 10^22 (finetune compute) = 1.2692e+24,,,,,,,,,,,,,Unreleased,,Confident,2025-03-11 19:27:29+00:00,Korea (Republic of),EXAONE 3.5 32B,1.92e+22,1.92e22,,,,,,
EXAONE 3.5-R 7.8B,,LG AI Research,Industry,,2025-03-14,,,,,,7800000000.0,7.8B,4.2568e+23,,,4.21 × 10^23 (base model reported training compute) + 4.68 × 10^21 (finetune compute) = 4.2568e+23,,,,,,,,,,,,,Unreleased,,Confident,2025-03-11 19:27:26+00:00,Korea (Republic of),EXAONE 3.5 7.8B,4.68e+21,4.68e21,,,,,,
QwQ-32B,Language,Alibaba,Industry,Qwen Team,2025-03-06,QwQ-32B: Embracing the Power of Reinforcement Learning,https://qwenlm.github.io/blog/qwq-32b/,,SOTA improvement,Blog (https://qwenlm.github.io/blog/qwq-32b-preview/) lists AIME and MATH-500 scores superior to o1-preview,32500000000.0,"Architecture: transformers with RoPE, SwiGLU, RMSNorm, and Attention QKV bias
Number of Parameters: 32.5B
Number of Paramaters (Non-Embedding): 31.0B
Number of Layers: 64
Number of Attention Heads (GQA): 40 for Q and 8 for KV",3.51e+24,,,"Assuming the same dataset size as for Qwen2.5 training (18T tokens):

6ND = 6 * 32500000000 parameters * 18 * 10^12 tokens =  3.51 × 10^24

'Speculative' confidence",Unspecified unreleased,,,Speculativley might be similar to Qwen2.5 models (18T tokens),,,,,,,"QwQ is the reasoning model of the Qwen series. Compared with conventional instruction-tuned models, QwQ, which is capable of thinking and reasoning, can achieve significantly enhanced performance in downstream tasks, especially hard problems. QwQ-32B is the medium-sized reasoning model, which is capable of achieving competitive performance against state-of-the-art reasoning models, e.g., DeepSeek-R1, o1-mini.",,Open weights (unrestricted),,Speculative,2025-03-06 20:27:54+00:00,China,Qwen2.5-Coder (32B),,,,,,,,
Phi-4 Mini,Language,Microsoft,Industry,"Abdelrahman Abouelenin, Atabak Ashfaq, Adam Atkinson, Hany Awadalla, Nguyen Bach, Jianmin Bao, Alon Benhaim, Martin Cai, Vishrav Chaudhary, Congcong Chen, Dong Chen, Dongdong Chen, Junkun Chen, Weizhu Chen, Yen-Chun Chen, Yi-ling Chen, Qi Dai, Xiyang Dai, Ruchao Fan, Mei Gao, Min Gao, Amit Garg, Abhishek Goswami, Junheng Hao, Amr Hendy, Yuxuan Hu, Xin Jin, Mahmoud Khademi, Dongwoo Kim, Young Jin Kim, Gina Lee, Jinyu Li, Yunsheng Li, Chen Liang, Xihui Lin, Zeqi Lin, Mengchen Liu, Yang Liu, Gilsinia Lopez, Chong Luo, Piyush Madan, Vadim Mazalov, Ali Mousavi, Anh Nguyen, Jing Pan, Daniel Perez-Becker, Jacob Platin, Thomas Portet, Kai Qiu, Bo Ren, Liliang Ren, Sambuddha Roy, Ning Shang, Yelong Shen, Saksham Singhal, Subhojit Som, Xia Song, Tetyana Sych, Praneetha Vaddamanu, Shuohang Wang, Yiming Wang, Zhenghao Wang, Haibin Wu, Haoran Xu, Weijian Xu, Yifan Yang, Ziyi Yang, Donghan Yu, Ishmam Zabir, Jianwen Zhang, Li Lyna Zhang, Yunan Zhang, Xiren Zhou",2025-03-03,Phi-4-Mini Technical Report: Compact yet Powerful Multimodal Language Models via Mixture-of-LoRAs,https://arxiv.org/abs/2503.01743,,,,3800000000.0,3.8-billion,1.14e+23,,,6ND = 6 * 3800000000 parameters * 5000000000000 tokens = 1.14e+23,Unspecified unreleased,,5000000000000.0,"""With these techniques, we built the 5 trillion pre-training data corpus""",,,,,,,"We introduce Phi-4-Mini and Phi-4-Multimodal, compact yet highly capable language and multimodal models. Phi-4-Mini is a 3.8-billion-parameter language model trained on high-quality web and synthetic data, significantly outperforming recent open-source models of similar size and matching the performance of models twice its size on math and coding tasks requiring complex reasoning. This achievement is driven by a carefully curated synthetic data recipe emphasizing high-quality math and coding datasets. Compared to its predecessor, Phi-3.5-Mini, Phi-4-Mini features an expanded vocabulary size of 200K tokens to better support multilingual applications, as well as group query attention for more efficient long-sequence generation. Phi-4-Multimodal is a multimodal model that integrates text, vision, and speech/audio input modalities into a single model. Its novel modality extension approach leverages LoRA adapters and modality-specific routers to allow multiple inference modes combining various modalities without interference. For example, it now ranks first in the OpenASR leaderboard to date, although the LoRA component of the speech/audio modality has just 460 million parameters. Phi-4-Multimodal supports scenarios involving (vision + language), (vision + speech), and (speech/audio) inputs, outperforming larger vision-language and speech-language models on a wide range of tasks. Additionally, we experiment to further train Phi-4-Mini to enhance its reasoning capabilities. Despite its compact 3.8-billion-parameter size, this experimental version achieves reasoning performance on par with or surpassing significantly larger models, including DeepSeek-R1-Distill-Qwen-7B and DeepSeek-R1-Distill-Llama-8B.",,API access,,Confident,2025-03-05 17:15:50+00:00,United States of America,,,,,,,,,
Phi-4-Multimodal,"Multimodal,Language,Vision,Speech",Microsoft,Industry,"Abdelrahman Abouelenin, Atabak Ashfaq, Adam Atkinson, Hany Awadalla, Nguyen Bach, Jianmin Bao, Alon Benhaim, Martin Cai, Vishrav Chaudhary, Congcong Chen, Dong Chen, Dongdong Chen, Junkun Chen, Weizhu Chen, Yen-Chun Chen, Yi-ling Chen, Qi Dai, Xiyang Dai, Ruchao Fan, Mei Gao, Min Gao, Amit Garg, Abhishek Goswami, Junheng Hao, Amr Hendy, Yuxuan Hu, Xin Jin, Mahmoud Khademi, Dongwoo Kim, Young Jin Kim, Gina Lee, Jinyu Li, Yunsheng Li, Chen Liang, Xihui Lin, Zeqi Lin, Mengchen Liu, Yang Liu, Gilsinia Lopez, Chong Luo, Piyush Madan, Vadim Mazalov, Ali Mousavi, Anh Nguyen, Jing Pan, Daniel Perez-Becker, Jacob Platin, Thomas Portet, Kai Qiu, Bo Ren, Liliang Ren, Sambuddha Roy, Ning Shang, Yelong Shen, Saksham Singhal, Subhojit Som, Xia Song, Tetyana Sych, Praneetha Vaddamanu, Shuohang Wang, Yiming Wang, Zhenghao Wang, Haibin Wu, Haoran Xu, Weijian Xu, Yifan Yang, Ziyi Yang, Donghan Yu, Ishmam Zabir, Jianwen Zhang, Li Lyna Zhang, Yunan Zhang, Xiren Zhou",2025-03-03,Phi-4-Mini Technical Report: Compact yet Powerful Multimodal Language Models via Mixture-of-LoRAs,https://arxiv.org/abs/2503.01743,,,,5600000000.0,"5.6B

1. base: Phi-4 Mini (3.8b parameters) 
2. ""The audio encoder and projector introduce 460M parameters while LoRAA consumes another 460M parameters.""
3. ""The image encoder and projector introduce 440M model parameters while the vision adapter LoRAV consumes another 370M model parameters.""",1.211724e+23,,,1.14e+23 (base model training compute) + 7.1724e+21 (finetune compute) = 1.211724e+23,Unspecified unreleased,"""The Phi-4-Multimodal model’s pre-training phase involves a rich and varied dataset, encompassing interleaved image-text documents, image-text pairs, image grounding data, synthetic datasets from OCR of PDFs and realistic images, and synthesized datasets for chart comprehension""

""For vision-speech data, Phi-4-Multimodal model is trained on a diverse set of synthetic vision-speech data, covering single-frame and multi-frame scenarios. """,1100000000000.0,"""The pre-training process involves a total of 0.5T tokens, combining both visual and textual elements.""

""To pre-train the adapter and reduce the modality gap between
the speech and text sequences, we curate a dataset of approximately 2M hours of anonymized in-house speech-text pairs with strong/weak ASR supervisions, covering the eight supported languages""

""Note that the speech token rate is 80ms, indicating 750 tokens for 1-minute audio.""

2*10^6 hours * 60 min / hour * 750 tokens = 90B tokens 

""Collectively, the multimodal SFT data comprises approximately 0.3T tokens.""

""To unlock the instruction following capability of Phi-4-Multimodal for variety of speech and audio tasks, we continue to train the model with about 100M curated speech and audio SFT samples (after weighted up) as the speech post-training stage. <..> We consider different maximum audio lengths for different tasks in post-training. For speech summarization task, we train up to 30-minute audio (22.5k tokens). For other tasks, the maximum audio exposed in training is 30s (375 tokens). "" 

geometric mean sqrt(22500*375) ~ 2900 tokens 

100M * 2900 = 2.9*10^11 = 0.29T tokens 

TOTAL ~1.1T tokens",,,,,,,"We introduce Phi-4-Mini and Phi-4-Multimodal, compact yet highly capable language and multimodal models. Phi-4-Mini is a 3.8-billion-parameter language model trained on high-quality web and synthetic data, significantly outperforming recent open-source models of similar size and matching the performance of models twice its size on math and coding tasks requiring complex reasoning. This achievement is driven by a carefully curated synthetic data recipe emphasizing high-quality math and coding datasets. Compared to its predecessor, Phi-3.5-Mini, Phi-4-Mini features an expanded vocabulary size of 200K tokens to better support multilingual applications, as well as group query attention for more efficient long-sequence generation. Phi-4-Multimodal is a multimodal model that integrates text, vision, and speech/audio input modalities into a single model. Its novel modality extension approach leverages LoRA adapters and modality-specific routers to allow multiple inference modes combining various modalities without interference. For example, it now ranks first in the OpenASR leaderboard to date, although the LoRA component of the speech/audio modality has just 460 million parameters. Phi-4-Multimodal supports scenarios involving (vision + language), (vision + speech), and (speech/audio) inputs, outperforming larger vision-language and speech-language models on a wide range of tasks. Additionally, we experiment to further train Phi-4-Mini to enhance its reasoning capabilities. Despite its compact 3.8-billion-parameter size, this experimental version achieves reasoning performance on par with or surpassing significantly larger models, including DeepSeek-R1-Distill-Qwen-7B and DeepSeek-R1-Distill-Llama-8B.",,API access,,Likely,2025-03-05 17:16:53+00:00,United States of America,Phi-4 Mini,7.1724e+21,"3.8B frozen parameters (Base LM)
1. Vision-Language Training (0.5T tokens)	
810M (440M Image Encoder + Projector + 370M LoRA_V)	

6ND = 6*0.5*10^12*810*10^6 = 2.43e+21

2. Multimodal SFT (0.3T tokens)	
810M	

6ND = 6*0.3*10^12*810*10^6 = 1.458e+21

3. Speech Pre-training (2M hours = 90B tokens, see dataset size notes)	
460M (Audio Encoder + Projector)	

6ND = 6*90*10^9*460*10^6 = 2.484e+20

4. Speech Post-training (100M samples ~ 1.1T tokens, see dataset size notes)	
460M (LoRA_A)

6ND = 6*1.1*10^12*460*10^6 = 3.036e+21

2.43e+21 + 1.458e+21 + 2.484e+20 + 3.036e+21 = 7.1724e+21
",,,,,,
GPT-4.5,"Language,Vision,Multimodal",OpenAI,Industry,"Foundational contributors
Alex Paino, Ali Kamali, Amin Tootoonchian, Andrew Tulloch, Ben Sokolowsky, Clemens Winter, Colin Wei, Daniel Kappler, Daniel Levy, Felipe Petroski Such, Geoff Salmon, Ian O’Connell, Jason Teplitz, Kai Chen, Nik Tezak, Prafulla Dhariwal, Rapha Gontijo Lopes, Sam Schoenholz, Youlong Cheng, Yujia Jin, Yunxing Dai

Research
Core contributors

Aiden Low, Alec Radford, Alex Carney, Alex Nichol, Alexis Conneau, Ananya Kumar, Ben Wang, Charlotte Cole , Elizabeth Yang, Gabriel Goh, Hadi Salman, Haitang Hu, Heewoo Jun, Ian Sohl, Ishaan Gulrajani, Jacob Coxon, James Betker, Jamie Kiros, Jessica Landon, Kyle Luther, Lia Guy, Lukas Kondraciuk, Lyric Doshi, Mikhail Pavlov, Qiming Yuan, Reimar Leike, Rowan Zellers, Sean Metzger, Shengjia Zhao, Spencer Papay, Tao Wang

Contributors

Adam Lerer, Aidan McLaughlin, Alexander Prokofiev, Alexandra Barr, Allan Jabri, Ananya Kumar, Andrew Gibiansky, Andrew Schmidt, Casey Chu, Chak Li, Chelsea Voss, Chris Hallacy, Chris Koch, Christine McLeavey, David Mely, Dimitris Tsipras, Eric Sigler, Erin Kavanaugh, Farzad Khorasani, Huiwen Chang, Ilya Kostrikov, Ishaan Singal, Ji Lin, Jiahui Yu, Jing Yu Zhang, John Rizzo, Jong Wook Kim, Joyce Lee, Juntang Zhuang, Leo Liu, Li Jing, Long Ouyang, Louis Feuvrier, Mo Bavarian, Nick Stathas, Nitish Keskar, Oleg Murk, Preston Bowman, Scottie Yan, SQ Mah, Tao Xu, Taylor Gordon, Valerie Qi, Wenda Zhou, Yu Zhang

Scaling
Core contributors

Adam Goucher, Alex Chow, Alex Renzin, Aleksandra Spyra, Avi Nayak, Ben Leimberger, Christopher Hesse, Duc Phong Nguyen, Dinghua Li, Eric Peterson, Francis Zhang, Gene Oden, Kai Fricke, Kai Hayashi, Larry Lv, Leqi Zou, Lin Yang, Madeleine Thompson, Michael Petrov, Miguel Castro, Natalia Gimelshein, Phil Tillet, Reza Zamani, Ryan Cheu Stanley Hsieh, Steve Lee, Stewart Hall, Thomas Raoux, Tianhao Zheng, Vishal Kuo, Yongjik Kim, Yuchen Zhang, Zhuoran Liu

Contributors

Alvin Wan, Andrew Cann, Antoine Pelisse, Anuj Kalia, Aaron Hurst, Avital Oliver, Brad Barnes, Brian Hsu, Chen Ding, Chen Shen, Cheng Chang, Christian Gibson, Duncan Findlay, Fan Wang, Fangyuan Li, Gianluca Borello, Heather Schmidt, Henrique Ponde de Oliveira Pinto, Ikai Lan, Jiayi Weng, James Crooks, Jos Kraaijeveld, Junru Shao, Kenny Hsu, Kenny Nguyen, Kevin King, Leah Burkhardt, Leo Chen, Linden Li, Lu Zhang, Mahmoud Eariby, Marat Dukhan, Mateusz Litwin, Miki Habryn, Natan LaFontaine, Pavel Belov, Peng Su, Prasad Chakka, Rachel Lim, Rajkumar Samuel, Renaud Gaubert, Rory Carmichael, Sarah Dong, Shantanu Jain, Stephen Logsdon, Todd Underwood, Weixing Zhang, Will Sheu, Weiyi Zheng, Yinghai Lu, Yunqiao Zhang

Safety Systems
Andrea Vallone, Andy Applebaum, Cameron Raymond, Chong Zhang, Dan Mossing, Elizabeth Proehl, Eric Wallace, Evan Mays, Grace Zhao, Ian Kivlichan, Irina Kofman, Joel Parish, Kevin Liu, Keren Gu-Lemberg, Kristen Ying, Lama Ahmad, Lilian Weng , Leon Maksin, Leyton Ho, Meghan Shah, Michael Lampe, Michele Wang, Miles Wang, Olivia Watkins, Phillip Guo, Samuel Miserendino, Sam Toizer, Sandhini Agarwal, Tejal Patwardhan, Tom Dupré la Tour, Tong Mu, Tyna Eloundou, Yunyun Wang

Deployment
Adam Brandon, Adam Perelman, Adele Li, Akshay Nathan, Alan Hayes, Alfred Xue, Alison Ben, Alec Gorge, Alex Guziel, Alex Iftimie, Ally Bennett, Andrew Chen, Andy Wang, Andy Wood, Angad Singh, Anoop Kotha, Antonia Woodford, Anuj Saharan, Ashley Tyra, Atty Eleti, Ben Schneider, Bessie Ji, Beth Hoover, Bill Chen, Blake Samic, Britney Smith, Brian Yu, Caleb Wang, Cary Bassin, Cary Hudson, Charlie Jatt, Chengdu Huang, Chris Beaumont, Christina Huang, Cristina Scheau, Dana Palmie, Daniel Levine, Daryl Neubieser, Dave Cummings, David Sasaki, Dibya Bhattacharjee, Dylan Hunn, Edwin Arbus, Elaine Ya Le, Enis Sert, Eric Kramer, Fred von Lohmann, Gaby Janatpour, Garrett McGrath, Garrett Ollinger, Gary Yang, Hao Sheng, Harold Hotelling, Janardhanan Vembunarayanan, Jeff Harris, Jeffrey Sabin Matsumoto, Jennifer Robinson, Jessica Liang, Jessica Shieh, Jiacheng Yang, Joel Morris, Joseph Florencio, Josh Kaplan, Kan Wu, Karan Sharma, Karen Li, Katie Pypes, Kendal Simon, Kendra Rimbach, Kevin Park, Kevin Rao, Laurance Fauconnet, Lauren Workman, Leher Pathak, Liang Wu, Liang Xiong, Lien Mamitsuka, Lindsay McCallum, Lukas Gross, Manoli Liodakis, Matt Nichols, Michelle Fradin, Minal Khan, Mingxuan Wang, Nacho Soto, Natalie Staudacher, Nikunj Handa, Niko Felix, Ning Liu, Olivier Godement, Oona Gleeson, Philip Pronin, Raymond Li, Reah Miyara, Rohan Nuttall, R.J. Marsan, Sara Culver, Scott Ethersmith, Sean Fitzgerald, Shamez Hemani, Sherwin Wu, Shiao Lee, Shuyang Cheng, Siyuan Fu, Spug Golden, Steve Coffey, Steven Heidel, Sundeep Tirumalareddy, Tabarak Khan, Thomas Degry, Thomas Dimson, Tom Stasi, Tomo Hiratsuka, Trevor Creech, Uzair Navid Iftikhar, Victoria Chernova, Victoria Spiegel, Wanning Jiang, Wenlei Xie, Yaming Lin, Yara Khakbaz, Yilei Qian, Yilong Qin, Yo Shavit, Zhi Bie

Executive Leadership
Bob McGrew, Greg Brockman, Hannah Wong, Jakub Pachocki, Johannes Heidecke, Joanne Jang, Kate Rouch, Kevin Weil, Lauren Itow, Liam Fedus, Mark Chen, Mia Glaese, Mira Murati, Nick Ryder, Sam Altman, Srinivas Narayanan, Tal Broda",2025-02-27,Introducing GPT-4.5,https://openai.com/index/introducing-gpt-4-5/,,Training cost,"Described by OpenAI as a ""new order of magnitude of compute""

https://openai.com/index/introducing-gpt-4-5/",,,,,,,Unspecified unreleased,"""GPT-4.5 was pre-trained and post-trained on diverse datasets, including a mix of publicly available
data, proprietary data from data partnerships, and custom datasets developed in-house, which
collectively contribute to the model’s robust conversational capabilities and world knowledge.""",,,,,,,,,"We advance AI capabilities by scaling two complementary paradigms: unsupervised learning and reasoning. These represent two axes of intelligence.

Unsupervised learning increases world model accuracy and intuition. Models like GPT‑3.5, GPT‑4, and GPT‑4.5 advance this paradigm.
Scaling reasoning⁠, on the other hand, teaches models to think and produce a chain of thought before they respond, allowing them to tackle complex STEM or logic problems. Models like OpenAI o1 and OpenAI o3‑mini advance this paradigm.
GPT‑4.5 is an example of scaling unsupervised learning by scaling up compute and data, along with architecture and optimization innovations. GPT‑4.5 was trained on Microsoft Azure AI supercomputers. The result is a model that has broader knowledge and a deeper understanding of the world, leading to reduced hallucinations and more reliability across a wide range of topics.",,API access,,Unknown,2025-03-11 18:02:19+00:00,United States of America,,,,Azure AI,,,,,
Claude 3.7 Sonnet,"Language,Vision,Multimodal",Anthropic,Industry,,2025-02-24,Claude 3.7 Sonnet,https://www.anthropic.com/news/claude-3-7-sonnet,,Training cost,,,,3.3499999999999998e+25,1.0000000001e+25,1.0000000001e+26,https://docs.google.com/spreadsheets/d/10bhwdVrfHI8tysVIz62ZxtvQ30L-HojYvmU18_b-WIM/edit?gid=0#gid=0,Unspecified unreleased,"""Claude 3.7 Sonnet is trained on a proprietary mix of publicly available information on the Internet, as well as non-public data from third parties, data provided by data labeling services and paid contractors, and data we
generate internally. While trained on publicly available information on the internet through November 2024, Claude 3.7 Sonnet’s knowledge cut-off date is the end of October 2024. This means the model’s knowledge base is most extensive and reliable on information and events up to October 2024.""",,,,,,,,,"Today, we’re announcing Claude 3.7 Sonnet1, our most intelligent model to date and the first hybrid reasoning model on the market. Claude 3.7 Sonnet can produce near-instant responses or extended, step-by-step thinking that is made visible to the user. API users also have fine-grained control over how long the model can think for.

Claude 3.7 Sonnet shows particularly strong improvements in coding and front-end web development. ",,API access,,Likely,2025-03-10 21:55:12+00:00,United States of America,,,,,,,,,
Helix,Robotics,Figure AI,,,2025-02-20,Helix: A Vision-Language-Action Model for Generalist Humanoid Control,https://www.figure.ai/news/helix,,,,7080000000.0,"""Our system comprises two main components: S2, a VLM backbone, and S1, a latent-conditional visuomotor transformer. S2 is built on a 7B-parameter open-source, open-weight VLM pretrained on internet-scale data. <..>

S1, an 80M parameter cross-attention encoder-decoder transformer, handles low-level control.""

7B+80M = 7080000000",,,,,,"""We collect a high quality, multi-robot, multi-operator dataset of diverse teleoperated behaviors, ~500 hours in total. To generate natural language-conditioned training pairs, we use an auto-labeling VLM to generate hindsight instructions. The VLM processes segmented video clips from the onboard robot cameras, prompted with: ""What instruction would you have given the robot to get the action seen in this video?"" All items handled during training are excluded from evaluations to prevent contamination.""",,,,,,,,,"We're introducing Helix, a generalist Vision-Language-Action (VLA) model that unifies perception, language understanding, and learned control to overcome multiple longstanding challenges in robotics. Helix is a series of firsts:

Full-upper-body control: Helix is the first VLA to output high-rate continuous control of the entire humanoid upper body, including wrists, torso, head, and individual fingers.

Multi-robot collaboration: Helix is the first VLA to operate simultaneously on two robots, enabling them to solve a shared, long-horizon manipulation task with items they have never seen before.

Pick up anything: Figure robots equipped with Helix can now pick up virtually any small household object, including thousands of items they have never encountered before, simply by following natural language prompts.

One neural network: Unlike prior approaches, Helix uses a single set of neural network weights to learn all behaviors—picking and placing items, using drawers and refrigerators, and cross-robot interaction—without any task-specific fine-tuning.

Commercial-ready: Helix is the first VLA that runs entirely onboard embedded low-power-consumption GPUs, making it immediately ready for commercial deployment.

",,Hosted access (no API),,Confident,2025-03-10 16:08:36+00:00,,,,,,,,,,
Evo 2 40B,Biology,"Arc Institute,Stanford University,NVIDIA,Liquid,University of California (UC) Berkeley,Goodfire,Columbia University,University of California San Francisco","Academia,Industry,Industry,Academia,Academia,Academia","Garyk Brixi, Matthew G. Durrant, Jerome Ku, Michael Poli, Greg Brockman, Daniel Chang, Gabriel A. Gonzalez, Samuel H. King, David B. Li, Aditi T. Merchant, Mohsen Naghipourfar, Eric Nguyen, Chiara Ricci-Tam, David W. Romero, Gwanggyu Sun, Ali Taghibakshi, Anton Vorontsov, Brandon Yang, Myra Deng, Liv Gorton, Nam Nguyen, Nicholas K. Wang, Etowah Adams, Stephen A. Baccus, Steven Dillmann, Stefano Ermon, Daniel Guo, Rajesh Ilango, Ken Janik, Amy X. Lu, Reshma Mehta, Mohammad R.K. Mofrad, Madelena Y. Ng, Jaspreet Pannu, Christopher Ré, Jonathan C. Schmok, John St. John, Jeremy Sullivan, Kevin Zhu, Greg Zynda, Daniel Balsam, Patrick Collison, Anthony B. Costa, Tina Hernandez-Boussard, Eric Ho, Ming-Yu Liu, Thomas McGrath, Kimberly Powell, Dave P. Burke, Hani Goodarzi, Patrick D. Hsu, Brian L. Hie",2025-02-19,Genome modeling and design across all domains of life with Evo 2,https://arcinstitute.org/manuscripts/Evo2,,,,40300000000.0,Table 1 lists 40.3B paramters as model size.,2.25e+24,,,"40.3e9 parameters * 9.3e12 training datapoints * 6 = 2.25e24.
Same FLOPS estimate given by authors in Table 1.",OpenGenome 2,,9300000000000.0,"""We trained two versions of Evo 2: a smaller version at 7B parameters trained on 2.4 trillion tokens and a full version at 40B parameters trained on 9.3 trillion tokens.""",,,,,,,"All of life encodes information with DNA. While tools for sequencing, synthesis, and editing of genomic code have transformed biological research, intelligently composing new biological systems would also require a deep understanding of the immense complexity encoded by genomes. We introduce Evo 2, a biological foundation model trained on 9.3 trillion DNA base pairs from a highly curated genomic atlas spanning all domains of life. We train Evo 2 with 7B and 40B parameters to have an unprecedented 1 million token context window with single-nucleotide resolution. Evo 2 learns from DNA sequence alone to accurately predict the functional impacts of genetic variation—from noncoding pathogenic mutations to clinically significant BRCA1 variants—without task-specific finetuning. Applying mechanistic interpretability analyses, we reveal that Evo 2 autonomously learns a breadth of biological features, including exon–intron boundaries, transcription factor binding sites, protein structural elements, and prophage genomic regions. Beyond its predictive capabilities, Evo 2 generates mitochondrial, prokaryotic, and eukaryotic sequences at genome scale with greater naturalness and coherence than previous methods. Guiding Evo 2 via inference-time search enables controllable generation of epigenomic structure, for which we demonstrate the first inference-time scaling results in biology. We make Evo 2 fully open, including model parameters, training code, inference code, and the OpenGenome2 dataset, to accelerate the exploration and design of biological complexity.",,Open weights (unrestricted),,Unverified,2025-02-20 06:01:28+00:00,"United States of America,United States of America,United States of America,United States of America,United States of America,United States of America",,,,,,,,,
Evo 2 7B,Biology,"Arc Institute,Stanford University,NVIDIA,Liquid,University of California (UC) Berkeley,Goodfire,Columbia University,University of California San Francisco","Academia,Industry,Industry,Academia,Academia,Academia","Garyk Brixi, Matthew G. Durrant, Jerome Ku, Michael Poli, Greg Brockman, Daniel Chang, Gabriel A. Gonzalez, Samuel H. King, David B. Li, Aditi T. Merchant, Mohsen Naghipourfar, Eric Nguyen, Chiara Ricci-Tam, David W. Romero, Gwanggyu Sun, Ali Taghibakshi, Anton Vorontsov, Brandon Yang, Myra Deng, Liv Gorton, Nam Nguyen, Nicholas K. Wang, Etowah Adams, Stephen A. Baccus, Steven Dillmann, Stefano Ermon, Daniel Guo, Rajesh Ilango, Ken Janik, Amy X. Lu, Reshma Mehta, Mohammad R.K. Mofrad, Madelena Y. Ng, Jaspreet Pannu, Christopher Ré, Jonathan C. Schmok, John St. John, Jeremy Sullivan, Kevin Zhu, Greg Zynda, Daniel Balsam, Patrick Collison, Anthony B. Costa, Tina Hernandez-Boussard, Eric Ho, Ming-Yu Liu, Thomas McGrath, Kimberly Powell, Dave P. Burke, Hani Goodarzi, Patrick D. Hsu, Brian L. Hie",2025-02-19,Genome modeling and design across all domains of life with Evo 2,https://arcinstitute.org/manuscripts/Evo2,,,,7000000000.0,,1.008e+23,,,7e9 parameters *2.4e12 training datapoints*6=1.008e23,OpenGenome 2,,2400000000000.0,"""We trained two versions of Evo 2: a smaller version at 7B parameters trained on 2.4 trillion tokens and a full version at 40B parameters trained on 9.3 trillion tokens.""",,,,,,,"All of life encodes information with DNA. While tools for sequencing, synthesis, and editing of genomic code have transformed biological research, intelligently composing new biological systems would also require a deep understanding of the immense complexity encoded by genomes. We introduce Evo 2, a biological foundation model trained on 9.3 trillion DNA base pairs from a highly curated genomic atlas spanning all domains of life. We train Evo 2 with 7B and 40B parameters to have an unprecedented 1 million token context window with single-nucleotide resolution. Evo 2 learns from DNA sequence alone to accurately predict the functional impacts of genetic variation—from noncoding pathogenic mutations to clinically significant BRCA1 variants—without task-specific finetuning. Applying mechanistic interpretability analyses, we reveal that Evo 2 autonomously learns a breadth of biological features, including exon–intron boundaries, transcription factor binding sites, protein structural elements, and prophage genomic regions. Beyond its predictive capabilities, Evo 2 generates mitochondrial, prokaryotic, and eukaryotic sequences at genome scale with greater naturalness and coherence than previous methods. Guiding Evo 2 via inference-time search enables controllable generation of epigenomic structure, for which we demonstrate the first inference-time scaling results in biology. We make Evo 2 fully open, including model parameters, training code, inference code, and the OpenGenome2 dataset, to accelerate the exploration and design of biological complexity.",,Open weights (unrestricted),,Unverified,2025-02-20 06:08:12+00:00,"United States of America,United States of America,United States of America,United States of America,United States of America,United States of America",,,,,,,,,
Grok-3,"Language,Vision,Multimodal",xAI,Industry,,2025-02-17,Grok 3 Beta — The Age of Reasoning Agents,https://x.ai/blog/grok-3,,Training cost,,,,4.64e+26,2.1e+26,1.1300000000000001e+27,"Estimate based on training time for a cluster of 100,000 H100s, and xAI's statement that Grok 2 was trained on more compute than GPT-4 (2.1e25) and that Grok 3 was trained on around 15 times more compute than Grok 2. 

Full estimate here: https://docs.google.com/document/d/1C_dABuZrAqYE_ui4_GZ4bRLtq3TBjIGoBSktaPElhEU/edit?usp=sharing",Unspecified unreleased,,,,,2400.0,Estimated to be between 3 and 4 months. We use 100 days in our estimate,NVIDIA H100 SXM5 80GB,100000.0,,,,Hosted access (no API),,Confident,2025-02-20 19:13:12+00:00,United States of America,,,,,xAI Memphis Colossus,,,,
OmniHuman-1,"Video,Vision,Audio",ByteDance,Industry,"Gaojie Lin, Jianwen Jiang, Jiaqi Yang, Zerong Zheng, Chao Liang",2025-02-13,OmniHuman-1: Rethinking the Scaling-Up of One-Stage Conditioned Human Animation Models,https://arxiv.org/abs/2502.01061,,,,,,,,,,,"""By filtering based on aesthetics, image quality, motion amplitude, etc. (common criteria for video generation), we obtained 18.7K hours of human-related data for training. Of this, 13% was selected using lipsync and pose visibility criteria, enabling audio and pose modalities. During training, the data composition was adjusted to fit the omni-condition training strategy.""

18700*0.13 = 2431 (hours of video)",,,,,,,,,"End-to-end human animation, such as audio-driven talking human generation, has undergone notable advancements in the recent few years. However, existing methods still struggle to scale up as large general video generation models, limiting their potential in real applications. In this paper, we propose OmniHuman, a Diffusion Transformer-based framework that scales up data by mixing motion-related conditions into the training phase. To this end, we introduce two training principles for these mixed conditions, along with the corresponding model architecture and inference strategy. These designs enable OmniHuman to fully leverage data-driven motion generation, ultimately achieving highly realistic human video generation. More importantly, OmniHuman supports various portrait contents (face close-up, portrait, half-body, full-body), supports both talking and singing, handles human-object interactions and challenging body poses, and accommodates different image styles. Compared to existing end-to-end audio-driven methods, OmniHuman not only produces more realistic videos, but also offers greater flexibility in inputs. It also supports multiple driving modalities (audio-driven, video-driven and combined driving signals). Video samples are provided on the ttfamily project page (this https URL)",,Unreleased,,Confident,2025-03-10 16:53:22+00:00,China,,,,,,,,,
Goku-8B,"Video,Vision","The University of Hong Kong,ByteDance","Academia,Industry","Shoufa Chen, Chongjian Ge, Yuqi Zhang, Yida Zhang, Fengda Zhu, Hao Yang, Hongxiang Hao, Hui Wu, Zhichao Lai, Yifei Hu, Ting-Che Lin, Shilong Zhang, Fu Li, Chuan Li, Xing Wang, Yanghua Peng, Peize Sun, Ping Luo, Yi Jiang, Zehuan Yuan, Bingyue Peng, Xiaobing Liu",2025-02-07,Goku: Flow Based Video Generative Foundation Models,https://arxiv.org/abs/2502.04896v1,,,,8000000000.0,"""implemented through the Goku model family, which comprises Transformer architectures with 2B and 8B parameters.""",,,,,"LAION,Unspecified unreleased,Panda-70M,OpenVid-1M,Pexels","""After rigorous filtering, the final training dataset for Goku
consists of approximately 160M image-text pairs and 36M video-text pairs, encompassing both publicly available datasets and internally curated proprietary datasets. The detailed composition
of these resources is outlined as follows:

• Text-to-Image Data. Our text-to-image training dataset includes 100M public samples from LAION (Schuhmann et al., 2022) and 60M high-quality, internal samples. We use public data for pre-training and internal data for fine-tuning.

• Text-to-Video Data. Our T2V training dataset includes 11M public clips and 25M in-house clips. The former include Panda-70M (Chen et al., 2024b), InternVid (Wang et al., 2023b), OpenVid-1M (Nan et al., 2024), and Pexels (Lab and etc., 2024). Rather than directly using these datasets, we apply a data curation pipeline to keep high-quality samples""",67000000.0,,,,,,,,"This paper introduces Goku, a state-of-the-art family of joint image-and-video generation models leveraging rectified flow Transformers to achieve industry-leading performance. We detail the foundational elements enabling high-quality visual generation, including the data curation pipeline, model architecture design, flow formulation, and advanced infrastructure for efficient and robust large-scale training. The Goku models demonstrate superior performance in both qualitative and quantitative evaluations, setting new benchmarks across major tasks. Specifically, Goku achieves 0.76 on GenEval and 83.65 on DPG-Bench for text-to-image generation, and 84.85 on VBench for text-to-video tasks. We believe that this work provides valuable insights and practical advancements for the research community in developing joint image-and-video generation models.",,,,Unverified,2025-03-10 16:43:34+00:00,"Hong Kong,China,China",,,,,,,,,
Goku+,Video,"The University of Hong Kong,ByteDance","Academia,Industry","Shoufa Chen, Chongjian Ge, Yuqi Zhang, Yida Zhang, Fengda Zhu, Hao Yang, Hongxiang Hao, Hui Wu, Zhichao Lai, Yifei Hu, Ting-Che Lin, Shilong Zhang, Fu Li, Chuan Li, Xing Wang, Yanghua Peng, Peize Sun, Ping Luo, Yi Jiang, Zehuan Yuan, Bingyue Peng, Xiaobing Liu",2025-02-07,Video Ads Foundation Models,https://saiyan-world.github.io/goku/,,,,,,,,,,,,,,,,,,,,"Goku+ is a new family of video foundation models built on top of Goku, specifically designed to optimize advertising scenarios involving humans and products to maximize performance. Our latest research breakthroughs show how you can create advertising videos at 100 times lower cost.

Goku+: Create Marketing Avatar from Text
Goku+ transforms text into hyper-realistic human videos, significantly outperforming existing methods. In particular, it can generate videos longer than 20 seconds, featuring stable hand movements and highly expressive facial and body movements of human subjects.

Goku+: Turn Product Image To Video Clip
Goku+ converts your product images into captivating video clips, ensuring end-to-end optimization. This process enhances the appeal and effectiveness of your marketing materials.

Goku+: Product and Human Interaction
Goku+ produces realistic and highly engaging videos tailored to showcase specific products. These videos effectively capture the essence of the products, boosting viewer engagement and interest.",,,,Confident,2025-03-10 16:30:38+00:00,"Hong Kong,China,China",,,,,,,,,
Mistral Small 3,Language,Mistral AI,Industry,,2025-01-30,"Mistral Small 3, a latency-optimized 24B-parameter model released under the Apache 2.0 license.",https://mistral.ai/news/mistral-small-3/,,,,24000000000.0,24B,1.152e+24,,,6ND = 6*8T*24B = 1.152e+24,Unspecified unreleased,"""Notably, Mistral Small 3 was developed without reinforcement learning or synthetic training data, techniques commonly used by competitors. Lample said this “raw” approach helps avoid embedding unwanted biases that could be difficult to detect later.""",8000000000000.0,"8 trillion tokens

Source: https://venturebeat.com/ai/mistral-small-3-brings-open-source-ai-to-the-masses-smaller-faster-and-cheaper/",,,,,,,"Mistral Small 3 is competitive with larger models such as Llama 3.3 70B or Qwen 32B, and is an excellent open replacement for opaque proprietary models like GPT4o-mini. Mistral Small 3 is on par with Llama 3.3 70B instruct, while being more than 3x faster on the same hardware.

Mistral Small 3 is a pre-trained and instructed model catered to the ‘80%’ of generative AI tasks—those that require robust language and instruction following performance, with very low latency.

We designed this new model to saturate performance at a size suitable for local deployment. Particularly, Mistral Small 3 has far fewer layers than competing models, substantially reducing the time per forward pass. At over 81% accuracy on MMLU and 150 tokens/s latency, Mistral Small is currently the most efficient model of its category.

We’re releasing both a pretrained and instruction-tuned checkpoint under Apache 2.0. The checkpoints can serve as a powerful base for accelerating progress. Note that Mistral Small 3 is neither trained with RL nor synthetic data, so is earlier in the model production pipeline than models like Deepseek R1 (a great and complementary piece of open-source technology!). It can serve as a great base model for building accrued reasoning capacities. We look forward to seeing how the open-source community adopts and customizes it.",,Open weights (unrestricted),,Confident,2025-01-31 16:36:52+00:00,France,,,,,,,,,
Qwen2.5-Max,Language,Alibaba,Industry,Qwen Team,2025-01-28,Qwen2.5-Max: Exploring the Intelligence of Large-scale MoE Model,https://qwenlm.github.io/blog/qwen2.5-max/,,,,,,,,,,Unspecified unreleased,,20000000000000.0,"""Concurrently, we are developing Qwen2.5-Max, a large-scale MoE model that has been pretrained on over 20 trillion tokens and further post-trained with curated Supervised Fine-Tuning (SFT) and Reinforcement Learning from Human Feedback (RLHF) methodologies. """,,,,,,,"It is widely recognized that continuously scaling both data size and model size can lead to significant improvements in model intelligence. However, the research and industry community has limited experience in effectively scaling extremely large models, whether they are dense or Mixture-of-Expert (MoE) models. Many critical details regarding this scaling process were only disclosed with the recent release of DeepSeek V3. Concurrently, we are developing Qwen2.5-Max, a large-scale MoE model that has been pretrained on over 20 trillion tokens and further post-trained with curated Supervised Fine-Tuning (SFT) and Reinforcement Learning from Human Feedback (RLHF) methodologies. Today, we are excited to share the performance results of Qwen2.5-Max and announce the availability of its API through Alibaba Cloud. We also invite you to explore Qwen2.5-Max on Qwen Chat!",,API access,,Unknown,2025-02-11 21:14:23+00:00,China,,,,,,,,,
Janus-Pro-7B,"Image generation,Vision,Language,Multimodal",DeepSeek,Industry,"Xiaokang Chen, Zhiyu Wu, Xingchao Liu, Zizheng Pan, Wen Liu, Zhenda Xie, Xingkai Yu, Chong Ruan",2025-01-27,Janus-Pro: Unified Multimodal Understanding and Generation with Data and Model Scaling,https://github.com/deepseek-ai/Janus/blob/main/janus_pro_tech_report.pdf,,,,7000000000.0,"7B

In our experiments, we utilize DeepSeek-LLM (1.5B and 7B) [3] with a maximum supported sequence length of 4096 as the base language model. For the vision encoder used in understanding
tasks, we select SigLIP-Large-Patch16-384 [53].",,,,,"ImageNet,YFCC-100M,Docmatrix,Unspecified unreleased","• Longer Training in Stage I: We increase the training steps in Stage I, allowing sufficient training on the ImageNet dataset. 
• Focused Training in Stage II: In Stage II, we drop ImageNet data and directly utilize normal text-to-image data to train the model to generate images based on dense descriptions. 

For the Stage II pretraining data, we refer to DeepSeek-VL2 [49] and add approximately 90 million samples. These include image caption datasets (e.g., YFCC [31]), as well as data for table, chart, and document understanding (e.g., Docmatix [20]). 

For the Stage III supervised fine-tuning data, we also incorporate additional datasets from DeepSeek-VL2, such as MEME understanding, Chinese conversational data, and datasets aimed at enhancing dialogue experiences.

In Janus-Pro, we incorporate approximately 72 million samples of synthetic aesthetic data, bringing the ratio of real to synthetic data to 1:1 during the unified pretraining stage. The prompts for these synthetic data samples are publicly available, such as those in [43].
",3138560000.0,"from table 2
assuming each sample is 384*384/(16*16) = 576 tokens (it might be less since it is not just image but text data as well but not OOM less)

20000*256 + 360000*512 + 40000*128) * 576 = 3138560000 tokens 

high confidence since it aligns well with the compute estimate",1.0,336.0,"""The whole training process took about 9/14 days on a cluster of 16/32 nodes for 1.5B/7B model, each equipped with 8 Nvidia A100 (40GB) GPUs.""

14*24 = 336 hours",NVIDIA A100 SXM4 40 GB,8.0,,"In this work, we introduce Janus-Pro, an advanced version of the previous work Janus. Specifically, Janus-Pro incorporates (1) an optimized training strategy, (2) expanded training data, and (3) scaling to larger model size. With these improvements, Janus-Pro achieves significant advancements in both multimodal  understanding and text-to-image instruction-following capabilities,
while also enhancing the stability of text-to-image generation. We hope this work will inspire further exploration in the field. Code and models are publicly available.",,Open weights (restricted use),,Confident,2025-02-03 14:57:50+00:00,China,"DeepSeek LLM 7B,SigLIP",9.05748e+20,"312000000000000*336*3600*8*0.3 = 9.05748×10^20
(it might be more if utilization is higher than 0.3)

operation counting:
from table 2
assuming each sample is 384*384/(16*16) = 576 tokens (it might be less since it is not just image but text data as well but not OOM less)

6*((20000*256 + 360000*512 + 40000*128) * 576)*7*10^9 = 4.70679552 × 10^21",,,,,,
Doubao-1.5-pro,Language,ByteDance,Industry,,2025-01-22,Doubao-1.5-pro,https://team.doubao.com/zh/special/doubao_1_5_pro,,Training cost,,,"Not directly reported. We are told it is a MoE model, and that it matches the performance of a dense model trained on the same data, while using 1/7th of the activated parameters. Additionally they say ""The number of parameters of the Doubao dense model is also much smaller than that of Llama3.1-405B"", which suggests that the number of activated parameters on the forward pass is ""much less"" than 405B/7 = 58B parameters.",,,,"The model was trained on 9T tokens; since we know the MoE model uses ""much less"" than 58B parameters (see parameter notes), training compute is likely to be less than 6 * 9T * 58B = 3.132e24",,,9000000000000.0,9T tokens,1.0,,,,,Self-supervised learning,The model uses the MoE architecture and explores the ultimate balance between model performance and reasoning performance through integrated training-thinking design. Doubao-1.5-pro can use only a smaller activation parameter to exceed the performance of a first-class super-large pre-training model and achieve excellent results on multiple evaluation benchmarks.,,Hosted access (no API),,Unknown,2025-01-28 20:37:52+00:00,China,,,,,,,,,
Kimi k1.5,Multimodal,Moonshot,,Kimi team,2025-01-22,Kimi k1.5: Scaling Reinforcement Learning with LLMs,https://arxiv.org/html/2501.12599v1,0.0,,,,,,,,,,,,,,,,,,,"Language model pretraining with next token prediction has proved effective for scaling compute but is limited to the amount of available training data. Scaling reinforcement learning (RL) unlocks a new axis for the continued improvement of artificial intelligence, with the promise that large language models (LLMs) can scale their training data by learning to explore with rewards. However, prior published work has not produced competitive results. In light of this, we report on the training practice of Kimi k1.5, our latest multi-modal LLM trained with RL, including its RL training techniques, multi-modal data recipes, and infrastructure optimization. Long context scaling and improved policy optimization methods are key ingredients of our approach, which establishes a simplistic, effective RL framework without relying on more complex techniques such as Monte Carlo tree search, value functions, and process reward models. Notably, our system achieves state-of-the-art reasoning performance across multiple benchmarks and modalities—e.g., 77.5 on AIME, 96.2 on MATH 500, 94-th percentile on Codeforces, 74.9 on MathVista—matching OpenAI’s o1. Moreover, we present effective long2short methods that use long-CoT techniques to improve short-CoT models, yielding state-of-the-art short-CoT reasoning results—e.g., 60.8 on AIME, 94.6 on MATH500, 47.3 on LiveCodeBench—outperforming existing short-CoT models such as GPT-4o and Claude Sonnet 3.5 by a large margin (up to +550%).",,,,Unverified,2025-02-25 12:31:17+00:00,,,,,,,,,,
Hunyuan3D 2.0,"Language,Vision,3D modeling",Tencent,Industry,"Project Sponsors: Jie Jiang, Yuhong Liu, Di Wang, Yong Yang, Tian Liu
• Project Leaders: Chunchao Guo, Jingwei Huang
• Core Contributors:
– Data: Lifu Wang, Jihong Zhang, Meng Chen, Liang Dong, Yiwen Jia, Yulin Cai, Jiaao Yu,
Yixuan Tang, Hao Zhang, Zheng Ye, Peng He, Runzhou Wu, Chao Zhang, Yonghao Tan
– Shape Generation: Zeqiang Lai, Qingxiang Lin, Yunfei Zhao, Haolin Liu, Zibo Zhao
– Texture Synthesis: Shuhui Yang, Yifei Feng, Mingxin Yang, Sheng Zhang
– Downstream Tasks: Xianghui Yang, Huiwen Shi, Sicong Liu, Junta Wu, Yihang Lian, Fan
Yang, Ruining Tang, Zebin He, Xinzhou Wang, Jian Liu, Xuhui Zuo
– Studio: Zhuo Chen, Biwen Lei, Haohan Weng, Jing Xu, Yiling Zhu, Xinhai Liu, Lixin Xu,
Changrong Hu, Tianyu Huang
• Contributors: Jie Xiao, Yangyu Tao, Jianchen Zhu, Jinbao Xue, Kai Liu, Chongqing Zhao,
Xinming Wu, Zhichao Hu, Lei Qin, Jianbing Peng, Zhan Li, Minghui Chen, Xipeng Zhang, Lin Niu,
Paige Wang, Yingkai Wang, Haozhao Kuang, Zhongyi Fan, Xu Zheng, Weihao Zhuang, YingPing
He",2025-01-21,"Hunyuan3D 2.0: Scaling Diffusion Models for High
Resolution Textured 3D Assets Generation",https://github.com/Tencent/Hunyuan3D-2/blob/main/assets/report/Tencent_Hunyuan3D_2_0.pdf,,,,,,,,,,Objaverse,,,,,,,,,,"We present Hunyuan3D 2.0, an advanced large-scale 3D synthesis system for generating high-resolution textured 3D assets. This system includes two foundation components: a large-scale shape generation model – Hunyuan3D-DiT, and a largescale texture synthesis model – Hunyuan3D-Paint. The shape generative model,
built on a scalable flow-based diffusion transformer, aims to create geometry that properly aligns with a given condition image, laying a solid foundation for downstream applications. The texture synthesis model, benefiting from strong geometric
and diffusion priors, produces high-resolution and vibrant texture maps for either generated or hand-crafted meshes. Furthermore, we build Hunyuan3D-Studio – a versatile, user-friendly production platform that simplifies the re-creation process of 3D assets. It allows both professional and amateur users to manipulate or even animate their meshes efficiently. We systematically evaluate our models, showing that Hunyuan3D 2.0 outperforms previous state-of-the-art models, including the open-source models and closed-source models in geometry details, condition alignment, texture quality, and etc. Hunyuan3D 2.0 is publicly released in order to fill the gaps in the open-source 3D community for large-scale foundation generative models. The code and pre-trained weights of our models are available at:
https://github.com/Tencent/Hunyuan3D-2.",,Open weights (restricted use),,Unknown,2025-02-07 17:37:09+00:00,China,,,,,,,,,
DeepSeek-R1,Language,DeepSeek,Industry,,2025-01-20,DeepSeek-R1: Incentivizing Reasoning Capability in LLMs via Reinforcement Learning,https://api-docs.deepseek.com/news/news250120,,"Training cost,SOTA improvement","Best score on SuperCLUE Math6o in Jan 2025
https://www.superclueai.com/",671000000000.0,"671B total
37B activated
https://github.com/deepseek-ai/DeepSeek-R1/tree/main",5.17e+24,,,4.56e+24 FLOP (estimated base model Deepseek V3 training compute) + 6.1e23 FLOP = 5.17e+24 FLOP,Unspecified unreleased,"RL + SFT

When reasoning-oriented RL converges, we utilize the resulting checkpoint to collect SFT
(Supervised Fine-Tuning) data for the subsequent round. Unlike the initial cold-start data, which
primarily focuses on reasoning, this stage incorporates data from other domains to enhance the
model’s capabilities in writing, role-playing, and other general-purpose tasks.",,,,,,,,,"We introduce our first-generation reasoning models, DeepSeek-R1-Zero and DeepSeek-R1. DeepSeek-R1-Zero, a model trained via large-scale reinforcement learning (RL) without supervised fine-tuning (SFT) as a preliminary step, demonstrates remarkable reasoning capabilities.
Through RL, DeepSeek-R1-Zero naturally emerges with numerous powerful and intriguing reasoning behaviors. However, it encounters challenges such as poor readability, and language mixing. To address these issues and further enhance reasoning performance, we introduce DeepSeek-R1, which incorporates multi-stage training and cold-start data before RL. DeepSeek-R1 achieves performance comparable to OpenAI-o1-1217 on reasoning tasks. To support the research community, we open-source DeepSeek-R1-Zero, DeepSeek-R1, and six dense models (1.5B, 7B, 8B, 14B, 32B, 70B) distilled from DeepSeek-R1 based on Qwen and Llama.",,Open weights (unrestricted),,Confident,2025-02-25 13:58:38+00:00,China,DeepSeek-V3,6.1e+23,6.1e23 FLOP from these estimations: https://epoch.ai/gradient-updates/what-went-into-training-deepseek-r1,,,,,,
DeepSeek-R1-Zero,Language,DeepSeek,Industry,,2025-01-20,DeepSeek-R1: Incentivizing Reasoning Capability in LLMs via Reinforcement Learning,https://api-docs.deepseek.com/news/news250120,,,,671000000000.0,"671B total
37B activated
https://github.com/deepseek-ai/DeepSeek-R1/tree/main",,,,,Unspecified unreleased,RL without (!) SFT,,,,,,,,,"We introduce our first-generation reasoning models, DeepSeek-R1-Zero and DeepSeek-R1. DeepSeek-R1-Zero, a model trained via large-scale reinforcement learning (RL) without supervised fine-tuning (SFT) as a preliminary step, demonstrates remarkable reasoning capabilities.
Through RL, DeepSeek-R1-Zero naturally emerges with numerous powerful and intriguing reasoning behaviors. However, it encounters challenges such as poor readability, and language mixing. To address these issues and further enhance reasoning performance, we introduce DeepSeek-R1, which incorporates multi-stage training and cold-start data before RL. DeepSeek-
R1 achieves performance comparable to OpenAI-o1-1217 on reasoning tasks. To support the research community, we open-source DeepSeek-R1-Zero, DeepSeek-R1, and six dense models (1.5B, 7B, 8B, 14B, 32B, 70B) distilled from DeepSeek-R1 based on Qwen and Llama.",,Open weights (unrestricted),,Confident,2025-02-04 17:15:15+00:00,China,DeepSeek-V3,,,,,,,,
INTELLECT-MATH,,Prime Intellect,Industry,,2025-01-17,,,,,,7000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-22 16:32:52+00:00,United States of America,,,,,,,,,
GPT-4b micro,Biology,"OpenAI,Retro Biosciences","Industry,Industry","John Hallman, Rico Meinl",2025-01-17,"OpenAI’s new model, called GPT-4b micro, was trained to suggest ways to re-engineer the protein factors to increase their function.",https://www.technologyreview.com/2025/01/17/1110086/openai-has-created-an-ai-model-for-longevity-science/,,,,,,,,,GPT-4b is a micro model compared to the other ChatGPT options as it was only trained on protein data.,Unspecified unreleased,"""The model was trained on examples of protein sequences from many species, as well as information on which proteins tend to interact with one another. While that’s a lot of data, it’s just a fraction of what OpenAI’s flagship chatbots were trained on, making GPT-4b an example of a “small language model” that works with a focused data set.""",,,,,,,,,"OpenAI’s new model, called GPT-4b micro, was trained to suggest ways to re-engineer the protein factors to increase their function. According to OpenAI, researchers used the model’s suggestions to change two of the Yamanaka factors to be more than 50 times as effective—at least according to some preliminary measures. 

“Just across the board, the proteins seem better than what the scientists were able to produce by themselves,” says John Hallman, an OpenAI researcher.",,Unreleased,,Unknown,2025-03-10 15:40:23+00:00,"United States of America,United States of America",,,,,,,,,
MatterGen,Materials science,Microsoft Research AI for Science,Industry,"Claudio Zeni, Robert Pinsler, Daniel Zügner, Andrew Fowler, Matthew Horton, Xiang Fu, Zilong Wang, Aliaksandra Shysheya, Jonathan Crabbé, Shoko Ueda, Roberto Sordillo, Lixin Sun, Jake Smith, Bichlien Nguyen, Hannes Schulz, Sarah Lewis, Chin-Wei Huang, Ziheng Lu, Yichi Zhou, Han Yang, Hongxia Hao, Jielan Li, Chunlei Yang, Wenjie Li, Ryota Tomioka, Tian Xie",2025-01-16,A generative model for inorganic materials design,https://www.nature.com/articles/s41586-025-08628-5,,,,46800000.0,"""MatterGen contains 46.8M parameters""

https://huggingface.co/microsoft/mattergen

""The model architecture is based on GemNet (Gasteiger et al. 2021).""",2.69568e+19,,,312000000000000*3600*10*8*0.3 = 2.69568e+19,"Materials Project,Alexandria","""MP-20 (Jain et al., 2013): contains 45k general inorganic materials, including most experimentally known materials with no more than 20 atoms in unit cell.

Alex-MP-20: Training dataset consisting of around 600k structures from MP-20 and Alexandria (Schmidt et al. 2022) with at most 20 atoms inside the unit cell and below 0.1 eV/atom of the convex hull. See the venn diagram below and the MatterGen paper for more details.""",960032000.0,"""It is trained on 608,000 stable materials from the Materials Project(opens in new tab) (MP) and Alexandria(opens in new tab) (Alex) databases.""

26956800000000000000 (estimated training compute) / (46800000 parameters * 6 * 100 epochs * 608000 materials) ~ 1579 tokens per materials 

1579*608,000 = 960032000",100.0,10.0,"""One training epoch of around 600K training samples takes around 6 minutes on 8 NVIDIA A100 GPUs""

100 epochs -> 600 minutes = 10 hours",NVIDIA A100,8.0,,"The design of functional materials with desired properties is essential in driving technological advances in areas like energy storage, catalysis, and carbon capture1–3. Generative models provide a new paradigm for materials design by directly generating novel materials given desired property constraints, but current methods have low success rate in proposing stable crystals or can only satisfy a limited set of property constraints 4−11. Here, we present MatterGen, a model that generates stable, diverse inorganic materials across the periodic table and can further be fine-tuned to steer the generation towards a broad range of property constraints. Compared to prior generative models 4,12, structures produced by MatterGen are more than twice as likely to be novel and stable, and more than 10 times closer to the local energy minimum. After fine-tuning, MatterGen successfully generates stable, novel materials with desired chemistry, symmetry, as well as mechanical, electronic and magnetic properties. As a proof of concept, we synthesize one of the generated structures and measure its property value to be within 20 % of our target. We believe that the quality of generated materials and the breadth of MatterGen’s capabilities represent a major advancement towards creating a foundational generative model for materials design.",,Open weights (unrestricted),,Confident,2025-02-07 00:34:10+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,China,Netherlands,Germany",,,,,,,,,
s1,Language,"Stanford University,University of Washington,Allen Institute for AI,Contextual AI","Academia,Academia,Research collective,Industry","Niklas Muennighoff, Zitong Yang, Weijia Shi, Xiang Lisa Li, Li Fei-Fei, Hannaneh Hajishirzi, Luke Zettlemoyer, Percy Liang, Emmanuel Candès, Tatsunori Hashimoto",2025-01-14,s1: Simple test-time scaling,https://arxiv.org/abs/2501.19393,,,,32000000000.0,32B,,,,,s1K,,4700000.0, 4.7M tokens (table 5),5.0,0.27,"""We perform supervised fine-tuning (SFT) of an off-the-shelf pretrained model on our small dataset requiring just 26 minutes of training on 16 H100 GPUs""",NVIDIA H100 SXM5 80GB,16.0,,"Test-time scaling is a promising new approach to language modeling that uses extra test-time compute to improve performance. Recently, OpenAI's o1 model showed this capability but did not publicly share its methodology, leading to many replication efforts. We seek the simplest approach to achieve test-time scaling and strong reasoning performance. First, we curate a small dataset s1K of 1,000 questions paired with reasoning traces relying on three criteria we validate through ablations: difficulty, diversity, and quality. Second, we develop budget forcing to control test-time compute by forcefully terminating the model's thinking process or lengthening it by appending ""Wait"" multiple times to the model's generation when it tries to end. This can lead the model to double-check its answer, often fixing incorrect reasoning steps. After supervised finetuning the Qwen2.5-32B-Instruct language model on s1K and equipping it with budget forcing, our model s1-32B exceeds o1-preview on competition math questions by up to 27% (MATH and AIME24). Further, scaling s1-32B with budget forcing allows extrapolating beyond its performance without test-time intervention: from 50% to 57% on AIME24. Our model, data, and code are open-source at this https URL",,Open weights (unrestricted),,Confident,2025-02-11 20:59:54+00:00,"United States of America,United States of America,United States of America,United States of America",Qwen2.5 Instruct (72B),5.7819637e+18,"989500000000000 * 16 * 26 * 60 * 0.3 = 7.409376e+18

6ND = 6* 32 * 10^9 * 4700000 * 5 = 4.512e+18

sqrt(4.512e+18 * 7.409376e+18) = 5.7819637e+18",,,,,,
"Cosmos-1.0-
Diffusion-14B Video2World","Robotics,Vision,Video",NVIDIA,Industry,"NVIDIA: Niket Agarwal, Arslan Ali, Maciej Bala, Yogesh Balaji, Erik Barker, Tiffany Cai, Prithvijit Chattopadhyay, Yongxin Chen, Yin Cui, Yifan Ding, Daniel Dworakowski, Jiaojiao Fan, Michele Fenzi, Francesco Ferroni, Sanja Fidler, Dieter Fox, Songwei Ge, Yunhao Ge, Jinwei Gu, Siddharth Gururani, Ethan He, Jiahui Huang, Jacob Huffman, Pooya Jannaty, Jingyi Jin, Seung Wook Kim, Gergely Klár, Grace Lam, Shiyi Lan, Laura Leal-Taixe, Anqi Li, Zhaoshuo Li, Chen-Hsuan Lin, Tsung-Yi Lin, Huan Ling, Ming-Yu Liu, Xian Liu, Alice Luo, Qianli Ma, Hanzi Mao, Kaichun Mo, Arsalan Mousavian, Seungjun Nah, Sriharsha Niverty, David Page, Despoina Paschalidou, Zeeshan Patel, Lindsey Pavao, Morteza Ramezanali, Fitsum Reda, Xiaowei Ren, Vasanth Rao Naik Sabavat, Ed Schmerling, Stella Shi, Bartosz Stefaniak, Shitao Tang, Lyne Tchapmi, Przemek Tredak, Wei-Cheng Tseng, Jibin Varghese, Hao Wang, Haoxiang Wang, Heng Wang, Ting-Chun Wang, Fangyin Wei, Xinyue Wei, Jay Zhangjie Wu, Jiashu Xu, Wei Yang, Lin Yen-Chen, Xiaohui Zeng, Yu Zeng, Jing Zhang, Qinsheng Zhang, Yuxuan Zhang, Qingqing Zhao, Artur Zolkowski",2025-01-07,Cosmos World Foundation Model Platform for Physical AI,https://arxiv.org/abs/2501.03575,,,,14000000000.0,14B,6.1554816e+24,,,"989500000000000 * 0.4 * 10000 * 3600 * 3 *30 *24  = 3.0777408e+25

(total training compute)

assuming this model is 1/5 of it:

3.0777408e+25 / 5 = 6.1554816e+24 (Likely confidence)",Unspecified unreleased,,9000000000000000.0,"""Suite of first-generation video models trained on 9,000 trillion tokens, including 20 million hours of robotics and driving data - generating high-quality videos from multimodal inputs like images, text, or video.""",,,"""We train all of the WFM models reported in the paper using a cluster of 10,000 NVIDIA H100 GPUs in a time span of three months.""",NVIDIA H100 SXM5 80GB,10000.0,,"Physical AI needs to be trained digitally first. It needs a digital twin of itself, the policy model, and a digital twin of the world, the world model. In this paper, we present the Cosmos World Foundation Model Platform to help developers build customized world models for their Physical AI setups. We position a world foundation model as a general-purpose world model that can be fine-tuned into customized world models for downstream applications. Our platform covers a video curation pipeline, pre-trained world foundation models, examples of post-training of pre-trained world foundation models, and video tokenizers. To help Physical AI builders solve the most critical problems of our society, we make our platform open-source and our models open-weight with permissive licenses available via this https URL.",,Open weights (restricted use),,Unverified,2025-02-03 16:00:28+00:00,United States of America,,,,,,,,,
Tiangong 4.0,Language,Kunlun Inc.,Industry,,2025-01-06,Kunlun Wanwei’s Tiangong Model 4.0 o1 and 4o Versions Officially Launched for Free Use,https://www.aibase.com/news/14480,,,,,,,,,,,,,,,,,,,,"The ""Skywork Large Model 4.0"" o1 version (Skywork o1) is the first model in China capable of Chinese logical reasoning. After comprehensive upgrades to the technology stack and model optimization, it can proficiently handle various reasoning challenges, including mathematics, coding, logic, common sense, and ethical decision-making. This model significantly enhances logical reasoning capabilities through a self-developed multi-agent system and high-quality long-thinking data, utilizing innovative Q* and Step-DAPO algorithms to further optimize the reasoning system and training effectiveness.",,,,Unverified,2025-02-25 12:29:10+00:00,China,,,,,,,,,
OLMo 2 Furious 7B,Language,"Allen Institute for AI,University of Washington,New York University (NYU)","Research collective,Academia,Academia","Team OLMo, Pete Walsh, Luca Soldaini, Dirk Groeneveld, Kyle Lo, Shane Arora, Akshita Bhagia, Yuling Gu, Shengyi Huang, Matt Jordan, Nathan Lambert, Dustin Schwenk, Oyvind Tafjord, Taira Anderson, David Atkinson, Faeze Brahman, Christopher Clark, Pradeep Dasigi, Nouha Dziri, Michal Guerquin, Hamish Ivison, Pang Wei Koh, Jiacheng Liu, Saumya Malik, William Merrill, Lester James V. Miranda, Jacob Morrison, Tyler Murray, Crystal Nam, Valentina Pyatkin, Aman Rangapur, Michael Schmitz, Sam Skjonsberg, David Wadden, Christopher Wilhelm, Michael Wilson, Luke Zettlemoyer, Ali Farhadi, Noah A. Smith, Hannaneh Hajishirzi",2024-12-31,2 OLMo 2 Furious,https://arxiv.org/abs/2501.00656,,,,7000000000.0,7B,1.8e+23,,,1.8*10^23 FLOPs (Table 6 - developers calculated using 6ND formula),"OLMo-Mix-1124,Dolmino-Mix-1124,Tulu 3",,4000000000000.0,"Pretraining Stage 1
(OLMo-Mix-1124)	4 trillion tokens (= 1 epoch)	

Pretraining Stage 2
(Dolmino-Mix-1124)	50B tokens (3 runs)
merged	

Post-training
(Tulu 3 SFT OLMo mix)	SFT + DPO + PPO
(preference mix)	",1.0,,,NVIDIA H100 SXM5 80GB,,,"We present OLMo 2, the next generation of our fully open language models. OLMo 2 includes dense autoregressive models with improved architecture and training recipe, pretraining data mixtures, and instruction tuning recipes. Our modified model architecture and training recipe achieve both better training stability and improved per-token efficiency. Our updated pretraining data mixture introduces a new, specialized data mix called Dolmino Mix 1124, which significantly improves model capabilities across many downstream task benchmarks when introduced via late-stage curriculum training (i.e. specialized data during the annealing phase of pretraining). Finally, we incorporate best practices from Tülu 3 to develop OLMo 2-Instruct, focusing on permissive data and extending our final-stage reinforcement learning with verifiable rewards (RLVR). Our OLMo 2 base models sit at the Pareto frontier of performance to compute, often matching or outperforming open-weight only models like Llama 3.1 and Qwen 2.5 while using fewer FLOPs and with fully transparent training data, code, and recipe. Our fully open OLMo 2-Instruct models are competitive with or surpassing open-weight only models of comparable size, including Qwen 2.5, Llama 3.1 and Gemma 2. We release all OLMo 2 artifacts openly -- models at 7B and 13B scales, both pretrained and post-trained, including their full training data, training code and recipes, training logs and thousands of intermediate checkpoints. The final instruction model is available on the Ai2 Playground as a free research demo.",,Open weights (unrestricted),,Confident,2025-01-03 21:35:18+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
OLMo 2 Furious 13B,Language,"Allen Institute for AI,University of Washington,New York University (NYU)","Research collective,Academia,Academia","Team OLMo, Pete Walsh, Luca Soldaini, Dirk Groeneveld, Kyle Lo, Shane Arora, Akshita Bhagia, Yuling Gu, Shengyi Huang, Matt Jordan, Nathan Lambert, Dustin Schwenk, Oyvind Tafjord, Taira Anderson, David Atkinson, Faeze Brahman, Christopher Clark, Pradeep Dasigi, Nouha Dziri, Michal Guerquin, Hamish Ivison, Pang Wei Koh, Jiacheng Liu, Saumya Malik, William Merrill, Lester James V. Miranda, Jacob Morrison, Tyler Murray, Crystal Nam, Valentina Pyatkin, Aman Rangapur, Michael Schmitz, Sam Skjonsberg, David Wadden, Christopher Wilhelm, Michael Wilson, Luke Zettlemoyer, Ali Farhadi, Noah A. Smith, Hannaneh Hajishirzi",2024-12-31,2 OLMo 2 Furious,https://arxiv.org/abs/2501.00656,,,,13000000000.0,13B,4.6e+23,,,"4.6*10^23 FLOPs (Table 6 - developers calculated using 6ND formula)
","OLMo-Mix-1124,Dolmino-Mix-1124,Tulu 3",,4000000000000.0,"Pretraining Stage 1
(OLMo-Mix-1124)	5 trillion tokens ( = 1.2 epochs)
Pretraining Stage 2
(Dolmino-Mix-1124) 100B tokens (3 runs)
300B tokens (1 run)
merged
Post-training
(Tulu 3 SFT OLMo mix)	SFT + DPO + PPO
(preference mix)	",1.2,,,NVIDIA H100 SXM5 80GB,,,"We present OLMo 2, the next generation of our fully open language models. OLMo 2 includes dense autoregressive models with improved architecture and training recipe, pretraining data mixtures, and instruction tuning recipes. Our modified model architecture and training recipe achieve both better training stability and improved per-token efficiency. Our updated pretraining data mixture introduces a new, specialized data mix called Dolmino Mix 1124, which significantly improves model capabilities across many downstream task benchmarks when introduced via late-stage curriculum training (i.e. specialized data during the annealing phase of pretraining). Finally, we incorporate best practices from Tülu 3 to develop OLMo 2-Instruct, focusing on permissive data and extending our final-stage reinforcement learning with verifiable rewards (RLVR). Our OLMo 2 base models sit at the Pareto frontier of performance to compute, often matching or outperforming open-weight only models like Llama 3.1 and Qwen 2.5 while using fewer FLOPs and with fully transparent training data, code, and recipe. Our fully open OLMo 2-Instruct models are competitive with or surpassing open-weight only models of comparable size, including Qwen 2.5, Llama 3.1 and Gemma 2. We release all OLMo 2 artifacts openly -- models at 7B and 13B scales, both pretrained and post-trained, including their full training data, training code and recipes, training logs and thousands of intermediate checkpoints. The final instruction model is available on the Ai2 Playground as a free research demo.",,Open weights (unrestricted),,Confident,2025-01-03 21:35:20+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
DeepSeek-V3,Language,DeepSeek,Industry,,2024-12-24,DeepSeek-V3 Technical Report,https://github.com/deepseek-ai/DeepSeek-V3/blob/main/DeepSeek_V3.pdf,,Training cost,training cost was $5.3million USD (Table 1),671000000000.0,Mixture-of-Experts (MoE) language model with 671B total parameters with 37B activated for each token.,4.56e+24,,7.5928392e+24,"6*37B*14.8T = 3.2856e+24

Alternatively, they say: ""DeepSeek-V3 requires only 2.788M H800 GPU hours for its full training."" and we know they trained in FP8. H800s get 1.513e15 FLOP/s in FP8:
2.788M * 3600 * 1.513e15 * 0.3 = 4.56e24

Utilization may be somewhat lower for FP8.

Upper bound estimate: 50% utilization would mean 7.59e24",,,14800000000000.0,"""We pre-train DeepSeek-V3 on 14.8 trillion diverse and
high-quality tokens, followed by Supervised Fine-Tuning and Reinforcement Learning stages to fully harness its capabilities""",,,"""DeepSeek-V3 requires only 2.788M H800 GPU hours for its full training""",NVIDIA H800 SXM5,2048.0,,"We present DeepSeek-V3, a strong Mixture-of-Experts (MoE) language model with 671B total parameters with 37B activated for each token. To achieve efficient inference and cost-effective training, DeepSeek-V3 adopts Multi-head Latent Attention (MLA) and DeepSeekMoE architectures, which were thoroughly validated in DeepSeek-V2. Furthermore, DeepSeek-V3 pioneers an auxiliary-loss-free strategy for load balancing and sets a multi-token prediction training objective for stronger performance. We pre-train DeepSeek-V3 on 14.8 trillion diverse and high-quality tokens, followed by Supervised Fine-Tuning and Reinforcement Learning stages to fully harness its capabilities. Comprehensive evaluations reveal that DeepSeek-V3 outperforms other open-source models and achieves performance comparable to leading closed-source models. Despite its excellent performance, DeepSeek-V3 requires only 2.788M H800 GPU hours for its full training. In addition, its training process is remarkably stable. Throughout the entire training process, we did not experience any irrecoverable loss spikes or perform any rollbacks.",,Open weights (restricted use),,Confident,2025-02-17 20:36:08+00:00,China,,,,,Paper on DeepSeek-V3,,,,
o3,Language,OpenAI,Industry,,2024-12-20,,"https://openai.com/index/early-access-for-safety-testing/
https://arstechnica.com/information-technology/2024/12/openai-announces-o3-and-o3-mini-its-next-simulated-reasoning-models/
https://www.wired.com/story/openai-o3-reasoning-model-google-gemini/
https://techcrunch.com/2025/02/12/openai-cancels-its-o3-ai-model-in-favor-of-a-unified-next-gen-release/",,,,,,,,,,Unspecified unreleased,,,,,,,,,,"from ARS technica: ""On Friday, during Day 12 of its ""12 days of OpenAI,"" OpenAI CEO Sam Altman announced its latest AI ""reasoning"" models, o3 and o3-mini, which build upon the o1 models launched earlier this year. The company is not releasing them yet but will make these models available for public safety testing and research access today.

The models use what OpenAI calls ""private chain of thought,"" where the model pauses to examine its internal dialog and plan ahead before responding, which you might call ""simulated reasoning"" (SR)—a form of AI that goes beyond basic large language models (LLMs).
<..>
According to OpenAI, the o3 model earned a record-breaking score on the ARC-AGI benchmark, a visual reasoning benchmark that has gone unbeaten since its creation in 2019. In low-compute scenarios, o3 scored 75.7 percent, while in high-compute testing, it reached 87.5 percent—comparable to human performance at an 85 percent threshold.

OpenAI also reported that o3 scored 96.7 percent on the 2024 American Invitational Mathematics Exam, missing just one question. The model also reached 87.7 percent on GPQA Diamond, which contains graduate-level biology, physics, and chemistry questions. On the Frontier Math benchmark by EpochAI, o3 solved 25.2 percent of problems, while no other model has exceeded 2 percent. """,,Unreleased,,Unknown,2025-03-10 15:33:33+00:00,United States of America,,,,,,,,,
Gemini 2.0 Flash Thinking,"Language,Vision,Multimodal","Google DeepMind,Google","Industry,Industry",Gemini Team,2024-12-19,"Our enhanced reasoning model, capable of showing its thoughts to improve performance and explainability",https://deepmind.google/technologies/gemini/flash-thinking/,,,,,,,,,,Unspecified unreleased,Knowledge cutoff	June 2024,,,,,,,,,"Combining speed and performance, 2.0 Flash Thinking Experimental also excels in science and math, showing its thinking to solve complex problems.

Enhanced performance
Improvements on math and science benchmarks.

Long context
A one-million token context window enables deeper analysis of long-form text.

Improved thinking
More consistency between thoughts and answers.

Tool use
Turn on code execution to run and evaluate code.

Best for	Complex tasks without the need for low latency",,API access,,Unknown,2025-03-10 13:53:55+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America",,,,,,,,,
Veo 2,"Video,Vision",Google DeepMind,Industry,,2024-12-16,Our state-of-the-art video generation model,https://deepmind.google/technologies/veo/veo-2/,,SOTA improvement,"""Veo has achieved state of the art results in head-to-head comparisons of outputs by human raters over top video generation models.

Participants viewed 1003 prompts and respective videos on MovieGenBench, a benchmark dataset released by Meta. Veo 2 performs best on overall preference, and for its capability to follow prompts accurately.""

SOTA qualification is unclear solely from MovieGenBench, which is subjective and depends on human raters. But Veo 2 seems to be SOTA over Meta Movie Gen, Kling, Minimax, and Sora Turbo.
Updated Sora could be better, but was released later this same month.",,,,,,,Unspecified unreleased,,,,,,,,,,,,API access,,Unknown,2025-02-25 21:04:35+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
F5-TTS,Speech,"Shanghai Jiao Tong University,University of Cambridge,Geely Automobile Research Institute (Ningbo) Company","Academia,Academia,Industry","Yushen Chen, Zhikang Niu, Ziyang Ma, Keqi Deng, Chunhui Wang, Jian Zhao, Kai Yu, Xie Chen",2024-12-15,F5-TTS: A Fairytaler that Fakes Fluent and Faithful Speech with Flow Matching,https://arxiv.org/abs/2410.06885,,,,335800000.0,"The F5-TTS base model has 22 layers, 16 attention heads, 1024/2048 embedding/feed-forward network (FFN) dimension for DiT; and 4 layers, 512/1024 embedding/FFN dimension for ConvNeXt V2; in total 335.8M parameters.",4.5287424e+20,,,312000000000000*8*168*3600*0.3 = 4.5287424e+20,Emilia,"""We utilize the in-the-wild multilingual speech dataset Emilia to train our base models. After simply filtering out transcription failure and misclassified language speech, we retain approximately 95K hours of English and Chinese data. """,,"""Our base models are trained to 1.2M updates with a batch size of 307,200 audio frames (0.91 hours)""",,168.0,"""over one week on 8 NVIDIA A100 80G GPUs""

7*24 = 168 h",NVIDIA A100 SXM4 80 GB,8.0,,"This paper introduces F5-TTS, a fully non-autoregressive text-to-speech system based on flow matching with Diffusion Transformer (DiT). Without requiring complex designs such as duration model, text encoder, and phoneme alignment, the text input is simply padded with filler tokens to the same length as input speech, and then the denoising is performed for speech generation, which was originally proved feasible by E2 TTS. However, the original design of E2 TTS makes it hard to follow due to its slow convergence and low robustness. To address these issues, we first model the input with ConvNeXt to refine the text representation, making it easy to align with the speech. We further propose an inference-time Sway Sampling strategy, which significantly improves our model's performance and efficiency. This sampling strategy for flow step can be easily applied to existing flow matching based models without retraining. Our design allows faster training and achieves an inference RTF of 0.15, which is greatly improved compared to state-of-the-art diffusion-based TTS models. Trained on a public 100K hours multilingual dataset, our Fairytaler Fakes Fluent and Faithful speech with Flow matching (F5-TTS) exhibits highly natural and expressive zero-shot ability, seamless code-switching capability, and speed control efficiency. Demo samples can be found at this https URL. We release all code and checkpoints to promote community development.",,Open weights (non-commercial),,Confident,2024-12-16 17:32:45+00:00,"China,United Kingdom of Great Britain and Northern Ireland,China",,,,,,,307200.0,,
Apollo 7B,"Video,Language,Multimodal","Meta AI,Stanford University","Industry,Academia","Orr Zohar, Xiaohan Wang, Yann Dubois, Nikhil Mehta, Tong Xiao, Philippe Hansen-Estruch, Licheng Yu, Xiaofang Wang, Felix Juefei-Xu, Ning Zhang, Serena Yeung-Levy, Xide Xia",2024-12-13,Apollo: An Exploration of Video Understanding in Large Multimodal Models,https://arxiv.org/abs/2412.10360,,,,7000000000.0,"""We employed the Qwen2.5 (Yang et al., 2024) series of Large Language Models (LLMs) at varying scales to serve as the backbone for Apollo. Specifically, we utilized models with 1.5B, 3B, and 7B parameters. Following our analysis in Sec. 4, we used a SigLIP-SO400M (Zhai et al., 2023) encoder combined with an InternVideo2 (Wang et al., 2024d) video encoder""

there is a confusion with Qwen2.5 link - it points to Qwen 2 paper instead of Qwen 2.5 release notes",,,,,Unspecified unreleased,"""We curated a diverse mixture of publicly available and licensed datasets spanning text, image-text, multi-image, and video modalities. Due to licensing constraints, we omitted non-permissive sources (e.g., those reliant on ChatGPT), limiting the inclusion of some commonly used datasets. To further enhance our training
corpus, we generated multi-turn video-based conversations via an annotation tool powered by LLaMA 3.1 70B (Touvron et al., 2023).""",,"1. Alignment: In this phase, we trained on a 198K mixture of 50/50 image and video captions.
2. Vision Pretraining: We tuned the encoders using a video-only caption dataset of 396K samples.
3. Supervised Fine-tuning (SFT): We trained on a mixture of text, image, multi-image, and video data, with a total of 3.2 million samples.

3200000 videos *36%*~40 sec*~128 tokens / sec = 5898240000 video tokens during SFT

assuming about the same amount of image and text tokens. total size of the dataset was likely around 12B tokens
",,,,NVIDIA A100,128.0,,"Despite the rapid integration of video perception capabilities into Large Multimodal Models (LMMs), the underlying mechanisms driving their video understanding remain poorly understood. Consequently, many design decisions in this domain are made without proper justification or analysis. The high computational cost of training and evaluating such models, coupled with limited open research, hinders the development of video-LMMs. To address this, we present a comprehensive study that helps uncover what effectively drives video understanding in LMMs.
We begin by critically examining the primary contributors to the high computational requirements associated with video-LMM research and discover Scaling Consistency, wherein design and training decisions made on smaller models and datasets (up to a critical size) effectively transfer to larger models. Leveraging these insights, we explored many video-specific aspects of video-LMMs, including video sampling, architectures, data composition, training schedules, and more. For example, we demonstrated that fps sampling during training is vastly preferable to uniform frame sampling and which vision encoders are the best for video representation.
Guided by these findings, we introduce Apollo, a state-of-the-art family of LMMs that achieve superior performance across different model sizes. Our models can perceive hour-long videos efficiently, with Apollo-3B outperforming most existing 7B models with an impressive 55.1 on LongVideoBench. Apollo-7B is state-of-the-art compared to 7B LMMs with a 70.9 on MLVU, and 63.3 on Video-MME.",,,,Confident,2025-01-13 20:02:32+00:00,"United States of America,United States of America","Qwen2.5-7B,SigLIP",,,,,,,,
360zhinao2-o1,Language,360 Security Technology,Industry,,2024-12-13,,https://zhuanlan.zhihu.com/p/19327450022,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 12:22:01+00:00,China,,,,,,,,,
Phi-4,Language,Microsoft Research,Industry,"Marah Abdin, Jyoti Aneja, Harkirat Behl, Sébastien Bubeck, Ronen Eldan, Suriya Gunasekar, Michael Harrison, Russell J. Hewett, Mojan Javaheripi, Piero Kauffmann, James R. Lee, Yin Tat Lee, Yuanzhi Li, Weishung Liu, Caio C. T. Mendes, Anh Nguyen, Eric Price, Gustavo de Rosa, Olli Saarikivi, Adil Salim, Shital Shah, Xin Wang, Rachel Ward, Yue Wu, Dingli Yu, Cyril Zhang, Yi Zhang",2024-12-12,Phi-4 Technical Report,https://arxiv.org/abs/2412.08905,,,,14000000000.0,14B,8.4e+23,,,6ND = 6* 14*10^9 parameters * 10*10^12 tokens = 8.4e+23,Unspecified unreleased,"""The pretraining phase of phi-4 relies heavily on synthetic datasets generated through a variety of techniques. ""
""We collected a wide variety of high-quality organic data sources
for phi-4, prioritizing reasoning-dense and nuanced material (e.g., academic papers, educational forums,
and programming tutorials).""
""Our post-training data is composed of:
• Supervised Fine-Tuning (SFT) Datasets
• Direct Preference Optimization (DPO)",10000000000000.0,"""The model was pretrained for approximately 10T tokens using linear warm-up and decay schedules with peak learning rate of 0.0003, constant weight decay of 0.1, and global batch size of 5760. ""

Table 5:
Web 15% 1.3T unique tokens 1.2 epochs
Web rewrites 15% 290B unique tokens 5.2 epochs
Synthetic 40% 290B unique tokens 13.8 epochs
Code data 20% 820B unique tokens 2.4 epochs
Acquired sources 10% 580B unique tokens  1.7 epochs
",,,,,,,"We present phi-4, a 14-billion parameter language model developed with a training recipe that is centrally focused on data quality. Unlike most language models, where pre-training is based primarily on organic data sources such as web content or code, phi-4 strategically incorporates synthetic data throughout the training process. While previous models in the Phi family largely distill the capabilities of a teacher model (specifically GPT-4), phi-4 substantially surpasses its teacher model on STEM-focused QA capabilities, giving evidence that our data-generation and post-training techniques go beyond distillation. Despite minimal changes to the phi-3 architecture, phi-4 achieves strong performance relative to its size -- especially on reasoning-focused benchmarks -- due to improved data, training curriculum, and innovations in the post-training scheme.",,Open weights (non-commercial),,Confident,2025-03-05 16:24:15+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Gemini 2.0 Flash,"Language,Vision,Audio,Speech,Video,Multimodal","Google DeepMind,Google","Industry,Industry",Gemini Team,2024-12-11,Introducing Gemini 2.0: our new AI model for the agentic era,https://blog.google/technology/google-deepmind/google-gemini-ai-update-december-2024/#ceo-message,,,,,,,,,"""We used Trillium TPUs to train the new Gemini 2.0, Google’s most capable AI model yet"" according to https://cloud.google.com/blog/products/compute/trillium-tpu-is-ga",Unspecified unreleased,,,,,,,Google TPU v6e,,,"Gemini 2.0 Flash builds on the success of 1.5 Flash, our most popular model yet for developers, with enhanced performance at similarly fast response times. Notably, 2.0 Flash even outperforms 1.5 Pro on key benchmarks, at twice the speed. 2.0 Flash also comes with new capabilities. In addition to supporting multimodal inputs like images, video and audio, 2.0 Flash now supports multimodal output like natively generated images mixed with text and steerable text-to-speech (TTS) multilingual audio. It can also natively call tools like Google Search, code execution as well as third-party user-defined functions.",,API access,,Unknown,2025-03-10 13:52:51+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America",,,,,,,,,
Gemini 2.0 Pro,"Language,Multimodal,Vision,Video,Audio","Google DeepMind,Google","Industry,Industry",Gemini Team,2024-12-11,Our best model yet for coding performance and complex prompts,https://deepmind.google/technologies/gemini/pro/,,Training cost,,,,,,,,Unspecified unreleased,,,,,,,,,,"Today, we’re releasing an experimental version of Gemini 2.0 Pro that responds to that feedback. It has the strongest coding performance and ability to handle complex prompts, with better understanding and reasoning of world knowledge, than any model we’ve released so far. It comes with our largest context window at 2 million tokens, which enables it to comprehensively analyze and understand vast amounts of information, as well as the ability to call tools like Google Search and code execution.",,Hosted access (no API),,Unknown,2025-03-10 13:52:47+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America",,,,,,,,,
EXAONE 3.5 2.4B,Language,LG AI Research,Industry,"Soyoung An, Kyunghoon Bae, Eunbi Choi, Kibong Choi, Stanley Jungkyu Choi, Seokhee Hong, Junwon Hwang, Hyojin Jeon, Gerrard Jeongwon Jo, Hyunjik Jo, Jiyeon Jung, Yountae Jung, Hyosang Kim, Joonkee Kim, Seonghwan Kim, Soyeon Kim, Sunkyoung Kim, Yireun Kim, Yongil Kim, Youchul Kim, Edward Hwayoung Lee, Haeju Lee, Honglak Lee, Jinsik Lee, Kyungmin Lee, Woohyung Lim, Sangha Park, Sooyoun Park, Yongmin Park, Sihoon Yang, Heuiyeen Yeen, Hyeongu Yun",2024-12-09,EXAONE 3.5: Series of Large Language Models for Real-world Use Cases,https://arxiv.org/abs/2412.04862,,,,2400000000.0, 2.4B,9.36e+22,,,9.36 × 10^22 (Table 2),Unspecified unreleased,,6500000000000.0,6.5T tokens (Table 2),,,,,,,"This technical report introduces the EXAONE 3.5 instruction-tuned language models, developed and released by LG AI Research. The EXAONE 3.5 language models are offered in three configurations: 32B, 7.8B, and 2.4B. These models feature several standout capabilities: 1) exceptional instruction following capabilities in real-world scenarios, achieving the highest scores across seven benchmarks, 2) outstanding long-context comprehension, attaining the top performance in four benchmarks, and 3) competitive results compared to state-of-the-art open models of similar sizes across nine general benchmarks. The EXAONE 3.5 language models are open to anyone for research purposes and can be downloaded from this https URL. For commercial use, please reach out to the official contact point of LG AI Research: contact_us@lgresearch.ai.

Currently, the 2.4B model achieves the highest average performance in the edge device category on the Hugging Face Open LLM Leaderboard.
",,Open weights (non-commercial),,Confident,2025-03-11 19:15:03+00:00,Korea (Republic of),,,,,,,,,
EXAONE 3.5 32B,Language,LG AI Research,Industry,"Soyoung An, Kyunghoon Bae, Eunbi Choi, Kibong Choi, Stanley Jungkyu Choi, Seokhee Hong, Junwon Hwang, Hyojin Jeon, Gerrard Jeongwon Jo, Hyunjik Jo, Jiyeon Jung, Yountae Jung, Hyosang Kim, Joonkee Kim, Seonghwan Kim, Soyeon Kim, Sunkyoung Kim, Yireun Kim, Yongil Kim, Youchul Kim, Edward Hwayoung Lee, Haeju Lee, Honglak Lee, Jinsik Lee, Kyungmin Lee, Woohyung Lim, Sangha Park, Sooyoun Park, Yongmin Park, Sihoon Yang, Heuiyeen Yeen, Hyeongu Yun",2024-12-09,EXAONE 3.5: Series of Large Language Models for Real-world Use Cases,https://arxiv.org/abs/2412.04862,,Training cost,,32000000000.0,32B,1.25e+24,,,1.25 × 10^24 (Table 2) ,Unspecified unreleased,,6500000000000.0,6.5T tokens (Table 2),,,,,,,"This technical report introduces the EXAONE 3.5 instruction-tuned language models, developed and released by LG AI Research. The EXAONE 3.5 language models are offered in three configurations: 32B, 7.8B, and 2.4B. These models feature several standout capabilities: 1) exceptional instruction following capabilities in real-world scenarios, achieving the highest scores across seven benchmarks, 2) outstanding long-context comprehension, attaining the top performance in four benchmarks, and 3) competitive results compared to state-of-the-art open models of similar sizes across nine general benchmarks. The EXAONE 3.5 language models are open to anyone for research purposes and can be downloaded from this https URL. For commercial use, please reach out to the official contact point of LG AI Research: contact_us@lgresearch.ai.",,Open weights (non-commercial),,Confident,2025-03-11 19:14:56+00:00,Korea (Republic of),,,,,,,,,
Llama 3.3,Language,Meta AI,Industry,,2024-12-06,Meta Llama 3.3 multilingual large language model (LLM) ,https://www.llama.com/docs/model-cards-and-prompt-formats/llama3_3/,,Training cost,,70000000000.0,70B,6.8649768e+24,,7.48062e+24,"6ND = 6*70*10^9*15*10^12= 6.3e+24

7000000*3600*989500000000000*0.3= 7.48062e+24

sqrt(7.48062e+24*6.3e+24) = 6.8649768e+24",Unspecified unreleased,"""A new mix of publicly available online data.""",15000000000000.0,"""Overview: Llama 3.3 was pretrained on ~15 trillion tokens of data from publicly available sources. The fine-tuning data includes publicly available instruction datasets, as well as over 25M synthetically generated examples.

Data Freshness: The pretraining data has a cutoff of December 2023.""",,,"""Training utilized a cumulative of 39.3M GPU hours of computation on H100-80GB (TDP of 700W) type hardware, per the table below. Training time is the total GPU time required for training each model and power consumption is the peak power capacity per GPU device used, adjusted for power usage efficiency.""

Llama 3.3 70B: Training Time (GPU hours): 7M
",NVIDIA H100 SXM5 80GB,,,"The Meta Llama 3.3 multilingual large language model (LLM) is a pretrained and instruction tuned generative model in 70B (text in/text out). The Llama 3.3 instruction tuned text only model is optimized for multilingual dialogue use cases and outperforms many of the available open source and closed chat models on common industry benchmarks.

Model developer: Meta

Model Architecture: Llama 3.3 is an auto-regressive language model that uses an optimized transformer architecture. The tuned versions use supervised fine-tuning (SFT) and reinforcement learning with human feedback (RLHF) to align with human preferences for helpfulness and safety.",,Open weights (restricted use),,Confident,2025-01-29 01:09:43+00:00,United States of America,,,,,,,,,
o1,"Language,Mathematics,Multimodal",OpenAI,Industry,,2024-12-05,,https://openai.com/index/introducing-chatgpt-pro/,,"SOTA improvement,Significant use",SOTA in GPQA among others: https://openai.com/index/learning-to-reason-with-llms/ ,,,,,,,Unspecified unreleased,"""Both models were trained on a variety of publicly available datasets, including web data and open-source datasets. Key components include reasoning data and scientific literature. <..> To further enhance the capabilities of o1-preview and o1-mini, we formed partnerships to access high-value non-public datasets. These proprietary data sources include paywalled content, specialized archives, and other domain-specific datasets that provide deeper insights into industry-specific knowledge and use cases.""",,,,,,,,,"We've developed a new series of AI models designed to spend more time thinking before they respond. They can reason through complex tasks and solve harder problems than previous models in science, coding, and math.

Today, we are releasing the first of this series in ChatGPT and our API. This is a preview and we expect regular updates and improvements. Alongside this release, we’re also including evaluations for the next update, currently in development.",,API access,,Unknown,2025-02-13 16:01:00+00:00,United States of America,,,,,,,,,
NVILA 15B,"Vision,Language,Multimodal,Video","NVIDIA,Massachusetts Institute of Technology (MIT),University of California (UC) Berkeley,University of California San Diego,University of Washington,Tsinghua University","Industry,Academia,Academia,Academia,Academia,Academia","Zhijian Liu, Ligeng Zhu, Baifeng Shi, Zhuoyang Zhang, Yuming Lou, Shang Yang, Haocheng Xi, Shiyi Cao, Yuxian Gu, Dacheng Li, Xiuyu Li, Yunhao Fang, Yukang Chen, Cheng-Yu Hsieh, De-An Huang, An-Chieh Cheng, Vishwesh Nath, Jinyi Hu, Sifei Liu, Ranjay Krishna, Daguang Xu, Xiaolong Wang, Pavlo Molchanov, Jan Kautz, Hongxu Yin, Song Han, Yao Lu",2024-12-05,NVILA: Efficient Frontier Visual Language Models,https://arxiv.org/abs/2412.04468,,,,15000000000.0,15B,,,,,"Docmatrix,PDFA,COYO-700M,ShareGPT4V,MMC4 / Multimodal C4",,,,,,"""We train all models using 128 NVIDIA H100 GPUs with a global batch size of 2048 across all stages.""",NVIDIA H100 SXM5 80GB,128.0,,"Visual language models (VLMs) have made significant advances in accuracy in recent years. However, their efficiency has received much less attention. This paper introduces NVILA, a family of open VLMs designed to optimize both efficiency and accuracy. Building on top of VILA, we improve its model architecture by first scaling up the spatial and temporal resolutions, and then compressing visual tokens. This ""scale-then-compress"" approach enables NVILA to efficiently process high-resolution images and long videos. We also conduct a systematic investigation to enhance the efficiency of NVILA throughout its entire lifecycle, from training and fine-tuning to deployment. NVILA matches or surpasses the accuracy of many leading open and proprietary VLMs across a wide range of image and video benchmarks. At the same time, it reduces training costs by 4.5X, fine-tuning memory usage by 3.4X, pre-filling latency by 1.6-2.2X, and decoding latency by 1.2-2.8X. We will soon make our code and models available to facilitate reproducibility.",,Open weights (non-commercial),,Confident,2025-02-11 22:19:12+00:00,"United States of America,United States of America,United States of America,United States of America,United States of America,China",,,,,,,,,
NVILA 8B,"Vision,Language,Multimodal,Video","NVIDIA,Massachusetts Institute of Technology (MIT),University of California (UC) Berkeley,University of California San Diego,University of Washington,Tsinghua University","Industry,Academia,Academia,Academia,Academia,Academia","Zhijian Liu, Ligeng Zhu, Baifeng Shi, Zhuoyang Zhang, Yuming Lou, Shang Yang, Haocheng Xi, Shiyi Cao, Yuxian Gu, Dacheng Li, Xiuyu Li, Yunhao Fang, Yukang Chen, Cheng-Yu Hsieh, De-An Huang, An-Chieh Cheng, Vishwesh Nath, Jinyi Hu, Sifei Liu, Ranjay Krishna, Daguang Xu, Xiaolong Wang, Pavlo Molchanov, Jan Kautz, Hongxu Yin, Song Han, Yao Lu",2024-12-05,NVILA: Efficient Frontier Visual Language Models,https://arxiv.org/abs/2412.04468,,,,8000000000.0,8B,2.2794518e+21,,,"989500000000000 * 2133 * 3600 * 0.3 = 2.2794518e+21

Confidence: Likely (precision is FP8 not FP16 and utilization could be different from 0.3)","Docmatrix,PDFA,COYO-700M,ShareGPT4V,MMC4 / Multimodal C4",,47488579166.0,2.2794518e+21 FLOP / (6*8*10^9) = 47488579166.7 tokens ~47B,,16.7,"""We train all models using 128 NVIDIA H100 GPUs with a global batch size of 2048 across all stages.""

from Figure 1
NVILA 8B takes 4.5x times less gpu hours than LLAVA OneVision which is reported to take 400 GPU days (""For example, training a state-of-the-art 7B VLM [5] can take up to 400 GPU days"")

400/4.5 ~ 89 GPU days ~ 2133 GPU hours ~ 16.7 clock hours",NVIDIA H100 SXM5 80GB,128.0,,"Visual language models (VLMs) have made significant advances in accuracy in recent years. However, their efficiency has received much less attention. This paper introduces NVILA, a family of open VLMs designed to optimize both efficiency and accuracy. Building on top of VILA, we improve its model architecture by first scaling up the spatial and temporal resolutions, and then compressing visual tokens. This ""scale-then-compress"" approach enables NVILA to efficiently process high-resolution images and long videos. We also conduct a systematic investigation to enhance the efficiency of NVILA throughout its entire lifecycle, from training and fine-tuning to deployment. NVILA matches or surpasses the accuracy of many leading open and proprietary VLMs across a wide range of image and video benchmarks. At the same time, it reduces training costs by 4.5X, fine-tuning memory usage by 3.4X, pre-filling latency by 1.6-2.2X, and decoding latency by 1.2-2.8X. We will soon make our code and models available to facilitate reproducibility.",,Open weights (non-commercial),,Likely,2025-02-11 22:29:07+00:00,"United States of America,United States of America,United States of America,United States of America,United States of America,China",,,,,,,,,
Genie 2,"Games,Video",Google DeepMind,Industry,"Jack Parker-Holder, Philip Ball, Jake Bruce, Vibhavari Dasagi, Kristian Holsheimer, Christos Kaplanis, Alexandre Moufarek, Guy Scully, Jeremy Shar, Jimmy Shi, Stephen Spencer, Jessica Yung, Michael Dennis, Sultan Kenjeyev, Shangbang Long, Vlad Mnih, Harris Chan, Maxime Gazeau, Bonnie Li, Fabio Pardo, Luyu Wang, Lei Zhang, Frederic Besse, Tim Harley, Anna Mitenkova, Jane Wang, Jeff Clune, Demis Hassabis, Raia Hadsell, Adrian Bolton, Satinder Singh, Tim Rocktäschel",2024-12-04,Genie 2: A large-scale foundation world model,https://deepmind.google/discover/blog/genie-2-a-large-scale-foundation-world-model/,,,,,,,,,,,,,,,,,,,,"Today we introduce Genie 2, a foundation world model capable of generating an endless variety of action-controllable, playable 3D environments for training and evaluating embodied agents. Based on a single prompt image, it can be played by a human or AI agent using keyboard and mouse inputs.

Games play a key role in the world of artificial intelligence (AI) research. Their engaging nature, unique blend of challenges, and measurable progress make them ideal environments to safely test and advance AI capabilities.

Indeed, games have been important to Google DeepMind since our founding. From our early work with Atari games, breakthroughs such as AlphaGo and AlphaStar, to our research on generalist agents in collaboration with game developers, games have been center stage in our research. However, training more general embodied agents has been traditionally bottlenecked by the availability of sufficiently rich and diverse training environments.

As we show, Genie 2 could enable future agents to be trained and evaluated in a limitless curriculum of novel worlds. Our research also paves the way for new, creative workflows for prototyping interactive experiences.",,Unreleased,,Unknown,2024-12-04 19:46:10+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Amazon Nova Pro,"Multimodal,Language,Video",Amazon,Industry,,2024-12-03,Introducing Amazon Nova foundation models: Frontier intelligence and industry leading price performance,https://aws.amazon.com/es/blogs/aws/introducing-amazon-nova-frontier-intelligence-and-industry-leading-price-performance/,,SOTA improvement,"""It achieves state-of-the-art performance on key benchmarks including visual question answering (TextVQA) and video understanding (VATEX).""",,,6.000010000000001e+24,,1.9e+26,"""probably just below 1e25 stemming from the Llama 70B serving speed.  If Llama 70B is trained proportionally to 405B, then it's at ~ 6.6e24. Nova Pro is served at 100tk/s, while Llama 70B is served at 70tk/s on average, and 100tk/s by together.ai at FP8. So Nova Pro would be >1e25 if they roughly 2x the amount of training compared to Llama 70B which [seems unlikely]""",,,,,,,,,,,,,API access,,Speculative,2025-02-19 18:28:38+00:00,United States of America,,,,,,,,,
Luma Photon,Image generation,LumaLabs,Industry,,2024-12-03,,https://www.luma-ai.com/luma-photon/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Introducing the all-new Luma Photon text-to-image models, now available in the Luma API. Photon and Photon Flash are the most creative, personalizable, and intelligent visual models for creatives, bringing a step-function change in the cost of high-quality image generation.

The fastest and most efficient models yet. Powered by Luma’s groundbreaking research, Photon costs just $0.015 per 1080p image, and just $0.002 with Photon Flash. Achieve more for less with unparalleled speed and affordability.

",,API access,,Unknown,2024-12-09 22:14:07+00:00,United States of America,,,,,,,,,
Hunyuan Video,Video,Tencent,Industry,"Weijie Kong, Qi Tian, Zijian Zhang, Rox Min, Zuozhuo Dai, Jin Zhou, Jiangfeng Xiong, Xin Li, Bo Wu, Jianwei Zhang, Kathrina Wu, Qin Lin, Junkun Yuan, Yanxin Long, Aladdin Wang, Andong Wang, Changlin Li, Duojun Huang, Fang Yang, Hao Tan, Hongmei Wang, Jacob Song, Jiawang Bai, Jianbing Wu, Jinbao Xue, Joey Wang, Kai Wang, Mengyang Liu, Pengyu Li, Shuai Li, Weiyan Wang, Wenqing Yu, Xinchi Deng, Yang Li, Yi Chen, Yutao Cui, Yuanbo Peng, Zhentao Yu, Zhiyu He, Zhiyong Xu, Zixiang Zhou, Zunnan Xu, Yangyu Tao, Qinglin Lu, Songtao Liu, Daquan Zhou, Hongfa Wang, Yong Yang, Di Wang, Yuhong Liu, Jie Jiang, Caesar Zhong",2024-12-03,HunyuanVideo: A Systematic Framework For Large Video Generative Models,https://www.arxiv.org/abs/2412.03603,,,,13000000000.0,13b,1.4814815e+23,,,"from Figure 10:

the optimal model has 13b parameters, 5.8e+07PF (image training) + 7.0e+07PF (video training) of compute and 740B (image tokens) + 928B (video tokens) 

5.8e+07PF + 7.0e+07PF = 12.8e+07PF = 12.8*10^7*10^20/(24*3600) = 1.4814815e+23 FLOPs

6ND = 6*13*10^9*(740+928)*10^9 = 1.30104e+23
",Unspecified unreleased,"""We employ various filters for data filtering and progressively increase their thresholds to build 4 training datasets, i.e., 256p, 360p, 540p, and
720p, while the final SFT dataset is built through manual annotation.""",,,,,,,,,"Recent advancements in video generation have significantly impacted daily life for both individuals and industries. However, the leading video generation models remain closed-source, resulting in a notable performance gap between industry capabilities and those available to the public. In this report, we introduce HunyuanVideo, an innovative open-source video foundation model that demonstrates performance in video generation comparable to, or even surpassing, that of leading closed-source models. HunyuanVideo encompasses a comprehensive framework that integrates several key elements, including data curation, advanced architectural design, progressive model scaling and training, and an efficient infrastructure tailored for large-scale model training and inference. As a result, we successfully trained a video generative model with over 13 billion parameters, making it the largest among all open-source models. We conducted extensive experiments and implemented a series of targeted designs to ensure high visual quality, motion dynamics, text-video alignment, and advanced filming techniques. According to evaluations by professionals, HunyuanVideo outperforms previous state-of-the-art models, including Runway Gen-3, Luma 1.6, and three top-performing Chinese video generative models. By releasing the code for the foundation model and its applications, we aim to bridge the gap between closed-source and open-source communities. This initiative will empower individuals within the community to experiment with their ideas, fostering a more dynamic and vibrant video generation ecosystem. The code is publicly available at this https URL. https://github.com/Tencent/HunyuanVideo.",,Open weights (restricted use),,Confident,2024-12-16 15:52:10+00:00,China,,,,,,,,,
Intelligent Go-Explore (IGE),Games,"University of British Columbia (UBC),Vector Institute,CIFAR AI Research","Academia,Academia,Research collective","Cong Lu, Shengran Hu, Jeff Clune",2024-12-03,Intelligent Go-Explore: Standing on the Shoulders of Giant Foundation Models,https://arxiv.org/abs/2405.15143,,,,,"We used GPT-4-Turbo [API] for Game of 24 and GPT-4o for BabyAI and TextWorld. This was purely done to select the version of GPT-4 that was available and the cheapest at the time of running the
experiments. The version of GPT-4 is consistent per environment. ",,,,,,,,,,,,,,,"Go-Explore is a powerful family of algorithms designed to solve hard-exploration problems built on the principle of archiving discovered states, and iteratively returning to and exploring from the most promising states. This approach has led to superhuman performance across a wide variety of challenging problems including Atari games and robotic control, but requires manually designing heuristics to guide exploration (i.e., determine which states to save and explore from, and what actions to consider next), which is time-consuming and infeasible in general. To resolve this, we propose Intelligent Go-Explore (IGE) which greatly extends the scope of the original Go-Explore by replacing these handcrafted heuristics with the intelligence and internalized human notions of interestingness captured by giant pretrained foundation models (FMs). This provides IGE with a human-like ability to instinctively identify how interesting or promising any new state is (e.g., discovering new objects, locations, or behaviors), even in complex environments where heuristics are hard to define. Moreover, IGE offers the exciting opportunity to recognize and capitalize on serendipitous discoveries-states encountered during exploration that are valuable in terms of exploration, yet where what makes them interesting was not anticipated by the human user. We evaluate our algorithm on a diverse range of language and vision-based tasks that require search and exploration. Across these tasks, IGE strongly exceeds classic reinforcement learning and graph search baselines, and also succeeds where prior state-of-the-art FM agents like Reflexion completely fail. Overall, Intelligent Go-Explore combines the tremendous strengths of FMs and the powerful Go-Explore algorithm, opening up a new frontier of research into creating more generally capable agents with impressive exploration capabilities.",,Open weights (unrestricted),,Unknown,2025-01-06 16:45:38+00:00,"Canada,Canada,Canada",GPT-4 Turbo,,,,,,,,
Hailuo I2V-01-Live,"Video,Vision","MiniMax,Hailuo AI","Industry,Industry",,2024-12-03,Introducing Hailuo I2V-01-Live: Transform Static Art into Dynamic Masterpieces,https://hailuoai.video/discover/329354592735850496,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Introducing Hailuo I2V-01-Live: Transform Static Art into Dynamic Masterpieces

Live is our latest addition to the I2V family, designed to revolutionize how 2D illustrations come to life. With enhanced smoothness and vivid motion, this model lets your characters move, speak, and shine like never before.

Optimized for stability and subtle expression, Hailuo I2V-01-Live supports a wide range of artistic styles, empowering you to expand your creative expression and bring your art to life with unparalleled fluidity and finesse.",,API access,,Unknown,2025-01-06 20:00:16+00:00,"China,Singapore",,,,,,,,,
RNAformer,Biology,University of Freiburg,Academia,"Jörg K.H. Franke, Frederic Runge, Ryan Köksal,  Rolf Backofen, Frank Hutter",2024-12-01,RNAformer: A Simple Yet Effective Deep Learning Model for RNA Secondary Structure Prediction,https://www.biorxiv.org/content/10.1101/2024.02.12.579881v1.abstract,6.0,,,,,,,,,,,557218.9999999999,"Total Data Points = 410,408 + 38,184 + 64,535 + 44,091 = 557,218

Components:
- Biophysical Model: 410,408
- bpRNA: 38,184
- Intra-family: 64,535
- Homology: 44,091

Final estimate: 557,218 samples",,,,,,,"Traditional RNA secondary structure prediction methods, based on dynamic programming, often fall short in accuracy. Recent advances in deep learning have aimed to address this, but may not adequately learn the biophysical model of RNA folding. Many deep learning approaches are also too complex, incorporating multi-model systems, ensemble strategies, or requiring external data like multiple sequence alignments. In this study, we demonstrate that a single deep learning model, relying solely on RNA sequence input, can effectively learn a biophysical model and outperform existing deep learning methods in standard benchmarks, as well as achieve comparable results to methods that utilize multi-sequence alignments. We dub this model RNAformer and achieve these benefits by a two-dimensional latent space, axial attention, and recycling in the latent space. Further, we found that our model performance improves when we scale it up. We also demonstrate how to refine a pre-trained RNAformer with fine-tuning techniques, which are particularly efficient when applied to a limited amount of high-quality data. A further aspect of our work is addressing the challenges in dataset curation in deep learning, especially regarding data homology. We tackle this through an advanced data processing pipeline that allows for training and evaluation of our model across various levels of sequence similarity. Our models and datasets are openly accessible, offering a simplified yet effective tool for RNA secondary structure prediction.",,,,Unverified,2025-01-30 05:04:26+00:00,Germany,,,,,,,,,
INTELLECT-1,Language,"Prime Intellect,Hugging Face,Arcee AI","Industry,Industry,Industry","Sami Jaghouar, Jack Min Ong, Manveer Basra, Fares Obeid, Jannik Straube, Michael Keiblinger, Elie Bakouch, Lucas Atkins, Maziyar Panahi, Charles Goddard, Max Ryabinin, Johannes Hagemann",2024-11-29,INTELLECT-1 Technical Report,https://github.com/PrimeIntellect-ai/prime/blob/main/INTELLECT_1_Technical_Report.pdf,,,Trained with respectable MFU despite globally distributed compute,10000000000.0,,6.000001e+22,,,10B parameters trained on 1T tokens: 6 * 10B * 1T = 6e22,,"Table 1. ""The total number of tokens in our data mix, processed with the Llama-3 tokenizer, consists of over 6 trillion tokens"" however they only train the model with 1T.",1000000000000.0,"Table 1. ""The total number of tokens in our data mix, processed with the Llama-3 tokenizer, consists of over 6 trillion tokens"" however they only train the model with 1T.",,1008.0,"""The pre-training of INTELLECT-1 for 1 trillion tokens took place over 42 days, from October 10, 2024, to November 22, 2024""",,,Self-supervised learning,,,,,Confident,2024-12-09 20:49:52+00:00,"United States of America,Multinational,United States of America,United States of America",,,,,,,,,
360gpt2-pro,"Language,Multimodal",360 Security Technology,Industry,360 Zhinao,2024-11-29,,,,,,,"""Hundreds of billions of parameters""",,,,,,,,,,,,,,,,,,,Unverified,2025-01-30 02:52:04+00:00,China,,,,,,,,,
abab7,Language,MiniMax,Industry,,2024-11-29,,https://www.minimaxi.com/en/news/abab65-series,,,,,,,,,,Unspecified unreleased,,,,,,,,,,,,API access,,Unverified,2025-01-30 02:56:54+00:00,China,,,,,,,,,
Ovis1.6-Gemma2-27B,,,,,2024-11-26,Ovis1.6-Gemma2-27B,https://huggingface.co/AIDC-AI/Ovis1.6-Gemma2-27B,,,,28900000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Fugatto 1,"Multimodal,Language,Audio",NVIDIA,Industry,"Rafael Valle, Rohan Badlani, Zhifeng Kong, Sang-gil Lee, Arushi Goel, Sungwon Kim,
Joao Felipe Santos, Shuqi Dai, Siddharth Gururani, Aya AlJa'fari, Alex Liu, Kevin Shih, Wei Ping, Bryan Catanzaro
",2024-11-25,"Fugatto 1 - Foundational Generative Audio Transformer Opus 1
",https://research.nvidia.com/publication/2024-11_fugatto-1-foundational-generative-audio-transformer-opus-1,,SOTA improvement,"""We showcase Fugatto’s performance on traditional TTA benchmarks that
measure a model’s ability to synthesize general sounds (AudioCAPS) and music (MusicCAPS) that follow instructions provided in text. We use the metrics (FD, FAD, and IS) and data splits (train, test) used in Kong et al. (2024b). Results in Table 3a and Table 3b shows that our model achieves strictly better scores than existing generalist models, while occasionally outperforming expert models""",2500000000.0,,,,,,,,,"""our dataset is comprised of at least 50,000 hours of audio""",,,,,,Supervised,"Fugatto is a versatile audio synthesis and transformation model capable of following free-form text instructions with optional audio inputs. While large language models (LLMs) trained with text on a simple next-token prediction objective can learn to infer instructions directly from the data, models trained solely on audio data lack this capacity. This is because audio data does not inherently contain the instructions that were used to generate it. To overcome this challenge, we introduce a specialized dataset generation approach optimized for producing a wide range of audio generation and transformation tasks, ensuring the data reveals meaningful relationships between audio and language. Another challenge lies in achieving compositional abilities – such as combining, interpolating between, or negating instructions – using data alone. To address it, we propose ComposableART, an inference-time technique that extends classifier-free guidance to compositional guidance. It enables the seamless and flexible composition of instructions, leading to highly customizable audio outputs outside the training distribution. Our evaluations across a diverse set of tasks demonstrate that Fugatto performs competitively with specialized models, while ComposableART enhances its sonic palette and control over synthesis. Most notably, we highlight our framework’s ability to synthesize emergent sounds – sonic phenomena that transcend conventional audio generation – unlocking new creative possibilities. Demo Website.",,Unreleased,,Unverified,2024-12-01 13:53:37+00:00,United States of America,,,,,,,,,
ConfRank,Biology,"University of Bonn,Institute for Numerical Simulation,Fraunhofer Institute for Algorithms and Scientific Computing",Academia,"Christian Hölzer, Rick Oerderm, Stefan Grimme, Jan Hamaekers,",2024-11-24,ConfRank: Improving GFN-FF Conformer Ranking with Pairwise Training,https://pubs.acs.org/doi/abs/10.1021/acs.jcim.4c01524,,,,,,,,,,,,1400001.0000000007,"7,349 molecular ensembles × 20 conformers = 146,980 conformers
Pairs per ensemble = (20 × 19) ÷ 2 = 190 pairs
Total pairs = 7,349 ensembles × 190 pairs = 1,396,310 datapoints",,,,,,,"Conformer ranking is a crucial task for drug discovery, with methods for generating conformers often based on molecular (meta)dynamics or sophisticated sampling techniques. These methods are constrained by the underlying force computation regarding runtime and energy ranking accuracy, limiting their effectiveness for large-scale screening applications. To address these ranking limitations, we introduce ConfRank, a machine learning-based approach that enhances conformer ranking using pairwise training. We demonstrate its performance using GFN-FF-generated conformer ensembles, leveraging the DimeNet++ architecture trained on pairs of 159 760 uncharged organic compounds from the GEOM data set with r2SCAN-3c reference level. Instead of predicting only on single molecules, this approach captures relative energy differences between conformers, leading to a significant improvement of the overall conformational ranking, outperforming GFN-FF and GFN2-xTB. Thereby, the pairwise RMSD of the relative energy difference of two conformers can be reduced from 5.65 to 0.71 kcal mol–1 on the test data set, allowing to correctly identify up to 81% of all lowest lying conformers correctly (GFN-FF: 10%, GFN2-xTB: 47%). The ConfRank approach is cost-effective, allowing for scalable deployment on both CPU and GPU, achieving runtime accelerations by up to 2 orders of magnitude compared to GFN2-xTB. Out-of-sample investigations on CREST-generated conformer ensembles from the QM9 data set and conformers taken from an extended GMTKN55 data set show promising results for the robustness of this approach. Thereby, ranking correlation coefficient such as Spearman can be improved to 0.90 (GFN-FF: 0.39, GFN2-xTB: 0.84) reducing the probability of an incorrect sign flip in pairwise energy comparison from 32 to 7%. On the extended GMTKN55 subsets the pairwise MAD (RMSD) could be reduced on almost all subsets by up to 62% (58%) with an average improvement of 30% (29%). Moreover, an exemplary case study on vancomycin shows similar performance, indicating applicability to larger (bio)molecular structures. Furthermore, we motivate the usage of the pairwise training approach from a theoretical perspective, highlighting that while pairwise training can lead to a decline in single sample prediction of absolute energies for ML models, it significantly enhances conformer ranking performance. The data and models used in this study are available at https://github.com/grimme-lab/confrank.",,,,Unverified,2025-01-30 05:05:06+00:00,"Germany,Germany,Germany",,,,,,,,,
 Tulu 3 (Tülu 3) 70B,Language,"Allen Institute for AI,University of Washington","Research collective,Academia","Nathan Lambert, Jacob Morrison, Valentina Pyatkin, Shengyi Huang, Hamish Ivison, Faeze Brahman, Lester James V. Miranda, Alisa Liu, Nouha Dziri, Xinxi Lyu, Yuling Gu, Saumya Malik, Victoria Graf, Jena D. Hwang, Jiangjiang Yang, Ronan Le Bras, Oyvind Tafjord, Chris Wilhelm, Luca Soldaini, Noah A. Smith, Yizhong Wang, Pradeep Dasigi, Hannaneh Hajishirzi",2024-11-21,TÜLU 3: Pushing Frontiers in Open Language Model Post-Training,https://allenai.org/papers/tulu-3-report.pdf,,,,70000000000.0,70B,,,,,Tulu 3,"Training Approach:
SFT: Supervised finetuning
DPO: Preference tuning using curated datasets and new algorithms
RLVR: Reinforcement learning with verifiable rewards to target skills like math and reasoning.

SFT:
""To train our TÜLU 3 models, we used between 4 and 16 8xH100 nodes with high speed interconnect. We used an effective batch size of 128 and a maximum sequence length of 4,096 tokens. We trained for two epochs..""

DPO:
Final DPO Training Hyperparameters
Batch Size (effective) 128
Max Token Length 2,048
Number of Epochs 1
1400 steps",,,,,,NVIDIA H100 SXM5 80GB,80.0,,"Language model post-training is applied to refine behaviors and unlock new skills across a wide range of recent language models, but open recipes for applying these techniques lag behind proprietary ones. The underlying training data and recipes for post-training are simultaneously the most important pieces of the puzzle and the portion with the least transparency. To bridge this gap, we introduce TÜLU 3, a family of fully-open state-of-the-art post-trained models, alongside its data, code, and training recipes, serving as a comprehensive guide for modern post-training techniques. TÜLU 3, which builds on Llama 3.1 base models, achieves results surpassing the instruct versions of Llama 3.1, Qwen 2.5, Mistral, and even closed models such as GPT-4o-mini and Claude 3.5-Haiku. The training algorithms for our models include
supervised finetuning (SFT), Direct Preference Optimization (DPO), and a novel method we call Reinforcement Learning with Verifiable Rewards (RLVR). With TÜLU 3, we introduce a multi-task evaluation scheme for post-training recipes with development and unseen evaluations, standard benchmark implementations, and substantial decontamination of existing open datasets
on said benchmarks. We conclude with analysis and discussion of training methods that did not reliably improve performance.
In addition to the TÜLU 3 model weights and demo, we release the complete recipe – including datasets for diverse core skills, a robust toolkit for data curation and evaluation, the training code and infrastructure, and, most importantly, a detailed report for reproducing and further adapting the TÜLU 3 approach to more domains.",,Open weights (restricted use),,Confident,2025-01-22 16:29:09+00:00,"United States of America,United States of America",Llama 3.1-70B,,,,,,,,
Gauss2,Multimodal,Samsung,Industry,Samsung,2024-11-21,"Samsung Electronics Hosts Samsung Developer Conference Korea 2024, Unveils Its Improved Gen AI Model",https://news.samsung.com/global/samsung-electronics-hosts-samsung-developer-conference-korea-2024-unveils-its-improved-gen-ai-model,,,"Currently used internally, rumored to be integrated into Samsung phones soon",,,,,,,,,,,,,,,,,,,Unreleased,,Unverified,2024-12-05 13:51:49+00:00,Korea (Republic of),,,,,,,,,
DeepSeek-R1-Lite-Preview,Language,DeepSeek,Industry,,2024-11-20,,https://x.com/deepseek_ai/status/1859200141355536422,,,,,,,,,,,,,,,,,,,,,,Hosted access (no API),,Unknown,2024-12-05 13:31:40+00:00,China,,,,,,,,,
Suno v4,Audio,Suno,Industry,Team Suno,2024-11-19,Introducing v4,https://suno.com/blog/v4,,Significant use,https://www.semrush.com/website/suno.ai/overview/,,,,,,,,,,,,,,,,,"Today, we’re excited to introduce v4—the next step toward enabling you to make music at the speed of your ideas. When we launched v3 earlier this year, it opened up new possibilities for music creation. Post v3 launch, we’ve refined what worked and added more where it mattered most. The result is v4—a major update that takes music creation to the next level. v4 delivers cleaner audio, sharper lyrics, and more dynamic song structures.",,API access,,Unknown,2024-12-27 18:05:16+00:00,United States of America,,,,,,,,,
Pixtral Large,Multimodal,Mistral AI,Industry,Mistral AI Team,2024-11-18,Pixtral Large,https://mistral.ai/news/pixtral-large/,,"Significant use,SOTA improvement",Number of downloads not visible,124000000000.0,"123B multimodal decoder, 1B parameter vision encoder",,,,,,,,,,,,,,Supervised,"Today we announce Pixtral Large, a 124B open-weights multimodal model built on top of Mistral Large 2. Pixtral Large is the second model in our multimodal family and demonstrates frontier-level image understanding. Particularly, the model is able to understand documents, charts and natural images, while maintaining the leading text-only understanding of Mistral Large 2.",,Open weights (restricted use),,Confident,2024-12-05 13:42:30+00:00,France,Mistral Large 2,,,,,,,,
Gemini-Exp-1114,Language,Google DeepMind,Industry,Gemini Team,2024-11-15,Google drops new Gemini model and it goes straight to the top of the LLM leaderboard,https://www.tomsguide.com/ai/google-gemini/google-drops-new-gemini-model-and-it-goes-straight-to-the-top-of-the-llm-leaderboard,,"Training cost,Significant use",,,,,,,,,,,,,,,,,,,,Hosted access (no API),,Unverified,2025-03-10 13:52:51+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
FaXin,,,,,2024-11-15,"最高法正式发布“法信法律基座大模型”
",https://www.stdaily.com/web/gdxw/2024-11/15/content_259094.html,,,,100000000000.0,,,,,,,,3670000000000.0,,,,,,,,,,,,Unverified,2025-01-07 21:54:02+00:00,,,,,,,,,,
LLaVA-CoT,,,,"Guowei Xu, Peng Jin, Hao Li, Yibing Song, Lichao Sun, Li Yuan",2024-11-15,"LLaVA-CoT: Let Vision Language Models Reason Step-by-Step
",https://arxiv.org/abs/2411.10440,1.0,,,,,,,,8 H100 GPUs,,,,,3.0,,,NVIDIA H100 SXM5 80GB,8.0,,"In this work, we introduce LLaVA-CoT, a novel VLM designed to conduct autonomous multistage reasoning. Unlike chain-of-thought prompting, LLaVA-CoT independently engages in sequential stages of summarization, visual interpretation, logical reasoning, and conclusion generation. This structured approach enables LLaVA-CoT to achieve marked improvements in precision on reasoning-intensive tasks. ",,,,Unverified,2025-01-03 22:35:19+00:00,,,,,,,,,,
bailing-pro-1120,Multimodal,Ant Group,Industry,Ant Group,2024-11-15,,,,,,,,,,,"Trained on ""trillions of tokens"".",Unspecified unreleased,,,,,,,,,,,,Unreleased,,Unverified,2025-01-30 02:49:16+00:00,China,,,,,,,,,
Athene-V2,Language,Nexusflow,Industry,,2024-11-14,Introducing Athene-V2: Advancing Beyond the Limits of Scaling with Targeted Post-training,https://nexusflow.ai/blogs/athene-v2,,,,72000000000.0,72B,,,,,Unspecified unreleased,,,,,,,,,,"We’re thrilled to announce Athene-V2, our latest 72B model suite. Fine-tuned from Qwen 2.5 72B, Athene-V2 competes with GPT-4o across key capabilities, powered by a meticulously designed data and RLHF pipeline. As the industry recognizes the slow-down of scaling law—where increasing model size alone no longer delivers universal capability improvements—there’s a growing need for specialized customization to enhance specific capabilities. Our post-training process illustrates this shift, demonstrating how our data and tuning solutions allow us to finely optimize for distinct skills and use cases.

Here’s a look at the unique specializations that position Athene-V2 models along the Pareto frontier of LLM post-training:

Athene-V2-Chat-72B: A state-of-the-art chat model, matching GPT-4o across multiple benchmarks. It outperforms GPT-4o in chat helpfulness (Arena-Hard), excels in code completion (ranking #2 on bigcode-bench-hard), mathematics (MATH), and handles long log extraction with higher precision (our internal benchmark).
Athene-V2-Agent-72B: Striking a balance between chat and agent capabilities, this model offers concise, directive chat responses, surpassing GPT-4o in our latest Nexus-V2 function calling benchmarks that focus on hard enterprise-level function calling use cases.
",,Open weights (non-commercial),,Confident,2025-02-07 01:39:26+00:00,United States of America,Qwen2.5-72B,,,,,,,,
Vidu 1.5,Video,ShengShu,Industry,,2024-11-13,"生数科技发布视频生成模型 Vidu1.5版本，解决一致性难题
",https://www.163.com/dy/article/JGSQ7OOF05566WT8.html,,,,,,,,,,,,,,,,,,,,,,API access,,Unverified,2025-03-10 16:38:20+00:00,China,,,,,,,,,
Qwen2.5-Coder (32B),Language,Alibaba,Industry,"Binyuan Hui, Jian Yang, Zeyu Cui, Jiaxi Yang, Dayiheng Liu, Lei Zhang, Tianyu Liu, Jiajun Zhang, Bowen Yu, Keming Lu, Kai Dang, Yang Fan, Yichang Zhang, An Yang, Rui Men, Fei Huang, Bo Zheng, Yibo Miao, Shanghaoran Quan, Yunlong Feng, Xingzhang Ren, Xuancheng Ren, Jingren Zhou, Junyang Lin",2024-11-12,Qwen2.5-Coder Technical Report,https://arxiv.org/abs/2409.12186,,,,32500000000.0,32.5B (31B - non emb),1.0725e+24,,,"Assuming 1 epoch

6ND = 6*32.5 parameters *10^9*5.5*10^12 tokens = 1.0725e+24","GitHub,Common Crawl,Unspecified unreleased","""We collected public repositories from GitHub created before February 2024""

""We curated a large-scale and high-quality text-code mixed
dataset from Common Crawl, which includes code-related documentation, tutorials, blogs,
and more""

""We used CodeQwen1.5, the predecessor of Qwen2.5-Coder, to generate large-scale synthetic datasets.""",5500000000000.0,"""As a code-specific model, Qwen2.5-Coder is built upon the Qwen2.5 architecture and continues pretrained on a vast corpus of over 5.5 trillion tokens.""",1.0,,,,,,"In this report, we introduce the Qwen2.5-Coder series, a significant upgrade from its predecessor, CodeQwen1.5. This series includes six models: Qwen2.5-Coder-(0.5B/1.5B/3B/7B/14B/32B). As a code-specific model, Qwen2.5-Coder is built upon the Qwen2.5 architecture and continues pretrained on a vast corpus of over 5.5 trillion tokens. Through meticulous data cleaning, scalable synthetic data generation, and balanced data mixing, Qwen2.5-Coder demonstrates impressive code generation capabilities while retaining general and math skills. These models have been evaluated on a wide range of code-related tasks, achieving state-of-the-art (SOTA) performance across more than 10 benchmarks, including code generation, completion, reasoning, and repair, consistently outperforming larger models of the same model size. We believe that the release of the Qwen2.5-Coder series will advance research in code intelligence and, with its permissive licensing, support wider adoption by developers in real-world applications.",,Open weights (unrestricted),,Confident,2025-03-06 20:18:59+00:00,China,,,,,"The paper does not mention any hardware, GPUs or any information regarding the hardware used.",,,,
MassiveFold,Biology,"Université de Lille,Linköping University,Universite de Technologie de Compiègne – CNRS","Academia,Academia,Academia","Nessim Raouraoua, Claudio Mirabello, Thibaut Véry, Christophe Blanchet, Bjorn Wallner, Marc Lensink, Guillaume Brysbaert",2024-11-11,MassiveFold: unveiling AlphaFold’s hidden potential with optimized and parallelized massive sampling,https://www.researchsquare.com/article/rs-4319486/v1,,,,,,,,,,,,,,,,,,,,"Massive sampling in AlphaFold enables access to increased structural diversity; in combination with its powerful confidence ranking, this unlocks elevated modeling capabilities for monomeric structures and foremost for protein assemblies. However, the approach struggles with GPU cost and data storage. MassiveFold removes these restraints as an optimized and customizable version of AlphaFold that runs predictions in parallel, offering the full benefit of enhanced sampling for protein structure and assembly modeling.",,,,Unverified,2024-11-23 21:22:33+00:00,"France,Sweden,France",,,,,,,,,
SeedEdit,Vision,ByteDance,Industry,"Yichun Shi, Peng Wang, Weilin Huang",2024-11-11,SeedEdit: Align Image Re-Generation to Image Editing,"https://lf3-static.bytednsdoc.com/obj/eden-cn/lapzild-tss/ljhwZthlaukjlkulzlp/SeedEdit.pdf
https://team.doubao.com/en/special/seededit",,SOTA improvement,Unclear how many users,,,,,,,Unspecified unreleased,,,,,,,,,Supervised,"We introduce SeedEdit, a diffusion model that is able to revise a given image with any text prompts. In our perspective, the key to such a task is to obtain an optimal balance between maintaining the original image, i.e. image reconstruction, and generating a new image, i.e. image re-generation. To this end, we start from a weak generator (text-to-image model) that creates diverse pairs between such two directions and gradually align it into a strong image editor that well balances between the two tasks. SeedEdit can achieve more diverse and stable editing capability over prior image editing methods, enabling sequential revision over images generated by diffusion models. Our website is
https://team.doubao.com/seededit.
",,API access,,Unverified,2025-02-03 16:07:49+00:00,China,,,,,,,,,
stFormer,Biology,"Shanghai Jiao Tong University,Chinese Academy of Sciences","Academia,Academia","Shenghao Cao, Ye Yuan",2024-11-09,"stFormer: a foundation model for spatial transcriptomics
",https://www.biorxiv.org/content/10.1101/2024.09.27.615337v5.abstract,,,,,,,,,,,,11000000001.000051,"
Minimal datapoint: gene expression value in a cell
Number of genes per cell: 19,264
Number of cells: 580,000
Total datapoints = 580,000 × 19,264 = 11,173,120,000 ≈ 1.1 × 10¹⁰",,,,,,,"Recent foundation models for single-cell transcriptomics data generate informative, context-aware gene representations. The spatially resolved transcriptomics data offer extra positional insights, yet corresponding gene representation methods that integrate both intracellular and spatial context are still lacking. Here, we introduce a gene representation framework tailored for spatial transcriptomics data. It incorporates ligand genes within the spatial niche into the transformer encoder of single-cell transcriptomics. We further propose a biased cross-attention method to enable the framework to do learning with single-cell resolution on low-resolution, whole-transcriptome Visium data. We implemented our framework on a hybrid Visium dataset derived from two human tissue types with distinct developmental and disease states, and tested on various downstream applications. Compared with the latest foundation model for single-cell transcriptomics, our spatially informed gene representations could identify cell groups and gene functions more accurately, and could predict the perturbation effects of cell-cell ligand-receptor interactions on downstream targets.",,,,Unverified,2025-01-30 05:04:41+00:00,"China,China",,,,,,,,,
TeleChat2-7B,Language,China Telecom,Industry,,2024-11-08,TeleChat2,https://github.com/Tele-AI/TeleChat2,,,,7000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 12:32:54+00:00,China,,,,,,,,,
TeleChat2-3B,Language,China Telecom,Industry,,2024-11-08,TeleChat2,https://github.com/Tele-AI/TeleChat2,,,,3000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 12:33:01+00:00,China,,,,,,,,,
Hunyuan-Large,Language,Tencent,Industry,"Xingwu Sun, Yanfeng Chen, Yiqing Huang, Ruobing Xie, Jiaqi Zhu, Kai Zhang, Shuaipeng Li, Zhen Yang, Jonny Han, Xiaobo Shu, Jiahao Bu, Zhongzhi Chen, Xuemeng Huang, Fengzong Lian,
Saiyong Yang, Jianfeng Yan, Yuyuan Zeng, Xiaoqin Ren, Chao Yu, Lulu Wu, Yue Mao, Jun Xia, Tao Yang, Suncong Zheng, Kan Wu, Dian Jiao, Jinbao Xue, Xipeng Zhang, Decheng Wu, Kai Liu, Dengpeng Wu, Guanghui Xu, Shaohua Chen, Shuang Chen, Xiao Feng, Yigeng Hong, Junqiang Zheng, Chengcheng Xu, Zongwei Li, Xiong Kuang, Jianglu Hu, Yiqi Chen, Yuchi Deng, Guiyang Li, Ao Liu, Chenchen Zhang, Shihui Hu, Zilong Zhao, Zifan Wu, Yao Ding, Weichao Wang, Han Liu, Roberts Wang, Hao Fei, Peijie Yu, Ze Zhao, Xun Cao, Hai Wang, Fusheng Xiang, Mengyuan Huang, Zhiyuan Xiong, Bin Hu, Xuebin Hou, Lei Jiang, Jianqiang Ma, Jiajia Wu, Yaping Deng, Yi Shen, Qian Wang, Weijie Liu, Jie Liu, Meng Chen, Liang Dong, Weiwen Jia, Hu Chen, Feifei Liu, Rui Yuan, Huilin Xu, Zhenxiang Yan, Tengfei Cao, Zhichao Hu, Xinhua Feng, Dong Du, Tinghao Yu, Yangyu Tao, Feng Zhang, Jianchen Zhu, Chengzhong Xu, Xirui Li, Chong Zha, Wen Ouyang, Yinben Xia, Xiang Li, Zekun He, Rongpeng Chen, Jiawei Song, Ruibin Chen, Fan Jiang, Chongqing Zhao, Bo Wang, Hao Gong, Rong Gan, Winston Hu, Zhanhui Kang, Yong Yang, Yuhong Liu, Di Wang, and Jie Jiang.
",2024-11-06,Hunyuan-Large: An Open-Source MoE Model with 52 Billion Activated Parameters by Tencent,https://arxiv.org/abs/2411.02265,,Training cost,,389000000000.0,"""a total of 389 billion parameters and 52 billion activation parameters""",3.49237e+24,,3.49237e+24,"52B activated parameters

6ND = 6*52*10^9*7*10^12 = 2.184 × 10^24

They also suggest more precise formula to calculate MoE compute budget:

9.59ND + 2.3 × 10^8D = 9.59*52*10^9*7*10^12 + 2.3 × 10^8 ×  7*10^12 = 3.49237×10^24

which seems closer to projected compute on Figure 3",Unspecified unreleased,,7000000000000.0,"""# Trained Tokens 7T""  Table 1",,,,,,,"In this paper, we introduce Hunyuan-Large, which is currently the largest open-source Transformer-based mixture of experts model, with a total of 389 billion parameters and 52 billion activation parameters, capable of handling up to 256K tokens. We conduct a thorough evaluation of Hunyuan-Large's superior performance across various benchmarks including language understanding and generation, logical reasoning, mathematical problem-solving, coding, long-context, and aggregated tasks, where it outperforms LLama3.1-70B and exhibits comparable performance when compared to the significantly larger LLama3.1-405B model. Key practice of Hunyuan-Large include large-scale synthetic data that is orders larger than in previous literature, a mixed expert routing strategy, a key-value cache compression technique, and an expert-specific learning rate strategy. Additionally, we also investigate the scaling laws and learning rate schedule of mixture of experts models, providing valuable insights and guidances for future model development and optimization. The code and checkpoints of Hunyuan-Large are released to facilitate future innovations and applications.",,Open weights (restricted use),,Confident,2025-02-19 18:28:49+00:00,China,,,,,"The paper does not mention any hardware, GPUs or any information regarding the hardware used.",,,,
FLUX1.1 [pro] Ultra,Image generation,Black Forest Labs,Industry,,2024-11-06,"Our best model for photo-realistic images at 2k resolution, with a ""raw"" option for extra realism.",https://blackforestlabs.ai/flux-1-1-ultra/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"FLUX1.1 [pro] – ultra mode: This option enables image generation at four times the resolution of standard FLUX1.1 [pro], without sacrificing prompt adherence. Unlike many high-resolution models that experience significant slowdowns at higher resolutions, our performance benchmarks show sustained fast generation times—over 2.5x faster than comparable high-resolution offerings. This model is available at a competitive price of $0.06 per image.",,API access,,Unknown,2024-12-16 19:40:39+00:00,Germany,,,,,,,,,
FLUX1.1 [pro] Raw,Image generation,Black Forest Labs,Industry,,2024-11-06,Our best and most efficient model for large-scale image generation workloads.,https://blackforestlabs.ai/flux-1-1-ultra/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"FLUX1.1 [pro] – raw mode: For creators seeking authenticity, our new raw mode captures the genuine feel of candid photography. Toggle this feature to generate images with a less synthetic, more natural aesthetic. Compared to other text-to-image models, raw mode significantly increases diversity in human subjects and enhances the realism of nature photography",,API access,,Unknown,2024-12-16 19:41:23+00:00,Germany,,,,,,,,,
Llama-3.1-Minitron-4B,Language,NVIDIA,Industry,"Saurav Muralidharan, Sharath Turuvekere Sreenivas, Raviraj Joshi, Marcin Chochowski, Mostofa Patwary, Mohammad Shoeybi, Bryan Catanzaro, Jan Kautz, Pavlo Molchanov",2024-11-04,Compact Language Models via Pruning and Knowledge Distillation,https://arxiv.org/abs/2407.14679,,,,4000000000.0,"4b

Llama-3.1-Minitron-4B-Width-Base uses a model embedding size of 3072, 32 attention heads, MLP intermediate dimension of 9216, with 32 layers in total. Additionally, it uses Grouped-Query Attention (GQA) and Rotary Position Embeddings (RoPE).

Architecture Type: Transformer Decoder (Auto-Regressive Language Model)

Network Architecture: Llama-3.1",,,,,Unspecified unreleased,"""Properties: The training corpus for Llama-3.1-Minitron-4B-Width-Base consists of English and multilingual text, as well as code. Our sources cover a variety of document types such as: webpages, dialogue, articles, and other written materials. The corpus spans domains including legal, math, science, finance, and more. In our continued training set, we introduce a small portion of question-answering, and alignment style data to improve model performance.

Data Freshness: The pretraining data has a cutoff of June 2023.""",,,,,"""Llama-3.1-Minitron-4B-Width-Base was trained between July 29, 2024 and Aug 3, 2024.""
5 days
",NVIDIA A100 SXM4 80 GB,8.0,,"Large language models (LLMs) targeting different deployment scales and sizes are currently produced by training each variant from scratch; this is extremely compute-intensive. In this paper, we investigate if pruning an existing LLM and then re-training it with a fraction (<3%) of the original training data can be a suitable alternative to repeated, full retraining. To this end, we develop a set of practical and effective compression best practices for LLMs that combine depth, width, attention and MLP pruning with knowledge distillation-based retraining; we arrive at these best practices through a detailed empirical exploration of pruning strategies for each axis, methods to combine axes, distillation strategies, and search techniques for arriving at optimal compressed architectures. We use this guide to compress the Nemotron-4 family of LLMs by a factor of 2-4x, and compare their performance to similarly-sized models on a variety of language modeling tasks. Deriving 8B and 4B models from an already pretrained 15B model using our approach requires up to 40x fewer training tokens per model compared to training from scratch; this results in compute cost savings of 1.8x for training the full model family (15B, 8B, and 4B). Minitron models exhibit up to a 16% improvement in MMLU scores compared to training from scratch, perform comparably to other community models such as Mistral 7B, Gemma 7B and Llama-3 8B, and outperform state-of-the-art compression techniques from the literature. We have open-sourced Minitron model weights on Huggingface, with corresponding supplementary material including example code available on GitHub.",,Open weights (unrestricted),,Confident,2024-12-09 20:29:27+00:00,United States of America,Llama 3.1-8B,,,,,,,,
Minitron 8B,Language,NVIDIA,Industry,"Saurav Muralidharan, Sharath Turuvekere Sreenivas, Raviraj Joshi, Marcin Chochowski, Mostofa Patwary, Mohammad Shoeybi, Bryan Catanzaro, Jan Kautz, Pavlo Molchanov",2024-11-04,Compact Language Models via Pruning and Knowledge Distillation,https://arxiv.org/abs/2407.14679,,,,8300000000.0,"8.3B (table 2)

(including  6.2B non-embedding parameters)

Minitron-8B-Base is a large language model (LLM) obtained by pruning Nemotron-4 15B; specifically, we prune model embedding size, number of attention heads, and MLP intermediate dimension.

Minitron-8B-Base uses a model embedding size of 4096, 48 attention heads, and an MLP intermediate dimension of 16384. It also uses Grouped-Query Attention (GQA) and Rotary Position Embeddings (RoPE).",,,,,Unspecified unreleased,"""Following pruning, we perform continued training with distillation using 94 billion tokens to arrive at the final model; we use the continuous pre-training data corpus used in Nemotron-4 15B for this purpose.""

""Properties: The training corpus for Minitron-8B-Base consists of English and multilingual text, as well as code. Our sources cover a variety of document types such as: webpages, dialogue, articles, and other written materials. The corpus spans domains including legal, math, science, finance, and more. In our continued training set, we introduce a small portion of question-answering, and alignment style data to improve model performance.

Data Freshness: The pretraining data has a cutoff of June 2023.""",94000000000.0,94B training tokens (table 2),,,"All experiments were performed on 16× NVIDIA DGX A100 nodes (8× A100 80GB) for short
turnaround times.",NVIDIA A100 SXM4 80 GB,8.0,,"Large language models (LLMs) targeting different deployment scales and sizes are currently produced by training each variant from scratch; this is extremely compute-intensive. In this paper, we investigate if pruning an existing LLM and then re-training it with a fraction (<3%) of the original training data can be a suitable alternative to repeated, full retraining. To this end, we develop a set of practical and effective compression best practices for LLMs that combine depth, width, attention and MLP pruning with knowledge distillation-based retraining; we arrive at these best practices through a detailed empirical exploration of pruning strategies for each axis, methods to combine axes, distillation strategies, and search techniques for arriving at optimal compressed architectures. We use this guide to compress the Nemotron-4 family of LLMs by a factor of 2-4x, and compare their performance to similarly-sized models on a variety of language modeling tasks. Deriving 8B and 4B models from an already pretrained 15B model using our approach requires up to 40x fewer training tokens per model compared to training from scratch; this results in compute cost savings of 1.8x for training the full model family (15B, 8B, and 4B). Minitron models exhibit up to a 16% improvement in MMLU scores compared to training from scratch, perform comparably to other community models such as Mistral 7B, Gemma 7B and Llama-3 8B, and outperform state-of-the-art compression techniques from the literature. We have open-sourced Minitron model weights on Huggingface, with corresponding supplementary material including example code available on GitHub.",,Open weights (non-commercial),,Confident,2024-12-09 20:29:02+00:00,United States of America,Nemotron-4 15B,4.6812e+21,6*8300000000.00*94*10^9 = 4.6812e+21,,,,,,
Minitron 4B,Language,NVIDIA,Industry,"Saurav Muralidharan, Sharath Turuvekere Sreenivas, Raviraj Joshi, Marcin Chochowski, Mostofa Patwary, Mohammad Shoeybi, Bryan Catanzaro, Jan Kautz, Pavlo Molchanov",2024-11-04,Compact Language Models via Pruning and Knowledge Distillation,https://arxiv.org/abs/2407.14679,,,,4200000000.0," 4.2B (table 4)

including 2.6B non-embedding parameters

""Minitron-4B-Base uses a model embedding size of 3072, 32 attention heads, and an MLP intermediate dimension of 9216. It also uses Grouped-Query Attention (GQA) and Rotary Position Embeddings (RoPE).""",,,,,Unspecified unreleased,"""Properties: The training corpus for Minitron-4B-Base consists of English and multilingual text, as well as code. Our sources cover a variety of document types such as: webpages, dialogue, articles, and other written materials. The corpus spans domains including legal, math, science, finance, and more. In our continued training set, we introduce a small portion of question-answering, and alignment style data to improve model performance.

Data Freshness: The pretraining data has a cutoff of June 2023.""",94000000000.0,94B training tokens (table 3),,,"All experiments were performed on 16× NVIDIA DGX A100 nodes (8× A100 80GB) for short
turnaround times.",NVIDIA A100 SXM4 80 GB,8.0,,"Large language models (LLMs) targeting different deployment scales and sizes are currently produced by training each variant from scratch; this is extremely compute-intensive. In this paper, we investigate if pruning an existing LLM and then re-training it with a fraction (<3%) of the original training data can be a suitable alternative to repeated, full retraining. To this end, we develop a set of practical and effective compression best practices for LLMs that combine depth, width, attention and MLP pruning with knowledge distillation-based retraining; we arrive at these best practices through a detailed empirical exploration of pruning strategies for each axis, methods to combine axes, distillation strategies, and search techniques for arriving at optimal compressed architectures. We use this guide to compress the Nemotron-4 family of LLMs by a factor of 2-4x, and compare their performance to similarly-sized models on a variety of language modeling tasks. Deriving 8B and 4B models from an already pretrained 15B model using our approach requires up to 40x fewer training tokens per model compared to training from scratch; this results in compute cost savings of 1.8x for training the full model family (15B, 8B, and 4B). Minitron models exhibit up to a 16% improvement in MMLU scores compared to training from scratch, perform comparably to other community models such as Mistral 7B, Gemma 7B and Llama-3 8B, and outperform state-of-the-art compression techniques from the literature. We have open-sourced Minitron model weights on Huggingface, with corresponding supplementary material including example code available on GitHub.",,Open weights (non-commercial),,Confident,2024-12-09 20:29:04+00:00,United States of America,Nemotron-4 15B,2.3688e+21,6*4200000000.00*94*10^9 = 2.3688e+21,,,,,,
FvFold,Biology,Jeonbuk National University,Academia,"Pasang Sherpa, Kil To Chong, Hilal Tayara",2024-11-01,FvFold: A model to predict antibody Fv structure using protein language model with residual network and Rosetta minimization,https://www.sciencedirect.com/science/article/pii/S0010482524012137,,,,9209788.0,"""In total, the model contains about 9,209,788 trainable parameters.""",,,,"""The training was performed on an NVIDIA A100 80 GB PCIe GPU with 40 CPU cores and 754 GB RAM capacity. [...] The model was trained
on a nonredundant set of 2253 Fv structures from the Structural
Antibody Database (SAbDab) [14,15] at 99% sequence identity.""",,,,,,,,NVIDIA A100 PCIe,1.0,,"The immune system depends on antibodies (Abs) to recognize and attach to a wide range of antigens, playing a pivotal role in immunity. The precise prediction of the variable fragment (Fv) region of antibodies is vital for the progress of therapeutic and commercial applications, particularly in the treatment of diseases such as cancer. Although deep learning models exist for accurate antibody structure prediction, challenges persist, particularly in modeling complementarity-determining regions (CDRs) and the overall antibody Fv structures. Introducing the FvFold model, a deep learning approach harnessing the capabilities of the ProtT5-XL-UniRef50 protein language model which is capable of predicting accurate antibody Fv structure. Through evaluations on various benchmarks, our model outperforms existing models, demonstrating superior accuracy by achieving lower Root Mean Square Deviation (RMSD) in almost all loops and Orientational Coordinate Distance (OCD) values in the RosettaAntibody benchmark, Therapeutic benchmark and IgFold benchmark compared to the previous top-performing model.",,Open weights (unrestricted),,Unverified,2024-11-23 21:22:33+00:00,Korea (Republic of),,,,,,,,,
Uni-Med,,,,"Xun Zhu, Ying Hu, Fanbin Mo, Miao Li, Ji Wu",2024-11-01,"Uni-Med: A Unified Medical Generalist Foundation
Model For Multi-Task Learning Via Connector-MoE",https://arxiv.org/pdf/2409.17508,1.0,,,,,,,,,,,,,,,,,,,"We present Uni-Med, an open-source medical generalist foundation model with a unified
interface and shared parameters, which can perform six different medical tasks including
question answering, visual question answering, report generation, referring expression
comprehension, referring expression generation and image classification.",,,,Unverified,,,,,,,,,,,
SimPO,Language,"Princeton University,University of Virginia","Academia,Academia","Yu Meng, Mengzhou Xia, Danqi Chen",2024-11-01,SimPO: Simple Preference Optimization with a Reference-Free Reward,https://arxiv.org/abs/2405.14734,,,,9000000000.0,,,,,,"UltraChat,UltraFeedback","""Applying SimPO to Gemma 2 models presents a different trend. We evaluate SimPO using Google’s recently released Gemma-2-9B-it model [77], which represents a strong open-source model.
For training data, we generate up to 5 responses per prompt from the UltraFeedback dataset [23]""",,,1.0,1.7,"""Fine-tuning the google/gemma-2-9b-it on princeton-nlp/gemma2-ultrafeedback-armorm takes around 100 mins to finish on 8xH100 GPUs.""",NVIDIA H100 SXM5 80GB,8.0,,"Direct Preference Optimization (DPO) is a widely used offline preference optimization algorithm that reparameterizes reward functions in reinforcement learning from human feedback (RLHF) to enhance simplicity and training stability. In this work, we propose SimPO, a simpler yet more effective approach. The effectiveness of SimPO is attributed to a key design: using the average log probability of a sequence as the implicit reward. This reward formulation better aligns with model generation and eliminates the need for a reference model, making it more compute and memory efficient. Additionally, we introduce a target reward margin to the Bradley-Terry objective to encourage a larger margin between the winning and losing responses, further improving the algorithm's performance. We compare SimPO to DPO and its latest variants across various state-of-the-art training setups, including both base and instruction-tuned models such as Mistral, Llama 3, and Gemma 2. We evaluate on extensive chat-based evaluation benchmarks, including AlpacaEval 2, MT-Bench, and Arena-Hard. Our results demonstrate that SimPO consistently and significantly outperforms existing approaches without substantially increasing response length. Specifically, SimPO outperforms DPO by up to 6.4 points on AlpacaEval 2 and by up to 7.5 points on Arena-Hard. Our top-performing model, built on Gemma-2-9B-it, achieves a 72.4% length-controlled win rate on AlpacaEval 2, a 59.1% win rate on Arena-Hard, and ranks 1st on Chatbot Arena among <10B models with real user votes.",,Open weights (restricted use),,Confident,2025-02-07 18:19:34+00:00,"United States of America,United States of America",Gemma 2 9B,1.42488e+19,989500000000000*8*100*60*0.3 = 1.42488e+19,,,,,,
π0 (pi-zero),"Robotics,Vision",Physical Intelligence,Industry,"Kevin Black, Noah Brown, Danny Driess, Adnan Esmail, Michael Equi, Chelsea Finn, Niccolo Fusai, Lachy Groom, Karol Hausman, Brian Ichter, Szymon Jakubczak, Tim Jones, Liyiming Ke, Sergey Levine, Adrian Li-Bell, Mohith Mothukuri, Suraj Nair, Karl Pertsch, Lucy Xiaoyang Shi, James Tanner, Quan Vuong, Anna Walling, Haohuan Wang, Ury Zhilinsky",2024-10-31,π0: Our First Generalist Policy,https://www.physicalintelligence.company/download/pi0.pdf,,,,3300000000.0,"""While in principle our model can be initialized from scratch or fine-tuned from any VLM backbone, in practice we use PaliGemma [5] as our base model. PaliGemma is an opensource 3 billion parameter VLM that offers a convenient tradeoff between size and performance. We add 300M parameters for the action expert (which is initialized from scratch) for a total of 3.3 billion parameters.""",,,,,"Unspecified unreleased,Open X-Embodiment","""The pre-training mixture consists of a subset of OXE [10] and the π dataset.""",,"10,000 hours, and ~1 billion timesteps

""We evaluate our approach by pre-training on over 10,000 hours of robot
data, and fine-tuning to a variety of dexterous tasks""
...

""We provide an overview of our pre-training mixture in Figure 4. Since each training example corresponds to a timestep
— i.e., a tuple (ot, At), — we will quantify data in terms
of timesteps in this discussion. 9.1% of the training mixture
consists of open-source datasets, including OXE [10], Bridge
v2 [52], and DROID [23]. The robots and tasks in these
datasets typically have one or two cameras and use lowfrequency control, between 2 and 10 Hz. However, these
datasets cover a wide range of objects and environments. To
learn dexterous and more complex tasks, we also use 903M
timesteps of data from our own datasets, where 106M steps are
from single-arm robots and 797M are from dual-arm robots.",,,,,,,"Robot learning holds tremendous promise to unlock the full potential of flexible, general, and dexterous robot systems, as well as to address some of the deepest questions in artificial intelligence. However, bringing robot learning to the level of generality required for effective real-world systems faces major obstacles in terms of data, generalization, and robustness. In this paper, we discuss how generalist robot policies (i.e., robot foundation models) can address these challenges, and how we can design effective generalist robot policies for complex and highly dexterous tasks. We propose a novel flow matching architecture built on top of a pre-trained vision-language model (VLM) to inherit Internet-scale semantic knowledge. We then discuss how this model can be trained on a large and diverse dataset from multiple dexterous robot platforms, including single-arm robots, dual-arm robots, and mobile manipulators. We evaluate our model in terms of its ability to perform tasks in zero shot after pre-training, follow language instructions from people and froma high-level VLM policy, and its ability to acquire new skills via fine-tuning. Our results cover a wide variety of tasks, such as laundry folding, table cleaning, and assembling box",,Unreleased,,Confident,2024-11-12 22:40:19+00:00,United States of America,PaliGemma,,,,,,,,
AstroOne,Astronomy,Zhijiang Lab,,,2024-10-30,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2024-11-28 06:34:08+00:00,China,,,,,,,,,
aiXcoder-7B Base,Language,Peking University,Academia,"Siyuan Jiang, Jia Li, He Zong, Huanyu Liu, Hao Zhu, Shukai Hu, Erlu Li, Jiazheng Ding, Yu Han, Wei Ning, Gen Wang, Yihong Dong, Kechi Zhang, Ge Li
",2024-10-30,"aiXcoder-7B: A Lightweight and Effective Large Language Model for Code Completion
",https://arxiv.org/html/2410.13187v2,1.0,,,7000000000.0,,,,,128 A100 40GB GPUs,,,1200000000000.0,,,,,NVIDIA A100 SXM4 40 GB,128.0,,"Compared to existing LLMs, aiXcoder-7B achieves higher code completion accuracy while having smaller scales (i.e., 7 billion parameters). We attribute the superiority of aiXcoder-7B to three key factors: ❶ Multi-objective training. We employ three training objectives, one of which is our proposed Structured Fill-In-the-Middle (SFIM). SFIM considers the syntax structures in code and effectively improves the performance of LLMs for code. ❷ Diverse data sampling strategies. They consider inter-file relationships and enhance the capability of LLMs in understanding cross-file contexts. ❸ Extensive high-quality data.",,,,Unverified,2025-02-19 20:40:59+00:00,China,,,,,,,,,
Recraft V3,Image generation,Recraft,Industry,,2024-10-30,Recraft introduces a revolutionary AI model that thinks in design language,https://www.recraft.ai/blog/recraft-introduces-a-revolutionary-ai-model-that-thinks-in-design-language,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Today, we are announcing Recraft V3, our latest model that sets a new quality standard in the image generation space, outperforming all competitor models proven by the Hugging Face’s industry-leading Text-to-Image Benchmark by Artificial Analysis.

The new Recraft V3 delivers across-the-board improvements, with particularly notable advances in text generation.

We are also launching several new important features that allow our users to have more control over AI generation: the possibility to specify text size and positions in the image, precise style control, improved inpainting, and new outpainting capabilities.

The model is now available for both free and paid users in the desktop app on Canvas, in the mobile app (available on iOS and Android), and via API. ",,API access,,Unknown,2025-02-13 20:26:15+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Super XiaoAI,,,,,2024-10-29,小米将发布全生态AI智能助手超级小爱：澎湃OS 2首发搭载,https://www.aibase.com/zh/news/12800,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Pro-PRIME,Biology,"Shanghai Jiao Tong University,Shanghai AI Lab,East China University of Science and Technology,Shanghai Tech University,Guangzhou Inernational Bio Island,Chinese Academy of Sciences,Shanghai Academy of Experimental Medicine","Academia,Academia,Academia,Academia,Academia","Fan Jiang, Mingchen Li, Jiajun Dong, Yuanxi Yu, Xinyu Sun, Banghao Wu, Jin Huang, Liqi Kang, Yufeng Pei, Liang Zhang, Shaojie Wang, Wenxue Xu, Jingyao Xin, Wanli Ouyang, Guisheng Fan, Lirong Zheng, Yang Tan, Zhiqiang Hu, Yi Xiong, Yan Feng, Guangyu Yang, Qian Liu, Jie Song, Jia Liu, Liang Hong, Pan Tan",2024-10-28,Pro-PRIME: A general Temperature-Guided Language model to engineer enhanced Stability and Activity in Proteins,https://arxiv.org/abs/2307.12682,1.0,,,,,4.299999999999988e+19,,,"1. Hardware setup: 8x NVIDIA A100 80G GPUs (3.12e14 FLOP/s per GPU)

2. Training duration: 12 hours (estimated based on 200,000 update steps at ~1 second per step, rounded up from 6.94 hours for conservative estimate)

3. Utilization rate: 40%

4. Calculation: 3.12e14 FLOP/s × 8 GPUs × 43,200 seconds × 0.4 = 4.31e19 FLOPs",,,28800000001.00015,"96,000,000 sequences × 300 residues/sequence = 28,800,000,000 tokens (2.88 × 10¹⁰)",,,,,,,"Designing protein mutants of both high stability and activity is a critical yet challenging task in protein engineering. Here, we introduce PRIME, a deep learning model, which can suggest protein mutants of improved stability and activity without any prior experimental mutagenesis data of the specified protein. Leveraging temperature-aware language modeling, PRIME demonstrated superior predictive power compared to current state-of-the-art models on the public mutagenesis dataset over 283 protein assays. Furthermore, we validated PRIME's predictions on five proteins, examining the top 30-45 single-site mutations' impact on various protein properties, including thermal stability, antigen-antibody binding affinity, and the ability to polymerize non-natural nucleic acid or resilience to extreme alkaline conditions. Remarkably, over 30% of the AI-recommended mutants exhibited superior performance compared to their pre-mutation counterparts across all proteins and desired properties. Moreover, we have developed an efficient, and successful method based on PRIME to rapidly obtain multi-site mutants with enhanced activity and stability. Hence, PRIME demonstrates the general applicability in protein engineering.",,,,Unverified,2025-02-14 19:00:00+00:00,"China,China,China,China,China,China,China",,,,,,,,,
Doubao-pro,Language,ByteDance,Industry,,2024-10-28,Doubao General Model Pro (Doubao-pro),https://www.volcengine.com/docs/6360/1264663,,Training cost,,500000000000.0,"[Speculative] Doubao's large language model has scaled up from 35 billion parameters to 800 billion, with 500 billion and 800 billion parameter models currently under training.
https://xueqiu.com/9637001584/309910396?md5__1038=7qmx2DyDuie4cDBqDTQEWqDtMvO4iTphD
",2.505e+25,,,6ND = 6 * 500*10^9 * 8350*10^9 = 2.505e+25,Unspecified unreleased,"Doubao's data sources primarily rely on proprietary business data, accounting for 50-60%; externally sourced data comprises 15-20%; and synthetic data has been used since June of this year, although Doubao is cautious in feeding synthetic data due to its uncertain quality. ",8350000000000.0,"[Speculative] Doubao's pre-training data volume is approximately 500TB, with only about 10% of this data actually used for training. The current version employs a non-Mixture-of-Experts (MoE) architecture. In the future, MoE architecture may be introduced to increase parameter count and performance, while also integrating multimodal data solutions.

So this model is dense, and the training data is probably all text tokens, not multimodal.

50TB * 167M tokens/GB ~= 8.35 trillion tokens
",,,,,,,"A professional-grade, self-developed LLM supporting up to 128k tokens, enabling fine-tuning across the entire series. ",,API access,,Speculative,2025-01-27 22:58:27+00:00,China,,,,,"There is no paper to reference, also no information in media.",,,,
Aya Expanse 32B,Language,Cohere for AI,Industry,,2024-10-24,"Cohere For AI launches Aya Expanse, a state-of-the-art multilingual family of models to help close the language gap with AI.","https://cohere.com/blog/aya-expanse-connecting-our-world

https://huggingface.co/CohereForAI/aya-expanse-32b?ref=cohere-ai.ghost.io",,,,32300000000.0,,6.688684e+21,,,"'Likely' confidence for dataset size and epochs

34513333333*32300000000*6 = 6.688684e+21",Aya Collection,"Seems like it wsa trained on Aya Collection (155 GB of text) but I don't find information about amount of epochs (could be less than 1)

https://huggingface.co/datasets/CohereForAI/aya_collection?ref=cohere-ai.ghost.io",34513333333.0,155GB * 167M words per GB (assuming on average across languages) * 4/3 tokens per word on average = 34513333333 tokens,,,,,,,"Today, Cohere For AI, Cohere’s research arm, is proud to announce Aya Expanse, a family of highly performant multilingual models that excels across 23 languages and outperforms other leading open-weights models. 

We are releasing Aya Expanse as both 8 and 32 billion open-weights models available on Kaggle and Hugging Face, as part of our continued commitment to multilingual research and to accelerate the frontier for multilingual AI. The 8 billion parameters model makes breakthroughs more accessible to researchers worldwide, and our 32 billion parameters model offers state-of-the-art multilingual capabilities. 

Aya Expanse marks an important step to expand high-quality coverage of languages in LLMs. Since we first launched the Aya initiative two years ago, we have collaborated with over 3,000 researchers from 119 countries to expand cutting-edge multilingual research. This included releasing the Aya collection, the largest multilingual dataset collection to-date, with 513 million examples, and critical evaluation sets for multilingual performance and safety. It has also included the release of Aya-101, the most comprehensive multilingual model to-date covering 101 languages.",,Open weights (restricted use),,Likely,2024-10-28 18:11:48+00:00,"Multinational,Canada",,,,,,,,,
Aya Expanse 8B,Language,Cohere for AI,Industry,,2024-10-24,"Cohere For AI launches Aya Expanse, a state-of-the-art multilingual family of models to help close the language gap with AI.","https://cohere.com/blog/aya-expanse-connecting-our-world

https://huggingface.co/CohereForAI/aya-expanse-8b?ref=cohere-ai.ghost.io",,,,8000000000.0,,1.65664e+21,,,"'Likely' confidence for dataset size and epochs

34513333333*8000000000*6 = 1.65664e+21",Aya Collection,"Seems like it wsa trained on Aya Collection (155 GB of text) but I don't find information about amount of epochs (could be less than 1)

https://huggingface.co/datasets/CohereForAI/aya_collection?ref=cohere-ai.ghost.io",34513333333.0,155GB * 167M words per GB (assuming on average across languages) * 4/3 tokens per word on average = 34513333333 tokens,,,,,,,"Today, Cohere For AI, Cohere’s research arm, is proud to announce Aya Expanse, a family of highly performant multilingual models that excels across 23 languages and outperforms other leading open-weights models. 

We are releasing Aya Expanse as both 8 and 32 billion open-weights models available on Kaggle and Hugging Face, as part of our continued commitment to multilingual research and to accelerate the frontier for multilingual AI. The 8 billion parameters model makes breakthroughs more accessible to researchers worldwide, and our 32 billion parameters model offers state-of-the-art multilingual capabilities. 

Aya Expanse marks an important step to expand high-quality coverage of languages in LLMs. Since we first launched the Aya initiative two years ago, we have collaborated with over 3,000 researchers from 119 countries to expand cutting-edge multilingual research. This included releasing the Aya collection, the largest multilingual dataset collection to-date, with 513 million examples, and critical evaluation sets for multilingual performance and safety. It has also included the release of Aya-101, the most comprehensive multilingual model to-date covering 101 languages.",,Open weights (restricted use),,Likely,2024-10-28 18:12:35+00:00,"Multinational,Canada",,,,,,,,,
Mochi 1,Video,Genmo,Industry,,2024-10-22,Mochi 1: A new SOTA in open-source video generation models,https://www.genmo.ai/blog,,,,362000000.0,362M,,,,,Unspecified unreleased,,,,,,,,,,"We are thrilled to announce a research preview of Mochi 1, our latest open-source video generation model. Mochi 1 demonstrates dramatic improvements in quality of motion as well as extremely strong prompt adherence. Licensed under the Apache 2.0 license, a preview of Mochi 1 is freely available for personal and commercial use.

In addition to the model release, we're excited to unveil our hosted playground, where you can try Mochi 1 for free today at genmo.ai/play. The weights and architecture for Mochi 1 are open and available on HuggingFace. Today, we are releasing our 480p base model, with Mochi 1 HD coming later this year.",,Open weights (unrestricted),,Unverified,2024-10-28 18:56:30+00:00,United States of America,,,,,,,,,
NVLM-D 72B,"Vision,Language",NVIDIA,Industry,"Wenliang Dai, Nayeon Lee, Boxin Wang, Zhuolin Yang, Zihan Liu, Jon Barker, Tuomas Rintamaki, Mohammad Shoeybi, Bryan Catanzaro, Wei Ping",2024-10-22,NVLM: Open Frontier-Class Multimodal LLMs,https://arxiv.org/abs/2409.11402,,SOTA improvement,SOTA on OCRBench and VQAv2,72000000000.0,72B,3.02e+24,,5.000010000000001e+24,"Uses Qwen2-72B as a backbone, which trained with 3.02e24 FLOP, as well as InternViT-6B. It's unclear how many FLOP were spent training but probably negligible; e.g. PaLI trained ViT-e with ~4B parameters using 1.07e23 FLOP.

Fine-tuning FLOPs:
57,016,320,000 image/text tokens over all stages
6 * 72B * 57,016,320,000 = 2.463e22
","COCO,Conceptual Captions (CC3M),SBU,VQAv2,VisualGenome,TextVQA,OCR-VQA","Captioning COCO [72], CC3M [127], SBU [114], LAION-115M (sanitized) [123; 66]
VQA (natural image) VQAv2 [38], Visual Genome [59]
Chart DVQA [51]
Document Docmatix [90]
OCR /
Scene-Text
OCR-VQA [98], COCO-Text [144], TextOCR [132], ReCTs [170], RRC-ArT [22], RRC-LSVT [134]
RCTW [128], synthdog-en [57], pdfa-eng-wds [117]
Math CLEVR-Math [73]",57016320000.0,"Pre-training
Global batch size 2,048
Sequence length in the LLM decoder 512
Downsampling of visual tokens 1024->256
# of visual token per tile 256
# of tiles 1
# of training steps 20K

2048 * (512 + 256 * 1) * 20000 = 31,457,280,000

SFT:
Global batch size 128
Sequence length in the LLM decoder 3,200
# of visual token per tile 256
# of tiles 6+1
# of training steps 40K

128 * (3200 + 256*7) * 40000 = 25,559,040,000

31,457,280,000 + 25,559,040,000 = 57,016,320,000",1.0,,,NVIDIA H100 SXM5 80GB,128.0,,"We introduce NVLM 1.0, a family of frontier-class multimodal large language models (LLMs) that achieve state-of-the-art results on vision-language tasks, rivaling the leading proprietary models (e.g., GPT-4o) and open-access models (e.g., Llama 3-V 405B and InternVL 2). Remarkably, NVLM 1.0 shows improved text-only performance over its LLM backbone after multimodal training. In terms of model design, we perform a comprehensive comparison between decoder-only multimodal LLMs (e.g., LLaVA) and cross-attention-based models (e.g., Flamingo). Based on the strengths and weaknesses of both approaches, we propose a novel architecture that enhances both training efficiency and multimodal reasoning capabilities. Furthermore, we introduce a 1-D tile-tagging design for tile-based dynamic high-resolution images, which significantly boosts performance on multimodal reasoning and OCR-related tasks. Regarding training data, we meticulously curate and provide detailed information on our multimodal pretraining and supervised fine-tuning datasets. Our findings indicate that dataset quality and task diversity are more important than scale, even during the pretraining phase, across all architectures. Notably, we develop production-grade multimodality for the NVLM-1.0 models, enabling them to excel in vision-language tasks while maintaining and even improving text-only performance compared to their LLM backbones. To achieve this, we craft and integrate a high-quality text-only dataset into multimodal training, alongside a substantial amount of multimodal math and reasoning data, leading to enhanced math and coding capabilities across modalities. To advance research in the field, we release the model weights at this https URL and will open-source the training code for the community soon.",,Open weights (non-commercial),,Confident,2025-02-03 16:18:48+00:00,United States of America,"Qwen2-72B,InternViT-6B",2.463e+22,"Fine-tuning FLOPs:
57,016,320,000 image/text tokens over all stages
6 * 72B * 57,016,320,000 = 2.463e22",,,,,,
NVLM-H 72B,"Vision,Language",NVIDIA,Industry,"Wenliang Dai, Nayeon Lee, Boxin Wang, Zhuolin Yang, Zihan Liu, Jon Barker, Tuomas Rintamaki, Mohammad Shoeybi, Bryan Catanzaro, Wei Ping",2024-10-22,NVLM: Open Frontier-Class Multimodal LLMs,https://arxiv.org/abs/2409.11402,,Training cost,,72000000000.0,72B,3.02e+24,,5.000010000000001e+24,Additional compute in this paper is negligible relative to the compute used to train the language model backbone (Qwen2-72B at 3.02e24 FLOP),"COCO,Conceptual Captions (CC3M),SBU,VQAv2,VisualGenome,TextVQA,OCR-VQA","Captioning COCO [72], CC3M [127], SBU [114], LAION-115M (sanitized) [123; 66]
VQA (natural image) VQAv2 [38], Visual Genome [59]
Chart DVQA [51]
Document Docmatix [90]
OCR /
Scene-Text
OCR-VQA [98], COCO-Text [144], TextOCR [132], ReCTs [170], RRC-ArT [22], RRC-LSVT [134]
RCTW [128], synthdog-en [57], pdfa-eng-wds [117]
Math CLEVR-Math [73]",125829120000.0,"Pre-training:
Global batch size 2,048
Sequence length in the LLM decoder 512
Downsampling of visual tokens 1024->256
# of visual token per tile 256
# of tiles 6+1
# of training steps 20K

2048 * (512+256*7) * 20000 = 94,371,840,000

SFT:
Global batch size  256
Sequence length in the LLM decoder  1,280
# of visual token per tile 256
# of tiles 6+1
# of training steps 40K

256*(1280+256*7)*40000 = 31,457,280,000

94,371,840,000 + 31,457,280,000 = 125,829,120,000",1.0,,,NVIDIA H100 SXM5 80GB,128.0,,"We introduce NVLM 1.0, a family of frontier-class multimodal large language models (LLMs) that achieve state-of-the-art results on vision-language tasks, rivaling the leading proprietary models (e.g., GPT-4o) and open-access models (e.g., Llama 3-V 405B and InternVL 2). Remarkably, NVLM 1.0 shows improved text-only performance over its LLM backbone after multimodal training. In terms of model design, we perform a comprehensive comparison between decoder-only multimodal LLMs (e.g., LLaVA) and cross-attention-based models (e.g., Flamingo). Based on the strengths and weaknesses of both approaches, we propose a novel architecture that enhances both training efficiency and multimodal reasoning capabilities. Furthermore, we introduce a 1-D tile-tagging design for tile-based dynamic high-resolution images, which significantly boosts performance on multimodal reasoning and OCR-related tasks. Regarding training data, we meticulously curate and provide detailed information on our multimodal pretraining and supervised fine-tuning datasets. Our findings indicate that dataset quality and task diversity are more important than scale, even during the pretraining phase, across all architectures. Notably, we develop production-grade multimodality for the NVLM-1.0 models, enabling them to excel in vision-language tasks while maintaining and even improving text-only performance compared to their LLM backbones. To achieve this, we craft and integrate a high-quality text-only dataset into multimodal training, alongside a substantial amount of multimodal math and reasoning data, leading to enhanced math and coding capabilities across modalities. To advance research in the field, we release the model weights at this https URL and will open-source the training code for the community soon.",,Open weights (non-commercial),,Likely,2025-02-03 16:18:47+00:00,United States of America,"Qwen2-72B,InternViT-6B",5.436e+22,"6ND = 6*125,829,120,000*72000000000.00 = 5.436e22
",,,,,,
NVLM-X 72B,"Vision,Language",NVIDIA,Industry,"Wenliang Dai, Nayeon Lee, Boxin Wang, Zhuolin Yang, Zihan Liu, Jon Barker, Tuomas Rintamaki, Mohammad Shoeybi, Bryan Catanzaro, Wei Ping",2024-10-22,NVLM: Open Frontier-Class Multimodal LLMs,https://arxiv.org/abs/2409.11402,,Training cost,,72000000000.0,72B,3.0398181e+24,,5.000010000000001e+24,3.02e24 FLOP (Qwen2-72B compute) + 19818086000000000000000 = 3.0398181e+24,"COCO,Conceptual Captions (CC3M),SBU,VQAv2,VisualGenome,TextVQA,OCR-VQA","Captioning COCO [72], CC3M [127], SBU [114], LAION-115M (sanitized) [123; 66]
VQA (natural image) VQAv2 [38], Visual Genome [59]
Chart DVQA [51]
Document Docmatix [90]
OCR /
Scene-Text
OCR-VQA [98], COCO-Text [144], TextOCR [132], ReCTs [170], RRC-ArT [22], RRC-LSVT [134]
RCTW [128], synthdog-en [57], pdfa-eng-wds [117]
Math CLEVR-Math [73]",45875200000.0,"Pre-training
Global batch size 2,048
Sequence length in the LLM decoder 512
Downsampling of visual tokens 1024->256
# of visual token per tile 256
# of tiles 1
# of training steps 20K

2048 * (512 + 256 * 1) * 20000 = 31,457,280,000

SFT:
Global batch size 256
Sequence length in the LLM decoder  1,024
# of visual token per tile 256
# of tiles 6+1
# of training steps 20K

256 * (1,024 + 256*7) * 20000 = 14417920000

31,457,280,000 +14417920000 = 45875200000",1.0,,,NVIDIA H100 SXM5 80GB,128.0,,"We introduce NVLM 1.0, a family of frontier-class multimodal large language models (LLMs) that achieve state-of-the-art results on vision-language tasks, rivaling the leading proprietary models (e.g., GPT-4o) and open-access models (e.g., Llama 3-V 405B and InternVL 2). Remarkably, NVLM 1.0 shows improved text-only performance over its LLM backbone after multimodal training. In terms of model design, we perform a comprehensive comparison between decoder-only multimodal LLMs (e.g., LLaVA) and cross-attention-based models (e.g., Flamingo). Based on the strengths and weaknesses of both approaches, we propose a novel architecture that enhances both training efficiency and multimodal reasoning capabilities. Furthermore, we introduce a 1-D tile-tagging design for tile-based dynamic high-resolution images, which significantly boosts performance on multimodal reasoning and OCR-related tasks. Regarding training data, we meticulously curate and provide detailed information on our multimodal pretraining and supervised fine-tuning datasets. Our findings indicate that dataset quality and task diversity are more important than scale, even during the pretraining phase, across all architectures. Notably, we develop production-grade multimodality for the NVLM-1.0 models, enabling them to excel in vision-language tasks while maintaining and even improving text-only performance compared to their LLM backbones. To achieve this, we craft and integrate a high-quality text-only dataset into multimodal training, alongside a substantial amount of multimodal math and reasoning data, leading to enhanced math and coding capabilities across modalities. To advance research in the field, we release the model weights at this https URL and will open-source the training code for the community soon.",,Open weights (non-commercial),,Likely,2025-02-03 16:18:45+00:00,United States of America,"Qwen2-72B,InternViT-6B",1.9818086e+22,6*72B*45875200000 = 1.9818086e+22,,,,,,
Claude 3.5 Haiku,Language,Anthropic,Industry,,2024-10-22,"Our fastest model, delivering advanced coding, tool use, and reasoning at an accessible price",https://www.anthropic.com/news/3-5-models-and-computer-use,,,,,,,,,,Unspecified unreleased,Training data cutoff July 2024,,,,,,,,,"Claude 3.5 Haiku is the next generation of our fastest model. For a similar speed to Claude 3 Haiku, Claude 3.5 Haiku improves across every skill set and surpasses even Claude 3 Opus, the largest model in our previous generation, on many intelligence benchmarks. Claude 3.5 Haiku is particularly strong on coding tasks. For example, it scores 40.6% on SWE-bench Verified, outperforming many agents using publicly available state-of-the-art models—including the original Claude 3.5 Sonnet and GPT-4o.

With low latency, improved instruction following, and more accurate tool use, Claude 3.5 Haiku is well suited for user-facing products, specialized sub-agent tasks, and generating personalized experiences from huge volumes of data—like purchase history, pricing, or inventory records.

Claude 3.5 Haiku will be made available later this month across our first-party API, Amazon Bedrock, and Google Cloud’s Vertex AI—initially as a text-only model and with image input to follow.",,API access,,Unverified,2025-02-03 20:35:45+00:00,United States of America,,,,,,,,,
Stable Diffusion 3.5 Large,Image generation,Stability AI,Industry,,2024-10-22,Introducing Stable Diffusion 3.5,https://stability.ai/news/introducing-stable-diffusion-3-5,,,,8100000000.0,8.1B,,,,,Unspecified unreleased,"""This model was trained on a wide variety of data, including synthetic data and filtered publicly available data.""",,,,,,,,,"Stable Diffusion 3.5 Large: At 8.1 billion parameters, with superior quality and prompt adherence, this base model is the most powerful in the Stable Diffusion family. This model is ideal for professional use cases at 1 megapixel resolution.",,Open weights (restricted use),,Confident,2025-02-14 18:51:45+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Stable Diffusion 3.5 Large Turbo,Image generation,Stability AI,Industry,,2024-10-22,Introducing Stable Diffusion 3.5,https://stability.ai/news/introducing-stable-diffusion-3-5,,,,,,,,,,Unspecified unreleased,"""This model was trained on a wide variety of data, including synthetic data and filtered publicly available data.""",,,,,,,,,"Stable Diffusion 3.5 Large Turbo: A distilled version of Stable Diffusion 3.5 Large generates high-quality images with exceptional prompt adherence in just 4 steps, making it considerably faster than Stable Diffusion 3.5 Large.",,Open weights (restricted use),,Unknown,2025-02-14 18:53:50+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Granite 3.0 8B,Language,IBM,Industry,Granite Team IBM,2024-10-21,Granite 3.0 Language Models,https://github.com/ibm-granite/granite-3.0-language-models/tree/main,,,,8100000000.0,8.1B,5.832e+23,,,"6ND = 6*8.1*10^9*12*10^12 = 5.832e+23

""All our Granite 3.0 models are trained using a
compute budget of 8.35 × 10^23 FLOPS.""

8.35 × 10^23 * 757.0 (model's power consumption) / (174.6+757.0+64.5+121.2) = 5.6573436e+23

hardware estimation:
832102*3600*989500000000000*0.3 = 8.8923412e+23",Unspecified unreleased,"Granite 3.0 language models are trained using data from various sources such as unstructured natural language text and code data from theWeb curated by IBM, a collection of synthetic datasets generated by IBM, and publicly available high-quality datasets with permissible licenses.",12000000000000.0,12T tokens,,,Table 7,NVIDIA H100 SXM5 80GB,256.0,,"This report presents Granite 3.0, a new set of lightweight, state-of-the-art, open foundation models ranging in scale from 400 million to 8 billion active parameters.
Equipped with native support of multilingual, coding, function 
calling, and strong safety performance, these models target enterprise use cases, including on-premise and on-device settings. Evaluations on a comprehensive set of tasks demonstrate that our models consistently reach state-of-the-art performance for their size (as shown in Figure 1 and 2). This report also discloses technical details of pre-training and post-training that may help the research community accelerate the collective efforts to develop open foundation models. We publicly release pre-trained and post-trained versions of all our Granite 3.0 models under a standard permissive Apache 2.0 license allowing both research and commercial use. With support from the open source community, the Granite 3.0 models have been integrated with a
range of existing tools for quantization, fine-tuning, and deployment.",,Open weights (unrestricted),,Confident,2025-02-19 18:29:32+00:00,United States of America,,,,,,,,,
Granite 3.0 2B,Language,IBM,Industry,Granite Team IBM,2024-10-21,Granite 3.0 Language Models,https://github.com/ibm-granite/granite-3.0-language-models/tree/main,,,,2500000000.0,2.5B,1.8e+23,,,"6ND = 6*2.5*10^9*12*10^12 = 1.8e+23

""""All our Granite 3.0 models are trained using a
compute budget of 8.35 × 10^23 FLOPS.""

8.35 × 10^23 * 174.6 (model's power consumption) / (174.6+757.0+64.5+121.2) =1.304851e+23

hardware estimation:
192030*3600*989500000000000*0.3 = 2.0521478e+23",Unspecified unreleased,"Granite 3.0 language models are trained using data from various sources such as unstructured natural language text and code data from theWeb curated by IBM, a collection of synthetic datasets generated by IBM, and publicly available high-quality datasets with permissible licenses.",12000000000000.0,12T tokens,,,Table 7,NVIDIA H100 SXM5 80GB,768.0,,"This report presents Granite 3.0, a new set of lightweight, state-of-the-art, open foundation models ranging in scale from 400 million to 8 billion active parameters.
Equipped with native support of multilingual, coding, function 
calling, and strong safety performance, these models target enterprise use cases, including on-premise and on-device settings. Evaluations on a comprehensive set of tasks demonstrate that our models consistently reach state-of-the-art performance for their size (as shown in Figure 1 and 2). This report also discloses technical details of pre-training and post-training that may help the research community accelerate the collective efforts to develop open foundation models. We publicly release pre-trained and post-trained versions of all our Granite 3.0 models under a standard permissive Apache 2.0 license allowing both research and commercial use. With support from the open source community, the Granite 3.0 models have been integrated with a
range of existing tools for quantization, fine-tuning, and deployment.",,Open weights (unrestricted),,Confident,2025-02-19 18:29:27+00:00,United States of America,,,,,,,,,
Emu3,,,,,2024-10-21,"Emu3: Next-Token Prediction is All You Need
",https://arxiv.org/pdf/2409.18869,12.0,,,8000000000.0,,,,,,,,,,,,,,,,"In this paper, we introduce Emu3, a new suite of state-of-the-art multimodal models trained solely with next-token prediction. By tokenizing images, text, and videos into a discrete space, we train a single transformer from scratch on a mixture of multimodal sequences. Emu3 outperforms several well-established task-specific models in both generation and perception tasks, surpassing flagship models such as SDXL and LLaVA-1.6, while eliminating the need for diffusion or compositional architectures. Emu3 is also capable of generating high-fidelity video via predicting the next token in a video sequence.",,,,Unverified,,,,,,,,,,,
Allegro,Video,Rhymes AI,Industry,"Yuan Zhou, Qiuyue Wang, Yuxuan Cai, Huan Yang",2024-10-20,Allegro: Open the Black Box of Commercial-Level Video Generation Model,https://arxiv.org/abs/2410.15458,,,,2975000000.0,"VAE: 175M
DiT: 2.8B",6.565847e+22,,,"Assuming (!) 10 days of training (we might make a better assumption if we know what is the average throughput steps/sec for such setups because steps are given):
989500000000000*10*24*3600*256*0.3 = 6.565847e+22","WebVid-10M,HD-VILA-100M,Panda-70M,HD-VG,OpenVid-1M","WebVid [Bain et al., 2021], Panda-70M [Chen et al., 2024b], HD-VILA [Xue et al., 2022], HD-VG [Wang et al., 2023] and OpenVid-1M [Nan et al., 2024]",,"Text-to-Image Pre-training
W≥ 640, H≥ 368
107M datapoints

Text-to-Video Pre-training-360p
Duration − [2s, 16s]
FPS − (23, 61)
W≥ 640, H≥ 368
48M datapoints

Text-to-Video Pre-training-720p
Duration − [2s, 16s], [6s, 16s
FPS − (23, 61)
W≥ 1280, H≥ 720 
18M datapoints

Text-to-Video Fine-tuning
Duration −  [6s, 16s]
FPS − (23, 61)
W≥ 1280, H≥ 720 
2M datapoints",,,"GPUs 
T2I Pre-train: 128×H100 
T2V Pre-train: 256×H100 
T2V Fine-tune: 256×H100",NVIDIA H100 SXM5 80GB,256.0,,"Significant advancements have been made in the field of video generation, with the open-source community contributing a wealth of research papers and tools for training high-quality models. However, despite these efforts, the available information and resources remain insufficient for achieving commercial-level performance. In this report, we open the black box and introduce Allegro, an advanced video generation model that excels in both quality and temporal consistency. We also highlight the current limitations in the field and present a comprehensive methodology for training high-performance, commercial-level video generation models, addressing key aspects such as data, model architecture, training pipeline, and evaluation. Our user study shows that Allegro surpasses existing open-source models and most commercial models, ranking just behind Hailuo and Kling. Code: this https URL , Model: this https URL , Gallery: this https URL .",,Open weights (unrestricted),,Speculative,2024-11-25 17:49:56+00:00,United States of America,,,,,,,,,
Yi-Lightning,Language,01.AI,Industry,,2024-10-18,Yi-Lightning,https://www.lingyiwanwu.com/en https://platform.lingyiwanwu.com/,,,"On the blind test list LMSYS, Yi-Lightning surpassed GPT-4o-2024-05-13 released by OpenAI and Anthropic, as well as Claude 3.5 Sonnet, ranking sixth in the world and first in China.",,,1.5e+24,,,"The CEO of 01.AI tweeted that Yi-Lightning was trained for 1 month on 2000 H100s: https://x.com/kaifulee/status/1846310645849047524
Assuming this is accurate:
(9.9e14 * 2000) FLOP/s * 1 month * 30.5 days/month * 24hr/day * 3600 s/hr * 0.3 utilization assumption = 1.565e24",Unspecified unreleased,,,,,720.0,"https://x.com/kaifulee/status/1846310645849047524
""it was trained on 2000 H100s for 1 month""",NVIDIA H100 SXM5 80GB,2000.0,,,,API access,,Confident,2025-01-27 01:18:46+00:00,China,,,,,Yi-Lightning training cluster,,,,
TeleChat2-35B,Language,China Telecom,Industry,,2024-10-18,TeleChat2,https://github.com/Tele-AI/TeleChat2,,,,35000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 12:33:07+00:00,China,,,,,,,,,
Janus 1.3B,"Language,Vision,Multimodal","DeepSeek,The University of Hong Kong,Peking University","Industry,Academia,Academia","Chengyue Wu, Xiaokang Chen, Zhiyu Wu, Yiyang Ma, Xingchao Liu, Zizheng Pan, Wen Liu, Zhenda Xie, Xingkai Yu, Chong Ruan, Ping Luo",2024-10-17,Janus: Decoupling Visual Encoding for Unified Multimodal Understanding and Generation,https://arxiv.org/abs/2410.13848,,,,1300000000.0,"1.3B
! In the paper they say that they ""utilize DeepSeek-LLM (1.3B) [5] with a maximum supported sequence length of 4096 as the base language model.""
but I haven't found any mentioning of 1.3B model in that Deepseek paper (only 7B and 67B)",,,,,"ShareGPT4V,ImageNet-1k,wikiHow,Unspecified unreleased","Stage I. We use a dataset that includes 1.25 million image-text paired captions from ShareGPT4V [10] for multimodal understanding and approximately 1.2 million samples from ImageNet-1k [18] for visual generation

Stage II. We organize the data into the following categories. 
(1) Text-only data. We use pretraining text copus from DeepSeek-LLM [5]. 
(2) Interleaved image-text data. We use WikiHow [39] and WIT [72] dataset. (3) Image caption data. We use images from [17, 18, 23, 38, 40, 45, 47, 49, 70]. Among them, we employ open-source multimodal model to re-caption
images in [17, 40]. 
(4) Table and chart data. We use corresponding table and chart data from DeepSeek-VL [55]. 
(5) Visual generation data. We utilize image-caption pairs from
various datasets including [17, 38, 40, 57, 58, 60, 63, 70], along with 2M in-house data. 

Stage III. For text understanding, we use data from [43]. For multimodal understanding, we use instruct tuning data from [31, 34, 35, 43, 56, 69]. For visual generation, we use image-text pairs from [17, 60, 70] (a subset of that in stage II) and 4M in-house data",,"""All images are resized to 384 × 384 pixels.""

Stage 1
Training steps 10, 000
Batch size 256

Stage 2
Training steps 180, 000
Batch size 512

Stage 3
Training steps 24, 000
Batch size 256

Since they are using  SigLIP-Large-Patch16-384, patching size of 16*16
""For image generation, Janus uses the tokenizer from here with a downsample rate of 16.""

It is not enough information about text tokens and split between text and image tokens to calculate the total count 
",,168.0,"""The whole training process took 7 days on a cluster of 16 nodes, each equipped with 8 Nvidia A100 (40GB) GPUs.""",NVIDIA A100 SXM4 40 GB,16.0,,"In this paper, we introduce Janus, an autoregressive framework that unifies multimodal understanding and generation. Prior research often relies on a single visual encoder for both tasks, such as Chameleon. However, due to the differing levels of information granularity required by multimodal understanding and generation, this approach can lead to suboptimal performance, particularly in multimodal understanding. To address this issue, we decouple visual encoding into separate pathways, while still leveraging a single, unified transformer architecture for processing. The decoupling not only alleviates the conflict between the visual encoder's roles in understanding and generation, but also enhances the framework's flexibility. For instance, both the multimodal understanding and generation components can independently select their most suitable encoding methods. Experiments show that Janus surpasses previous unified model and matches or exceeds the performance of task-specific models. The simplicity, high flexibility, and effectiveness of Janus make it a strong candidate for next-generation unified multimodal models.",,Open weights (restricted use),,Confident,2025-02-03 14:55:11+00:00,"China,Hong Kong,China,China",DeepSeek-LLM-1.3b-base,9.05284e+20,311840000000000*16*168*3600*0.3 = 9.05284×10^20,,,,,,
Belle-whisper-larger-v3-turbo-zh ,Speech,KE Holdings Inc. (“Beike”),Industry,,2024-10-16,,https://huggingface.co/BELLE-2/Belle-whisper-large-v3-turbo-zh,,,,,,,,,,,,,,,,,,,,"Fine tune whisper-large-v3-turbo-zh to enhance Chinese speech recognition capabilities, Belle-whisper-large-v3-turbo-zh demonstrates a 24-64% relative improvement in performance to whisper-large-v3-turbo on Chinese ASR benchmarks, including AISHELL1, AISHELL2, WENETSPEECH, and HKUST.",,Open weights (unrestricted),,Unknown,2024-12-08 19:05:05+00:00,China,,,,,,,,,
Ministral 3B,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Abou Chahine, Alexandre Sablayrolles, Alexis Tacnet, Alodie Boissonnet, Alok Kothari, Amélie Héliou, Andy Lo, Anna Peronnin, Antoine Meunier, Antoine Roux, Antonin Faure, Aritra Paul, Arthur Darcet, Arthur Mensch, Audrey Herblin-Stoop, Augustin Garreau, Austin Birky, Avinash Sooriyarachchi, Baptiste Rozière, Barry Conklin, Bastien Bouillon, Blanche Savary de Beauregard, Carole Rambaud, Caroline Feldman, Charles de Freminville, Charline Mauro, Chih-Kuan Yeh, Chris Bamford, Clement Auguy, Corentin Heintz, Cyriaque Dubois, Devendra Singh Chaplot, Diego Las Casas, Diogo Costa, Eléonore Arcelin, Emma Bou Hanna, Etienne Metzger, Fanny Olivier Autran, Francois Lesage, Garance Gourdel, Gaspard Blanchet, Gaspard Donada Vidal, Gianna Maria Lengyel, Guillaume Bour, Guillaume Lample, Gustave Denis, Harizo Rajaona, Himanshu Jaju, Ian Mack, Ian Mathew, Jean-Malo Delignon, Jeremy Facchetti, Jessica Chudnovsky, Joachim Studnia, Justus Murke, Kartik Khandelwal, Kenneth Chiu, Kevin Riera, Leonard Blier, Leonard Suslian, Leonardo Deschaseaux, Louis Martin, Louis Ternon, Lucile Saulnier, Lélio Renard Lavaud, Sophia Yang, Margaret Jennings, Marie Pellat, Marie Torelli, Marjorie Janiewicz, Mathis Felardos, Maxime Darrin, Michael Hoff, Mickaël Seznec, Misha Jessel Kenyon, Nayef Derwiche, Nicolas Carmont Zaragoza, Nicolas Faurie, Nicolas Moreau, Nicolas Schuhl, Nikhil Raghuraman, Niklas Muhs, Olivier de Garrigues, Patricia Rozé, Patricia Wang, Patrick von Platen, Paul Jacob, Pauline Buche, Pavankumar Reddy Muddireddy, Perry Savas, Pierre Stock, Pravesh Agrawal, Renaud de Peretti, Romain Sauvestre, Romain Sinthe, Roman Soletskyi, Sagar Vaze, Sandeep Subramanian, Saurabh Garg, Soham Ghosh, Sylvain Regnier, Szymon Antoniak, Teven Le Scao, Theophile Gervet, Thibault Schueller, Thibaut Lavril, Thomas Wang, Timothée Lacroix, Valeriia Nemychnikova, Wendy Shang, William El Sayed, William Marshall",2024-10-16,"Un Ministral, des Ministraux
Introducing the world’s best edge models.",https://mistral.ai/news/ministraux/,,,,3000000000.0,,,,,,Unspecified unreleased,,,,,,,,,,"On the first anniversary of the release of Mistral 7B, the model that revolutionized independent frontier AI innovation for millions, we are proud to introduce two new state-of-the-art models for on-device computing and at-the-edge use cases. We call them les Ministraux: Ministral 3B and Ministral 8B.

These models set a new frontier in knowledge, commonsense, reasoning, function-calling, and efficiency in the sub-10B category, and can be used or tuned to a variety of uses, from orchestrating agentic workflows to creating specialist task workers. Both models support up to 128k context length (currently 32k on vLLM) and Ministral 8B has a special interleaved sliding-window attention pattern for faster and memory-efficient inference.

Ministral 3B is a state-of-the-art Small Language Model (SLM) optimized for edge computing and on-device applications. As it is designed for low-latency and compute-efficient inference, it it also the perfect model for standard GenAI applications that have real-time requirements and high-volume.",,API access,,Confident,2025-01-21 20:24:40+00:00,France,,,,,,,,,
Ministral 8B,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Abou Chahine, Alexandre Sablayrolles, Alexis Tacnet, Alodie Boissonnet, Alok Kothari, Amélie Héliou, Andy Lo, Anna Peronnin, Antoine Meunier, Antoine Roux, Antonin Faure, Aritra Paul, Arthur Darcet, Arthur Mensch, Audrey Herblin-Stoop, Augustin Garreau, Austin Birky, Avinash Sooriyarachchi, Baptiste Rozière, Barry Conklin, Bastien Bouillon, Blanche Savary de Beauregard, Carole Rambaud, Caroline Feldman, Charles de Freminville, Charline Mauro, Chih-Kuan Yeh, Chris Bamford, Clement Auguy, Corentin Heintz, Cyriaque Dubois, Devendra Singh Chaplot, Diego Las Casas, Diogo Costa, Eléonore Arcelin, Emma Bou Hanna, Etienne Metzger, Fanny Olivier Autran, Francois Lesage, Garance Gourdel, Gaspard Blanchet, Gaspard Donada Vidal, Gianna Maria Lengyel, Guillaume Bour, Guillaume Lample, Gustave Denis, Harizo Rajaona, Himanshu Jaju, Ian Mack, Ian Mathew, Jean-Malo Delignon, Jeremy Facchetti, Jessica Chudnovsky, Joachim Studnia, Justus Murke, Kartik Khandelwal, Kenneth Chiu, Kevin Riera, Leonard Blier, Leonard Suslian, Leonardo Deschaseaux, Louis Martin, Louis Ternon, Lucile Saulnier, Lélio Renard Lavaud, Sophia Yang, Margaret Jennings, Marie Pellat, Marie Torelli, Marjorie Janiewicz, Mathis Felardos, Maxime Darrin, Michael Hoff, Mickaël Seznec, Misha Jessel Kenyon, Nayef Derwiche, Nicolas Carmont Zaragoza, Nicolas Faurie, Nicolas Moreau, Nicolas Schuhl, Nikhil Raghuraman, Niklas Muhs, Olivier de Garrigues, Patricia Rozé, Patricia Wang, Patrick von Platen, Paul Jacob, Pauline Buche, Pavankumar Reddy Muddireddy, Perry Savas, Pierre Stock, Pravesh Agrawal, Renaud de Peretti, Romain Sauvestre, Romain Sinthe, Roman Soletskyi, Sagar Vaze, Sandeep Subramanian, Saurabh Garg, Soham Ghosh, Sylvain Regnier, Szymon Antoniak, Teven Le Scao, Theophile Gervet, Thibault Schueller, Thibaut Lavril, Thomas Wang, Timothée Lacroix, Valeriia Nemychnikova, Wendy Shang, William El Sayed, William Marshall",2024-10-16,"Un Ministral, des Ministraux
Introducing the world’s best edge models.",https://mistral.ai/news/ministraux/,,,,8000000000.0,"Architecture	Dense Transformer
Parameters	8,019,808,256
Layers	36
Heads	32",,,,,Unspecified unreleased,Trained on a large proportion of multilingual and code data,,,,,,,,,"On the first anniversary of the release of Mistral 7B, the model that revolutionized independent frontier AI innovation for millions, we are proud to introduce two new state-of-the-art models for on-device computing and at-the-edge use cases. We call them les Ministraux: Ministral 3B and Ministral 8B.

These models set a new frontier in knowledge, commonsense, reasoning, function-calling, and efficiency in the sub-10B category, and can be used or tuned to a variety of uses, from orchestrating agentic workflows to creating specialist task workers. Both models support up to 128k context length (currently 32k on vLLM) and Ministral 8B has a special interleaved sliding-window attention pattern for faster and memory-efficient inference.",,Open weights (non-commercial),,Confident,2025-01-21 20:24:43+00:00,France,,,,,,,,,
Marco-o1,,,,"Yu Zhao, Huifeng Yin, Bo Zeng, Hao Wang, Tianqi Shi, Chenyang Lyu, Longyue Wang, Weihua Luo, Kaifu Zhang
",2024-10-16,"Marco-o1: Towards Open Reasoning Models
for Open-Ended Solutions",https://arxiv.org/pdf/2411.14405,1.0,,,,,,,,,,,,,,,,,,,"Building on this momentum, Marco-o1 not only focuses on disciplines with standard answers, such as mathematics, physics, and coding—which are well-suited for reinforcement learning (RL)—but also places greater emphasis on open-ended resolutions. We aim to address the question: “Can the o1 model effectively generalize to broader domains where clear standards are absent and rewards are challenging to quantify?” Marco-o1 is powered by Chain-of-Thought (CoT) fine-tuning, Monte Carlo Tree Search (MCTS), reflection mechanisms, and innovative reasoning strategies—optimized for complex real-world problem-solving tasks. ",,,,Unverified,,,,,,,,,,,
CHAI-1,Biology,Chai discovery,Industry,"Jacques Boitreaud, Jack Dent, Matthew McPartlon, Joshua Meier, Vinicius Reis, Alex Rogozhnikov, Kevin Wu",2024-10-15,Introducing Chai-1: Decoding the molecular interactions of life,"https://www.chaidiscovery.com/blog/introducing-chai-1
https://www.biorxiv.org/content/10.1101/2024.10.10.615955v2",0.0,SOTA improvement,Matches or beats AF3 on Ligand PoseBusters,,,7.7605724e+21,,,"From paper: 128 A100s for 30 days; assumptions: 30% utilization rate, FP16 precision","PDB (Protein Data Bank), AlphaFold database (AFDB)",,,,,720.0,Taken from paper: 128 A100s for 30 days,NVIDIA A100,128.0,,"We introduce Chai-1, a multi-modal foundation model for molecular structure prediction that performs at the state-of-the-art across a variety of tasks relevant to drug discovery. Chai-1 can optionally be prompted with experimental restraints (e.g. derived from wet-lab data) which boosts
performance by double-digit percentage points. Chai-1 can also be run in single-sequence mode without MSAs while preserving most of its performance. We release Chai-1 model weights and inference code as a Python package for non-commercial use and via a web interface where it can be used for free including for commercial drug discovery purposes.",,Open weights (non-commercial),,Confident,2024-11-08 15:52:57+00:00,United States of America,,,,,,,128.0,Taken from paper,
Pika 1.5,Video,Pika Labs,Industry,,2024-10-15,Pika 1.5: Transforming Text to Video with Enhanced AI Features,https://pikartai.com/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Pika Labs has recently unveiled Pika 1.5, the latest iteration of their AI video generator, designed to push the boundaries of creativity and realism in video production. This new version introduces groundbreaking tools and enhancements, offering both amateurs and professionals a more dynamic and user-friendly platform for creating high-quality, visually engaging videos. From advanced special effects to hyper-realistic animations, Pika 1.5 opens up new possibilities for digital storytelling.",,Hosted access (no API),,Unknown,2024-11-16 01:08:29+00:00,United States of America,,,,,,,,,
Firefly Video,Video,Adobe,Industry,Adobe,2024-10-14,"Adobe Launches Firefly Video Model and Enhances Image, Vector and Design Models",https://news.adobe.com/news/2024/10/101424-adobe-launches-firefly-video-model,,,"Possible it will see significant usage. The Firefly image generator has created 13B images since March 2023; paid users get 100 generations per month (and can continue at a slower rate after that). Assuming an average of 100 monthly generations per user, that's around 6.7M monthly average users across 19.5 months. Video generation is probably a smaller fraction of Adobe users, at least for now.",,,,,,,,,,,,,,,,,,,Hosted access (no API),,Unknown,2024-10-17 17:44:01+00:00,United States of America,,,,,,,,,
MolPath,"Biology,Materials science","Southwest Petroleum University,East China Normal University","Academia,Academia","Honghao Wang, Acong Zhang, Yuan Zhong, Junlei Tang, Kai Zhang, Ping Li",2024-10-13,Chain-aware graph neural networks for molecular property prediction,https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btae574/7818417,0.0,,,,,,,,,,,16001.000000000013,"ESOL: 1,128 × 0.8 = 902
FreeSolv: 642 × 0.8 = 514
Lipo: 4,200 × 0.8 = 3,360
BBBP: 2,039 × 0.8 = 1,631
Tox21: 7,831 × 0.8 = 6,265
SIDER: 1,427 × 0.8 = 1,142
ClinTox: 1,478 × 0.8 = 1,182
BACE: 1,513 × 0.8 = 1,210

Total: 902 + 514 + 3,360 + 1,631 + 6,265 + 1,142 + 1,182 + 1,210 = 16,206

Final result: 1.6 × 10⁴",,,,,,,"Motivation: Predicting the properties of molecules is a fundamental problem in drug design and discovery, while how to learn effective feature representations lies at the core of modern deep learning based prediction methods. Recent progress shows expressive power of graph neural networks (GNNs) in capturing structural information for molecular graphs. However, we find that most molecular graphs exhibit low clustering along with dominating chains. Such topological characteristics can induce feature squashing during message passing and thus impair the expressivity of conventional GNNs. Results: Aiming at improving node features' expressiveness, we develop a novel chain-aware graph neural network model, wherein the chain structures are captured by learning the representation of the center node along the shortest paths starting from it, and the redundancy between layers are mitigated via initial residual difference connection (IRDC). Then the molecular graph is represented by attentive pooling of all node representations. Compared to standard graph convolution, our chain-aware learning scheme offers a more straightforward feature interaction between distant nodes, thus it is able to capture the information about long-range dependency. We provide extensive empirical analysis on real-world datasets to show the outperformance of the proposed method.",,,,Unverified,2025-01-30 05:04:51+00:00,"China,China",,,,,,,,,
RNADiffFold,Biology,"Hangzhou Institute of Medicine,Zhejiang University,University of Chinese Academy of Sciences","Academia,Academia","Zhen Wang, Yizhen Feng, Qingwen Tian, Ziqi Liu, Pengju Yan, Xiaolin Li",2024-10-13,RNADiffFold: Generative RNA Secondary Structure Prediction using Discrete Diffusion Models,https://www.biorxiv.org/content/10.1101/2024.05.28.596177v2.abstract,0.0,,,,,1e+19,,,"1. Hardware setup: 1x NVIDIA A40 PCIe GPU (1.50×10¹⁴ FLOP/s per GPU)

2. Training duration: Estimated 20 hours (72,000 seconds)
   Calculation: 100 epochs × (135,000 sequences/32 batch size) × 0.1s per step, rounded up

3. Utilization rate: 40% (0.4)

4. Final calculation:
   1.50×10¹⁴ FLOP/s × 1 GPU × 0.4 utilization × 72,000s = 4.32×10¹⁹ FLOPs
   (Rounded to 1.0×10¹⁹ FLOPs)",,,135000.99999999997,"RNAStrAlign (30,451) + bpRNA TR0 (102,318) + Mutate-seq (2,717) = 135,486 unique sequences

30,451 + 102,318 + 2,717 = 135,486

Final result: 135,486 (1.35e5)",,,,,,,"RNA molecules are essential macromolecules that perform diverse biological functions in living beings. Precise prediction
of RNA secondary structures is instrumental in deciphering their complex three-dimensional architecture and functionality.
Traditional methodologies for RNA structure prediction, including energy-based and learning-based approaches, often
depict RNA secondary structures from a static perspective and rely on stringent a priori constraints. Inspired by the
success of diffusion models, in this work, we introduce RNADiffFold, an innovative generative prediction approach
of RNA secondary structures based on multinomial diffusion. We reconceptualize the prediction of contact maps as
akin to pixel-wise segmentation and accordingly train a denoising model to refine the contact maps starting from a
noise-infused state progressively. We also devise a potent conditioning mechanism that harnesses features extracted from
RNA sequences to steer the model toward generating an accurate secondary structure. These features encompass one-hot
encoded sequences, probabilistic maps generated from a pre-trained scoring network, and embeddings and attention
maps derived from RNA-FM. Experimental results on both within- and cross-family datasets demonstrate RNADiffFold’s
competitive performance compared with current state-of-the-art methods. Additionally, RNADiffFold has shown a notable
proficiency in capturing the dynamic aspects of RNA structures, a claim corroborated by its performance on datasets
comprising multiple conformations.",,,,Unverified,2025-02-14 19:00:10+00:00,"China,China,China",,,,,,,,,
PROPERMAB,Biology,Regeneron,Industry,"Bian Li, Shukun Luo, Wenhua Wang, Jiahui Xu, Dingjiang Liu, Mohammed Shameem, John Mattila, Matthew Franklin, Peter G. Hawkins, Gurinder S. Atwal",2024-10-12,PROPERMAB: an integrative framework for in silico prediction of antibody developability using machine learning,https://www.biorxiv.org/content/10.1101/2024.10.10.616558v1,0.0,,,,,,,,,,,12000.999999999996,"Feature Prediction: 12,000 mAbs
HIC Retention Time: 135 mAbs
Viscosity Prediction: 60 mAbs

Total = 12,000 + 135 + 60 = 12,195 mAbs (1.2e4)",,,,,,,"Selection of lead therapeutic molecules is often driven predominantly by pharmacological efficacy and safety. Candidate developability, such as biophysical properties that affect the formulation of the molecule into a product, is usually evaluated only toward the end of the drug development pipeline. The ability to evaluate developability properties early in the process of antibody therapeutic development could accelerate the timeline from discovery to clinic and save considerable resources. In silico predictive approaches, such as machine learning models, which map molecules to predictions of developability properties could offer a cost-effective and high-throughput alternative to experiments for antibody developability assessment. We developed a computational framework, PROPERMAB, for large-scale and efficient in silico prediction of developability properties for monoclonal antibodies, using custom molecular features and machine learning modeling. We demonstrate the power of PROPERMAB by using it to develop models to predict antibody hydrophobic interaction chromatography retention time and high-concentration viscosity. We further show that structure-derived features can be rapidly and accurately predicted directly from sequences by pre-training simple models for molecular features, thus providing the ability to scale these approaches to repertoire-scale sequence datasets.",,,,Unverified,2025-01-30 05:04:43+00:00,United States of America,,,,,,,,,
Yuel 2,Biology,,,"Jian Wang, Nikolay V. Dokholyan",2024-10-12,Leveraging Transfer Learning for Predicting Protein-Small Molecule Interactions,https://doi.org/10.1101/2024.10.08.617219,0.0,,,,,,,,,,,250000.99999999988,"Pre-training data = 250,000 protein-ligand pairs

250,000 = 2.5e5 unique data points",,,,,,,"A complex web of intermolecular interactions defines and regulates biological processes.
Understanding this web has been particularly challenging because of the sheer number of actors
in biological systems: ~104 proteins in a typical human cell offer a plausible 108 interactions. This
number grows rapidly if we consider metabolites, drugs, nutrients, and other biological molecules.
The relative strength of interactions also critically affects these biological processes. However,
the small and often incomplete datasets (103-104 protein-ligand interactions) traditionally used for
binding affinity predictions limit the ability to capture the full complexity of these interactions. To
overcome this challenge, we developed Yuel 2, a novel neural network-based approach that
leverages transfer learning to address the limitations of small datasets. Yuel 2 is pre-trained on a
large-scale dataset to learn intricate structural features and then fine-tuned on specialized
datasets like PDBbind to enhance the predictive accuracy and robustness. We show that Yuel 2
predicts multiple binding affinity metrics – Kd, Ki, IC50, and EC50 – between proteins and small
molecules, offering a comprehensive representation of molecular interactions crucial for drug
design and development.",,,,Unverified,2025-01-30 05:04:54+00:00,,,,,,,,,,
vScreenML 2.0,Biology,"Fox Chase Cancer Center,Temple University School of Pharmacy",Academia,"Grigorii V. Andrianov, Emeline Haroldsen, John Karanicolas",2024-10-12,vScreenML v2.0: Improved Machine Learning Classification for Reducing False Positives in Structure-Based Virtual Screening,https://doi.org/10.1101/2024.10.08.617248,0.0,,,,,,,,,,,,,,,,,,,"Enthusiastic adoption of make-on-demand chemical libraries for virtual screening has highlighted the need for methods that deliver improved hit-finding discovery rates. Traditional virtual screening methods are often inaccurate, with most compounds nominated in a virtual screen not engaging the intended target protein to any detectable extent. Emerging machine learning approaches have made significant progress in this regard, including our previously-described tool vScreenML. Broad adoption of vScreenML was hindered by its challenging usability and dependencies on certain obsolete or proprietary software packages. Here, we introduce vScreenML 2.0 (https://github.com/gandrianov/vScreenML2) to address each of these limitations with a streamlined Python implementation. Through careful benchmarks, we show that vScreenML 2.0 outperforms other widely-used tools for virtual screening hit discovery.",,,,Unverified,2024-11-28 06:09:52+00:00,"United States of America,United States of America",,,,,,,,,
EvoBind2,Biology,"Stockholm University,Science for Life Laboratory","Academia,Research collective","Qiuzhen Li,  Efstathios Nikolaos Vlachos,  Patrick Bryant",2024-10-12,Design of linear and cyclic peptide binders of different lengths from protein sequence information,https://www.biorxiv.org/content/10.1101/2024.06.20.599739v2.abstract,,,,,,,,,,,,,,,,,,,,"Structure prediction technology has revolutionised the field of protein design, but key questions such as how to design new functions remain. Many proteins exert their functions through interactions with other proteins, and a significant challenge is designing these interactions effectively. While most efforts have focused on larger, more stable proteins, shorter peptides offer advantages such as lower manufacturing costs, reduced steric hindrance, and the ability to traverse cell membranes when cyclized. However, less structural data is available for peptides and their flexibility makes them harder to design. Here, we present a method to design both novel linear and cyclic peptide binders of varying lengths based solely on a protein target sequence. Our approach does not specify a binding site or the length of the binder, making the procedure completely blind. We demonstrate that linear and cyclic peptide binders of different lengths can be designed with nM affinity in a single shot, and adversarial designs can be avoided through orthogonal in silico evaluation, tripling the success rate. Our protocol, EvoBind2 is freely available https://github.com/patrickbryant1/EvoBind.",,,,Unverified,2024-11-23 21:22:53+00:00,"Sweden,Sweden",,,,,,,,,
ALICE,Biology,"Nanhu Brain-Computer Interface Institute,Lingang Laboratory,Medical School of Nantong University,Zhejiang University School of Medicine",Academia,"Hanyu Zheng, Binjie Guo, Aisheng Mo, Hongyan Wei, Yile Wu, Xurong Lin, Haohan Jiang, Hengguang Li, Yunshuo Zhang, Zhuoyuan Song, Xuebin Ni, Yan Huang, Xiaosong Gu, Bin Yu, Ningtao Cheng, Xuhua Wang",2024-10-11,Mapping AAV capsid sequences to functions through function-guided in silico evolution,https://www.biorxiv.org/content/10.1101/2024.10.11.617764v1,0.0,,,,,,,,,,,20230000.999999985,2.89e6 sequences × 7 residues/sequence = 2.023e7 datapoints,,,,,,,"Artificial intelligence (AI) has been suggested to facilitate time- and cost-effective functional engineering of adeno-associated virus (AAV) capsid sequences. Nevertheless, an AI-empowered approach to identify AAV capsid sequence-to-multifunction relationships remains elusive. To overcome this challenge, we propose a machine-intelligent design method to map an AAV capsid sequence to multiple functions, thereby enabling direct in silico engineering of AAV capsids. To fuse multiple functions into a single capsid sequence, a heuristic algorithm coupled with contrastive learning and reinforcement learning, named function-guided evolution (FE), was introduced to steer further evolution of the high-performing capsid sequences generated by a naive language model toward functions. We then illustrated the evolutionary mechanism of the FE approach for function-guided generation of capsid sequences. Further optimization steers the evolution toward desired functions within a function-guided landscape. Despite the constraint of datasets of only 129 entries, we successfully constructed a model to map AAV capsid sequences to multiple functions of improved viability coupled with central nervous system (CNS) tropism. In vivo experiments confirmed that two of the top eight engineered variants exhibited enhanced viability and remarkable CNS tropism. This interpretable machine-intelligent design method represents a pioneering effort enabling direct in silico engineering of AAV capsids for effective gene delivery",,,,Unverified,2025-01-30 05:04:20+00:00,"China,China,China,China",,,,,,,,,
Deep Learning Enabled Discovery of Kinase Drug Targets in Pharos,Biology,"West Virginia University,University of New Mexico","Academia,Academia","Ádám M. Halász, Srinjoy Das, Stephen L. Mathias, Jeremy S. Edwards",2024-10-11,DEEP LEARNING ENABLED DISCOVERY OF KINASE DRUG TARGETS IN PHAROS,https://doi.org/10.1101/2024.10.08.612754,0.0,,,,,,,,,,,50000.99999999997,"Number of data points ≈ 50,000 unique kinase-ligand affinity pairs

Details:
- Original data: 80,878 kinase-ligand affinity values
- Preprocessed to: 455 kinases × 5,275 ligands matrix
- Final training data: ~50,000 non-zero entries",,,,,,,"We use machine learning with a standardized molecular structure and gene ontology data to predict ligand
interactions for a set of human kinases. We realize this by leveraging information from the TCRD / Pharos
database, developed and maintained within the Illuminating the Druggable Genome (IDG) project.
Pharos collects relevant biochemical and clinically relevant information of a large set of biologically
important (human) proteins from publicly available sources, including scientific publications as well as
specialized databases. The 635 kinases listed in Pharos are classified into levels reflecting the relative
amount and type of accumulated information. Importantly, molecular structure and Gene Ontology
annotations are available for the entire set, but only 455 of the kinases have recorded ligand affinity data.
We developed a deep neural network-based framework to predict the ligand affinity profile for kinases
using generally available information (molecular structure and Gene Ontology annotations) as input. The
input data is organized into a 2,770 – dimensional vector with binary entries. The output data are predicted
affinity values for interactions between the respective kinase and possible ligands.
To address the very large number of possible ligands (58,800) and the sparsity of available binding data,
we organized the ligands into 5,275 clusters based on structural similarity measures. Our model framework
is trained to predict likely interactions between kinases and these ligand clusters.
We aim to identify sets of likely ligand partners associated with high predicted relative affinities for a given
kinase. We measure performance by evaluating the efficiency in identifying known ligand partners for
documented kinases that were not included in the training data. Our results indicate that our model
framework can identify sets of ligands that will contain a significant fraction of the correct (known) ligand
partners.",,,,Unverified,2025-01-30 05:04:36+00:00,"United States of America,United States of America",,,,,,,,,
T2V-Turbo-v2,Video,"University of California Santa Barbara (UCSB),University of California Los Angeles (UCLA),Amazon,University of Waterloo","Academia,Academia,Industry,Academia","Jiachen Li, Qian Long, Jian Zheng, Xiaofeng Gao, Robinson Piramuthu, Wenhu Chen, William Yang Wang",2024-10-11,"T2V-Turbo-v2: Enhancing Video Generation Model Post-Training through Data, Reward, and Conditional Guidance Design",https://arxiv.org/abs/2410.05677,,,,,"""We distill our T2V-Turbo-v2 from VideoCrafter2 (Chen et al., 2024a).""",,,,,"WebVid-10M,VidGen-1M","""We train on a mixed dataset VG + WV, which consists of equal portions of VidGen-1M (Tan et al., 2024) and WebVid-10M (Bain et al., 2021). """,,8K gradient steps without gradient accumulation.,,,,NVIDIA A100,8.0,,"In this paper, we focus on enhancing a diffusion-based text-to-video (T2V) model during the post-training phase by distilling a highly capable consistency model from a pretrained T2V model. Our proposed method, T2V-Turbo-v2, introduces a significant advancement by integrating various supervision signals, including high-quality training data, reward model feedback, and conditional guidance, into the consistency distillation process. Through comprehensive ablation studies, we highlight the crucial importance of tailoring datasets to specific learning objectives and the effectiveness of learning from diverse reward models for enhancing both the visual quality and text-video alignment. Additionally, we highlight the vast design space of conditional guidance strategies, which centers on designing an effective energy function to augment the teacher ODE solver. We demonstrate the potential of this approach by extracting motion guidance from the training datasets and incorporating it into the ODE solver, showcasing its effectiveness in improving the motion quality of the generated videos with the improved motion-related metrics from VBench and T2V-CompBench. Empirically, our T2V-Turbo-v2 establishes a new state-of-the-art result on VBench, with a Total score of 85.13, surpassing proprietary systems such as Gen-3 and Kling.",,Open weights (unrestricted),,Unknown,2024-11-17 22:23:38+00:00,"United States of America,United States of America,United States of America,Canada",VideoCrafter2,,,,,,,,
Baichuan-Omni,,,,"Yadong Li, Haoze Sun, Mingan Lin, Tianpeng Li, Guosheng Dong, Tao Zhang, Bowen Ding, Wei Song, Zhenglin Cheng, Yuqi Huo, Song Chen, Xu Li, Da Pan, Shusen Zhang, Xin Wu, Zheng Liang, Jun Liu, Tao Zhang, Keer Lu, Yaqi Zhao, Yanjun Shen, Fan Yang, Kaicheng Yu, Tao Lin, Jianhua Xu, Zenan Zhou",2024-10-11,"Baichuan-Omni Technical Report
",https://arxiv.org/html/2410.08565v1,1.0,,,7000000000.0,,,,,,,,,,,,,,,,"In this paper, we introduce Baichuan-Omni , the first open-source 7B Multimodal Large Language Model (MLLM) adept at concurrently processing and analyzing modalities of image, video, audio, and text, while delivering an advanced multimodal interactive experience and strong performance. We propose an effective multimodal training schema starting with 7B model and proceeding through two stages of multimodal alignment and multitask fine-tuning across audio, image, video, and text modal.",,,,Unverified,,,,,,,,,,,
ProteinChat,Biology,"University of California San Diego,BioMap Research,The Scripps Research Institute,Mohamed bin Zayed University of Artificial Intelligence (MBZUAI)","Academia,Industry,Academia","Mingjia Huo, Han Guo, Xingyi Cheng, Digvijay Singh, Hamidreza Rahmani, Shen Li, Philipp Gerlof, Trey Ideker, Danielle A. Grotjahn, Elizabeth Villa, Le Song, Pengtao Xie",2024-10-10,Multi-Modal Large Language Model Enables Protein Function Prediction,https://www.researchsquare.com/article/rs-4941886/v1,2.0,,,,,1e+20,,,"1. Hardware setup: 8x NVIDIA A100 GPUs (3.12×10¹⁴ FLOP/s per GPU in fp16_tensor mode)

2. Training duration: Estimated using 210,000 steps × 0.1 seconds/step = 21,000 seconds (≈5.83 hours)

3. Utilization rate: 40%

4. Final calculation:
   * Per GPU effective: 3.12×10¹⁴ × 0.4 = 1.248×10¹⁴ FLOP/s
   * All GPUs: 1.248×10¹⁴ × 8 = 9.984×10¹⁴ FLOP/s
   * Total: 9.984×10¹⁴ FLOP/s × 21,000 seconds = 2.09664×10¹⁹ FLOPs
   * Adjusted estimate: 1×10²⁰ FLOPs",,,1050000001.0000012,1.5M triplets * (600 protein_tokens + 100 prompt_answer_tokens) = 1.5M * 700 = 1.05B tokens,,,,,,,"Predicting the functions of proteins can greatly accelerate biological discovery and applications, where deep learning methods have recently shown great potential. However, these methods predominantly predict protein functions as discrete categories, which fails to capture the nuanced and complex nature of protein functions. Furthermore, existing methods require the development of separate models for each prediction task, a process that can be both resource-heavy and time-consuming. Here, we present ProteinChat, a versatile, multi-modal large language model that takes a protein's amino acid sequence as input and generates comprehensive narratives describing its function. ProteinChat is trained using over 1,500,000 (protein, prompt, answer) triplets curated from the Swiss-Prot dataset, covering diverse functions. This novel model can universally predict a wide range of protein functions, all within a single, unified framework. Furthermore, ProteinChat supports interactive dialogues with human users, allowing for iterative refinement of predictions and deeper exploration of protein functions. Our experimental results, evaluated through both human expert assessment and automated metrics, demonstrate that ProteinChat outperforms general-purpose LLMs like GPT-4, one of the flagship LLMs, by over ten-fold. In addition, ProteinChat exceeds or matches the performance of task-specific prediction models.",,,,Unverified,2025-02-14 19:00:35+00:00,"United States of America,China,United States of America,United Arab Emirates",,,,,,,,,
HaloClass,Biology,"University of California Davis,Pt. Jawahar Lal Nehru Memorial Medical College,Purdue University","Academia,Academia","Kush Narang, Abhigyan Nath, William Hemstrom, Simon K. S. Chu",2024-10-10,HaloClass: Salt-Tolerant Protein Classification with Protein Language Models,https://www.researchsquare.com/article/rs-5027369/v1,,,,,,,,,,,,28031.00000000001,"Initial sequences: 38,361
After clustering: 28,030
Training split (90%): 28,030 × 0.9 = 25,227 sequences

Final estimate: 2.803e4",,,,,,,"Salt-tolerant proteins, also known as halophilic proteins, have unique adaptations to function in high-salinity environments. These proteins have naturally evolved in extremophilic organisms, and more recently, are being increasingly applied as enzymes in industrial processes. Due to an abundance of salt-tolerant sequences and a simultaneous lack of experimental structures, most computational methods to predict stability are sequence-based only. These approaches, however, are hindered by a lack of structural understanding of these proteins. Here, we present HaloClass, an SVM classifier that leverages ESM-2 protein language model embeddings to accurately identify salt-tolerant proteins. On a newer and larger test dataset, HaloClass outperforms existing approaches when predicting the stability of never-before-seen proteins that are distal to its training set. Finally, on a mutation study that evaluated changes in salt tolerance based on single- and multiple-point mutants, HaloClass outperforms existing approaches, suggesting applications in the guided design of salt-tolerant enzymes.",,,,Unverified,2025-01-30 05:04:30+00:00,"United States of America,India,United States of America",,,,,,,,,
IEV2MOL,Biology,Tokyo Institute of Technology,Academia,"Mami Ozawa, Shogo Nakamura, Nobuaki Yasuo, Masakazu Sekijima",2024-10-10,IEV2Mol: Molecular Generative Model Considering Protein-Ligand Interaction Energy Vectors,https://pubs.acs.org/doi/full/10.1021/acs.jcim.4c00842,,,,,,1e+20,,,"1. Hardware: 1x RTX 4090 (3.30×10¹⁴ FLOP/s) + 4x TESLA P100 (1.5×10¹⁴ FLOP/s each)
2. Training duration: 2 days (172,800s) - estimated based on training phases
3. Utilization: 40%
4. Calculation: Total hardware (9.3×10¹⁴ FLOP/s) × Utilization (0.4) × Duration (172,800s) = 6.43×10¹⁹ FLOPs (rounded to 1.0×10²⁰)",,,2960001.0000000023,"Main dataset: 981,139 compounds × 3 proteins = 2,943,417 points
Additional datasets: 8,350 + 6,640 + 3,576 = 18,566 points
Total: 2,943,417 + 18,566 = 2,961,983 points ≈ 2.96e6",,,,,,,"Generating drug candidates with desired protein–ligand interactions is a significant challenge in structure-based drug design. In this study, a new generative model, IEV2Mol, is proposed that incorporates interaction energy vectors (IEVs) between proteins and ligands obtained from docking simulations, which quantitatively capture the strength of each interaction type, such as hydrogen bonds, electrostatic interactions, and van der Waals forces. By integrating this IEV into an end-to-end variational autoencoder (VAE) framework that learns the chemical space from SMILES and minimizes the reconstruction error of the SMILES, the model can more accurately generate compounds with the desired interactions. To evaluate the effectiveness of IEV2Mol, we performed benchmark comparisons with randomly selected compounds, unconstrained VAE models (JT-VAE), and compounds generated by RNN models based on interaction fingerprints (IFP-RNN). The results show that the compounds generated by IEV2Mol retain a significantly greater percentage of the binding mode of the query structure than those of the other methods. Furthermore, IEV2Mol was able to generate compounds with interactions similar to those of the input compounds, regardless of structural similarity. The source code and trained models for IEV2Mol, JT-VAE, and IFP-RNN designed for generating compounds active against the DRD2, AA2AR, and AKT1, as well as the data sets (DM-QP-1M, active compounds to each protein, and ChEMBL33) utilized in this study, are released under the MIT License and available at https://github.com/sekijima-lab/IEV2Mol.",,,,Unverified,2025-02-14 19:00:17+00:00,Japan,,,,,,,,,
ProCALM,Biology,"Profluent Bio,California Institute of Technology","Industry,Academia","Jason Yang, Aadyot Bhatnagar, Jeffrey A. Ruffolo, Ali Madani",2024-10-09,Conditional Enzyme Generation Using Protein Language Models with Adapters,https://www.arxiv.org/abs/2410.03634,0.0,,,,,1.7999999999999869e+19,,,"1. Hardware: 4x NVIDIA A100 GPUs (3.12E14 FLOP/s per GPU)
2. Duration: 10 hours (directly provided) = 36,000 seconds
3. Utilization: 40%
4. Calculation: 3.12E14 FLOP/s × 4 GPUs × 36,000s × 0.4 = 1.8E19 FLOPs",,,60000001.00000001,"6 × 10^7 = 60,000,000 tokens, only first epoch of Swissprot-1.5B version considered

No additional calculations were needed - the estimate was taken directly from the epoch size.",,,,,,,"The conditional generation of proteins with desired functions and/or properties is a key goal for generative models. Existing methods based on prompting of language models can generate proteins conditioned on a target functionality, such as a desired enzyme family. However, these methods are limited to simple, tokenized conditioning and have not been shown to generalize to unseen functions. In this study, we propose ProCALM (Protein Conditionally Adapted Language Model), an approach for the conditional generation of proteins using adapters to protein language models. Our specific implementation of ProCALM involves finetuning ProGen2 to incorporate conditioning representations of enzyme function and taxonomy. ProCALM matches existing methods at conditionally generating sequences from target enzyme families. Impressively, it can also generate within the joint distribution of enzymatic function and taxonomy, and it can generalize to rare and unseen enzyme families and taxonomies. Overall, ProCALM is a flexible and computationally efficient approach, and we expect that it can be extended to a wide range of generative language models.",,,,Unverified,2025-02-14 19:00:41+00:00,"United States of America,United States of America",,,,,,,,,
SCUBA-D,Biology,"University of Science and Technology of China,Oristruct Biotech Company,iFLYTEK Research","Academia,Industry,Industry","Yufeng Liu, Sheng Wang, Jixin Dong, Linghui Chen, Xinyu Wang, Lei Wang, Fudong Li, Chenchen Wang, Jiahai Zhang, Yuzhu Wang, Si Wei, Quan Chen, Haiyan Liu ",2024-10-09,De novo protein design with a denoising diffusion network independent of pretrained structure prediction models,https://www.nature.com/articles/s41592-024-02437-w,0.0,,,,,,,,,,,,,,,,,,,"The recent success of RFdiffusion, a method for protein structure design with a denoising diffusion probabilistic model, has relied on fine-tuning the RoseTTAFold structure prediction network for protein backbone denoising. Here, we introduce SCUBA-diffusion (SCUBA-D), a protein backbone denoising diffusion probabilistic model freshly trained by considering co-diffusion of sequence representation to enhance model regularization and adversarial
losses to minimize data-out-of-distribution errors. While matching the performance of the pretrained RoseTTAFold-based RFdiffusion in generating experimentally realizable protein structures, SCUBA-D readily generates protein structures with not-yet-observed overall folds that are different from those predictable with RoseTTAFold. The accuracy of SCUBA-D was confirmed by the X-ray structures of 16 designed proteins and a protein complex, and by experiments validating designed heme-binding proteins and Ras-binding proteins. Our work shows that deep generative models of images or texts can be fruitfully extended to complex physical objects like protein structures by addressing outstanding issues such as the data-out-of-distribution errors.",,,,Unknown,2024-11-18 18:30:04+00:00,"China,United Kingdom of Great Britain and Northern Ireland,China",,,,,,,,,
AF_unmasked,Biology,"Linköping University,Uppsala University,Stockholm University","Academia,Academia,Academia","Claudio Mirabello, Björn Wallner, Björn Nystedt, Stavros Azinas, Marta Carroni",2024-10-09,Unmasking AlphaFold to integrate experiments and predictions in multimeric complexes,https://www.nature.com/articles/s41467-024-52951-w,3.0,,,,,,,,,,,,,,,,,,,"Since the release of AlphaFold, researchers have actively refined its predictions and attempted to integrate it into existing pipelines for determining protein structures. These efforts have introduced a number of functionalities and optimisations at the latest Critical Assessment of protein Structure Prediction edition (CASP15), resulting in a marked improvement in the prediction of multimeric protein structures. However, AlphaFold’s capability of predicting large protein complexes is still limited and integrating experimental data in the prediction pipeline is not straightforward. In this study, we introduce AF_unmasked to overcome these limitations. Our results demonstrate that AF_unmasked can integrate experimental information to build larger or hard to predict protein assemblies with high confidence. The resulting predictions can help interpret and augment experimental data. This approach generates high quality (DockQ score > 0.8) structures even when little to no evolutionary information is available and imperfect experimental structures are used as a starting point. AF_unmasked is developed and optimised to fill incomplete experimental structures (structural inpainting), which may provide insights into protein dynamics. In summary, AF_unmasked provides an easy-to-use method that efficiently integrates experiments to predict large protein complexes more confidently.",,,,Unverified,2024-10-22 14:11:27+00:00,"Sweden,Sweden,Sweden",,,,,,,,,
Palmyra X 004,Language,Writer,Industry,Sam Julien / Writer,2024-10-09,Introducing actions with Palmyra X 004,https://writer.com/engineering/actions-with-palmyra-x-004/,,SOTA improvement,SOTA on Berkeley’s Tool Calling Leaderboard,150000000000.0,Source: https://venturebeat.com/ai/writers-palmyra-x-004-takes-the-lead-in-ai-function-calling-surpassing-tech-giants/,,,,,,,,,,,,,,Supervised,,,API access,,,2025-01-06 20:34:07+00:00,United States of America,,,,,,,,,
Genesis,Biology,"Ecole Polytechnique F´ed´erale de Lausanne (EPFL),Swiss Institute of Bioinformatics,Imperial College London,University of Oxford,Prescient Design","Academia,Academia,Academia,Industry","Zander Harteveld, Alexandra Van Hall-Beauvais, Irina Morozova, Joshua Southern, Casper Goverde, Sandrine Georgeon, Stéphane Rosset, Michëal Defferrard, Andreas Loukas, Pierre Vandergheynst, Michael M. Bronstein, Bruno E. Correia",2024-10-08,Exploring “dark-matter” protein folds using deep learning,https://www.cell.com/cell-systems/fulltext/S2405-4712(24)00270-9,4.0,,,,,,,,,,,40701.0,"According to the description:
40,726 pairs of corrupted and native protein structures
40,726 = 4.07e4

Note: While training was done over 300 epochs, only unique datapoints are counted.

Final calculation: 4.07e4",,,,,,,"De novo protein design explores uncharted sequence and structure space to generate novel proteins not sampled by evolution. A main challenge in de novo design involves crafting “designable” structural templates to guide the sequence searches toward adopting target structures. We present a convolutional variational autoencoder that learns patterns of protein structure, dubbed Genesis. We coupled Genesis with trRosetta to design sequences for a set of protein folds and found that Genesis is capable of reconstructing native-like distance and angle distributions for five native folds and three novel, the so-called “dark-matter” folds as a demonstration of generalizability. We used a high-throughput assay to characterize the stability of the designs through protease resistance, obtaining encouraging success rates for folded proteins. Genesis enables exploration of the protein fold space within minutes, unrestricted by protein topologies. Our approach addresses the backbone designability problem, showing that small neural networks can efficiently learn structural patterns in proteins. A record of this paper’s transparent peer review process is included in the supplemental information.",,,,Unverified,2025-01-30 05:04:42+00:00,"Switzerland,Switzerland,United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
CLEAN-Contact,Biology,,,"Yuxin Yang, Abby Jerger, Song Feng, Zixu Wang, Christina Brasfield, Margaret S. Cheung, Jeremy Zucker, Qiang Guan",2024-10-08,CLEAN-Contact: Contrastive Learning-enabled Enzyme Functional Annotation Prediction with Structural Inference,https://www.biorxiv.org/content/10.1101/2024.05.14.594148v2.abstract,0.0,,,,,,,,,,,224742.9999999999,"224,742 = 2.24742e5 datapoints (unique protein sequences with contact maps from Swiss-Prot database)",,,,,,,,,,,Unverified,2025-01-30 05:04:22+00:00,,,,,,,,,,
SO3LR,Biology,"University of Luxembourg,Technische Universitat Berlin,Berlin Institute for the Foundations of Learning and Data,DeepMind,Max Planck Institute for Informatics,Korea University","Academia,Research collective,Industry,Academia,Academia","Adil Kabylda, J. Thorben Frank, Sergio Suarez Dou, Almaz Khabibrakhmanov, Leonardo Medrano Sandonas, Oliver T. Unke, Stefan Chmiela, Klaus-Robert Muller, Alexandre Tkatchenko",2024-10-08,Molecular Simulations with a Pretrained Neural Network and Universal Pairwise Force Fields,https://chemrxiv.org/engage/chemrxiv/article-details/6704263051558a15ef6478b6,0.0,,,,,1.2000000000000008e+20,,,"1. Hardware: 1x NVIDIA H100 SXM5 80GB (9.90 x 10^14 FLOP/s)
2. Training duration: 86 hours (provided directly) = 309,600 seconds
3. Utilization: 40%
4. Calculation: 9.90 x 10^14 FLOP/s × 1 GPU × 309,600s × 0.4 = 1.2 × 10^20 FLOPs",,,4000001.000000002,"GEMS fragments: 2,700,000
QM7-X molecules: 1,000,000
AQM gas-phase drugs: 60,000
SPICE dipeptides: 33,000
DES molecular dimers: 15,000
Gas-phase water clusters: 10,000

2,700,000 + 1,000,000 + 60,000 + 33,000 + 15,000 + 10,000 = 3,818,000 ≈ 4,000,000 datapoints",,,,,,,"Machine Learning Force Fields (MLFFs) promise to enable general molecular simulations that can simultaneously achieve efficiency, accuracy, transferability, and scalability for diverse molecules, materials, and hybrid interfaces. A key step toward this goal has been made with the GEMS approach to biomolecular dynamics [Sci. Adv. 10, eadn4397 (2024)]. This work introduces the SO3LR method that integrates the fast and stable SO3krates neural network for semi-local interactions with universal pairwise force fields designed for short-range repulsion, long-range electrostatics, and dispersion interactions. SO3LR is trained on a diverse set of 4 million neutral and charged molecular complexes
computed at the PBE0+MBD level of quantum mechanics, ensuring a comprehensive coverage of covalent and non-covalent interactions. Our approach is characterized by computational and data efficiency, scalability to 200 thousand atoms on a single GPU, and reasonable to high accuracy across the chemical space of organic (bio)molecules. SO3LR is applied to study units of four major biomolecule types, polypeptide folding, and nanosecond dynamics of larger systems such as a protein, a glycoprotein, and a lipid bilayer, all in explicit solvent. Finally, we discuss the future challenges toward truly general molecular simulations by combining MLFFs with traditional atomistic models.",,,,Unverified,2025-01-30 05:04:36+00:00,"Luxembourg,Germany,Germany,United Kingdom of Great Britain and Northern Ireland,Germany,Korea (Republic of)",,,,,,,,,
CogVideoX,"Video,Language,Multimodal","Zhipu AI,Tsinghua University","Industry,Academia","Zhuoyi Yang, Jiayan Teng, Wendi Zheng, Ming Ding, Shiyu Huang, Jiazheng Xu, Yuanming Yang, Wenyi Hong, Xiaohan Zhang, Guanyu Feng, Da Yin, Xiaotao Gu, Yuxuan Zhang, Weihan Wang, Yean Cheng, Ting Liu, Bin Xu, Yuxiao Dong, Jie Tang",2024-10-08,CogVideoX: Text-to-Video Diffusion Models with An Expert Transformer,https://arxiv.org/abs/2408.06072,,,,5000000000.0,5 billion,,,,,"LAION,COYO-700M","""We construct a collection of relatively high-quality video clips with text descriptions with video filters and recaption models. After filtering, approximately 35M single-shot clips remain, with each clip averaging about 6 seconds. We additionally use 2B images filtered with aesthetics score from LAION-5B (Schuhmann et al., 2022) and COYO-700M (Byeon et al., 2022) datasets to assist training.""",,"""35M single-shot clips remain, with each clip averaging about 6 seconds""
""During training, we first train a 3D VAE at 256 × 256 resolution and 17 frames to save computation. Randomly select 8 or 16 fps to enhance the model’s robustness""
""we conduct a two-stage training process by first training on a video of 17 frames and finetuning by context parallel on videos of 161 frames.""

They provide many training details for smaller models but not this one",,,,,,,"We present CogVideoX, a large-scale text-to-video generation model based on diffusion transformer, which can generate 10-second continuous videos aligned with text prompt, with a frame rate of 16 fps and resolution of 768 * 1360 pixels. Previous video generation models often had limited movement and short durations, and is difficult to generate videos with coherent narratives based on text. We propose several designs to address these issues. First, we propose a 3D Variational Autoencoder (VAE) to compress videos along both spatial and temporal dimensions, to improve both compression rate and video fidelity. Second, to improve the text-video alignment, we propose an expert transformer with the expert adaptive LayerNorm to facilitate the deep fusion between the two modalities. Third, by employing a progressive training and multi-resolution frame pack technique, CogVideoX is adept at producing coherent, long-duration, different shape videos characterized by significant motions. In addition, we develop an effective text-video data processing pipeline that includes various data preprocessing strategies and a video captioning method, greatly contributing to the generation quality and semantic alignment. Results show that CogVideoX demonstrates state-of-the-art performance across both multiple machine metrics and human evaluations. The model weight of both 3D Causal VAE, Video caption model and CogVideoX are publicly available at this https URL.",,Open weights (non-commercial),,Confident,2024-11-09 02:17:45+00:00,"China,China",,,,,,,,,
MLDD3UTRmRRNAS,Biology,Ginkgo Bioworks,Industry,"Alyssa Kramer Morrow, Ashley Thornal, Elise Duboscq Flynn, Emily Hoelzli, Meimei Shan, Gorkem Garipler, Rory Kirchner, Aniketh Janardhan Reddy, Sophia Tabchouri, Ankit Gupta, Jean-Baptiste Michel, Uri Laserson






",2024-10-07,ML-driven design of 3’ UTRs for mRNA stability,https://www.biorxiv.org/content/10.1101/2024.10.07.616676v1,0.0,,,,,,,,,,,29500000.999999985,"TOKENS = 180,000 × 164 = 29,520,000 (2.95e7)",,,,,,,"Using mRNA as a therapeutic has received enormous attention in the last few years, but instability of the molecule remains a hurdle to achieving long-lasting therapeutic levels of protein expression. In this study, we describe our approach for designing stable mRNA molecules by combining machine learning-driven sequence design with high-throughput experimental assays. We developed a high-throughput massively parallel reporter assay (MPRA) that, in a single experiment, measures the half-life of tens of thousands of unique mRNA sequences containing designed 3' UTRs. Over multiple design-build-test iterations, we have accumulated 180,000 unique measurements of mRNA stability covering unique genomic and synthetic 3' UTRs, representing the largest such dataset of sequences. We trained highly-accurate machine learning models to map from 3' UTR sequence to mRNA stability, and used them to guide the design of synthetic 3' UTRs that increase mRNA stability in cell lines. Finally, we validated the function of several ML-designed 3' UTRs in mouse models, resulting in up to 2-fold more protein production over time and 30--100-fold higher protein output at later time points compared to a commonly used benchmark. These results highlight the potential of ML-driven sequence design for mRNA therapeutics.",,,,Unverified,2025-01-30 05:05:14+00:00,United States of America,,,,,,,,,
scHyena,Biology,Korea Advanced Institute of Science and Technology (KAIST),Academia,"Gyutaek Oh, Baekgyu Choi, Inkyung Jung, Jong Chul Ye",2024-10-04,scHyena: Foundation Model for Full-Length Single-Cell RNA-Seq Analysis in Brain,https://arxiv.org/abs/2310.02713,3.0,,,,,3.900000000000003e+19,,,"1. Hardware setup: 2x NVIDIA GeForce RTX 3090 (1.60e+14 FLOP/s per GPU with FP16)

2. Training duration: 3.5 days = 302,400 seconds (directly provided)

3. Utilization rate: 40%

4. Calculation:
1.60e+14 FLOP/s × 2 GPUs × 302,400s × 0.4 = 3.87072e+19 FLOPs ≈ 3.9e+19 FLOPs",,,11000000001.000051,"Cells: 430,312 + 145,170 = 575,482
Genes per cell: 19,306
Total data points: 575,482 × 19,306 = 11,111,255,492 (1.11 × 10¹⁰)
Final estimate: 1.11 × 10¹⁰ tokens",,,,,,,"Single-cell RNA sequencing (scRNA-seq) has made significant strides in unraveling the intricate cellular diversity within complex tissues. This is particularly critical in the brain, presenting a greater diversity of cell types than other tissue types, to gain a deeper understanding of brain function within various cellular contexts. However, analyzing scRNA-seq data remains a challenge due to inherent measurement noise stemming from dropout events and the limited utilization of extensive gene expression information. In this work, we introduce scHyena, a foundation model designed to address these challenges and enhance the accuracy of scRNA-seq analysis in the brain. Specifically, inspired by the recent Hyena operator, we design a novel Transformer architecture called singe-cell Hyena (scHyena) that is equipped with a linear adaptor layer, the positional encoding via gene-embedding, and a {bidirectional} Hyena operator. This enables us to process full-length scRNA-seq data without losing any information from the raw data. In particular, our model learns generalizable features of cells and genes through pre-training scHyena using the full length of scRNA-seq data. We demonstrate the superior performance of scHyena compared to other benchmark methods in downstream tasks, including cell type classification and scRNA-seq imputation.",,,,Unverified,2025-02-14 19:01:32+00:00,Korea (Republic of),,,,,,,,,
Movie Gen Video,Video,Meta AI,Industry,"Adam Polyak, Amit Zohar, Andrew Brown, Andros Tjandra, Animesh Sinha, Ann Lee, Apoorv Vyas, Bowen
Shi, Chih-Yao Ma, Ching-Yao Chuang, David Yan, Dhruv Choudhary, Dingkang Wang, Geet Sethi, Guan
Pang, Haoyu Ma, Ishan Misra, Ji Hou, Jialiang Wang, Kiran Jagadeesh, Kunpeng Li, Luxin Zhang, Mannat
Singh, Mary Williamson, Matt Le, Mitesh Kumar Singh, Peizhao Zhang, Peter Vajda, Quentin Duval, Rohit
Girdhar, Roshan Sumbaly, Sai Saketh Rambhatla, Sam Tsai, Samaneh Azadi, Samyak Datta, Sanyuan Chen,
Sean Bell, Sharadh Ramaswamy, Shelly Sheynin, Siddharth Bhattacharya, Tao Xu, Tingbo Hou, Wei-Ning
Hsu, Xi Yin, Xiaoliang Dai, Yaniv Taigman, Yaqiao Luo, Yen-Cheng Liu, Yi-Chiao Wu, Yue Zhao, Yuval
Kirstain, Zecheng He, Zijian He",2024-10-04,Movie Gen: A Cast of Media Foundation Models,https://ai.meta.com/static-resource/movie-gen-research-paper,,Training cost,BOTE estimate of cost is ~$3 million,30000000000.0,30B,1.65e+24,,,"Model size = 30B
Broken down by training stage (table 3):
256px T2I: samples seen = 1.94E9; sample token length = 256; flops = 6ND = 8.94E22
256px T2I/V: samples seen = 3.95E8; sample token length = 8192; flops = 6ND = 5.82E23
768px T2I/V: samples seen = 7.38E7; sample token length = 73,728; flops = 6ND = 9.79E23
Total flops = 1.65E24",,,26600000000.0,"O(1B) images
O(100M) videos, each with 256 frames ~= 25M images",,331.0,"54 hours for 256px T2I
128 hours for 256px T2I/V
149 hours for 768px T2I/V",NVIDIA H100 SXM5 80GB,6144.0,,"We present Movie Gen, a cast of foundation models that generates high-quality, 1080p HD videos
with different aspect ratios and synchronized audio. We also show additional capabilities such as
precise instruction-based video editing and generation of personalized videos based on a user’s image.
Our models set a new state-of-the-art on multiple tasks: text-to-video synthesis, video personalization,
video editing, video-to-audio generation, and text-to-audio generation. Our largest video generation
model is a 30B parameter transformer trained with a maximum context length of 73K video tokens,
corresponding to a generated video of 16 seconds at 16 frames-per-second. We show multiple technical
innovations and simplifications on the architecture, latent spaces, training objectives and recipes, data
curation, evaluation protocols, parallelization techniques, and inference optimizations that allow us to
reap the benefits of scaling pre-training data, model size, and training compute for training large scale
media generation models. We hope this paper helps the research community to accelerate progress
and innovation in media generation models.
All videos from this paper are available at https://go.fb.me/MovieGenResearchVideos.",,Unreleased,,Confident,2025-02-14 19:01:23+00:00,United States of America,,,,,,,,,
Movie Gen Audio,Audio,Meta AI,Industry,"Adam Polyak, Amit Zohar, Andrew Brown, Andros Tjandra, Animesh Sinha, Ann Lee, Apoorv Vyas, Bowen
Shi, Chih-Yao Ma, Ching-Yao Chuang, David Yan, Dhruv Choudhary, Dingkang Wang, Geet Sethi, Guan
Pang, Haoyu Ma, Ishan Misra, Ji Hou, Jialiang Wang, Kiran Jagadeesh, Kunpeng Li, Luxin Zhang, Mannat
Singh, Mary Williamson, Matt Le, Mitesh Kumar Singh, Peizhao Zhang, Peter Vajda, Quentin Duval, Rohit
Girdhar, Roshan Sumbaly, Sai Saketh Rambhatla, Sam Tsai, Samaneh Azadi, Samyak Datta, Sanyuan Chen,
Sean Bell, Sharadh Ramaswamy, Shelly Sheynin, Siddharth Bhattacharya, Tao Xu, Tingbo Hou, Wei-Ning
Hsu, Xi Yin, Xiaoliang Dai, Yaniv Taigman, Yaqiao Luo, Yen-Cheng Liu, Yi-Chiao Wu, Yue Zhao, Yuval
Kirstain, Zecheng He, Zijian He",2024-10-04,Movie Gen: A Cast of Media Foundation Models,https://ai.meta.com/static-resource/movie-gen-research-paper,,,,13000000000.0,13B,1.4e+23,,,Pre trained for 14 days on 384 H100s. I assumed a 0.3 utilization rate,,,,It was trained on O(1k) hours of audio,,360.0,"14 days of pretraining, 1 day of fine tuning",NVIDIA H100 SXM5 80GB,384.0,,"We present Movie Gen, a cast of foundation models that generates high-quality, 1080p HD videos
with different aspect ratios and synchronized audio. We also show additional capabilities such as
precise instruction-based video editing and generation of personalized videos based on a user’s image.
Our models set a new state-of-the-art on multiple tasks: text-to-video synthesis, video personalization,
video editing, video-to-audio generation, and text-to-audio generation. Our largest video generation
model is a 30B parameter transformer trained with a maximum context length of 73K video tokens,
corresponding to a generated video of 16 seconds at 16 frames-per-second. We show multiple technical
innovations and simplifications on the architecture, latent spaces, training objectives and recipes, data
curation, evaluation protocols, parallelization techniques, and inference optimizations that allow us to
reap the benefits of scaling pre-training data, model size, and training compute for training large scale
media generation models. We hope this paper helps the research community to accelerate progress
and innovation in media generation models.
All videos from this paper are available at https://go.fb.me/MovieGenResearchVideos.",,Unreleased,,Confident,2025-02-14 19:00:55+00:00,United States of America,,,,,,,,,
EnzymeFlow,Biology,"McGill University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),Hong Kong University of Science and Technology,University of Washington,Microsoft Research,DeepMind,Shanghai Jiao Tong University,University of Montreal / Université de Montréal","Academia,Academia,Academia,Academia,Industry,Industry,Academia,Academia","Chenqing Hua, Yong Liu, Dinghuai Zhang, Odin Zhang, Sitao Luan, Kevin K. Yang, Guy Wolf, Doina Precup, Shuangjia Zheng",2024-10-01,EnzymeFlow: Reaction-conditioned Enzyme Catalytic Pocket Design,https://arxiv.org/abs/2410.00327,,,,,,,,,,,,53484.00000000001,"53,483 enzyme-reaction pairs were used to train EnzymeFlow after homology filtering

Initial dataset: 328,192
Raw dataset before filtering: 232,520
Final filtered dataset: 53,483",,,,,,,"Enzyme design is a critical area in biotechnology, with applications ranging from drug development to synthetic biology. Traditional methods for enzyme function prediction or protein binding pocket design often fall short in capturing the dynamic and complex nature of enzyme-substrate interactions, particularly in catalytic processes. To address the challenges, we introduce EnzymeFlow, a generative model that employs flow matching with hierarchical pre-training and enzyme-reaction co-evolution to generate catalytic pockets for specific substrates and catalytic reactions. Additionally, we introduce a large-scale, curated, and validated dataset of enzyme-reaction pairs, specifically designed for the catalytic pocket generation task, comprising a total of 328, 192 pairs. By incorporating evolutionary dynamics and reaction-specific adaptations, EnzymeFlow becomes a powerful model for designing enzyme pockets, which is capable of catalyzing a wide range of biochemical reactions. Experiments on the new dataset demonstrate the model’s effectiveness in designing high-quality, functional enzyme catalytic pockets, paving the way for advancements in enzyme engineering and synthetic biology. We provide EnzymeFlow code at https://github.com/WillHua127/EnzymeFlow with notebook demonstration at https://github.com/WillHua127/ EnzymeFlow/blob/main/enzymeflow_demo.ipynb.",,,,Unverified,2025-01-30 05:04:58+00:00,"Canada,Canada,Hong Kong,China,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland,China,Canada",,,,,,,,,
BindCraft,Biology,"Ecole Polytechnique F´ed´erale de Lausanne (EPFL),University of Zurich,University of Lausanne,Massachusetts Institute of Technology (MIT),Visterra Inc,Swiss Federal Institute of Technology","Academia,Academia,Academia,Academia,Industry,Academia","Martin Pacesa, Lennart Nickel, Joseph Schmidt, Ekaterina Pyatova, Christian Schellhaas, Lucas Kissling, Ana Alcaraz-Serna, Yehlin Cho, Kourosh H. Ghamary, Laura Vinué, Brahm J. Yachnin, Andrew M. Wollacott, Stephen Buckley, Sandrine Georgeon, Casper A. Goverde, Georgios N. Hatzopoulos, Pierre Gönczy, Yannick D. Muller, Gerald Schwank, Sergey Ovchinnikov, Bruno E. Correia",2024-10-01,BindCraft: one-shot design of functional protein binders,https://www.biorxiv.org/content/10.1101/2024.09.30.615802v1.abstract,,,,,,,,,,,,,,,,,,,,"Protein–protein interactions (PPIs) are at the core of all key biological processes. However, the complexity of the structural features that determine PPIs makes their design challenging. We present BindCraft, an open-source and automated pipeline for de novo protein binder design with experimental success rates of 10-100%. BindCraft leverages the trained deep learning weights of AlphaFold21 to generate nanomolar binders without the need for high-throughput screening or experimental optimization, even in the absence of known binding sites. We successfully designed binders against a diverse set of challenging targets, including cell-surface receptors, common allergens, de novo designed proteins, and multi-domain nucleases, such as CRISPR-Cas9. We showcase their functional and therapeutic potential by demonstrating that designed binders can reduce IgE binding to birch allergen in patient-derived samples. This work represents a significant advancement towards a “one design-one binder” approach in computational design, with immense potential in therapeutics, diagnostics, and biotechnology.

",,,,Unverified,2024-11-23 21:22:33+00:00,"Switzerland,Switzerland,Switzerland,United States of America,United States of America,Switzerland",,,,,,,,,
PlasmidGPT,Biology,Harvard University,Academia,"Bin Shao
",2024-10-01,PlasmidGPT: a generative framework for plasmid design and annotation,https://www.biorxiv.org/content/10.1101/2024.09.30.615762v1.abstract,,,,110000000.0,"""The model consists of 12 230 layers with a dimension of 512, with 8 attention heads and a total of 110M parameters""",100000000000000.0,,,Arithmetic operation direct count using 110000000 parameters and 153000 training examples.,,,153000.0,"""We introduce PlasmidGPT, a generative language model pretrained on 153k engineered  8 plasmid sequences from Addgene.""",,,,NVIDIA A100,1.0,,"We introduce PlasmidGPT, a generative language model pretrained on 153k engineered plasmid sequences from Addgene. PlasmidGPT generates de novo sequences that share similar characteristics with engineered plasmids but show low sequence identity to the training data. We demonstrate its ability to generate plasmids in a controlled manner based on the input sequence or specific design constraint. Moreover, our model learns informative embeddings of both engineered and natural plasmids, allowing for efficient prediction of a wide range of sequence-related attributes.

",,Open weights (unrestricted),,Unverified,2025-02-14 19:01:38+00:00,United States of America,,,,,,,,,
LFM 40B,Language,Liquid,Industry,,2024-09-30,Liquid Foundation Models: Our First Series of Generative AI Models,https://www.liquid.ai/liquid-foundation-models,,,,40300000000.0,"""A 40.3B Mixture of Experts (MoE) model, designed for tackling more complex tasks.""

""LFM-40B offers a new balance between model size and output quality. It leverages 12B activated parameters at use.""",,,,,,,,,,,,,,,"We announce the first series of Liquid Foundation Models (LFMs), a new generation of generative AI models built from first principles.
Our 1B, 3B, and 40B LFMs achieve state-of-the-art performance in terms of quality at each scale, while maintaining a smaller memory footprint and more efficient inference.
Try LFMs today on Liquid Playground, Lambda (Chat UI and API), Perplexity Labs, and soon on Cerebras Inference. The LFM stack is being optimized for NVIDIA, AMD, Qualcomm, Cerebras, and Apple hardware.
We build private, edge, and on-premise AI solutions for enterprises of any size.
We are scaling LFMs and expect to introduce new and better capabilities across various industries, such as financial services, biotechnology, and consumer electronics.",,API access,,Confident,2024-12-10 19:19:28+00:00,United States of America,,,,,,,,,
FragLlama,Biology,YDS Pharmatech,Industry,"Jian Shen, Shengmin Zhou, Xing Che",2024-09-30,FragLlama: Next-fragment prediction for molecular design,https://www.biorxiv.org/content/10.1101/2024.09.28.615626v1.abstract,,,,,,,,,,,,70000000001.0001,"70 billion tokens = 7.0e10 datapoints

Calculation: 70,000,000,000 = 7.0e10",,,,,,,"The emergence of ChatGPT has drawn significant attention to Large Language Models (LLMs) due to their impressive performance. While LLMs primarily focus on next token/word prediction, we apply this principle to molecular design by reframing the task as predicting the next token/fragment. We present FragLlama, a large language model trained for molecular design, featuring custom tokens that represent molecular fragments and functional groups. The model is for generating molecules given one or two fragments, for application scenarios like general hit-to-lead and lead optimization stage drug design, PROTAC linker design; mapping to commonly used drug design strategies like fragment growing and scaffold hopping. In the pre-training stage, we adapted the Llama 3 architecture to create FragLlama, training it to learn conditional probabilities of these fragment-level tokens. The subsequent alignment stage employed fine-tuning to guide the model towards generating molecules with desired properties. The effectiveness of FragLlama is demonstrated through its applications in designing molecular glue libraries, PROTAC linkers and EGFR binders. FragLlama demonstrates proficiency in reproducing expert-level designs while also exploring novel and promising chemical spaces, highlighting its potential to augment the capabilities of medicinal chemists in drug design.",,,,Unverified,2025-01-30 05:05:15+00:00,United States of America,,,,,,,,,
Takane,Language,"Fujitsu,Cohere","Industry,Industry",,2024-09-30,"Fujitsu launches ""Takane"" - A large language model for enterprises offering the highest Japanese language proficiency in the world",https://www.fujitsu.com/global/about/resources/news/press-releases/2024/0930-01.html,,,,,"""Takane is a medium-sized LLM that can be used in a secure, private environment.""

""Takane is based on Cohere’s LLM Command R+ and combines Fujitsu’s extensive knowledge in developing Japanese-specialized LLMs with Cohere’s expertise in creating task-specific language models. """,,,,,Unspecified unreleased,,,,,,,,,,"Fujitsu launches Takane, a Japanese-language large language model (LLM) designed for secure enterprise use
Integrated into Fujitsu’s AI service Fujitsu Kozuchi and offered through the all-in-one operation platform Fujitsu Data Intelligence PaaS (DI PaaS)
Specialized and tailored for industry-specific use and trained for the Japanese language (world-class score on the JGLUE benchmark) to address the challenges of using LLMs in sensitive industries that require a high degree of accuracy and reliability",,Hosted access (no API),,Unknown,2024-12-16 19:52:34+00:00,"Japan,Canada",Command R+,,,,,,,,
PocketFlow,Biology,"University of Science and Technology of China,State Key Laboratory of Cognitive Intelligence,Harvard University","Academia,Academia","Zaixi Zhang, Marinka Zitnik, Qi Liu",2024-09-29,Generalized Protein Pocket Generation with Prior-Informed Flow Matching,https://arxiv.org/abs/2409.19520,,,,,,1e+19,,,"1. Hardware: 1x Tesla A100 GPU (3.12e14 FLOP/s)
2. Training duration: Estimated ~3 hours (10,940 seconds)
   Calculation: 140k samples / 256 batch size = 547 steps/epoch * 20 epochs * 1s/step
3. Utilization: 100% assumed (no explicit rate mentioned)
4. Total FLOPs = 3.12e14 FLOP/s * 1 GPU * 10,940 seconds = 3.41e18 FLOPs (rounded to 1e19)",,,21000001.00000001,"CrossDocked: 100,000 complexes × (100 residues + 50 atoms) = 15,000,000
MOAD: 40,000 pairs × (100 residues + 50 atoms) = 6,000,000
Total: 15,000,000 + 6,000,000 = 21,000,000 datapoints = 2.1 × 10⁷",,,,,,,"Designing ligand-binding proteins, such as enzymes and biosensors, is essential in bioengineering and protein biology. One critical step in this process involves designing protein pockets, the protein interface binding with the ligand. Current approaches to pocket generation often suffer from time-intensive physical computations or template-based methods, as well as compromised generation quality due to the overlooking of domain knowledge. To tackle these challenges, we propose PocketFlow, a generative model that incorporates protein-ligand interaction priors based on flow matching. During training, PocketFlow learns to model key types of protein-ligand interactions, such as hydrogen bonds. In the sampling, PocketFlow leverages multi-granularity guidance (overall binding affinity and interaction geometry constraints) to facilitate generating high-affinity and valid pockets. Extensive experiments show that PocketFlow outperforms baselines on multiple benchmarks, e.g., achieving an average improvement of 1.29 in Vina Score and 0.05 in scRMSD. Moreover, modeling interactions make PocketFlow a generalized generative model across multiple ligand modalities, including small molecules, peptides, and RNA.",,,,Unverified,2025-02-14 19:02:37+00:00,"China,China,United States of America",,,,,,,,,
FlexSBDD,Biology,"University of Science and Technology of China,State Key Laboratory of Cognitive Intelligence,Princeton University","Academia,Academia","Zaixi Zhang, Mengdi Wang, Qi Liu",2024-09-29,FlexSBDD: Structure-Based Drug Design with Flexible Protein Modeling,https://arxiv.org/abs/2409.19645,,,,,,1.6000000000000008e+19,,,"1. Hardware: 1x NVIDIA A100 PCIe GPU (3.12e14 FP16 Tensor FLOP/s)
2. Training duration: 36 hours (directly provided) = 129,600 seconds
3. Utilization: 40% (assumed)
4. Calculation: 3.12e14 FLOP/s × 1 GPU × 129,600s × 0.4 = 1.6e19 FLOPs",,,1400001.0000000007,"Original pairs: 40,000 + 100,000 = 140,000
Data augmentation: 140,000 * 10 = 1,400,000
Training iterations: 500,000 * 4 = 2,000,000
Final unique datapoints: 1,400,000",,,,,,,"Structure-based drug design (SBDD), which aims to generate 3D ligand molecules binding to target proteins, is a fundamental task in drug discovery. Existing SBDD methods typically treat protein as rigid and neglect protein structural change when binding with ligand molecules, leading to a big gap with real-world scenarios and inferior generation qualities (e.g., many steric clashes). To bridge the gap, we propose FlexSBDD, a deep generative model capable of accurately modeling the flexible protein-ligand complex structure for ligand molecule generation. FlexSBDD adopts an efficient flow matching framework and leverages E(3)-equivariant network with scalar-vector dual representation to model dynamic structural changes. Moreover, novel data augmentation schemes based on structure relaxation/sidechain repacking are adopted to boost performance. Extensive experiments demonstrate that FlexSBDD achieves state-of-the-art performance in generating high-affinity molecules and effectively modeling the protein's conformation change to increase favorable protein-ligand interactions (e.g., Hydrogen bonds) and decrease steric clashes.",,,,Unverified,2025-02-14 19:02:13+00:00,"China,China,United States of America",,,,,,,,,
DFMDock,Biology,Johns Hopkins University,Academia,"Lee-Shin Chu, Sudeep Sarma, Jeffrey J Gray",2024-09-28,Unified Sampling and Ranking for Protein Docking with DFMDock,https://pmc.ncbi.nlm.nih.gov/articles/PMC11463455/,,,,,,,,,,,,,,,,,,,,"Diffusion models have shown promise in addressing the protein docking problem. Traditionally, these models are used solely for sampling docked poses, with a separate confidence model for ranking. We introduce DFMDock (Denoising Force Matching Dock), a diffusion model that unifies sampling and ranking within a single framework. DFMDock features two output heads: one for predicting forces and the other for predicting energies. The forces are trained using a denoising force matching objective, while the energy gradients are trained to align with the forces. This design enables our model to sample using the predicted forces and rank poses using the predicted energies, thereby eliminating the need for an additional confidence model. Our approach outperforms the previous diffusion model for protein docking, DiffDock-PP, with a sampling success rate of 44% compared to its 8%, and a Top- 1 ranking success rate of 16% compared to 0% on the Docking Benchmark 5.5 test set. In successful decoy cases, the DFMDock Energy forms a binding funnel similar to the physics-based Rosetta Energy, suggesting that DFMDock can capture the underlying energy landscape.",,,,Unverified,2024-11-23 21:22:33+00:00,United States of America,,,,,,,,,
ConoDL,Biology,"Chongqing University,Ministry of Natural Resources (China)","Academia,Government","Menghan Guo, Zengpeng Li, Xuejin Deng, Ding Luo, Jingyi Yang, Yingjun Chen, Weiwei Xue",2024-09-28,ConoDL: A Deep Learning Framework for Rapid Generation and Prediction of Conotoxins,https://www.biorxiv.org/content/10.1101/2024.09.27.614001v1.abstract,,,,1200000000.0,"""ConoGen is a conotoxin generation model that adopts an architecture consistent with the pre-training model ProGen (Figure 2A) 15 . ConoGen is also constructed using a Transformer-based neural network architecture. One major advantage of the Transformer lies in its self-attention mechanism, which enables the model to encode distant signals of information when making sequence predictions, thereby affording it the capability to comprehend complex semantics. Its Transformer architecture consists of 36 layers, each comprising 8 self-attention heads, totaling 1.2 billion trainable parameters to ensure the training and optimization of the model.""",,,,,,,740001.0000000013,"ConoGen: 2310 sequences × 40 tokens/sequence = 92,400 tokens
ConoPred: (2310 + 13,941) sequences × 40 tokens/sequence = 650,040 tokens
Total: 92,400 + 650,040 = 742,440 tokens (7.4 × 10⁵)",,,,,,,"Conotoxins, being small disulfide-rich and bioactive peptides, manifest notable pharmacological potential and find extensive applications. However, the exploration of conotoxins’ vast molecular space using traditional methods is severely limited, necessitating the urgent need of developing novel approaches. Recently, deep learning (DL)-based methods have advanced to the molecular generation of proteins and peptides. Nevertheless, the limited data and the intricate structure of conotoxins constrain the application of deep learning models in the generation of conotoxins. We propose ConoDL, a framework for the generation and prediction of conotoxins, comprising the end-to-end conotoxin generation model (ConoGen) and the conotoxin prediction model (ConoPred). ConoGen employs transfer learning and a large language model (LLM) to tackle the challenges in conotoxin generation. Meanwhile, ConoPred filters artificial conotoxins generated by ConoGen, narrowing down the scope for subsequent research. A comprehensive evaluation of the peptide properties at both sequence and structure levels indicates that the artificial conotoxins generated by ConoDL exhibit a certain degree of similarity to natural conotoxins. Furthermore, ConoDL has generated artificial conotoxins with novel cysteine scaffolds. Therefore, ConoDL may uncover new cysteine scaffolds and conotoxin molecules, facilitating further exploration of the molecular space of conotoxins and the discovery of pharmacologically active variants. The code is available at https://github.com/xueww/ConoDL.The supplementary material and model are available at https://zenodo.org/records/10679280.",,,,Unverified,2025-01-30 05:05:04+00:00,"China,China",,,,,,,,,
DeepREAD,Biology,Shape Therapeutics,Industry,"Yue Jiang, Lina R. Bagepalli, Bora S. Banjanin, Yiannis A. Savva, Yingxin Cao, Lan Guo, Adrian W. Briggs, Brian Booth, Ronald J. Hause",2024-09-28,Generative Machine Learning of ADAR Substrates for Precise and Efficient RNA Editing,https://www.biorxiv.org/content/10.1101/2024.09.27.613923v1.abstract,,,,,,,,,,,,162001.00000000006,"Primary Dataset: 112,000 gRNAs
PolyTarget Library: 50,253 gRNAs
Total = 112,000 + 50,253 = 162,253 gRNAs ≈ 1.62e5",,,,,,,"Adenosine Deaminase Acting on RNA (ADAR) converts adenosine to inosine within certain double-stranded RNA structures. However, ADAR’s promiscuous editing and poorly understood specificity hinder therapeutic applications. We present an integrated approach combining high-throughput screening (HTS) with generative deep learning to rapidly engineer efficient and specific guide RNAs (gRNAs) to direct ADAR’s activity to any target. Our HTS quantified ADAR-mediated editing across millions of unique gRNA sequences and structures, identifying key determinants of editing outcomes. We leveraged these data to develop DeepREAD (Deep learning for RNA Editing by ADAR Design), a diffusion-based model that elucidates complex design rules to generate novel gRNAs outperforming existing design heuristics. DeepREAD’s gRNAs achieve highly efficient and specific editing, including challenging multi-site edits. We demonstrate DeepREAD’s therapeutic potential by designing gRNAs targeting the MECP2R168X mutation associated with Rett syndrome, achieving both allelic specificity and species cross-reactivity. This approach significantly accelerates the development of ADAR-based RNA therapeutics for diverse genetic diseases.",,,,Unverified,2025-01-30 05:04:18+00:00,United States of America,,,,,,,,,
PepNet,Biology,Shandong University,Academia,"Jiyun Han, Tongxin Kong, Juntao Liu",2024-09-28,PepNet: an interpretable neural network for anti-inflammatory and antimicrobial peptides prediction using a pre-trained protein language model,https://www.nature.com/articles/s42003-024-06911-1,,,,,,,,,,,,,,,,,,,,"Identifying anti-inflammatory peptides (AIPs) and antimicrobial peptides (AMPs) is crucial for the discovery of innovative and effective peptide-based therapies targeting inflammation and microbial infections. However, accurate identification of AIPs and AMPs remains a computational challenge mainly due to limited utilization of peptide sequence information. Here, we propose PepNet, an interpretable neural network for predicting both AIPs and AMPs by applying a pre-trained protein language model to fully utilize the peptide sequence information. It first captures the information of residue arrangements and physicochemical properties using a residual dilated convolution block, and then seizes the function-related diverse information by introducing a residual Transformer block to characterize the residue representations generated by a pre-trained protein language model. After training and testing, PepNet demonstrates great superiority over other leading AIP and AMP predictors and shows strong interpretability of its learned peptide representations. A user-friendly web server for PepNet is freely available at http://liulab.top/PepNet/server.",,,,Unverified,2024-11-23 21:22:33+00:00,China,,,,,,,,,
Mdgen,"Biology,Materials science",Massachusetts Institute of Technology (MIT),Academia,"Bowen Jing, Hannes Stärk, Tommi Jaakkola, Bonnie Berger",2024-09-26,Generative Modeling of Molecular Dynamics Trajectories,https://arxiv.org/abs/2409.17808,3.0,,,,,,,,,,,280000000.9999996,"1,000 tokens/simulation = 250 frames × 4 residues
1,250 tokens/simulation = 250 frames × 5 residues
64,000 tokens/simulation = 250 frames × 256 residues

Explicit tetrapeptides: 3,109,000 = 3,109 × 1,000
Implicit tetrapeptides: 2,646,000 = 2,646 × 1,000
Implicit pentapeptides: 6,493,750 = 5,195 × 1,250
Protein simulations: 266,880,000 = 4,170 × 64,000

Total: 278,128,750 = 3,109,000 + 2,646,000 + 6,493,750 + 266,880,000",,,,,,,"Molecular dynamics (MD) is a powerful technique for studying microscopic phenomena, but its computational cost has driven significant interest in the development of deep learning-based surrogate models. We introduce generative modeling of molecular trajectories as a paradigm for learning flexible multi-task surrogate models of MD from data. By conditioning on appropriately chosen frames of the trajectory, we show such generative models can be adapted to diverse tasks such as forward simulation, transition path sampling, and trajectory upsampling. By alternatively conditioning on part of the molecular system and inpainting the rest, we also demonstrate the first steps towards dynamics-conditioned molecular design. We validate the full set of these capabilities on tetrapeptide simulations and show that our model can produce reasonable ensembles of protein monomers. Altogether, our work illustrates how generative modeling can unlock value from MD data towards diverse downstream tasks that are not straightforward to address with existing methods or even MD itself. Code is available at this https URL.",,,,Unverified,2025-01-30 05:04:58+00:00,United States of America,,,,,,,,,
AlphaChip,Other,Google DeepMind,Industry,"Anna Goldie, Azalia Mirhoseini, Mustafa Yazgan, Joe Wenjie Jiang,
Ebrahim Songhori, Shen Wang, Young-Joon Lee, Eric Johnson,
Omkar Pathak, Azade Nova, Jiwoo Pak, Andy Tong, Kavya Srinivasa,
William Hang, Emre Tuncer, Quoc V. Le, James Laudon, Richard Ho,
Roger Carpenter, Jeff Dean",2024-09-26,How AlphaChip transformed computer chip design,"https://deepmind.google/discover/blog/how-alphachip-transformed-computer-chip-design/
https://www.nature.com/articles/s41586-024-08032-5",,,,,,,,,,,,,,,,,,,,"In 2020, we released a preprint introducing our novel reinforcement learning method for designing chip layouts, which we later published in Nature and open sourced.

Today, we’re publishing a Nature addendum that describes more about our method and its impact on the field of chip design. We’re also releasing a pre-trained checkpoint, sharing the model weights and announcing its name: AlphaChip.

Computer chips have fueled remarkable progress in artificial intelligence (AI), and AlphaChip returns the favor by using AI to accelerate and optimize chip design. The method has been used to design superhuman chip layouts in the last three generations of Google’s custom AI accelerator, the Tensor Processing Unit (TPU).

AlphaChip was one of the first reinforcement learning approaches used to solve a real-world engineering problem. It generates superhuman or comparable chip layouts in hours, rather than taking weeks or months of human effort, and its layouts are used in chips all over the world, from data centers to mobile phones.",,,,Unverified,2024-10-21 19:25:45+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
SPOT,Biology,"Heinrich Heine University,Concordia University","Academia,Academia","Alexander Kroll, Nico Niebuhr, Gregory Butler, Martin J. Lercher",2024-09-26,SPOT: A machine learning model that predicts specific substrates for transport proteins,https://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.3002807,,,,,,,,,,,,33162.99999999998,"Total datapoints = 8,633 + 24,529 = 33,162

Step 1: Positive pairs = 8,633
Step 2: Negative pairs = 24,529
Step 3: Total = 8,633 + 24,529 = 33,162",,,,,,,"Transport proteins play a crucial role in cellular metabolism and are central to many aspects of molecular biology and medicine. Determining the function of transport proteins experimentally is challenging, as they become unstable when isolated from cell membranes. Machine learning-based predictions could provide an efficient alternative. However, existing methods are limited to predicting a small number of specific substrates or broad transporter classes. These limitations stem partly from using small data sets for model training and a choice of input features that lack sufficient information about the prediction problem. Here, we present SPOT, the first general machine learning model that can successfully predict specific substrates for arbitrary transport proteins, achieving an accuracy above 92% on independent and diverse test data covering widely different transporters and a broad range of metabolites. SPOT uses Transformer Networks to represent transporters and substrates numerically. To overcome the problem of missing negative data for training, it augments a large data set of known transporter-substrate pairs with carefully sampled random molecules as non-substrates. SPOT not only predicts specific transporter-substrate pairs, but also outperforms previously published models designed to predict broad substrate classes for individual transport proteins. We provide a web server and Python function that allows users to explore the substrate scope of arbitrary transporters.",,,,Unverified,2025-01-30 05:04:57+00:00,"Germany,Canada",,,,,,,,,
Loop-Diffusion,Biology,University of Washington,Academia,"Kevin Borisiak, Gian Marco Visani, Armita Nourmohammad
",2024-09-26,Loop-Diffusion: an equivariant diffusion model for designing and scoring protein loops,https://arxiv.org/abs/2409.18201,,,,,,,,,,,,433000.9999999997,"433,000 total datapoints = 433k atomic neighborhoods from 20,000 protein structures
Final result: 4.33e5 datapoints",,,,,,,"Predicting protein functional characteristics from structure remains a central problem in protein science, with broad implications from understanding the mechanisms of disease to designing novel therapeutics. Unfortunately, current machine learning methods are limited by scarce and biased experimental data, and physics-based methods are either too slow to be useful, or too simplified to be accurate. In this work, we present Loop-Diffusion, an energy based diffusion model which leverages a dataset of general protein loops from the entire protein universe to learn an energy function that generalizes to functional prediction tasks. We evaluate Loop-Diffusion's performance on scoring TCR-pMHC interfaces and demonstrate state-of-the-art results in recognizing binding-enhancing mutations.",,,,Unverified,2025-01-30 05:05:06+00:00,United States of America,,,,,,,,,
RWKV-5 (Eagle) 7B,Language,"RWKV Foundation,EleutherAI,Ohio State University,University of California Santa Barbara (UCSB),Wroclaw Tech (Wrocław University of Science and Technology),Guangdong Laboratory of Artificial Intelligence and Digital Economy (Pazhou Lab),New York University (NYU),Harvard University,Contextual AI,University of Chinese Academy of Sciences,University of California Santa Cruz,Tsinghua University,University of Edinburgh,University of British Columbia (UBC),Pennsylvania State University","Research collective,Research collective,Academia,Academia,Government,Academia,Academia,Industry,Academia,Academia,Academia,Academia,Academia,Academia","Bo Peng, Daniel Goldstein, Quentin Anthony, Alon Albalak, Eric Alcaide, Stella Biderman, Eugene Cheah, Xingjian Du, Teddy Ferdinan, Haowen Hou, Przemysław Kazienko, Kranthi Kiran GV, Jan Kocoń, Bartłomiej Koptyra, Satyapriya Krishna, Ronald McClelland Jr., Jiaju Lin, Niklas Muennighoff, Fares Obeid, Atsushi Saito, Guangyu Song, Haoqin Tu, Cahya Wirawan, Stanisław Woźniak, Ruichong Zhang, Bingchen Zhao, Qihang Zhao, Peng Zhou, Jian Zhu, Rui-Jie Zhu",2024-09-26,Eagle and Finch: RWKV with Matrix-Valued States and Dynamic Recurrence,https://arxiv.org/abs/2404.05892,,,,7520000000.0,7.52×10^9,4.983e+22,,,"4.53×10^10 FLOPs per token (Table 11)

1100000000000 tokens *  4.53×10^10 FLOPs per token = 4.983e+22

1100000000000 tokens * 7*10^9 parameters * 6 = 4.62e+22",RWKV World v2 Dataset,"multilingual 1.12 trillion token dataset drawn from a wide variety of hand selected publicly available data sources. The source data is approximately 70% English, 15% multilingual, and 15% code. ",1120000000000.0,1.1×10^12 tokens ,,,,NVIDIA H800 SXM5,64.0,,"We present Eagle (RWKV-5) and Finch (RWKV-6), sequence models improving upon the RWKV (RWKV-4) architecture. Our architectural design advancements include multi-headed matrix-valued states and a dynamic recurrence mechanism that improve expressivity while maintaining the inference efficiency characteristics of RNNs. We introduce a new multilingual corpus with 1.12 trillion tokens and a fast tokenizer based on greedy matching for enhanced multilinguality. We trained four Eagle models, ranging from 0.46 to 7.5 billion parameters, and two Finch models with 1.6 and 3.1 billion parameters and find that they achieve competitive performance across a wide variety of benchmarks. We release all our models on HuggingFace under the Apache 2.0 license. Models at: this https URL Training code at: this https URL Inference code at: this https URL Time-parallel training code at: this https URL",,Open weights (unrestricted),,Confident,2025-03-06 19:59:55+00:00,"Multinational,Multinational,United States of America,United States of America,United States of America,Poland,China,United States of America,United States of America,United States of America,China,United States of America,China,United Kingdom of Great Britain and Northern Ireland,Canada,United States of America",,,,,,,2359296.0,,
RWKV-6 (Finch) 3B,Language,"RWKV Foundation,EleutherAI,Ohio State University,University of California Santa Barbara (UCSB),Wroclaw Tech (Wrocław University of Science and Technology),Guangdong Laboratory of Artificial Intelligence and Digital Economy (Pazhou Lab),New York University (NYU),Harvard University,Contextual AI,University of Chinese Academy of Sciences,University of California Santa Cruz,Tsinghua University,University of Edinburgh,University of British Columbia (UBC),Pennsylvania State University","Research collective,Research collective,Academia,Academia,Government,Academia,Academia,Industry,Academia,Academia,Academia,Academia,Academia,Academia","Bo Peng, Daniel Goldstein, Quentin Anthony, Alon Albalak, Eric Alcaide, Stella Biderman, Eugene Cheah, Xingjian Du, Teddy Ferdinan, Haowen Hou, Przemysław Kazienko, Kranthi Kiran GV, Jan Kocoń, Bartłomiej Koptyra, Satyapriya Krishna, Ronald McClelland Jr., Jiaju Lin, Niklas Muennighoff, Fares Obeid, Atsushi Saito, Guangyu Song, Haoqin Tu, Cahya Wirawan, Stanisław Woźniak, Ruichong Zhang, Bingchen Zhao, Qihang Zhao, Peng Zhou, Jian Zhu, Rui-Jie Zhu",2024-09-26,Eagle and Finch: RWKV with Matrix-Valued States and Dynamic Recurrence,https://arxiv.org/abs/2404.05892,,,,3100000000.0, 3.10×10^9,2.0944e+22,,,"1.87×10^10 FLOPs per token (Table 11)

1120000000000 tokens*1.87×10^10 = 2.0944e+22

1120000000000 tokens *3*10^9 parameters *6 = 2.016e+22",RWKV World v2 Dataset,"multilingual 1.12 trillion token dataset drawn from a wide variety of hand selected publicly available data sources. The source data is approximately 70% English, 15% multilingual, and 15% code. ",1120000000000.0,,,,,NVIDIA A100,48.0,,"We present Eagle (RWKV-5) and Finch (RWKV-6), sequence models improving upon the RWKV (RWKV-4) architecture. Our architectural design advancements include multi-headed matrix-valued states and a dynamic recurrence mechanism that improve expressivity while maintaining the inference efficiency characteristics of RNNs. We introduce a new multilingual corpus with 1.12 trillion tokens and a fast tokenizer based on greedy matching for enhanced multilinguality. We trained four Eagle models, ranging from 0.46 to 7.5 billion parameters, and two Finch models with 1.6 and 3.1 billion parameters and find that they achieve competitive performance across a wide variety of benchmarks. We release all our models on HuggingFace under the Apache 2.0 license. Models at: this https URL Training code at: this https URL Inference code at: this https URL Time-parallel training code at: this https URL",,Open weights (unrestricted),,Confident,2025-03-06 19:59:53+00:00,"Multinational,Multinational,United States of America,United States of America,United States of America,Poland,China,United States of America,United States of America,United States of America,China,United States of America,China,United Kingdom of Great Britain and Northern Ireland,Canada,United States of America",,,,,,,786432.0,,
RNA-DCGen,Biology,"Bangladesh University of Engineering and Technology,University of California Riverside","Academia,Academia","Haz Sameen Shahgir, Md. Rownok Zahan Ratul, Md Toki Tahmid, Khondker Salman Sayeed, Atif Rahman",2024-09-25,RNA-DCGen: Dual Constrained RNA Sequence Generation with LLM-Attack,https://www.biorxiv.org/content/10.1101/2024.09.23.614570v1,0.0,,,,,,,,,,,,,,,,,,,"Designing RNA sequences with specific properties is critical for developing personalized medications and therapeutics. While recent diffusion and flow-matching-based generative models have made strides in conditional sequence design, they face two key limitations: specialization for fixed constraint types, such as tertiary structures, and lack of flexibility in imposing additional conditions beyond the primary property of interest. To address these challenges, we introduce RNA-DCGen, a generalized framework for RNA sequence generation that is adaptable to any structural or functional properties through straightforward finetuning with an RNA language model (RNA-LM). Additionally, RNA-DCGen can enforce conditions on the generated sequences by fixing specific conserved regions. On RNA generation conditioned on RNA distance maps, RNA-DCGen generates sequences with an average R2 score of 0.625 compared to random sequences that score only 0.118 over 250 generations as judged by a separate more capable RNA-LM. When conditioned on RNA secondary structures, RNA-DCGen achieves an average F1 score of 0.4 against a random baseline of 0.006.",,,,Unverified,2024-10-22 14:17:05+00:00,"India,United States of America",,,,,,,,,
ProteinGenerator,Biology,"University of Washington,Institute for Protein Design,Georgia Institute of Technology,Microsoft,Heidelberg University","Academia,Academia,Academia,Industry,Academia","Sidney Lyayuga Lisanza, Jacob Merle Gershon, Samuel W. K. Tipps, Jeremiah Nelson Sims, Lucas Arnoldt, Samuel J. Hendel, Miriam K. Simma, Ge Liu, Muna Yase, Hongwei Wu, Claire D. Tharp, Xinting Li, Alex Kang, Evans Brackenbrough, Asim K. Bera, Stacey Gerben, Bruce J. Wittmann, Andrew C. McShan, David Baker",2024-09-25,Multistate and functional protein design using RoseTTAFold sequence space diffusion,https://www.nature.com/articles/s41587-024-02395-w,1.0,,,,,,,,,,,,,,,,,,,"Protein denoising diffusion probabilistic models are used for the de novo generation of protein backbones but are limited in their ability to guide generation of proteins with sequence-specific attributes and functional properties. To overcome this limitation, we developed ProteinGenerator (PG), a sequence space diffusion model based on RoseTTAFold that simultaneously generates protein sequences and structures. Beginning from a noised sequence representation, PG generates sequence and structure pairs by iterative denoising, guided by desired sequence and structural protein attributes. We designed thermostable proteins with varying amino acid compositions and internal sequence repeats and cage bioactive peptides, such as melittin. By averaging sequence logits between diffusion trajectories with distinct structural constraints, we designed multistate parent–child protein triples in which the same sequence folds to different supersecondary structures when intact in the parent versus split into two child domains. PG design trajectories can be guided by experimental sequence–activity data, providing a general approach for integrated computational and experimental optimization of protein function.",,,,Unverified,2024-11-25 21:13:54+00:00,"United States of America,United States of America,United States of America,United States of America,Germany",,,,,,,,,
Mothra,Biology,Tokyo Institute of Technology,Academia,"Takamasa Suzuki, Dian Ma, Nobuaki Yasuo, Masakazu Sekijima",2024-09-25,Mothra: Multiobjective de novo Molecular Generation Using Monte Carlo Tree Search,,,,,,,3.7e+19,,,"1. Hardware setup: 4x NVIDIA Tesla P100 GPUs (1.90×10¹³ FLOP/s per GPU)

2. Training duration: 14 days (directly provided) = 1,209,600 seconds

3. Utilization rate: 40%

4. Final calculation:
1.90×10¹³ FLOP/s/GPU × 4 GPUs × 1,209,600 seconds × 0.4 = 3.7×10¹⁹ FLOPs",,,12500001.0,"250,000 molecules × 50 tokens/molecule = 12,500,000 tokens
Total training datapoints = 12,500,000 tokens (1.25e7)",,,,,,,"In the field of drug discovery, identifying compounds that satisfy multiple criteria, such as target protein affinity, pharmacokinetics, and membrane permeability, is challenging because of the vast chemical space. Until now, multiobjective optimization via generative models has often involved linear combinations of different reward functions. Linear combinations solve multiobjective optimization problems by turning multiobjective optimization into a single-objective task and causing problems with weighting for each objective. Herein, we propose a scalable multiobjective molecular generative model developed using deep learning techniques. This model integrates the capabilities of recurrent neural networks for molecular generation and Pareto multiobjective Monte Carlo tree search to determine the optimal search direction. Through this integration, our model can generate compounds using enhanced evaluation functions that include important aspects like target protein affinity, drug similarity, and toxicity. The proposed model addresses the limitations of previous linear combination methods, and its effectiveness is demonstrated via extensive experimentation. The improvements achieved in the evaluation metrics underscore the potential utility of our approach toward drug discovery applications. In addition, we provide the source code for our model such that researchers can easily access and use our framework in their own investigations. The source code and pretrained model for Mothra, developed in this study, along with the Docker image for the Pareto front explorer and compound picker, designed to streamline the selection and visualization of optimal chemical compounds, are released under the GNU General Public License v3.0 and available at https://github.com/sekijima-lab/Mothra.",,,,Unverified,2025-02-14 19:02:53+00:00,Japan,,,,,,,,,
GeoAB,Biology,"Zhejiang University,Westlake University","Academia,Academia","Haitao Lin, Lirong Wu, Yufei Huang, Yunfan Liu, Odin Zhang, Yuanqing Zhou, Rui Sun, Stan Z. Li",2024-09-25,GeoAB: Towards Realistic Antibody Design and Reliable Affinity Maturation,https://www.biorxiv.org/content/10.1101/2024.05.15.594274v2.abstract,,,,,,1.5000000000000005e+18,,,"1. Hardware setup: 1x NVIDIA H100 PCIe GPU (7.56e14 FLOP/s with fp16_tensor)
2. Training duration: 5000 seconds (calculated from 250s/epoch × 20 epochs)
3. Utilization rate: 40%
4. Final calculation: 7.56e14 FLOP/s × 1 GPU × 5000s × 0.4 = 1.512e18 FLOP",,,16500000.999999989,"SAbDab: 30,000 structures × 10 CDRs/structure × 15 residues/CDR = 4.5 × 10⁶ residues
SKEMPI2: 3,000 interactions × 3,000 residues/interaction = 9 × 10⁶ residues
PDB-REDO: 30,000 structures × 100 residues/structure = 3 × 10⁶ residues

Total: 4.5 × 10⁶ + 9 × 10⁶ + 3 × 10⁶ = 16.5 × 10⁶ residues

Final estimate: 1.65 × 10⁷ datapoints",,,,,,,"Increasing works for antibody design are emerging to generate sequences and structures in Complementarity Determining Regions (CDRs), but problems still exist. We focus on two of them: (i) authenticity of the generated structure and (ii) rationality of the affinity maturation, and propose GEOAB as a solution. In specific, GeoABDesigner generates CDR structures with realistic internal geometries, composed of a generative geometry initializer (Geo-Initializer) and a position refiner (Geo-Refiner); GeoAB-Optimizer achieves affinity maturation by accurately predicting both the mutation effects and structures of mutant antibodies with the same network architecture as Geo-Refiner. Experiments show that GEOAB achieves state-of-the-art performance in CDR co-design and mutation effect predictions, and fulfills the discussed tasks effectively.",,,,Unverified,2025-02-14 19:02:47+00:00,"China,China",,,,,,,,,
ChemNet,Biology,University of Washington,Academia,"Ivan Anishchenko, Yakov Kipnis, Indrek Kalvet, Guangfeng Zhou, Rohith Krishna, Samuel J Pellock, Anna Lauko, Gyu Rie Lee, Linna An, Justas Dauparas, Frank DiMaio, David Baker",2024-09-25,Modeling protein-small molecule conformational ensembles with ChemNet ,https://pmc.ncbi.nlm.nih.gov/articles/PMC11463446/,,,,,,,,,,,,112828.99999999996,"112,828 data points

Calculation: Single dataset (PDB) with 112,828 examples = 112,828 total data points",,,,,,,"Modeling the conformational heterogeneity of protein-small molecule systems is an outstanding challenge. We reasoned that while residue level descriptions of biomolecules are efficient for de novo structure prediction, for probing heterogeneity of interactions with small molecules in the folded state an entirely atomic level description could have advantages in speed and generality. We developed a graph neural network called ChemNet trained to recapitulate correct atomic positions from partially corrupted input structures from the Cambridge Structural Database and the Protein Data Bank; the nodes of the graph are the atoms in the system. ChemNet accurately generates structures of diverse organic small molecules given knowledge of their atom composition and bonding, and given a description of the larger protein context, and builds up structures of small molecules and protein side chains for protein-small molecule docking. Because ChemNet is rapid and stochastic, ensembles of predictions can be readily generated to map conformational heterogeneity. In enzyme design efforts described here and elsewhere, we find that using ChemNet to assess the accuracy and pre-organization of the designed active sites results in higher success rates and higher activities; we obtain a preorganized retroaldolase with a kcat/KM of 11000 M−1min−1, considerably higher than any pre-deep learning design for this reaction. We anticipate that ChemNet will be widely useful for rapidly generating conformational ensembles of small molecule and small molecule-protein systems, and for designing higher activity preorganized enzymes.",,,,Unverified,2025-01-30 05:04:21+00:00,United States of America,,,,,,,,,
PPFlow,Biology,"Zhejiang University,Westlake University","Academia,Academia","Haitao Lin, Odin Zhang, Huifeng Zhao, Dejun Jiang, Lirong Wu, Zicheng Liu, Yufei Huang, Stan Z. Li",2024-09-25,"PPFLOW: Target-aware Peptide Design with Torsional Flow Matching
",https://www.biorxiv.org/content/10.1101/2024.03.07.583831v5.abstract,,,,,,,,,,,,4850000.999999996,"Summary of calculations:
15,593 protein-peptide pairs
Average residues per pair = 300 (protein) + 12 (peptide) = 312
Total datapoints = 15,593 × 312 = 4.85 × 10^6",,,,,,,"Therapeutic peptides have proven to have great pharmaceutical value and potential in recent decades. However, methods of AI-assisted peptide drug discovery are not fully explored. To fill the gap, we propose a target-aware peptide design method called PPFlow, based on conditional flow matching on torus manifolds, to model the internal geometries of torsion angles for the peptide structure design. Besides, we establish a protein-peptide binding dataset named PPBench2024 to fill the void of massive data for the task of structure-based peptide drug design and to allow the training of deep learning methods. Extensive experiments show that PPFlow reaches state-of-the-art performance in tasks of peptide drug generation and optimization in comparison with baseline models, and can be generalized to other tasks including docking and side-chain packing.",,,,Unverified,2025-01-30 05:04:53+00:00,"China,China",,,,,,,,,
TxGNN,Biology,"Harvard Medical School,Harvard-MIT Program in Health Sciences and Technology,The Mount Sinai Hospital (New York),Broad Institute,Harvard Data Science Initiative,Harvard University,Stanford University","Academia,Research collective,Research collective,Academia,Academia,Academia","Kexin Huang, Payal Chandak, Qianwen Wang, Shreyas Havaldar, Akhil Vaid, Jure Leskovec, Girish N. Nadkarni, Benjamin S. Glicksberg, Nils Gehlenborg, Marinka Zitnik",2024-09-25,A foundation model for clinician-centered drug repurposing ,https://www.nature.com/articles/s41591-024-03233-x,,,,,,,,,,,,8063001.000000015,"Total datapoints = 8,063,026 edges

Calculation: Given directly from knowledge graph details (no addition/multiplication needed)
Final number: 8.063e6",,,,,,,"Drug repurposing—identifying new therapeutic uses for approved drugs—is often a serendipitous and opportunistic endeavour to expand the use of drugs for new diseases. The clinical utility of drug-repurposing artificial intelligence (AI) models remains limited because these models focus narrowly on diseases for which some drugs already exist. Here we introduce TxGNN, a graph foundation model for zero-shot drug repurposing, identifying therapeutic candidates even for diseases with limited treatment options or no existing drugs. Trained on a medical knowledge graph, TxGNN uses a graph neural network and metric learning module to rank drugs as potential indications and contraindications for 17,080 diseases. When benchmarked against 8 methods, TxGNN improves prediction accuracy for indications by 49.2% and contraindications by 35.1% under stringent zero-shot evaluation. To facilitate model interpretation, TxGNN’s Explainer module offers transparent insights into multi-hop medical knowledge paths that form TxGNN’s predictive rationales. Human evaluation of TxGNN’s Explainer showed that TxGNN’s predictions and explanations perform encouragingly on multiple axes of performance beyond accuracy. Many of TxGNN’s new predictions align well with off-label prescriptions that clinicians previously made in a large healthcare system. TxGNN’s drug-repurposing predictions are accurate, consistent with off-label drug use, and can be investigated by human experts through multi-hop interpretable rationales.",,,,Unverified,2025-01-30 05:05:14+00:00,"United States of America,United States of America,United States of America,United States of America,United States of America,United States of America,United States of America",,,,,,,,,
SeaMoon,Biology,"Sorbonne University,Université Grenoble Alpes,Institut Universitaire de France (IUF)","Academia,Academia,Research collective","Valentin Lombard, Dan Timsit, Sergei Grudinin, Elodie Laine",2024-09-25,SeaMoon: Prediction of molecular motions based on language models,https://www.biorxiv.org/content/10.1101/2024.09.23.614585v1.abstract,,,,,,,,,,,,11000000.999999994,"7,339 collections × 5 conformations/collection = 36,695 conformations
36,695 conformations × 300 residues/protein = 11,008,500 datapoints
Final estimate: 1.1e7 datapoints",,,,,,,"How protein move and deform determines their interactions with the environment and is thus of utmost importance for cellular functioning. Following the revolution in single protein 3D structure prediction, researchers have focused on repurposing or developing deep learning models for sampling alternative protein conformations. In this work, we explored whether continuous compact representations of protein motions could be predicted directly from protein sequences, without exploiting nor sampling protein structures. Our approach, called SeaMoon, leverages protein Language Model (pLM) embeddings as input to a lightweight (∼1M trainable parameters) convolutional neural network. SeaMoon achieves a success rate of up to 40% when assessed against ∼1 000 collections of experimental conformations exhibiting a wide range of motions. SeaMoon capture motions not accessible to the normal mode analysis, an unsupervised physics-based method relying solely on a protein structure’s 3D geometry, and generalises to proteins that do not have any detectable sequence similarity to the training set. SeaMoon is easily retrainable with novel or updated pLMs.",,,,Unverified,2025-01-30 05:04:42+00:00,"France,France,France",,,,,,,,,
KnoMol,Biology,"Zhejiang University,Jiangsu University of Technology,Zhejiang University School of Medicine","Academia,Academia","Jian Gao, Zheyuan Shen, Yan Lu, Liteng Shen, Binbin Zhou, Donghang Xu, Haibin Dai, Lei Xu, Jinxin Che, Xiaowu Dong",2024-09-25,KnoMol: A Knowledge-Enhanced Graph Transformer for Molecular Property Prediction,https://pubs.acs.org/doi/abs/10.1021/acs.jcim.4c01092,,,,,,,,,,,,1160001.0000000012,"Total datapoints = 1,163,125

Calculation breakdown:
1,163,125 molecules (CHEMBL1163125 dataset)

Final result: 1.16e6",,,,,,,"Molecular property prediction (MPP) techniques are pivotal in reducing drug development costs by preemptively predicting bioactivity and ADMET properties. Despite the application of numerous deep learning approaches, enhancing the representational capacity of these models remains a significant challenge. This paper presents a novel knowledge-based Transformer framework, KnoMol, designed to improve the understanding of molecular structures. KnoMol integrates expert chemical knowledge into the Transformer, emulating the analytical methods of medicinal chemists. Additionally, the multiperspective attention mechanism provides a more precise way to represent ring systems. In the evaluation experiments, KnoMol achieved state-of-the-art performance on both MoleculeNet and small-scale data sets, surpassing existing models in terms of accuracy and generalization. Further research indicated that the incorporation of knowledge significantly reduces KnoMol’s reliance on data volumes, offering a solution to the challenge of data scarcity. Moreover, KnoMol identified several new inhibitors of HER2 in a case study, demonstrating its value in real-world applications. Overall, this research not only provides a powerful tool for MPP but also serves as a successful precedent for embedding knowledge into Transformers, with positive implications for computer-aided drug discovery and the development of MPP algorithms.",,,,Unverified,2025-01-30 05:04:27+00:00,"China,China,China",,,,,,,,,
CodonMPNN,Biology,"Harvard Medical School,Massachusetts Institute of Technology (MIT)","Academia,Academia","Hannes Stark, Umesh Padia, Julia Balla, Cameron Diao, George Church",2024-09-25,CodonMPNN for Organism Specific and Codon Optimal Inverse Folding,https://arxiv.org/abs/2409.17265,,,,,,,,,,,,,,,,,,,,"Generating protein sequences conditioned on protein structures is an impactful technique for protein engineering. When synthesizing engineered proteins, they are commonly translated into DNA and expressed in an organism such as yeast. One difficulty in this process is that the expression rates can be low due to suboptimal codon sequences for expressing a protein in a host organism. We propose CodonMPNN, which generates a codon sequence conditioned on a protein backbone structure and an organism label. If naturally occurring DNA sequences are close to codon optimality, CodonMPNN could learn to generate codon sequences with higher expression yields than heuristic codon choices for generated amino acid sequences. Experiments show that CodonMPNN retains the performance of previous inverse folding approaches and recovers wild-type codons more frequently than baselines. Furthermore, CodonMPNN has a higher likelihood of generating high-fitness codon sequences than low-fitness codon sequences for the same protein sequence. Code is available at this https URL.",,,,Unverified,2024-11-23 21:22:33+00:00,"United States of America,United States of America",,,,,,,,,
Molmo 72B,"Language,Vision,Multimodal","Allen Institute for AI,University of Washington","Research collective,Academia","Matt Deitke, Christopher Clark, Sangho Lee, Rohun Tripathi, Yue Yang, Jae Sung Park, Mohammadreza Salehi, Niklas Muennighoff, Kyle Lo, Luca Soldaini, Jiasen Lu, Taira Anderson, Erin Bransom, Kiana Ehsani, Huong Ngo, YenSung Chen, Ajay Patel, Mark Yatskar, Chris Callison-Burch, Andrew Head, Rose Hendrix, Favyen Bastani, Eli VanderBilt, Nathan Lambert, Yvonne Chou, Arnavi Chheda, Jenna Sparks, Sam Skjonsberg, Michael Schmitz, Aaron Sarnat, Byron Bischoff, Pete Walsh, Chris Newell, Piper Wolters, Tanmay Gupta, Kuo-Hao Zeng, Jon Borchardt, Dirk Groeneveld, Jen Dumas, Crystal Nam, Sophie Lebrecht, Caitlin Wittlif, Carissa Schoenick, Oscar Michel, Ranjay Krishna, Luca Weihs, Noah A. Smith, Hannaneh Hajishirzi, Ross Girshick, Ali Farhadi, Aniruddha Kembhavi",2024-09-25,Molmo and PixMo: Open Weights and Open Data for State-of-the-Art Multimodal Models,https://arxiv.org/abs/2409.17146,,,"Our best-in-class Molmo model, Molmo-72B, achieves the highest academic benchmark score and ranks second on human evaluation, just slightly behind GPT-4o.
Our best Molmo model also outperforms several state-of-the-art proprietary systems, including Gemini 1.5 Pro and Flash and Claude 3.5 Sonnet.",72000000000.0,,,,,,PixMo,,,""" In total, we trained on 712k distinct images with ∼1.3M captions (including the augmentation).""",,,,,,,"Today's most advanced multimodal models remain proprietary. The strongest open-weight models rely heavily on synthetic data from proprietary VLMs to achieve good performance, effectively distilling these closed models into open ones. As a result, the community is still missing foundational knowledge about how to build performant VLMs from scratch. We present Molmo, a new family of VLMs that are state-of-the-art in their class of openness. Our key innovation is a novel, highly detailed image caption dataset collected entirely from human annotators using speech-based descriptions. To enable a wide array of user interactions, we also introduce a diverse dataset mixture for fine-tuning that includes in-the-wild Q&A and innovative 2D pointing data. The success of our approach relies on careful choices for the model architecture details, a well-tuned training pipeline, and, most critically, the quality of our newly collected datasets, all of which will be released. The best-in-class 72B model within the Molmo family not only outperforms others in the class of open weight and data models but also compares favorably against proprietary systems like GPT-4o, Claude 3.5, and Gemini 1.5 on both academic benchmarks and human evaluation.
We will be releasing all of our model weights, captioning and fine-tuning data, and source code in the near future. Select model weights, inference code, and demo are available at this https URL.",,Open weights (unrestricted),,Confident,2025-01-03 20:46:36+00:00,"United States of America,United States of America",Qwen2-72B,,,,,,,,
dnaGrinder,Biology,Hong Kong Polytechnic University,Academia,"Qihang Zhao, Chi Zhang, Weixiong Zhang",2024-09-24,dnaGrinder: a lightweight and high-capacity genomic foundation model,https://arxiv.org/abs/2409.15697,0.0,,,,,2.59999999999998e+19,,,"1. Hardware setup:
- Initial: 8x NVIDIA H100 SXM5 (7.56e14 FLOP/s per GPU)
- Further: 1x NVIDIA A800 (7.80e13 FLOP/s)

2. Training duration (calculated from steps):
- Initial: 119,000 steps × (256×2314) tokens/step = 7.04e10 tokens
- Further: 31,000 steps × (32×2241) tokens/step = 2.22e9 tokens

3. Utilization rate: 40%

4. Final calculation:
Initial: 6 × 6.36e7 params × 7.04e10 tokens = 2.68e19 FLOPs
Further: 6 × 6.36e7 params × 2.22e9 tokens = 8.46e17 FLOPs
Total with utilization: (2.68e19 + 8.46e17) × 0.4 = 2.6e19 FLOPs",,,69400000000.99995,"Main Pretraining: 69 billion
Further Pretraining: 0.41 billion
Total: 69 + 0.41 = 69.41 billion (6.94e10) tokens",,,,,,,"The task of understanding and interpreting the complex information encoded within genomic sequences remains a grand challenge in biological research and clinical applications. In this context,
recent advancements in large language model research have led to the development of both encoderonly and decoder-only foundation models designed to decode intricate information in DNA sequences.
However, several issues persist, particularly regarding the efficient management of long-range dependencies inherent in genomic sequences, the effective representation of nucleotide variations, and the
considerable computational costs associated with large model architectures and extensive pretraining
datasets. Current genomic foundation models often face a critical tradeoff: smaller models with
mediocre performance versus large models with improved performance. To address these challenges,
we introduce dnaGrinder, a unique and efficient genomic foundation model. dnaGrinder excels at
managing long-range dependencies within genomic sequences while minimizing computational costs
without compromising performance. It achieves results that are not just comparable but often superior
to leading DNA models such as Nucleotide Transformer and DNABERT-2. Furthermore, dnaGrinder
is designed for easy fine-tuning on workstation-grade GPUs, accommodating input lengths exceeding
17,000 tokens. On a single high-performance GPU, it supports sequences longer than 140,000
tokens, making it a highly efficient and accessible tool for both basic biological research and clinical
applications.",,,,Unverified,2025-01-30 05:04:09+00:00,"Hong Kong,China",,,,,,,,,
Protein-Mamba,Biology,"Rensselaer Polytechnic Institute,Stanford University,University of Minnesota,Korea Advanced Institute of Science and Technology (KAIST),University of Illinois Urbana-Champaign (UIUC)","Academia,Academia,Academia,Academia,Academia","Bohao Xu, Yingzhou Lu, Yoshitaka Inoue, Namkyeong Lee, Tianfan Fu, Jintai Chen",2024-09-24,"Protein-Mamba: Biological Mamba Models for Protein Function
Prediction",https://arxiv.org/abs/2409.14617,0.0,,,,,1.2000000000000008e+18,,,"1. Hardware: 1x NVIDIA RTX 3090 (1.60e+14 FLOP/s peak fp16)
2. Training duration: 125 hours (estimated: 100h pretraining + 25h fine-tuning)
3. Utilization: 40% of peak performance
4. Calculation: 1.60e+14 FLOP/s × 0.40 × 1 GPU × (125 × 3600s) = 2.88e+19 FLOP (rounded to 1.2e+18 FLOP)",,,8100001.000000008,"Total number of datapoints = 27,043 proteins × 300 amino acids/protein = 8,112,900

This equals approximately 8.1 × 10⁶ datapoints

27,043 × 300 = 8,112,900",,,,,,,"Protein function prediction is a pivotal task in drug discovery, significantly impacting the development of effective and safe therapeutics. Traditional machine learning models often struggle with the complexity and variability inherent in predicting protein functions, necessitating more sophisticated approaches. In this work, we
introduce Protein-Mamba, a novel two-stage model that
leverages both self-supervised learning and fine-tuning
to improve protein function prediction. The pre-training
stage allows the model to capture general chemical structures and relationships from large, unlabeled datasets,
while the fine-tuning stage refines these insights using
specific labeled datasets, resulting in superior prediction
performance. Our extensive experiments demonstrate that
Protein-Mamba achieves competitive performance, compared with a couple of state-of-the-art methods across a
range of protein function datasets. This model’s ability to
effectively utilize both unlabeled and labeled data highlights the potential of self-supervised learning in advancing protein function prediction and offers a promising direction for future research in drug discovery.",,,,Unverified,2025-02-14 19:05:36+00:00,"United States of America,United States of America,United States of America,Korea (Republic of),United States of America",,,,,,,,,
AFP-Deep,Biology,"Nanjing University,Yangzhou University","Academia,Academia","Jiashun Wu, Yan Liu, Yiheng Zhu, Dong-Jun Yu",2024-09-24,Improving Antifreeze Proteins Prediction with Protein Language Models and Hybrid Feature Extraction Networks,https://ieeexplore.ieee.org/document/10691918/authors#authors,0.0,,,,,,,,,,,,,,,,,,,"Accurate identification of antifreeze proteins (AFPs) is crucial in developing biomimetic synthetic anti-icing materials and low-temperature organ preservation materials. Although numerous machine learning-based methods have been proposed for AFPs prediction, the complex and diverse nature of AFPs limits the prediction performance of existing methods. In this study, we propose AFP-Deep, a new deep learning method to predict antifreeze proteins by integrating embedding from protein sequences with pre-trained protein language models and evolutionary contexts with hybrid feature extraction networks. The experimental results demonstrated that the main advantage of AFP-Deep is its utilization of pre-trained protein language models, which can extract discriminative global contextual features from protein sequences. Additionally, the hybrid deep neural networks designed for protein language models and evolutionary context feature extraction enhance the correlation between embeddings and antifreeze pattern. The performance evaluation results show that AFP-Deep achieves superior performance compared to state-of-the-art models on benchmark datasets, achieving an AUPRC of 0.724 and 0.924, respectively.",,,,Unverified,2024-11-28 06:06:52+00:00,"China,China",,,,,,,,,
ProtBFN,Biology,InstaDeep,Industry,"Timothy Atkinson, Thomas D. Barrett, Scott Cameron, Bora Guloglu, Matthew Greenig, Louis Robinson, Alex Graves, Liviu Copoiu, Alexandre Laterre",2024-09-24,Protein Sequence Modelling with Bayesian Flow Networks,https://www.biorxiv.org/content/10.1101/2024.09.24.614734v1.abstract,1.0,,,,,3.900000000000003e+22,,,"1. Hardware setup:
- ProtBFN: 256 TPU v4 chips (2.75e14 FLOP/s per chip)
- AbBFN: 128 TPU v4 chips (2.75e14 FLOP/s per chip)

2. Training duration:
- ProtBFN: 14 days = 1,209,600 seconds
- AbBFN: 4 days = 345,600 seconds

3. Utilization rate: 40%

4. Final calculation:
- ProtBFN: 2.75e14 × 256 × 1,209,600 × 0.4 = 3.406e22 FLOPs
- AbBFN: 2.75e14 × 128 × 345,600 × 0.4 = 4.866e21 FLOPs
- Total: 3.406e22 + 4.866e21 = 3.9e22 FLOPs",,,21000000001.0,"Total tokens = 71,000,000 sequences × 300 residues = 21,300,000,000 tokens (2.13×10¹⁰)
Alternative calculation with 256 residues:
71,000,000 sequences × 256 residues = 18,176,000,000 tokens (1.82×10¹⁰)
Final estimate: 2.1×10¹⁰ tokens",,,,,,,"Exploring the vast and largely uncharted territory of amino acid sequences is crucial for understanding complex protein functions and the engineering of novel therapeutic proteins. Whilst generative machine learning has advanced protein sequence modelling, no existing approach is proficient for both unconditional and conditional generation. In this work, we propose that Bayesian Flow Networks (BFNs), a recently introduced framework for generative modelling, can address these challenges. We present ProtBFN, a 650M parameter model trained on protein sequences curated from UniProtKB, which generates natural-like, diverse, structurally coherent, and novel protein sequences, significantly outperforming leading autoregressive and discrete diffusion models. Further, we fine-tune ProtBFN on heavy chains from the Observed Antibody Space (OAS) to obtain an antibody-specific model, AbBFN, which we use to evaluate zero-shot conditional generation capabilities. AbBFN is found to be competitive with, or better than, antibody-specific BERT-style models, when applied to predicting individual framework or complimentary determining regions (CDR).",,,,Unverified,2025-02-14 19:05:26+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Llama 3.2 11B,"Multimodal,Vision,Language",Meta AI,Industry,,2024-09-24,"Llama 3.2: Revolutionizing edge AI and vision with open, customizable models",https://ai.meta.com/blog/llama-3-2-connect-2024-vision-edge-mobile-devices/,,,,10600000000.0,https://huggingface.co/meta-llama/Llama-3.2-11B-Vision,,,,,Unspecified unreleased,,6000000000.0,"""6B (image, text) pairs""",,,"""Stage 1 pretraining: 147K H100 hours Stage 2 annealing: 98K H100 hours SFT: 896 H100 hours RLHF: 224 H100 hours""

https://huggingface.co/meta-llama/Llama-3.2-11B-Vision",NVIDIA H100 SXM5 80GB,,,"Today, we’re releasing Llama 3.2, which includes small and medium-sized vision LLMs (11B and 90B), and lightweight, text-only models (1B and 3B) that fit onto edge and mobile devices, including pre-trained and instruction-tuned versions.
Supported by a broad ecosystem, the Llama 3.2 11B and 90B vision models are drop-in replacements for their corresponding text model equivalents, while exceeding on image understanding tasks compared to closed models, such as Claude 3 Haiku. Unlike other open multimodal models, both pre-trained and aligned models are available to be fine-tuned for custom applications using torchtune and deployed locally using torchchat. They’re also available to try using our smart assistant, Meta AI.
We’re sharing the first official Llama Stack distributions, which will greatly simplify the way developers work with Llama models in different environments, including single-node, on-prem, cloud, and on-device, enabling turnkey deployment of retrieval-augmented generation (RAG) and tooling-enabled applications with integrated safety.
We’ve been working closely with partners like AWS, Databricks, Dell Technologies, Fireworks, Infosys, and Together AI to build Llama Stack distributions for their downstream enterprise clients. On-device distribution is via PyTorch ExecuTorch, and single-node distribution is via Ollama.
We continue to share our work because we believe openness drives innovation and is good for developers, Meta, and the world. Llama is already leading the way on openness, modifiability, and cost efficiency—enabling more people to have creative, useful, and life-changing breakthroughs using generative AI.
We’re making Llama 3.2 models available for download on llama.com and Hugging Face, as well as available for immediate development on our broad ecosystem of partner platforms, including AMD, AWS, Databricks, Dell, Google Cloud, Groq, IBM, Intel, Microsoft Azure, NVIDIA, Oracle Cloud, Snowflake, and more.",,Open weights (restricted use),,Confident,2024-12-19 03:04:49+00:00,United States of America,Llama 3.1-8B,3.50010000000001e+23,147000+98000+896+224 GPU-hours => 246120 GPU-hours * 60 * 60 * 989e12 FLOP * 0.4 (utilization) = 3.5e23 FLOP,,,,,,
Llama 3.2 90B,"Multimodal,Vision,Language",Meta AI,Industry,,2024-09-24,"Llama 3.2: Revolutionizing edge AI and vision with open, customizable models",https://ai.meta.com/blog/llama-3-2-connect-2024-vision-edge-mobile-devices/,,,,88600000000.0,https://huggingface.co/meta-llama/Llama-3.2-90B-Vision,,,,,Unspecified unreleased,,6000000000.0,"""6B (image, text) pairs""",,,"""Stage 1 pretraining: 885K H100 hours Stage 2 annealing: 885K H100 hours SFT: 3072 H100 hours RLHF: 2048 H100 hours""

https://huggingface.co/meta-llama/Llama-3.2-90B-Vision",NVIDIA H100 SXM5 80GB,,,"Today, we’re releasing Llama 3.2, which includes small and medium-sized vision LLMs (11B and 90B), and lightweight, text-only models (1B and 3B) that fit onto edge and mobile devices, including pre-trained and instruction-tuned versions.
Supported by a broad ecosystem, the Llama 3.2 11B and 90B vision models are drop-in replacements for their corresponding text model equivalents, while exceeding on image understanding tasks compared to closed models, such as Claude 3 Haiku. Unlike other open multimodal models, both pre-trained and aligned models are available to be fine-tuned for custom applications using torchtune and deployed locally using torchchat. They’re also available to try using our smart assistant, Meta AI.
We’re sharing the first official Llama Stack distributions, which will greatly simplify the way developers work with Llama models in different environments, including single-node, on-prem, cloud, and on-device, enabling turnkey deployment of retrieval-augmented generation (RAG) and tooling-enabled applications with integrated safety.
We’ve been working closely with partners like AWS, Databricks, Dell Technologies, Fireworks, Infosys, and Together AI to build Llama Stack distributions for their downstream enterprise clients. On-device distribution is via PyTorch ExecuTorch, and single-node distribution is via Ollama.
We continue to share our work because we believe openness drives innovation and is good for developers, Meta, and the world. Llama is already leading the way on openness, modifiability, and cost efficiency—enabling more people to have creative, useful, and life-changing breakthroughs using generative AI.
We’re making Llama 3.2 models available for download on llama.com and Hugging Face, as well as available for immediate development on our broad ecosystem of partner platforms, including AMD, AWS, Databricks, Dell, Google Cloud, Groq, IBM, Intel, Microsoft Azure, NVIDIA, Oracle Cloud, Snowflake, and more.",,Open weights (restricted use),,Confident,2025-01-22 16:28:08+00:00,United States of America,Llama 3.1-70B,2.500010000000001e+24,885000×2+3072+2048 GPU-hours => 1775120 GPU-hours * 60 * 60 * 989e12 FLOP * 0.4 (utilization) = 2.5e24 FLOP,,,,,,
Llama 3.2 1B,Language,Meta AI,Industry,,2024-09-24,"Llama 3.2: Revolutionizing edge AI and vision with open, customizable models",https://ai.meta.com/blog/llama-3-2-connect-2024-vision-edge-mobile-devices/,,,,1230000000.0,https://huggingface.co/meta-llama/Llama-3.2-1B,6.642e+22,,,"6ND = 6*1230000000.00*9000000000000 = 6.642e+22

370000 hours * 3600 s * 133800000000000 FLOPS/s* 0.3 = 5.346648e+22",Unspecified unreleased,,9000000000000.0,"""Llama 3.2 was pretrained on up to 9 trillion tokens of data from publicly available sources.""",,,https://huggingface.co/meta-llama/Llama-3.2-1B,NVIDIA H100 SXM5 80GB,,,"Today, we’re releasing Llama 3.2, which includes small and medium-sized vision LLMs (11B and 90B), and lightweight, text-only models (1B and 3B) that fit onto edge and mobile devices, including pre-trained and instruction-tuned versions.
The Llama 3.2 1B and 3B models support context length of 128K tokens and are state-of-the-art in their class for on-device use cases like summarization, instruction following, and rewriting tasks running locally at the edge. These models are enabled on day one for Qualcomm and MediaTek hardware and optimized for Arm processors.
We’re sharing the first official Llama Stack distributions, which will greatly simplify the way developers work with Llama models in different environments, including single-node, on-prem, cloud, and on-device, enabling turnkey deployment of retrieval-augmented generation (RAG) and tooling-enabled applications with integrated safety.
We’ve been working closely with partners like AWS, Databricks, Dell Technologies, Fireworks, Infosys, and Together AI to build Llama Stack distributions for their downstream enterprise clients. On-device distribution is via PyTorch ExecuTorch, and single-node distribution is via Ollama.
We continue to share our work because we believe openness drives innovation and is good for developers, Meta, and the world. Llama is already leading the way on openness, modifiability, and cost efficiency—enabling more people to have creative, useful, and life-changing breakthroughs using generative AI.
We’re making Llama 3.2 models available for download on llama.com and Hugging Face, as well as available for immediate development on our broad ecosystem of partner platforms, including AMD, AWS, Databricks, Dell, Google Cloud, Groq, IBM, Intel, Microsoft Azure, NVIDIA, Oracle Cloud, Snowflake, and more.",,Open weights (restricted use),,Confident,2024-11-26 15:01:31+00:00,United States of America,,,,,,,,,
Llama 3.2 3B,Language,Meta AI,Industry,,2024-09-24,"Llama 3.2: Revolutionizing edge AI and vision with open, customizable models",https://ai.meta.com/blog/llama-3-2-connect-2024-vision-edge-mobile-devices/,,,,3210000000.0,https://huggingface.co/meta-llama/Llama-3.2-1B,1.7334e+23,,,"6ND = 6*3210000000.00*9000000000000 = 1.7334e+23

460000 hours * 3600 s * 133800000000000 FLOPS/s* 0.3 = 6.647184e+22",Unspecified unreleased,,9000000000000.0,"""Llama 3.2 was pretrained on up to 9 trillion tokens of data from publicly available sources.""",,,https://huggingface.co/meta-llama/Llama-3.2-1B,NVIDIA H100 SXM5 80GB,,,"Today, we’re releasing Llama 3.2, which includes small and medium-sized vision LLMs (11B and 90B), and lightweight, text-only models (1B and 3B) that fit onto edge and mobile devices, including pre-trained and instruction-tuned versions.
The Llama 3.2 1B and 3B models support context length of 128K tokens and are state-of-the-art in their class for on-device use cases like summarization, instruction following, and rewriting tasks running locally at the edge. These models are enabled on day one for Qualcomm and MediaTek hardware and optimized for Arm processors.
We’re sharing the first official Llama Stack distributions, which will greatly simplify the way developers work with Llama models in different environments, including single-node, on-prem, cloud, and on-device, enabling turnkey deployment of retrieval-augmented generation (RAG) and tooling-enabled applications with integrated safety.
We’ve been working closely with partners like AWS, Databricks, Dell Technologies, Fireworks, Infosys, and Together AI to build Llama Stack distributions for their downstream enterprise clients. On-device distribution is via PyTorch ExecuTorch, and single-node distribution is via Ollama.
We continue to share our work because we believe openness drives innovation and is good for developers, Meta, and the world. Llama is already leading the way on openness, modifiability, and cost efficiency—enabling more people to have creative, useful, and life-changing breakthroughs using generative AI.
We’re making Llama 3.2 models available for download on llama.com and Hugging Face, as well as available for immediate development on our broad ecosystem of partner platforms, including AMD, AWS, Databricks, Dell, Google Cloud, Groq, IBM, Intel, Microsoft Azure, NVIDIA, Oracle Cloud, Snowflake, and more.",,Open weights (restricted use),,Confident,2024-11-26 15:01:26+00:00,United States of America,,,,,,,,,
DrugTar,Biology,Isfahan University of Technology,Academia,"Niloofar Borhani, Iman Izadi,  View ORCID ProfileAli Motahharynia, Mahsa Sheikholeslami, Yousof Gheisari",2024-09-24,DrugTar Improves Druggability Prediction by Integrating Large Language Models and Gene Ontologies,https://www.biorxiv.org/content/10.1101/2024.09.21.614218v1.abstract,,,,,,,,,,,,6316.999999999998,"ProTar-I: 2,248 proteins
ProTar-II: 4,068 proteins
Final total: 2,248 + 4,068 = 6,316 proteins",,,,,,,"Target discovery is crucial in drug development, especially for complex chronic diseases. Recent advances in high-throughput technologies and the explosion of biomedical data have highlighted the potential of computational druggability prediction methods. However, most current methods rely on sequence-based features with machine learning, which often face challenges related to hand-crafted features, reproducibility, and accessibility. Moreover, the potential of raw sequence and protein structure has not been fully investigated. Here, we leveraged both protein sequence and structure using deep learning techniques, revealing that protein sequence, especially pre- trained embeddings, is more informative than protein structure. Next, we developed DrugTar, a highl7lperformance deep learning algorithm integrating sequence embeddings from the ESM-2 pre-trained protein language model with protein ontologies to predict druggability. DrugTar achieved areas under the curve and precision-recall curve values above 0.90, outperforming state-of-the-art methods. In conclusion, DrugTar streamlines target discovery as a bottleneck in developing novel therapeutics.",,,,Unverified,2025-01-30 05:05:01+00:00,Iran (Islamic Republic of),,,,,,,,,
Designing of thermostable proteins with a desired melting temperature,Biology,"Indraprastha Institute of Information Technology
Delhi",Academia,"Purva Tijare, Nishant Kumar, Gajendra P. S. Raghava",2024-09-24,Designing of thermostable proteins with a desired melting temperature,https://www.biorxiv.org/content/10.1101/2024.09.21.614294v1.abstract,,,,738000000.0,"""This model comprises 36  layers and has a dimensionality of 1280, amounting to a total of 738 million parameters [28].""",61000000000000.0,,,738M connections with 13849 training examples for one (assumed) epoch using calculator.,,,13849.0,"""Training Dataset 13849 sequences"" in Figure 1",,,,,,,"The stability of proteins at higher temperatures is crucial for its functionality that is measured by their melting temperature (Tm). The Tm is the temperature at which 50% of the protein loses its native structure and activity. Existing methods for predicting Tm have two major limitations: first, they are often trained on redundant proteins, and second, they do not allow users to design proteins with the desired Tm. To address these limitations, we developed a regression method for predicting the Tm value of proteins using 17,312 non-redundant proteins, where no two proteins are more than 40% similar. We used 80% of the data for training and testing; remaining 20% of the data for validation. Initially, we developed a machine learning model using standard features from protein sequences. Our best model, developed using Shannon entropy for all residues, achieved the highest Pearson correlation of 0.80 with an R² of 0.63 between the predicted and actual Tm of proteins on the validation dataset. Next, we fine-tuned large language models (e.g., ProtBert, ProtGPT2, ProtT5) on our training dataset and generated embeddings. These embeddings have been used for developing machine learning models. Our best model, developed using ProtBert embeddings, achieved a maximum correlation of 0.89 with an R² of 0.80 on the validation dataset. Finally, we developed an ensemble method that combines standard protein features and embeddings. One of the aims of the study is to assist the scientific community in the design of targeted melting temperatures. We created a user-friendly web server and a python package for predicting and designing thermostable proteins. Our standalone software can be used to screen thermostable proteins in genomes and metagenomes. We demonstrated the application of PPTstab in identifying thermostable proteins in different organisms from their genomes, the model and data is available at: https://webs.iiitd.edu.in/raghava/pptstab.",,,,Unverified,2025-02-14 19:03:04+00:00,India,,,,,,,,,
Jaeger,Biology,"University Medicine Greifswald,Utrecht University,Friedrich Schiller University Jena","Academia,Academia,Academia","Yasas Wijesekara, Ling-Yi Wu, Rick Beeloo, Piotr Rozwalak, Ernestina Hauptfeld, Swapnil P. Doijad, Bas E. Dutilh, Lars Kaderali",2024-09-24,Jaeger: an accurate and fast deep-learning tool to detect bacteriophage sequences,https://www.biorxiv.org/content/10.1101/2024.09.24.612722v1.abstract,,,,,,,,,,,,2112001.0000000005,"Total fragments = 265,959 + 1,375,939 + 915,817 + 459,660 = 3,017,375
Training set (70%) = 3,017,375 × 0.70 = 2,112,162.5
Final estimate ≈ 2.112 × 10⁶ unique data points",,,,,,,"Viruses are integral to every biome on Earth, yet we still need a more comprehensive picture of their identity and global distribution. Global metagenomics sequencing efforts revealed the genomic content of tens of thousands of environmental samples, however identifying the viral sequences in these datasets remains challenging due to their vast genomic diversity. Here, we address identifying bacteriophage sequences in unlabeled sequencing data. In a recent benchmarking paper, we observed that existing deep-learning tools show a high true positive rate, but may also produce many false positives when confronted with divergent sequences. To tackle this challenge, we introduce Jaeger, a novel deep-learning method designed specifically for identifying bacteriophage genome fragments. Extensive benchmarking on the IMG/VR database and real-world metagenomes reveals Jaeger’s consistent high sensitivity (0.87) and precision (0.92). Applying Jaeger to over 16,000 metagenomic assemblies from the MGnify database yielded over five million putative phage contigs. On average, Jaeger is around 20 times faster than the other state-of-the-art methods. Jaeger is available at https://github.com/MGXlab/Jaeger.

",,,,Unverified,2025-01-30 05:04:34+00:00,"Germany,Netherlands,Germany",,,,,,,,,
Importance of higher-order epistasis in large protein sequence-function relationships,Biology,University of Florida,Academia,"Palash Sethi a, Juannan Zhou",2024-09-24,Importance of higher-order epistasis in large protein sequence-function relationships,https://pmc.ncbi.nlm.nih.gov/articles/PMC11463489/,,,,,,,,,,,,23500000.999999996,"Initial calculations by dataset:
1. GRB-1: 129,320 * 0.8 * 33 = 3,414,048
2. GRB-3-abundance: 31,936 * 0.8 * 15 = 383,235
3. GRB-3-binding: 25,967 * 0.8 * 15 = 311,610
4. AAV2-Capsid: 42,328 * 0.8 * 28 = 948,136
5. CreiLOV: 165,428 * 0.8 * 15 = 1,985,130
6. cgreGFP: 26,165 * 0.8 * 234 = 4,898,088
7. ppluGFP: 32,260 * 0.8 * 221 = 5,703,568
8. His3-S2: 116,935 * 0.8 * 28 = 2,619,344
9. His3-S5: 92,408 * 0.8 * 31 = 2,291,706
10. His3-S12: 62,305 * 0.8 * 19 = 947,036

Final sum: 3,414,048 + 383,235 + 311,610 + 948,136 + 1,985,130 + 4,898,088 + 5,703,568 + 2,619,344 + 2,291,706 + 947,036 = 23,501,901",,,,NVIDIA A100,1.0,,"Epistasis complicates our understanding of protein sequence-function relationships and impedes our ability to build accurate predictive models for novel genotypes. Although pairwise epistasis has been extensively studied in proteins, the significance of higher-order epistasis for protein sequence-function relationships remains contentious, largely due to challenges in fitting higher-order epistatatic interactions for full-length proteins. Here, we introduce a novel transformer-based approach. The key feature of our method is that we can adjust the order of interactions fit by the model by changing the number of attention layers while also accounting for any global nonlinearity induced by the experimental conditions. This allows us to test if inclusion of higher-order interactions leads to enhanced model performance. Applying our method to 10 large protein sequence-function datasets, we found that the importance of higher-order epistasis differs substantially between proteins, accounting for up to 60% of the total variance attributed to epistasis. We also found that including higher-order epistasis is particularly important for generalizing locally sampled fitness data to distant regions of sequence space and for modeling an additional multi-peak fitness landscape derived from combining mutagenesis data from 4 orthologous green fluorescencent proteins. Our findings suggest that higher-order epistasis often does play an important role in protein sequence-function relationships, and thus should be properly incorporated during protein engineering and evolutionary data analysis.",,,,Unverified,2025-01-30 05:05:10+00:00,United States of America,,,,,,,,,
MTDP,Biology,,,"Jiayu Shang, Cheng Peng, Yongxin Ji, Jiaojiao Guan, Dehan Cai, Xubo Tang, Yanni Sun",2024-09-24,Accurate and efficient protein embedding using multi-teacher distillation learning,https://academic.oup.com/bioinformatics/article/40/9/btae567/7772445,,,,20000000.0,"""In particular, the student model in MTDP has a significantly smaller parameter scale (~20 million)"" from 2.1 Model Structure",600000000000000.0,,,"6 * 20,000,000 connections * 500,000 training examples * 10 epochs = 6.0e14 FLOP",UniProtKB/Swiss-Prot,"""MTDP is pre-trained on ~500 000 proteins from UniProtKB (Swiss-Prot) provided by the teacher model (Elnaggar et al. 2021)."" from 2.3.1 Pre-training data",500000.0,"""MTDP is pre-trained on ~500 000 proteins from UniProtKB (Swiss-Prot) provided by the teacher model (Elnaggar et al. 2021)."" from 2.3.1 Pre-training data",10.0,,,NVIDIA GeForce RTX 3080,4.0,,"Motivation
Protein embedding, which represents proteins as numerical vectors, is a crucial step in various learning-based protein annotation/classification problems, including gene ontology prediction, protein–protein interaction prediction, and protein structure prediction. However, existing protein embedding methods are often computationally expensive due to their large number of parameters, which can reach millions or even billions. The growing availability of large-scale protein datasets and the need for efficient analysis tools have created a pressing demand for efficient protein embedding methods.

Results
We propose a novel protein embedding approach based on multi-teacher distillation learning, which leverages the knowledge of multiple pre-trained protein embedding models to learn a compact and informative representation of proteins. Our method achieves comparable performance to state-of-the-art methods while significantly reducing computational costs and resource requirements. Specifically, our approach reduces computational time by ∼70% and maintains ±1.5% accuracy as the original large models. This makes our method well-suited for large-scale protein analysis and enables the bioinformatics community to perform protein embedding tasks more efficiently.",,,,Unverified,2025-02-14 19:05:06+00:00,,,,,,,,16.0,"""We conducted the pre-training process on four RTX 3080 24 GB Nvidia GPUs, with a batch size of 16."" from 2.3.1 Pre-training data",
AlphaMut,Biology,Indian Institute of Science Education and Research,Government,"Prathith Bhargav,  Arnab Mukherjee",2024-09-24,AlphaMut: a deep reinforcement learning model to suggest helix-disrupting mutations,https://www.biorxiv.org/content/10.1101/2024.09.21.614241v1.abstract,,,,,,,,,,,,358001.0000000003,"Total Data Points = Helix-only Training Steps + Helix-in-protein Training Steps
168,000 + 190,000 = 358,000 = 3.58e5 datapoints",,,,,,,"Helices are important secondary structural motifs within proteins and are pivotal in numerous physiological processes. While amino acids (AA) such as alanine and leucine are known to promote helix formation, proline and glycine disfavor it. Helical structure formation, however, also depends on its environment, and hence, prior prediction of a mutational effect on a helical structure is difficult. Here, we employ a reinforcement learning algorithm to develop a predictive model for helix-disrupting mutations. We start with a toy model consisting of helices with only 30 AA and train different models. Our results show that only a few mutations lead to a drastic disruption of the target helix. We further extend our approach to helices in proteins and validate the results using rigorous free energy calculations. Our strategy identifies amino acids crucial for maintaining structural integrity and predicts key mutations that could alter protein function. Through our work, we present a new use case for reinforcement learning in protein structure disruption.",,,,Unverified,2025-01-30 05:04:12+00:00,India,,,,,,,,,
Gemini 1.0 Pro (2024-09-24),,,,,2024-09-24,,,,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-27 19:41:06+00:00,,,,,,,,,,
PixelDance,Video,ByteDance,Industry,ByteDance,2024-09-24,PixelDance AI - Leading AI Video Generation Platform,https://pixeldance.io/,,SOTA improvement,"Currently invite only, I would expect a large number of users when released",,,,,,,,,,,,,,,,,"PixelDance V1.4 is a video generation model developed by the ByteDance Research team, using the DiT structure. It supports both text-to-video and image-to-video generation, capable of producing impressive 10-second video clips. The model has excellent semantic understanding, capable of handling complex narratives and subtle emotional expressions. It can perform sequential multi-shot actions, support complex interactions between multiple subjects, and offer a variety of camera effects. Compatible with multiple styles and proportions, it can quickly generate high-quality video clips, empowering film creation, advertising, short videos, live streaming, and e-commerce.",,Hosted access (no API),,Unverified,2024-12-01 13:07:54+00:00,China,,,,,,,,,
ByteDance Seaweed,Video,ByteDance,Industry,ByteDance,2024-09-24,ByteDance enters AI video race with Doubao’s PixelDance and Seaweed,https://kr-asia.com/bytedance-enters-ai-video-race-with-doubaos-pixeldance-and-seaweed,,,Unclear how many users,,,,,,,,,,,,,,,,,,,Hosted access (no API),,Unverified,2024-12-05 13:54:57+00:00,China,,,,,,,,,
AMPLIFY,Biology,"Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),Amgen,Polytechnique Montreal,CIFAR AI Research","Academia,Industry,Academia,Research collective","Quentin Fournier, Robert M. Vernon, Almer van der Sloot, Benjamin Schulz, Sarath Chandar,  Christopher James Langmead",2024-09-23,Protein Language Models: Is Scaling Necessary?,https://www.biorxiv.org/content/10.1101/2024.09.23.614603v1,1.0,,,,,1.1000000000000008e+22,,,"1. Hardware: A100 GPUs with 3.12×10¹⁴ FLOP/s per GPU (bf16/fp16)

2. Duration: Directly provided - 1,014 GPU days = 8.75×10⁷ seconds

3. Utilization: 40%

4. Calculation:
3.12×10¹⁴ FLOP/s × 8.75×10⁷ s × 0.40 = 1.09×10²² FLOPs",,,200000000000.9997,"Dataset: 391,000,000 sequences
Sequence length: 512 tokens/sequence
Total tokens = 391,000,000 × 512 = 2.00 × 10¹¹ tokens

Steps processed = 1,000,000 × 4,096 = 4,096,000,000 sequences
Number of epochs = 4,096,000,000 / 391,000,000 ≈ 10.47

Final result: 2.00 × 10¹¹ tokens",,,,,,,"Public protein sequence databases contain samples from the fitness landscape explored by nature. Protein language models (pLMs) pre-trained on these sequences aim to capture this landscape for tasks like property prediction and protein design. Following the same trend as in natural language processing, pLMs have continuously been scaled up. However, the premise that scale leads to better performance assumes that source databases provide accurate representation of the underlying fitness landscape, which is likely false. By developing an efficient codebase, designing a modern architecture, and addressing data quality concerns such as sample bias, we introduce AMPLIFY, a best-in-class pLM that is orders of magnitude less expensive to train and deploy than previous models. Furthermore, to support the scientific community and democratize the training of pLMs, we have open-sourced AMPLIFY’s pre-training codebase, data, and model checkpoints.",,,,Unverified,2025-02-14 19:06:24+00:00,"Canada,United States of America,Canada,Canada",,,,,,,,,
ProteinSetTransformer,Biology,University of Wisconsin Madison,Academia,"Karthik Anantharaman, Cody Martin, Anthony Gitter",2024-09-23,Protein Set Transformer: A protein-based genome language model to power high diversity viromics,https://www.researchsquare.com/article/rs-4844047/v1,,,,,,1.6500000000000016e+19,,,"1. Hardware setup: 1x NVIDIA A100 80GB (3.12 x 10^14 FLOP/s)

2. Training duration: 
   - pst-large: 33.7 hours (directly provided)
   - pst-small: 3.15 hours (estimated based on parameter ratio 178M/5M)

3. Utilization rate: 40%

4. Calculation:
   pst-large: 3.12 x 10^14 × 121,320 × 0.40 = 1.51 x 10^19 FLOPs
   pst-small: 3.12 x 10^14 × 11,340 × 0.40 = 1.42 x 10^18 FLOPs
   Total: 1.65 x 10^19 FLOPs",,,6391562.999999997,"datapoints = 6,391,562 proteins * 1 pass = 6.391562e6

This was from training the viral Protein Set Transformer (vPST) model on a dataset of 103,589 viruses containing 6,391,562 proteins total, with each protein counting as one datapoint.",,,,NVIDIA A100,,,"Exponential increases in microbial and viral genomic data demand transformational advances in scalable, generalizable frameworks for their interpretation. Standard homology-based functional analyses are hindered by the rapid divergence of microbial and especially viral genomes and proteins that significantly decreases the volume of usable data. Here, we present Protein Set Transformer (PST), a protein-based genome language model that models genomes as sets of proteins without considering sparsely available functional labels. Trained on >100k viruses, PST outperformed other homology- and language model-based approaches for relating viral genomes based on shared protein content. Further, PST demonstrated protein structural and functional awareness by clustering capsid-fold-containing proteins with known capsid proteins and uniquely clustering late gene proteins within related viruses. Our data establish PST as a valuable method for diverse viral genomics, ecology, and evolutionary applications. We posit that the PST framework can be a foundation model for microbial genomics when trained on suitable data.",,,,Unverified,2025-02-14 19:06:46+00:00,United States of America,,,,,,,,,
PreAlgPro,Biology,Shanghai Ocean University,Academia,"Lingrong Zhang, Taigang Liu",2024-09-23,PreAlgPro: Prediction of allergenic proteins with pre-trained protein language model and efficient neutral network,https://www.sciencedirect.com/science/article/abs/pii/S014181302406570X?via%3Dihub,0.0,,,,,,,,,,,,,,,,,,,"Allergy is a prevalent phenomenon, involving allergens such as nuts and milk. Avoiding exposure to allergens is the most effective preventive measure against allergic reactions. However, current homology-based methods for identifying allergenic proteins encounter challenges when dealing with non-homologous data. Traditional machine learning approaches rely on manually extracted features, which lack important protein functional characteristics, including evolutionary information. Consequently, there is still considerable room for improvement in existing methods. In this study, we present PreAlgPro, a method for identifying allergenic proteins based on pre-trained protein language models and deep learning techniques. Specifically, we employed the ProtT5 model to extract protein embedding features, replacing the manual feature extraction step. Furthermore, we devised an Attention-CNN neural network architecture to identify potential features that contribute to the classification of allergenic proteins. The performance of our model was evaluated on four independent test sets, and the experimental results demonstrate that PreAlgPro surpasses existing state-of-the-art methods. Additionally, we collected allergenic protein samples to validate the robustness of the model and conducted an analysis of model interpretability.",,,,Unverified,2024-10-22 14:17:18+00:00,China,,,,,,,,,
PocketGen,Biology,"University of Science and Technology of China,Hefei Comprehensive National Science Center,Harvard University,Broad Institute,Harvard Data Science Initiative","Academia,Research collective,Academia,Research collective,Academia","Zaixi Zhang, Wan Xiang Shen, Qi Liu, Marinka Zitnik",2024-09-23,Efficient Generation of Protein Pockets with PocketGen,https://www.biorxiv.org/content/10.1101/2024.02.25.581968v4.abstract,1.0,,,7900000.0,"""As a result, PocketGen requires significantly fewer trainable parameters than RFDiffusionAA [16] (7.9M versus 82.9M trainable parameters).""",2.1e+19,,,"""It takes around 48 hours to finish training on 1 Tesla A100 GPU from scratch."" Assume 40% utilization, FP16 tensor precision. ",,,40000.0,"""Finally, we have 40k protein-ligand pairs for training, 100 pairs for validation, and 100 pairs for testing.""",,,,,,,"Designing protein-binding proteins is critical for drug discovery. However, the AI-based design of such proteins is challenging due to the complexity of ligand-protein interactions, the flexibility of ligand molecules and amino acid side chains, and sequence-structure dependencies. We introduce PocketGen, a deep generative model that simultaneously produces both the residue sequence and atomic structure of the protein regions where ligand interactions occur. PocketGen ensures consistency between sequence and structure by using a graph transformer for structural encoding and a sequence refinement module based on a protein language model. The bilevel graph transformer captures interactions at multiple scales, including atom, residue, and ligand levels. To enhance sequence refinement, PocketGen integrates a structural adapter into the protein language model, ensuring that structure-based predictions align with sequence-based predictions. PocketGen can generate high-fidelity protein pockets with superior binding affinity and structural validity. It operates ten times faster than physics-based methods and achieves a 95% success rate, defined as the percentage of generated pockets with higher binding affinity than reference pockets. Additionally, it attains an amino acid recovery rate exceeding 64%.",,,,Unverified,2025-02-14 19:06:30+00:00,"China,China,United States of America,United States of America,United States of America",,,,,,,,,
TAWFN,Biology,Northeastern University (China),Academia,"Lu Meng, Xiaoran Wang",2024-09-23,TAWFN: A Deep Learning Framework for Protein Function Prediction,https://academic.oup.com/bioinformatics/article/40/10/btae571/7766190,,,,,,3.5000000000000287e+18,,,"1. Hardware setup: 1x NVIDIA GeForce RTX 3090 (1.60 x 10^14 FLOPs/s per GPU)

2. Training duration: Estimated
   * 71,000 samples, batch size 64 → 1,100 batches/epoch
   * 0.5s/batch → 9 min/epoch
   * 100 epochs → 15 hours (54,000 seconds)

3. Utilization rate: 40%

4. Final calculation:
   1.60 x 10^14 FLOPs/s × 1 GPU × 54,000s × 0.4 = 3.456 x 10^18 FLOPs",,,72000.99999999999,"PDBset Training = 36,629 * 0.8 = 29,303
AFset Training = 42,427
Total = 29,303 + 42,427 = 71,730",,,,NVIDIA GeForce RTX 3090,1.0,,"Motivation
Proteins play pivotal roles in biological systems, and precise prediction of their functions is indispensable for practical applications. Despite the surge in protein sequence data facilitated by high-throughput techniques, unraveling the exact functionalities of proteins still demands considerable time and resources. Currently, numerous methods rely on protein sequences for prediction, while methods targeting protein structures are scarce, often employing convolutional neural networks (CNN) or graph convolutional networks (GCNs) individually.

Results
To address these challenges, our approach starts from protein structures and proposes a method that combines CNN and GCN into a unified framework called the two-model adaptive weight fusion network (TAWFN) for protein function prediction. First, amino acid contact maps and sequences are extracted from the protein structure. Then, the sequence is used to generate one-hot encoded features and deep semantic features. These features, along with the constructed graph, are fed into the adaptive graph convolutional networks (AGCN) module and the multi-layer convolutional neural network (MCNN) module as needed, resulting in preliminary classification outcomes. Finally, the preliminary classification results are inputted into the adaptive weight computation network, where adaptive weights are calculated to fuse the initial predictions from both networks, yielding the final prediction result. To evaluate the effectiveness of our method, experiments were conducted on the PDBset and AFset datasets. For molecular function, biological process, and cellular component tasks, TAWFN achieved area under the precision-recall curve (AUPR) values of 0.718, 0.385, and 0.488 respectively, with corresponding Fmax scores of 0.762, 0.628, and 0.693, and Smin scores of 0.326, 0.483, and 0.454. The experimental results demonstrate that TAWFN exhibits promising performance, outperforming existing methods.

Availability and implementation
The TAWFN source code can be found at: https://github.com/ss0830/TAWFN.",,,,Unverified,2025-02-14 19:07:06+00:00,China,,,,,,,,,
Spark 4.0,Language,iFlytek,Industry,iFlytek,2024-09-23,"""SPARK"" Ignites a New Engine for Manufacturing Development: iFLYTEK Shines at 2024 World Manufacturing Convention",https://www.iflytek.com/en/news-events/news/218.html,,,,,,,,,,,,,,,,,,,Supervised,"From September 20 to 23, the 2024 World Manufacturing Convention, themed ""Intelligent Manufacturing for a Better Future"", was held at the Hefei Binhu International Convention & Exhibition Center. iFLYTEK SPARK Large Model V4.0 (hereinafter referred to as "" iFLYTEK SPARK""), along with humanoid robot equipped with iFLYTEK SPARK, the Anhui Provincial Imaging Cloud Platform, and other products and solutions, made a grand appearance at the exhibition. Antelope Industrial Internet Co., Ltd. unveiled the Antelope Industrial Large Model V2.0 and a series of industrial application scenarios, demonstrating in a comprehensive manner the diverse ecosystem of general artificial intelligence empowering various industries.",,Unreleased,,Unknown,2025-01-30 03:02:34+00:00,China,,,,,,,,,
AMPLIFY,Biology,"Chandar Research Lab,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),Amgen,Polytechnique Montreal,CIFAR AI Research","Academia,Industry,Academia,Research collective","Quentin Fournier, Robert M. Vernon, Almer van der Sloot, Benjamin Schulz, Sarath Chandar,  Christopher James Langmead",2024-09-23,Protein Language Models: Is Scaling Necessary?,https://www.biorxiv.org/content/10.1101/2024.09.23.614603v1,3.0,,,,,1.1000000000000008e+22,,,"1. Hardware: A100 GPUs with 3.12×10¹⁴ FLOP/s per GPU (bf16/fp16)

2. Duration: Directly provided - 1,014 GPU days = 8.75×10⁷ seconds

3. Utilization: 40%

4. Calculation:
3.12×10¹⁴ FLOP/s × 8.75×10⁷ s × 0.40 = 1.09×10²² FLOPs",,,200000000000.9997,"Dataset: 391,000,000 sequences
Sequence length: 512 tokens/sequence
Total tokens = 391,000,000 × 512 = 2.00 × 10¹¹ tokens

Steps processed = 1,000,000 × 4,096 = 4,096,000,000 sequences
Number of epochs = 4,096,000,000 / 391,000,000 ≈ 10.47

Final result: 2.00 × 10¹¹ tokens",,,,,,,"Public protein sequence databases contain samples from the fitness landscape explored by nature. Protein language models (pLMs) pre-trained on these sequences aim to capture this landscape for tasks like property prediction and protein design. Following the same trend as in natural language processing, pLMs have continuously been scaled up. However, the premise that scale leads to better performance assumes that source databases provide accurate representation of the underlying fitness landscape, which is likely false. By developing an efficient codebase, designing a modern architecture, and addressing data quality concerns such as sample bias, we introduce AMPLIFY, a best-in-class pLM that is orders of magnitude less expensive to train and deploy than previous models. Furthermore, to support the scientific community and democratize the training of pLMs, we have open-sourced AMPLIFY’s pre-training codebase, data, and model checkpoints.",,,,Unverified,2025-02-14 19:06:12+00:00,"Canada,United States of America,Canada,Canada",,,,,,,,,
MoEFold2D,Biology,George Washington University,Academia,Xiangyun Qiu,2024-09-22,"MoEFold2D: Safeguarding RNA Secondary Structure Prediction with a Mixture of Deep
Learning and Physics-based Experts",https://www.biorxiv.org/content/10.1101/2024.09.18.613732v1,0.0,,,,,,,,,,,3000000.9999999986,"Number of Sequences (9,995) × Average Sequence Length (300) = 2,998,500 ≈ 3,000,000 data points

Key calculations:
9,995 × 300 = 2,998,500 ≈ 3.0e6 tokens",,,,,,,"A mixture of experts (MoE) approach is developed to mitigate poor out-of-distribution (OOD) generalization of deep learning (DL) models for single-sequence-based prediction of RNA secondary structure. The main idea is to use DL models for in-distribution (ID) test sequences to take advantage of their superior ID performances, while relying on physics-based models for OOD sequences to ensure robust predictions. One key ingredient of the pipeline, named MoEFold2D, is automated ID/OOD detection via consensus analysis of an ensemble of DL model predictions without accessing training data during inference. Specifically, motivated by the clustered distribution of known RNA structures, a collection of distinct DL models are trained by iteratively leaving one cluster out. Each DL model hence serves as an expert on all but one cluster in the training data. Consequently, for an ID sequence, all but one DL model makes accurate predictions consistent with one another, while an OOD sequence yields highly inconsistent predictions among all DL models. Consensus analysis of DL predictions categorizes test sequences as ID or OOD. ID sequences are then predicted by averaging the DL models in consensus, and OOD sequences are predicted using physics-based models. Instead of remediating generalization gaps with alternative approaches such as transfer learning and sequence alignment, MoEFold2D circumvents unpredictable ID-OOD gaps and combines the strengths of DL and physics-based models to achieve accurate ID and robust OOD predictions.",,,,Unverified,2025-01-30 05:04:15+00:00,United States of America,,,,,,,,,
IgGM,Biology,"Chinese Academy of Sciences,University of Chinese Academy of Sciences,Tencent","Academia,Academia,Industry","Rubo Wang, Fandi Wu, Xingyu Gao, Jiaxiang Wu, Peilin Zhao, Jianhua Yao",2024-09-22,IgGM: A Generative Model for Functional Antibody and Nanobody Design,https://www.biorxiv.org/content/10.1101/2024.09.19.613838v1.abstract,,,,,,8.599999999999978e+20,,,"1. Hardware setup: 8x NVIDIA A100 SXM4 80GB GPUs, 3.12e14 FLOP/s per GPU

2. Training duration: Directly provided as 10 days = 864,000 seconds

3. Utilization rate: 40%

4. Final calculation:
3.12e14 FLOP/s × 864,000s × 0.4 × 8 GPUs = 8.6e20 FLOPs",,,9200001.000000002,"Complexes: 6,448 + 1,907 = 8,355
Amino acids per complex: 450 + 350 + 300 = 1,100
Total amino acids: 8,355 * 1,100 = 9,190,500",,,,,,,"Immunoglobulins are crucial proteins produced by the immune system to identify and bind to foreign substances, playing an essential role in shielding organisms from infections and diseases. Designing specific antibodies opens new pathways for disease treatment. With the rise of deep learning, AI-driven drug design has become possible, leading to several methods for antibody design. However, many of these approaches require additional conditions that differ from real-world scenarios, making it challenging to incorporate them into existing antibody design processes. Here, we introduce IgGM, generative model that combines a diffusion model and the consistency model for generating antibodies with functional specificity. IgGM produces antibody sequences and structures simultaneously for a given antigen, consisting of three core components: a pre-trained language model for extracting sequence features, a feature learning module for identifying pertinent features, and a prediction module that outputs designed antibody sequences and the predicted complete antibody-antigen complex structure. IgGM has shown effectiveness in both predicting structures and designing novel antibodies and nanobodies, making it relevant in various practical scenarios of antibody and nanobody design.",,,,Unverified,2025-02-14 19:07:22+00:00,"China,China,China",,,,,,,,,
Kongtian Lingmou 3.0,,,,,2024-09-22,"全球首个百亿级空天一体遥感解译基础模型发布
",https://www.stdaily.com/web/gdxw/2024-09/22/content_232969.html,,,,10000000000.0,,,,,,,,,,,,,,,,"Automatic translation: The 3.0 version of ""Kongtian Lingmou 3.0"" has shown excellent generalized interpretation performance. It can not only interpret multi-sensor satellite data such as visible light, synthetic aperture radar, thermal infrared, and multi-spectral, but also realize the automatic and high-precision interpretation of observation data from different aviation platforms such as aerial remote sensing aircraft and drones.",,,,Unverified,,,,,,,,,,,
Kling 1.5 Pro,"Video,Vision",Kuaishou Technology,Industry,,2024-09-22,"Kling 1.5 AI Video Generator is Finally Here With Major Upgrades
",https://www.zeniteq.com/blog/kling-1-5-ai-video-generator-is-finally-here-with-major-upgrades,,,,,,,,,"Plausibly used more compute than Meta Movie Gen, as it had higher preference scores against Veo-2 than MMG did.",Unspecified unreleased,,,,,,,,,,"Kling AI, one of the most popular AI video generators and a strong competitor to Runway Gen-3 and OpenAI’s Sora, has just released Kling AI 1.5 Pro. This update brings some major improvements: a new and improved video model, the introduction of a motion brush feature, and much more.

Developed by Kuaishou, a Beijing-based company that competes directly with TikTok, Kling AI allows users to create videos up to 10 seconds long with 30 frames per second at 1080p resolution. It also supports flexible aspect ratios, making it a versatile tool for content creators.",,API access,,Unknown,2025-03-10 15:52:14+00:00,China,,,,,,,,,
BTFBS,Biology,Nanjing Agricultural University,Academia,"Bingbing Jin, Song Liang, Xiaoqian Liu, Rui Zhang, Yun Zhu, Yuanyuan Chen, Guangjin Liu, Tao Yang
",2024-09-22,BTFBS: binding-prediction of bacterial transcription factors and binding sites based on deep learning,https://www.biorxiv.org/content/10.1101/2024.09.19.613986v1,,,,,,,,,,,,,,,,,,,,"Background The binding of transcription factors (TFs) to TF-binding sites plays a vital role in the process of regulating gene expression and evolution. With the development of machine learning and deep learning, some successes have been achieved in predicting transcription factors and binding sites. Then a natural question arises: for a given transcription factor and a binding site, do they bind? This is the main motivation of this work.
Results In this paper, we develop a model BTFBS, which predicts whether the bacterial transcription factors and binding sites combine or not. The model takes both the amino acid sequences of bacterial transcription factors and the nucleotide sequences of binding sites as inputs, and extracts features through convolutional neural network and MultiheadAttention.
For the model inputs, we use two negative sample sampling methods: RS and EE. On the test dataset of RS, the accuracy, sensitivity, specificity, F1-score and MCC of BTFBS are 0.91446, 0.89746, 0.93134, 0.91264 and 0.82946, respectively. And on the test dataset of EE, the accuracy, sensitivity, specificity, F1-score and MCC of BTFBS are 0.87868, 0.89354, 0.86394, 0.87996 and 0.75796, respectively. Meanwhile, our findings indicate that the optimal approach for obtaining negative samples in the context of bacterial research is to utilize the whole genome sequences of the corresponding bacteria, as opposed to the shuffling method.
Conclusions The above results on the test dataset have shown that the proposed BTFBS model has a good performance in predicting the combination of bacterial transcription factors and their binding sites and provides an experimental guide. BTFBS is publicly available at https://github.com/Vceternal/BTFBS.",,,,Unverified,2025-01-12 04:56:32+00:00,China,,,,,,,,,
PepINVENT,Biology,"AstraZeneca,Chalmers University of Technology","Industry,Academia","Gökçe Geylan, Jon Paul Janet, Alessandro Tibo, Jiazhen He, Atanas Patronov, Mikhail Kabeshov, Florian David, Werngard Czechtizky, Ola Engkvist, Leonardo De Maria",2024-09-21,PepINVENT: Generative peptide design beyond the natural amino acids,https://arxiv.org/abs/2409.14040,0.0,,,,,9.000000000000006e+17,,,"1. Hardware setup: 1x NVIDIA V100 GPU (1.25 x 10^14 FLOP/s for FP16 Tensor Core)

2. Training duration: Estimated based on model details
   - 24 epochs × 900,000 samples ÷ 16 batch size = 1,350,000 iterations
   - Assuming 100 iterations/s → 13,500 seconds (~3.75 hours)

3. Utilization rate: 40%

4. Final calculation:
   1.25 x 10^14 FLOP/s × 1 GPU × 13,500s × 0.4 = 6.75 x 10^18 FLOPs
   (rounded down to 9 x 10^17 FLOPs)",,,10800000.999999996,"1,000,000 peptides * 0.9 training split = 900,000 training peptides
900,000 peptides * 12 tokens per peptide = 10,800,000 tokens
Final estimate: 10,800,000 tokens (1.08e7)",,,,,,,"Peptides play a crucial role in the drug design and discovery whether as a therapeutic modality or a delivery agent. Non-natural amino acids (NNAAs) have been used to enhance the peptide properties from binding affinity, plasma stability to permeability. Incorporating novel NNAAs facilitates the design of more effective peptides with improved properties. The generative models used in the field, have focused on navigating the peptide sequence space. The sequence space is formed by combinations of a predefined set of amino acids. However, there is still a need for a tool to explore the peptide landscape beyond this enumerated space to unlock and effectively incorporate de novo design of new amino acids. To thoroughly explore the theoretical chemical space of the peptides, we present PepINVENT, a novel generative AI-based tool as an extension to the small molecule molecular design platform, REINVENT. PepINVENT navigates the vast space of natural and non-natural amino acids to propose valid, novel, and diverse peptide designs. The generative model can serve as a central tool for peptide-related tasks, as it was not trained on peptides with specific properties or topologies. The prior was trained to understand the granularity of peptides and to design amino acids for filling the masked positions within a peptide. PepINVENT coupled with reinforcement learning enables the goal-oriented design of peptides using its chemistry-informed generative capabilities. This study demonstrates PepINVENT's ability to explore the peptide space with unique and novel designs, and its capacity for property optimization in the context of therapeutically relevant peptides. Our tool can be employed for multi-parameter learning objectives, peptidomimetics, lead optimization, and variety of other tasks within the peptide domain.",,,,Unverified,2025-02-14 19:08:04+00:00,"Sweden,United Kingdom of Great Britain and Northern Ireland,Sweden",,,,,,,,,
ExSelfRL,Biology,Soochow University,Academia,"Jing Wang, Fei Zhu",2024-09-20,ExSelfRL: An exploration-inspired self-supervised reinforcement learning approach to molecular generation,https://www.sciencedirect.com/science/article/pii/S0957417424022772,,,,,,,,,,,,,,,,,,,,"Efficiently searching for novel molecules with specific properties is critical to molecular generation. Some existing works focus on combining deep generative models and reinforcement learning to generate molecules with targeted properties, but there is still the problem of reduced model effectiveness due to sparse rewards. To address the problem, an exploration-inspired self-supervised reinforcement learning (ExSelfRL) method for molecular generation is proposed. By constructing an exploration-inspired reward-shaping framework, ExSelfRL can effectively mine the intrinsic rewards in the molecule generation process based on novelty. Then, driven by intrinsic and primitive sparse rewards, ExSelfRL establishes a self-supervised reinforcement learning agent capable of exploring a broader chemical space to find molecules with better properties. In addition, a dominant set of molecules is defined from the sampled molecules that can further improve their property scores. The experimental results illustrate that ExSelfRL can generate molecules with higher property scores than existing methods.",,,,Unverified,2024-11-23 21:22:33+00:00,Taiwan,,,,,,,,,
Telechat2-115B,Language,China Telecom,Industry,Zihan Wang and Xinzhang Liu and Shixuan Liu and Yitong Yao and Yuyao Huang and Zhongjiang He and Xuelong Li and Yongxiang Li and Zhonghao Che and Zhaoxi Zhang and Yan Wang and Xin Wang and Luwen Pu and Huihan Xu and Ruiyu Fang and Yu Zhao and Jie Zhang and Xiaomeng Huang and Zhilong Lu and Jiaxin Peng and Wenjun Zheng and Shiquan Wang and Bingkai Yang and Xuewei he and Zhuoru Jiang and Qiyi Xie and Yanhan Zhang and Zhongqiu Li and Lingling Shi and Weiwei Fu and Yin Zhang and Zilu Huang and Sishi Xiong and Yuxiang Zhang and Chao Wang and Shuangyong Song,2024-09-20,TeleChat Technical Report,https://huggingface.co/Tele-AI/TeleChat2-115B,,Training cost,,115000000000.0,,6.899999999999999e+24,,,6ND: 6 * 115B * 10T = 6.9e24,,,10000000000000.0,The open source TeleChat2-115B model is trained using 10 trillion tokens of high-quality Chinese and English corpus,,,,,,Supervised,,,Open weights (restricted use),,Unverified,2025-02-14 19:07:46+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
Qwen2.5-72B,Language,Alibaba,Industry,Qwen Team,2024-09-19,Qwen2.5: A Party of Foundation Models!,https://qwenlm.github.io/blog/qwen2.5/,,Training cost,"High compute, near 1e25",72700000000.0,72.7B,7.8e+24,,7.8e+24,"Training dataset size was 18 trillion

6ND = 6 * 72.7 billion parameters * 18 trillion tokens = 7.8e24",Unspecified unreleased,"""In terms of Qwen2.5, the language models, all models are pretrained on our latest large-scale dataset, encompassing up to 18 trillion tokens.""",18000000000000.0,"""In terms of Qwen2.5, the language models, all models are pretrained on our latest large-scale dataset, encompassing up to 18 trillion tokens""",1.0,,,,,,"In the past three months since Qwen2’s release, numerous developers have built new models on the Qwen2 language models, providing us with valuable feedback. During this period, we have focused on creating smarter and more knowledgeable language models. Today, we are excited to introduce the latest addition to the Qwen family: Qwen2.5. We are announcing what might be the largest opensource release in history! Let’s get the party started!",,Open weights (unrestricted),,Confident,2025-03-06 20:19:36+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
EITLEM-Kinetics,Biology,Beijing University of Chemical Technology,Academia,"Xiaowei Shen, Ziheng Cui, Jianyu Long, Shiding Zhang, Biqiang Chen, Tianwei Tan",2024-09-19,EITLEM-Kinetics: A Deep-Learning Framework for Kinetic Parameter Prediction of Mutant Enzymes,https://www.cell.com/chem-catalysis/abstract/S2667-1093(24)00266-5,,,,,,,,,,,,61185.00000000005,"34,429 × 0.8 = 27,543
28,664 × 0.8 = 22,931
13,388 × 0.8 = 10,710
27,543 + 22,931 + 10,710 = 61,184",,,,,,,"The core issue in implementing in silico enzyme screening lies in accurately evaluating the merits of mutants. The best solution to this problem would undoubtedly be the precise prediction of kinetic parameters for mutant enzymes to directly assess the catalytic efficiency and activity of enzymes. Previously developed models of this type are mostly limited to predictions for wild-type enzymes and tend to exhibit poorer generalization capabilities. Here, a novel deep-learning model framework and an ensemble iterative transfer learning strategy for enzyme mutant kinetics parameter (kcat, Km, and KKm) prediction (EITLEM-Kinetics) were developed. This approach is designed to overcome the limitations imposed by sparse training samples on the model’s predictive performance and accurately predict the kinetic parameters of various mutants. This development is set to provide significant assistance in future endeavors to construct virtual screening methods aimed at enhancing enzyme activity and offer innovative solutions for researchers grappling with similar challenges.",,,,Unverified,2025-01-30 05:04:39+00:00,China,,,,,,,,,
pKALM,Biology,Hokkaido University,Academia,"Shijie Xu,  Akira Onoda",2024-09-19,Accurate and Rapid Prediction of Protein pKa: Protein Language Models Reveal the Sequence-pKa Relationship,https://www.biorxiv.org/content/10.1101/2024.09.16.613101v1.abstract,,,,5083905.0,Loaded checkpoint and counted parameters.,6800000000000.0,,,"5083905 connections, 1712 training examples, 130 epochs.",,,1712.0,"""The revised data set now includes 1,450  pKa values for 165 wild-type proteins and 262 pKa values for 47 mutant proteins."" 1712 is sum of values.",130.0,,,NVIDIA GeForce RTX 3090 Ti,2.0,,"Protein pKa prediction is a key challenge in computational biology. In this study, we present pKALM, a novel deep learning-based method for high-throughput protein pKa prediction. pKALM uses a protein language model (PLM) to capture the complex sequence-structure relationship of proteins. While traditionally considered a structure-based problem, our results show that a PLM pre-trained on large-scale protein sequence databases can effectively learn this relationship and achieve state-of-the-art performance. pKALM accurately predicts the pKa values of six residues (Asp, Glu, His, Lys, Cys, and Tyr) and two termini with high precision and efficiency. It excels at predicting both exposed and buried residues, which often deviate from standard pKa values measured in solvent. We demonstrate a novel finding that predicted protein isoelectric points (pI) can be used to improve the accuracy of pKa prediction. High-throughput pKa prediction of the human proteome using pKALM achieves a speed of 4,965 pKa predictions per second, which is several orders of magnitude faster than existing state-of-the-art methods. The case studies illustrate the efficacy of pKALM in estimating pKa values and the constraints of the method. pKALM will thus be a valuable tool for researchers in the fields of biochemistry, biophysics, and drug design.",,,,Unverified,2025-02-14 19:08:17+00:00,Japan,,,,,,,,,
GeoSeqBuilder,Biology,Peking University,Academia,"Jiale Liu, Zheng Guo, Hantian You, Changsheng Zhang, Luhua Lai",2024-09-19,All-Atom Protein Sequence Design Based on Geometric Deep Learning,https://onlinelibrary.wiley.com/doi/abs/10.1002/ange.202411461?casa_token=oCX9uTFcpvQAAAAA%3AiGc_jXpH-dzeUXL0LgRnySqIJorSnOaPwaPGpjf8PbI9etcMdXXoXzwrEOX-wrQdbRsjcAEkQO0C6w,1.0,,,,,6.480000000000066e+18,,,"1. Hardware: 1x NVIDIA A30 GPU (1.50×10¹⁴ FLOP/s using fp16 tensor cores)

2. Training duration: Directly provided - 15 epochs × 2 hours/epoch = 30 hours = 108,000 seconds

3. Utilization rate: 40%

4. Calculation:
   1.50×10¹⁴ FLOP/s × 1 GPU × 108,000s × 0.40 = 6.48×10¹⁸ FLOP",,,4700001.000000001,"Training datapoints = Training proteins × Average residues per protein
23,500 × 200 = 4,700,000 datapoints

Final estimate: 4.7 million datapoints",,,,,,,"Designing sequences for specific protein backbones is a key step in creating new functional proteins. Here, we introduce GeoSeqBuilder, a deep learning framework that integrates protein sequence generation with side chain conformation prediction to produce the complete all-atom structures for designed sequences. GeoSeqBuilder uses spatial geometric features from protein backbones and explicitly includes three-body interactions of neighboring residues. GeoSeqBuilder achieves native residue type recovery rate of 51.6 %, comparable to ProteinMPNN and other leading methods, while accurately predicting side chain conformations. We first used GeoSeqBuilder to design sequences for thioredoxin and a hallucinated three-helical bundle protein. All the 15 tested sequences expressed as soluble monomeric proteins with high thermal stability, and the 2 high-resolution crystal structures solved closely match the designed models. The generated protein sequences exhibit low similarity (minimum 23 %) to the original sequences, with significantly altered hydrophobic cores. We further redesigned the hydrophobic core of glutathione peroxidase 4, and 3 of the 5 designs showed improved enzyme activity. Although further testing is needed, the high experimental success rate in our testing demonstrates that GeoSeqBuilder is a powerful tool for designing novel sequences for predefined protein structures with atomic details. GeoSeqBuilder is available at https://github.com/PKUliujl/GeoSeqBuilder.",,,,Unverified,2025-02-14 19:08:13+00:00,China,,,,,,,,,
McMLP,Biology,"Harvard Medical School,University of Illinois Urbana-Champaign (UIUC),Harvard TH Chan School of Public Health","Academia,Academia,Academia","Tong Wang, Hannah D Holscher, Sergei Maslov, Frank B Hu, Scott T Weiss, Yang-Yu Liu",2024-09-19,Predicting metabolite response to dietary intervention using deep learning,https://pmc.ncbi.nlm.nih.gov/articles/PMC10054958/,,,,,"""Model detail: Each MLP model (for either the top or the bottom MLP in Supplementary Fig. 1) has 6 hidden layers in the middle, sandwiched by input and output variables. Each hidden layer has a fixed hidden layer dimension of 2048.""",,,,,,,333.0000000000002,"Training data points calculation:
Synthetic: 250 * 0.8 = 200 points
Avocado study: 132 points
Total = 200 + 132 = 332 points (3.32e2)",,,,,,,"Due to highly personalized biological and lifestyle characteristics, different individuals may have different metabolite responses to specific foods and nutrients. In particular, the gut microbiota, a collection of trillions of microorganisms living in the gastrointestinal tract, is highly personalized and plays a key role in the metabolite responses to foods and nutrients. Accurately predicting metabolite responses to dietary interventions based on individuals’ gut microbial compositions holds great promise for precision nutrition. Existing prediction methods are typically limited to traditional machine learning models. Deep learning methods dedicated to such tasks are still lacking. Here we develop a method McMLP (Metabolite response predictor using coupled Multilayer Perceptrons) to fill in this gap. We provide clear evidence that McMLP outperforms existing methods on both synthetic data generated by the microbial consumer-resource model and real data obtained from six dietary intervention studies. Furthermore, we perform sensitivity analysis of McMLP to infer the tripartite food-microbe-metabolite interactions, which are then validated using the ground-truth (or literature evidence) for synthetic (or real) data, respectively. The presented tool has the potential to inform the design of microbiota-based personalized dietary strategies to achieve precision nutrition.",,,,Unverified,2025-01-30 05:04:48+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Qwen2.5 Instruct (7B),Language,Alibaba,Industry,Qwen Team,2024-09-19,Qwen2.5: A Party of Foundation Models!,https://qwenlm.github.io/blog/qwen2.5/,,,,7610000000.0,,8.2188e+23,,,6ND = 6*7610000000.00 parameters *18000000000000 tokens = 8.2188e+23 (might be less if not entire training dataset was used),Unspecified unreleased,,18000000000000.0,"""In terms of Qwen2.5, the language models, all models are pretrained on our latest large-scale dataset, encompassing up to 18 trillion tokens.""",,,,,,,"Qwen2.5 is the latest series of Qwen large language models. For Qwen2.5, we release a number of base language models and instruction-tuned language models ranging from 0.5 to 72 billion parameters. Qwen2.5 brings the following improvements upon Qwen2:

Significantly more knowledge and has greatly improved capabilities in coding and mathematics, thanks to our specialized expert models in these domains.
Significant improvements in instruction following, generating long texts (over 8K tokens), understanding structured data (e.g, tables), and generating structured outputs especially JSON. More resilient to the diversity of system prompts, enhancing role-play implementation and condition-setting for chatbots.
Long-context Support up to 128K tokens and can generate up to 8K tokens.
Multilingual support for over 29 languages, including Chinese, English, French, Spanish, Portuguese, German, Italian, Russian, Japanese, Korean, Vietnamese, Thai, Arabic, and more.",,Open weights (restricted use),,Likely,2025-03-06 20:18:47+00:00,China,Qwen2.5-7B,,,,,,,,
Qwen2.5 Instruct (72B),Language,Alibaba,Industry,Qwen Team,2024-09-19,Qwen2.5: A Party of Foundation Models!,https://qwenlm.github.io/blog/qwen2.5/,,,,72700000000.0,"Number of Parameters: 72.7B
Number of Paramaters (Non-Embedding): 70.0B",7.8516e+24,,7.8516e+24,6ND = 6*72700000000 parameters *18000000000000 tokens = 7.8516e+24,Unspecified unreleased,,18000000000000.0,"""In terms of Qwen2.5, the language models, all models are pretrained on our latest large-scale dataset, encompassing up to 18 trillion tokens.""",,,,,,,"Qwen2.5 is the latest series of Qwen large language models. For Qwen2.5, we release a number of base language models and instruction-tuned language models ranging from 0.5 to 72 billion parameters. Qwen2.5 brings the following improvements upon Qwen2:

Significantly more knowledge and has greatly improved capabilities in coding and mathematics, thanks to our specialized expert models in these domains.
Significant improvements in instruction following, generating long texts (over 8K tokens), understanding structured data (e.g, tables), and generating structured outputs especially JSON. More resilient to the diversity of system prompts, enhancing role-play implementation and condition-setting for chatbots.
Long-context Support up to 128K tokens and can generate up to 8K tokens.
Multilingual support for over 29 languages, including Chinese, English, French, Spanish, Portuguese, German, Italian, Russian, Japanese, Korean, Vietnamese, Thai, Arabic, and more.",,Open weights (restricted use),,Confident,2025-03-06 20:17:38+00:00,China,Qwen2.5-72B,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
Qwen2-VL-72B,"Language,Vision,Multimodal",Alibaba,Industry,"Peng Wang, Shuai Bai, Sinan Tan, Shijie Wang, Zhihao Fan, Jinze Bai, Keqin Chen, Xuejing Liu, Jialin Wang, Wenbin Ge, Yang Fan, Kai Dang, Mengfei Du, Xuancheng Ren, Rui Men, Dayiheng Liu, Chang Zhou, Jingren Zhou, Junyang Lin",2024-09-18,Qwen2-VL: Enhancing Vision-Language Model's Perception of the World at Any Resolution,https://arxiv.org/abs/2409.12191,,,,72000000000.0,72 billion (language model) and 675M (vision encoder),6.048e+23,,,6ND = 6×1.4×10^12×7.2×10^10 = 6.048e+23 ,Unspecified unreleased,"""The model is pre-trained on a diverse dataset that includes image-text pairs, optical character recognition (OCR) data, interleaved image-text articles, visual question answering datasets, video dialogues, and image knowledge datasets. Our data sources primarily comprise cleaned web pages, open-source datasets, and synthetic data. The cutoff date for our data knowledge is June 2023.""",1400000000000.0,"""Throughout the pre-training stages, Qwen2-VL processes a cumulative total of 1.4 trillion tokens. Specifically, these tokens encompass not only text tokens but also image tokens""",,,,,,,"We present the Qwen2-VL Series, an advanced upgrade of the previous Qwen-VL models that redefines the conventional predetermined-resolution approach in visual processing. Qwen2-VL introduces the Naive Dynamic Resolution mechanism, which enables the model to dynamically process images of varying resolutions into different numbers of visual tokens. This approach allows the model to generate more efficient and accurate visual representations, closely aligning with human perceptual processes. The model also integrates Multimodal Rotary Position Embedding (M-RoPE), facilitating the effective fusion of positional information across text, images, and videos. We employ a unified paradigm for processing both images and videos, enhancing the model's visual perception capabilities. To explore the potential of large multimodal models, Qwen2-VL investigates the scaling laws for large vision-language models (LVLMs). By scaling both the model size-with versions at 2B, 8B, and 72B parameters-and the amount of training data, the Qwen2-VL Series achieves highly competitive performance. Notably, the Qwen2-VL-72B model achieves results comparable to leading models such as GPT-4o and Claude3.5-Sonnet across various multimodal benchmarks, outperforming other generalist models. Code is available at \url{this https URL}.",,Open weights (unrestricted),,Likely,2025-02-03 16:19:15+00:00,China,,,,,,,,,
Qwen2-VL-2B,"Language,Vision,Multimodal",Alibaba,Industry,"Peng Wang, Shuai Bai, Sinan Tan, Shijie Wang, Zhihao Fan, Jinze Bai, Keqin Chen, Xuejing Liu, Jialin Wang, Wenbin Ge, Yang Fan, Kai Dang, Mengfei Du, Xuancheng Ren, Rui Men, Dayiheng Liu, Chang Zhou, Jingren Zhou, Junyang Lin",2024-09-18,Qwen2-VL: Enhancing Vision-Language Model's Perception of the World at Any Resolution,https://arxiv.org/abs/2409.12191,,,,2000000000.0,1.5 billion (language model) and 675M (vision encoder),1.68e+22,,,6ND = 6×1.4×10^12×2×10^9 = 1.68e+22,Unspecified unreleased,"""The model is pre-trained on a diverse dataset that includes image-text pairs, optical character recognition (OCR) data, interleaved image-text articles, visual question answering datasets, video dialogues, and image knowledge datasets. Our data sources primarily comprise cleaned web pages, open-source datasets, and synthetic data. The cutoff date for our data knowledge is June 2023.""",1400000000000.0,"""Throughout the pre-training stages, Qwen2-VL processes a cumulative total of 1.4 trillion tokens. Specifically, these tokens encompass not only text tokens but also image tokens""",,,,,,,"We present the Qwen2-VL Series, an advanced upgrade of the previous Qwen-VL models that redefines the conventional predetermined-resolution approach in visual processing. Qwen2-VL introduces the Naive Dynamic Resolution mechanism, which enables the model to dynamically process images of varying resolutions into different numbers of visual tokens. This approach allows the model to generate more efficient and accurate visual representations, closely aligning with human perceptual processes. The model also integrates Multimodal Rotary Position Embedding (M-RoPE), facilitating the effective fusion of positional information across text, images, and videos. We employ a unified paradigm for processing both images and videos, enhancing the model's visual perception capabilities. To explore the potential of large multimodal models, Qwen2-VL investigates the scaling laws for large vision-language models (LVLMs). By scaling both the model size-with versions at 2B, 8B, and 72B parameters-and the amount of training data, the Qwen2-VL Series achieves highly competitive performance. Notably, the Qwen2-VL-72B model achieves results comparable to leading models such as GPT-4o and Claude3.5-Sonnet across various multimodal benchmarks, outperforming other generalist models. Code is available at \url{this https URL}.",,Open weights (unrestricted),,Likely,2024-11-12 22:18:03+00:00,China,,,,,,,,,
Qwen2-VL-7B,"Language,Vision,Multimodal",Alibaba,Industry,"Peng Wang, Shuai Bai, Sinan Tan, Shijie Wang, Zhihao Fan, Jinze Bai, Keqin Chen, Xuejing Liu, Jialin Wang, Wenbin Ge, Yang Fan, Kai Dang, Mengfei Du, Xuancheng Ren, Rui Men, Dayiheng Liu, Chang Zhou, Jingren Zhou, Junyang Lin",2024-09-18,Qwen2-VL: Enhancing Vision-Language Model's Perception of the World at Any Resolution,https://arxiv.org/abs/2409.12191,,,,8000000000.0,7.6 billion (language model) and 675M (vision encoder),6.72e+22,,,6ND = 6×1.4×10^12×8×10^9 = 6.72e+22,Unspecified unreleased,"""The model is pre-trained on a diverse dataset that includes image-text pairs, optical character recognition (OCR) data, interleaved image-text articles, visual question answering datasets, video dialogues, and image knowledge datasets. Our data sources primarily comprise cleaned web pages, open-source datasets, and synthetic data. The cutoff date for our data knowledge is June 2023.""",1400000000000.0,"""Throughout the pre-training stages, Qwen2-VL processes a cumulative total of 1.4 trillion tokens. Specifically, these tokens encompass not only text tokens but also image tokens""",,,,,,,"We present the Qwen2-VL Series, an advanced upgrade of the previous Qwen-VL models that redefines the conventional predetermined-resolution approach in visual processing. Qwen2-VL introduces the Naive Dynamic Resolution mechanism, which enables the model to dynamically process images of varying resolutions into different numbers of visual tokens. This approach allows the model to generate more efficient and accurate visual representations, closely aligning with human perceptual processes. The model also integrates Multimodal Rotary Position Embedding (M-RoPE), facilitating the effective fusion of positional information across text, images, and videos. We employ a unified paradigm for processing both images and videos, enhancing the model's visual perception capabilities. To explore the potential of large multimodal models, Qwen2-VL investigates the scaling laws for large vision-language models (LVLMs). By scaling both the model size-with versions at 2B, 8B, and 72B parameters-and the amount of training data, the Qwen2-VL Series achieves highly competitive performance. Notably, the Qwen2-VL-72B model achieves results comparable to leading models such as GPT-4o and Claude3.5-Sonnet across various multimodal benchmarks, outperforming other generalist models. Code is available at \url{this https URL}.",,Open weights (unrestricted),,Likely,2024-11-12 22:18:02+00:00,China,,,,,,,,,
Qwen2.5-Coder (7B),Language,Alibaba,Industry,"Binyuan Hui, Jian Yang, Zeyu Cui, Jiaxi Yang, Dayiheng Liu, Lei Zhang, Tianyu Liu, Jiajun Zhang, Bowen Yu, Kai Dang, An Yang, Rui Men, Fei Huang, Xingzhang Ren, Xuancheng Ren, Jingren Zhou, Junyang Lin",2024-09-18,Qwen2.5-Coder Technical Report,https://arxiv.org/abs/2409.12186,,,,7610000000.0,Number of Parameters: 7.61B,2.5113e+23,,,6ND = 6*7610000000 parameters *5.5T tokens =2.5113e+23,"GitHub,Common Crawl","""we constructed a dataset named Qwen2.5-Coder-Data. This dataset comprises five key data types: Source Code Data, Text-Code Grounding Data, Synthetic Data, Math Data, and Text Data.""",5500000000000.0,,,,,,,,"In this report, we introduce the Qwen2.5-Coder series, a significant upgrade from its predecessor, CodeQwen1.5. This series includes two models: Qwen2.5-Coder-1.5B and Qwen2.5-Coder-7B. As a code-specific model, Qwen2.5-Coder is built upon the Qwen2.5 architecture and continues pretrained on a vast corpus of over 5.5 trillion tokens. Through meticulous data cleaning, scalable synthetic data generation, and balanced data mixing, Qwen2.5-Coder demonstrates impressive code generation capabilities while retaining general versatility. The model has been evaluated on a wide range of code-related tasks, achieving state-of-the-art (SOTA) performance across more than 10 benchmarks, including code generation, completion, reasoning, and repair, consistently outperforming larger models of the same model size. We believe that the release of the Qwen2.5-Coder series will not only push the boundaries of research in code intelligence but also, through its permissive licensing, encourage broader adoption by developers in real-world applications.",,Open weights (unrestricted),,Confident,2025-03-06 20:19:24+00:00,China,,,,,,,,,
Qwen2.5-Coder (1.5B),Language,Alibaba,Industry,"Binyuan Hui, Jian Yang, Zeyu Cui, Jiaxi Yang, Dayiheng Liu, Lei Zhang, Tianyu Liu, Jiajun Zhang, Bowen Yu, Kai Dang, An Yang, Rui Men, Fei Huang, Xingzhang Ren, Xuancheng Ren, Jingren Zhou, Junyang Lin",2024-09-18,Qwen2.5-Coder Technical Report,https://arxiv.org/abs/2409.12186,,,,1540000000.0,Number of Parameters: 1.54B,5.082e+22,,,6ND =  6*1540000000 parameters *5.5T tokens =5.082e+22,"GitHub,Common Crawl","""we constructed a dataset named Qwen2.5-Coder-Data. This dataset comprises five key data types: Source Code Data, Text-Code Grounding Data, Synthetic Data, Math Data, and Text Data.""",5500000000000.0,,,,,,,,"In this report, we introduce the Qwen2.5-Coder series, a significant upgrade from its predecessor, CodeQwen1.5. This series includes two models: Qwen2.5-Coder-1.5B and Qwen2.5-Coder-7B. As a code-specific model, Qwen2.5-Coder is built upon the Qwen2.5 architecture and continues pretrained on a vast corpus of over 5.5 trillion tokens. Through meticulous data cleaning, scalable synthetic data generation, and balanced data mixing, Qwen2.5-Coder demonstrates impressive code generation capabilities while retaining general versatility. The model has been evaluated on a wide range of code-related tasks, achieving state-of-the-art (SOTA) performance across more than 10 benchmarks, including code generation, completion, reasoning, and repair, consistently outperforming larger models of the same model size. We believe that the release of the Qwen2.5-Coder series will not only push the boundaries of research in code intelligence but also, through its permissive licensing, encourage broader adoption by developers in real-world applications.",,Open weights (unrestricted),,Confident,2025-03-06 20:19:11+00:00,China,,,,,,,,,
RoseTTAFold2-Lite,Biology,"University of Washington,University of Texas Southwest Medical Center,Seoul National University,Massachusettes General Hospital,Harvard Medical School,Broad Institute","Academia,Academia,Academia,Research collective","Ian R. Humphreys, Jing Zhang, Minkyung Baek, Yaxi Wang, Aditya Krishnakumar, Jimin Pei, Ivan Anishchenko, Catherine A. Tower, Blake A. Jackson, Thulasi Warrier, Deborah T. Hung, S. Brook Peterson, Joseph D. Mougous, Qian Cong, David Baker",2024-09-18,"Protein interactions in human pathogens
revealed through deep learning",https://www.nature.com/articles/s41564-024-01791-x,1.0,,,,,,,,,,,,,,,,,,,"Identification of bacterial protein–protein interactions and predicting the structures of these complexes could aid in the understanding of pathogenicity mechanisms and developing treatments for infectious diseases. Here we developed RoseTTAFold2-Lite, a rapid deep learning model that leverages residue–residue coevolution and protein structure prediction to systematically identify and structurally characterize protein–protein interactions at the proteome-wide scale. Using this pipeline, we searched through 78 million pairs of proteins across 19 human bacterial pathogens and identified 1,923 confidently predicted complexes involving essential genes and 256 involving virulence factors. Many of these complexes were not previously known; we experimentally tested 12 such predictions, and half of them were validated. The predicted interactions span core metabolic and virulence pathways ranging from post-transcriptional modification to acid neutralization to outer-membrane machinery and should contribute to our understanding of the biology of these important pathogens and the design of drugs to combat them.",,,,Unverified,2024-10-22 14:16:23+00:00,"United States of America,United States of America,Korea (Republic of),United States of America,United States of America,United States of America",,,,,,,,,
AtomFlow,Biology,"Peking University,Chinese University of Hong Kong (CUHK),Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),University of Montreal / Université de Montréal,HEC Montreal,CIFAR AI Research","Academia,Academia,Academia,Academia,Academia,Research collective","Junqi Liu, Shaoning Li, Chence Shi, Zhi Yang, Jian Tang",2024-09-18,Design of Ligand-Binding Proteins with Atomic Flow Matching,https://arxiv.org/abs/2409.12080,0.0,,,,,,,,,,,,,,,,,,,"Designing novel proteins that bind to small molecules is a long-standing challenge in computational biology, with applications in developing catalysts, biosensors, and more. Current computational methods rely on the assumption that the binding pose of the target molecule is known, which is not always feasible, as conformations of novel targets are often unknown and tend to change upon binding. In this work, we formulate proteins and molecules as unified biotokens, and present AtomFlow, a novel deep generative model under the flow-matching framework for the design of ligand-binding proteins from the 2D target molecular graph alone. Operating on representative atoms of biotokens, AtomFlow captures the flexibility of ligands and generates ligand conformations and protein backbone structures iteratively. We consider the multi-scale nature of biotokens and demonstrate that AtomFlow can be effectively trained on a subset of structures from the Protein Data Bank, by matching flow vector field using an SE(3) equivariant structure prediction network. Experimental results show that our method can generate high fidelity ligand-binding proteins and achieve performance comparable to the state-of-the-art model RFDiffusionAA, while not requiring bound ligand structures. As a general framework, AtomFlow holds the potential to be applied to various biomolecule generation tasks in the future.",,,,Unverified,2024-10-22 14:16:41+00:00,"China,Hong Kong,China,Canada,Canada,Canada,Canada",,,,,,,,,
GraphEC,Biology,"Sun Yat-sen University,National Supercomputing Center in Shenzhen,Chongqing University,Key Laboratory of Machine Intelligence and Advanced Computing","Academia,Government,Academia","Yidong Song, Qianmu Yuan, Sheng Chen, Yuansong Zeng, Huiying Zhao, Yuedong Yang",2024-09-18,Accurately predicting enzyme functions through geometric graph learning on ESMFold-predicted structures,https://www.nature.com/articles/s41467-024-52533-w,,,,,,,,,,,,78000.99999999999,"588 + 74,487 + 3,297 = 78,372 ≈ 7.8e4 datapoints

GraphEC training data from:
- Active Site: 588
- EC Number: 74,487
- Optimum pH: 3,297",,,,,,,"Enzymes are crucial in numerous biological processes, with the Enzyme Commission (EC) number being a commonly used method for defining enzyme function. However, current EC number prediction technologies have not fully recognized the importance of enzyme active sites and structural characteristics. Here, we propose GraphEC, a geometric graph learning-based EC number predictor using the ESMFold-predicted structures and a pretrained protein language model. Specifically, we first construct a model to predict the enzyme active sites, which is utilized to predict the EC number. The prediction is further improved through a label diffusion algorithm by incorporating homology information. In parallel, the optimum pH of enzymes is predicted to reflect the enzyme-catalyzed reactions. Experiments demonstrate the superior performance of our model in predicting active sites, EC numbers, and optimum pH compared to other state-of-the-art methods. Additional analysis reveals that GraphEC is capable of extracting functional information from protein structures, emphasizing the effectiveness of geometric graph learning. This technology can be used to identify unannotated enzyme functions, as well as to predict their active sites and optimum pH, with the potential to advance research in synthetic biology, genomics, and other fields.",,,,Unverified,2025-01-30 05:04:45+00:00,"China,China,China,China",,,,,,,,,
ProtENN2,Biology,"European Bioinformatics Institute,University of Cambridge,Google Research","Research collective,Academia,Industry","Irina Ponamareva, Antonina Andreeva, Maxwell L Bileschi, Lucy Colwell, Alex Bateman",2024-09-18,Investigation of protein family relationships with deep learning,https://academic.oup.com/bioinformaticsadvances/article/4/1/vbae132/7760237,,,,,,,,,,,,23910000001.00013,"Total datapoints = 23,910,108,270 residues
= 2.391 × 10¹⁰

Calculation: Single value from training database, no additions or multiplications needed.",,,,,,,"Motivation
In this article, we propose a method for finding similarities between Pfam families based on the pre-trained neural network ProtENN2. We use the model ProtENN2 per-residue embeddings to produce new high-dimensional per-family embeddings and develop an approach for calculating inter-family similarity scores based on these embeddings, and evaluate its predictions using structure comparison.

Results
We apply our method to Pfam annotation by refining clan membership for Pfam families, suggesting both new members of existing clans and potential new clans for future Pfam releases. We investigate some of the failure modes of our approach, which suggests directions for future improvements. Our method is relatively simple with few parameters and could be applied to other protein family classification models. Overall, our work suggests potential benefits of employing deep learning for improving our understanding of protein family relationships and functions of previously uncharacterized families.

Availability and implementation
github.com/iponamareva/ProtCNNSim, 10.5281/zenodo.10091909.",,,,Unverified,2025-01-30 05:04:43+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America",,,,,,,,,
1X World Model,"Robotics,Video",1X,Industry,"Jack Monas, Eric Jang",2024-09-17,1X World Model,https://www.1x.tech/discover/1x-world-model,,,,,,,,,,,"""Over the last year, we’ve gathered thousands of hours of data on EVE humanoids doing diverse mobile manipulation tasks in homes and offices and interacting with people. We combined the video and action data to train a world model that can anticipate future video from observations and actions.""",,,,,,,,,"In machine learning, a world model is a computer program that can imagine how the world evolves in response to an agent’s behavior. Building on advancements in video generation and world models for autonomous vehicles, we have trained a world model that serves as a virtual simulator for our robots.
From the same starting image sequence, our world model can imagine multiple futures from different robot action proposals.
It can also predict non-trivial object interactions like rigid bodies, effects of dropping objects, partial observability, deformable objects (curtains, laundry), and articulated objects (doors, drawers, curtains, chairs).",,,,Unknown,2024-09-25 14:48:11+00:00,"United States of America,Norway",,,,,,,,,
Mistral Small v24.09,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Sablayrolles, Alexis Tacnet, Alok Kothari, Antoine Roux, Arthur Mensch, Audrey Herblin-Stoop, Augustin Garreau, Austin Birky, Bam4d, Baptiste Bout, Baudouin de Monicault, Blanche Savary, Carole Rambaud, Caroline Feldman, Devendra Singh Chaplot, Diego de las Casas, Diogo Costa, Eleonore Arcelin, Emma Bou Hanna, Etienne Metzger, Gaspard Blanchet, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Harizo Rajaona, Henri Roussez, Hichem Sattouf, Ian Mack, Jean-Malo Delignon, Jessica Chudnovsky, Justus Murke, Kartik Khandelwal, Lawrence Stewart, Louis Martin, Louis Ternon, Lucile Saulnier, Lélio Renard Lavaud, Margaret Jennings, Marie Pellat, Marie Torelli, Marie-Anne Lachaux, Marjorie Janiewicz, Mickaël Seznec, Nicolas Schuhl, Niklas Muhs, Olivier de Garrigues, Patrick von Platen, Paul Jacob, Pauline Buche, Pavan Kumar Reddy, Perry Savas, Pierre Stock, Romain Sauvestre, Sagar Vaze, Sandeep Subramanian, Saurabh Garg, Sophia Yang, Szymon Antoniak, Teven Le Scao, Thibault Schueller, Thibaut Lavril, Thomas Wang, Théophile Gervet, Timothée Lacroix, Valera Nemychnikova, Wendy Shang, William El Sayed, William Marshall",2024-09-17,AI in abundance,"https://mistral.ai/news/september-24-release/
https://huggingface.co/mistralai/Mistral-Small-Instruct-2409",,,,22000000000.0,22B,,,,,,,,,,,,,,,"We are proud to unveil Mistral Small v24.09, our latest enterprise-grade small model, an upgrade of Mistral Small v24.02. Available under the Mistral Research License, this model offers customers the flexibility to choose a cost-efficient, fast, yet reliable option for use cases such as translation, summarization, sentiment analysis, and other tasks that do not require full-blown general purpose models.

With 22 billion parameters, Mistral Small v24.09 offers customers a convenient mid-point between Mistral NeMo 12B and Mistral Large 2, providing a cost-effective solution that can be deployed across various platforms and environments. As shown below, the new small model delivers significant improvements in human alignment, reasoning capabilities, and code over the previous model.",,Open weights (non-commercial),,Confident,2025-01-31 16:19:31+00:00,France,,,,,,,,,
AminoAcid-0,Biology,Ginkgo Bioworks,Industry,"Zachary Kurtz, Matt Chamberlin, Eric Danielson, Alex Carlin, Michal Jastrzebski, Dana Merrick, Dmitriy Ryaboy, Emily Wrenbeck, Ankit Gupta",2024-09-17,A Protein Sequence LLM Trained on 2 Billion Proprietary Sequences,https://www.ginkgobioworks.com/2024/09/17/aa-0-protein-llm-technical-review/,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-10 16:31:02+00:00,United States of America,,,,,,,,,
OmniGen,Image generation,Beijing Academy of Artificial Intelligence / BAAI,Academia,"Shitao Xiao, Yueze Wang, Junjie Zhou, Huaying Yuan, Xingrun Xing, Ruiran Yan, Shuting Wang, Tiejun Huang, Zheng Liu",2024-09-17,OmniGen: Unified Image Generation,https://arxiv.org/abs/2409.11340,,,,3800000000.0,Table 2,,,,training time is not given and I am unable to calculate amount of tokens,,"""In this work, we have constructed a large-scale unified image generation
dataset for the first time, which we refer to as the X2I dataset, meaning ""anything to image"". ",100000000.0,"""The entire dataset comprises approximately 0.1 billion images.""

Stage Image Resolution Training Steps (K) Batch Size 
1 256×256 500 1040 
2 512×512 300 520 
3 1024×1024 100 208 
4 2240×2240 30 104 
5 Multiple 80 104 
",,,,NVIDIA A800,104.0,,"In this work, we introduce OmniGen, a new diffusion model for unified image generation. Unlike popular diffusion models (e.g., Stable Diffusion), OmniGen no longer requires additional modules such as ControlNet or IP-Adapter to process diverse control conditions. OmniGenis characterized by the following features: 1) Unification: OmniGen not only demonstrates text-to-image generation capabilities but also inherently supports other downstream tasks, such as image editing, subject-driven generation, and visual-conditional generation. Additionally, OmniGen can handle classical computer vision tasks by transforming them into image generation tasks, such as edge detection and human pose recognition. 2) Simplicity: The architecture of OmniGen is highly simplified, eliminating the need for additional text encoders. Moreover, it is more user-friendly compared to existing diffusion models, enabling complex tasks to be accomplished through instructions without the need for extra preprocessing steps (e.g., human pose estimation), thereby significantly simplifying the workflow of image generation. 3) Knowledge Transfer: Through learning in a unified format, OmniGen effectively transfers knowledge across different tasks, manages unseen tasks and domains, and exhibits novel capabilities. We also explore the model's reasoning capabilities and potential applications of chain-of-thought mechanism. This work represents the first attempt at a general-purpose image generation model, and there remain several unresolved issues. We will open-source the related resources at this https URL to foster advancements in this field.",,Open weights (unrestricted),,Confident,2024-10-28 18:45:59+00:00,China,,,,,,,,,
DeepRelax,Biology,"National University of Singapore,Sun Yat-sen University,Peking University,China Medical University Hospital,Asia university,Guangdong L-Med Biotechnology Company","Academia,Academia,Academia,Academia,Industry","Ziduo Yang, Yi-Ming Zhao, Xian Wang, Xiaoqing Liu, Xiuying Zhang, Yifan Li, Qiujie Lv, Calvin Yu-Chian Chen & Lei Shen",2024-09-17,Scalable crystal structure relaxation using an iteration-free deep generative model with uncertainty quantification,https://www.nature.com/articles/s41467-024-52378-3,,,,,,,,,,,,,,,,,,,,"In computational molecular and materials science, determining equilibrium structures is the crucial first step for accurate subsequent property calculations. However, the recent discovery of millions of new crystals and super large twisted structures has challenged traditional computational methods, both ab initio and machine-learning-based, due to their computationally intensive iterative processes. To address these scalability issues, here we introduce DeepRelax, a deep generative model capable of performing geometric crystal structure relaxation rapidly and without iterations. DeepRelax learns the equilibrium structural distribution, enabling it to predict relaxed structures directly from their unrelaxed ones. The ability to perform structural relaxation at the millisecond level per structure, combined with the scalability of parallel processing, makes DeepRelax particularly useful for large-scale virtual screening. We demonstrate DeepRelax’s reliability and robustness by applying it to five diverse databases, including oxides, Materials Project, two-dimensional materials, van der Waals crystals, and crystals with point defects. DeepRelax consistently shows high accuracy and efficiency, validated by density functional theory calculations. Finally, we enhance its trustworthiness by integrating uncertainty quantification. This work significantly accelerates computational workflows, offering a robust and trustworthy machine-learning method for material discovery and advancing the application of AI for science.

",,,,Unverified,2025-01-06 19:52:23+00:00,"Singapore,China,China,China,Taiwan,China",,,,,,,,,
ProTeM,Biology,"Zhejiang Lab,Zhejiang University,Huazhong University of Science and Technology,Mohamed bin Zayed University of Artificial Intelligence (MBZUAI)","Academia,Academia,Academia","Ming Qin, Xun Li, Yuhao Wang, Zhenping Li, Hongbin Ye, Zongbing Wang, Weihao Gao, Shangsong Liang, Qiang Zhang, Keyan Ding ",2024-09-17,ProTeM: Unifying Protein Function Prediction via Text Matching,https://link.springer.com/chapter/10.1007/978-3-031-72353-7_10,,,,,,,,,,,,363000001.0000002,"Bio-LLM: 2,000,000 documents × 100 tokens = 2.0 × 10^8 tokens
ProTeM: 467,277 pairs × (50 text + 300 protein) tokens = 1.63 × 10^8 tokens
Total: 2.0 × 10^8 + 1.63 × 10^8 = 3.63 × 10^8 tokens",,,,,,,"The exponential availability of protein sequences has led to the dominance of the pretraining-then-finetuning paradigm for protein function prediction. However, finetuning a pretrained protein language model for diverse downstream tasks requires annotated protein data tailored to each task. To avoid the redundant individual finetuning, we propose a methodology that unifies various Protein function prediction tasks via Text Matching (named ProTeM). This method first transforms simple numeric or category labels from disparate protein datasets into textual descriptions, imbued with rich semantics. We then harness a pretrained large language model, which is proficient in comprehensive language understanding, to capture intrinsic interconnections among varied protein functions and facilitate the alignment between text and protein. During inference, we employ the paradigm of text matching to predict the protein functionalities. Extensive experiments demonstrate that ProTeM achieves performance on par with individually finetuned models, and outshines the model based on conventional multi-task learning. Moreover, ProTeM unveils an enhanced capacity for protein representation, surpassing state-of-the-art PLMs.",,,,Unverified,2025-01-30 05:05:13+00:00,"China,China,China,United Arab Emirates",,,"""During the Bio-LLM training process, we employ the LoRA finetuning technique ([7]), utilizing four NVIDIA V100-32G GPUs. The rank k in LoRA is configured as 8. We use the Adam optimizer with a batch size of 64 and a learning rate of 2e-4. When training ProTeM, we freeze the Bio-LLM and finetune the PLM only. The Adam learning rate is 2e-5 and a batch size of 10.""",,,,,,
Pixtral 12B,"Vision,Language,Multimodal",Mistral AI,Industry,Mistral AI Team,2024-09-17,Pixtral 12B - the first-ever multimodal Mistral model. Apache 2.0.,https://mistral.ai/news/pixtral-12b/,,,,12400000000.0,"""New 400M parameter vision encoder trained from scratch""
+
""12B parameter multimodal decoder based on Mistral Nemo""",,,,,Unspecified unreleased,,,"""We simply pass images through the vision encoder at their native resolution and aspect ratio, converting them into image tokens for each 16x16 patch in the image""",,,,,,,"Natively multimodal, trained with interleaved image and text data
Strong performance on multimodal tasks, excels in instruction following
Maintains state-of-the-art performance on text-only benchmarks
New 400M parameter vision encoder trained from scratch
12B parameter multimodal decoder based on Mistral Nemo
Supports variable image sizes and aspect ratios
Supports multiple images in the long context window of 128k tokens
License: Apache 2.0
Pixtral is trained to understand both natural images and documents, achieving 52.5% on the MMMU reasoning benchmark, surpassing a number of larger models. The model shows strong abilities in tasks such as chart and figure understanding, document question answering, multimodal reasoning and instruction following. Pixtral is able to ingest images at their natural resolution and aspect ratio, giving the user flexibility on the number of tokens used to process an image. Pixtral is also able to process any number of images in its long context window of 128K tokens. Unlike previous open-source models, Pixtral does not compromise on text benchmark performance to excel in multimodal tasks.",,Open weights (unrestricted),,Confident,2024-11-13 09:04:30+00:00,France,,,,,,,,,
Qwen2.5-32B,Language,Alibaba,Industry,Qwen Team,2024-09-17,Qwen2.5: A Party of Foundation Models!,https://qwenlm.github.io/blog/qwen2.5/ ,,,,32500000000.0,32.5B,3.51e+24,,,6 * 32.5B parameters * 18 trillion tokens = 3.51 × 10^24,Unspecified unreleased,,18000000000000.0,"""In terms of Qwen2.5, the language models, all models are pretrained on our latest large-scale dataset, encompassing up to 18 trillion tokens""",,,,,,,"In the past three months since Qwen2’s release, numerous developers have built new models on the Qwen2 language models, providing us with valuable feedback. During this period, we have focused on creating smarter and more knowledgeable language models. Today, we are excited to introduce the latest addition to the Qwen family: Qwen2.5. We are announcing what might be the largest opensource release in history! Let’s get the party started!

The Qwen2.5-7B model surpasses its predecessors and counterparts in numerous benchmarks, despite having fewer non-embedding parameters. It demonstrates significant improvements across various tasks, achieving 74.2 on general benchmarks like MMLU, 49.8 on math challenges such as MATH, and 57.9 on coding tasks like HumanEval.",,Open weights (unrestricted),,Confident,2025-03-06 20:17:07+00:00,China,,,,,,,,,
RNA language models predict mutations that improve RNA function,Biology,"NERSC, Lawrence Berkeley National Laboratory,University of California San Francisco,University of California (UC) Berkeley","Government,Academia,Academia","Yekaterina Shulgina, Marena I Trinidad, Conner J Langeberg, Hunter Nisonoff, Seyone Chithrananda, Petr Skopintsev, Amos J Nissley, Jaymin Patel, Ron S Boger, Honglue Shi, Peter H Yoon, Erin E Doherty, Tara Pande, Aditya M Iyer, Jennifer A Doudna, Jamie H D Cate",2024-09-16,RNA language models predict mutations that improve RNA function,https://pmc.ncbi.nlm.nih.gov/articles/PMC11014562/,3.0,,,,,,,,,,,363000001.0000002,"89,000,000 + 274,000,000 = 363,000,000 tokens

Dataset 1 (23S rRNA): 89M tokens
Dataset 2 (GARNET): 274M tokens
Total combined: 363M tokens (3.63e8)",,,,,,,"Structured RNA lies at the heart of many central biological processes, from gene expression to catalysis. While advances in deep learning enable the prediction of accurate protein structural models, RNA structure prediction is not possible at present due to a lack of abundant high-quality reference data1. Furthermore, available sequence data are generally not associated with organismal phenotypes that could inform RNA function2–4. We created GARNET (Gtdb Acquired RNa with Environmental Temperatures), a new database for RNA structural and functional analysis anchored to the Genome Taxonomy Database (GTDB)5. GARNET links RNA sequences derived from GTDB genomes to experimental and predicted optimal growth temperatures of GTDB reference organisms. This enables construction of deep and diverse RNA sequence alignments to be used for machine learning. Using GARNET, we define the minimal requirements for a sequence- and structure-aware RNA generative model. We also develop a GPT-like language model for RNA in which overlapping triplet tokenization provides optimal encoding. Leveraging hyperthermophilic RNAs in GARNET and these RNA generative models, we identified mutations in ribosomal RNA that confer increased thermostability to the Escherichia coli ribosome. The GTDB-derived data and deep learning models presented here provide a foundation for understanding the connections between RNA sequence, structure, and function.",,,,Unverified,2025-01-30 05:04:48+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
DeepUrfold,Biology,University of Virginia,Academia,"Eli J. Draizen, Stella Veretnik, Cameron Mura, Philip E. Bourne ",2024-09-16,Deep generative models of protein structure uncover distant relationships across a continuous fold space,https://www.nature.com/articles/s41467-024-52020-2,,,,110000000.0,"""Our final network has ≈ 110M parameters in total and all of the SF-level networks were trained for 30 epochs, using a batch size of 255""",,,,,,,,,,,,NVIDIA RTX A6000,,,"Our views of fold space implicitly rest upon many assumptions that impact how we analyze, interpret and understand protein structure, function and evolution. For instance, is there an optimal granularity in viewing protein structural similarities (e.g., architecture, topology or some other level)? Similarly, the discrete/continuous dichotomy of fold space is central, but remains unresolved. Discrete views of fold space bin similar folds into distinct, nonoverlapping groups; unfortunately, such binning can miss remote relationships. While hierarchical systems like CATH are indispensable resources, less heuristic and more conceptually flexible approaches could enable more nuanced explorations of fold space. Building upon an Urfold model of protein structure, here we present a deep generative modeling framework, termed DeepUrfold, for analyzing protein relationships at scale. DeepUrfold’s learned embeddings occupy high-dimensional latent spaces that can be distilled for a given protein in terms of an amalgamated representation uniting sequence, structure and biophysical properties. This approach is structure-guided, versus being purely structure-based, and DeepUrfold learns representations that, in a sense, define superfamilies. Deploying DeepUrfold with CATH reveals evolutionarily-remote relationships that evade existing methodologies, and suggests a mostly-continuous view of fold space—a view that extends beyond simple geometric similarity, towards the realm of integrated sequence ↔ structure ↔ function properties.",,,,Unverified,2024-11-23 21:22:33+00:00,United States of America,,,,,,,,,
Ovis1.6-Gemma2-9B,,,,,2024-09-16,Ovis1.6-Gemma2-9B,https://huggingface.co/AIDC-AI/Ovis1.6-Gemma2-9B,,,,10200000000.0,,,,,,,,,,,,,,,,"We are excited to announce the open-sourcing of Ovis-1.6, our latest multi-modal large language model. Ovis is a novel Multimodal Large Language Model (MLLM) architecture, designed to structurally align visual and textual embeddings.",,,,Unverified,,,,,,,,,,,
RNAdiffusion,Biology,"Princeton University,Tsinghua University,Stanford University","Academia,Academia,Academia","Kaixuan Huang, Yukang Yang, Kaidi Fu, Yanyi Chu, Le Cong, Mengdi Wang",2024-09-15,Latent Diffusion Models for Controllable RNA Sequence Generation,https://arxiv.org/abs/2409.09828,0.0,,,,,1.400000000000012e+20,,,"1. Hardware setup:
- 1x NVIDIA H100-80G GPU (9.90e+14 FLOP/s) for autoencoder, diffusion model, and fine-tuning
- 1x NVIDIA A100-80G GPU (3.12e+14 FLOP/s) for reward model

2. Training duration (provided directly):
- Autoencoder: 68 hours (8 epochs × 8.5 hours)
- Diffusion model: 10.5 hours (3 epochs × 3.5 hours)
- Fine-tuning: 0.67 hours (40 minutes)
- Reward model: 7 hours

3. Utilization rate: 40% for all components

4. Final calculation:
Autoencoder: 9.90e+14 × 244,800 × 0.4 = 9.69e+19
Diffusion: 9.90e+14 × 37,800 × 0.4 = 1.49688e+20
Fine-tuning: 9.90e+14 × 2,412 × 0.4 = 9.56e+17
Reward: 3.12e+14 × 25,200 × 0.4 = 3.14e+19
Total: 2.04e+20 FLOPs (rounded to 1.4e+20 FLOPs)",,,550000001.0000001,"1.1M sequences × 500bp (avg length) = 550,000,000 (5.5 × 10⁸) tokens",,,,,,,"This paper presents RNAdiffusion, a latent diffusion model for generating and optimizing discrete RNA sequences. RNA is a particularly dynamic and versatile molecule in biological processes. RNA sequences exhibit high variability and diversity, characterized by their variable lengths, flexible three-dimensional structures, and diverse functions. We utilize pretrained BERT-type models to encode raw RNAs into token-level biologically meaningful representations. A Q-Former is employed to compress these representations into a fixed-length set of latent vectors, with an autoregressive decoder trained to reconstruct RNA sequences from these latent variables. We then develop a continuous diffusion model within this latent space. To enable optimization, we train reward networks to estimate functional properties of RNA from the latent variables. We employ gradient-based guidance during the backward diffusion process, aiming to generate RNA sequences that are optimized for higher rewards. Empirical experiments confirm that RNAdiffusion generates non-coding RNAs that align with natural distributions across various biological indicators. We fine-tuned the diffusion model on untranslated regions (UTRs) of mRNA and optimize sample sequences for protein translation efficiencies. Our guided diffusion model effectively generates diverse UTR sequences with high Mean Ribosome Loading (MRL) and Translation Efficiency (TE), surpassing baselines. These results hold promise for studies on RNA sequence-function relationships, protein synthesis, and enhancing therapeutic RNA design.",,,,Unverified,2025-02-14 19:08:30+00:00,"United States of America,China,United States of America",,,,,,,,,
UdanDTI,Biology,Tsinghua University,Academia,"Pei-Dong Zhang, Jianzhu Ma, Ting Chen",2024-09-15,Escaping the Drug-Bias Trap: Using Debiasing Design to Improve Interpretability and Generalization of Drug-Target Interaction Prediction,https://www.biorxiv.org/content/10.1101/2024.09.12.612771v1.abstract,,,,,,3.5000000000000287e+18,,,"1. Hardware setup: 1x NVIDIA A40 Tensor Core GPU (1.50×10¹⁴ FLOP/s)

2. Training duration: Estimated 16.4 hours (59,000 seconds) - revised from initial calculation of 11,641.67 hours which was deemed unrealistic

3. Utilization rate: 40%

4. Final calculation: 
1.50×10¹⁴ FLOP/s × 1 GPU × 59,000 s × 0.4 = 3.54×10¹⁸ FLOPs",,,75738.99999999996,"BindingDB:
20,675 + 20,675 = 41,350

BioSNAP:
13,830 + 13,830 = 27,660",,,,NVIDIA A40 PCIe,1.0,,"Considering the high cost associated with determining reaction affinities through in-vitro experiments, virtual screening of potential drugs bound with specific protein pockets from vast compounds is critical in AI-assisted drug discovery. Deep-leaning approaches have been proposed for Drug-Target Interaction (DTI) prediction. However, they have shown overestimated accuracy because of the drug-bias trap, a challenge that results from excessive reliance on the drug branch in the traditional drug-protein dual-branch network approach. This casts doubt on the interpretability and generalizability of existing Drug-Target Interaction (DTI) models. Therefore, we introduce UdanDTI, an innovative deep-learning architecture designed specifically for predicting drug-protein interactions. UdanDTI applies an unbalanced dual-branch system and an attentive aggregation module to enhance interpretability from a biological perspective. Across various public datasets, UdanDTI demonstrates outstanding performance, outperforming state-of-the-art models under in-domain, cross-domain, and structural interpretability settings. Notably, it demonstrates exceptional accuracy in predicting drug responses of two crucial subgroups of Epidermal Growth Factor Receptor (EGFR) mutations associated with non-small cell lung cancer, consistent with experimental results. Meanwhile, UdanDTI could complement the advanced molecular docking software DiffDock. The codes and datasets of UdanDTI are available at https://github.com/CQ-zhang-2016/UdanDTI.",,,,Unverified,2025-02-14 19:08:46+00:00,China,,,,,,,,,
ProtRNA,Biology,"Fudan University,Shanghai AI Lab","Academia,Academia","Ruoxi Zhang, Ben Ma, Gang Xu, Jianpeng Ma",2024-09-14,ProtRNA: A Protein-derived RNA Language Model by Cross-Modality Transfer Learning,https://www.biorxiv.org/content/10.1101/2024.09.10.612218v1.abstract,0.0,,,,,,,,,,,3072000001.0000014,"Number of sequences: 6 million
Tokens per sequence: 512
Total tokens: 6,000,000 × 512 = 3.072 × 10^9

Final estimate: 3.072 billion data points",,,,,,,"Protein language models (PLM), such as the highly successful ESM-2, have proven to be particularly effective. However, language models designed for RNA continue to face challenges. A key question is: can the information derived from PLMs be harnessed and transferred to RNA? To investigate this, a model termed ProtRNA has been developed by cross-modality transfer learning strategy for addressing the challenges posed by RNA’s limited and less conserved sequences. By leveraging the evolutionary and physicochemical information encoded in protein sequences, the ESM-2 model is adapted to processing ""low-resource"" RNA sequence data. The results show comparable or even superior performance in various RNA downstream tasks, with only 1/8 the trainable parameters and 1/6 the training data employed by other baseline RNA language models. This approach highlights the potential of cross-modality transfer learning in biological language models.",,,,Unverified,2025-01-30 05:05:05+00:00,"China,China",,,,,,,,,
PLTNUM,Biology,"Kyoto University,National Institute of Biomedical Innovation,RIKEN","Academia,Government","Tatsuya Sagawa, Eisuke Kanao, Kosuke Ogata, Koshi Imami, Yasushi Ishihama",2024-09-14,Prediction of Protein Half-lives from Amino Acid Sequences by Protein Language Models,https://www.biorxiv.org/content/10.1101/2024.09.10.612367v1.abstract,,,,,,,,,,,,2100000.9999999986,"Total Datapoints = Number of Proteins × Sequence Length
Total Datapoints = 4,162 × 510 = 2,122,620 tokens
Final result ≈ 2.1 × 10^6 tokens",,,,,,,"We developed a protein half-life prediction model, PLTNUM, based on a protein language model using an extensive dataset of protein sequences and protein half-lives from the NIH3T3 mouse embryo fibroblast cell line as a training set. PLTNUM achieved an accuracy of 71% on validation data and showed robust performance with an ROC of 0.73 when applied to a human cell line dataset. By incorporating Shapley Additive Explanations (SHAP) into PLTNUM, we identified key factors contributing to shorter protein half-lives, such as cysteine-containing domains and intrinsically disordered regions. Using SHAP values, PLTNUM can also predict potential degron sequences that shorten protein half-lives. This model provides a platform for elucidating the sequence dependency of protein half-lives, while the uncertainty in predictions underscores the importance of biological context in influencing protein half-lives.

",,,,Unverified,2025-01-30 05:04:59+00:00,"Japan,Japan,Japan",,,,,,,,,
LEGO,Biology,"Chinese Academy of Sciences,Beijing Academy of Artificial Intelligence / BAAI,University of Chinese Academy of Sciences","Academia,Academia,Academia","Yuancheng Sun, Kai Chen, Kang Liu, Qiwei Ye",2024-09-14,3D Molecular Pretraining via Localized Geometric Generation,https://www.biorxiv.org/content/10.1101/2024.09.10.612249v1,,,,,,,,,,,,,,,,,,,,"Self-supervised learning on 3D molecular structures is gaining importance in data-driven scientific research and applications due to the high costs of annotating bio-chemical data. However, the strategic selection of semantic units for modeling 3D molecular structures remains underexplored, despite its crucial role in effective pre-training—a concept well-established in language processing and computer vision. We introduce Localized Geometric Generation (LEGO), a novel approach that treats tetrahedrons within 3D molecular structures as fundamental building blocks, leveraging their geometric simplicity and widespread presence across chemical functional patterns. Inspired by masked modeling, LEGO perturbs tetrahedral local structures and learns to reconstruct them in a self-supervised manner. Experimental results demonstrate LEGO consistently enhances molecular representations across biochemistry and quantum property prediction benchmarks. Additionally, the tetrahedral modeling and pretraining generalize from small molecules to larger molecular systems, validating by protein-ligand affinity prediction. Our results highlight the potential of selecting semantic units to build more expressive and interpretable neural networks for scientific AI applications.",,,,Unverified,2024-11-29 07:35:50+00:00,"China,China,China",,,,,,,,,
MolSnapper,Biology,University of Oxford,Academia,"Yael Ziv, Brian Marsden, Charlotte M. Deane",2024-09-14,MolSnapper: Conditioning Diffusion for Structure Based Drug Design ,https://www.biorxiv.org/content/10.1101/2024.03.28.586278v2.abstract,,,,,,,,,,,,140001.0000000001,"CrossDocked2020 (100,000) + Binding MOAD (40,344) = 140,344 total data points

100,000 + 40,344 = 140,344 ≈ 1.4e5",,,,,,,"Generative models have emerged as potentially powerful methods for molecular design, yet challenges persist in generating molecules that effectively bind to the intended target. The ability to control the design process and incorporate prior knowledge would be highly beneficial for better tailoring molecules to fit specific binding sites. In this paper, we introduce MolSnapper, a novel tool that is able to condition diffusion models for structure-based drug design by seamlessly integrating expert knowledge in the form of 3D pharmacophores. We demonstrate through comprehensive testing on both the CrossDocked and Binding MOAD datasets, that our method generates molecules better tailored to fit a given binding site, achieving high structural and chemical similarity to the original molecules. It also, when compared to alternative methods, yields approximately twice as many valid molecules.",,,,Unverified,2025-01-30 05:04:04+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
NeoaPred,Biology,"South China University of Technology,Jinan University","Academia,Academia","Dawei Jiang, Binbin Xi, Wenchong Tan, Zixi Chen, Jinfen Wei, Meiling Hu, Xiaoyun Lu, Dong Chen, Hongmin Cai, Hongli Du",2024-09-14,NeoaPred: A deep-learning framework for predicting immunogenic neoantigen based on surface and structural features of peptide-HLA complexes,https://academic.oup.com/bioinformatics/article/40/9/btae547/7758065,,,,,,,,,,,,39001.00000000004,"PDB structures: 1,018 × 0.90 = 916
Self-distillation: 7,860
PepConf total: 916 + 7,860 = 8,776 ≈ 8.8 × 10³

PepFore samples: 32,962 × 0.90 = 29,666 ≈ 2.97 × 10⁴

Final total: 8.8 × 10³ + 2.97 × 10⁴ = 3.85 × 10⁴ ≈ 3.9 × 10⁴ datapoints",,,,,,,"Motivation
Neoantigens, derived from somatic mutations in cancer cells, can elicit anti-tumor immune responses when presented to autologous T cells by human leukocyte antigen. Identifying immunogenic neoantigens is crucial for cancer immunotherapy development. However, the accuracy of current bioinformatic methods remains unsatisfactory. Surface and structural features of peptide–HLA class I (pHLA-I) complexes offer valuable insight into the immunogenicity of neoantigens.

Results
We present NeoaPred, a deep-learning framework for neoantigen prediction. NeoaPred accurately constructs pHLA-I complex structures, with 82.37% of the predicted structures showing an RMSD of < 1 Å. Using these structures, NeoaPred integrates differences in surface, structural, and atom group features between the mutant peptide and its wild-type counterpart to predict a foreignness score. This foreignness score is an effective factor for neoantigen prediction, achieving an AUROC (Area Under the Receiver Operating Characteristic Curve) of 0.81 and an AUPRC (Area Under the Precision-Recall Curve) of 0.54 in the test set, outperforming existing methods.

Availability and implementation
The source code is released under an Apache v2.0 license and is available at the GitHub repository (https://github.com/Dulab2020/NeoaPred).",,,,Unverified,2025-01-30 05:04:08+00:00,"China,China",,,,,,,,,
YOLOv8 (reCAPTCHA fine-tuned),Vision,ETH Zurich,Academia,"Andreas Plesner, Tobias Vontobel, Roger Wattenhofer",2024-09-13,Breaking reCAPTCHAv2,https://arxiv.org/abs/2409.08831,,,,,,,,,,,,,"Combined with the public data, this resulted in around 14k image/label
pairs for fine-tuning the classification model.",,,,,,,"Our work examines the efficacy of employing advanced machine learning methods to solve captchas from Google's reCAPTCHAv2 system. We evaluate the effectiveness of automated systems in solving captchas by utilizing advanced YOLO models for image segmentation and classification. Our main result is that we can solve 100% of the captchas, while previous work only solved 68-71%. Furthermore, our findings suggest that there is no significant difference in the number of challenges humans and bots must solve to pass the captchas in reCAPTCHAv2. This implies that current AI technologies can exploit advanced image-based captchas. We also look under the hood of reCAPTCHAv2, and find evidence that reCAPTCHAv2 is heavily based on cookie and browser history data when evaluating whether a user is human or not. The code is provided alongside this paper.",,,,Unverified,2024-09-25 19:03:55+00:00,Switzerland,YOLOv8x,,,,,,,,
JURA Bio Model,Biology,"JURA Bio,Colombia University,New York University (NYU),Harvard Medical School","Industry,Academia,Academia,Academia","Eli N. Weinstein, Mattia G. Gollub, Andrei Slabodkin, Cameron L. Gardner, Kerry Dobbs, Xiao-Bing Cui, Alan N. Amin, George M. Church",2024-09-13,Manufacturing-Aware Generative Model Architectures Enable Biological Sequence Design and Synthesis at Petascale,https://static1.squarespace.com/static/66db3a552002432ff6a39dae/t/66e45d8b7ed2bf1a517e03c1/1726242191877/JURA_VariationalSynthesis.pdf,,,,,,,,,,,,4400000001.000004,"293,000,000 sequences * 15 tokens/sequence = 4,395,000,000 tokens (~4.4 billion tokens)

Derived from: Observed Antibody Space database with 325,596,608 sequences, 90% training split (293M), avg sequence length 15 amino acids.",,,,,,,"We introduce a method to reduce the cost of synthesizing proteins and other biological sequences designed by a generative model by as much as a trillion-fold. In particular, we make our
generative models manufacturing-aware, such that model-designed sequences can be efficiently
synthesized in the real world with extreme parallelism. We demonstrate by training and synthesizing samples from generative models of antibodies, T cell antigens and DNA polymerases.
For example, we train a manufacturing-aware generative model on 300 million observed human
antibodies and synthesize ∼1017 generated designs from the model, achieving a sample quality
comparable to a state-of-the-art protein language model, at a cost of 103 dollars. Using previous
methods, synthesis of a library of the same accuracy and size would cost roughly a quadrillion
(1015) dollars.",,,,Unverified,2025-01-30 05:04:09+00:00,"United States of America,United States of America,United States of America,United States of America",,,,,,,,,
IDPFold,Biology,"Shandong University,BioMap Research,Fuzhou University,Shanghai Jiao Tong University","Academia,Industry,Academia,Academia","Junjie Zhu, Zhengxin Li, Zhuoqi Zheng, Bo Zhang, Bozitao Zhong, Jie Bai, Xiaokun Hong, Taifeng Wang, Ting Wei, Jianyi Yang, Hai-Feng Chen",2024-09-13,Precise Generation of Conformational Ensembles for Intrinsically Disordered Proteins via Fine-tuned Diffusion Models,https://www.biorxiv.org/content/10.1101/2024.05.05.592611.abstract,,,,17800000.0,Taken from Table 2,2.59999999999998e+20,,,"1. Hardware setup: 1x NVIDIA A100 GPU with 3.12×10¹⁴ FLOP/s (fp16_tensor)

2. Training duration: Directly provided as 24 GPU days (9 days initial + 15 days second phase) = 2.0736×10⁶ seconds

3. Utilization rate: 40%

4. Final calculation:
3.12×10¹⁴ FLOP/s × 1 GPU × 2.0736×10⁶ s × 0.4 = 2.6×10²⁰ FLOP",,,7500001.000000003,"Initial Phase: 25,495 sequences × 200 residues = 5,099,000 points
Second Phase: 3,880 sequences × 300 residues = 1,164,000 points
Total: 5,099,000 + 1,164,000 = 6,263,000 points
Rounded: 7.5 million data points",,,,NVIDIA A100,,,"Intrinsically disordered proteins (IDPs) play pivotal roles in various biological functions and are closely linked to many human diseases including cancer, diabetes and Alzheimer disease. Structural investigations of IDPs typically involve a combination of molecular dynamics (MD) simulations and experimental data to correct for intrinsic biases in simulation methods. However, these simulations are hindered by their high computational cost and a scarcity of experimental data, severely limiting their applicability. Despite the recent advancements in structure prediction for structured proteins, understanding the conformational properties of IDPs remains challenging partly due to the poor conservation of disordered protein sequences and limited experimental characterization. Here, we introduce IDPFold, a method capable of generating conformational ensembles for IDPs directly from their sequences using fine-tuned diffusion models. IDPFold bypasses the need for Multiple Sequence Alignments (MSA) or experimental data, achieving accurate predictions of ensemble properties across numerous IDPs. By sampling conformations at the backbone level, IDPFold provides more detailed structural features and more precise property estimation compared to other state-of-the-art methods. IDPFold is ready to be used in the elucidate the sequence-disorder-function paradigm of IDPs.",,,,Unverified,2025-02-14 19:09:39+00:00,"China,China,China,China",,,,,,,,,
Novae,Biology,"CentraleSupelec,Gustave Roussy,Université Paris Cité",Academia,"Quentin Blampey, Hakim Benkirane, Nadège Bercovici, Fabrice André, Paul-Henry Cournède",2024-09-13,Novae: a graph-based foundation model for spatial transcriptomics data,https://www.biorxiv.org/content/10.1101/2024.09.09.612009v1.abstract,,,,,,1.1e+19,,,"""Novae was trained on a Nvidia HGX A100 GPU for 24 hours."" Assume FP16 tensor precision and 40% utilization. ",,,30000000.0,"""This allowed us  169 to train Novae on a dataset composed of nearly 30 million cells using a GPU with 40GB of RAM (see  170 subsection 4.14 for more details).""",,,,,,,"Spatial transcriptomics is advancing molecular biology by providing high-resolution insights into gene expression within the spatial context of tissues. This context is essential for identifying spatial domains, enabling the understanding of micro-environment organizations and their implications for tissue function and disease progression. To improve current model limitations on multiple slides, we have designed Novae (https://github.com/MICS-Lab/novae), a graph-based foundation model that extracts representations of cells within their spatial contexts. Our model was trained on a large dataset of nearly 30 million cells across 18 tissues, allowing Novae to perform zero-shot domain inference across multiple gene panels, tissues, and technologies. Unlike other models, it also natively corrects batch effects and constructs a nested hierarchy of spatial domains. Furthermore, Novae supports various downstream tasks, including spatially variable gene or pathway analysis and spatial domain trajectory analysis. Overall, Novae provides a robust and versatile tool for advancing spatial transcriptomics and its applications in biomedical research.",,,,Unverified,2025-02-14 19:09:45+00:00,"France,France,France",,,,,,,,,
CodonTransformer,Biology,"Vector Institute,University of Toronto,Université Paris Cité","Academia,Academia,Academia","Adibvafa Fallahpour, Vincent Gureghian, Guillaume J. Filion, Ariel B. Lindner, Amir Pandi",2024-09-13,CodonTransformer: a multispecies codon optimizer using context-aware neural networks,https://www.biorxiv.org/content/10.1101/2024.09.13.612903v1.abstract,,,,89600000.0,"""total number of parameters to 89.6 million.""",1e+19,,,"1. Hardware setup:
- Pretraining: 16x NVIDIA V100 GPUs @ 1.25e14 FLOP/s per GPU
- Fine-tuning: 4x NVIDIA V100 GPUs @ 1.25e14 FLOP/s per GPU

2. Training duration: Estimated 1.28 hours based on FLOPs calculation and hardware setup

3. Utilization rate: 40%

4. Final calculation:
Total FLOPs = Pretraining (8.96e7 params × 1.02e10 tokens × 100 = 9.14e17) + Fine-tuning (8.96e7 params × 3.07e9 tokens × 100 = 2.75e18) = 3.66e18 FLOPs",,,1000000000.9999998,"1,001,197 sequences × 1,000 tokens/sequence = 1.001197 × 10⁹ tokens ≈ 1.0 × 10⁹ tokens",5.0,,,NVIDIA V100,16.0,,"The genetic code is degenerate allowing a multitude of possible DNA sequences to encode the same protein. This degeneracy impacts the efficiency of heterologous protein production due to the codon usage preferences of each organism. The process of tailoring organism-specific synonymous codons, known as codon optimization, must respect local sequence patterns that go beyond global codon preferences. As a result, the search space faces a combinatorial explosion that makes exhaustive exploration impossible. Nevertheless, throughout the diverse life on Earth, natural selection has already optimized the sequences, thereby providing a rich source of data allowing machine learning algorithms to explore the underlying rules. Here, we introduce CodonTransformer, a multispecies deep learning model trained on over 1 million DNA-protein pairs from 164 organisms spanning all kingdoms of life. The model demonstrates context-awareness thanks to the attention mechanism and bidirectionality of the Transformers we used, and to a novel sequence representation that combines organism, amino acid, and codon encodings. CodonTransformer generates host-specific DNA sequences with natural-like codon distribution profiles and with negative cis-regulatory elements. This work introduces a novel strategy of Shared Token Representation and Encoding with Aligned Multi-masking (STREAM) and provides a state-of-the-art codon optimization framework with a customizable open-access model and a user-friendly interface.",,,,Unverified,2025-01-30 05:04:47+00:00,"Canada,Canada,France",,,,,,,,,
Text2Protein,Biology,"University of California San Diego,Brown University","Academia,Academia","Ramtin Hosseini, Siyang Zhang, Pengtao Xie",2024-09-13,Text2Protein: A Generative Model for Designated Protein Design on Given Description,https://www.researchsquare.com/article/rs-4868665/v1,,,,,,5.500000000000003e+19,,,"1. Hardware setup: 1x NVIDIA RTX 3090 (1.60e14 FLOP/s FP16 tensor)

2. Training duration: 10 days provided directly (864,000 seconds)

3. Utilization rate: 40%

4. Calculation: 1.60e14 FLOP/s × 1 GPU × 864,000s × 0.4 = 5.5e19 FLOPs",,,1000000.9999999997,"Training set: 10,898 * 0.95 = 10,353 proteins
Average residues per protein: 100
Total datapoints = 10,353 * 100 = 1,035,300

Range validation:
Minimum (40 residues): 10,353 * 40 = 414,120
Maximum (256 residues): 10,353 * 256 = 2,648,768

Final estimate: ~1.0e6 datapoints",,240.0,"""We trained the diffusion model for approximately 500,000 iterations with a batch size of 248. The entire training process, conducted on an NVIDIA RTX 3090 GPU, took about 10 days to complete.""",NVIDIA GeForce RTX 3090,,,"Designing protein structures from text is challenging in computational biology. We propose Text2Protein, a pipeline combining large language models (LLMs) with diffusion models to generate full-atomic protein structures from text. Using a conditional diffusion model and the Vicuna-7B language model, we learn data distributions of 6D interresidue coordinates, refined into full-atomic structures with PyRosetta. Trained on a curated RCSB-PDB dataset, Text2Protein focuses on single-chain proteins with 40-256 residues. Our extensive experiments validate Text2Protein’s effectiveness by generating high-fidelity protein structures similar to ground truth proteins using raw texts. We evaluate Text2Protein using multiple metrics, including Mean Square Error (MSE) of 6D coordinates, Rosetta Energy Units (REU), and TM-score. Our results show that 5% of the generated proteins have a TM-score greater than 0.5, indicating similar folds in SCOP/CATH. Additionally, 16% of pairs have a TM-score greater than 0.4, 89% have a TM-score greater than 0.3, and none have a TM-score less than 0.17, below the threshold for unrelated proteins. Text2Protein presents a promising framework for automated protein design, potentially accelerating novel protein discovery. This work opens new avenues for integrating natural language understanding with protein structure generation, with implications in drug discovery, enzyme engineering, and material science.",,,,Unverified,2025-02-14 19:09:53+00:00,"United States of America,United States of America",,,,,,,,,
o1-mini,Language,OpenAI,Industry,,2024-09-12,Learning to reason with LLMs,https://openai.com/index/learning-to-reason-with-llms/,,Significant use,"Model available in ChatGPT, likely widely used ",,,,,,,Unspecified unreleased,"""Both models were trained on a variety of publicly available datasets, including web data and open-source datasets. Key components include reasoning data and scientific literature. <..> To further enhance the capabilities of o1-preview and o1-mini, we formed partnerships to access high-value non-public datasets. These proprietary data sources include paywalled content, specialized archives, and other domain-specific datasets that provide deeper insights into industry-specific knowledge and use cases.""",,,,,,,,,"We've developed a new series of AI models designed to spend more time thinking before they respond. They can reason through complex tasks and solve harder problems than previous models in science, coding, and math.

...

We’re also releasing OpenAI o1-mini, a faster, cheaper reasoning model that is particularly effective at coding. As a smaller model, o1-mini is 80% cheaper than o1-preview, making it a powerful, cost-effective model for applications that require reasoning but not broad world knowledge.",,API access,,Unknown,2025-02-13 16:01:00+00:00,United States of America,,,,,,,,,
o1-preview,"Language,Mathematics,Biology",OpenAI,Industry,,2024-09-12,A new series of reasoning models for solving hard problems.,https://openai.com/index/introducing-openai-o1-preview/,,"SOTA improvement,Significant use",SOTA in GPQA among others: https://openai.com/index/learning-to-reason-with-llms/ ,,,,,,,Unspecified unreleased,"""Both models were trained on a variety of publicly available datasets, including web data and open-source datasets. Key components include reasoning data and scientific literature. <..> To further enhance the capabilities of o1-preview and o1-mini, we formed partnerships to access high-value non-public datasets. These proprietary data sources include paywalled content, specialized archives, and other domain-specific datasets that provide deeper insights into industry-specific knowledge and use cases.""",,,,,,,,,"We've developed a new series of AI models designed to spend more time thinking before they respond. They can reason through complex tasks and solve harder problems than previous models in science, coding, and math.

Today, we are releasing the first of this series in ChatGPT and our API. This is a preview and we expect regular updates and improvements. Alongside this release, we’re also including evaluations for the next update, currently in development.",,API access,,Unknown,2025-03-06 21:44:25+00:00,United States of America,,,,,,,,,
4D Diffusion for Dynamic Protein Structure Prediction with Reference Guided Motion Alignment,Biology,"Fudan University,Shanghai Academy of Artificial Intelligence for Science,Nanjing University","Academia,Academia","Kaihui Cheng, Ce Liu, Qingkun Su, Jun Wang, Liwei Zhang, Yining Tang, Yao Yao, Siyu Zhu, Yuan Qi",2024-09-12,"4D Diffusion for Dynamic Protein Structure Prediction with Reference Guided Motion Alignment
",https://arxiv.org/abs/2408.12419,,,,,,1.300000000000011e+19,,,"1. Hardware: NVIDIA A100 GPU (3.12 x 10^14 FP16 FLOP/s)

2. Training duration (estimated):
   - 764 proteins, batch size 4, 550 epochs
   - 191 batches/epoch × 550 epochs × 1 sec/step ≈ 29.2 hours

3. Utilization: 40%

4. Final calculation:
   3.12 × 10^14 FLOP/s × 0.4 × (105,050 seconds) = 1.31 × 10^19 FLOPs",,,4900001.000000005,"Dataset 1: 758 proteins × 200 residues/protein = 151,600 residues
Dataset 2: 6 proteins × 256 residues/protein = 1,536 residues
Total residues: 151,600 + 1,536 = 153,136
Final datapoints: 153,136 residues × 32 time steps = 4,899,552",,,,NVIDIA A100,1.0,,"Protein structure prediction is pivotal for understanding the structure-function relationship of proteins, advancing biological research, and facilitating pharmaceutical development and experimental design. While deep learning methods and the expanded availability of experimental 3D protein structures have accelerated structure prediction, the dynamic nature of protein structures has received limited attention. This study introduces an innovative 4D diffusion model incorporating molecular dynamics (MD) simulation data to learn dynamic protein structures. Our approach is distinguished by the following components: (1) a unified diffusion model capable of generating dynamic protein structures, including both the backbone and side chains, utilizing atomic grouping and side-chain dihedral angle predictions; (2) a reference network that enhances structural consistency by integrating the latent embeddings of the initial 3D protein structures; and (3) a motion alignment module aimed at improving temporal structural coherence across multiple time steps. To our knowledge, this is the first diffusion-based model aimed at predicting protein trajectories across multiple time steps simultaneously. Validation on benchmark datasets demonstrates that our model exhibits high accuracy in predicting dynamic 3D structures of proteins containing up to 256 amino acids over 32 time steps, effectively capturing both local flexibility in stable states and significant conformational changes.",,,,Unverified,2025-02-13 20:28:52+00:00,"China,China,China",,,,,,,,,
Demostart (in progress),Robotics,Google DeepMind,Industry,"Maria Bauza, Jose Enrique Chen, Valentin Dalibard, Nimrod Gileadi, Roland Hafner, Murilo F. Martins, Joss Moore, Rugile Pevceviciute, Antoine Laurens, Dushyant Rao, Martina Zambelli, Martin Riedmiller, Jon Scholz, Konstantinos Bousmalis, Francesco Nori, Nicolas Heess",2024-09-12,DemoStart: Demonstration-led auto-curriculum applied to sim-to-real with multi-fingered robots,https://arxiv.org/abs/2409.06613,,,,,,,,,,,,,"""We trained our agents with a batch size of 256. Agents were trained until convergence which typically took under 10M learner updates but took 32M learner updates on the Screwdriver in cup task.""",,,,,,,"We present DemoStart, a novel auto-curriculum reinforcement learning method capable of learning complex manipulation behaviors on an arm equipped with a three-fingered robotic hand, from only a sparse reward and a handful of demonstrations in simulation. Learning from simulation drastically reduces the development cycle of behavior generation, and domain randomization techniques are leveraged to achieve successful zero-shot sim-to-real transfer. Transferred policies are learned directly from raw pixels from multiple cameras and robot proprioception. Our approach outperforms policies learned from demonstrations on the real robot and requires 100 times fewer demonstrations, collected in simulation. More details and videos in this https URL.",,Unreleased,,Unknown,2024-11-08 19:21:28+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
ALOHA Unleashed,Robotics,Google DeepMind,Industry,"Tony Z. Zhao, Jonathan Tompson, Danny Driess, Pete Florence, Kamyar Ghasemipour, Chelsea Finn, Ayzaan Wahid
",2024-09-12,ALOHA Unleashed: A Simple Recipe for Robot Dexterity,https://aloha-unleashed.github.io/assets/aloha_unleashed.pdf,,,,217000000.0,"""the Base model consists of 217M learnable parameters""",3.6084096e+21,,,265*3600*64*197000000000000*0.3 = 3.6084096e+21,,,,"""we collect over 26k episodes for 5 real tasks, on 10 different robots in 2 different buildings over the course of 8 months""

""images resized to 256x256""",,265.0,"""We train our models with JAX [51] using 64 TPUv5e chips with a data parallel mesh. We use a batch size of 256 and train for 2M steps (about 265 hours of training). """,Google TPU v5e,64.0,,"Recent work has shown promising results for learning end-to-end robot policies using imitation learning. In this work we address the question of how far can we push imitation learning for challenging dexterous anipulation tasks. We show that a simple recipe of large scale data collection on the ALOHA 2 platform, combined with expressive models such as Diffusion Policies, can be effective in learning challenging bimanual manipulation tasks involving deformable objects and complex contact rich dynamics. We demonstrate our recipe on 5 challenging real-world and 3 simulated tasks and demonstrate improved performance over state-of-the-art baselines. The project website and videos can be found at alohaunleashed.github.io.",,Unreleased,,Confident,2024-11-08 19:20:18+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
DataGemma,Language,Google,Industry,"Prashanth Radhakrishnan, Jennifer Chen, Bo Xu, Prem Ramaswami, Hannah Pho, Adriana Olmos, James Manyika, R. V. Guha",2024-09-12,Knowing When to Ask -- Bridging Large Language Models and Data,https://arxiv.org/abs/2409.13741,,,,27200000000.0,27.2B,,,,,Data Commons,,,,,,,Google TPU v5e,,,"Large Language Models (LLMs) are prone to generating factually incorrect information when responding to queries that involve numerical and statistical data or other timely facts. In this paper, we present an approach for enhancing the accuracy of LLMs by integrating them with Data Commons, a vast, open-source repository of public statistics from trusted organizations like the United Nations (UN), Center for Disease Control and Prevention (CDC) and global census bureaus. We explore two primary methods: Retrieval Interleaved Generation (RIG), where the LLM is trained to produce natural language queries to retrieve data from Data Commons, and Retrieval Augmented Generation (RAG), where relevant data tables are fetched from Data Commons and used to augment the LLM's prompt. We evaluate these methods on a diverse set of queries, demonstrating their effectiveness in improving the factual accuracy of LLM outputs. Our work represents an early step towards building more trustworthy and reliable LLMs that are grounded in verifiable statistical data and capable of complex factual reasoning.",,Open weights (restricted use),,Confident,2024-12-02 19:20:57+00:00,United States of America,Gemma 2 27B,,,,,,,,
Automated design of multi-target ligands by generative deep learning,Biology,"Goethe University Frankfurt,Ludwig-Maximilians-Universität München,Fraunhofer Institute for Translational Medicine and Pharmacology","Academia,Academia","Laura Isigkeit, Tim Hörmann, Espen Schallmayer, Katharina Scholz, Felix F. Lillich, Johanna H. M. Ehrler, Benedikt Hufnagel, Jasmin Büchner, Julian A. Marschner, Jörg Pabel, Ewgenij Proschak, Daniel Merk",2024-09-11,Automated design of multi-target ligands by generative deep learning,https://www.nature.com/articles/s41467-024-52060-8,,,,5820515.0,"""The model was based on a recurrent neural network with long short-term memory (LSTM) cells and consisted of four layers with a total of 5,820,515
parameters: layer 1, BatchNormalization; layer 2, LSTM with 1024 units;
layer 3, LSTM with 256 units; layer 4, BatchNormalization.""",,,,,,,510000000.9999995,"365,000 molecules × 10 augmentations = 3,650,000 total molecules
3,650,000 molecules × 140 tokens/molecule = 511,000,000 (5.11 × 10⁸) tokens
Final estimate: 5.1e8 tokens",,,,,,,"Generative deep learning models enable data-driven de novo design of molecules with tailored features. Chemical language models (CLM) trained on string representations of molecules such as SMILES have been successfully employed to design new chemical entities with experimentally confirmed activity on intended targets. Here, we probe the application of CLM to generate multi-target ligands for designed polypharmacology. We capitalize on the ability of CLM to learn from small fine-tuning sets of molecules and successfully bias the model towards designing drug-like molecules with similarity to known ligands of target pairs of interest. Designs obtained from CLM after pooled fine-tuning are predicted active on both proteins of interest and comprise pharmacophore elements of ligands for both targets in one molecule. Synthesis and testing of twelve computationally favored CLM designs for six target pairs reveals modulation of at least one intended protein by all selected designs with up to double-digit nanomolar potency and confirms seven compounds as designed dual ligands. These results corroborate CLM for multi-target de novo design as source of innovation in drug discovery.",,,,Unverified,2025-01-30 05:04:12+00:00,"Germany,Germany,Germany",,,,,,,,,
GenMS,Materials science,Google DeepMind,Industry,"Sherry Yang, Simon Batzner, Ruiqi Gao, Muratahan Aykol, Alexander L. Gaunt, Brendan McMorrow, Danilo J. Rezende, Dale Schuurmans, Igor Mordatch, Ekin D. Cubuk",2024-09-10,Generative Hierarchical Materials Search,https://arxiv.org/abs/2409.06762,,,,,,,,,,"ICSD (inorganic crystal structure database),Materials Project","""we observe that there is a wealth of language-to-formula data available online, including Wikipedia articles, research papers, and textbooks. This data can be complemented by formula-to-structure information from specialized
materials databases such as the Materials Project (Jain et al., 2013), ICSD (Hellenbrandt, 2004), OQMD (Kirklin et al., 2015), etc.""

""GenMS consists of (1) a large language model (LLM) pretrained on high-level materials science knowledge from the internet, (2) a diffusion model trained on specialized crystal structure databases, and (3) a graph neural network (GNN) for property prediction. ""

the ICSD contains more than 250,000 crystal structure entries
Materials Project contains over 140,000 entries for crystal structures
",,"for training dissusion model (there were also language and GNN modeules trained):

Batch size 512
Training steps 200000",,,,Google TPU v4,64.0,,"Generative models trained at scale can now produce text, video, and more recently, scientific data such as crystal structures. In applications of generative approaches to materials science, and in particular to crystal structures, the guidance from the domain expert in the form of high-level instructions can be essential for an automated system to output candidate crystals that are viable for downstream research. In this work, we formulate end-to-end language-to-structure generation as a multi-objective optimization problem, and propose Generative Hierarchical Materials Search (GenMS) for controllable generation of crystal structures. GenMS consists of (1) a language model that takes high-level natural language as input and generates intermediate textual information about a crystal (e.g., chemical formulae), and (2) a diffusion model that takes intermediate information as input and generates low-level continuous value crystal structures. GenMS additionally uses a graph neural network to predict properties (e.g., formation energy) from the generated crystal structures. During inference, GenMS leverages all three components to conduct a forward tree search over the space of possible structures. Experiments show that GenMS outperforms other alternatives of directly using language models to generate structures both in satisfying user request and in generating low-energy structures. We confirm that GenMS is able to generate common crystal structures such as double perovskites, or spinels, solely from natural language input, and hence can form the foundation for more complex structure generation in near future.",,Unreleased,,Unknown,2024-10-14 21:33:49+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
KinoML,Biology,"Charité-Universitätsmedizin Berlin,Saarland University,Memorial Sloan Kettering Cancer Center","Academia,Academia","Raquel López-Ríos de Castro, Jaime Rodríguez-Guerra, David Schaller, Talia B Kimber, Corey Taylor, Jessica B White, Michael Backenköhler, Alexander Payne, Ben Kaminow, Iván Pulido, Sukrit Singh, Paula Linh Kramer, Guillermo Pérez-Hernández, Andrea Volkamer, John D Chodera",2024-09-10,"Lessons learned during the journey of data: from experiment to model for predicting kinase affinity, selectivity, polypharmacology, and resistance",https://pmc.ncbi.nlm.nih.gov/articles/PMC11419124/,,,,,,,,,,,,617000.9999999998,"Total Datapoints = KLIFS + KinCo + ChEMBL + PKIS2
= 6,667 + 137,778 + (159,823 + 15,578 + 11,412) + 261,870
= 6,667 + 137,778 + 186,813 + 261,870
= 592,128 ≈ 6.17 × 10⁵",,,,,,,"Recent advances in machine learning (ML) are reshaping drug discovery. Structure-based ML methods use physically-inspired models to predict binding affinities from protein:ligand complexes. These methods promise to enable the integration of data for many related targets, which addresses issues related to data scarcity for single targets and could enable generalizable predictions for a broad range of targets, including mutants. In this work, we report our experiences in building KinoML, a novel framework for ML in target-based small molecule drug discovery with an emphasis on structure-enabled methods. KinoML focuses currently on kinases as the relative structural conservation of this protein superfamily, particularly in the kinase domain, means it is possible to leverage data from the entire superfamily to make structure-informed predictions about binding affinities, selectivities, and drug resistance. Some key lessons learned in building KinoML include: the importance of reproducible data collection and deposition, the harmonization of molecular data and featurization, and the choice of the right data format to ensure reusability and reproducibility of ML models. As a result, KinoML allows users to easily achieve three tasks: accessing and curating molecular data; featurizing this data with representations suitable for ML applications; and running reproducible ML experiments that require access to ligand, protein, and assay information to predict ligand affinity. Despite KinoML focusing on kinases, this framework can be applied to other proteins. The lessons reported here can help guide the development of platforms for structure-enabled ML in other areas of drug discovery.

",,,,Unverified,2025-01-30 05:05:09+00:00,"Germany,Germany,United States of America",,,,,,,,,
CPDiffusion,Biology,"Shanghai Jiao Tong University,University of New South Wales,University of Cambridge,Shanghai AI Lab","Academia,Academia,Academia,Academia","Bingxin Zhou, Lirong Zheng, Banghao Wu, Kai Yi, Bozitao Zhong, Yang Tan, Qian Liu, Pietro Liò, Liang Hong",2024-09-10,A conditional protein diffusion model generates artificial programmable endonuclease sequences with enhanced activity ,https://www.nature.com/articles/s41421-024-00728-2,1.0,,,4000000.0,"CPDiffusion trains a denoising diffusion model with 4 million
learnable parameters from natural protein structures. ",,,,,,,5600000.999999996,"CATH: 20,000 × 250 = 5,000,000
pAgo: 694 × 800 = 555,200
Total: 5,000,000 + 555,200 = 5,555,200 ≈ 5.6 × 10^6 datapoints",,,,,,,"Deep learning-based methods for generating functional proteins address the growing need for novel biocatalysts, allowing for precise tailoring of functionalities to meet specific requirements. This advancement leads to the development of highly efficient and specialized proteins with diverse applications across scientific, technological, and biomedical fields. This study establishes a pipeline for protein sequence generation with a conditional protein diffusion model, namely CPDiffusion, to create diverse sequences of proteins with enhanced functions. CPDiffusion accommodates protein-specific conditions, such as secondary structures and highly conserved amino acids. Without relying on extensive training data, CPDiffusion effectively captures highly conserved residues and sequence features for specific protein families. We applied CPDiffusion to generate artificial sequences of Argonaute (Ago) proteins based on the backbone structures of wild-type (WT) Kurthia massiliensis Ago (KmAgo) and Pyrococcus furiosus Ago (PfAgo), which are complex multi-domain programmable endonucleases. The generated sequences deviate by up to nearly 400 amino acids from their WT templates. Experimental tests demonstrated that the majority of the generated proteins for both KmAgo and PfAgo show unambiguous activity in DNA cleavage, with many of them exhibiting superior activity as compared to the WT. These findings underscore CPDiffusion’s remarkable success rate in generating novel sequences for proteins with complex structures and functions in a single step, leading to enhanced activity. This approach facilitates the design of enzymes with multi-domain molecular structures and intricate functions through in silico generation and screening, all accomplished without the need for supervision from labeled data.",,,,Unverified,2025-01-30 05:04:44+00:00,"China,Australia,United Kingdom of Great Britain and Northern Ireland,China",,,,,,,,,
MolPhenix,Biology,"Valence Labs,University of British Columbia (UBC),Vector Institute,University of Toronto,University of Montreal / Université de Montréal,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms)","Industry,Academia,Academia,Academia,Academia,Academia","Philip Fradkin, Puria Azadi, Karush Suri, Frederik Wenkel, Ali Bashashati, Maciej Sypetkowski, Dominique Beaini",2024-09-10,How Molecules Impact Cells: Unlocking Contrastive PhenoMolecular Retrieval,https://arxiv.org/abs/2409.08302,,,,38700000.0,"Taken from table 7, ""model size"" row; ""medium (38.7M)""",1.1e+18,,,"""We utilized an NVIDIA A100 GPU to train Molphenix using Phenom1 and MolGPS embeddings, which takes approximately ∼4.75 hours each."" Assume FP16 precision, 40% utilization. ",,,2150001.0,"2,150,000 datapoints

Based on:
- 1,316,283 molecule-concentration pairs
- >2,150,000 phenomic experiments 
Final count = 2,150,000 unique datapoints
(2.15e6)",100.0,9.5,"""We utilized an NVIDIA A100 GPU to train Molphenix using Phenom1 and MolGPS embeddings, which takes approximately ∼4.75 hours each.""",NVIDIA A100,1.0,,"Predicting molecular impact on cellular function is a core challenge in therapeutic design. Phenomic experiments, designed to capture cellular morphology, utilize microscopy based techniques and demonstrate a high throughput solution for uncovering molecular impact on the cell. In this work, we learn a joint latent space between molecular structures and microscopy phenomic experiments, aligning paired samples with contrastive learning. Specifically, we study the problem ofContrastive PhenoMolecular Retrieval, which consists of zero-shot molecular structure identification conditioned on phenomic experiments. We assess challenges in multi-modal learning of phenomics and molecular modalities such as experimental batch effect, inactive molecule perturbations, and encoding perturbation concentration. We demonstrate improved multi-modal learner retrieval through (1) a uni-modal pre-trained phenomics model, (2) a novel inter sample similarity aware loss, and (3) models conditioned on a representation of molecular concentration. Following this recipe, we propose MolPhenix, a molecular phenomics model. MolPhenix leverages a pre-trained phenomics model to demonstrate significant performance gains across perturbation concentrations, molecular scaffolds, and activity thresholds. In particular, we demonstrate an 8.1x improvement in zero shot molecular retrieval of active molecules over the previous state-of-the-art, reaching 77.33% in top-1% accuracy. These results open the door for machine learning to be applied in virtual phenomics screening, which can significantly benefit drug discovery applications.",,,,Unverified,2025-02-14 19:10:01+00:00,"Canada,Canada,Canada,Canada,Canada,Canada",,,,,,,,,
DiffForce,Biology,"University of Cambridge,Shanghai Jiao Tong University,University of New South Wales","Academia,Academia,Academia","Paulina Kulytė, Francisco Vargas, Simon Valentin Mathis, Yu Guang Wang, José Miguel Hernández-Lobato, Pietro Liò",2024-09-09,Improving Antibody Design with Force-Guided Sampling in Diffusion Models,https://arxiv.org/abs/2406.05832,1.0,,,,,,,,,,,,,,,,,,,"Antibodies, crucial for immune defense, primarily rely on complementarity-determining regions (CDRs) to bind and neutralize antigens, such as viruses. The design of these CDRs determines the antibody's affinity and specificity towards its target. Generative models, particularly denoising diffusion probabilistic models (DDPMs), have shown potential to advance the structure-based design of CDR regions. However, only a limited dataset of bound antibody-antigen structures is available, and generalization to out-of-distribution interfaces remains a challenge. Physics based force-fields, which approximate atomic interactions, offer a coarse but universal source of information to better mold designs to target interfaces. Integrating this foundational information into diffusion models is, therefore, highly desirable. Here, we propose a novel approach to enhance the sampling process of diffusion models by integrating force field energy-based feedback. Our model, DiffForce, employs forces to guide the diffusion sampling process, effectively blending the two distributions. Through extensive experiments, we demonstrate that our method guides the model to sample CDRs with lower energy, enhancing both the structure and sequence of the generated antibodies.",,,,Unverified,2024-11-23 21:22:33+00:00,"United Kingdom of Great Britain and Northern Ireland,China,Australia",,,,,,,,,
ProteinMPNN-DDG,Biology,Peptone,Industry,"Oliver Dutton, Sandro Bottaro, Michele Invernizzi, Istvan Redl, Albert Chung, Falk Hoffmann, Louie Henderson, Stefano Ruschetta, Fabio Airoldi, Benjamin M J Owens, Patrik Foerch, Carlo Fisicaro, Kamil Tamiola",2024-09-09,Improving Inverse Folding models at Protein Stability Prediction without additional Training or Data,https://www.biorxiv.org/content/10.1101/2024.06.15.599145v4.abstract,0.0,,,,,,,,,,,5600000.999999996,"Total Residues = 5,615,050 = 5.6e6",,,,,,,Deep learning protein sequence models have shown outstanding performance at de novo protein design and variant effect prediction. We substantially improve performance without further training or use of additional experimental data by introducing a second term derived from the models themselves which align outputs for the task of stability prediction. On a task to predict variants which increase protein stability the absolute success probabilities of ProteinMPNN and ESMif are improved by 11% and 5% respectively. We term these models ProteinMPNN-ddG and ESMif-ddG.,,,,Unverified,2025-01-30 05:04:17+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
ESMIF-DDG,Biology,Peptone,Industry,"Oliver Dutton, Sandro Bottaro, Michele Invernizzi, Istvan Redl, Albert Chung, Falk Hoffmann, Louie Henderson, Stefano Ruschetta, Fabio Airoldi, Benjamin M J Owens, Patrik Foerch, Carlo Fisicaro, Kamil Tamiola",2024-09-09,Improving Inverse Folding models at Protein Stability Prediction without additional Training or Data,https://www.biorxiv.org/content/10.1101/2024.06.15.599145v4.abstract,0.0,,,,,,,,,,,5600000.999999996,"Total Residues = 5,615,050 = 5.6e6",,,,,,,Deep learning protein sequence models have shown outstanding performance at de novo protein design and variant effect prediction. We substantially improve performance without further training or use of additional experimental data by introducing a second term derived from the models themselves which align outputs for the task of stability prediction. On a task to predict variants which increase protein stability the absolute success probabilities of ProteinMPNN and ESMif are improved by 11% and 5% respectively. We term these models ProteinMPNN-ddG and ESMif-ddG.,,,,Unverified,2025-01-30 05:04:17+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
PDFII,Biology,Sichuan University,Academia,"Wanyi Yang, Qingsong Du, Xunyu Zhou, Chuanfang Wu, Jinku Bao",2024-09-09,PDFll: Predictors of Disorder and Function of Proteins from the Language of Life,https://www.liebertpub.com/doi/abs/10.1089/cmb.2024.0506,0.0,,,,,,,,,,,,,,,,,,,"The identification of intrinsically disordered proteins and their functional roles is largely dependent on the performance of computational predictors, necessitating a high standard of accuracy in these tools. In this context, we introduce a novel series of computational predictors, termed PDFll (Predictors of Disorder and Function of proteins from the Language of Life), which are designed to offer precise predictions of protein disorder and associated functional roles based on protein sequences. PDFll is developed through a two-step process. Initially, it leverages large-scale protein language models (pLMs), trained on an extensive dataset comprising billions of protein sequences. Subsequently, the embeddings derived from pLMs are integrated into streamlined, yet sophisticated, deep-learning models to generate predictions. These predictions notably surpass the performance of existing state-of-the-art predictors, particularly those that forecast disorder and function without utilizing evolutionary information.",,,,Unverified,2024-11-23 21:22:33+00:00,China,,,,,,,,,
EpiScan,Biology,"Sun Yat-sen University,Guangzhou National Laboratory","Academia,Government","Chuan Wang, Jiangyuan Wang, Wenjun Song, Guanzheng Luo, Taijiao Jiang",2024-09-09,EpiScan: accurate high-throughput mapping of antibody-specific epitopes using sequence information ,https://www.nature.com/articles/s41540-024-00432-7,,,,288915.0,Loaded model from https://github.com/ gzBiomedical/EpiScan and counted parameters.,,,,,,,,,,,,NVIDIA GeForce RTX 2080 Ti,1.0,,"The identification of antibody-specific epitopes on virus proteins is crucial for vaccine development and drug design. Nonetheless, traditional wet-lab approaches for the identification of epitopes are both costly and labor-intensive, underscoring the need for the development of efficient and costeffective computational tools. Here, EpiScan, an attention-based deep learning framework for predicting antibody-specific epitopes, is presented. EpiScan adopts a multi-input and single-output strategy by designing independent blocks for different parts of antibodies, including variable heavy chain (VH), variable light chain (VL), complementary determining regions (CDRs), and framework regions (FRs). The block predictions are weighted and integrated for the prediction of potential epitopes. Using multiple experimental data samples, we show that EpiScan, which only uses antibody sequence information, can accurately map epitopes on specific antigen structures. The antibodyspecific epitopes on the receptor binding domain (RBD) of SARS coronavirus 2 (SARS-CoV-2) were located by EpiScan, and the potentially valuable vaccine epitope was identified. EpiScan can expedite the epitope mapping process for high-throughput antibody sequencing data, supporting vaccine design and drug development. Availability: For the convenience of related wet-experimental researchers, the source code and web server of EpiScan are publicly available at https://github.com/ gzBiomedical/EpiScan.",,,,Unverified,2025-01-03 14:12:03+00:00,"China,China",,,,,,,,,
VespaG,Biology,"Technical University of Munich,Sorbonne University,Institute for Advanced Study,Université Paris Cité,Institut Universitaire de France (IUF)","Academia,Academia,Academia,Academia,Research collective","Céline Marquet, Julius Schlensok, Marina Abakarova, Burkhard Rost, Elodie Laine",2024-09-09,Expert-guided protein Language Models enable accurate and blazingly fast fitness prediction,https://www.biorxiv.org/content/10.1101/2024.04.24.590982v2.abstract,,,,,,,,,,,,39000001.0,"Total datapoints = 39,000,000

39,000,000 = 3.9 x 10^7

Final data estimate: 3.9e7",,,,,,,"Exhaustive experimental annotation of the effect of all known protein variants remains daunting and expensive, stressing the need for scalable effect predictions. We introduce VespaG, a blazingly fast missense amino acid variant effect predictor, leveraging protein Language Model (pLM) embeddings as input to a minimal deep learning model. To overcome the sparsity of experimental training data, we created a dataset of 39 million single amino acid variants from the human proteome applying the multiple sequence alignment-based effect predictor GEMME as a pseudo standard-of-truth. This setup increases interpretability compared to the baseline pLM and is easily retrainable with novel or updated pLMs. Assessed against the ProteinGym benchmark (217 multiplex assays of variant effect - MAVE - with 2.5 million variants), VespaG achieved a mean Spearman correlation of 0.48±0.02, matching top-performing methods evaluated on the same data. VespaG has the advantage of being orders of magnitude faster, predicting all mutational landscapes of all proteins in proteomes such as Homo sapiens or Drosophila melanogaster in under 30 minutes on a consumer laptop (12-core CPU, 16 GB RAM).",,,,Unverified,2025-01-30 05:04:50+00:00,"Germany,France,United States of America,France,France",,,,,,,,,
MMAPLE,Biology,"City University of New York,Cornell University","Academia,Academia","You Wu, Li Xie, Yang Liu, Lei Xie",2024-09-09,Semi-supervised meta-learning elucidates understudied molecular interactions,https://www.nature.com/articles/s42003-024-06797-z,,,,,,,,,,,,,,,,,,,,"Many biological problems are understudied due to experimental limitations and human biases. Although deep learning is promising in accelerating scientific discovery, its power compromises when applied to problems with scarcely labeled data and data distribution shifts. We develop a deep learning framework—Meta Model Agnostic Pseudo Label Learning (MMAPLE)—to address these challenges by effectively exploring out-of-distribution (OOD) unlabeled data when conventional transfer learning fails. The uniqueness of MMAPLE is to integrate the concept of meta-learning, transfer learning and semi-supervised learning into a unified framework. The power of MMAPLE is demonstrated in three applications in an OOD setting where chemicals or proteins in unseen data are dramatically different from those in training data: predicting drug-target interactions, hidden human metabolite-enzyme interactions, and understudied interspecies microbiome metabolite-human receptor interactions. MMAPLE achieves 11% to 242% improvement in the prediction-recall on multiple OOD benchmarks over various base models. Using MMAPLE, we reveal novel interspecies metabolite-protein interactions that are validated by activity assays and fill in missing links in microbiome-human interactions. MMAPLE is a general framework to explore previously unrecognized biological domains beyond the reach of present experimental and computational techniques.",,,,Unverified,2024-11-23 21:22:33+00:00,"United States of America,United States of America",,,,,,,,,
AbGPT,Biology,Carnegie Mellon University (CMU),Academia,"Desmond Kuan, Amir Barati Farimani",2024-09-09,AbGPT: De Novo Antibody Design via Generative Language Modeling,https://arxiv.org/abs/2409.06090,,,,,,1e+19,,,"1. Hardware setup: 1x NVIDIA RTX A6000 GPU (3.87 × 10¹³ FLOP/s)

2. Training duration: Estimated 20.8 days (calculated from total FLOPs divided by effective FLOP/s)

3. Utilization rate: 40%

4. Final calculation:
   * Steps: (57M/1024) × 5 epochs = 278,515 steps
   * 1 × 10¹⁴ FLOPs/step × 278,515 steps = 2.785 × 10¹⁹ total FLOPs",,,3200000001.000004,"Sequences: 50M + 57M = 107M total sequences
Per sequence: 120 amino acids average
Total amino acids: 107M * 120 = 1.284 × 10¹⁰
Tokens (4 amino acids each): 1.284 × 10¹⁰ ÷ 4 = 3.2 × 10⁹
Final estimate: 3.2 × 10⁹ datapoints",,,,,,,"The adaptive immune response, largely mediated by B-cell receptors (BCRs), plays a crucial role for effective pathogen neutralization due to its diversity and antigen specificity. Designing BCRs de novo, or from scratch, has been challenging because of their complex structure and diverse binding requirements. Protein language models (PLMs) have shown remarkable performance in contextualizing and performing various downstream tasks without relying on structural information. However, these models often lack a comprehensive understanding of the entire protein space, which limits their application in antibody design. In this study, we introduce Antibody Generative Pretrained Transformer (AbGPT), a model fine-tuned from a foundational PLM to enable a more informed design of BCR sequences. Using a custom generation and filtering pipeline, AbGPT successfully generated a high-quality library of 15,000 BCR sequences, demonstrating a strong understanding of the intrinsic variability and conserved regions within the antibody repertoire. https://github.com/deskk/AbGPT",,,,Unverified,2025-01-30 05:05:13+00:00,United States of America,,,,,,,,,
BetterBodies,Biology,"University of Freiburg,Collaborative Research Institute Intelligent Oncology ,BrainLinks-BrainTools","Academia,Research collective,Academia","Yannick Vogt, Mehdi Naouar, Maria Kalweit, Christoph Cornelius Miething, Justus Duyster, Joschka Boedecker, Gabriel Kalweit",2024-09-09,BETTERBODIES: Reinforcement Learning Guided Diffusion for Antibody Sequence Design,https://arxiv.org/abs/2409.16298,,,,,,,,,,,,81621.00000000007,"Total sequences: 2,500 + 2,753 + 2,167 = 7,420
Data points = 7,420 sequences × 11 residues/sequence = 81,620 data points

Final estimate: 81,620",,,,,,,"Antibodies offer great potential for the treatment of various diseases. However, the discovery of therapeutic antibodies through traditional wet lab methods is expensive and time-consuming. The use of generative models in designing antibodies therefore holds great promise, as it can reduce the time and resources required. Recently, the class of diffusion models has gained considerable traction for their ability to synthesize diverse and high-quality samples. In their basic form, however, they lack mechanisms to optimize for specific properties, such as binding affinity to an antigen. In contrast, the class of offline Reinforcement Learning (RL) methods has demonstrated strong performance in navigating large search spaces, including scenarios where frequent real-world interaction, such as interaction with a wet lab, is impractical. Our novel method, BetterBodies, which combines Variational Autoencoders (VAEs) with RL guided latent diffusion, is able to generate novel sets of antibody CDRH3 sequences from different data distributions. Using the Absolut! simulator, we demonstrate the improved affinity of our novel sequences to the SARS-CoV spike receptor-binding domain. Furthermore, we reflect biophysical properties in the VAE latent space using a contrastive loss and add a novel Q-function based filtering to enhance the affinity of generated sequences. In conclusion, methods such as ours have the potential to have great implications for real-world biological sequence design, where the generation of novel high-affinity binders is a cost-intensive endeavor.",,,,Unverified,2025-01-30 05:04:45+00:00,"Germany,Germany,Germany",,,,,,,,,
RiboCode,Biology,"Sun Yat-sen University,Rhegen Biotechnology,Chinese Academy of Sciences","Academia,Industry,Academia","Yupeng Li, Fan Wang, Jiaqi Yang, Zirong Han, Linfeng Chen, Wenbing Jiang, Hao Zhou, Tong Li, Zehua Tang, Jianxiang Deng, Xin He, Gaofeng Zha, Jiekai Hu, Yong Hu, Linping Wu, Changyou Zhan, Caijun Sun, Yao He, Zhi Xie",2024-09-08,Deep Generative Optimization of mRNA Codon Sequences for Enhanced Protein Production and Therapeutic Efficacy,https://www.biorxiv.org/content/10.1101/2024.09.06.611590v1,,,,,,,,,,,,3200000.999999998,"320 datasets × 10,000 mRNAs/dataset = 3,200,000 data points
(3.2 × 10^6 data points)",,,,,,,"Messenger RNA (mRNA) therapeutics show immense promise, but their efficacy is limited by suboptimal protein expression. Here, we present RiboCode, a deep learning framework that generates mRNA codon sequences for enhanced protein production. RiboCode introduces several advances, including direct learning from large-scale ribosome profiling data, context-aware mRNA optimization and generative exploration of a large sequence space. In silico analysis demonstrate RiboCode’s robust predictive accuracy for unseen genes and cellular environments. In vitro experiments show substantial improvements in protein expression, with up to a 72-fold increase, significantly outperforming past methods. In addition, RiboCode achieves cell-type specific expression and demonstrates robust performance across different mRNA formats, including m1Ψ-modified and circular mRNAs, an important feature for mRNA therapeutics. In vivo mouse studies show that optimized influenza hemagglutinin mRNAs induce ten times stronger neutralizing antibody responses against influenza virus compared to the unoptimized sequence. In an optic nerve crush model, optimized nerve growth factor mRNAs achieve equivalent neuroprotection of retinal ganglion cells at one-fifth the dose of the unoptimized sequence. Collectively, RiboCode represents a paradigm shift from rule-based to data-driven, context-sensitive approach for mRNA therapeutic applications, enabling the development of more potent and dose-efficient treatments.",,,,Unverified,2025-01-30 05:05:05+00:00,"China,China,China",,,,,,,,,
DDGemb,Biology,University of Bologna,Academia,"Castrense Savojardo, Matteo Manfredi, Pier Luigi Martelli, Rita Casadio",2024-09-07,DDGemb: predicting protein stability change upon single- and multi-point variations with embeddings and deep learning,https://www.biorxiv.org/content/10.1101/2024.09.05.611455v1.abstract,,,,,,,,,,,,5099.000000000003,"2648 + 2450 = 5098 unique data points
5098 data points = 5.098e3",,,,,,,"The knowledge of protein stability upon residue variation is an important step for functional protein design and for understanding how protein variants can promote disease onset. Computational methods are important to complement experimental approaches and allow a fast screening of large datasets of variations. In this work we present DDGemb, a novel method combining protein language model embeddings and transformer architectures to predict protein 𝚫𝚫G upon both single- and multipoint variations. DDGemb has been trained on a high-quality dataset derived from literature and tested on available benchmark datasets of single- and multi-point variations. DDGemb performs at the state of the art in both single- and multi-point variations.",,,,Unverified,2025-01-30 05:04:09+00:00,Italy,,,,,,,,,
ESM-DBP,Biology,Hunan University,Academia,"Wenwu Zeng, Yutao Dou, Liangrui Pan, Liwen Xu, Shaoliang Peng ",2024-09-07,Improving prediction performance of general protein language model by domain-adaptive pretraining on DNA-binding protein,https://www.nature.com/articles/s41467-024-52293-7,0.0,,,650000000.0,"""so the ESM2 model with 650 million parameters is used to continue training here.""",,,,,UniProtKB,Subset of UniProtKB consisting of proteins which bind DNA.,170264.0,"""170,264 non-redundant DBP sequences (abbreviate as UniDBP40) are used as the pretraining data set.""",,72.0,"""The model is trained for approximately 51k steps and took about 3 days on four Tesla V100 GPUs with 16 G memory."" ",,4.0,,"DNA-protein interactions exert the fundamental structure of many pivotal biological processes, such as DNA replication, transcription, and gene regulation. However, accurate and efficient computational methods for identifying these interactions are still lacking. In this study, we propose a method ESM-DBP through refining the DNA-binding protein sequence repertory and domain-adaptive pretraining based the general protein language model. Our method considers the lacking exploration of general language model for DNA-binding protein domain-specific knowledge, so we screen out 170,264 DNA-binding protein sequences to construct the domain-adaptive language model. Experimental results on four downstream tasks show that ESM-DBP provides a better feature representation of DNA-binding protein compared to the original language model, resulting in improved prediction performance and outperforming the state-of-the-art methods. Moreover, ESM-DBP can still perform well even for those sequences with only a few homologous sequences. ChIP-seq on two predicted cases further support the validity of the proposed method.",,,,Unverified,2024-12-23 02:35:36+00:00,China,ESM2-650M,1.3e+19,"""The model is trained for approximately 51k steps and took about 3 days on four Tesla V100 GPUs with 16 G memory."" Assume FP16 precision and 40% utilization.",,,,100.0,"""The batch size is set to 100.""",
MPDF,Biology,"Chinese University of Hong Kong (CUHK),Lanzhou University,Zhejiang Lab,Zhejiang University","Academia,Academia,Academia","Chunbin Gu, Mutian He, Hanqun Cao, Guangyong Chen, Chang-yu Hsieh, Pheng Ann Heng",2024-09-07,Unlocking Potential Binders: Multimodal Pretraining DEL-Fusion for Denoising DNA-Encoded Libraries,https://arxiv.org/abs/2409.05916,2.0,,,,,1.400000000000012e+18,,,"1. Hardware: 1x NVIDIA GeForce RTX 3090, 1.60 x 10^14 FLOP/s (FP16)

2. Training duration: 6 hours (max of 1-6 hour range) = 21,600 seconds

3. Utilization: 40%

4. Calculation: 
1.60 x 10^14 FLOP/s × 1 GPU × 21,600s × 0.4 = 1.38 x 10^18 FLOPs",,,,,,,"""with training times ranging from 1 to 6 hours, depending on the complexity and size of the different building blocks.""",NVIDIA GeForce RTX 3090,1.0,,"In the realm of drug discovery, DNA-encoded library (DEL) screening technology has emerged as an efficient method for identifying high-affinity compounds. However, DEL screening faces a significant challenge: noise arising from nonspecific interactions within complex biological systems. Neural networks trained on DEL libraries have been employed to extract compound features, aiming to denoise the data and uncover potential binders to the desired therapeutic target. Nevertheless, the inherent structure of DEL, constrained by the limited diversity of building blocks, impacts the performance of compound encoders. Moreover, existing methods only capture compound features at a single level, further limiting the effectiveness of the denoising strategy. To mitigate these issues, we propose a Multimodal Pretraining DEL-Fusion model (MPDF) that enhances encoder capabilities through pretraining and integrates compound features across various scales. We develop pretraining tasks applying contrastive objectives between different compound representations and their text descriptions, enhancing the compound encoders' ability to acquire generic features. Furthermore, we propose a novel DEL-fusion framework that amalgamates compound information at the atomic, submolecular, and molecular levels, as captured by various compound encoders. The synergy of these innovations equips MPDF with enriched, multi-scale features, enabling comprehensive downstream denoising. Evaluated on three DEL datasets, MPDF demonstrates superior performance in data processing and analysis for validation tasks. Notably, MPDF offers novel insights into identifying high-affinity molecules, paving the way for improved DEL utility in drug discovery.",,,,Unverified,2025-02-14 19:10:40+00:00,"Hong Kong,China,China,China,China",,,,,,,,,
DeepSeek-V2.5,Language,DeepSeek,Industry,"DeepSeek-AI, Aixin Liu, Bei Feng, Bin Wang, Bingxuan Wang, Bo Liu, Chenggang Zhao, Chengqi Dengr, Chong Ruan, Damai Dai, Daya Guo, Dejian Yang, Deli Chen, Dongjie Ji, Erhang Li, Fangyun Lin, Fuli Luo, Guangbo Hao, Guanting Chen, Guowei Li, H. Zhang, Hanwei Xu, Hao Yang, Haowei Zhang, Honghui Ding, Huajian Xin, Huazuo Gao, Hui Li, Hui Qu, J.L. Cai, Jian Liang, Jianzhong Guo, Jiaqi Ni, Jiashi Li, Jin Chen, Jingyang Yuan, Junjie Qiu, Junxiao Song, Kai Dong, Kaige Gao, Kang Guan, Lean Wang, Lecong Zhang, Lei Xu, Leyi Xia, Liang Zhao, Liyue Zhang, Meng Li, Miaojun Wang, Mingchuan Zhang, Minghua Zhang, Minghui Tang, Mingming Li, Ning Tian, Panpan Huang, Peiyi Wang, Peng Zhang, Qihao Zhu, Qinyu Chen, Qiushi Du, R.J. Chen, R.L. Jin, Ruiqi Ge, Ruizhe Pan, Runxin Xu, Ruyi Chen, S.S. Li, Shanghao Lu, Shangyan Zhou, Shanhuang Chen, Shaoqing Wu, Shengfeng Ye, Shirong Ma, Shiyu Wang, Shuang Zhou, Shuiping Yu, Shunfeng Zhou, Size Zheng, T. Wang, Tian Pei, Tian Yuan, Tianyu Sun, W.L. Xiao, Wangding Zeng, Wei An, Wen Liu, Wenfeng Liang, Wenjun Gao, Wentao Zhang, X.Q. Li, Xiangyue Jin, Xianzu Wang, Xiao Bi, Xiaodong Liu, Xiaohan Wang, Xiaojin Shen, Xiaokang Chen, Xiaosha Chen, Xiaotao Nie, Xiaowen Sun",2024-09-06,DeepSeek-V2.5,https://huggingface.co/deepseek-ai/DeepSeek-V2.5,,,,236000000000.0,"21B active params, 236B total",1.7892e+24,,,"V2.5 is a merge of V2-coder and V2-chat
V2-coder is trained for 6T additional tokens from an intermediate checkpoint of V2, which had been trained for 4.2T tokens. Total: 10.2T
V2-chat is fine-tuned from V2, saw 8.2T tokens in pre-training
Unique steps: 8.2T + 6T = 14.2T
FLOPs: 6 * 21B * 14.2T = 1.7892e24","GitHub,Common Crawl",,,"The original V2 had a dataset of 8.1T unique tokens, and coder-V2 added an additional 1.391T unique tokens of code and math. But it appears no additional training was done to combine them into this model.",,,,,,Self-supervised learning,,,Open weights (restricted use),,Confident,2025-01-27 01:11:44+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,36864000.0,"Maximum batch size comes from training of V2-coder, which used long context training with 288 batches of 128k tokens = 36,864,000",
GearBind,Biology,"BioGeometry,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),University of Montreal / Université de Montréal,Fudan University,HEC Montreal","Industry,Academia,Academia,Academia,Academia","Huiyu Cai, Zuobai Zhang, Mingkai Wang, Bozitao Zhong, Quanxiao Li, Yuxuan Zhong, Yanling Wu, Tianlei Ying, Jian Tang",2024-09-06,Pretrainable geometric graph neural network for antibody affinity maturation,https://www.nature.com/articles/s41467-024-51563-8,4.0,,,,,,,,"""The model was trained using the Adam optimizer with a learning rate of 1e-4 and a batch size of 8. The training process is performed on 1 A100 GPU for 40 epochs. For pretraining, we use the same architecture with 4-layer GearBind model with a hidden dimension of 128. The pretraining was conducted using the Adam optimizer with a learning rate of 5e-4 and a batch size of 8, employing 4 A100 GPUs for 10 epochs.""",,,,,,,,,,,"Increasing the binding affinity of an antibody to its target antigen is a crucial task in antibody therapeutics development. This paper presents a pretrainable geometric graph neural network, GearBind, and explores its potential in in silico affinity maturation. Leveraging multi-relational graph construction, multi-level geometric message passing and contrastive pretraining on massscale, unlabeled protein structural data, GearBind outperforms previous stateof-the-art approaches on SKEMPI and an independent test set. A powerful ensemble model based on GearBind is then derived and used to successfully enhance the binding of two antibodies with distinct formats and target antigens. ELISA EC50 values of the designed antibody mutants are decreased by up to 17 fold, and KD values by up to 6.1 fold. These promising results underscore the utility of geometric deep learning and effective pretraining in macromolecule interaction modeling tasks.",,,,Unverified,2024-11-23 21:22:33+00:00,"China,Canada,Canada,China,Canada",,,,,,,,,
ProtSSN,Biology,"Shanghai Jiao Tong University,East China University of Science and Technology,Shanghai AI Lab","Academia,Academia,Academia","Yang Tan, Bingxin Zhou, Lirong Zheng, Guisheng Fan, Liang Hong",2024-09-06,Semantical and Geometrical Protein Encoding Toward Enhanced Bioactivity and Thermostability,https://www.biorxiv.org/content/10.1101/2023.12.01.569522v3.abstract,7.0,,,,,,,,,,,12000000.99999999,"30,948 proteins * 300 amino acids/protein = 9,284,400 tokens ≈ 1.2e7 tokens

30,948 * 300 = 9,284,400",,,,,,,"Protein engineering is a pivotal aspect of synthetic biology, involving the modification of amino acids within existing protein sequences to achieve novel or enhanced functionalities and physical properties. Accurate prediction of protein variant effects requires a thorough understanding of protein sequence, structure, and function. Deep learning methods have demonstrated remarkable performance in guiding protein modification for improved functionality. However, existing approaches predominantly rely on protein sequences, which face challenges in efficiently encoding the geometric aspects of amino acids’ local environment and often fall short in capturing crucial details related to protein folding stability, internal molecular interactions, and bio-functions. Furthermore, there lacks a fundamental evaluation for developed methods in predicting protein thermostability, although it is a key physical property that is frequently investigated in practice. To address these challenges, this paper introduces a novel pre-training framework that integrates sequential and geometric encoders for protein primary and tertiary structures. This framework guides mutation directions toward desired traits by simulating natural selection on wild-type proteins and evaluates variant effects based on their fitness to perform specific functions. We assess the proposed approach using three benchmarks comprising over 300 deep mutational scanning assays. The prediction results showcase exceptional performance across extensive experiments when compared to other zero-shot learning methods, all while maintaining a minimal cost in terms of trainable parameters. This study not only proposes an effective framework for more accurate and comprehensive predictions to facilitate efficient protein engineering, but also enhances the in silico assessment system for future deep learning models to better align with empirical requirements. The PyTorch implementation are available at https://github.com/tyang816/ProtSSN.",,,,Unverified,2025-01-30 05:04:34+00:00,"China,China,China",,,,,,,,,
SAAMBE-MEM,Biology,"Clemson University,Central China Normal University","Academia,Academia","Prawin Rimal, Shailesh Kumar Panday, Wang Xu, Yunhui Peng, Emil Alexov",2024-09-06,SAAMBE-MEM: A Sequence-Based Method for Predicting Binding Free Energy Change upon Mutation in Membrane Protein-Protein Complexes,https://academic.oup.com/bioinformatics/article/40/9/btae544/7750356,0.0,,,,,,,,,,,1041.0,"Dataset: MPAD_Clean
Unique datapoints = 1040 mutations = 1.04e3

Calculations:
1040 = 1.04 × 10³

Final result: 1.04e3 datapoints",,,,,,,"Motivation
Mutations in protein–protein interactions can affect the corresponding complexes, impacting function and potentially leading to disease. Given the abundance of membrane proteins, it is crucial to assess the impact of mutations on the binding affinity of these proteins. Although several methods exist to predict the binding free energy change due to mutations in protein–protein complexes, most require structural information of the protein complex and are primarily trained on the SKEMPI database, which is composed mainly of soluble proteins.

Results
A novel sequence-based method (SAAMBE-MEM) for predicting binding free energy changes (ΔΔG) in membrane protein–protein complexes due to mutations has been developed. This method utilized the MPAD database, which contains binding affinities for wild-type and mutant membrane protein complexes. A machine learning model was developed to predict ΔΔG by leveraging features such as amino acid indices and position-specific scoring matrices (PSSM). Through extensive dataset curation and feature extraction, SAAMBE-MEM was trained and validated using the XGBoost regression algorithm. The optimal feature set, including PSSM-related features, achieved a Pearson correlation coefficient of 0.64, outperforming existing methods trained on the SKEMPI database. Furthermore, it was demonstrated that SAAMBE-MEM performs much better when utilizing evolution-based features in contrast to physicochemical features.",,,,Unverified,2025-01-30 05:04:38+00:00,"United States of America,China",,,,,,,,,
xLAM-8x22B,Language,Salesforce,Industry,"Jianguo Zhang, Tian Lan, Ming Zhu, Zuxin Liu, Thai Hoang, Shirley Kokane, Weiran Yao, Juntao Tan, Akshara Prabhakar, Zhiwei Liu, Haolin Chen, Yihao Feng,Tulika Awalgaonkar, Rithesh Murthy, Eric Hu, Zeyuan Chen, Ran Xu, Juan Carlos Niebles, Shelby Heinecke, Huan Wang, Silvio Savarese, Caiming Xiong",2024-09-06,"Actions Speak Louder Than Words: Introducing xLAM, Salesforce’s family of Large Action Models",https://www.salesforce.com/blog/xlam-large-action-models/,,,,141000000000.0,,,,,,,,,,,,,,,Supervised,"We've introduced xLAM, our family of in-house Large Action Models, designed for function calling, reasoning, and planning. These models are designed to streamline and simplify the integration of AI into your workflows, reducing the complexity often associated with LLMs.",,Open weights (restricted use),,Unverified,2024-12-05 13:51:17+00:00,United States of America,Mixtral 8x22B,,,,,,,,
AlphaProteo,Biology,Google DeepMind,Industry,"Vinicius Zambaldi, David La, Alexander E. Chu, Harshnira Patani, Amy E. Danson, Tristan O. C. Kwan, Thomas Frerix, Rosalia G. Schneider, David Saxton, Ashok Thillaisundaram, Zachary Wu, Isabel Moraes, Oskar Lange, Eliseo Papa, Gabriella Stanton, Victor Martin, Sukhdeep Singh, Lai H. Wong, Russ Bates, Simon A. Kohl, Josh Abramson, Andrew W. Senior, Yilmaz Alguel, Mary Y. Wu,
Irene M. Aspalter, Katie Bentley, David L.V. Bauer, Peter Cherepanov, Demis Hassabis, Pushmeet Kohli, Rob Fergus, Jue Wang",2024-09-05,De novo design of high-affinity protein binders with AlphaProteo,https://storage.googleapis.com/deepmind-media/DeepMind.com/Blog/alphaproteo-generates-novel-proteins-for-biology-and-health-research/AlphaProteo2024.pdf,,Historical significance,Economic impacts from development of commercially and socially valuable protein designs and materials,,,,,,,PDB (Protein Data Bank),Trained on large amounts of protein data from the Protein Data Bank (PDB) and more than 100 million predicted structures from AlphaFold,,,,,,,,,"Computational design of protein-binding proteins is a fundamental capability with broad utility in biomedical research and biotechnology. Recent methods have made strides against some target proteins, but on-demand creation of high-affinity binders without multiple rounds of experimental testing remains
an unsolved challenge. This technical report introduces AlphaProteo, a family of machine learning models for protein design, and details its performance on the de novo binder design problem. With AlphaProteo, we achieve 3- to 300-fold better binding affinities and higher experimental success rates than the best existing methods on seven target proteins. Our results suggest that AlphaProteo can generate binders ""ready-to-use"" for many research applications using only one round of medium-throughput screening
and no further optimization.",,Unreleased,,Unknown,2025-02-18 10:14:20+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
µFormer,Biology,Microsoft Research AI for Science,Industry,"Haoran Sun, Liang He, Pan Deng, Guoqing Liu, Haiguang Liu, Chuan Cao, Fusong Ju, Lijun Wu, Tao Qin, Tie-Yan Liu",2024-09-05,Accelerating protein engineering with fitness landscape modeling and reinforcement learning,https://www.biorxiv.org/content/10.1101/2023.11.16.565910v3.abstract,0.0,,,,,,,,,,,9000000001.000002,"30,000,000 proteins × 300 amino acids/protein = 9,000,000,000 datapoints

Total datapoints: 9.0e9",,,,,,,"Protein engineering plays a pivotal role in designing novel proteins with desired functions, yet the rugged fitness landscape of proteins within their mutant space presents a major challenge, limiting the effective discovery of optimal sequences. To address this, we introduce µFormer, a deep learning framework that combines a pre-trained protein language model with custom-designed scoring modules to predict the mutational effects of proteins. µFormer achieves state-of-the-art performance in predicting high-order mutants, modeling epistatic interactions, and handling insertion. By integrating µFormer with a reinforcement learning framework, we enable efficient exploration of vast mutant spaces, encompassing trillions of mutation candidates, to design protein variants with enhanced activity. Remarkably, we successfully predicted mutants that exhibited a 2000-fold increase in bacterial growth rate due to enhanced enzymatic activity. These results highlight the effectiveness of our approach in identifying impactful mutations across diverse protein targets and fitness metrics, offering a powerful tool for optimizing proteins with significantly higher success rates.",,,,Unverified,2025-01-30 05:05:08+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,China,Netherlands,Germany",,,,,,,,,
EnOpt,Biology,University of Pittsburgh,Academia,"Roshni Bhatt, Ann Wang, Jacob D. Durrant",2024-09-05,Teaching old docks new tricks with machine learning enhanced ensemble docking,https://www.nature.com/articles/s41598-024-71699-3,0.0,,,,,,,,,,,,,,,,,,,"We here introduce Ensemble Optimizer (EnOpt), a machine-learning tool to improve the accuracy and interpretability of ensemble virtual screening (VS). Ensemble VS is an established method for predicting protein/small-molecule (ligand) binding. Unlike traditional VS, which focuses on a single protein conformation, ensemble VS better accounts for protein flexibility by predicting binding to multiple protein conformations. Each compound is thus associated with a spectrum of scores (one score per protein conformation) rather than a single score. To effectively rank and prioritize the molecules for further evaluation (including experimental testing), researchers must select which protein conformations to consider and how best to map each compound’s spectrum of scores to a single value, decisions that are system-specific. EnOpt uses machine learning to address these challenges. We perform benchmark VS to show that for many systems, EnOpt ranking distinguishes active compounds from inactive or decoy molecules more effectively than traditional ensemble VS methods. To encourage broad adoption, we release EnOpt free of charge under the terms of the MIT license.

",,,,Unverified,2024-11-23 21:22:33+00:00,United States of America,,,,,,,,,
Hunyuan Turbo,,Tencent,Industry,,2024-09-05,"腾讯版“GPT-4o”来了！混元Turbo首发并上线，效率翻倍价格砍半
",https://zhidx.com/p/442250.html,,SOTA improvement,"Best score on SuperCLUE总排行榜（2024年8月）- SuperCLUE general benchmak from Aug 2024 (https://www.superclueai.com/) in terms of ""science"" and ""liberal arts"" evaluation.",,,,,,,Unspecified unreleased,,,,,,,,,,,,,,Unknown,2025-02-25 13:10:57+00:00,China,,,,,,,,,
CHIEF,Biology,"Harvard Medical School,Massachusetts Institute of Technology (MIT),Sichuan University,Sun Yat-sen University,Shenzhen Maternity & Child Healthcare Hospital,Chongqing University Cancer Hospital,Harvard University,University of Pennsylvania,Cedars-Sinai Medical Center,Broad Institute,Dana-Farber Cancer Institute,Brigham and Women's Hospital,Tencent,Massachusettes General Hospital,Pennsylvania State University,Jinan University,Stanford University","Academia,Academia,Academia,Academia,Academia,Academia,Research collective,Industry,Academia,Academia,Academia","Xiyue Wang, Junhan Zhao, Eliana Marostica, Wei Yuan, Jietian Jin, Jiayu Zhang, Ruijiang Li, Hongping Tang, Kanran Wang, Yu Li, Fang Wang, Yulong Peng, Junyou Zhu, Jing Zhang, Christopher R. Jackson, Jun Zhang, Deborah Dillon, Nancy U. Lin, Lynette Sholl, Thomas Denize, David Meredith, Keith L. Ligon, Sabina Signoretti, Shuji Ogino, Jeffrey A. Golden, MacLean P. Nasrallah, Xiao Han, Sen Yang, Kun-Hsing Yu",2024-09-04,A Pathology Foundation Model for Cancer Diagnosis and Prognosis Prediction ,https://www.nature.com/articles/s41586-024-07894-z,,,,,,,,,,,,225000001.0000004,"(44 TB × 10^12 bytes) ÷ 60,530 WSIs = 7.26 × 10^8 bytes/WSI
(256 × 256 × 3) = 196,608 bytes per tile
(7.26 × 10^8 bytes) ÷ (2 × 10^5 bytes/tile) = 3,630 tiles/WSI
60,530 WSIs × 3,630 tiles/WSI = 2.19 × 10^8 tiles
1.5 × 10^7 + 2.19 × 10^8 = 2.34 × 10^8 total datapoints

Final estimate: 2.25 × 10^8 datapoints",,,,,,,"Histopathology image evaluation is indispensable for cancer diagnoses and subtype classification. Standard artificial intelligence methods for histopathology image analyses have focused on optimizing specialized models for each diagnostic task1,2. Although such methods have achieved some success, they often have limited generalizability to images generated by different digitization protocols or samples collected from different populations3. Here, to address this challenge, we devised the Clinical Histopathology Imaging Evaluation Foundation (CHIEF) model, a general-purpose weakly supervised machine learning framework to extract pathology imaging features for systematic cancer evaluation. CHIEF leverages two complementary pretraining methods to extract diverse pathology representations: unsupervised pretraining for tile-level feature identification and weakly supervised pretraining for whole-slide pattern recognition. We developed CHIEF using 60,530 whole-slide images spanning 19 anatomical sites. Through pretraining on 44 terabytes of high-resolution pathology imaging datasets, CHIEF extracted microscopic representations useful for cancer cell detection, tumour origin identification, molecular profile characterization and prognostic prediction. We successfully validated CHIEF using 19,491 whole-slide images from 32 independent slide sets collected from 24 hospitals and cohorts internationally. Overall, CHIEF outperformed the state-of-the-art deep learning methods by up to 36.1%, showing its ability to address domain shifts observed in samples from diverse populations and processed by different slide preparation methods. CHIEF provides a generalizable foundation for efficient digital pathology evaluation for patients with cancer.",,,,Unverified,2025-01-30 05:05:02+00:00,"United States of America,United States of America,China,China,China,China,United States of America,United States of America,United States of America,United States of America,United States of America,United States of America,China,United States of America,United States of America,China,United States of America",,,,,,,,,
Integrating Deep Learning and Synthetic Biology: A Co-Design Approach for Enhancing Gene Expression via N-Terminal Coding Sequences,Biology,"National University of Singapore,Jiangnan University","Academia,Academia","Zhanglu Yan, Weiran Chu, Yuhua Sheng, Kaiwen Tang, Shida Wang, Yanfeng Liu, Weng-Fai Wong",2024-09-04,Integrating Deep Learning and Synthetic Biology: A Co-Design Approach for Enhancing Gene Expression via N-Terminal Coding Sequences,https://pubs.acs.org/doi/abs/10.1021/acssynbio.4c00371,0.0,,,,,,,,"All experiments were conducted on an Intel Xeon E5-2680 server, boasting 256GB DRAM and running 64-bit Linux 4.15.0. This server was equipped with both an Nvidia Tesla P100 GPU and a GeForce RT 3090 GPU.",,,1996.0,"Initial sequences: 73 × 15 = 1,095 codons
New sequences: 6 × 10 × 15 = 900 codons
Total: 1,095 + 900 = 1,995 codons
Final estimate: 1.995e3",,,,,,,"N-terminal coding sequence (NCS) influences gene expression by impacting the translation initiation rate. The NCS optimization problem is to find an NCS that maximizes gene expression. The problem is important in genetic engineering. However, current methods for NCS optimization such as rational design and statistics-guided approaches are labor-intensive yield only relatively small improvements. This paper introduces a deep learning/synthetic biology co-designed few-shot training workflow for NCS optimization. Our method utilizes k-nearest encoding followed by word2vec to encode the NCS, then performs feature extraction using attention mechanisms, before constructing a time-series network for predicting gene expression intensity, and finally a direct search algorithm identifies the optimal NCS with limited training data. We took green fluorescent protein (GFP) expressed by Bacillus subtilis as a reporting protein of NCSs, and employed the fluorescence enhancement factor as the metric of NCS optimization. Within just six iterative experiments, our model generated an NCS (MLD62) that increased average GFP",,,,Unverified,2025-01-30 05:04:53+00:00,"Singapore,China",,,,,,,,,
MolMVC,Biology,"Central South University,Singapore Agency for Science","Academia,Government","Zhijian Huang, Ziyu Fan, Siyuan Shen, Min Wu, Lei Deng",2024-09-04,MolMVC: Enhancing molecular representations for drug-related tasks through multi-view contrastive learning,https://academic.oup.com/bioinformatics/article/40/Supplement_2/ii190/7749083,0.0,,,,,,,,,,,3400001.0000000065,"Total Datapoints = 3.4M molecular instances = 3.4e6

(Direct value from dataset size, no calculations needed)",,,,,,,"Motivation
Effective molecular representation is critical in drug development. The complex nature of molecules demands comprehensive multi-view representations, considering 1D, 2D, and 3D aspects, to capture diverse perspectives. Obtaining representations that encompass these varied structures is crucial for a holistic understanding of molecules in drug-related contexts.

Results
In this study, we introduce an innovative multi-view contrastive learning framework for molecular representation, denoted as MolMVC. Initially, we use a Transformer encoder to capture 1D sequence information and a Graph Transformer to encode the intricate 2D and 3D structural details of molecules. Our approach incorporates a novel attention-guided augmentation scheme, leveraging prior knowledge to create positive samples tailored to different molecular data views. To align multi-view molecular positive samples effectively in latent space, we introduce an adaptive multi-view contrastive loss (AMCLoss). In particular, we calculate AMCLoss at various levels within the model to effectively capture the hierarchical nature of the molecular information. Eventually, we pre-train the encoders via minimizing AMCLoss to obtain the molecular representation, which can be used for various down-stream tasks. In our experiments, we evaluate the performance of our MolMVC on multiple tasks, including molecular property prediction (MPP), drug-target binding affinity (DTA) prediction and cancer drug response (CDR) prediction. The results demonstrate that the molecular representation learned by our MolMVC can enhance the predictive accuracy on these tasks and also reduce the computational costs. Furthermore, we showcase MolMVC’s efficacy in drug repositioning across a spectrum of drug-related applications.",,,,Unverified,2025-01-30 05:04:49+00:00,"China,Singapore",,,,,,,,,
OLMoE,Language,"Allen Institute for AI,Contextual AI,University of Washington,Princeton University","Research collective,Industry,Academia,Academia","Niklas Muennighoff, Luca Soldaini, Dirk Groeneveld, Kyle Lo, Jacob Morrison, Sewon Min, Weijia Shi, Pete Walsh, Oyvind Tafjord, Nathan Lambert, Yuling Gu, Shane Arora, Akshita Bhagia, Dustin Schwenk, David Wadden, Alexander Wettig, Binyuan Hui, Tim Dettmers, Douwe Kiela, Ali Farhadi, Noah A. Smith, Pang Wei Koh, Amanpreet Singh, Hannaneh Hajishirzi",2024-09-03,OLMoE: Open Mixture-of-Experts Language Models,https://arxiv.org/abs/2409.02060v1,,,,7000000000.0,"""6.9B total parameters, of which only 1.3B are activated for each input token""",5.1741608015e+22,,,"""we pretrain OLMOE-1B-7B for 5.1 trillion tokens with 6.9B total parameters, of which only 1.3B are activated for each input token""
So 6 * 5.1T * 1.3B = 3.978e22

In appendix B: ""We pretrain OLMOE-1B-7B on 256 H100 GPUs for approximately 10 days ... For adaptation, we use 32 H100 GPUs for 33 hours to instruction tune and for another 14 hours to preference tune via DPO.""
Which would suggest 9.90e14 * (256*240 + 32*(33+14)) * 3600 * 0.3 = 6.730e22 including instruction/preference tuning

geometric mean: sqrt(3.978e22 * 6.730e22) = 5.174e22",,Table 2 and 3,4060000000000.0,"Table 2,  4.06T tokens. From Table 3, SFT data appears to be negligible in comparison (average length of response would need to be 60k tokens in order to bump total dataset size by 1%)",1.2642857143,287.0,"""We pretrain OLMOE-1B-7B on 256 H100 GPUs for approximately 10 days ... For adaptation, we use 32 H100 GPUs for 33 hours to instruction tune and for another 14 hours to preference tune via DPO.""
10*24 + 33 + 14 = 287",NVIDIA H100 SXM5 80GB,256.0,,,,Open weights (unrestricted),,Unverified,2025-01-03 20:52:18+00:00,"United States of America,United States of America,United States of America,United States of America",,,,,,,4194304.0,Table 10.,
DrugCLIP,Biology,"Tsinghua University,Tsinghua-Peiking Center for Life Sciences,Peking University,Beijing Academy of Artificial Intelligence / BAAI","Academia,Research collective,Academia,Academia","Yinjun Jia, Bowen Gao, Jiaxin Tan, Xin Hong, Wenyu Zhu, Haichuan Tan, Yuan Xiao, Yanwen Huang, Yue Jin, Yafei Yuan, Jiekang Tian, Weiying Ma, Yaqin Zhang, Chuangye Yan, Wei Zhang, Yanyan Lan",2024-09-03,Deep contrastive learning enables genome-wide virtual screening,https://www.biorxiv.org/content/10.1101/2024.09.02.610777v1?rss=1,0.0,,,,,6.000000000000003e+20,,,"1. Hardware: 8x NVIDIA A100 GPUs (3.12e+14 FLOP/s per GPU)
2. Training duration: Estimated 168 hours (1 week)
3. Utilization: 40%
4. Calculation: (3.12e+14 FLOP/s/GPU × 8 GPUs) × (168 hours × 3600 s/hour) × 0.4 = 6.028e+20 FLOPs",,,5500001.000000002,"Data for DrugCLIP:
Pretraining: 5.5 × 10^6 (pseudo-pocket and ligand pairs)
Fine-tuning: 4.0 × 10^4 (experimental complexes)
Total pretraining data: 5.5 × 10^6 datapoints

5.5 × 10^6 = 5,500,000 datapoints",,,,,,,"Numerous protein-coding genes are associated with human diseases, yet approximately 90% of them lack targeted therapeutic intervention. While conventional computational methods such as molecular docking have facilitated the discovery of potential hit compounds, the development of genome-wide virtual screening against the expansive chemical space remains a formidable challenge. Here we introduce DrugCLIP, a novel framework that combines contrastive learning and dense retrieval to achieve rapid and accurate virtual screening. Compared to traditional docking methods, DrugCLIP improves the speed of virtual screening by several orders of magnitude. In terms of performance, DrugCLIP not only surpasses docking and other deep learning-based methods across two standard benchmark datasets but also demonstrates high efficacy in wet-lab experiments. Specifically, DrugCLIP successfully identified agonists with < 100 nM affinities for 5HT2AR, a key target in psychiatric diseases. For another target NET, whose structure is newly solved and not included in the training set, our method achieved a hit rate of 15%, with 12 diverse molecules exhibiting affinities better than Bupropion. Additionally, two chemically novel inhibitors were validated by structure determination with Cryo-EM. Building on this foundation, we present the results of a pioneering trillion-scale genome-wide virtual screening, encompassing approximately 10,000 AlphaFold2 predicted proteins within the human genome and 500 million molecules from the ZINC and Enamine REAL database. This work provides an innovative perspective on drug discovery in the post-AlphaFold era, where comprehensive targeting of all disease-related proteins is within reach.",,,,Unverified,2025-02-14 19:10:57+00:00,"China,China,China,China",,,,,,,,,
Alphaflow,Biology,Massachusetts Institute of Technology (MIT),Academia,"Bowen Jing, Bonnie Berger, Tommi Jaakkola",2024-09-02,AlphaFold Meets Flow Matching for Generating Protein Ensembles,https://arxiv.org/abs/2402.04845,43.0,,,,,1.3400000000000016e+21,,,"1. Hardware setup: 8x NVIDIA A100 GPUs, 3.12e+14 FLOP/s per GPU
2. Training duration: 371 hours (267h AlphaFLOW + 104h ESMFLOW) = 1,335,600 seconds
3. Utilization rate: 40%
4. Final calculation: 8 GPUs × 3.12e+14 FLOP/s × 1,335,600s × 0.4 = 1.34e+21 FLOPs",,,530000001.0000002,"AlphaFLOW:
1.28M × 256 = 327,680,000
43K × 256 = 11,008,000
Total: 327,680,000 + 11,008,000 = 338,688,000

ESMFLOW:
720K × 256 = 184,320,000
27K × 256 = 6,912,000
Total: 184,320,000 + 6,912,000 = 191,232,000

Combined Total:
338,688,000 + 191,232,000 = 529,920,000 (5.3e8)",,,,,,,,,,,Unverified,2025-02-13 20:36:46+00:00,United States of America,,,,,,,,,
ChatMol,Biology,"Tsinghua University,PingAn Technology,Beijing University of Posts and Telecommunications","Academia,Industry,Academia","Zheni Zeng, Bangchen Yin, Shipeng Wang, Jiarui Liu, Cheng Yang, Haishen Yao, Xingzhi Sun, Maosong Sun, Guotong Xie, Zhiyuan Liu",2024-09-02,ChatMol: interactive molecular discovery with natural language ,https://academic.oup.com/bioinformatics/article/40/9/btae534/7747661,13.0,,,,,,,,,,,3072000.999999999,"Summary of calculations:

ChEBI-20: 26,407 samples × 143 tokens/sample = 3,775,701 tokens
PCdes: 10,500 samples × 162 tokens/sample = 1,701,000 tokens
ChEBI-dia: 7,361 dialogs × 200 tokens/dialog = 1,472,200 tokens
Total dataset tokens: 3,775,701 + 1,701,000 + 1,472,200 = 7,948,901 tokens
Training tokens: 12,000 steps × 256 tokens/step = 3,072,000 tokens
Final data estimate: 3.072 × 10^6 tokens",,,,,,,"Motivation: Natural language is poised to become a key medium for human–machine interactions in the era of large language models. In the
field of biochemistry, tasks such as property prediction and molecule mining are critically important yet technically challenging. Bridging molecular expressions in natural language and chemical language can significantly enhance the interpretability and ease of these tasks. Moreover, it
can integrate chemical knowledge from various sources, leading to a deeper understanding of molecules.
Results: Recognizing these advantages, we introduce the concept of conversational molecular design, a novel task that utilizes natural language
to describe and edit target molecules. To better accomplish this task, we develop ChatMol, a knowledgeable and versatile generative pretrained
model. This model is enhanced by incorporating experimental property information, molecular spatial knowledge, and the associations between
natural and chemical languages. Several typical solutions including large language models (e.g. ChatGPT) are evaluated, proving the challenge of
conversational molecular design and the effectiveness of our knowledge enhancement approach. Case observations and analysis offer insights
and directions for further exploration of natural-language interaction in molecular discovery.",,,,Unverified,2025-01-30 05:04:18+00:00,"China,China,China",,,,,,,,,
ParetoDrug,Biology,"Chinese University of Hong Kong (CUHK),Zhejiang Lab,Zhejiang University,Huawei Noah's Ark Lab","Academia,Academia,Industry","Yaodong Yang, Guangyong Chen, Jinpeng Li, Junyou Li, Odin Zhang, Xujun Zhang, Lanqing Li, Jianye Hao, Ercheng Wang, Pheng-Ann Heng",2024-09-02,Enabling target-aware molecule generation to follow multi objectives with Pareto MCTS,https://www.nature.com/articles/s42003-024-06746-w,1.0,,,,,,,,,,,,,,,,,,,"Target-aware drug discovery has greatly accelerated the drug discovery process to design smallmolecule ligands with high binding affinity to disease-related protein targets. Conditioned on targeted proteins, previous works utilize various kinds of deep generative models and have shown great potential in generating molecules with strong protein-ligand binding interactions. However, beyond binding affinity, effective drug molecules must manifest other essential properties such as high druglikeness, which are not explicitly addressed by current target-aware generative methods. In this article, aiming to bridge the gap of multi-objective target-aware molecule generation in the field of deep learning-based drug discovery, we propose ParetoDrug, a Pareto Monte Carlo Tree Search (MCTS) generation algorithm. ParetoDrug searches molecules on the Pareto Front in chemical space using MCTS to enable synchronous optimization of multiple properties. Specifically, ParetoDrug utilizes pretrained atom-by-atom autoregressive generative models for the exploration guidance to desired molecules during MCTS searching. Besides, when selecting the next atom symbol, a scheme named ParetoPUCT is proposed to balance exploration and exploitation. Benchmark experiments and case studies demonstrate that ParetoDrug is highly effective in traversing the large and complex chemical space to discover novel compounds with satisfactory binding affinities and drug-like properties for various multi-objective target-aware drug discovery tasks.",,,,Unverified,2024-11-23 21:22:33+00:00,"Hong Kong,China,China,China,China",,,,,,,,,
DTI-LM,Biology,University of Central Florida,Academia,"Khandakar Tanvir Ahmed, Md. Istiaq Ansari, Wei Zhang",2024-09-02,DTI-LM: language model powered drug–target interaction prediction,https://academic.oup.com/bioinformatics/article-abstract/40/9/btae533/7747660,0.0,,,,,,,,,,,15056.000000000013,"DrugBank: 6,041
BindingDB: 4,040
Yamanishi_08: 3,448
Luo's Dataset: 1,526

Total = 6,041 + 4,040 + 3,448 + 1,526 = 15,055 datapoints",,,,,,,"Motivation: The identification and understanding of drug–target interactions (DTIs) play a pivotal role in the drug discovery and development
process. Sequence representations of drugs and proteins in computational model offer advantages such as their widespread availability, easier
input quality control, and reduced computational resource requirements. These make them an efficient and accessible tools for various computational biology and drug discovery applications. Many sequence-based DTI prediction methods have been developed over the years. Despite
the advancement in methodology, cold start DTI prediction involving unknown drug or protein remains a challenging task, particularly for
sequence-based models. Introducing DTI-LM, a novel framework leveraging advanced pretrained language models, we harness their exceptional context-capturing abilities along with neighborhood information to predict DTIs. DTI-LM is specifically designed to rely solely on sequence
representations for drugs and proteins, aiming to bridge the gap between warm start and cold start predictions.
Results: Large-scale experiments on four datasets show that DTI-LM can achieve state-of-the-art performance on DTI predictions. Notably, it
excels in overcoming the common challenges faced by sequence-based models in cold start predictions for proteins, yielding impressive
results. The incorporation of neighborhood information through a graph attention network further enhances prediction accuracy. Nevertheless,
a disparity persists between cold start predictions for proteins and drugs. A detailed examination of DTI-LM reveals that language models exhibit contrasting capabilities in capturing similarities between drugs and proteins.",,,,Unverified,2025-01-30 05:04:05+00:00,United States of America,,,,,,,,,
ESMFlow,Biology,Massachusetts Institute of Technology (MIT),Academia,"Bowen Jing, Bonnie Berger, Tommi Jaakkola",2024-09-02,AlphaFold Meets Flow Matching for Generating Protein Ensembles,https://arxiv.org/abs/2402.04845,43.0,,,,,1.3400000000000016e+21,,,"1. Hardware setup: 8x NVIDIA A100 GPUs, 3.12e+14 FLOP/s per GPU
2. Training duration: 371 hours (267h AlphaFLOW + 104h ESMFLOW) = 1,335,600 seconds
3. Utilization rate: 40%
4. Final calculation: 8 GPUs × 3.12e+14 FLOP/s × 1,335,600s × 0.4 = 1.34e+21 FLOPs",,,530000001.0000002,"AlphaFLOW:
1.28M × 256 = 327,680,000
43K × 256 = 11,008,000
Total: 327,680,000 + 11,008,000 = 338,688,000

ESMFLOW:
720K × 256 = 184,320,000
27K × 256 = 6,912,000
Total: 184,320,000 + 6,912,000 = 191,232,000

Combined Total:
338,688,000 + 191,232,000 = 529,920,000 (5.3e8)",,,,,,,"The biological functions of proteins often depend on dynamic structural ensembles. In this work, we develop a flow-based generative modeling approach for learning and sampling the conformational landscapes of proteins. We repurpose highly accurate single-state predictors such as AlphaFold and ESMFold and fine-tune them under a custom flow matching framework to obtain sequence-conditoned generative models of protein structure called AlphaFlow and ESMFlow. When trained and evaluated on the PDB, our method provides a superior combination of precision and diversity compared to AlphaFold with MSA subsampling. When further trained on ensembles from all-atom MD, our method accurately captures conformational flexibility, positional distributions, and higher-order ensemble observables for unseen proteins. Moreover, our method can diversify a static PDB structure with faster wall-clock convergence to certain equilibrium properties than replicate MD trajectories, demonstrating its potential as a proxy for expensive physics-based simulations. Code is available at this https URL.",,,,Unverified,2025-02-14 19:11:28+00:00,United States of America,,,,,,,,,
Moonshot-v1,Language,Moonshot,,Moonshot,2024-09-01,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-30 03:05:12+00:00,,,,,,,,,,
MiniMax Video-01,"Video,Vision",MiniMax,Industry,,2024-08-31,Video model (Video Generation): Supports the generation of high-definition videos at 720p resolution and 25fps,https://www.minimaxi.com/en/news/video-01,,,,,"""Our models seamlessly combine text, speech, and vision, each with support for hundreds of billions of parameters.""

https://intl.minimaxi.com/document/platform%20introduction?key=66701c8e1d57f38758d58198",,,,,Unspecified unreleased,,,,,,,,,,"MiniMax has officially launched its first AI-native video generation model, video-01.

This model supports the generation of high-definition videos at 720p resolution and 25fps, featuring cinematic camera movement effects. It can quickly create visually striking content based on text descriptions.

Video-01 boasts high compression rates, excellent text responsiveness, and diverse styles, while supporting native high resolution and high frame rate videos, comparable to cinematic quality.
",,API access,,Unknown,2025-01-06 18:57:03+00:00,China,,,,,,,,,
HelixFold3,Biology,"Tecorigin LTD,Tsinghua University","Industry,Academia","Lihang Liu, Shanzhuo Zhang, Yang Xue, Xianbin Ye, Kunrui Zhu, Yuxin Li, Yang Liu, Wenlai Zhao, Hongkun Yu, Zhihua Wu, Xiaonan Zhang, Xiaomin Fang",2024-08-30,Technical Report of HelixFold3 for Biomolecular Structure Prediction,https://arxiv.org/abs/2408.16975,,,,,,,,,,,,,,,,,,,,"The AlphaFold series has transformed protein structure prediction with remarkable accuracy, often matching experimental methods. AlphaFold2, AlphaFold-Multimer, and the latest AlphaFold3 represent significant strides in predicting single protein chains, protein complexes, and biomolecular structures. While AlphaFold2 and AlphaFold-Multimer are open-sourced, facilitating rapid and reliable predictions, AlphaFold3 remains partially accessible through a limited online server and has not been open-sourced, restricting further development. To address these challenges, the PaddleHelix team is developing HelixFold3, aiming to replicate AlphaFold3's capabilities. Using insights from previous models and extensive datasets, HelixFold3 achieves an accuracy comparable to AlphaFold3 in predicting the structures of conventional ligands, nucleic acids, and proteins. The initial release of HelixFold3 is available as open source on GitHub for academic research, promising to advance biomolecular research and accelerate discoveries. We also provide online service at PaddleHelix website at this https URL.",,,,Unverified,2024-11-28 05:44:50+00:00,"China,China",,,,,,,,,
RENNAISSANCE,Biology,"Ecole Polytechnique F´ed´erale de Lausanne (EPFL),University of Cambridge,Harvard Medical School","Academia,Academia,Academia","Subham Choudhury, Bharath Narayanan, Michael Moret, Vassily Hatzimanikatis, Ljubisa Miskovic",2024-08-30,Generative machine learning produces kinetic models that accurately characterize intracellular metabolic states,https://www.nature.com/articles/s41929-024-01220-6.pdf,10.0,,,,,,,,,,,,,,,,,,,"Generating large omics datasets has become routine for gaining insights into cellular processes, yet deciphering these datasets to determine metabolic states remains challenging. Kinetic models can help integrate omics data by explicitly linking metabolite concentrations, metabolic fluxes and enzyme levels. Nevertheless, determining the kinetic parameters that underlie cellular physiology poses notable obstacles to the widespread use of these mathematical representations of metabolism. Here we present RENAISSANCE, a generative machine learning framework for efficiently parameterizing large-scale kinetic models with dynamic properties matching experimental observations. Through seamless integration of diverse omics data and other relevant information, including extracellular medium composition, physicochemical data and expertise of domain specialists, RENAISSANCE accurately characterizes intracellular metabolic states in Escherichia coli. It also estimates missing kinetic parameters and reconciles them with sparse experimental data, substantially reducing parameter uncertainty and improving accuracy. This framework will be valuable for researchers studying metabolic variations involving changes in metabolite and enzyme levels and enzyme activity in health and biotechnology.",,,,Unverified,2024-11-23 21:21:54+00:00,"Switzerland,United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
NV-Embed-v2,Language,NVIDIA,Industry,,2024-08-30,,https://huggingface.co/nvidia/NV-Embed-v2,,,,7000000000.0,,,,,,,,,,,,,,,,"We present NV-Embed-v2, a generalist embedding model that ranks No. 1 on the Massive Text Embedding Benchmark (MTEB benchmark)(as of Aug 30, 2024) with a score of 72.31 across 56 text embedding tasks. It also holds the No. 1 in the retrieval sub-category (a score of 62.65 across 15 tasks) in the leaderboard, which is essential to the development of RAG technology.

NV-Embed-v2 presents several new designs, including having the LLM attend to latent vectors for better pooled embedding output, and demonstrating a two-staged instruction tuning method to enhance the accuracy of both retrieval and non-retrieval tasks. Additionally, NV-Embed-v2 incorporates a novel hard-negative mining methods that take into account the positive relevance score for better false negatives removal.",,Open weights (non-commercial),,Likely,2024-12-02 15:22:11+00:00,United States of America,Mistral 7B,1.0459546e+20,I assume it is very similar to NV-Embed-v1 and don't see any significant differences. I expect the compute is likely to be the same.,,,,,,
OPUS-Design,Biology,"Fudan University,Shanghai AI Lab,Harcam Biomedicines","Academia,Academia","Gang Xu, Yulu Yang, Yiqiu Zhang, Qinghua Wang, Jianpeng Ma",2024-08-29,OPUS-Design: Designing Protein Sequence from Backbone Structure with 3DCNN and Protein Language Model,https://www.biorxiv.org/content/10.1101/2024.08.20.608889v2.abstract,0.0,,,,,,,,,,,,,,,,,,,"Protein sequence design, also known as protein inverse folding, is a crucial task in protein engineering and design. Despite the recent advancements in this field, which have facilitated the identification of amino acid sequences based on backbone structures, achieving higher levels of accuracy in sequence recovery rates remains challenging. It this study, we introduce a two-stage protein sequence design method named OPUS-Design. Our evaluation on recently released targets from CAMEO and CASP15 shows that OPUS-Design significantly surpasses several other leading methods on both monomer and oligomer targets in terms of sequence recovery rate. Furthermore, by utilizing its finetune version OPUS-Design-ft and our previous work OPUS-Mut, we have successfully designed a thermal-tolerant double-point mutant of T4 lysozyme that demonstrates a residual enzyme activity exceeding that of the wild-type T4 by more than twofold when both are subjected to extreme heat treatment at 70°C. Importantly, this accomplishment is achieved through the experimental verification of less than 10 mutant candidates, thus significantly alleviating the burden of experimental verification process.",,,,Unverified,2024-10-28 03:23:34+00:00,"China,China,China",,,,,,,,,
DrugFormer,Biology,"University of Florida,University of Texas Health Science Center,H. Lee Moffitt Cancer Center and Research Institute",Academia,"Xiaona Liu, Qing Wang, Minghao Zhou, Yanfei Wang, Xuefeng Wang, Xiaobo Zhou, Qianqian Song",2024-08-29,DrugFormer: Graph‐Enhanced Language Model to Predict Drug Sensitivity,https://onlinelibrary.wiley.com/doi/full/10.1002/advs.202405861,,,,,,,,,,,,,,,,,,,,"Drug resistance poses a crucial challenge in healthcare, with response rates to chemotherapy and targeted therapy remaining low. Individual patient’s resistance is exacerbated by the intricate heterogeneity of tumor cells, presenting significant obstacles to effective treatment. To address this challenge, DrugFormer, a novel graph-augmented large language model designed to predict drug resistance at single-cell level is proposed. DrugFormer integrates both serialized gene tokens and gene-based knowledge graphs for the accurate predictions of drug response. After training on comprehensive single-cell data with drug response information, DrugFormer model presents outperformance, with higher F1, precision, and recall in predicting drug response. Based on the scRNA-seq data from refractory multiple myeloma (MM) and acute myeloid leukemia (AML) patients, DrugFormer demonstrates high efficacy in identifying resistant cells and uncovering underlying molecular mechanisms. Through pseudotime trajectory analysisunique drug-resistant cellular states associated with poor patient outcomes are revealed. Furthermore, DrugFormer identifies potential therapeutic targets, such as COX8A, for overcoming drug resistance across different cancer types. In conclusion, DrugFormer represents a significant advancement in the field of drug resistance prediction, offering a powerful tool for unraveling the heterogeneity of cellular response to drugs and guiding personalized treatment strategies.",,,,Unverified,2024-11-23 21:22:33+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
GLM-4-Plus,Language,Zhipu AI,Industry,Zhipu AI,2024-08-29,GLM-4-Plus,https://bigmodel.cn/dev/howuse/glm-4,,,,,,3.5999999999999997e+25,,,Estimated using benchmark imputation,,,,,,,,,,,"At the KDD International Conference on Data Mining and Knowledge Discovery, the Zhipu GLM team unveiled the new generation of base large model—GLM-4-Plus. As the latest version of Zhipu’s fully self-developed GLM large model, GLM-4-Plus signifies Zhipu AI’s continuous dedication in the field of general artificial intelligence, advancing the independent and autonomous innovation of large model technology.",,API access,,Unknown,2025-01-30 20:10:43+00:00,China,,,,,Check references for hardware details.,,,,
GLA Transformer 1.3B,Language,"MIT-IBM Watson AI Lab,Massachusetts Institute of Technology (MIT)","Academia,Industry,Academia","Songlin Yang, Bailin Wang, Yikang Shen, Rameswar Panda, Yoon Kim",2024-08-27,Gated Linear Attention Transformers with Hardware-Efficient Training,https://arxiv.org/abs/2312.06635,,,,1300000000.0,1.3b,7.8e+20,,,6ND = 6*1300000000.00*100*10^9 = 7.8e+20,SlimPajama,"We use the SlimPajama dataset (Soboleva et al., 2023) and tokenize it
using the Mistral tokenizer (Jiang et al., 2023). The original dataset contains 627B tokens; we use a 100B subset.",100000000000.0,100b,,,,,,,"Transformers with linear attention allow for efficient parallel training but can simultaneously be formulated as an RNN with 2D (matrix-valued) hidden states, thus enjoying linear-time inference complexity. However, linear attention generally underperforms ordinary softmax attention. Moreover, current implementations of linear attention lack I/O-awareness and are thus slower than highly optimized implementations of softmax attention. This work describes a hardware-efficient algorithm for linear attention that trades off memory movement against parallelizability. The resulting implementation, dubbed FLASHLINEARATTENTION, is faster than FLASHATTENTION-2 (Dao, 2023) as a standalone layer even on short sequence lengths (e.g., 1K). We then generalize this algorithm to a more expressive variant of linear attention with data-dependent gates. When used as a replacement for the standard attention layer in Transformers, the resulting gated linear attention (GLA) Transformer is found to perform competitively against the LLaMA-architecture Transformer (Touvron et al., 2023) as well recent linear-time-inference baselines such as RetNet (Sun et al., 2023a) and Mamba (Gu & Dao, 2023) on moderate-scale language modeling experiments. GLA Transformer is especially effective at length generalization, enabling a model trained on 2K to generalize to sequences longer than 20K without significant perplexity degradations. For training speed, the GLA Transformer has higher throughput than a similarly-sized Mamba model.
",,Open weights (unrestricted),,Confident,2024-12-16 20:22:01+00:00,"United States of America,United States of America",,,,,,,2000000.0,,
GLA Transformer 340M,Language,"MIT-IBM Watson AI Lab,Massachusetts Institute of Technology (MIT)","Academia,Industry,Academia","Songlin Yang, Bailin Wang, Yikang Shen, Rameswar Panda, Yoon Kim",2024-08-27,Gated Linear Attention Transformers with Hardware-Efficient Training,https://arxiv.org/abs/2312.06635,,,,340000000.0,"340m
",3.06e+19,,,6ND = 6*340*10^6*15*10^9 = 3.06e+19,SlimPajama,"We use the SlimPajama dataset (Soboleva et al., 2023) and tokenize it
using the Mistral tokenizer (Jiang et al., 2023). The original dataset contains 627B tokens; we use a 100B subset.",15000000000.0,15B Tokens,,,,,,,"Transformers with linear attention allow for efficient parallel training but can simultaneously be formulated as an RNN with 2D (matrix-valued) hidden states, thus enjoying linear-time inference complexity. However, linear attention generally underperforms ordinary softmax attention. Moreover, current implementations of linear attention lack I/O-awareness and are thus slower than highly optimized implementations of softmax attention. This work describes a hardware-efficient algorithm for linear attention that trades off memory movement against parallelizability. The resulting implementation, dubbed FLASHLINEARATTENTION, is faster than FLASHATTENTION-2 (Dao, 2023) as a standalone layer even on short sequence lengths (e.g., 1K). We then generalize this algorithm to a more expressive variant of linear attention with data-dependent gates. When used as a replacement for the standard attention layer in Transformers, the resulting gated linear attention (GLA) Transformer is found to perform competitively against the LLaMA-architecture Transformer (Touvron et al., 2023) as well recent linear-time-inference baselines such as RetNet (Sun et al., 2023a) and Mamba (Gu & Dao, 2023) on moderate-scale language modeling experiments. GLA Transformer is especially effective at length generalization, enabling a model trained on 2K to generalize to sequences longer than 20K without significant perplexity degradations. For training speed, the GLA Transformer has higher throughput than a similarly-sized Mamba model.
",,Open weights (unrestricted),,Confident,2024-12-16 20:22:13+00:00,"United States of America,United States of America",,,,,,,500000.0,,
Pharia-1-LLM-7B,Language,Aleph Alpha,Industry,,2024-08-26,Introducing Pharia-1-LLM: transparent and compliant,https://huggingface.co/Aleph-Alpha/Pharia-1-LLM-7B-control,,,,7041544704.0,,4.43e+23,,,"reported by the authors: 2.75*10^23 + 1.68*10^23 = 4.43*10^23 FLOP

https://huggingface.co/Aleph-Alpha/Pharia-1-LLM-7B-control#compute--training-efficiency",Common Crawl,"The training data of our models comprises two components: web-crawled data and structured datasets with a total size of 7.7T, with a cutoff date 04/2023. We performed some additional web scraping to augment these datasets.

Web-crawled data was obtained by filtering and deduplicating data available in public datasets, derived from Common Crawl, in the following languages: English, French, German, Italian, Spanish, Dutch, Portuguese.

To deduplicate the data, we applied a Bloomfilter for exact document deduplication in English, French, German, Italian and Spanish. Portuguese and Dutch data was deduplicated using both URLs and fuzzy-deduplication with MinHashLSH.",7700000000000.0,4.7T + 3T = 7.7T tokens,,,,"NVIDIA A100 SXM4 80 GB,NVIDIA H100 SXM5 80GB",256.0,,"We are pleased to announce our new foundation model family that includes Pharia-1-LLM-7B-control and Pharia-1-LLM-7B-control-aligned, now publicly available under the Open Aleph License, which explicitly allows for non-commercial research and educational use. Pharia-1-LLM-7B-control is engineered to deliver concise, length-controlled responses that match the performance of leading open-source models in the 7B to 8B parameter range and is culturally and linguistically optimized for German, French, and Spanish by being trained on a multilingual base corpus. Pharia-1-LLM-7B-control is trained on carefully curated data in compliance with applicable EU and national regulations, including copyright and data privacy laws. With improved token efficiency, Pharia-1-LLM-7B-control excels in domain-specific applications, particularly in the automotive and engineering industries, and can be aligned to user preferences, making it suitable for critical applications without the risk of shutdown behavior. As such, it serves as a valuable addition to the community’s selection of weight-available foundation models. Pharia-1-LLM-7B-control-aligned has been added with additional safety guardrails via alignment methods.",,Open weights (non-commercial),,Confident,2025-02-14 19:11:18+00:00,Germany,,,,,,,,,
DISTRO,Language,Nous Research,Industry,"Bowen Peng, Jeffrey Quesnelle, Dillon Rolnick, Ari Lotter, Umer H. Adil, Esteban La Rocca",2024-08-26,A PRELIMINARY REPORT ON DISTRO,https://github.com/NousResearch/DisTrO/blob/main/A_Preliminary_Report_on_DisTrO.pdf,,,,1200000000.0,1.2B,7.1497946e+20,,,"6*1.2*10^9*104857600000=7.5497472e+20

989500000000000*19.8*3600*32*0.3 = 6.7710298e+20

sqrt(6.7710298e+20*7.5497472e+20) = 7.1497946e+20",Dolma,"""we used the first 105B tokens of a randomly shuffled 10% representative sampling of the Dolma v1.7 [17]5 dataset""",104857600000.0,"Total Steps 25000
Sequence Length 2048
Batch Size 2048 (4M tokens)
Total Tokens 104.8576B",,19.8,,NVIDIA H100 SXM5 80GB,32.0,,"Training large scale neural networks typically involves sharing gradients between all accelerators, which necessitates specialized, high-speed interconnects. To address this, we introduce DisTrO, a family of architecture-agnostic and network-agnostic distributed optimizers that reduces the inter-GPU communication requirements by four to five orders of magnitude without relying on amortized analysis, enabling low-latency training of large neural networks on slow internet bandwidths with heterogeneous networking hardware. In this preliminary report we are excited to show the first and
earliest empirical proof that DisTrO-AdamW matches standard AdamW+All-Reduce in convergence rate while massively reducing the required bandwidth during pre-training of a 1.2B LLM. When
using Distributed Data Parallelism, DisTrO may enable future large scale foundation model training to bypass the need for high-speed interconnects entirely.",,,,Confident,2024-11-24 20:41:38+00:00,United States of America,,,,,,,,,
Xinyu,,,,"Yiquan Wu, Bo Tang, Chenyang Xi, Yu Yu, Pengyu Wang, Yifei Liu, Kun Kuang, Haiying Deng, Zhiyu Li, Feiyu Xiong, Jie Hu, Peng Cheng, Zhonghao Wang, Yi Wang, Yi Luo, Mingchuan Yang",2024-08-23,Xinyu: An Efficient LLM-based System for Commentary Generation,https://arxiv.org/abs/2408.11609,0.0,,,,,,,,128 Nvidia A800 80G GPUs,,,500000000000.0,,,528.0,,NVIDIA A100 SXM4 40 GB,128.0,,"In this paper, we introduce Xinyu, an efficient LLM-based system designed to assist commentators in generating Chinese commentaries. To meet the fundamental requirements, we deconstruct the generation process into sequential steps, proposing targeted strategies and supervised fine-tuning (SFT) for each step. ",,,,Unverified,2025-01-07 22:01:43+00:00,,,,,,,,,,
Jamba 1.5-Large,Language,AI21 Labs,Industry,"Barak Lenz, Alan Arazi, Amir Bergman, Avshalom Manevich, Barak Peleg, Ben Aviram, Chen Almagor, Clara Fridman, Dan Padnos, Daniel Gissin, Daniel Jannai, Dor Muhlgay, Dor Zimberg, Edden M Gerber, Elad Dolev, Eran Krakovsky, Erez Safahi, Erez Schwartz, Gal Cohen, Gal Shachaf, Haim Rozenblum, Hofit Bata, Ido Blass, Inbal Magar, Itay Dalmedigos, Jhonathan Osin, Julie Fadlon, Maria Rozman, Matan Danos, Michael Gokhman, Mor Zusman, Naama Gidron, Nir Ratner, Noam Gat, Noam Rozen, Oded Fried, Ohad Leshno, Omer Antverg, Omri Abend, Opher Lieber, Or Dagan, Orit Cohavi, Raz Alon, Ro'i Belson, Roi Cohen, Rom Gilad, Roman Glozman, Shahar Lev, Shaked Meirom, Tal Delbari, Tal Ness, Tomer Asida, Tom Ben Gal, Tom Braude, Uriya Pumerantz, Yehoshua Cohen, Yonatan Belinkov, Yuval Globerson, Yuval Peleg Levy, Yoav Shoham",2024-08-22,Jamba-1.5: Hybrid Transformer-Mamba Models at Scale,"https://arxiv.org/abs/2408.12570
https://www.ai21.com/blog/announcing-jamba-model-family
https://huggingface.co/ai21labs/AI21-Jamba-1.5-Large",,Training cost,,398000000000.0,94B active/398B total,,,,,Unspecified unreleased,,,,,,,NVIDIA H100 SXM5 80GB,,Self-supervised learning,"We present Jamba-1.5, new instruction-tuned large language models based on our Jamba architecture. Jamba is a hybrid Transformer-Mamba mixture of experts architecture, providing high throughput and low memory usage across context lengths, while retaining the same or better quality as Transformer models. We release two model sizes: Jamba-1.5-Large, with 94B active parameters, and Jamba-1.5-Mini, with 12B active parameters. Both models are fine-tuned for a variety of conversational and instruction-following capabilties, and have an effective context length of 256K tokens, the largest amongst open-weight models. To support cost-effective inference, we introduce ExpertsInt8, a novel quantization technique that allows fitting Jamba-1.5-Large on a machine with 8 80GB GPUs when processing 256K-token contexts without loss of quality. When evaluated on a battery of academic and chatbot benchmarks, Jamba-1.5 models achieve excellent results while providing high throughput and outperforming other open-weight models on long-context benchmarks. The model weights for both sizes are publicly available under the Jamba Open Model License and we release ExpertsInt8 as open source.",,Open weights (restricted use),,Confident,2025-02-07 18:29:17+00:00,Israel,,,,,,,,,
EvolMPNN,Biology,Aarhus university,Academia,"Zhiqiang Zhong, Davide Mottin",2024-08-22,Efficiently Predicting Mutational Effect on Homologous Proteins by Evolution Encoding,https://link.springer.com/chapter/10.1007/978-3-031-70368-3_24,,,,,,,,,,,,29000001.00000002,"Total proteins = 82,583 + 8,733 + 54,025 = 145,341 proteins
Residues per protein (avg) = 200
Total datapoints = 145,341 × 200 = 29,068,200 ≈ 2.9 × 10^7",,,,,,,"Predicting protein properties is paramount for biological and medical advancements. Current protein engineering mutates on a typical protein, called the wild-type, to construct a family of homologous proteins and study their properties. Yet, existing methods easily neglect subtle mutations, failing to capture the effect on the protein properties. To this end, we propose EvolMPNN, Evolution-aware Message Passing Neural Network, an efficient model to learn evolution-aware protein embeddings. EvolMPNN samples sets of anchor proteins, computes evolutionary information by means of residues and employs a differentiable evolution-aware aggregation scheme over these sampled anchors. This way, EvolMPNN can efficiently utilise a novel message-passing method to capture the mutation effect on proteins with respect to the anchor proteins. Afterwards, the aggregated evolution-aware embeddings are integrated with sequence embeddings to generate final comprehensive protein embeddings. Our model shows up to 
 better than state-of-the-art methods and attains 
 inference speedup in comparison with large pre-trained models. Code and models are available at https://github.com/zhiqiangzhongddu/EvolMPNN.",,,,Unverified,2025-01-30 05:05:14+00:00,Denmark,,,,,,,,,
GameNGen,Games,"Google Research,Google DeepMind,Tel Aviv University","Industry,Industry,Academia","Dani Valevski, Yaniv Leviathan, Moab Arar, Shlomi Fruchter",2024-08-22,Diffusion Models Are Real-Time Game Engines,https://arxiv.org/abs/2408.14837,,,,,"the base model (Stable Diffusion) has 1.45B parameters, but they don't report parameters count for GamenGen",,,,,,,,""" We use a batch size of 128 "" (for the main training)
""Unless noted otherwise, all results in the paperare after 700,000 training steps. <..> We use a batch size of 2,048 for optimizing the latent decoder, other training parameters are identical to those of the denoiser. <..> Overall we generate 900M frames for training. All image frames (during training, inference, and conditioning) are at a resolution of 320x240 padded to 320x256.""",,,"""We train using 128 TPU-v5e devices with data parallelization""",Google TPU v5e,128.0,,"We present GameNGen, the first game engine powered entirely by a neural model that enables real-time interaction with a complex environment over long trajectories at high quality. GameNGen can interactively simulate the classic game DOOM at over 20 frames per second on a single TPU. Next frame prediction achieves a PSNR of 29.4, comparable to lossy JPEG compression. Human raters are only slightly better than random chance at distinguishing short clips of the game from clips of the simulation. GameNGen is trained in two phases: (1) an RL-agent learns to play the game and the training sessions are recorded, and (2) a diffusion model is trained to produce the next frame, conditioned on the sequence of past frames and actions. Conditioning augmentations enable stable auto-regressive generation over long trajectories.",,Unreleased,,Unknown,2024-11-08 15:27:45+00:00,"Multinational,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,Israel",Stable Diffusion (LDM-KL-8-G),,,,,,,,
Shanhai 2.0,,,,,2024-08-22,迈向AGI关键一步，云知声推出山海多模态大模型,https://www.doit.com.cn/p/517117.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
GITIII,Biology,Yale School of Public Health,,Xiao Xiao,2024-08-22,Investigation of pair-wise single-cell interactions by statistically interpreting spatial cell state correlation learned by self-supervised graph inductive bias transformer,https://www.biorxiv.org/content/10.1101/2024.08.21.608964v1,0.0,,,,,,,,,,,,,,,,,,,"Image-based spatial transcriptomics (ST) offers spatial gene expression profile at the single-cell resolution and provides information to understand intercellular communication that is critical for maintaining tissue development and organ function. Disruption of normal cell-cell interactions (CCI) can lead to disease onset and progression. Current CCI analysis methods face several limitations, including subjection to the number of measured ligand-receptor genes in image-based spatial transcriptomics, limited graph encoding power, inadequate use of spatial information, and low interpretability. Here, we present GITIII, an interpretable self-supervised graph transformerbased language model that treats cells as words (nodes) and their cell neighborhood as a sentence to explore the communications among cells. Enhanced by multilayer perceptron-based distance scaler, physics-informed attention mechanism, and a state-of-the-art, expressive, and lightweight graph transformer model, GITIII infers CCI by investigating how the state of a cell is influenced by the spatial organization, ligand expression, cell types and states of neighboring cells. With its interpretable architecture, GITIII can be used to understand how the sender cell influences target genes in the receiver cell, visualize the spatial pattern and utility of CCI, identify significant CCI networks, perform CCI-informed cell subtyping, and compare CCI strength between disease groups. Applications to four ST datasets from several species, organs, and platforms, GITIII effectively identified and quantitatively interpreted key CCI patterns driving within-sample heterogeneity and disease progression, thus improving our understanding of brain structures, tumor microenvironments, and the interplay among different cell types responding to neighboring CCIs.",,,,Unverified,2025-01-12 05:00:02+00:00,,,,,,,,,,
Jamba 1.5 Mini,Language,AI21 Labs,Industry,"Barak Lenz, Alan Arazi, Amir Bergman, Avshalom Manevich, Barak Peleg, Ben Aviram, Chen Almagor, Clara Fridman, Dan Padnos, Daniel Gissin, Daniel Jannai, Dor Muhlgay, Dor Zimberg, Edden M Gerber, Elad Dolev, Eran Krakovsky, Erez Safahi, Erez Schwartz, Gal Cohen, Gal Shachaf, Haim Rozenblum, Hofit Bata, Ido Blass, Inbal Magar, Itay Dalmedigos, Jhonathan Osin, Julie Fadlon, Maria Rozman, Matan Danos, Michael Gokhman, Mor Zusman, Naama Gidron, Nir Ratner, Noam Gat, Noam Rozen, Oded Fried, Ohad Leshno, Omer Antverg, Omri Abend, Opher Lieber, Or Dagan, Orit Cohavi, Raz Alon, Ro'i Belson, Roi Cohen, Rom Gilad, Roman Glozman, Shahar Lev, Shaked Meirom, Tal Delbari, Tal Ness, Tomer Asida, Tom Ben Gal, Tom Braude, Uriya Pumerantz, Yehoshua Cohen, Yonatan Belinkov, Yuval Globerson, Yuval Peleg Levy, Yoav Shoham",2024-08-22,Jamba-1.5: Hybrid Transformer-Mamba Models at Scale,https://arxiv.org/abs/2408.12570,,,,52000000000.0,12B active/52B total,,,,,Unspecified unreleased,"Knowledge cutoff date: March 5, 2024
Supported languages: English, Spanish, French, Portuguese, Italian, Dutch, German, Arabic and Hebrew",,,,,,,,,"* Jamba-1.5-Mini is an updated and instruction-tuned version of our earlier Jamba release 

We present Jamba-1.5, new instruction-tuned large language models based on our Jamba architecture. Jamba is a hybrid Transformer-Mamba mixture of experts architecture, providing high throughput and low memory usage across context lengths, while retaining the same or better quality as Transformer models. We release two model sizes: Jamba-1.5-Large, with 94B active parameters, and Jamba-1.5-Mini, with 12B active parameters. Both models are fine-tuned for a variety of conversational and instruction-following capabilties, and have an effective context length of 256K tokens, the largest amongst open-weight models. To support cost-effective inference, we introduce ExpertsInt8, a novel quantization technique that allows fitting Jamba-1.5-Large on a machine with 8 80GB GPUs when processing 256K-token contexts without loss of quality. When evaluated on a battery of academic and chatbot benchmarks, Jamba-1.5 models achieve excellent results while providing high throughput and outperforming other open-weight models on long-context benchmarks. The model weights for both sizes are publicly available under the Jamba Open Model License and we release ExpertsInt8 as open source.",,Open weights (restricted use),,Confident,2025-02-07 18:29:28+00:00,Israel,,,,,,,,,
CoPRA,Biology,"Tsinghua University,University College London (UCL),Monash University,Beijing University of Posts and Telecommunications","Academia,Academia,Academia,Academia","Rong Han, Xiaohong Liu, Tong Pan, Jing Xu, Xiaoyu Wang, Wuyang Lan, Zhenyu Li, Zixuan Wang, Jiangning Song, Guangyu Wang, Ting Chen",2024-08-21,CoPRA: Bridging Cross-domain Pretrained Sequence Models with Complex Structures for Protein-RNA Binding Affinity Prediction,https://arxiv.org/abs/2409.03773,0.0,,,,,,,,,,,27000001.000000022,"Summary:
1. Chain pairs: 30,000
2. Poses per pair: 3
Total datapoints: 30,000 × 3 = 90,000

3. Tokens per datapoint:
- Protein residues: 200
- RNA bases: 100
Total tokens per datapoint: 200 + 100 = 300

4. Final calculation:
90,000 datapoints × 300 tokens/datapoint = 27,000,000 tokens",,,,,,,"Accurately measuring protein-RNA binding affinity is crucial in many biological processes and drug design. Previous computational methods for protein-RNA binding affinity prediction rely on either sequence or structure features,
unable to capture the binding mechanisms comprehensively.
The recent emerging pre-trained language models trained on
massive unsupervised sequences of protein and RNA have
shown strong representation ability for various in-domain
downstream tasks, including binding site prediction. However, applying different-domain language models collaboratively for complex-level tasks remains unexplored. In this paper, we propose CoPRA to bridge pre-trained language models from different biological domains via Complex structure
for Protein-RNA binding Affinity prediction. We demonstrate
for the first time that cross-biological modal language models can collaborate to improve binding affinity prediction. We
propose a Co-Former to combine the cross-modal sequence
and structure information and a bi-scope pre-training strategy for improving Co-Former’s interaction understanding.
Meanwhile, we build the largest protein-RNA binding affinity
dataset PRA310 for performance evaluation. We also test our
model on a public dataset for mutation effect prediction. CoPRA reaches state-of-the-art performance on all the datasets.
We provide extensive analyses and verify that CoPRA can
(1) accurately predict the protein-RNA binding affinity; (2)
understand the binding affinity change caused by mutations;
and (3) benefit from scaling data and model size.1",,,,Unverified,2025-01-30 05:04:04+00:00,"China,United Kingdom of Great Britain and Northern Ireland,Australia,China",,,,,,,,,
Xinyi Video 2.0,,,,,2024-08-21,"新壹视频大模型2.0 赋能千行百业的AI创新引擎
",https://tech.chinadaily.com.cn/a/202408/21/WS66c5a501a310b35299d37c8d.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Ideogram v2,Image generation,Ideogram,Industry,,2024-08-21,Ideogram 2.0,https://about.ideogram.ai/2.0,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"We are excited to release Ideogram 2.0, our new frontier text to image model with industry leading capabilities in generating realistic images, graphic design, typography, and more. Trained from scratch like all Ideogram models, Ideogram 2.0 significantly outperforms other text to image models across many quality metrics, including image-text alignment, overall subjective preference, and text rendering accuracy.",,API access,,Unknown,2025-01-06 16:20:24+00:00,"United States of America,Canada",,,,,,,,,
AntiFormer,Biology,"University of Florida,Sichuan University,Shihezi University,University of Macau,University of Texas Health Science Center","Academia,Academia,Academia,Academia","Qing Wang, Yuzhou Feng, Yanfei Wang, Bo Li, Jianguo Wen, Xiaobo Zhou, Qianqian Song",2024-08-20,AntiFormer: graph enhanced large language model for binding affinity prediction ,https://academic.oup.com/bib/article/25/5/bbae403/7736247,0.0,,,24670596.0,Loaded provided model file from Zenodo page into PyTorch. ,1.7100000000000148e+18,,,"1. Hardware setup: 1x NVIDIA A100 GPU (3.12x10^14 FLOP/s using FP16 Tensor Core)

2. Training duration: Directly provided - 0.76 hours per epoch x 5 folds = 3.8 hours (13,680 seconds)

3. Utilization rate: 40%

4. Calculation: 3.12x10^14 FLOP/s × 13,680s × 1 GPU × 0.4 = 1.71×10^18 FLOPs",,,,,,,"""AntiBERTy adopts the multiple
instance learning and results in much longer training time (1.46 h)
than Transformer-12 L (0.63 h) and Transformer-6 L (0.38 h).""",,,,"Antibodies play a pivotal role in immune defense and serve as key therapeutic agents. The process of affinity maturation, wherein
antibodies evolve through somatic mutations to achieve heightened specificity and affinity to target antigens, is crucial for effective
immune response. Despite their significance, assessing antibody–antigen binding affinity remains challenging due to limitations in
conventional wet lab techniques. To address this, we introduce AntiFormer, a graph-based large language model designed to predict
antibody binding affinity. AntiFormer incorporates sequence information into a graph-based framework, allowing for precise prediction
of binding affinity. Through extensive evaluations, AntiFormer demonstrates superior performance compared with existing methods,
offering accurate predictions with reduced computational time. Application of AntiFormer to severe acute respiratory syndrome
coronavirus 2 patient samples reveals antibodies with strong neutralizing capabilities, providing insights for therapeutic development
and vaccination strategies. Furthermore, analysis of individual samples following inf luenza vaccination elucidates differences in
antibody response between young and older adults. AntiFormer identifies specific clonotypes with enhanced binding affinity postvaccination, particularly in young individuals, suggesting age-related variations in immune response dynamics. Moreover, our findings
underscore the importance of large clonotype category in driving affinity maturation and immune modulation. Overall, AntiFormer is
a promising approach to accelerate antibody-based diagnostics and therapeutics, bridging the gap between traditional methods and
complex antibody maturation processes.",,Open weights (unrestricted),,Unverified,2025-02-14 19:11:45+00:00,"United States of America,China,China,Macao,United States of America",,,,,,,64.0,"""The training batch size is set to 64, the test batch size to 128, and the learning rate is 0.0001. AntiFormer is trained on one NVIDIA A100 TENSOR CORE GPU with 40 GB memory"" from Model training paragraph",
Rethinking Molecular Design: Integrating Latent Variable and Auto-Regressive Models for Goal Directed Generation,Biology,"ETH Zurich,University of Zurich,ETH AI Center","Academia,Academia,Research collective","Heath Arthur-Loui, Amina Mollaysa, Michael Krauthammer",2024-08-19,Rethinking Molecular Design: Integrating Latent Variable and Auto-Regressive Models for Goal Directed Generation,https://arxiv.org/abs/2409.00046,0.0,,,,,4.999999999999999e+18,,,"1. Hardware setup: 1x NVIDIA RTX 4090 (3.30×10¹⁴ FP16 FLOP/s)

2. Training duration: 7.9 hours (estimated)
   * 364,000 total samples
   * 128 batch size
   * 200 epochs
   * 50ms per step
   * Total: 28,430 seconds

3. Utilization rate: 40%

4. Final calculation:
   3.30×10¹⁴ FLOP/s × 28,430s × 0.4 = 5.0×10¹⁸ FLOPs",,,35000001.00000002,"QM9 Dataset: 113,885 molecules × 40 tokens = 4,555,400 tokens
ZINC250k Dataset: 250,000 molecules × 120 tokens = 30,000,000 tokens
Total: 4,555,400 + 30,000,000 = 34,555,400 tokens ≈ 3.5 × 10^7 tokens",,,,NVIDIA GeForce RTX 4090,1.0,,"De novo molecule design has become a highly active research area, advanced significantly through the use of state-of-the-art generative models. Despite these advances, several fundamental questions remain unanswered as the field increasingly focuses on more complex generative models and sophisticated molecular representations as an answer to the challenges of drug design. In this paper, we return to the simplest representation of molecules, and investigate overlooked limitations of classical generative approaches, particularly Variational Autoencoders (VAEs) and auto-regressive models. We propose a hybrid model in the form of a novel regularizer that leverages the strengths of both to improve validity, conditional generation, and style transfer of molecular sequences. Additionally, we provide an in depth discussion of overlooked assumptions of these models' behaviour.",,,,Unverified,2025-02-14 19:11:54+00:00,"Switzerland,Switzerland,Switzerland",,,,,,,,,
TransFew,Biology,University of Missouri,Academia,"Frimpong Boadu, Jianlin Cheng",2024-08-17,Improving protein function prediction by learning and integrating representations of protein sequences and function labels,https://academic.oup.com/bioinformaticsadvances/article/4/1/vbae120/7735316,,,,,,,,,,,,,,,,,,,,"Motivation
As fewer than 1% of proteins have protein function information determined experimentally, computationally predicting the function of proteins is critical for obtaining functional information for most proteins and has been a major challenge in protein bioinformatics. Despite the significant progress made in protein function prediction by the community in the last decade, the general accuracy of protein function prediction is still not high, particularly for rare function terms associated with few proteins in the protein function annotation database such as the UniProt.

Results
We introduce TransFew, a new transformer model, to learn the representations of both protein sequences and function labels [Gene Ontology (GO) terms] to predict the function of proteins. TransFew leverages a large pre-trained protein language model (ESM2-t48) to learn function-relevant representations of proteins from raw protein sequences and uses a biological natural language model (BioBert) and a graph convolutional neural network-based autoencoder to generate semantic representations of GO terms from their textual definition and hierarchical relationships, which are combined together to predict protein function via the cross-attention. Integrating the protein sequence and label representations not only enhances overall function prediction accuracy, but delivers a robust performance of predicting rare function terms with limited annotations by facilitating annotation transfer between GO terms.

Availability and implementation
https://github.com/BioinfoMachineLearning/TransFew.",,,,Unverified,2025-01-12 05:26:35+00:00,United States of America,,,,,,,,,
CLR_ESP,Biology,,,"Zhenjiao Du, Weiming Fu, Xiaolong Guo, Doina Caragea, Yonghui Li",2024-08-16,CLR_ESP: Improved enzyme-substrate pair prediction using contrastive learning,https://www.biorxiv.org/content/10.1101/2024.08.13.607829v1,,,,,,,,,,,,,,,,,,,,"To reduce the cost of experimental characterization of the potential substrates for enzymes, machine learning prediction model offer an alternative solution. Pretrained language models, as powerful approaches for protein and molecule representation, have been employed in the development of enzyme-substrate prediction models, achieving promising performance. In addition to continuing improvements in language models, effectively fusing encoders to handle multimodal prediction tasks is critical for further enhancing model performance using available representation methods. Here, we present CLR_ESP, a multimodal classifier that integrates protein and chemistry language models with a newly designed contrastive learning strategy for predicting enzyme-substrate pairs. Our best model achieved SOTA performance with an accuracy of 94.70% on independent test data while requiring fewer computational resources and training data. It also confirmed our hypothesis that embeddings of positive pairs are closer to each other in high-dimension space, while negative pairs exhibit the opposite trend. The proposed architecture is expected to be further applied to enhance performance in additional multimodality prediction tasks in biology. A user-friendly web server of CLR_ESP is established and freely accessible at https://78k6imn5wp.us-east-1.awsapprunner.com/.",,,,Unverified,2025-01-12 05:15:53+00:00,,,,,,,,,,
DeepSeek-Prover-V1.5,Language,DeepSeek,Industry,"Huajian Xin, Z.Z. Ren, Junxiao Song, Zhihong Shao, Wanjia Zhao, Haocheng Wang, Bo Liu, Liyue Zhang, Xuan Lu, Qiushi Du, Wenjun Gao, Qihao Zhu, Dejian Yang, Zhibin Gou, Z.F. Wu, Fuli Luo, Chong Ruan",2024-08-15,DeepSeek-Prover-V1.5: Harnessing Proof Assistant Feedback for Reinforcement Learning and Monte-Carlo Tree Search,https://arxiv.org/abs/2408.08152,,,,,,,,,,,,,,,,,,,,"We introduce DeepSeek-Prover-V1.5, an open-source language model designed for theorem proving in Lean 4, which enhances DeepSeek-Prover-V1 by optimizing both training and inference processes. Pre-trained on DeepSeekMath-Base with specialization in formal mathematical languages, the model undergoes supervised fine-tuning using an enhanced formal theorem proving dataset derived from DeepSeek-Prover-V1. Further refinement is achieved through reinforcement learning from proof assistant feedback (RLPAF). Beyond the single-pass whole-proof generation approach of DeepSeek-Prover-V1, we propose RMaxTS, a variant of Monte-Carlo tree search that employs an intrinsic-reward-driven exploration strategy to generate diverse proof paths. DeepSeek-Prover-V1.5 demonstrates significant improvements over DeepSeek-Prover-V1, achieving new state-of-the-art results on the test set of the high school level miniF2F benchmark (63.5%) and the undergraduate level ProofNet benchmark (25.3%).",,Open weights (restricted use),,Unverified,2024-12-22 23:46:39+00:00,China,DeepSeekMath 7B,,,,,,,,
Hermes 3 405B,Language,Nous Research,Industry,"teknium, Jeffrey Quesnelle, Chen Guang",2024-08-14,Hermes 3 Technical Report,https://nousresearch.com/wp-content/uploads/2024/08/Hermes-3-Technical-Report.pdf,,,,405000000000.0,405B,,,,,Unspecified unreleased,"""The Hermes 3 dataset comprises a diverse collection of high-quality instruction data, meticulously curated and generated
to encompass a wide range of domains and use cases. The construction of this dataset, which commenced in March
2024 and concluded in August 2024, involved a rigorous selection process to ensure the highest quality and relevance
of the included data""",390000000.0,390M tokens (Table 1),4.0,,,NVIDIA H100 SXM5 80GB,128.0,,"Instruct (or “chat”) tuned models have become the primary way in which most people interact with
large language models. As opposed to “base” or “foundation” models, instruct-tuned models are
optimized to respond to imperative statements. We present Hermes 3, a neutrally-aligned generalist
instruct and tool use model with strong reasoning and creative abilities. Its largest version, Hermes 3
405B, achieves state of the art performance among open weight models on several public benchmarks.
The weights for all models are available at https://huggingface.co/NousResearch.",,Open weights (restricted use),,Confident,2024-12-02 15:22:11+00:00,United States of America,Llama 3.1-405B,2.9069822e+21,"6*405*10^9*390*10^6*4 = 3.7908e+21

989500000000000*2086*3600*0.3 = 2.2292248e+21

sqrt(2.2292248e+21*3.7908e+21) = 2.9069822e+21",,,,,,
Grok-2,"Language,Vision,Multimodal",xAI,Industry,,2024-08-13,Grok-2 Beta Release,https://x.ai/blog/grok-2,,Training cost,,,,2.9599999999999996e+25,2.1e+25,,Estimate based on xAI statements comparing Grok-2 compute to GPT-4 and Grok-3. Full estimate here: https://docs.google.com/document/d/1C_dABuZrAqYE_ui4_GZ4bRLtq3TBjIGoBSktaPElhEU/edit?usp=sharing,Unspecified unreleased,,,,,,,NVIDIA H100 SXM5 80GB,,,Grok-2 is our frontier language model with state-of-the-art reasoning capabilities. This release includes two members of the Grok family: Grok-2 and Grok-2 mini. Both models are now being released to Grok users on the 𝕏 platform.,,Hosted access (no API),,Confident,2025-02-20 16:33:14+00:00,United States of America,,,,,,,,,
Grok-2 mini,"Language,Vision,Multimodal",xAI,Industry,,2024-08-13,Grok-2 Beta Release,https://x.ai/blog/grok-2,,,,,,,,,,,,,,,,,,,,Grok-2 is our frontier language model with state-of-the-art reasoning capabilities. This release includes two members of the Grok family: Grok-2 and Grok-2 mini. Both models are now being released to Grok users on the 𝕏 platform.,,Hosted access (no API),,Unknown,2024-12-30 16:38:45+00:00,United States of America,,,,,,,,,
Cosine Genie,Language,Cosine,Industry,Alistair Pullen,2024-08-12,Genie is the best software engineering model in the world scoring a state-of-the-art score of 30.08% on the SWE-Bench evaluation and 50.67% on SWE-Lite.,https://cosine.sh/blog/genie-technical-report,,,,,,,,,,Unspecified unreleased,"Genie was trained on proprietary data that codifies human reasoning, representing perfect information lineage, incremental knowledge discovery, and step by step decision making derived from real examples of Software Engineers doing their jobs.",,,,,,,,,"Genie is the best AI software engineer in the world by far - achieving a 30% eval score on the industry standard benchmark SWE-Bench.

Genie is able to solve bugs, build features, refactor code, and everything in between either fully autonomously or paired with the user, like working with a colleague, not just a copilot.

If you wish to talk to us about our model feel free to reach out.",,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Falcon Mamba,Language,Technology Innovation Institute,Government,"Jingwei Zuo, Maksim Velikanov, Dhia Eddine Rhaiem,  Ilyas Chahed,  Younes Belkada, Guillaume Kunsch, Hakim Hacid",2024-08-12,Falcon Mamba: The First Competitive Attention-free 7B Language Model,https://huggingface.co/tiiuae/falcon-mamba-7b,,,,7000000000.0,,5.3269955e+22,,,133800000000000*1440*3600*256*0.3=5.3269955e+22,RefinedWeb,,,"""Falcon Mamba was trained with ~ 5500GT of data, mainly composed of RefinedWeb data with addition of high-quality technical data and code data from public sources.""

""Batch size	2048""
""Sequence length	8192	During the last training stages""",,1440.0,"""Falcon-Mamba-7B was trained on 256 H100 80GB GPUs for the majority of the training, using a 3D parallelism strategy (TP=1, PP=1, DP=256) combined with ZeRO.""

""The model training took roughly two months.""

30*2*24=1440 hours",NVIDIA H100 SXM5 80GB,256.0,,Falcon Mamba is a new model by Technology Innovation Institute (TII) in Abu Dhabi released under the TII Falcon Mamba 7B License 1.0. The model is open access and available within the Hugging Face ecosystem here for anyone to use for their research or application purposes.,,Open weights (unrestricted),,Confident,2024-11-11 01:59:08+00:00,United Arab Emirates,,,,,,,,,
"P-Mistral, P-Llama2, P-LLama3, P-gemma",Biology,University of Siena,,"Kamyar Zeinalipour, Neda Jamshidi, Monica Bianchini, Marco Maggini, Marco Gori",2024-08-12,Design Proteins Using Large Language Models: Enhancements and Comparative Analyses,https://arxiv.org/abs/2408.06396,0.0,,,,,1.400000000000012e+18,,,"1. Hardware: 4x NVIDIA RTX A6000 (3.87×10¹³ FLOPs/s per GPU)
2. Training duration: 6.28 hours (estimated from total FLOPs divided by effective FLOPs/s)
3. Utilization: 40%
4. Calculation: 2000 steps × 16 grad_accum × 12 FLOPs/param/token × 7×10⁹ params × 512 tokens = 1.4×10¹⁸ FLOPs",,,21500001.0,"42,000 protein sequences × 512 tokens/sequence = 21,504,000 total tokens (2.15 × 10⁷ datapoints)",,,,,,,"Pre-trained LLMs have demonstrated substantial capabilities across a range of conventional natural language processing (NLP) tasks, such as summarization and entity recognition. In this paper, we explore the application of LLMs in the generation of high-quality protein sequences. Specifically, we adopt a suite of pre-trained LLMs, including Mistral-7B1, Llama-2-7B2, Llama-3-8B3, and gemma-7B4, to produce valid protein sequences. All of these models are publicly available.5 Unlike previous work in this field, our approach utilizes a relatively small dataset comprising 42,000 distinct human protein sequences. We retrain these models to process protein-related data, ensuring the generation of biologically feasible protein structures. Our findings demonstrate that even with limited data, the adapted models exhibit efficiency comparable to established protein-focused models such as ProGen varieties, ProtGPT2, and ProLLaMA, which were trained on millions of protein sequences. To validate and quantify the performance of our models, we conduct comparative analyses employing standard metrics such as pLDDT, RMSD, TM-score, and REU. Furthermore, we commit to making the trained versions of all four models publicly available, fostering greater transparency and collaboration in the field of computational biology.",,,,Unverified,2025-02-14 19:12:05+00:00,Italy,,,,,,,,,
PepMLM,Biology,"Duke University,Cornell University,McMaster University","Academia,Academia,Academia","Tianlai Chen, Madeleine Dumas, Rio Watson, Sophia Vincoff, Christina Peng, Lin Zhao, Lauren Hong, Sarah Pertsemlidis, Mayumi Shaepers-Cheu, Tian Zi Wang, Divya Srijay, Connor Monticello, Pranay Vure, Rishab Pulugurta, Kseniia Kholina, Shrey Goel, Matthew P DeLisa, Ray Truant, Hector C Aguilar, Pranam Chatterjee",2024-08-11,PepMLM: Target Sequence-Conditioned Generation of Therapeutic Peptide Binders via Span Masked Language Modelin,https://pmc.ncbi.nlm.nih.gov/articles/PMC10593082/,,,,,,,,,,,,,,,,,,,,"Target proteins that lack accessible binding pockets and conformational stability have posed increasing challenges for drug development. Induced proximity strategies, such as PROTACs and molecular glues, have thus gained attention as pharmacological alternatives, but still require small molecule docking at binding pockets for targeted protein degradation. The computational design of protein-based binders presents unique opportunities to access ""undruggable"" targets, but have often relied on stable 3D structures or structure-influenced latent spaces for effective binder generation. In this work, we introduce PepMLM, a target sequence-conditioned generator of de novo linear peptide binders. By employing a novel span masking strategy that uniquely positions cognate peptide sequences at the C-terminus of target protein sequences, PepMLM fine-tunes the state-of-the-art ESM-2 pLM to fully reconstruct the binder region, achieving low perplexities matching or improving upon validated peptide-protein sequence pairs. After successful in silico benchmarking with AlphaFold-Multimer, outperforming RFDiffusion on structured targets, we experimentally verify PepMLM's efficacy via fusion of model-derived peptides to E3 ubiquitin ligase domains, demonstrating endogenous degradation of emergent viral phosphoproteins and Huntington's disease-driving proteins. In total, PepMLM enables the generative design of candidate binders to any target protein, without the requirement of target structure, empowering downstream therapeutic applications.",,,,Unverified,2024-10-27 18:05:24+00:00,"United States of America,United States of America,Canada",,,,,,,,,
Qwen2-Math-1.5B,,,,,2024-08-09,"通义千问开源数学模型Qwen2-Math，数学能力超越GPT-4o
",https://www.leiphone.com/category/industrynews/PKgf4LFVtF7yjz29.html,,,,1500000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Qwen2-Math-72B,,,,,2024-08-09,"通义千问开源数学模型Qwen2-Math，数学能力超越GPT-4o
",https://www.leiphone.com/category/industrynews/PKgf4LFVtF7yjz29.html,,,,72000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Qwen2-Math-7B,,,,,2024-08-09,"通义千问开源数学模型Qwen2-Math，数学能力超越GPT-4o
",https://www.leiphone.com/category/industrynews/PKgf4LFVtF7yjz29.html,,,,7000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
3-ensemble of Self-ensembles on CIFAR-100,Vision,Google DeepMind,Industry,"Stanislav Fort, Balaji Lakshminarayanan",2024-08-08,Ensemble everything everywhere: Multi-scale aggregation for adversarial robustness,https://www.arxiv.org/abs/2408.05446,,,,60200000.0,as in resnet-152,,,,,CIFAR-100,,204000000.0,"""We focused on the CIFAR-* datasets (Krizhevsky, 2009; Krizhevsky et al.) that comprise 50,000 32 × 32 × 3 images. We arbitrarily chose 𝑁 = 4 and the resolutions we used are 32 × 32, 16 × 16, 8 × 8, 4 × 4 (see Figure 3).""

Assuming (!) each image (32×32+16×16+8×8+4×4)×3 = 4080 tokens
then the entire dataset was 50,000*4080 = 204000000 tokens",13.0,,,NVIDIA A100,,,"Adversarial examples pose a significant challenge to the robustness, reliability and alignment of deep neural networks. We propose a novel, easy-to-use approach to achieving high-quality representations that lead to adversarial robustness through the use of multi-resolution input representations and dynamic self-ensembling of intermediate layer predictions. We demonstrate that intermediate layer predictions exhibit inherent robustness to adversarial attacks crafted to fool the full classifier, and propose a robust aggregation mechanism based on Vickrey auction that we call \textit{CrossMax} to dynamically ensemble them. By combining multi-resolution inputs and robust ensembling, we achieve significant adversarial robustness on CIFAR-10 and CIFAR-100 datasets without any adversarial training or extra data, reaching an adversarial accuracy of ≈72% (CIFAR-10) and ≈48% (CIFAR-100) on the RobustBench AutoAttack suite (L∞=8/255) with a finetuned ImageNet-pretrained ResNet152. This represents a result comparable with the top three models on CIFAR-10 and a +5 % gain compared to the best current dedicated approach on CIFAR-100. Adding simple adversarial training on top, we get ≈78% on CIFAR-10 and ≈51% on CIFAR-100, improving SOTA by 5 % and 9 % respectively and seeing greater gains on the harder dataset. We validate our approach through extensive experiments and provide insights into the interplay between adversarial robustness, and the hierarchical nature of deep representations. We show that simple gradient-based attacks against our model lead to human-interpretable images of the target classes as well as interpretable image changes. As a byproduct, using our multi-resolution prior, we turn pre-trained classifiers and CLIP models into controllable image generators and develop successful transferable attacks on large vision language models.",,,,Likely,2024-12-02 15:22:11+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",ResNet-152 (ImageNet),9.579024e+17,6ND = 6*60200000*204000000*13 = 9.579024e+17,,,,,,
EXAONE 3.0,Language,LG AI Research,Industry,"LG AI Research: Soyoung An, Kyunghoon Bae, Eunbi Choi, Stanley Jungkyu Choi, Yemuk Choi, Seokhee Hong, Yeonjung Hong, Junwon Hwang, Hyojin Jeon, Gerrard Jeongwon Jo, Hyunjik Jo, Jiyeon Jung, Yountae Jung, Euisoon Kim, Hyosang Kim, Joonkee Kim, Seonghwan Kim, Soyeon Kim, Sunkyoung Kim, Yireun Kim, Youchul Kim, Edward Hwayoung Lee, Haeju Lee, Honglak Lee, Jinsik Lee, Kyungmin Lee, Moontae Lee, Seungjun Lee, Woohyung Lim, Sangha Park, Sooyoun Park, Yongmin Park, Boseong Seo, Sihoon Yang, Heuiyeen Yeen, Kyungjae Yoo, Hyeongu Yun",2024-08-07,EXAONE 3.0 7.8B Instruction Tuned Language Model,https://arxiv.org/abs/2408.03541,,,,7820000000.0,7.8B,4e+23,,,"6ND = 6*7.8B parameters *8T tokens  = 3.744e+23

""EXAONE language models were trained using Google Cloud Platform and a cluster powered by NVIDIA H100 GPUs and NVIDIA NeMo Framework. Then, they were optimized by NVIDIA TensorRT-LLM. The total amount of computation used for model training was about 4 × 1023 FLOPS""",Unspecified unreleased,"8T training data (tokens)

the token per word ration is 2.46 and given in the paper",8000000000000.0,,,,,NVIDIA H100 SXM5 80GB,,,"We introduce EXAONE 3.0 instruction-tuned language model, the first open model in the family of Large Language Models (LLMs) developed by LG AI Research. Among different model sizes, we publicly release the 7.8B instruction-tuned model to promote open research and innovations. Through extensive evaluations across a wide range of public and in-house benchmarks, EXAONE 3.0 demonstrates highly competitive real-world performance with instruction-following capability against other state-of-the-art open models of similar size. Our comparative analysis shows that EXAONE 3.0 excels particularly in Korean, while achieving compelling performance across general tasks and complex reasoning. With its strong real-world effectiveness and bilingual proficiency, we hope that EXAONE keeps contributing to advancements in Expert AI. Our EXAONE 3.0 instruction-tuned model is available at this https URL",,Open weights (non-commercial),,Confident,2025-03-11 19:05:51+00:00,Korea (Republic of),,,,,,,,,
Table Tennis Agent,Robotics,Google DeepMind,Industry,"David B. D'Ambrosio, Saminda Abeyruwan, Laura Graesser, Atil Iscen, Heni Ben Amor, Alex Bewley, Barney J. Reed, Krista Reymann, Leila Takayama, Yuval Tassa, Krzysztof Choromanski, Erwin Coumans, Deepali Jain, Navdeep Jaitly, Natasha Jaques, Satoshi Kataoka, Yuheng Kuang, Nevena Lazic, Reza Mahjourian, Sherry Moore, Kenneth Oslund, Anish Shankar, Vikas Sindhwani, Vincent Vanhoucke, Grace Vesom, Peng Xu, and Pannag R. Sanketi",2024-08-07,Achieving Human Level Competitive Robot Table Tennis,https://deepmind.google/research/publications/107741/,,SOTA improvement,"""first learned robot agent that reaches amateur human-level performance in competitive table tennis""",185000.0,"17 low level controllers with 10k parameters each: 
""Each policy is a dilated-gated CNN
[22] following the architecture in [23] with 10k parameters... The final
system contained 17 LLCs""

One high-level controller with 4.5k parameters: ""The style policy architecture, similar to the LLC but with
only 4.5k parameters, has a (8, 128) observation space""

spin classifier that is a 2-layer MLP of hidden sizes (128, 64) and input size 18, which is 10k parameters per o1 and Claude.

So ~185k parameters total",,,,unclear,,"Trained in simulation via reinforcement learning with feedback from real world

""This iterative cycle of training models in simulation on
the latest dataset, evaluating it in the real world, and using
the annotated evaluation data to extend the dataset, can be
repeated as many times as needed. We completed 7 cycles
for rally balls and 2 cycles for serving balls over the course
of 3 months with over 50 different human opponents, leading
to a final dataset size of 14.2k initial ball states for rallies
and 3.4k for serves. A summary of the dataset evolution is
presented in Table I and Figure 6.""",,"~18k ball states

""This iterative cycle of training models in simulation on
the latest dataset, evaluating it in the real world, and using
the annotated evaluation data to extend the dataset, can be
repeated as many times as needed. We completed 7 cycles
for rally balls and 2 cycles for serving balls over the course
of 3 months with over 50 different human opponents, leading
to a final dataset size of 14.2k initial ball states for rallies
and 3.4k for serves. A summary of the dataset evolution is
presented in Table I and Figure 6.""",,,,,,Reinforcement learning,"Achieving human-level speed and performance on real world tasks is a north star for the robotics research community. This work takes a step towards that goal and presents the first learned robot agent that reaches amateur human-level performance in competitive table tennis. Table tennis is a physically demanding sport which requires human players to undergo years of training to achieve an advanced level of proficiency. In this paper, we contribute (1) a hierarchical and modular policy architecture consisting of (i) low level controllers with their detailed skill descriptors which model the agent's capabilities and help to bridge the sim-to-real gap and (ii) a high level controller that chooses the low level skills, (2) techniques for enabling zero-shot sim-to-real including an iterative approach to defining the task distribution that is grounded in the real-world and defines an automatic curriculum, and (3) real time adaptation to unseen opponents. Policy performance was assessed through 29 robot vs. human matches of which the robot won 45% (13/29). All humans were unseen players and their skill level varied from beginner to tournament level. Whilst the robot lost all matches vs. the most advanced players it won 100% matches vs. beginners and 55% matches vs. intermediate players, demonstrating solidly amateur human-level performance. Videos of the matches can be viewed at this https URL",,Unreleased,,Likely,2024-09-26 15:52:10+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
MiniCPM-V 2.6,"Vision,Language,Video",OpenBMB (Open Lab for Big Model Base),,,2024-08-06,"A GPT-4V Level MLLM for Single Image, Multi Image and Video on Your Phone",https://huggingface.co/openbmb/MiniCPM-V-2_6,,,,8000000000.0,8b,,,,,,,,"from MiniCPM-Llama3-V (previous model from the series) paper (https://arxiv.org/pdf/2408.01800)

Stage 1. 224*224 resolution. ""200M data from the Image Captioning data in Table 1.""

Stage-2. 448*448 resolution. ""we additionally select 200M data from the Image Captioning data in Table 1.""

Stage 3. ""Different from the previous stages with only image captioning data, during the highresolution pre-training stage, we additionally introduce OCR data to enhance the visual encoders’
OCR capability""",,,,,,,"The latest and most capable model in the MiniCPM-V series. With a total of 8B parameters, the model surpasses GPT-4V in single image, multi-image and video understanding. It outperforms GPT-4o mini, Gemini 1.5 Pro and Claude 3.5 Sonnet in single image understanding, and advances MiniCPM-Llama3-V 2.5's features such as strong OCR capability, trustworthy behavior, multilingual support, and end-side deployment. Due to its superior token density, MiniCPM-V 2.6 can for the first time support real-time video understanding on end-side devices such as iPad.",,Open weights (restricted use),,Confident,2024-12-09 19:01:54+00:00,China,,,,,,,,,
Flux.1 [pro],Image generation,Black Forest Labs,Industry,"Andreas Blattmann, Axel Sauer, Dominik Lorenz, Dustin Podell, Frederic Boesel, Harry Saini, Jonas Müller, Kyle Lacey, Patrick Esser, Robin Rombach, Sumith Kulal, Tim Dockhorn, Yam Levi, Zion English",2024-08-01,Flux.1,https://blackforestlabs.ai/announcing-black-forest-labs/ ,,,Plausibly significant usage.,12000000000.0,"""All public FLUX.1 models are based on a hybrid architecture of multimodal and parallel diffusion transformer blocks and scaled to 12B parameters.""",,,,,Unspecified unreleased,,,,,,,,,,,,API access,,Confident,2024-12-16 19:38:10+00:00,Germany,,,,,,,,,
Flux.1 [dev],Image generation,Black Forest Labs,Industry,"Andreas Blattmann, Axel Sauer, Dominik Lorenz, Dustin Podell, Frederic Boesel, Harry Saini, Jonas Müller, Kyle Lacey, Patrick Esser, Robin Rombach, Sumith Kulal, Tim Dockhorn, Yam Levi, Zion English",2024-08-01,Flux.1,https://blackforestlabs.ai/announcing-black-forest-labs/ ,,,"Plausibly significant usage.

Currently the image generator used in the X Grok integra",12000000000.0,"12 billion parameters, guidance-distilled from Flux.1 [pro]",,,,"No details given, but this is guidance-distilled from Flux.1 [pro]. See https://arxiv.org/pdf/2210.03142 for details on guidance distillation.",Unspecified unreleased,,,,,,,,,,,,Open weights (non-commercial),,Confident,2024-12-16 19:38:07+00:00,Germany,,,,,,,,,
OmniParser: Interactable Region Detection Model,Vision,Microsoft Research,Industry,"Yadong Lu, Jianwei Yang, Yelong Shen, Ahmed Awadallah",2024-08-01,OmniParser for Pure Vision Based GUI Agent,https://arxiv.org/abs/2408.00203,,,,,,,,,,,"""Training Datasets include: 1) an interactable icon detection dataset, which was curated from popular web pages and automatically annotated to highlight clickable and actionable regions, and 2) an icon description dataset, designed to associate each UI element with its corresponding function.""",63641.0,"""We collect in total of 66990 samples where we split 95% (63641) for training, and 5% (3349) for validation. We train for 20 epochs with batch size of 256, learning rate of 1e−3, and the Adam
optimizer on 4 GPUs.""",20.0,,,,4.0,,"The recent success of large vision language models shows great potential in driving the agent system operating on user interfaces. However, we argue that the power multimodal models like GPT-4V as a general agent on multiple operating systems across different applications is largely underestimated due to the lack of a robust screen parsing technique capable of: 1) reliably identifying interactable icons within the user interface, and 2) understanding the semantics of various elements in a screenshot and accurately associate the intended action with the corresponding region on the screen. To fill these gaps, we introduce \textsc{OmniParser}, a comprehensive method for parsing user interface screenshots into structured elements, which significantly enhances the ability of GPT-4V to generate actions that can be accurately grounded in the corresponding regions of the interface. We first curated an interactable icon detection dataset using popular webpages and an icon description dataset. These datasets were utilized to fine-tune specialized models: a detection model to parse interactable regions on the screen and a caption model to extract the functional semantics of the detected elements. \textsc{OmniParser} significantly improves GPT-4V's performance on ScreenSpot benchmark. And on Mind2Web and AITW benchmark, \textsc{OmniParser} with screenshot only input outperforms the GPT-4V baselines requiring additional information outside of screenshot.",,Open weights (unrestricted),,Unverified,2024-11-04 20:29:16+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",YOLOv8x,,,,,,,,
OmniParser: Icon Description Model,Vision,Microsoft Research,Industry,"Yadong Lu, Jianwei Yang, Yelong Shen, Ahmed Awadallah",2024-08-01,OmniParser for Pure Vision Based GUI Agent,https://arxiv.org/abs/2408.00203,,,,,,,,,,,,7185.0,"""We finetune BLIP-2 model for 1 epoch on the generated dataset with constant learning rate of 1e−5 ,no weight decay and Adam optimizer. ""

""We we curate a dataset of 7k icon-description pairs using GPT-4o, and finetune a BLIP-v2 model [LLSH23] on this dataset""

""we collected 7185 icon-description pairs for finetuning""",1.0,,,,,,"The recent success of large vision language models shows great potential in driving the agent system operating on user interfaces. However, we argue that the power multimodal models like GPT-4V as a general agent on multiple operating systems across different applications is largely underestimated due to the lack of a robust screen parsing technique capable of: 1) reliably identifying interactable icons within the user interface, and 2) understanding the semantics of various elements in a screenshot and accurately associate the intended action with the corresponding region on the screen. To fill these gaps, we introduce \textsc{OmniParser}, a comprehensive method for parsing user interface screenshots into structured elements, which significantly enhances the ability of GPT-4V to generate actions that can be accurately grounded in the corresponding regions of the interface. We first curated an interactable icon detection dataset using popular webpages and an icon description dataset. These datasets were utilized to fine-tune specialized models: a detection model to parse interactable regions on the screen and a caption model to extract the functional semantics of the detected elements. \textsc{OmniParser} significantly improves GPT-4V's performance on ScreenSpot benchmark. And on Mind2Web and AITW benchmark, \textsc{OmniParser} with screenshot only input outperforms the GPT-4V baselines requiring additional information outside of screenshot.",,Open weights (unrestricted),,Unverified,2024-11-04 20:23:57+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",BLIP-2 (Q-Former),,,,,,,,
BaiLing TTS,Speech,Ant Group,Industry,"Xinhan Di, Zihao Chen, Yunming Liang, Junjie Zheng, Yihua Wang, Chaofan Ding",2024-08-01,Bailing-TTS: Chinese Dialectal Speech Synthesis Towards Human-like Spontaneous Representation,https://arxiv.org/abs/2408.00284v1,,,,,,,,,,Unspecified unreleased,"""A custom dataset containing high-quality Mandarin and multiple Chinese dialects data is used for
the training, inference and evaluation. This dataset contains 200k hours of labeled speech data.
The annotation contains fine-grained labels between text and speech modalities. In addition, this
large-scale dataset contains high-quality speech-text pairs. Furthermore, this custom Chinese dialect dataset is used for the pre-training stage of the continual semi-supervised learning""",,,,,,NVIDIA A100,,,"Large-scale text-to-speech (TTS) models have made significant progress this http URL, they still fall short in the generation of Chinese dialectal speech. Toaddress this, we propose Bailing-TTS, a family of large-scale TTS models capable of generating high-quality Chinese dialectal speech. Bailing-TTS serves as a foundation model for Chinese dialectal speech generation. First, continual semi-supervised learning is proposed to facilitate the alignment of text tokens and speech tokens. Second, the Chinese dialectal representation learning is developed using a specific transformer architecture and multi-stage training processes. With the proposed design of novel network architecture and corresponding strategy, Bailing-TTS is able to generate Chinese dialectal speech from text effectively and efficiently. Experiments demonstrate that Bailing-TTS generates Chinese dialectal speech towards human-like spontaneous representation. Readers are encouraged to listen to demos at \url{this https URL}.",,Unreleased,,Unknown,2024-12-02 19:29:37+00:00,China,,,,,,,,,
EPInformer,Biology,"The University of Hong Kong,Harvard Medical School","Academia,Academia","Jiecong Lin, Ruibang Luo, Luca Pinello",2024-08-01,EPInformer: a scalable deep learning framework for gene expression prediction by integrating promoter-enhancer sequences with multimodal epigenomic data,https://www.biorxiv.org/content/10.1101/2024.08.01.606099v1,2.0,,,,,,,,,,,,,,,,,,,"Transcriptional regulation, critical for cellular differentiation and adaptation to environmental changes, involves coordinated interactions among DNA sequences, regulatory proteins, and chromatin architecture. Despite extensive data from consortia like ENCODE, understanding the dynamics of cis-regulatory elements (CREs) in gene expression remains challenging. Deep learning is a powerful tool for learning gene expression and epigenomic signals from DNA sequences, exhibiting superior performance compared to conventional machine learning approaches. However, even the most advanced deep learning-based methods may fall short in capturing the regulatory effects of distal elements such as enhancers, limiting their predictive accuracy. In addition, these methods may require significant resources to train or to adapt to newly generated data. To address these challenges, we present EPInformer, a scalable deep-learning framework for predicting gene expression by integrating promoter-enhancer interactions with their sequences, epigenomic signals, and chromatin contacts. Our model outperforms existing gene expression prediction models in rigorous cross-chromosome validation, accurately recapitulates enhancer-gene interactions validated by CRISPR perturbation experiments, and identifies crucial transcription factor motifs within regulatory sequences. EPInformer is available as open-source software at https://github.com/pinellolab/EPInformer.",,,,Unverified,2025-01-11 22:34:00+00:00,"Hong Kong,China,United States of America",,,,,,,,,
InternLM2.5,Language,Shanghai AI Lab,Academia,,2024-08-01,InternLM2.5-20B Model Card,https://github.com/InternLM/InternLM/blob/main/model_cards/internlm2.5_20b.md,,,,20000000000.0,20b,,,,,,,,,,,,,,,"InternLM2.5, the 2.5th generation InternLM, has open-sourced a 20 billion parameter base model and a chat model tailored for practical scenarios. For the convenience of users and researchers, we have open-sourced two versions of each scale of the model, which are:

InternLM2.5-20B: Further pretrain with general domain data and domain-enhanced corpus, obtaining state-of-the-art performance in evaluation with good language capability. InternLM2.5 models are recommended for consideration in most applications.
InternLM2.5-chat-20B: Further aligned on top of InternLM2.5 through supervised fine-tuning (SFT) and online RLHF. InternLM2.5-Chat exhibits better instruction following, chat experience, and function calling, which is recommended for downstream applications.
The model has the following characteristics:

Outstanding reasoning capability: State-of-the-art performance on Math reasoning, surpassing models like Llama3 and Gemma2-27B.

Stronger tool use: InternLM2.5 supports gathering information from more than 100 web pages, corresponding implementation has be released in MindSearch. InternLM2.5 has better tool utilization-related capabilities in instruction following, tool selection and reflection. See examples.",,Open weights (restricted use),,Confident,2025-02-07 18:56:39+00:00,China,,,,,,,,,
Midjourney V6.1,Image generation,Midjourney,Industry,,2024-07-30,,https://updates.midjourney.com/version-6-1/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"More coherent images (arms, legs, hands, bodies, plants, animals, etc)
Much better image quality (reduced pixel artifacts, enhanced textures, skin, etc)
More precise, detailed, and correct small image features (eyes, small faces, far away hands, etc)
New 2x upscalers with much better image / texture quality
Roughly 25% faster for standard image jobs
Improved text accuracy (when drawing words via “quotations” in prompts)
A new personalization model with improved nuance, surprise, and accuracy
Personalization code versioning (use any personalization code from old jobs to use the personalization model and data from that job)
A new --q 2 mode which takes 25% longer to (sometimes) add more texture at the cost of reduced image coherence
Things should look “generally more beautiful” across the board",,Hosted access (no API),,Unknown,2025-01-06 18:32:05+00:00,United States of America,,,,,,,,,
AFM-on-device,Language,Apple,Industry,"Andy Narayanan, Aonan Zhang, Bowen Zhang, Chen Chen, Chong Wang, Chung-Cheng Chiu, David Qiu, Deepak Gopinath, Dian Ang Yap, Dong Yin, Feng Nan, Floris Weers, Guoli Yin, Haoshuo Huang, Jianyu Wang, Jiarui Lu, John Peebles, Ke Ye, Mark Lee, Nan Du, Qibin Chen, Quentin Keunebroek, Ruoming Pang, Sam Wiseman, Syd Evans, Tao Lei, Tom Gunter, Vivek Rathod, Xiang Kong, Xianzhi Du, Yanghao Li, Yongqiang Wang, Yuan Gao, Zaid Ahmed, Zhaoyang Xu, Zhiyun Lu, Zirui Wang, Al Rashid, Albin Madappally Jose, Alec Doane, Alfredo Bencomo, Allison Vanderby, Andrew Hansen, Ankur Jain, Anupama Mann Anupama, Areeba
Kamal, Bugu Wu, Carolina Brum, Charlie Maalouf, Chinguun Erdenebileg,
Chris Dulhanty, Dominik Moritz, Doug Kang, Eduardo Jimenez, Evan Ladd,
Fangping Shi, Felix Bai, Frank Chu, Fred Hohman, Hadas Kotek, Hannah
Gillis Coleman, Jane Li, Jeffrey Bigham, Jeffery Cao, Jeff Lai, Jessica Cheung, Jiulong Shan, Joe Zhou, John Li, Jun Qin, Karanjeet Singh, Karla Vega, Ke Ye, Kelvin Zou, Laura Heckman, Lauren Gardiner, Margit Bowler, Mark Lee, Maria Cordell, Meng Cao, Nicole Hay, Nilesh Shahdadpuri, Otto Godwin, Pranay Dighe, Pushyami Rachapudi, Ramsey Tantawi, Roman Frigg, Sam Davarnia, Sanskruti Shah, Saptarshi Guha, Sasha Sirovica, Shen Ma, Shuang Ma, Simon Wang, Sulgi Kim, Suma Jayaram, Vaishaal Shankar, Varsha Paidi, Vivek Kumar, Xiang Kong, Xin Wang, Xin Zheng, Walker Cheng, Yael Shrager, Yang Ye, Yasu Tanaka, Yihao Guo, Yunsong Meng, Zhao Tang Luo, Zhi Ouyang, Zhiyun Lu, Alp Aygar, Alvin Wan, Andrew Walkingshaw, Andy Narayanan, Antonie Lin, Arsalan Farooq, Brent Ramerth, Chong Wang, Colorado Reed, Chris Bartels, Chris Chaney, David Riazati, Eric Liang Yang, Erin Feldman, Gabriel Hochstrasser, Guillaume Seguin, Guoli Yin, Irina Belousova, Jianyu Wang, Joris Pelemans, Karen Yang, Keivan Alizadeh Vahid, Liangliang Cao, Mahyar Najibi , Marco Zuliani, Max Horton, Minsik Cho, Nikhil Bhendawade, Patrick Dong, Piotr Maj, Pulkit Agrawal, Qi Shan, Qibin Chen, Qichen Fu, Regan Poston, Sam Xu, Shuangning Liu, Sushma Rao, Tashweena Heeramun, Thomas Merth, Uday Rayala, Victor Cui, Vivek Rangarajan Sridhar, Vivek Rathod, Wencong Zhang, Wenqi Zhang, Wentao Wu, Xiang Kong, Xingyu Zhou, Xinwen Liu, Yang Zhao, Yin Xia, Zhile Ren, Zhongzheng Ren",2024-07-29,Apple Intelligence Foundation Language Models,https://machinelearning.apple.com/research/apple-intelligence-foundation-language-models,,Significant use,"Currently in beta access only, but will be integrated into millions or billions of iPhones.",2730000000.0,"Table 1, sum of non-embedding and embedding parameters",4.5126e+23,,,"Model was initialized from a pruned version of a 6.4B parameter model trained using the same recipe as AFM-server. Assuming ""same recipe"" involves training for the full 6.3T tokens, this implies 6 * 6.3T * 6.4B = 2.42e23 FLOP. 

The pruning masks are learned by training over 188B tokens, which suggests 6 * 188B * 6.4B = 7.22e21 FLOPs.

Pretraining is then run over 6.3T tokens; however, labels are a convex combination of true labels and the predicted labels from the unpruned 6.4B model. Since this involves running the 6.3T tokens forward through both the 6.4B and the 2.73B model, but only calculating gradients for the smaller model, FLOPs here are equal to (6 * 6.3T * 2.73B) + (2 * 6.3T * 6.4B) = 1.84e23. 

Finally, there is a 1T ""continuation"" pretraining stage without distillation loss, for 6 * 1T * 2.73B = 1.64e22 FLOP, and a 100B context-lengthening stage for another 6 * 100B * 2.73B = 1.64e21 FLOP

In total: 2.42e23 + 7.22e21 + 1.84e23 + 1.64e22 + 1.64e21 = 4.51e23 FLOP",,"188B of tokens are used to train a pruning mask to reduce a 6.4B model to the 2.73B used for AFM-on-device. Main pre-training data is 6.3T tokens of web text, code, and math, plus another 1T in the second pre-training stage and 100B in the third. See section 3.1 for details. Post-training details do not give details on dataset size.",7588000000000.0,"Not explicitly mentioned, but I assume the 7.588T tokens do not involve multiple epochs.",1.0,,"Trained on ""one slice of 2048 TPUv5p chips""; wall-time not given.",Google TPU v5p,2048.0,Self-supervised learning,"We present foundation language models developed to power Apple Intelligence features, including a ∼3 billion parameter model designed to run efficiently on devices and a large server-based language model designed for Private Cloud Compute [Apple, 2024b]. These models are designed to perform a wide range of tasks efficiently, accurately, and responsibly. This report describes the model architecture, the data used to train the model, the training process, how the models are optimized for inference, and the evaluation results. We highlight our focus on Responsible AI and how the principles are applied throughout the model development.",,Hosted access (no API),0.52,Confident,2024-10-11 15:50:06+00:00,United States of America,,,,Google Cloud,Google us-east (either us-east1 or us-east5),,18949752.5758905,"Main pretraining uses sequence length of 4096 tokens; 4096 sequences per batch. During the ""continued"" pre-training stage, sequence length is upped to 8192 while batch size remains 4096. During context lengthening, sequence length is upped to 32768 while ""the recipe is similar to that used for continued pre-training"" implies same batch size of 4096.

Weighting batch sizes by number of tokens seen in each stage:

exp((6.3T * ln(4096 * 4096) + 1T * ln(8192 * 4096) + 100B * ln(32768 * 4096))/ 7.4T) = 18,949,753",
AFM-server,Language,Apple,Industry,"Andy Narayanan, Aonan Zhang, Bowen Zhang, Chen Chen, Chong Wang, Chung-Cheng Chiu, David Qiu, Deepak Gopinath, Dian Ang Yap, Dong Yin, Feng Nan, Floris Weers, Guoli Yin, Haoshuo Huang, Jianyu Wang, Jiarui Lu, John Peebles, Ke Ye, Mark Lee, Nan Du, Qibin Chen, Quentin Keunebroek, Ruoming Pang, Sam Wiseman, Syd Evans, Tao Lei, Tom Gunter, Vivek Rathod, Xiang Kong, Xianzhi Du, Yanghao Li, Yongqiang Wang, Yuan Gao, Zaid Ahmed, Zhaoyang Xu, Zhiyun Lu, Zirui Wang, Al Rashid, Albin Madappally Jose, Alec Doane, Alfredo Bencomo, Allison Vanderby, Andrew Hansen, Ankur Jain, Anupama Mann Anupama, Areeba
Kamal, Bugu Wu, Carolina Brum, Charlie Maalouf, Chinguun Erdenebileg,
Chris Dulhanty, Dominik Moritz, Doug Kang, Eduardo Jimenez, Evan Ladd,
Fangping Shi, Felix Bai, Frank Chu, Fred Hohman, Hadas Kotek, Hannah
Gillis Coleman, Jane Li, Jeffrey Bigham, Jeffery Cao, Jeff Lai, Jessica Cheung, Jiulong Shan, Joe Zhou, John Li, Jun Qin, Karanjeet Singh, Karla Vega, Ke Ye, Kelvin Zou, Laura Heckman, Lauren Gardiner, Margit Bowler, Mark Lee, Maria Cordell, Meng Cao, Nicole Hay, Nilesh Shahdadpuri, Otto Godwin, Pranay Dighe, Pushyami Rachapudi, Ramsey Tantawi, Roman Frigg, Sam Davarnia, Sanskruti Shah, Saptarshi Guha, Sasha Sirovica, Shen Ma, Shuang Ma, Simon Wang, Sulgi Kim, Suma Jayaram, Vaishaal Shankar, Varsha Paidi, Vivek Kumar, Xiang Kong, Xin Wang, Xin Zheng, Walker Cheng, Yael Shrager, Yang Ye, Yasu Tanaka, Yihao Guo, Yunsong Meng, Zhao Tang Luo, Zhi Ouyang, Zhiyun Lu, Alp Aygar, Alvin Wan, Andrew Walkingshaw, Andy Narayanan, Antonie Lin, Arsalan Farooq, Brent Ramerth, Chong Wang, Colorado Reed, Chris Bartels, Chris Chaney, David Riazati, Eric Liang Yang, Erin Feldman, Gabriel Hochstrasser, Guillaume Seguin, Guoli Yin, Irina Belousova, Jianyu Wang, Joris Pelemans, Karen Yang, Keivan Alizadeh Vahid, Liangliang Cao, Mahyar Najibi , Marco Zuliani, Max Horton, Minsik Cho, Nikhil Bhendawade, Patrick Dong, Piotr Maj, Pulkit Agrawal, Qi Shan, Qibin Chen, Qichen Fu, Regan Poston, Sam Xu, Shuangning Liu, Sushma Rao, Tashweena Heeramun, Thomas Merth, Uday Rayala, Victor Cui, Vivek Rangarajan Sridhar, Vivek Rathod, Wencong Zhang, Wenqi Zhang, Wentao Wu, Xiang Kong, Xingyu Zhou, Xinwen Liu, Yang Zhao, Yin Xia, Zhile Ren, Zhongzheng Ren",2024-07-29,Apple Intelligence Foundation Language Models,https://machinelearning.apple.com/research/apple-intelligence-foundation-language-models,,Significant use,"Currently in beta access only, but will be integrated into millions or billions of iPhones.",,,4.3e+24,,4.3e+25,"""The AFM base models are dense decoder-only models that build on the
Transformer architecture""

""We train AFM-server from scratch for 6.3T tokens on 8192
TPUv4 chips, using a sequence length of 4096 and a batch-size of 4096 sequences.""

""For both models we perform continued pre-training at a sequence length of
8192, with another 1T tokens from a mixture that upweights math and code,
and down-weights the bulk web-crawl.""

""The sustained model-flop-utilization (MFU) for this training run was approximately 52%.""

Parameter count is not specified other than it being ""larger"" than 3 billion.

Counting FLOP: Chinchilla scaling laws would suggest 7.3T / 20 = 365B parameters. 

365B parameters * 7.3T tokens * 6 ~= 1.6e25 FLOP.

However, the attention to inference optimization in the technical report suggests a smaller size, even for this ""server"" model. One point of reference is Llama 3 70B being overtrained by a factor of 10. If this is true of AFM-server, the parameter count would be ~37B and training compute would be 1.6e24 FLOP.

GPU-time: assume a wall-clock training time of 30 days based on the current trend value for notable models.

8192 chips * 275e12 FLOP/s per chip * 0.52 utilization * 30 * 24 * 60 * 60 s ~= 3.0e24 FLOP

The geometric mean of these three estimates is 4.3e24 FLOP.",,"6.3T tokens of web text, code, and math, plus another 1T in the second stage and 100B in the third. See section 3.1 for details.",7400000000000.0,"Not explicitly mentioned, but I assume the 7.4T tokens do not involve multiple epochs.",1.0,,,Google TPU v4,8192.0,Self-supervised learning,,,Hosted access (no API),0.52,Likely,2025-02-13 20:34:24+00:00,United States of America,,,,Google Cloud,Google us-central2-b,,18949752.5758905,"Main pretraining uses sequence length of 4096 tokens; 4096 sequences per batch. During the ""continued"" pre-training stage, sequence length is upped to 8192 while batch size remains 4096. During context lengthening, sequence length is upped to 32768 while ""the recipe is similar to that used for continued pre-training"" implies same batch size of 4096.

Weighting batch sizes by number of tokens seen in each stage:

exp((6.3T * ln(4096 * 4096) + 1T * ln(8192 * 4096) + 100B * ln(32768 * 4096))/ 7.4T) = 18,949,753",
RNACG,Biology,Tsinghua University,Academia,"Letian Gao, Zhi John Lu",2024-07-29,RNACG: A Universal RNA Sequence Conditional Generation model based on Flow-Matching,https://arxiv.org/abs/2407.19838,0.0,,,,,,,,,,,,,,,,,,,"RNA plays a crucial role in diverse life processes. In contrast to the rapid advancement of protein design methods, the work related to RNA is more demanding. Most current RNA design approaches concentrate on specified target attributes and rely on extensive experimental searches. However, these methods remain costly and inefficient due to practical limitations. In this paper, we characterize all sequence design issues as conditional generation tasks and offer parameterized representations for multiple problems. For these problems, we have developed a universal RNA sequence generation model based on flow matching, namely RNACG. RNACG can accommodate various conditional inputs and is portable, enabling users to customize the encoding network for conditional inputs as per their requirements and integrate it into the generation network. We evaluated RNACG in RNA 3D structure inverse folding, 2D structure inverse folding, family-specific sequence generation, and 5'UTR translation efficiency prediction. RNACG attains superior or competitive performance on these tasks compared with other methods. RNACG exhibits extensive applicability in sequence generation and property prediction tasks, providing a novel approach to RNA sequence design and potential methods for simulation experiments with large-scale RNA sequence data.",,,,Unverified,2024-10-28 02:56:51+00:00,China,,,,,,,,,
Segment Anything Model 2,"Vision,Video",Meta AI,Industry,"Nikhila Ravi, Valentin Gabeur, Yuan-Ting Hu, Ronghang Hu, Chaitanya Ryali,  Tengyu Ma, Haitham Khedr, Roman Rädle, Chloe Rolland, Laura Gustafson, Eric Mintun, Junting Pan, Kalyan Vasudev Alwala, Nicolas Carion, Chao-Yuan Wu, Ross Girshick, Piotr Dollár, Christoph Feichtenhofer",2024-07-29,SAM 2: Segment Anything in Images and Videos,https://ai.meta.com/research/publications/sam-2-segment-anything-in-images-and-videos/,,,,,,,,,,,"Highlights
Geographically diverse, real world scenarios collected across 47 countries
Annotations include whole objects, parts, and challenging occlusions

SA-V consists of 51K diverse videos and 643K spatio-temporal segmentation masks (i.e., masklets). It is intended to be used for computer vision research for the purposes permitted under the CC by 4.0 license.

The videos were collected via a contract third-party company. Out of the 643K masklets, 191K were SAM 2 assisted manual annotation and 452K were automatically generated by SAM 2 verified by annotators.",,"pre-training: 
data SA-1B (I assume it stands for 1B)
steps ∼90k
resolution 1024
precision bfloat16
batch size 256",,,,,,,"We present Segment Anything Model 2 (SAM 2 ), a foundation model towards solving promptable visual segmentation in images and videos. We build a data engine, which improves model and data via user interaction, to collect the largest video segmentation dataset to date. Our model is a simple transformer architecture with streaming memory for real-time video processing. SAM 2 trained on our data provides strong performance across a wide range of tasks. In video segmentation, we observe better accuracy, using 3x fewer interactions than prior approaches. In image segmentation, our model is more accurate and 6x faster than the Segment Anything Model (SAM). We believe that our data, model, and insights will serve as a significant milestone for video segmentation and related perception tasks. We are releasing a version of our model, the dataset and an interactive demo.",,Open weights (unrestricted),,Unverified,2024-10-26 03:07:22+00:00,United States of America,,,,,,,,,
Florence-2-L (large),Vision,Microsoft,Industry,"Bin Xiao, Haiping Wu, Weijian Xu, Xiyang Dai, Houdong Hu, Yumao Lu, Michael Zeng, Ce Liu, Lu Yuan",2024-07-29,Florence-2: Advancing a Unified Representation for a Variety of Vision Tasks,https://arxiv.org/abs/2311.06242,,,,771000000.0,771 million,1.2406517e+22,,,6ND = 6*771000000.00*2681910200000 = 1.2406517e+22,FLD-5B,"""we codeveloped FLD-5B that consists of 5.4 billion comprehensive visual annotations on 126 million images, using an iterative strategy of automated image annotation and model
refinement""",2681910200000.0,"We train our models with a mini-batch size of 2048/3072
(base/large) and an image size of 384×384 until reaching
3 billion effective training samples. Similar to [15, 29, 64,
92, 95], we further conduct high-resolution tuning with an
image size of 768×768 for 0.5 billion samples for the base
model and 0.1 billion samples for the large model.

assuming (!) patches 14*14 and avg of 40 text tokens per image: 

3*10^9*((384/14)^2+40) + 0.1*10^9*((768/14)^2+40) = 2.6819102e+12 tokens 
(Likely confidence)",,,,,,,"We introduce Florence-2, a novel vision foundation model with a unified, prompt-based representation for a variety of computer vision and vision-language tasks. While existing large vision models excel in transfer learning, they struggle to perform a diversity of tasks with simple instructions, a capability that implies handling the complexity of various spatial hierarchy and semantic granularity. Florence-2 was designed to take text-prompt as task instructions and generate desirable results in text forms, whether it be captioning, object detection, grounding or segmentation. This multi-task learning setup demands large-scale, high-quality annotated data. To this end, we co-developed FLD-5B that consists of 5.4 billion comprehensive visual annotations on 126 million images, using an iterative strategy of automated image annotation and model refinement. We adopted a sequence-to-sequence structure to train Florence-2 to perform versatile and comprehensive vision tasks. Extensive evaluations on numerous tasks demonstrated Florence-2 to be a strong vision foundation model contender with unprecedented zero-shot and fine-tuning capabilities.",,Unreleased,,Likely,2024-12-16 19:26:45+00:00,United States of America,,,,,,,,,
Yi Vision,Vision,01.AI,Industry,,2024-07-29,Yi Vision,https://platform.01.ai/docs#models-and-pricing,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Ideal for scenarios that require analysis and interpretation of images and charts, such as image question answering, chart understanding, OCR, visual reasoning, education, research report understanding, or multilingual document reading.",,API access,,Unknown,2025-02-10 20:22:54+00:00,China,,,,,,,,,
ProRNA3D-Single,Biology,,,"Rahmatullah Roche, Sumit Tarafder,  Debswapna Bhattacharya",2024-07-28,Single-sequence protein-RNA complex structure prediction by geometric attention-enabled pairing of biological language models,https://www.biorxiv.org/content/10.1101/2024.07.27.605468v1.abstract,,,,,,1.1000000000000008e+19,,,"1. Hardware: 1x NVIDIA A100 GPU (3.12e14 FLOP/s in fp16_tensor mode)

2. Training duration: Estimated - 25 hours (100 epochs × 15 min/epoch)

3. Utilization: 40% (0.4)

4. Calculation:
3.12e14 FLOP/s × 1 GPU × 90,000 seconds × 0.4 = 1.1e19 FLOPs",,,940001.0000000008,"750 complexes × (1000 protein residues + 250 RNA nucleotides) per complex
= 750 × 1250
= 937,500 datapoints
≈ 9.4e5 datapoints",,,,,,,"Ground-breaking progress has been made in structure prediction of biomolecular assemblies, including the recent breakthrough of AlphaFold 3. However, it remains challenging for AlphaFold 3 and other state-of-the-art deep learning-based methods to accurately predict protein-RNA complex structures, in part due to the limited availability of evolutionary and structural information related to protein-RNA interactions that are used as inputs to the existing approaches. Here, we introduce ProRNA3D-single, a new deep-learning framework for protein-RNA complex structure prediction with only single-sequence input. Using a novel geometric attention-enabled pairing of biological language models of protein and RNA, a previously unexplored avenue, ProRNA3D-single enables the prediction of interatomic protein-RNA interaction maps, which are then transformed into multi-scale geometric restraints for modeling 3D structures of protein-RNA complexes via geometry optimization. Benchmark tests show that ProRNA3D-single convincingly outperforms current stateof-the-art methods including AlphaFold 3, particularly when evolutionary information is limited; and exhibits remarkable robustness and performance resilience by attaining better accuracy with only single-sequence input than what most methods can achieve even with explicit evolutionary information. Freely available at https://github.com/Bhattacharya-Lab/ProRNA3D-single, ProRNA3Dsingle should be broadly useful for modeling 3D structures of protein-RNA complexes at scale, regardless of the availability of evolutionary information.",,,,Unverified,2025-02-14 19:12:10+00:00,,,,,,,,,,
AlphaProof,Mathematics,Google DeepMind,Industry,"AlphaProof development was led by Thomas Hubert, Rishi Mehta and Laurent Sartran
AlphaProof was developed with key contributions from Hussain Masoom, Aja Huang, Miklós Z. Horváth, Tom Zahavy, Vivek Veeriah, Eric Wieser, Jessica Yung, Lei Yu, Yannick Schroecker, Julian Schrittwieser, Ottavia Bertolli, Borja Ibarz, Edward Lockhart, Edward Hughes, Mark Rowland, Grace Margand. Alex Davies and Daniel Zheng led the development of informal systems such as final answer determination, with key contributions from Iuliya Beloshapka, Ingrid von Glehn, Yin Li, Fabian Pedregosa, Ameya Velingker and Goran Žužić. Oliver Nash, Bhavik Mehta, Paul Lezeau, Salvatore Mercuri, Lawrence Wu, Calle Soenne, Thomas Murrills, Luigi Massacci and Andrew Yang advised and contributed as Lean experts. Past contributors include Amol Mandhane, Tom Eccles, Eser Aygün, Zhitao Gong, Richard Evans, Soňa Mokrá, Amin Barekatain, Wendy Shang, Hannah Openshaw, Felix Gimeno. This work was advised by David Silver and Pushmeet Kohli.",2024-07-25,"AlphaProof, a new reinforcement-learning based system for formal math reasoning",https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/,,,,,,,,,,,approximately 100M formal problems,,,,,,,,Reinforcement learning,"AlphaProof is a system that trains itself to prove mathematical statements in the formal language Lean. It couples a pre-trained language model with the AlphaZero reinforcement learning algorithm, which previously taught itself how to master the games of chess, shogi and Go.

",,,,Unknown,2024-09-05 18:08:31+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
AlphaGeometry 2,"Mathematics,Language",Google DeepMind,Industry,"AlphaGeometry 2 and natural language reasoning efforts were led by Thang Luong.

The development of AlphaGeometry 2 was led by Trieu Trinh and Yuri Chervonyi, with key contributions by Mirek Olšák, Xiaomeng Yang, Hoang Nguyen, Junehyuk Jung, Dawsen Hwang and Marcelo Menegali. The development of the natural language reasoning system was led by Golnaz Ghiasi, Garrett Bingham, YaGuang Li, with key contributions by Swaroop Mishra, Nigamaa Nayakanti, Sidharth Mudgal, Qijun Tan, Junehyuk Jung, Hoang Nguyen, Alex Zhai, Dawsen Hwang, Mingyang Deng, Clara Huiyi Hu, Jarrod Kahn, Maciej Kula, Cosmo Du.",2024-07-25,AlphaGeometry 2 is a significantly improved version of AlphaGeometry.,https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/,,,,,,,,,,,approximately 100M formal problems,,,,,,,,Reinforcement learning,"AlphaGeometry 2 is a significantly improved version of AlphaGeometry. It’s a neuro-symbolic hybrid system in which the language model was based on Gemini and trained from scratch on an order of magnitude more synthetic data than its predecessor. This helped the model tackle much more challenging geometry problems, including problems about movements of objects and equations of angles, ratio or distances.

AlphaGeometry 2 employs a symbolic engine that is two orders of magnitude faster than its predecessor. When presented with a new problem, a novel knowledge-sharing mechanism is used to enable advanced combinations of different search trees to tackle more complex problems.",,,,Unknown,2024-09-24 16:02:09+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Mistral Large 2,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Sablayrolles, Alexis Tacnet, Alok Kothari, Antoine Roux, Arthur Mensch, Audrey Herblin-Stoop, Augustin Garreau, Austin Birky, Bam4d, Baptiste Bout, Baudouin de Monicault, Blanche Savary, Carole Rambaud, Caroline Feldman, Devendra Singh Chaplot, Diego de las Casas, Diogo Costa, Eleonore Arcelin, Emma Bou Hanna, Etienne Metzger, Gaspard Blanchet, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Harizo Rajaona, Henri Roussez, Hichem Sattouf, Ian Mack, Jean-Malo Delignon, Jessica Chudnovsky, Justus Murke, Kartik Khandelwal, Lawrence Stewart, Louis Martin, Louis Ternon, Lucile Saulnier, Lélio Renard Lavaud, Margaret Jennings, Marie Pellat, Marie Torelli, Marie-Anne Lachaux, Marjorie Janiewicz, Mickaël Seznec, Nicolas Schuhl, Niklas Muhs, Olivier de Garrigues, Patrick von Platen, Paul Jacob, Pauline Buche, Pavan Kumar Reddy, Perry Savas, Pierre Stock, Romain Sauvestre, Sagar Vaze, Sandeep Subramanian, Saurabh Garg, Sophia Yang, Szymon Antoniak, Teven Le Scao, Thibault Schueller, Thibaut Lavril, Thomas Wang, Théophile Gervet, Timothée Lacroix, Valera Nemychnikova, Wendy Shang, William El Sayed, William Marshall",2024-07-24,"Top-tier reasoning for high-complexity tasks, for your most sophisticated needs.",https://mistral.ai/news/mistral-large-2407/,,Training cost,likely high training cost since previous Mistral Large cost around 20 million,123000000000.0,,2.13e+25,2.0000000001e+25,,"Details are sparse, but we can hazard a guess based on evidence about the training cluster they may have used, the scale up in compute they likely would have used relative to Mistral Large 1, and from the model's MMLU score. Extended reasoning given here: https://docs.google.com/document/d/1I2ZWBLFMpRZYcdMMUfKAGZFJrOJpduNDS9ZeVFIHnd8/edit?usp=sharing",Unspecified unreleased,,,,,,,,,,"Today, we are announcing Mistral Large 2, the new generation of our flagship model. Compared to its predecessor, Mistral Large 2 is significantly more capable in code generation, mathematics, and reasoning. It also provides a much stronger multilingual support, and advanced function calling capabilities.",,Open weights (non-commercial),,Likely,2025-02-25 12:28:03+00:00,France,,,,,,,,,
Stable Video 4D (SV4D),"Vision,Video,3D modeling","Stability AI,Northeastern University","Industry,Academia","Yiming Xie, Chun-Han Yao, Vikram Voleti, Huaizu Jiang, Varun Jampani",2024-07-24,SV4D: Dynamic 3D Content Generation with Multi-Frame and Multi-View Consistency,https://sv4d.github.io/static/sv4d_technical_report.pdf,,,,,,,,,,Objaverse,"This model is trained to generate 40 frames (5 video frames x 8 camera views) at 576x576 resolution, given 5 reference frames of the same size.

We use renders from the Objaverse dataset, available under the Open Data Commons Attribution License, utilizing our enhanced rendering method that more closely replicates the distribution of images found in the real world, significantly improving our model's ability to generalize. We filter objects based on the review of licenses and curated a subset suitable for our training needs.",,,,,We use an effective batch size of 16 during training on 2 nodes of 8 80GB H100 GPUs,NVIDIA H100 SXM5 80GB,8.0,,"We present Stable Video 4D (SV4D) — a latent video diffusion model for multiframe and multi-view consistent dynamic 3D content generation. Unlike previous methods that rely on separately trained generative models for video generation and novel view synthesis, we design a unified diffusion model to generate novel view videos of dynamic 3D objects. Specifically, given a monocular reference video, SV4D generates novel views for each video frame that are temporally consistent. We then use the generated novel view videos to optimize an implicit 4D representation (dynamic NeRF) efficiently, without the need for cumbersome SDS-based optimization used in most prior works. To train our unified novelview video generation model, we curated a dynamic 3D object dataset from the existing Objaverse dataset. Extensive experimental results on multiple datasets and user studies demonstrate SV4D’s state-of-the-art performance on novel-view video synthesis as well as 4D generation compared to prior works. Project page:
https://sv4d.github.io.
",,Open weights (restricted use),,Unknown,2024-10-26 19:35:15+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
PrePR-CT,Biology,"King Abdullah University of Science and Technology (KAUST),Karolinska Institute","Academia,Academia","Reem Alsulami, Robert Lehmann, Sumeer A. Khan, Vincenzo Lagani, David G´omez-Cabrero, Narsis A. Kiani, Jesper Tegner",2024-07-24,"PrePR-CT: Predicting Perturbation Responses in Unseen Cell Types Using Cell-Type-Specific Graphs
",https://www.biorxiv.org/content/10.1101/2024.07.24.604816v1,0.0,,,,,,,,,,,,,,,,,,,"Predicting the transcriptional response of chemical perturbations is crucial to understanding gene function and developing drug candidates, promising a streamlined drug development process. Single-cell sequencing has provided an ideal data basis for training machine learning models for this task. Recent advances in deep learning have led to significant improvements in predictions of chemical as well as genetic perturbations at the single cell level. Experiments have shown that different cell types exhibit distinct transcriptional patterns and responses to perturbation. This poses a fundamental problem for predicting transcriptional responses of drugs or cell types outside the training data. Accordingly, existing methods lack cell-type-specific modeling or do not explicitly provide an interpretable mechanism for the gene features. In this study, we introduce a novel approach that employs a network representation of various cell types as an inductive bias, improving prediction performance in scenarios with limited data while acknowledging cellular differences. We applied our framework to four small-scale single-cell perturbation datasets and one large-scale screening experiment, demonstrating that this representation can inherently generalize to previously unseen cell types. Furthermore, our method outperforms the state-of-the-art methods in predicting the post-perturbation response in unobserved cell types.",,,,Unverified,2025-01-12 05:02:53+00:00,"Saudi Arabia,Sweden",,,,,,,,,
Llama 3.1-405B,Language,Meta AI,Industry,"Abhimanyu Dubey, Abhinav Jauhri, Abhinav Pandey, Abhishek Kadian, Ahmad Al-Dahle, Aiesha Letman,
Alan Schelten, Amy Yang, Angela Fan, Anirudh Goyal, Anthony Hartshorn, Aobo Yang, Archi Mitra, Archie
Sravankumar, Artem Korenev, Arthur Hinsvark, Arun Rao, Aston Zhang, Aurelien Rodriguez, Austen
Gregerson, Ava Spataru, Baptiste Roziere, Bethany Biron, Binh Tang, Bobbie Chern, Charlotte Caucheteux,
Chaya Nayak, Chloe Bi, Chris Marra, Chris McConnell, Christian Keller, Christophe Touret, Chunyang
Wu, Corinne Wong, Cristian Canton Ferrer, Cyrus Nikolaidis, Damien Allonsius, Daniel Song, Danielle
Pintz, Danny Livshits, David Esiobu, Dhruv Choudhary, Dhruv Mahajan, Diego Garcia-Olano, Diego Perino,
Dieuwke Hupkes, Egor Lakomkin, Ehab AlBadawy, Elina Lobanova, Emily Dinan, Eric Michael Smith, Filip
Radenovic, Frank Zhang, Gabriel Synnaeve, Gabrielle Lee, Georgia Lewis Anderson, Graeme Nail, Gregoire
Mialon, Guan Pang, Guillem Cucurell, Hailey Nguyen, Hannah Korevaar, Hu Xu, Hugo Touvron, Iliyan Zarov,
Imanol Arrieta Ibarra, Isabel Kloumann, Ishan Misra, Ivan Evtimov, Jade Copet, Jaewon Lee, Jan Geffert,
Jana Vranes, Jason Park, Jay Mahadeokar, Jeet Shah, Jelmer van der Linde, Jennifer Billock, Jenny Hong,
Jenya Lee, Jeremy Fu, Jianfeng Chi, Jianyu Huang, Jiawen Liu, Jie Wang, Jiecao Yu, Joanna Bitton, Joe
Spisak, Jongsoo Park, Joseph Rocca, Joshua Johnstun, Joshua Saxe, Junteng Jia, Kalyan Vasuden Alwala,
Kartikeya Upasani, Kate Plawiak, Ke Li, Kenneth Heafield, Kevin Stone, Khalid El-Arini, Krithika Iyer,
Kshitiz Malik, Kuenley Chiu, Kunal Bhalla, Lauren Rantala-Yeary, Laurens van der Maaten, Lawrence
Chen, Liang Tan, Liz Jenkins, Louis Martin, Lovish Madaan, Lubo Malo, Lukas Blecher, Lukas Landzaat,
Luke de Oliveira, Madeline Muzzi, Mahesh Pasupuleti, Mannat Singh, Manohar Paluri, Marcin Kardas,
Mathew Oldham, Mathieu Rita, Maya Pavlova, Melanie Kambadur, Mike Lewis, Min Si, Mitesh Kumar
Singh, Mona Hassan, Naman Goyal, Narjes Torabi, Nikolay Bashlykov, Nikolay Bogoychev, Niladri Chatterji,
Olivier Duchenne, Onur Çelebi, Patrick Alrassy, Pengchuan Zhang, Pengwei Li, Petar Vasic, Peter Weng,
Prajjwal Bhargava, Pratik Dubal, Praveen Krishnan, Punit Singh Koura, Puxin Xu, Qing He, Qingxiao Dong,
Ragavan Srinivasan, Raj Ganapathy, Ramon Calderer, Ricardo Silveira Cabral, Robert Stojnic, Roberta
Raileanu, Rohit Girdhar, Rohit Patel, Romain Sauvestre, Ronnie Polidoro, Roshan Sumbaly, Ross Taylor,
Ruan Silva, Rui Hou, Rui Wang, Saghar Hosseini, Sahana Chennabasappa, Sanjay Singh, Sean Bell, Seohyun
Sonia Kim, Sergey Edunov, Shaoliang Nie, Sharan Narang, Sharath Raparthy, Sheng Shen, Shengye Wan,
Shruti Bhosale, Shun Zhang, Simon Vandenhende, Spencer Whitman, Sten Sootla, Stephane Collot, Suchin
Gururangan, Sydney Borodinsky, Tamar Herman, Tara Fowler, Tarek Sheasha, Thomas Georgiou, Thomas
Scialom, Tobias Speckbacher, Todor Mihaylov, Tong Xiao, Ujjwal Karn, Vedanuj Goswami, Vibhor Gupta,
Vignesh Ramanathan, Viktor Kerkez, Vincent Gonguet, Virginie Do, Vish Vogeti, Vladan Petrovic, Weiwei
Chu, Wenhan Xiong, Wenyin Fu, Whitney Meers, Xavier Martinet, Xiaodong Wang, Xiaoqing Ellen Tan,
Xinfeng Xie, Xuchao Jia, Xuewei Wang, Yaelle Goldschlag, Yashesh Gaur, Yasmine Babaei, Yi Wen, Yiwen
Song, Yuchen Zhang, Yue Li, Yuning Mao, Zacharie Delpierre Coudert, Zheng Yan, Zhengxing Chen, and Zoe
Papakipos.
(core contributors)",2024-07-23,The Llama 3 Herd of Models,https://ai.meta.com/research/publications/the-llama-3-herd-of-models/,,"SOTA improvement,Training cost","High training compute, exceeds 4o and Claude 3.5 on some benchmarks:

https://ai.meta.com/blog/meta-llama-3-1/ ",405000000000.0,405B,3.8e+25,,,"Stated in paper.

Also, 6 * 405B * 15.6T training tokens = 3.8e25",Llama 3 dataset,,15600000000000.0,15.6T tokens,1.0,2142.0,"Trained on 30.84M GPU hours (https://huggingface.co/blog/llama31) and used ""up to 16K H100 GPU[s]"" so training took at least
30.84M / 16k = 1927.5 hours or ~80 days. 

Section 3.3.4 gives reliability details over a 54 day period during training, for which they had ""higher than 90% effective training time""
1927.5 / 0.9 = 2142 hours

Probably, full training time is somewhat longer, since it sounds like there were periods where not all 16k H100s were running.",NVIDIA H100 SXM5 80GB,16384.0,,"Modern artificial intelligence (AI) systems are powered by foundation models. This paper presents a new set of foundation models, called Llama 3. It is a herd of language models that natively support multilinguality, coding, reasoning, and tool usage. Our largest model is a dense Transformer with 405B parameters and a context window of up to 128K tokens. This paper presents an extensive empirical evaluation of Llama 3. We find that Llama 3 delivers comparable quality to leading language models such as GPT-4 on a plethora of tasks. We publicly release Llama 3, including pre-trained and post-trained versions of the 405B parameter language model and our Llama Guard 3 model for input and output safety. The paper also presents the results of experiments in which we integrate image, video, and speech capabilities into Llama 3 via a compositional approach. We observe this approach performs competitively with the state-of-the-art on image, video, and speech recognition tasks. The resulting models are not yet being broadly released as they are still under development.",,Open weights (restricted use),0.4042,Confident,2025-01-19 23:31:32+00:00,United States of America,,,,,,,16000000.0,,
PepPrCLIP,Biology,"Duke University,Cornell University,Sanford Burnham Prebys Institute","Academia,Academia","Suhaas Bhat, Kalyan Palepu, Lauren Hong, Joey Mao, Tianzheng Ye, Rema Iyer, Lin Zhao, Tianlai Chen, Sophia Vincoff, Rio Watson, Tian Wang, Divya Srijay, Venkata Srikar Kavirayuni, Kseniia Kholina, Shrey Goel, Pranay Vure, Aniruddha J Desphande, Scott H Soderling, Matthew P DeLisa, Pranam Chatterjee",2024-07-22,De Novo Design of Peptide Binders to Conformationally Diverse Targets with Contrastive Language Modeling,https://pubmed.ncbi.nlm.nih.gov/39091799/,,,,,,1e+18,,,"1. Hardware: 1x NVIDIA A100 80GB GPU (3.12e14 FLOP/s fp16)
2. Training duration: 6 hours (estimated based on dataset size and epochs)
3. Utilization: 40%
4. Calculation: 3.12e14 FLOP/s × 0.4 × (6 × 3600s) = 2.69e18 FLOP ≈ 1.0e18 FLOP",,,11601.00000000001,"11,597 datapoints from noisy dataset training pairs used for pre-training

11,597 x 1 epoch = 11,597 total datapoints

Final estimate: 11,597 ≈ 1.16e4",56.0,,,NVIDIA A100 SXM4 80 GB,1.0,,"Designing binders to target undruggable proteins presents a formidable challenge in drug discovery, requiring innovative approaches to overcome the lack of putative binding sites. Recently, generative models have been trained to design binding proteins via three-dimensional structures of target proteins, but as a result, struggle to design binders to disordered or conformationally unstable targets. In this work, we provide a generalizable algorithmic framework to design short, target-binding linear peptides, requiring only the amino acid sequence of the target protein. To do this, we propose a process to generate naturalistic peptide candidates through Gaussian perturbation of the peptidic latent space of the ESM-2 protein language model, and subsequently screen these novel linear sequences for target-selective interaction activity via a CLIP-based contrastive learning architecture. By integrating these generative and discriminative steps, we create a Peptide Prioritization via CLIP (PepPrCLIP) pipeline and validate highly-ranked, target-specific peptides experimentally, both as inhibitory peptides and as fusions to E3 ubiquitin ligase domains, demonstrating functionally potent binding and degradation of conformationally diverse protein targets in vitro. Overall, our design strategy provides a modular toolkit for designing short binding linear peptides to any target protein without the reliance on stable and ordered tertiary structure, enabling generation of programmable modulators to undruggable and disordered proteins such as transcription factors and fusion oncoproteins.",,,,Unverified,2025-02-14 19:13:04+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Athene-70B,Language,Nexusflow,Industry,"Evan Frick, Peter Jin, Tianle Li, Karthik Ganesan, Jian Zhang, Jiantao Jiao, Banghua Zhu",2024-07-19,Athene-70B: Redefining the Boundaries of Post-Training for Open Models,https://nexusflow.ai/blogs/athene,,,,70000000000.0,70B,,,,,Unspecified unreleased,,,,,,,,,,"We are excited to announce the release of Athene-Llama3-70B by Nexusflow, a strong open-weights chat model fine-tuned from Meta AI’s Llama-3-70B. Athene-70B has achieved an impressive Arena-Hard-Auto score of 77.8%, placing it close to leading proprietary models such as GPT-4o (79.2%) and Claude-3.5-Sonnet (79.3%). This represents a significant leap from its predecessor, Llama-3-70B-Instruct, which scored 46.6%. Athene-70B is now under public testing on Chatbot Arena. The improvement comes from Nexusflow’s targeted post-training pipeline to enhance desired model behaviors.",,Open weights (non-commercial),,Confident,2025-02-07 01:39:25+00:00,United States of America,Llama 3-70B,,,,,,,,
Mistral NeMo,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Sablayrolles, Alexis Tacnet, Alok Kothari, Antoine Roux, Arthur Mensch, Audrey Herblin-Stoop, Augustin Garreau, Austin Birky, Bam4d, Baptiste Bout, Baudouin de Monicault, Blanche Savary, Carole Rambaud, Caroline Feldman, Devendra Singh Chaplot, Diego de las Casas, Eleonore Arcelin, Emma Bou Hanna, Etienne Metzger, Gaspard Blanchet, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Harizo Rajaona, Henri Roussez, Hichem Sattouf, Ian Mack, Jean-Malo Delignon, Jessica Chudnovsky, Justus Murke, Kartik Khandelwal, Lawrence Stewart, Louis Martin, Louis Ternon, Lucile Saulnier, Lélio Renard Lavaud, Margaret Jennings, Marie Pellat, Marie Torelli, Marie-Anne Lachaux, Marjorie Janiewicz, Mickaël Seznec, Nicolas Schuhl, Niklas Muhs, Olivier de Garrigues, Patrick von Platen, Paul Jacob, Pauline Buche, Pavan Kumar Reddy, Perry Savas, Pierre Stock, Romain Sauvestre, Sagar Vaze, Sandeep Subramanian, Saurabh Garg, Sophia Yang, Szymon Antoniak, Teven Le Scao, Thibault Schueller, Thibaut Lavril, Thomas Wang, Théophile Gervet, Timothée Lacroix, Valera Nemychnikova, Wendy Shang, William El Sayed, William Marshall",2024-07-18,Mistral NeMo,https://mistral.ai/news/mistral-nemo/,,,,12000000000.0,12b,,,,,,,,,,,,,,Self-supervised learning,"Mistral NeMo: our new best small model. A state-of-the-art 12B model with 128k context length, built in collaboration with NVIDIA, and released under the Apache 2.0 license.",,Open weights (unrestricted),,Confident,2025-01-21 20:25:39+00:00,France,,,,,,,,,
GPT-4o mini,"Language,Multimodal,Vision",OpenAI,Industry,"Pre-training leads
Aidan Clark, Alex Paino, Jacob Menick

Post-training leads
Liam Fedus, Luke Metz

Architecture leads
Clemens Winter, Lia Guy

Optimization leads
Sam Schoenholz, Daniel Levy

Long-context lead
Nitish Keskar

Pre-training Data leads
Alex Carney, Alex Paino, Ian Sohl, Qiming Yuan

Tokenizer lead
Reimar Leike

Human data leads
Arka Dhar, Brydon Eastman, Mia Glaese

Eval lead
Ben Sokolowsky

Data flywheel lead
Andrew Kondrich

Inference lead
Felipe Petroski Such

Inference Productionization lead
Henrique Ponde de Oliveira Pinto

Post-training infrastructure leads
Jiayi Weng, Randall Lin, Youlong Cheng

Pre-training organization lead
Nick Ryder

Pre-training program lead
Lauren Itow

Post-training organization leads
Barret Zoph, John Schulman

Post-training program lead
Mianna Chen

Core contributors
Adam Lerer, Adam P. Goucher, Adam Perelman, Akila Welihinda, Alec Radford, Alex Borzunov, Alex Carney, Alex Chow, Alex Paino, Alex Renzin, Alex Tachard Passos, Alexi Christakis, Ali Kamali, Allison Moyer, Allison Tam, Amadou Crookes, Amin Tootoonchian, Ananya Kumar, Andrej Karpathy, Andrey Mishchenko, Andrew Cann, Andrew Kondrich, Andrew Tulloch, Angela Jiang, Antoine Pelisse, Antonia Woodford, Anuj Gosalia, Avi Nayak, Avital Oliver, Behrooz Ghorbani, Ben Leimberger, Ben Wang, Beth Hoover, Blake Samic, Brian Guarraci, Brydon Eastman, Camillo Lugaresi, Chak Li, Charlotte Barette, Chelsea Voss, Chen Ding, Chong Zhang, Chris Beaumont, Chris Hallacy, Chris Koch, Christian Gibson, Christine Choi, Christopher Hesse, Colin Wei, Daniel Kappler, Daniel Levin, Daniel Levy, David Farhi, David Mely, David Sasaki, Dimitris Tsipras, Doug Li, Duc Phong Nguyen, Duncan Findlay, Edmund Wong, Ehsan Asdar, Elizabeth Proehl, Elizabeth Yang, Eric Peterson, Eric Sigler, Eugene Brevdo, Farzad Khorasani, Francis Zhang, Gene Oden, Geoff Salmon, Hadi Salman, Haiming Bao, Heather Schmidt, Hongyu Ren, Hyung Won Chung, Ian Kivlichan, Ian O'Connell, Ian Osband, Ibrahim Okuyucu, Ilya Kostrikov, Ingmar Kanitscheider, Jacob Coxon, James Crooks, James Lennon, Jane Park, Jason Teplitz, Jason Wei, Jason Wolfe, Jay Chen, Jeff Harris, Jiayi Weng, Jie Tang, Joanne Jang, Jonathan Ward, Jonathan McKay, Jong Wook Kim, Josh Gross, Josh Kaplan, Joy Jiao, Joyce Lee, Juntang Zhuang, Kai Fricke, Kavin Karthik, Kenny Hsu, Kiel Howe, Kyle Luther, Larry Kai, Lauren Itow, Leo Chen, Lia Guy, Lien Mamitsuka, Lilian Weng, Long Ouyang, Louis Feuvrier, Lukas Kondraciuk, Lukasz Kaiser, Lyric Doshi, Mada Aflak, Maddie Simens, Madeleine Thompson, Marat Dukhan, Marvin Zhang, Mateusz Litwin, Matthew Zeng, Max Johnson, Mayank Gupta, Mia Glaese, Michael Janner, Michael Petrov, Michael Wu, Michelle Fradin, Michelle Pokrass, Miguel Oom Temudo de Castro, Mikhail Pavlov, Minal Khan, Mo Bavarian, Murat Yesildal, Natalia Gimelshein, Natalie Staudacher, Nick Stathas, Nik Tezak, Nithanth Kudige, Noel Bundick, Ofir Nachum, Oleg Boiko, Oleg Murk, Olivier Godement, Owen Campbell-Moore, Philip Pronin, Philippe Tillet, Rachel Lim, Rajan Troll, Randall Lin, Rapha gontijo lopes, Raul Puri, Reah Miyara, Reimar Leike, Renaud Gaubert, Reza Zamani, Rob Honsby, Rohit Ramchandani, Rory Carmichael, Ruslan Nigmatullin, Ryan Cheu, Sara Culver, Scott Gray, Sean Grove, Sean Metzger, Shantanu Jain, Shengjia Zhao, Sherwin Wu, Shuaiqi (Tony) Xia, Sonia Phene, Spencer Papay, Steve Coffey, Steve Lee, Steve Lee, Stewart Hall, Suchir Balaji, Tal Broda, Tal Stramer, Tarun Gogineni, Ted Sanders, Thomas Cunninghman, Thomas Dimson, Thomas Raoux, Tianhao Zheng, Christina Kim, Todd Underwood, Tristan Heywood, Valerie Qi, Vinnie Monaco, Vlad Fomenko, Weiyi Zheng, Wenda Zhou, Wojciech Zaremba, Yash Patil, Yilei, Qian, Yongjik Kim, Youlong Cheng, Yuchen He, Yuchen Zhang, Yujia Jin, Yunxing Dai, Yury Malkov",2024-07-18,GPT-4o mini: advancing cost-efficient intelligence,https://openai.com/index/gpt-4o-mini-advancing-cost-efficient-intelligence/,,Significant use,"No public breakdown of GPT-4o mini users, but as of late 2024, it is one of the few main models available in ChatGPT and OpenAI's cheapest model. OpenAI has hundreds of millions of users.",,,7.360010000000001e+24,,2.050001e+25,"Training compute estimated from benchmark scores.

90% CI [3.23e+24, 2.05e+25]",Unspecified unreleased,,,,,,,,,,"OpenAI is committed to making intelligence as broadly accessible as possible. Today, we're announcing GPT-4o mini, our most cost-efficient small model. We expect GPT-4o mini will significantly expand the range of applications built with AI by making intelligence much more affordable. GPT-4o mini scores 82% on MMLU and currently outperforms GPT-41 on chat preferences in LMSYS leaderboard(opens in a new window). It is priced at 15 cents per million input tokens and 60 cents per million output tokens, an order of magnitude more affordable than previous frontier models and more than 60% cheaper than GPT-3.5 Turbo.",,API access,,Speculative,2025-02-14 19:13:14+00:00,United States of America,,,,,,,,,
PathOrchestra,,,,,2024-07-18,"我国首个人工智能病理大模型发布
",https://www.stdaily.com/index/kejixinwen/202407/ab05ac54f2ac472ea13d63c108045847.shtml,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Cygnet,Language,Gray Swan,Industry,,2024-07-16,Embrace the Future of Secure AI with Cygnet,"https://www.grayswan.ai/product/cygnet
https://www.grayswan.ai/news/gray-swan-launch",,,,8000000000.0,,,,,Trained from Llama 3-8B which used 7.2e23 FLOPs. Unclear what kind of training they did on top of this. ,,,,,,,,,,,,,API access,,Confident,2024-09-17 21:02:49+00:00,United States of America,Llama 3-8B,,,,,,,,
Codestral Mamba,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Sablayrolles, Alexis Tacnet, Alok Kothari, Antoine Roux, Arthur Mensch, Audrey Herblin-Stoop, Augustin Garreau, Austin Birky, Bam4d, Baptiste Bout, Baudouin de Monicault, Blanche Savary, Carole Rambaud, Caroline Feldman, Devendra Singh Chaplot, Diego de las Casas, Eleonore Arcelin, Emma Bou Hanna, Etienne Metzger, Gaspard Blanchet, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Harizo Rajaona, Henri Roussez, Hichem Sattouf, Ian Mack, Jean-Malo Delignon, Jessica Chudnovsky, Justus Murke, Kartik Khandelwal, Lawrence Stewart, Louis Martin, Louis Ternon, Lucile Saulnier, Lélio Renard Lavaud, Margaret Jennings, Marie Pellat, Marie Torelli, Marie-Anne Lachaux, Marjorie Janiewicz, Mickaël Seznec, Nicolas Schuhl, Niklas Muhs, Olivier de Garrigues, Patrick von Platen, Paul Jacob, Pauline Buche, Pavan Kumar Reddy, Perry Savas, Pierre Stock, Romain Sauvestre, Sagar Vaze, Sandeep Subramanian, Saurabh Garg, Sophia Yang, Szymon Antoniak, Teven Le Scao, Thibault Schueller, Thibaut Lavril, Thomas Wang, Théophile Gervet, Timothée Lacroix, Valera Nemychnikova, Wendy Shang, William El Sayed, William Marshall",2024-07-16,"As a tribute to Cleopatra, whose glorious destiny ended in tragic snake circumstances, we are proud to release Codestral Mamba, a Mamba2 language model specialised in code generation, available under an Apache 2.0 license.",https://mistral.ai/news/codestral-mamba/,,,,7285403648.0,"""This is an instructed model, with 7,285,403,648 parameters.""",,,,,Unspecified unreleased,,,,,,,,,,"Following the publishing of the Mixtral family, Codestral Mamba is another step in our effort to study and provide new architectures. It is available for free use, modification, and distribution, and we hope it will open new perspectives in architecture research. Codestral Mamba was designed with help from Albert Gu and Tri Dao.

Unlike Transformer models, Mamba models offer the advantage of linear time inference and the theoretical ability to model sequences of infinite length. It allows users to engage with the model extensively with quick responses, irrespective of the input length. This efficiency is especially relevant for code productivity use cases—this is why we trained this model with advanced code and reasoning capabilities, enabling it to perform on par with SOTA transformer-based models.",,Open weights (unrestricted),,Confident,2024-11-22 19:42:24+00:00,France,,,,,,,,,
Qwen2-Audio,"Multimodal,Language,Audio",Alibaba,Industry,"Yunfei Chu, Jin Xu, Qian Yang, Haojie Wei, Xipin Wei, Zhifang Guo, Yichong Leng, Yuanjun Lv, Jinzheng He, Junyang Lin, Chang Zhou, Jingren Zhou",2024-07-15,Qwen2-Audio Technical Report,https://arxiv.org/abs/2407.10759,,,,8200000000.0,"""The total parameters of Qwen2-Audio is 8.2B parameters.""",,,,,Unspecified unreleased,,43200000000.0,"Figure 3: Statistics (hours) of pre-training dataset
Speech - 370k hours
Sound - 10K hours
Music - 100k hours

""each frame of the encoder output approximately corresponds to a 40ms
segment of the original audio signal.""

480000*60*60*1000/40 = 43200000000 tokens",,,,,,,"We introduce the latest progress of Qwen-Audio, a large-scale audio-language model called Qwen2-Audio, which is capable of accepting various audio signal inputs and performing audio analysis or direct textual responses with regard to speech instructions. In contrast to complex hierarchical tags, we have simplified the pre-training process by utilizing natural language prompts for different data and tasks, and have further expanded the data volume. We have boosted the instruction-following capability of Qwen2-Audio and implemented two distinct audio interaction modes for voice chat and audio analysis. In the voice chat mode, users can freely engage in voice interactions with Qwen2-Audio without text input. In the audio analysis mode, users could provide audio and text instructions for analysis during the interaction. Note that we do not use any system prompts to switch between voice chat and audio analysis modes. Qwen2-Audio is capable of intelligently comprehending the content within audio and following voice commands to respond appropriately. For instance, in an audio segment that simultaneously contains sounds, multi-speaker conversations, and a voice command, Qwen2-Audio can directly understand the command and provide an interpretation and response to the audio. Additionally, DPO has optimized the model's performance in terms of factuality and adherence to desired behavior. According to the evaluation results from AIR-Bench, Qwen2-Audio outperformed previous SOTAs, such as Gemini-1.5-pro, in tests focused on audio-centric instruction-following capabilities. Qwen2-Audio is open-sourced with the aim of fostering the advancement of the multi-modal language community.",,Open weights (unrestricted),,Likely,2024-12-08 19:04:56+00:00,China,Qwen-7B,2.12544e+21,6ND = 6*8200000000*43200000000=2.12544e+21,,,,,,
OmniGenome,Biology,University of Exeter,Academia,"Heng Yang, Ke Li",2024-07-15,OmniGenome: Aligning RNA Sequences with Secondary Structures in Genomic Foundation Models,https://arxiv.org/abs/2407.11242,1.0,,,,,1.8999999999999995e+21,,,"1. Hardware setup: 8x NVIDIA RTX 4090 GPUs (3.30×10¹⁴ FLOP/s per GPU)

2. Training duration: 3 weeks (directly provided)
   = 1,814,400 seconds (3 weeks × 7 days × 24 hours × 3600 seconds)

3. Utilization rate: 40%

4. Final calculation:
   3.30×10¹⁴ FLOP/s × 8 GPUs × 1,814,400 seconds × 0.4 = 1.9×10²¹ FLOPs",,,54200000001.00001,"54.2 billion tokens = 54.2 x 10^9 = 54,200,000,000 tokens",,,,,,,"The alignment between RNA sequences and structures in foundation models (FMs) has yet to be thoroughly investigated. Existing FMs have struggled to establish sequence-structure alignment, hindering the free flow of genomic information between RNA sequences and structures. In this study, we introduce OmniGenome, an RNA FM trained to align RNA sequences with respect to secondary structures based on structure-contextualised modelling. The alignment enables free and bidirectional mappings between sequences and structures by utilising the flexible RNA modelling paradigm that supports versatile input and output modalities, i.e., sequence and/or structure as input/output. We implement RNA design and zero-shot secondary structure prediction as case studies to evaluate the Seq2Str and Str2Seq mapping capacity of OmniGenome. Results on the EternaV2 benchmark show that OmniGenome solved 74% of puzzles, whereas existing FMs only solved up to 3% of the puzzles due to the oversight of sequence-structure alignment. We leverage four comprehensive in-silico genome modelling benchmarks to evaluate performance across a diverse set of genome downstream tasks, where the results show that OmniGenome achieves state-of-the-art performance on RNA and DNA benchmarks, even without any training on DNA genomes.",,,,Unverified,2025-02-14 19:13:36+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
PARM,Biology,"Oncode Institute,UMC Utrecht,Netherlands Cancer Institute,University of Groningen,Radboud University Medical Center",Academia,"Lucía Barbadilla-Martínez, Noud Klaassen, Vinícius H. Franceschini-Santos, Jérémie Breda, Miguel Hernandez-Quiles, Tijs van Lieshout, Carlos G. Urzua Traslaviña, Hatice Yücel, Minh Chau Luong Boi, Celia Hermana-Garcia-Agullo, Sebastian Gregoricchio, Wilbert Zwart, Emile Voest, Lude Franke, Michiel Vermeulen, Jeroen de Ridder, Bas van Steensel",2024-07-15,The regulatory grammar of human promoters uncovered by MPRA-trained deep learning,https://www.biorxiv.org/content/10.1101/2024.07.09.602649v2,,,,,,,,,,,,,,,,,,,,"One of the major challenges in genomics is to build computational models that accurately predict genome-wide gene expression from the sequences of regulatory elements. At the heart of gene regulation are promoters, yet their regulatory logic is still incompletely understood. Here, we report PARM, a cell-type specific deep learning model trained on specially designed massively parallel reporter assays that query human promoter sequences. PARM requires ∼1,000 times less computational power than state-of-the-art technology, and reliably predicts autonomous promoter activity throughout the genome from DNA sequence alone, in multiple cell types. PARM can even design purely synthetic strong promoters. We leveraged PARM to systematically identify binding sites of transcription factors (TFs) that are likely to contribute to the activity of each natural human promoter. We uncovered and experimentally confirmed striking positional preferences of TFs that differ between activating and repressive regulatory functions, as well as a complex grammar of motif-motif interactions. For example, many, but not all, TFs act as repressors when their binding motif is located near or just downstream of the transcription start site. Our approach lays the foundation towards a deep understanding of the regulation of human promoters by TFs.",,,,Unverified,2025-01-12 05:22:00+00:00,Netherlands,,,,,,,,,
HelixProtX,Biology,Baidu,Industry,"Zhiyuan Chen, Tianhao Chen, Chenggang Xie, Yang Xue, Xiaonan Zhang, Jingbo Zhou, Xiaomin Fang",2024-07-12,"Unifying Sequences, Structures, and Descriptions for Any-to-Any Protein Generation with the Large Multimodal Model HelixProtX",https://arxiv.org/abs/2407.09274,,,,,,2.8000000000000013e+20,,,"1. Hardware setup: 8x NVIDIA A100 GPUs, 3.12e14 FLOP/s per GPU
2. Training duration: Estimated 3.19 days based on 450,000 steps at batch size 102,400
3. Utilization rate: 40%
4. Calculation: 
   - Per GPU effective: 3.12e14 × 0.4 = 1.25e14 FLOP/s
   - Total system: 1.25e14 × 8 = 1.0e15 FLOP/s
   - Total compute: 1.0e15 FLOP/s × (3.19 days × 86400 s/day) = 2.8e20 FLOP",,,,,52.0,,,,,,"Proteins are fundamental components of biological systems and can be represented through various modalities, including sequences, structures, and textual descriptions. Despite the advances in deep learning and scientific large language models (LLMs) for protein research, current methodologies predominantly focus on limited specialized tasks – often predicting one protein modality from another. These approaches restrict the understanding and generation of multimodal protein data. In contrast, large multimodal models have demonstrated potential capabilities in generating any-to-any content like text, images, and videos, thus enriching user interactions across various domains. Integrating these multimodal model technologies into protein research offers significant promise by potentially transforming how proteins are studied. To this end, we introduce HelixProtX, a system built upon the large multimodal model, aiming to offer a comprehensive solution to protein research by supporting any-to-any protein modality generation. Unlike existing methods, it allows for the transformation of any input protein modality into any desired protein modality. The experimental results affirm the advanced capabilities of HelixProtX, not only in generating functional descriptions from amino acid sequences but also in executing critical tasks such as designing protein sequences and structures from textual descriptions. Preliminary findings indicate that HelixProtX consistently achieves superior accuracy across a range of protein-related tasks, outperforming existing state-of-the-art models. By integrating multimodal large models into protein research, HelixProtX opens new avenues for understanding protein biology, thereby promising to accelerate scientific discovery.",,Unreleased,,Unverified,2025-02-14 19:13:53+00:00,China,,,,,,,,,
Deep learning linking mechanistic models to single-cell transcriptomics data reveals transcriptional bursting in response to DNA damage,Biology,"Sun Yat-sen University,University of California Irvine,Guangdong Provincial People's Hospital,Guangdong Academy of Medical Sciences",Academia,"Zhiwei Huang, Songhao Luo, Zihao Wang, Zhenquan Zhang, Benyuan Jiang, Qing Nie, Jiajun Zhang",2024-07-12,Deep learning linking mechanistic models to single-cell transcriptomics data reveals transcriptional bursting in response to DNA damage,https://www.biorxiv.org/content/10.1101/2024.07.10.602845v1,,,,,,,,,,,,,,,,,,,,"Cells must adopt flexible regulatory strategies to make decisions regarding their fate, including differentiation, apoptosis, or survival in the face of various external stimuli. One key cellular strategy that enables these functions is stochastic gene expression programs. However, understanding how transcriptional bursting, and consequently, cell fate, responds to DNA damage on a genome-wide scale poses a challenge. In this study, we propose an interpretable and scalable inference framework, DeepTX, that leverages deep learning methods to connect mechanistic models and scRNA-seq data, thereby revealing genome-wide transcriptional burst kinetics. This framework enables rapid and accurate solutions to transcription models and the inference of transcriptional burst kinetics from scRNA-seq data. Applying this framework to several scRNA-seq datasets of DNA-damaging drug treatments, we observed that fluctuations in transcriptional bursting induced by different drugs could lead to distinct fate decisions: IdU treatment induces differentiation in mouse embryonic stem cells by increasing the burst size of gene expression, while 5FU treatment with low and high dose increases the burst frequency of gene expression to induce cell apoptosis and survival in human colon cancer cells. Together, these results show that DeepTX can be used to analyze single-cell transcriptomics data and can provide mechanistic insights into cell fate decisions.",,,,Unverified,2025-01-12 05:29:03+00:00,China,,,,,,,,,
PaliGemma,Vision,Google DeepMind,Industry,"Lucas Beyer, Andreas Steiner, André Susano Pinto, Alexander Kolesnikov, Xiao Wang, Daniel Salz, Maxim Neumann, Ibrahim Alabdulmohsin, Michael Tschannen, Emanuele Bugliarello, Thomas Unterthiner, Daniel Keysers, Skanda Koppula, Fangyu Liu, Adam Grycner, Alexey Gritsenko, Neil Houlsby, Manoj Kumar, Keran Rong, Julian Eisenschlos, Rishabh Kabra, Matthias Bauer, Matko Bošnjak, Xi Chen, Matthias Minderer, Paul Voigtlaender, Ioana Bica, Ivana Balazevic, Joan Puigcerver, Pinelopi Papalampidi, Olivier Henaff, Xi Xiong, Radu Soricut, Jeremiah Harmsen, Xiaohua Zhai",2024-07-10,PaliGemma: A versatile 3B VLM for transfer,https://arxiv.org/abs/2407.07726v1,,,,3000000000.0,"Model Components:
Vision Encoder: SigLIP-So400m, a 400M parameter model pretrained with a contrastive objective.
Language Model: Gemma-2B, a 2B parameter decoder-only model from the Gemma family of LLMs.",1.0652844e+22,,,197000000000000*256*102*3600*0.55 + 123000000000000*32*60*3600*0.55= 1.0652844e+22,"WebLI,Conceptual Captions (CC3M),Unspecified unreleased","""some of the pretraining datasets remain private""

PaliGemma is pre-trained on the following mixture of datasets:

WebLI: WebLI (Web Language Image) is a web-scale multilingual image-text dataset built from the public web. A wide range of WebLI splits are used to acquire versatile model capabilities, such as visual semantic understanding, object localization, visually-situated text understanding, multilinguality, etc.
CC3M-35L: Curated English image-alt_text pairs from webpages (Sharma et al., 2018). We used the Google Cloud Translation API to translate into 34 additional languages.
VQ²A-CC3M-35L/VQG-CC3M-35L: A subset of VQ2A-CC3M (Changpinyo et al., 2022a), translated into the same additional 34 languages as CC3M-35L, using the Google Cloud Translation API.
OpenImages: Detection and object-aware questions and answers (Piergiovanni et al. 2022) generated by handcrafted rules on the OpenImages dataset.
WIT: Images and texts collected from Wikipedia (Srinivasan et al., 2021).",487782604800.0,"""We train Stage1 at resolution 224px (hence, 𝑁img = 256 image tokens) and sequence length 𝑁txt = 128 for a total of 1 billion examples.""

""For resolution 448, we train for an additional 50 M examples, and for resolution 896, we add another 10 M examples. <..> we also increase the text sequence length to 𝑁txt = 512 tokens.""

""Stage1 sees slightly less than 350 B tokens, and both Stage2 combined about 90 B tokens.""

5189 tokens/second/device (reported) * 102*3600*256 = 487782604800 tokens",,162.0,"""One training run of the final PaliGemma model using TPUv5e-256 takes slightly less than 3 days for Stage1 and 15h for each Stage2. Stage1 sees
slightly less than 350 B tokens, and both Stage2 combined about 90 B tokens. Transfers take between 20min and 10h on TPUv3-32, depending on the task""

""we transfer the pretrained models on more than 30 academic benchmarks via fine-tuning""

3*24+15*2 = 102 (stage 1 and stage 2 without transfers)
assuming(!) 2 hours on average for transfer, 2*30 = 60 hours","Google TPU v5e,Google TPU v3",256.0,,"PaliGemma is an open Vision-Language Model (VLM) that is based on the SigLIP-So400m vision encoder and the Gemma-2B language model. It is trained to be a versatile and broadly knowledgeable base model that is effective to transfer. It achieves strong performance on a wide variety of open-world tasks. We evaluate PaliGemma on almost 40 diverse tasks including standard VLM benchmarks, but also more specialized tasks such as remote-sensing and segmentation.",,Open weights (restricted use),0.55,Confident,2024-11-08 23:53:15+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
OpenDiLoCo 150M,Language,Prime Intellect,Industry,"Sami Jaghouar, Jack Min Ong, Johannes Hagemann",2024-07-10,"OpenDiLoCo: An Open-Source Framework for Globally Distributed
Low-Communication Training",https://arxiv.org/abs/2407.07852,,,,150000000.0,"""We conduct various experiments using a model with 150 million parameters on a language modeling task using the C4 dataset (Raffel et al., 2019). """,4.152361e+19,,,6ND = 6*150*10^6*46137344000 = 4.152361e+19,C4,,46137344000.0,"""The hyperparameters are consistent with DiLoCoacross experiments: an inner learning rate of 4e−4, 1,000 warm-up steps, 0.1 weight decay, a batch size of 512, a sequence length of 1,024, a learning rate for the Nesterov outer optimizer of 0.7, and Nesterov momentum of 0.9. Similarly, we run the experiments for a total of 88,000 steps.""

512*1024*88000=46137344000",,,,,,,"OpenDiLoCo is an open-source implementation and replication of the Distributed Low-Communication (DiLoCo) training method for large language models. We provide a reproducible implementation of the DiLoCo experiments, offering it within a scalable, decentralized training framework using the Hivemind library. We demonstrate its effectiveness by training a model across two continents and three countries, while maintaining 90-95% compute utilization. Additionally, we conduct ablations studies focusing on the algorithm's compute efficiency, scalability in the number of workers and show that its gradients can be all-reduced using FP16 without any performance degradation. Furthermore, we scale OpenDiLoCo to 3x the size of the original work, demonstrating its effectiveness for billion parameter models.",,,,Confident,2024-11-14 15:26:07+00:00,United States of America,,,,,,,,,
OpenDiLoCo 1.1B,Language,Prime Intellect,Industry,"Sami Jaghouar, Jack Min Ong, Johannes Hagemann",2024-07-10,"OpenDiLoCo: An Open-Source Framework for Globally Distributed
Low-Communication Training",https://arxiv.org/abs/2407.07852,,,,1100000000.0,"""We adopt the same hyperparameters as TinyLlama (Zhang et al., 2024), employing a model with 1.1B parameters, a learning rate of 4e−4 and a batch size of 2048.""",6.0901294e+20,,,6ND = 6*1.1*10^9*92274688000 = 6.0901294e+20,C4,,92274688000.0,"44000 steps

""For the scaled-up 1.1B parameter experiment, we limit it to 44, 000 steps because of the 4× larger batch size. "" 
batch size 2048

sequence length 1024

2048*1024*44000 = 92274688000",,,,,,,"OpenDiLoCo is an open-source implementation and replication of the Distributed Low-Communication (DiLoCo) training method for large language models. We provide a reproducible implementation of the DiLoCo experiments, offering it within a scalable, decentralized training framework using the Hivemind library. We demonstrate its effectiveness by training a model across two continents and three countries, while maintaining 90-95% compute utilization. Additionally, we conduct ablations studies focusing on the algorithm's compute efficiency, scalability in the number of workers and show that its gradients can be all-reduced using FP16 without any performance degradation. Furthermore, we scale OpenDiLoCo to 3x the size of the original work, demonstrating its effectiveness for billion parameter models.",,,,Confident,2024-11-14 15:26:22+00:00,United States of America,,,,,,,,,
SenseChat 5.5,Multimodal,SenseTime,Industry,SenseTime,2024-07-06,SenseTime Unveils SenseNova 5.5 - a Complete and Comprehensive Upgrade,https://www.sensetime.com/en/news-detail/51168278?categoryId=1072,,SOTA improvement,"Best score on SuperCLUE总排行榜（2024年12月）- SuperCLUE general benchmak from Dec 2024 (https://www.superclueai.com/) in terms of ""liberal arts"" evaluation.",600000000000.0,https://en.tmtpost.com/post/7159076,,,,,,"The model training was based on over 10TB tokens of high-quality training data, including a large amount of synthetically-generated reasoning chain data, which help to enhance its reasoning capabilities.",,,,,,,,,"SenseTime, a strategic partner of the 2024 World Artificial Intelligence Conference & High-Level Meeting on Global AI Governance (WAIC 2024), held its AI Forum on ""AI+: Catalyzing Next-Gen Transformations"", where it unveiled the upgraded SenseNova 5.5 Large Model. The updates include SenseNova 5o, the first real-time multimodal model in China, which provides a new AI interaction model on par with GPT-4o’s streaming interaction capabilities.",,,,Unverified,2025-02-25 13:08:34+00:00,"Hong Kong,China",,,,,,,,,
Precious3GPT,Biology,"Insilico Medicine AI,Harvard Medical School","Industry,Academia","Fedor Galkin, Vladimir Naumov, Stefan Pushkov, Denis Sidorenko, Anatoly Urban, Diana Zagirova, Khadija M. Alawi, Alex Aliper, Ruslan Gumerov, Aleksandr Kalashnikov, Sabina Mukba, Aleksandra Pogorelskaya, Feng Ren, Anastasia Shneyderman, Qiuqiong Tang, Deyong Xiao, Alexander Tyshkovskiy, Kejun Ying, Vadim N. Gladyshev, Alex Zhavoronkov",2024-07-05,Precious3GPT: Multimodal Multi-Species Multi-Omics Multi-Tissue Transformer for Aging Research and Drug Discovery,https://www.biorxiv.org/content/10.1101/2024.07.25.605062v1.abstract,1.0,,,,,,,,,,,63377.00000000009,"63,376 = 25,332 (genes) + 22,241 (compounds) + 13,439 (pathways) + 661 (mechanisms of action) + 635 (conditions) + 394 (age groups) + 300 (tissues) + 269 (cell lines)",,,,,,,"We present a multimodal multi-species multi-omics multi-tissue transformer for aging research and drug discovery capable of performing multiple tasks such as age prediction across species, target discovery, tissue, sex, and disease sample classification, drug sensitivity prediction, replication of omics response and prediction of biological and phenotypic response to compound treatment. This model combines textual, tabular, and knowledge graph-derived representations of biological experiments to provide insights into molecular-level biological processes. We demonstrate that P3GPT has developed an intuition for the interactions between compounds, pathologies, and gene regulation in the context of multiple species and tissues. In these areas, it outperforms existing LLMs and we highlight its utility in diverse case studies. P3GPT is a general model that may be used as a target identification tool, aging clock, digital laboratory, and scientific assistant. The model is intended as a community resource available open source as well as via a Discord server.",,,,Unverified,2025-01-30 05:05:03+00:00,"Hong Kong,China,United States of America",,,,,,,,,
ColPali,Vision,"Illuin Technology,Equall.ai,University Paris-Saclay,ETH Zurich","Industry,Industry,Academia,Academia","Manuel Faysse, Hugues Sibille, Tony Wu, Bilel Omrani, Gautier Viaud, Céline Hudelot, Pierre Colombo",2024-07-05,ColPali: Efficient Document Retrieval with Vision Language Models,https://arxiv.org/abs/2407.01449,,,,3000000000.0,,,,,,,"Our training dataset of 127,460 query-page pairs is comprised of train sets of openly available academic datasets (63%) and a synthetic dataset made up of pages from web-crawled PDF documents and augmented with VLM-generated (Claude-3 Sonnet) pseudo-questions (37%). Our training set is fully English by design, enabling us to study zero-shot generalization to non-English languages. We explicitly verify no multi-page PDF document is used both ViDoRe and in the train set to prevent evaluation contamination. ",,,1.0,,"""a training run represents about
40 hours of Mi250x AMD GPUs. Our experiments, in total, represent 1405 Mi250x GPU hours
from highly efficient compute clusters running on
low-carbon nuclear energy, representing a total of
around 15kg CO2 eq""

""We train on an 8 GPU setup with data parallelism",AMD Radeon Instinct MI250X,8.0,,"Documents are visually rich structures that convey information through text, as well as tables, figures, page layouts, or fonts. While modern document retrieval systems exhibit strong performance on query-to-text matching, they struggle to exploit visual cues efficiently, hindering their performance on practical document retrieval applications such as Retrieval Augmented Generation. To benchmark current systems on visually rich document retrieval, we introduce the Visual Document Retrieval Benchmark ViDoRe, composed of various page-level retrieving tasks spanning multiple domains, languages, and settings. The inherent shortcomings of modern systems motivate the introduction of a new retrieval model architecture, ColPali, which leverages the document understanding capabilities of recent Vision Language Models to produce high-quality contextualized embeddings solely from images of document pages. Combined with a late interaction matching mechanism, ColPali largely outperforms modern document retrieval pipelines while being drastically faster and end-to-end trainable.",,Open weights (restricted use),,Confident,2024-12-09 20:42:50+00:00,"France,United States of America,France,Switzerland",PaliGemma,1.323648e+20,383000000000000.0000 * 8 * 40 * 3600 * 0.3 = 1.323648e+20,,,,,,
InternVL2 26B,,Shanghai AI Lab,Academia,,2024-07-04,,https://huggingface.co/OpenGVLab/InternVL2-26B,,,,25500000000.0,25.5B,,,,,,,,,,,,,,,"Compared to the state-of-the-art open-source multimodal large language models, InternVL 2.0 surpasses most open-source models. It demonstrates competitive performance on par with proprietary commercial models across various capabilities, including document and chart comprehension, infographics QA, scene text understanding and OCR tasks, scientific and mathematical problem solving, as well as cultural understanding and integrated multimodal capabilities.

InternVL 2.0 is trained with an 8k context window and utilizes training data consisting of long texts, multiple images, and videos, significantly improving its ability to handle these types of inputs compared to InternVL 1.5. For more details, please refer to our blog and GitHub.",,Open weights (unrestricted),,Unverified,2025-02-08 02:01:59+00:00,China,,,,,,,,,
DualNetGO,Biology,Hong Kong University of Science and Technology,Academia,"Zhuoyang Chen,  Qiong Luo",2024-07-03,DualNetGO: A Dual Network Model for Protein Function Prediction via Effective Feature Selection,https://www.biorxiv.org/content/10.1101/2023.11.29.569192v2,0.0,,,,,,,,,,,,,,,,,,,"Motivation Protein-protein Interaction (PPI) networks are crucial for automatically annotating protein functions. As multiple PPI networks exist for the same set of proteins that capture properties from different aspects, it is a challenging task to effectively utilize these heterogeneous networks. Recently, several deep learning models have combined PPI networks from all evidence, or concatenated all graph embeddings for protein function prediction. However, the lack of a judicious selection procedure prevents the effective harness of information from different PPI networks, as these networks vary in densities, structures, and noise levels. Consequently, combining protein features indiscriminately could increase the noise level, leading to decreased model performance.

Results We develop DualNetGO, a dual network model comprised of a classifier and a selector, to predict protein functions by effectively selecting features from different sources including graph embeddings of PPI networks, protein domain and subcellular location information. Evaluation of DualNetGO on human and mouse datasets in comparison with other network-based models show at least 4.5%, 6.2% and 14.2% improvement on Fmax in BP, MF and CC Gene Ontology categories respectively for human, and 3.3%, 10.6% and 7.7% improvement on Fmax for mouse. We demonstrate the generalization capability of our model by training and testing on the CAFA3 data, and show its versatility by incorporating Esm2 embeddings. We further show that our model is insensitive to the choice of graph embedding method and is time- and memory-saving. These results demonstrate that combining a subset of features including PPI networks and protein attributes selected by our model is more effective in utilizing PPI network information than only using one kind of or concatenating graph embeddings from all kinds of PPI networks.

Availability and implementation The source code of DualNetGO and some of the experiment data are available at: https://github.com/georgedashen/DualNetGO.",,,,Unverified,2025-01-12 05:11:31+00:00,"Hong Kong,China",,,,,,,,,
RiboDiffusion,Biology,"Beihang University,Nanjing University,Chinese University of Hong Kong (CUHK)","Academia,Academia,Academia","Han Huang, Ziqian Lin, Dongchen He, Liang Hong, Yu Li",2024-06-28,RiboDiffusion: tertiary structure-based RNA inverse folding with generative diffusion models,https://academic.oup.com/bioinformatics/article/40/Supplement_1/i347/7700903,3.0,,,,,,,,,,,3648000.999999997,"24,322 RNA chains × 150 nucleotides per chain = 3,648,300 data points ≈ 3.648 × 10⁶
(7,322 + 17,000 = 24,322 RNA chains)",,,,,,,"Motivation
RNA design shows growing applications in synthetic biology and therapeutics, driven by the crucial role of RNA in various biological processes. A fundamental challenge is to find functional RNA sequences that satisfy given structural constraints, known as the inverse folding problem. Computational approaches have emerged to address this problem based on secondary structures. However, designing RNA sequences directly from 3D structures is still challenging, due to the scarcity of data, the nonunique structure-sequence mapping, and the flexibility of RNA conformation.

Results
In this study, we propose RiboDiffusion, a generative diffusion model for RNA inverse folding that can learn the conditional distribution of RNA sequences given 3D backbone structures. Our model consists of a graph neural network-based structure module and a Transformer-based sequence module, which iteratively transforms random sequences into desired sequences. By tuning the sampling weight, our model allows for a trade-off between sequence recovery and diversity to explore more candidates. We split test sets based on RNA clustering with different cut-offs for sequence or structure similarity. Our model outperforms baselines in sequence recovery, with an average relative improvement of 11% for sequence similarity splits and 16% for structure similarity splits. Moreover, RiboDiffusion performs consistently well across various RNA length categories and RNA types. We also apply in silico folding to validate whether the generated sequences can fold into the given 3D RNA backbones. Our method could be a powerful tool for RNA design that explores the vast sequence space and finds novel solutions to 3D structural constraints.",,,,Unverified,2025-01-30 05:04:59+00:00,"China,China,Hong Kong,China",,,,,,,,,
ChatBit,Language,"Beijing Institute of Technology,Academy of Military Science,Minzu University of China","Academia,Government,Academia","Zhang Huaping, Li Chunjin, Wei Shunping, Geng Guotong, Li Weiwei, Li Yugang",2024-06-28,Large language model-driven open-source intelligence cognition,https://d.wanfangdata.com.cn/periodical/gfkj202403008,,,,13000000000.0,Assuming as in LLaMA-13 since it is its finetune,,,,,,,100000000.0,"""researchers noted that its model incorporated only 100,000 military dialogue records, a relatively small number compared with other LLMs.""

""其他设置：训练的epoch为3，最大长度 max_length为2 048，batch_size为8，使用8个 A100 GPU训练，梯度积累为4，warm_up为训 练总步数的10%，采用AdamW优化器， 1 = 0.90、 2 = 0.95，学习率为1e-5"" 

which is translated as ""Other settings: 3 epochs for training, max_length of 2 048, batch_size of 8, 8 A100 GPUs for training, gradient accumulation of 4, warm_up of 10% of the total number of training steps, AdamW optimizer,  1 = 0.90,  2 = 0.95, and learning rate of 1e-5.""

Assuming (!) average dialogue is 1000 tokens (the example in Table 2 has little bit less than 500 characters and they mention maximum sequence length as 2048) then total dataset token count is
100000*1000 = 100000000 tokens",3.0,,,NVIDIA A100,8.0,,"Three academic papers and several analysts have confirmed the information, with ChatBIT using Meta’s Llama 13B large language model (LLM). This LLM has been modified for intelligence gathering and processing, allowing military planners to use it for operational decision-making.

With the extensive application of open-source intelligence in the military field, the demand for cognition and analysis of relevant intelligence is growing. However, the large language models currently used by researchers are prone to severe hallucination, rendering the information generated unreliable address the present study collected approximately 100,000 dialogue records online and constructed an open-source military intelligence dataset. Subsequently, a new model, ChatBIT, which is specifically optimized for dialogue and question answering tasks in the military field, This study further compared the military knowledge question answering capabilities of the ChatBIT model with those of the Vicuna-13B model. ChatBIT was found to outperform Vicuna-13B in a series of standardized evaluation metrics including the BLEU score, ROUGE-1, ROUGE and ROUGE-L scores were respectively 3.2079,2.2562, and 1.5939 points higher than those of Vicuna-13B.These results indicate that the ChatBIT model provides more accurate and reliable information when dealing with military dialogue and questions ans. Specifically, ChatBIT's BLEU score was 2.3909 higher than that of Vicuna-13B. Furthermore, ChatBIT's ROUGE-1, ROUGE-2, and ROUGE-L scores were respectively 3.2079,2.2562, Specifically, ChatBIT's BLEU score was 2.3909 higher than that of Vicuna-13B. Furthermore, ChatBIT's ROUGE-1, ROUGE-2, and ROUGE-L scores were respectively 3.2079,2.2562",,Unreleased,,Likely,2024-12-02 15:22:11+00:00,"China,China,China",LLaMA-13B,2.34e+19,6ND = 6*13*10^9*100000000*3 = 2.34e+19,,,,16384.0,"max_length of 2 048, batch_size of 8",
Ernie 4.0 Turbo,Multimodal,Baidu,Industry,Baidu,2024-06-28,"Baidu launches upgraded AI model, says Ernie Bot hits 300 mln users",https://www.reuters.com/technology/artificial-intelligence/baidu-launches-upgraded-ai-model-says-user-base-hits-300-mln-2024-06-28/,,Significant use,300 million users,,,,,,,,,,,,,,,,Supervised,,,API access,,Unverified,2025-01-30 03:03:36+00:00,China,,,,,,,,,
Molecular Diffusion Models with Virtual Receptors,Biology,Verily Research,Industry,"Matan Halfon, Eyal Rozenberg, Ehud Rivlin, Daniel Freedman",2024-06-26,Molecular Diffusion Models with Virtual Receptors,https://arxiv.org/abs/2406.18330,0.0,,,,,,,,,,,22500000.999999985,"Number of unique datapoints: 22.5 million ligand poses

Calculation: 22.5 million = 2.25 × 10^7 datapoints

Final result: 2.25e7",,,,,,,"Machine learning approaches to Structure-Based Drug Design (SBDD) have proven quite fertile over the last few years. In particular, diffusion-based approaches to SBDD have shown great promise. We present a technique which expands on this diffusion approach in two crucial ways. First, we address the size disparity between the drug molecule and the target/receptor, which makes learning more challenging and inference slower. We do so through the notion of a Virtual Receptor, which is a compressed version of the receptor; it is learned so as to preserve key aspects of the structural information of the original receptor, while respecting the relevant group equivariance. Second, we incorporate a protein language embedding used originally in the context of protein folding. We experimentally demonstrate the contributions of both the virtual receptors and the protein embeddings: in practice, they lead to both better performance, as well as significantly faster computations.",,,,Unverified,2025-01-30 05:04:55+00:00,United States of America,,,,,,,,,
ESM3 (98B),Biology,"EvolutionaryScale,University of California (UC) Berkeley","Industry,Academia","Thomas Hayes, Roshan Rao, Halil Akin, Nicholas James Sofroniew, Deniz Oktay, Zeming Lin, Robert Verkuil, Vincent Quy Tran, Jonathan Deaton, Marius Wiggert, Rohil Badkundri, Irhum Shafkat, Jun Gong, Alexander Derry, Raul Santiago Molina, Neil Thomas, Yousuf Khan, Chetan Mishra, Carolyn Kim, Liam J Bartie, Patrick D Hsu, Tom Sercu, Salvatore Candido, Alexander Rives",2024-06-25,ESM3: Simulating 500 million years of evolution with a language model,https://www.evolutionaryscale.ai/blog/esm3-release ,,Historical significance,"Largest (in compute) biology and protein model to date, was able to discover novel green fluorescent proteins",98500000000.0,98.5 billion (Table S1),1.07e+24,,,"""ESM3 at its largest scale was trained with 1.07×10^24 FLOPs on 2.78 billion proteins and 771 billion unique tokens, and has 98 billion parameters.""

per Table 1, trained 98B model on 1.8T training tokens. 98 billion * 1800 billion * 6 = 1.06e24. Likely some rounding, so will go with developer's reported count.",ESM3 Dataset,,771000000000.0, 771 billion tokens,2.3,,,,,,"More than three billion years of evolution have
produced an image of biology encoded into the
space of natural proteins. Here we show that language models trained on tokens generated by evolution can act as evolutionary simulators to generate functional proteins that are far away from
known proteins. We present ESM3, a frontier
multimodal generative language model that reasons over the sequence, structure, and function
of proteins. ESM3 can follow complex prompts
combining its modalities and is highly responsive
to biological alignment. We have prompted ESM3
to generate fluorescent proteins with a chain of
thought. Among the generations that we synthesized, we found a bright fluorescent protein at far
distance (58% identity) from known fluorescent
proteins. Similarly distant natural fluorescent proteins are separated by over five hundred million
years of evolution,

(from paper preview: https://evolutionaryscale-public.s3.us-east-2.amazonaws.com/research/esm3.pdf )",,Unreleased,,Confident,2024-10-21 15:22:55+00:00,"United States of America,United States of America",,,,,,,4194304.0,Table S1,
ESM3-open-small,Biology,"EvolutionaryScale,University of California (UC) Berkeley","Industry,Academia","Thomas Hayes, Roshan Rao, Halil Akin, Nicholas James Sofroniew, Deniz Oktay, Zeming Lin, Robert Verkuil, Vincent Quy Tran, Jonathan Deaton, Marius Wiggert, Rohil Badkundri, Irhum Shafkat, Jun Gong, Alexander Derry, Raul Santiago Molina, Neil Thomas, Yousuf Khan, Chetan Mishra, Carolyn Kim, Liam J Bartie, Patrick D Hsu, Tom Sercu, Salvatore Candido, Alexander Rives",2024-06-25,ESM3: Simulating 500 million years of evolution with a language model,https://www.evolutionaryscale.ai/blog/esm3-release ,,,,1400000000.0,1.4 billion,2.7e+21,,,"see Table S1. Not clear which 1.4B model is the one that they released, could be either 6.7e20 or 2.7e21.",,,320000000000.0,Table S1,,,,,,,"More than three billion years of evolution have
produced an image of biology encoded into the
space of natural proteins. Here we show that language models trained on tokens generated by evolution can act as evolutionary simulators to generate functional proteins that are far away from
known proteins. We present ESM3, a frontier
multimodal generative language model that reasons over the sequence, structure, and function
of proteins. ESM3 can follow complex prompts
combining its modalities and is highly responsive
to biological alignment. We have prompted ESM3
to generate fluorescent proteins with a chain of
thought. Among the generations that we synthesized, we found a bright fluorescent protein at far
distance (58% identity) from known fluorescent
proteins. Similarly distant natural fluorescent proteins are separated by over five hundred million
years of evolution,

(from paper preview: https://evolutionaryscale-public.s3.us-east-2.amazonaws.com/research/esm3.pdf )",,Open weights (non-commercial),,Confident,2025-02-14 19:14:08+00:00,"United States of America,United States of America",,,,,,,,,
Flexi-JEST++,Vision,Google DeepMind,Industry,"Talfan Evans, Nikhil Parthasarathy, Hamza Merzic, Olivier J. Henaff",2024-06-25,Data curation via joint example selection further accelerates multimodal learning,https://arxiv.org/abs/2406.17711v1,,,,,,1.26e+21,,,"1.26*10^21 from the figure 1

there is slight disrepancy (within confidence interval) between sigclip/flexi-jest++ training compute ratio if we compare epoch's estimated compute and table 1",WebLI,"""We train the learner model in all JEST experiments on the WebLI dataset, specifically a billion-scale subset of English image-text pairs loosely filtered with image-text
alignment ""

""We additionally explore scaling data curation (JEST++/FlexiJEST++) using
reference models trained on “WebLI-curated++” which adds approximately 600M additional webscraped image-text pairs filtered with the same strong curation pipeline.""",1280000000000.0,"4b training examples seen (figure 1)

The vision encoder takes images resized to (256 x 256) and the text-encoder tokenizes text with the sentencepiece tokenizer [26] trained on the English C4 dataset [39]. We crop the text to the first 64 tokens.

visual encoder: ViT-B/16

4*10^9*((256/16)^2 + 64) = 1.28e+12 tokens (text and image)",,,,Google TPU v5e,256.0,,"Data curation is an essential component of large-scale pretraining. In this work, we demonstrate that jointly selecting batches of data is more effective for learning than selecting examples independently. Multimodal contrastive objectives expose the dependencies between data and thus naturally yield criteria for measuring the joint learnability of a batch. We derive a simple and tractable algorithm for selecting such batches, which significantly accelerate training beyond individually-prioritized data points. As performance improves by selecting from larger super-batches, we also leverage recent advances in model approximation to reduce the associated computational overhead. As a result, our approach--multimodal contrastive learning with joint example selection (JEST)--surpasses state-of-the-art models with up to 13× fewer iterations and 10× less computation. Essential to the performance of JEST is the ability to steer the data selection process towards the distribution of smaller, well-curated datasets via pretrained reference models, exposing the level of data curation as a new dimension for neural scaling laws.",,Unreleased,,Confident,2024-12-16 18:48:39+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
JEST++,Vision,Google DeepMind,Industry,"Talfan Evans, Nikhil Parthasarathy, Hamza Merzic, Olivier J. Henaff",2024-06-25,Data curation via joint example selection further accelerates multimodal learning,https://arxiv.org/abs/2406.17711v1,,,,,,1.9e+21,,,"1.9*10^21 from figure 1 and  table 1

there is slight disrepancy (within confidence interval) between sigclip/jest++ training compute ratio if we compare epoch's estimated compute and table 1",WebLI,"""We train the learner model in all JEST experiments on the WebLI dataset, specifically a billion-scale subset of English image-text pairs loosely filtered with image-text
alignment ""

""We additionally explore scaling data curation (JEST++/FlexiJEST++) using
reference models trained on “WebLI-curated++” which adds approximately 600M additional webscraped image-text pairs filtered with the same strong curation pipeline.""",1280000000000.0,"4b training examples seen (figure 1)

The vision encoder takes images resized to (256 x 256) and the text-encoder tokenizes text with the sentencepiece tokenizer [26] trained on the English C4 dataset [39]. We crop the text to the first 64 tokens.

visual encoder: ViT-B/16

4*10^9*((256/16)^2 + 64) = 1.28e+12 tokens (text and image)",,,,Google TPU v5e,256.0,,"Data curation is an essential component of large-scale pretraining. In this work, we demonstrate that jointly selecting batches of data is more effective for learning than selecting examples independently. Multimodal contrastive objectives expose the dependencies between data and thus naturally yield criteria for measuring the joint learnability of a batch. We derive a simple and tractable algorithm for selecting such batches, which significantly accelerate training beyond individually-prioritized data points. As performance improves by selecting from larger super-batches, we also leverage recent advances in model approximation to reduce the associated computational overhead. As a result, our approach--multimodal contrastive learning with joint example selection (JEST)--surpasses state-of-the-art models with up to 13× fewer iterations and 10× less computation. Essential to the performance of JEST is the ability to steer the data selection process towards the distribution of smaller, well-curated datasets via pretrained reference models, exposing the level of data curation as a new dimension for neural scaling laws.",,Unreleased,,Confident,2024-12-16 18:48:41+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Gemma 2 9B,Language,Google DeepMind,Industry,"Gemma Team, Google DeepMind",2024-06-24,"Gemma 2 offers best-in-class performance, runs at incredible speed across different hardware and easily integrates with other AI tools.",https://storage.googleapis.com/deepmind-media/gemma/gemma-2-report.pdf,,,,9000000000.0,,4.32e+23,,,"""For the 9B model, we train on an 8x16x32 configuration of TPUv4, totaling 4096 chips""

6ND = 6*9000000000*8000000000000=4.32e+23",Unspecified unreleased,"Web Documents: A diverse collection of web text ensures the model is exposed to a broad range of linguistic styles, topics, and vocabulary. Primarily English-language content.
Code: Exposing the model to code helps it to learn the syntax and patterns of programming languages, which improves its ability to generate code or understand code-related questions.
Mathematics: Training on mathematical text helps the model learn logical reasoning, symbolic representation, and to address mathematical queries.",8000000000000.0,"""the 9B model on 8 trillion tokens""",,,,Google TPU v4,4096.0,,"Now we’re officially releasing Gemma 2 to researchers and developers globally. Available in both 9 billion (9B) and 27 billion (27B) parameter sizes, Gemma 2 is higher-performing and more efficient at inference than the first generation, with significant safety advancements built in. In fact, at 27B, it offers competitive alternatives to models more than twice its size, delivering the kind of performance that was only possible with proprietary models as recently as December. And that’s now achievable on a single NVIDIA H100 Tensor Core GPU or TPU host, significantly reducing deployment costs.",,Open weights (restricted use),,Confident,2024-12-16 18:16:49+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Gemma 2 27B,Language,Google DeepMind,Industry,"Gemma Team, Google DeepMind",2024-06-24,"Gemma 2 offers best-in-class performance, runs at incredible speed across different hardware and easily integrates with other AI tools.",https://storage.googleapis.com/deepmind-media/gemma/gemma-2-report.pdf,,,,27000000000.0,,2.106e+24,,,"""For the 27B model, we train on an 8x24x32 configuration of
TPUv5p, totaling 6144 chips""

trained on 13T tokens

6ND = 6*27000000000*13000000000000=2.106e+24",Unspecified unreleased,"Web Documents: A diverse collection of web text ensures the model is exposed to a broad range of linguistic styles, topics, and vocabulary. Primarily English-language content.
Code: Exposing the model to code helps it to learn the syntax and patterns of programming languages, which improves its ability to generate code or understand code-related questions.
Mathematics: Training on mathematical text helps the model learn logical reasoning, symbolic representation, and to address mathematical queries.",13000000000000.0,"""We train Gemma 2 27B on 13 trillion tokens of primarily-English data""",,,,Google TPU v5p,6144.0,,"Now we’re officially releasing Gemma 2 to researchers and developers globally. Available in both 9 billion (9B) and 27 billion (27B) parameter sizes, Gemma 2 is higher-performing and more efficient at inference than the first generation, with significant safety advancements built in. In fact, at 27B, it offers competitive alternatives to models more than twice its size, delivering the kind of performance that was only possible with proprietary models as recently as December. And that’s now achievable on a single NVIDIA H100 Tensor Core GPU or TPU host, significantly reducing deployment costs.",,Open weights (restricted use),,Confident,2024-12-30 17:52:17+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Gemma 2 2B,Language,Google DeepMind,Industry,"Gemma Team, Google DeepMind",2024-06-24,"Gemma 2 offers best-in-class performance, runs at incredible speed across different hardware and easily integrates with other AI tools.",https://storage.googleapis.com/deepmind-media/gemma/gemma-2-report.pdf,,,,2600000000.0,,3.12e+22,,,"""For the 2.6B model, we train on a 2x16x16 configuration of TPUv5e, totaling 512 chips""

6ND = 6*2600000000*2000000000000=3.12e+22",Unspecified unreleased,"Web Documents: A diverse collection of web text ensures the model is exposed to a broad range of linguistic styles, topics, and vocabulary. Primarily English-language content.
Code: Exposing the model to code helps it to learn the syntax and patterns of programming languages, which improves its ability to generate code or understand code-related questions.
Mathematics: Training on mathematical text helps the model learn logical reasoning, symbolic representation, and to address mathematical queries.",2000000000000.0,"""the 2.6B on 2 trillion tokens""",,,,Google TPU v5e,512.0,,"Now we’re officially releasing Gemma 2 to researchers and developers globally. Available in both 9 billion (9B) and 27 billion (27B) parameter sizes, Gemma 2 is higher-performing and more efficient at inference than the first generation, with significant safety advancements built in. In fact, at 27B, it offers competitive alternatives to models more than twice its size, delivering the kind of performance that was only possible with proprietary models as recently as December. And that’s now achievable on a single NVIDIA H100 Tensor Core GPU or TPU host, significantly reducing deployment costs.",,Open weights (restricted use),,Confident,2024-12-09 19:48:52+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
DiffPALM,Biology,"Ecole Polytechnique F´ed´erale de Lausanne (EPFL),Swiss Institute of Bioinformatics",Academia,"Umberto Lupo, Damiano Sgarbossa, Anne-Florence Bitbol",2024-06-24,Pairing interacting protein sequences using masked language modeling,https://www.pnas.org/doi/abs/10.1073/pnas.2311887121,6.0,,,,,,,,,,,40000001.00000003,"Single MSA data points = 125 × 300 = 37,500 tokens
Total data points = 37,500 × 1,000 = 37,500,000 tokens
Final estimate = 4.0 × 10^7 tokens",,,,,,,"Predicting which proteins interact together from amino acid sequences is an important task. We develop a method to pair interacting protein sequences which leverages the power of protein language models trained on multiple sequence alignments (MSAs), such as MSA Transformer and the EvoFormer module of AlphaFold. We formulate the problem of pairing interacting partners among the paralogs of two protein families in a differentiable way. We introduce a method called Differentiable Pairing using Alignment-based Language Models (DiffPALM) that solves it by exploiting the ability of MSA Transformer to fill in masked amino acids in multiple sequence alignments using the surrounding context. MSA Transformer encodes coevolution between functionally or structurally coupled amino acids within protein chains. It also captures inter-chain coevolution, despite being trained on single-chain data. Relying on MSA Transformer without fine-tuning, DiffPALM outperforms existing coevolution-based pairing methods on difficult benchmarks of shallow multiple sequence alignments extracted from ubiquitous prokaryotic protein datasets. It also outperforms an alternative method based on a state-of-the-art protein language model trained on single sequences. Paired alignments of interacting protein sequences are a crucial ingredient of supervised deep learning methods to predict the three-dimensional structure of protein complexes. Starting from sequences paired by DiffPALM substantially improves the structure prediction of some eukaryotic protein complexes by AlphaFold-Multimer. It also achieves competitive performance with using orthology-based pairing.",,,,Unverified,2025-01-30 05:04:22+00:00,"Switzerland,Switzerland",,,,,,,,,
BADGER,Biology,"NVIDIA,University of California (UC) Berkeley","Industry,Academia","Yue Jian, Curtis Wu, Danny Reidenbach, Aditi S. Krishnapriyan",2024-06-24,General Binding Affinity Guidance for Diffusion Models in Structure-Based Drug Design,https://arxiv.org/abs/2406.16821,1.0,,,,,,,,,,,100001.00000000006,"100,000 (training) + 100 (testing) = 100,100 unique datapoints
20 epochs mentioned but only unique datapoints counted
Final estimate: 1.0e5",,,,,,,"Structure-Based Drug Design (SBDD) focuses on generating valid ligands that strongly and specifically bind to a designated protein pocket. Several methods use machine learning for SBDD to generate these ligands in 3D space, conditioned on the structure of a desired protein pocket. Recently, diffusion models have shown success here by modeling the underlying distributions of atomic positions and types. While these methods are effective in considering the structural details of the protein pocket, they often fail to explicitly consider the binding affinity. Binding affinity characterizes how tightly the ligand binds to the protein pocket, and is measured by the change in free energy associated with the binding process. It is one of the most crucial metrics for benchmarking the effectiveness of the interaction between a ligand and protein pocket. To address this, we propose BADGER: Binding Affinity Diffusion Guidance with Enhanced Refinement. BADGER is a general guidance method to steer the diffusion sampling process towards improved protein-ligand binding, allowing us to adjust the distribution of the binding affinity between ligands and proteins. Our method is enabled by using a neural network (NN) to model the energy function, which is commonly approximated by AutoDock Vina (ADV). ADV’s energy function is non-differentiable, and estimates the affinity based on the interactions between a ligand and target protein receptor. By using a NN as a differentiable energy function proxy, we utilize the gradient of our learned energy function as a guidance method on top of any trained diffusion model. We show that our method improves the binding affinity of generated ligands to their protein receptors by up to 60%, significantly surpassing previous machine learning methods. We also show that our guidance method is flexible and can be easily applied to other diffusion-based SBDD frameworks.",,,,Unverified,2025-01-30 05:04:46+00:00,"United States of America,United States of America",,,,,,,,,
Code Droid,Language,Factory,Industry,,2024-06-22,Code Droid: A Technical Report,https://www.factory.ai/news/code-droid-technical-report,,,,,,,,,,,,,,,,,,,,"Code Droid is designed to execute coding tasks based on natural language instructions. For our customers, its primary function is to automate rote, tedious programming tasks. Common use cases include codebase modernization, feature development, proof-of-concept creation, and building integrations. Here we outline some of the core functionality that we’ve developed to enable it to perform reliably in production environments.",,Hosted access (no API),,Unknown,2024-11-22 19:52:40+00:00,United States of America,,,,,,,,,
Pangu 5.0,,,,,2024-06-21,"“解难题、做难事” 盘古大模型5.0正式发布
",https://www.stdaily.com/index/kejixinwen/202406/41102fb3cbc340cb87b53181fd71b5d1.shtml,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Claude 3.5 Sonnet,"Multimodal,Language,Vision",Anthropic,Industry,,2024-06-20,Claude 3.5 Sonnet,https://www-cdn.anthropic.com/fed9cc193a14b84131812372d8d5857f8f304c52/Model_Card_Claude_3_Addendum.pdf,,"Significant use,SOTA improvement","""It also sets new performance standards in evaluations of graduate
level science knowledge (GPQA) [1], general reasoning (MMLU) [2], and coding proficiency (HumanEval)
[3].""",,,3.650001e+25,,,"Training compute estimated from benchmark scores.

Blog post by Dario Amodei includes some info on 3.5 Sonnet compute: https://darioamodei.com/on-deepseek-and-export-controls
""Claude 3.5 Sonnet is a mid-sized model that cost a few $10M's to train (I won't give an exact number). Also, 3.5 Sonnet was not trained in any way that involved a larger or more expensive model (contrary to some rumors).""",Unspecified unreleased,Training data cutoff Apr 2024,,,,,,,,,,,API access,,Speculative,2025-01-30 02:34:26+00:00,United States of America,,,,,,,,,
Hermes 2 Theta Llama-3 70B,Language,"Nous Research,Arcee AI","Industry,Industry","Teknium, Charles Goddard, interstellarninja, theemozilla, karan4d, huemin_art",2024-06-20,Hermes 2 Theta Llama-3 70B Model Card,https://huggingface.co/NousResearch/Hermes-2-Theta-Llama-3-70B,,,,70000000000.0,70b,,,,,,,,,,,,,,,"Hermes-2 Θ (Theta) 70B is the continuation of our experimental merged model released by Nous Research, in collaboration with Charles Goddard and Arcee AI, the team behind MergeKit.

Hermes-2 Θ is a merged and then further RLHF'ed version our excellent Hermes 2 Pro model and Meta's Llama-3 Instruct model to form a new model, Hermes-2 Θ, combining the best of both worlds of each model.",,Open weights (restricted use),,Unverified,2024-12-27 01:01:44+00:00,"United States of America,United States of America",Llama 3-70B,,,,,,,,
RNA-FrameFlow,Biology,"National University of Singapore,Prescient Design,University of Missouri,University of Cambridge","Academia,Industry,Academia,Academia","Rishabh Anand, Chaitanya K. Joshi, Alex Morehead, Arian R. Jamasb, Charles Harris, Simon V. Mathis, Kieran Didi, Bryan Hooi, Pietro Liò",2024-06-19,RNA-FrameFlow: Flow Matching for de novo 3D RNA Backbone Design,https://arxiv.org/abs/2406.13839,1.0,,,,,1.400000000000012e+19,,,"1. Hardware: 4x NVIDIA GeForce RTX 3090 (1.60e+14 FLOP/s per GPU)
2. Training duration: 15 hours (directly provided) = 54,000 seconds
3. Utilization: 40%
4. Calculation: 1.60e+14 FLOP/s × 4 GPUs × 54,000 seconds × 0.4 = 1.4e+19 FLOPs",,,638001.0000000007,"6,382 sequences = 5,319 (primary) + 1,063 (augmented)
638,200 datapoints = 6,382 sequences × 100 nucleotides/sequence

Final estimate: 638,200 datapoints",,,,,,,,,,,Unverified,2025-02-14 19:14:29+00:00,"Singapore,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
MPNNsol,Biology,"Ecole Polytechnique F´ed´erale de Lausanne (EPFL),University at Buffalo,University of Washington,Massachusetts Institute of Technology (MIT)","Academia,Academia,Academia,Academia","Casper A. Goverde, Martin Pacesa, Nicolas Goldbach, Lars J. Dornfeld, Petra E. M. Balbi, Sandrine Georgeon, Stéphane Rosset, Srajan Kapoor, Jagrity Choudhury, Justas Dauparas, Christian Schellhaas, Simon Kozlov, David Baker, Sergey Ovchinnikov, Alex J. Vecchio, Bruno E. Correia",2024-06-19,Computational design of soluble and functional membrane protein analogues,https://www.nature.com/articles/s41586-024-07601-y#Sec30,,,,,,,,,,PDB (Protein Data Bank),"The MPNNsol model was trained on protein assemblies in the PDB 
(as of 2 August 2021) determined by X-ray crystallography or cryo-EM to a resolution of better than 3.5 Å and with fewer than 10,000 residue",,,,,,,,,"De novo design of complex protein folds using solely computational means remains a substantial challenge1. Here we use a robust deep learning pipeline to design complex folds and soluble analogues of integral membrane proteins. Unique membrane topologies, such as those from G-protein-coupled receptors2, are not found in the soluble proteome, and we demonstrate that their structural features can be recapitulated in solution. Biophysical analyses demonstrate the high thermal stability of the designs, and experimental structures show remarkable design accuracy. The soluble analogues were functionalized with native structural motifs, as a proof of concept for bringing membrane protein functions to the soluble proteome, potentially enabling new approaches in drug discovery. In summary, we have designed complex protein topologies and enriched them with functionalities from membrane proteins, with high experimental success rates, leading to a de facto expansion of the functional soluble fold space.",,Open weights (unrestricted),,Unknown,2024-11-25 17:09:02+00:00,"Switzerland,United States of America,United States of America,United States of America","ProteinMPNN,AlphaFold 2",,,,,,,,
GLM-4V-9B,"Language,Multimodal,Vision","Zhipu AI,Tsinghua University","Industry,Academia","Aohan Zeng, Bin Xu, Bowen Wang, Chenhui Zhang, Da Yin, Diego Rojas, Guanyu Feng, Hanlin Zhao, Hanyu Lai, Hao Yu, Hongning Wang, Jiadai Sun, Jiajie Zhang, Jiale Cheng, Jiayi Gui, Jie Tang, Jing Zhang, Juanzi Li, Lei Zhao, Lindong Wu, Lucen Zhong, Mingdao Liu, Minlie Huang, Peng Zhang, Qinkai Zheng, Rui Lu, Shuaiqi Duan, Shudan Zhang, Shulin Cao, Shuxun Yang, Weng Lam Tam, Wenyi Zhao, Xiao Liu, Xiao Xia, Xiaohan Zhang, Xiaotao Gu, Xin Lv, Xinghan Liu, Xinyi Liu, Xinyue Yang, Xixuan Song, Xunkai Zhang, Yifan An, Yifan Xu, Yilin Niu, Yuantao Yang, Yueyan Li, Yushi Bai, Yuxiao Dong, Zehan Qi, Zhaoyu Wang, Zhen Yang, Zhengxiao Du, Zhenyu Hou, Zihan Wang",2024-06-18,ChatGLM: A Family of Large Language Models from GLM-130B to GLM-4 All Tools,https://arxiv.org/abs/2406.12793,,,,9000000000.0,9B,,5.423,,"6ND = 6*9000000000*10000000000000=54*10^(9+13)=5.4*10^23

""GLM-4-9B is pre-trained on approximately ten trillion tokens of multilingual corpus with a context length of 8192 (8K) and post-trained with the same pipeline and data used for GLM-4 (0520)"".
",,"""To date, the GLM-4 models are
pre-trained on ten trillions of tokens mostly in Chinese and English, along with a small set of corpus from 24 languages, and aligned primarily for Chinese and English usage""",10000000000000.0,"""GLM-4-9B is pre-trained on approximately ten trillion tokens of multilingual corpus with a context length of 8192 (8K) and post-trained with the same pipeline and data used for GLM-4 (0520)"".",,,,,,,"We introduce ChatGLM, an evolving family of large language models that we have been developing over time. This report primarily focuses on the GLM-4 language series, which includes GLM-4, GLM-4-Air, and GLM-4-9B. They represent our most capable models that are trained with all the insights and lessons gained from the preceding three generations of ChatGLM. To date, the GLM-4 models are pre-trained on ten trillions of tokens mostly in Chinese and English, along with a small set of corpus from 24 languages, and aligned primarily for Chinese and English usage. The high-quality alignment is achieved via a multi-stage post-training process, which involves supervised fine-tuning and learning from human feedback. Evaluations show that GLM-4 1) closely rivals or outperforms GPT-4 in terms of general metrics such as MMLU, GSM8K, MATH, BBH, GPQA, and HumanEval, 2) gets close to GPT-4-Turbo in instruction following as measured by IFEval, 3) matches GPT-4 Turbo (128K) and Claude 3 for long context tasks, and 4) outperforms GPT-4 in Chinese alignments as measured by AlignBench. The GLM-4 All Tools model is further aligned to understand user intent and autonomously decide when and which tool(s) touse -- including web browser, Python interpreter, text-to-image model, and user-defined functions -- to effectively complete complex tasks. In practical applications, it matches and even surpasses GPT-4 All Tools in tasks like accessing online information via web browsing and solving math problems using Python interpreter. Over the course, we have open-sourced a series of models, including ChatGLM-6B (three generations), GLM-4-9B (128K, 1M), GLM-4V-9B, WebGLM, and CodeGeeX, attracting over 10 million downloads on Hugging face in the year 2023 alone. The open models can be accessed through this https URL and this https URL.",,Open weights (non-commercial),,Likely,2025-02-03 16:24:00+00:00,"China,China",,,,,,,,,
DeepSeek-Coder-V2 236B,Language,DeepSeek,Industry,"Qihao Zhu, Daya Guo, Zhihong Shao, Dejian Yang, Peiyi Wang, Runxin Xu, Y. Wu, Yukun Li, Huazuo Gao, Shirong Ma, Wangding Zeng, Xiao Bi, Zihui Gu, Hanwei Xu, Damai Dai, Kai Dong, Liyue Zhang, Yishi Piao, Zhibin Gou, Zhenda Xie, Zhewen Hao, Bingxuan Wang, Junxiao Song, Deli Chen, Xin Xie, Kang Guan, Yuxiang You, Aixin Liu, Qiushi Du, Wenjun Gao, Xuan Lu, Qinyu Chen, Yaohui Wang, Chengqi Deng, Jiashi Li, Chenggang Zhao, Chong Ruan, Fuli Luo, Wenfeng Liang",2024-06-17,DeepSeek-Coder-V2: Breaking the Barrier of Closed-Source Models in Code Intelligence,https://github.com/deepseek-ai/DeepSeek-Coder-V2,,SOTA improvement,"New SOTA on Aider, AIME 2024, and Math Odyssey benchmarks (including against proprietary models such as Claude 3 Opus, GPT-4o and GPT-4 Turbo).
Note that Figure 1 appears to show the new model getting SOTA for several other benchmarks, but omits results from GPT-4o which wins in most cases.",236000000000.0,Mixture of experts model. 21B parameters activated per token.,1.2852e+24,,,"Trained on a total of 10.2T tokens
6NC: 6 * 10.2T * 21B active parameters = 1.285e24","GitHub,Common Crawl","See Section 2. ""In the pre-training phase, the dataset of DeepSeek-Coder-V2 is created with a composition of 60% source code, 10% math corpus, and 30% natural language corpus""",3191000000000.0,"""In the pre-training phase, the dataset of DeepSeek-Coder-V2 is created with a composition of 60% source code, 10% math corpus, and 30% natural language corpus ... The source code consists of 1,170B code-related tokens sourced from GitHub and CommonCrawl... For the math corpus, we collect 221B math-related tokens sourced from CommonCrawl... In total, DeepSeek-Coder-V2 has been exposed to 10.2T training tokens, where 4.2 trillion tokens originate from the DeepSeek V2 dataset, while the remaining 6 trillion tokens come from the DeepSeek-Coder-V2 dataset""

Total of 1.391T tokens in the new data.

From the DeepSeek-V2 paper: ""our tokenized pretraining corpus contains 8.1T tokens""

So some tokens are trained over for multiple epochs:
- 6T * 0.6 / 1.17T = 3.1 epochs on the code corpus
- 6T * 0.1 / 221B = 2.7 epochs on the math corpus
- 6T * 0.3 / 8.1T = 0.22 epochs on the natural language corpus

Total unique tokens seen is likely 1.17T + 221B + (6T*0.3) = 3.191T",,,,,,Self-supervised learning,"We present DeepSeek-Coder-V2, an open-source Mixture-of-Experts (MoE) code language model that achieves performance comparable to GPT4-Turbo in code-specific tasks. Specifically, DeepSeek-Coder-V2 is further pre-trained from an intermediate checkpoint of DeepSeek-V2 with additional 6 trillion tokens. Through this continued pre-training, DeepSeek-Coder-V2 substantially enhances the coding and mathematical reasoning capabilities of DeepSeek-V2, while maintaining comparable performance in general language tasks. Compared to DeepSeekCoder-33B, DeepSeek-Coder-V2 demonstrates significant advancements in various aspects of code-related tasks, as well as reasoning and general capabilities. Additionally, DeepSeek-CoderV2 expands its support for programming languages from 86 to 338, while extending the context length from 16K to 128K. In standard benchmark evaluations, DeepSeek-Coder-V2 achieves superior performance compared to closed-source models such as GPT4-Turbo, Claude 3 Opus, and Gemini 1.5 Pro in coding and math benchmarks.",,Open weights (restricted use),,Confident,2025-02-06 00:19:15+00:00,China,DeepSeek-V2 (MoE-236B),,,,"The paper does not mention any hardware, GPUs or any information regarding the hardware used.",,36864000.0,"Most training is done at batch size of 36,864. They do long context training: ""In the first stage, we utilize a sequence length of 32K and a batch size of 1152 for 1000 steps. In the second stage, we train the model for an additional 1000 steps, employing a sequence length of 128K and a batch size of 288 sequences"" 128k*288 = 36,864,000",
Gen-3 Alpha,"Multimodal,Video,Image generation",Runway,Industry,,2024-06-17,,https://runwayml.com/research/introducing-gen-3-alpha,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Gen-3 Alpha is the first of the next generation of foundation models trained by Runway on a new infrastructure built for large-scale multimodal training. It is a major improvement in fidelity, consistency, and motion over Gen-2, and a step towards building General World Models.",,Hosted access (no API),,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Ovis-7B,,,,"Shiyin Lu, Yang Li, Qing-Guo Chen, Zhao Xu, Weihua Luo, Kaifu Zhang, Han-Jia Ye",2024-06-17,"Ovis: Structural Embedding Alignment for Multimodal Large Language Model
",https://arxiv.org/abs/2405.20797,12.0,,,7000000000.0,,,,,,,,,,,,,,,,"We propose Ovis, a novel MLLM architecture designed to structurally align visual and textual embeddings. Ovis integrates an additional learnable visual embedding table into the visual encoder’s process. To capture rich visual semantics, each image patch indexes the visual embedding table multiple times, resulting in a final visual embedding that is a probabilistic combination of the indexed embeddings.",,,,Unverified,,,,,,,,,,,
MindEye2,"Medicine,Vision,Image generation","Stability AI,Medical AI Research Center (MedARC),Princeton University,University of Minnesota,University of Sydney,University of Waterloo","Industry,Research collective,Academia,Academia,Academia,Academia","Paul S. Scotti, Mihir Tripathy, Cesar Kadir Torrico Villanueva, Reese Kneeland, Tong Chen, Ashutosh Narang, Charan Santhirasegaran, Jonathan Xu, Thomas Naselaris, Kenneth A. Norman, Tanishq Mathew Abraham",2024-06-15,MindEye2: Shared-Subject Models Enable fMRI-To-Image With 1 Hour of Data,https://arxiv.org/abs/2403.11207,,,,,,,,,,Natural Scenes Dataset (NSD) ,,,,150.0,,"from their note ""If you are training MindEye2 on a single GPU on the full 40 sessions, expect that pre-training and fine-tuning both take approximately 1 day to complete.""  I am assuming with ""Likely"" confidence that they trained for 24 chip-hours",NVIDIA A100 SXM4 80 GB,8.0,,"Reconstructions of visual perception from brain activity have improved tremendously, but the practical utility of such methods has been limited. This is because such models are trained independently per subject where each subject requires dozens of hours of expensive fMRI training data to attain high-quality results. The present work showcases high-quality reconstructions using only 1 hour of fMRI training data. We pretrain our model across 7 subjects and then fine-tune on minimal data from a new subject. Our novel functional alignment procedure linearly maps all brain data to a shared-subject latent space, followed by a shared non-linear mapping to CLIP image space. We then map from CLIP space to pixel space by fine-tuning Stable Diffusion XL to accept CLIP latents as inputs instead of text. This approach improves out-of-subject generalization with limited training data and also attains state-of-the-art image retrieval and reconstruction metrics compared to single-subject approaches. MindEye2 demonstrates how accurate reconstructions of perception are possible from a single visit to the MRI facility. All code is available on GitHub.",,Open weights (unrestricted),,Likely,2024-12-02 15:22:11+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland,United States of America,United States of America,United States of America,Australia,Canada",Stable Diffusion XL (SDXL),8.08704e+18,312000000000000*24*3600*0.3 = 8.08704e+18,,,,,,
Nemotron-4 340B,Language,NVIDIA,Industry,"Bo Adler, Niket Agarwal, Ashwath Aithal, Dong H. Anh, Pallab Bhattacharya, Annika Brundyn, Jared Casper, Bryan Catanzaro, Sharon Clay, Jonathan Cohen, Sirshak Das, Ayush Dattagupta, Olivier Delalleau, Leon Derczynski, Yi Dong, Daniel Egert, Ellie Evans, Aleksander Ficek, Denys Fridman, Shaona Ghosh, Boris Ginsburg, Igor Gitman, Tomasz Grzegorzek, Robert Hero, Jining Huang, Vibhu Jawa, Joseph Jennings, Aastha Jhunjhunwala, John Kamalu, Sadaf Khan, Oleksii Kuchaiev, Patrick LeGresley, Hui Li, Jiwei Liu, Zihan Liu, Eileen Long, Ameya Sunil Mahabaleshwarkar, Somshubra Majumdar, James Maki, Miguel Martinez, Maer Rodrigues de Melo, Ivan Moshkov, Deepak Narayanan, Sean Narenthiran, Jesus Navarro, Phong Nguyen, Osvald Nitski, Vahid Noroozi, Guruprasad Nutheti, Christopher Parisien, Jupinder Parmar, Mostofa Patwary, Krzysztof Pawelec, Wei Ping, Shrimai Prabhumoye, Rajarshi Roy, Trisha Saar, Vasanth Rao Naik Sabavat, Sanjeev Satheesh, Jane Polak Scowcroft, Jason Sewall, Pavel Shamis, Gerald Shen, Mohammad Shoeybi, Dave Sizer, Misha Smelyanskiy, Felipe Soares, Makesh Narsimhan Sreedhar, Dan Su, Sandeep Subramanian, Shengyang Sun, Shubham Toshniwal, Hao Wang, Zhilin Wang, Jiaxuan You, Jiaqi Zeng, Jimmy Zhang, Jing Zhang, Vivienne Zhang, Yian Zhang, Chen Zhu",2024-06-14,NVIDIA Releases Open Synthetic Data Generation Pipeline for Training Large Language Models,https://blogs.nvidia.com/blog/nemotron-4-synthetic-data-generation-llm-training/ ,,Training cost,"~2e25 FLOP, so high training cost, likely >5M",340000000000.0,340B,1.7999999999999999e+25,,,"9 trillion tokens for training
6 * 340B * 9T = 1.8E25

alternatively, can do a hardware estimate with a few extra steps:

According to the technical report, Nemotron-4 340B was trained using up to 6144 H100 GPUs. Helpfully, they also report the model FLOP utilization (MFU), which was 41-42% (Table 2). This is the ratio of the actual output of their GPUs, in FLOP used for training, relative to their theoretical max of 989 teraFLOP/s per GPU. 
Unfortunately, the report omits the last ingredient, which is the duration of the training run. However, in Table 2 they report some relevant data that we can use to infer the training time. 
Nemotron-4 was trained in several stages, but the largest stage used all 6144 GPUs with a batch size of 2304 and an iteration time (time per batch) of 8.0 seconds. This stage involved 7.6T tokens, so it makes up the majority of training. 
A batch size of 2304 means that each batch consists of 2304 sequences, and they report that the sequence length used for training was 4096 tokens. This means that each batch contained 4096 * 2304 = 9,437,184 tokens. 
So, during this stage, it took 8 seconds to train the model on 9.4m tokens. Extrapolating to the entire 9T token dataset, this implies the training run would have taken 7,659,574 seconds, or 89 days. (it actually took longer because they didn't use all their GPUs for the whole run) 
Multiplying 7,659,574 seconds by 41% MFU, 989 peak teraFLOP/s for each H100, and 6144 H100s, we get ~1.9e25 FLOP. This is very close to our first estimate. 
",Unspecified unreleased,"The technical report for the 340B model cites the report for the 15B version (https://arxiv.org/pdf/2402.16819 )

from that paper:

""We train Nemotron-4 15B on a pre-training dataset consisting of 8 trillion tokens. At a high-level,
the data blend is split into three different types of data: English natural language data (70%), multilingual
natural language data (15%), and source-code data (15%).
The English corpus consists of curated documents from a variety of sources and domains including web
documents, news articles, scientific papers, books, etc and the distribution used in our pre-training set is
highlighted in Figure 2. The code and multilingual data consists of a diverse set of natural and programming
languages. We find that appropriately sampling tokens from these languages is key to strong accuracies in
these domains. We share the distributions used for both code and multilingual tokens in our pre-training
dataset in Figure 3 and Figure 4 respectively.
In constructing the pre-training corpus, we remove any possible duplicates via document-level exact and
near-deduplication (Jennings et al., 2023). We additionally applied document-level quality filtering across
our corpus using a language-model based filtering approach similar to (Wenzek et al., 2019) in addition to a
series of heuristic filters as described in (Rae et al., 2022) and (Raffel et al., 2020).""",6750000000000.0,"9T training tokens.

They first train on an 8T token dataset and then an additional 1T tokens, it's slightly unclear if that's more data or a partial second epoch

6.75T words using 1 token = 0.75 words",,2200.0,"see training compute notes, this is an inferred estimate",NVIDIA H100 SXM5 80GB,6144.0,,"We release the Nemotron-4 340B model family, including Nemotron-4-340B-Base, Nemotron-4-
340B-Instruct, and Nemotron-4-340B-Reward. Our models are open access under the NVIDIA Open
Model License Agreement, a permissive model license that allows distribution, modification, and use of
the models and its outputs. These models perform competitively to open access models on a wide range
of evaluation benchmarks, and were sized to fit on a single DGX H100 with 8 GPUs when deployed in
FP8 precision. We believe that the community can benefit from these models in various research studies
and commercial applications, especially for generating synthetic data to train smaller language models.
Notably, over 98% of data used in our model alignment process is synthetically generated, showcasing
the effectiveness of these models in generating synthetic data. To further support open research and
facilitate model development, we are also open-sourcing the synthetic data generation pipeline used in
our model alignment process.

(from technical report: https://d1qx31qr3h6wln.cloudfront.net/publications/Nemotron_4_340B_8T_0.pdf )",,Open weights (unrestricted),0.410675,Confident,2025-01-19 23:31:10+00:00,United States of America,,,,,,,,,
PLaMo-100B,Language,Preferred Networks Inc,Industry,Preferred Elements (PFE),2024-06-14,"Pre-training of the proprietary LLM ""PLaMo-100B"" with 100 billion parameters",https://tech.preferred.jp/ja/blog/plamo-100b/,,,,100000000000.0,,1.1999999999999999e+24,,,6*100B*2T=1.2e24,,,,"""The pre-trained model of PLaMo-100B developed this time was trained on a total of 2T tokens of both Japanese and English text data.""",,,,,,,"Preferred Elements (PFE), a subsidiary of Preferred Networks (PFN), has been developing a 100 billion (100B) parameter LLM called ""PLaMo-100B"" since February. The pre-training part of the development of PLaMo-100B was completed in May, so in this article we will introduce the pre-training part of this model.",,API access,,Unverified,2025-02-14 19:14:25+00:00,Japan,,,,,,,,,
DigiRL,"Vision,Language","University of California (UC) Berkeley,University of Illinois Urbana-Champaign (UIUC),Google DeepMind","Academia,Academia,Industry","Hao Bai, Yifei Zhou, Mert Cemri, Jiayi Pan, Alane Suhr, Sergey Levine, Aviral Kumar",2024-06-14,DigiRL: Training In-The-Wild Device-Control Agents with Autonomous Reinforcement Learning,https://arxiv.org/abs/2406.11896,,,,,,,,,,,,,,,,,,,,"Training corpuses for vision language models (VLMs) typically lack sufficient amounts of decision-centric data. This renders off-the-shelf VLMs sub-optimal for decision-making tasks such as in-the-wild device control through graphical user interfaces (GUIs). While training with static demonstrations has shown some promise, we show that such methods fall short for controlling real GUIs due to their failure to deal with real-world stochasticity and non-stationarity not captured in static observational data. This paper introduces a novel autonomous RL approach, called DigiRL, for training in-the-wild device control agents through fine-tuning a pre-trained VLM in two stages: offline RL to initialize the model, followed by offline-to-online RL. To do this, we build a scalable and parallelizable Android learning environment equipped with a VLM-based evaluator and develop a simple yet effective RL approach for learning in this domain. Our approach runs advantage-weighted RL with advantage estimators enhanced to account for stochasticity along with an automatic curriculum for deriving maximal learning signal. We demonstrate the effectiveness of DigiRL using the Android-in-the-Wild (AitW) dataset, where our 1.3B VLM trained with RL achieves a 49.5% absolute improvement -- from 17.7 to 67.2% success rate -- over supervised fine-tuning with static human demonstration data. These results significantly surpass not only the prior best agents, including AppAgent with GPT-4V (8.3% success rate) and the 17B CogAgent trained with AitW data (38.5%), but also the prior best autonomous RL approach based on filtered behavior cloning (57.8%), thereby establishing a new state-of-the-art for digital agents for in-the-wild device control.",,Open weights (unrestricted),,Unverified,2024-12-02 20:51:24+00:00,"United States of America,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
OpenVLA,"Robotics,Vision,Language","Stanford University,University of California (UC) Berkeley,Toyota Research Institute,Google DeepMind,Massachusetts Institute of Technology (MIT),Physical Intelligence","Academia,Academia,Industry,Industry,Academia,Industry","Moo Jin Kim, Karl Pertsch, Siddharth Karamcheti, Ted Xiao, Ashwin Balakrishna, Suraj Nair, Rafael Rafailov, Ethan Foster, Grace Lam, Pannag Sanketi, Quan Vuong, Thomas Kollar, Benjamin Burchfiel, Russ Tedrake, Dorsa Sadigh, Sergey Levine, Percy Liang, Chelsea Finn",2024-06-13,OpenVLA: An Open-Source Vision-Language-Action Mode,"https://openvla.github.io/
https://arxiv.org/abs/2406.09246",73.0,SOTA improvement,"""OpenVLA outperforms the 55B-parameter RT-2-X model [1, 7], the prior state-of-the-art VLA, by 16.5% absolute success rate across 29 evaluation tasks on the WidowX and Google Robot embodiments.""",7188100000.0,"Based on a Prismatic-7B VLM backbone, which itself is comprised of 600M parameter vision encoder (DinoV2 + SigLIP) plus Llama-2 7B. Table 1 indicates 7.1881 billion trainable parameters",1.1e+23,,,"Majority of compute is from VLA pre-training embedded in Prismatic-7B and it's constituent models. 

The fine-tuning compute used in this paper is ""64 A100 GPUs for 14 days, or a total of 21,500 A100-hours""
21500 * 3600 * 3.12e14 * 0.4 = 9.66e21

Prismatic-7B training took ""less than 9 hours"" on 8 A100s: 9 * 3600 * 8 * 3.12e14 * 0.4 = 3.23e19

Add in the pre-trained components:
- DinoV2 = 7.42e21, per our database
- The SigLIP model in question is SoViT-400m/14 from the cited Alabdulmohsin et al., 2023) and ""is pretrained on 40 billion examples, which amounts to 9T GFLOPs and 230K TPUv3 core-hours"" = 9e21
- Llama 2-7B = 8.4e22, per our database

Total
9.66e21 + 3.23e19 + 7.42e21 + 9e21 + 8.4e22 = 1.10e23",Open X-Embodiment,"""The full OpenX dataset, at the time of writing, consists of more than 70 individual robot datasets, with more than 2M robot trajectories [...] we apply multiple steps of data curation to the raw dataset.""",970000.0,"""OpenVLA consists of a pretrained visually-conditioned language model backbone that captures visual features at multiple granularities, fine-tuned on a large, diverse dataset of 970k robot manipulation trajectories from the Open-X Embodiment [1] dataset""
Filtered from 2M total in OpenX.",27.0,336.0,"""The final OpenVLA model is trained on a cluster of 64 A100 GPUs for 14 days""
14 days * 24 hr/day = 336 hours",NVIDIA A100,64.0,Supervised,"Large policies pretrained on a combination of Internet-scale vision-language data and diverse robot demonstrations have the potential to change how we teach robots new skills: rather than training new behaviors from scratch, we can fine-tune such vision-language-action (VLA) models to obtain robust, generalizable policies for visuomotor control. Yet, widespread adoption of VLAs for robotics has been challenging as 1) existing VLAs are largely closed and inaccessible to the public, and 2) prior work fails to explore methods for efficiently fine-tuning VLAs for new tasks, a key component for adoption. Addressing these challenges, we introduce OpenVLA, a 7B-parameter open-source VLA trained on a diverse collection of 970k real-world robot demonstrations. OpenVLA builds on a Llama 2 language model combined with a visual encoder that fuses pretrained features from DINOv2 and SigLIP. As a product of the added data diversity and new model components, OpenVLA demonstrates strong results for generalist manipulation, outperforming closed models such as RT-2-X (55B) by 16.5% in absolute task success rate across 29 tasks and multiple robot embodiments, with 7x fewer parameters. We further show that we can effectively fine-tune OpenVLA for new settings, with especially strong generalization results in multi-task environments involving multiple objects and strong language grounding abilities, and outperform expressive from-scratch imitation learning methods such as Diffusion Policy by 20.4%. We also explore compute efficiency; as a separate contribution, we show that OpenVLA can be fine-tuned on consumer GPUs via modern low-rank adaptation methods and served efficiently via quantization without a hit to downstream success rate. Finally, we release model checkpoints, fine-tuning notebooks, and our PyTorch codebase with built-in support for training VLAs at scale on Open X-Embodiment datasets.",,Open weights (unrestricted),,Confident,2025-02-14 19:16:04+00:00,"United States of America,United States of America,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America,United States of America",Llama 2-7B,9.66e+21,"""64 A100 GPUs for 14 days, or a total of 21,500 A100-hours""
21500 * 3600 * 3.12e14 * 0.4 = 9.66e21",,,,2048.0,,
Mamba2-Hybrid,Language,NVIDIA,Industry,"Roger Waleffe, Wonmin Byeon, Duncan Riach, Brandon Norick, Vijay Korthikanti, Tri Dao, Albert Gu, Ali Hatamizadeh, Sudhakar Singh, Deepak Narayanan, Garvit Kulshreshtha, Vartika Singh, Jared Casper, Jan Kautz, Mohammad Shoeybi, Bryan Catanzaro",2024-06-12,An Empirical Study of Mamba-based Language Models,https://arxiv.org/abs/2406.07887,,,,8660000000.0,Table 6,1.8186e+23,,,"6ND = 6*8660000000.00 parameters * 3500000000000 tokens = 1.8186 × 10^23

",Unspecified unreleased,"""We train the models discussed in this report on 1.1T and 3.5T token datasets. Both datasets are predecessors of the dataset used to train Nemotron-4 and are comprised of 70% English, 15% non-English, and 15% code.""

",3500000000000.0,,,,,NVIDIA H100 SXM5 80GB,1024.0,,"Selective state-space models (SSMs) like Mamba overcome some of the shortcomings of Transformers, such as quadratic computational complexity with sequence length and large inference-time memory requirements from the key-value cache. Moreover, recent studies have shown that SSMs can match or exceed the language modeling capabilities of Transformers, making them an attractive alternative. In a controlled setting (e.g., same data), however, studies so far have only presented small scale experiments comparing SSMs to Transformers. To understand the strengths and weaknesses of these architectures at larger scales, we present a direct comparison between 8B-parameter Mamba, Mamba-2, and Transformer models trained on the same datasets of up to 3.5T tokens. We also compare these models to a hybrid architecture consisting of 43% Mamba-2, 7% attention, and 50% MLP layers (Mamba-2-Hybrid). Using a diverse set of tasks, we answer the question of whether Mamba models can match Transformers at larger training budgets. Our results show that while pure SSMs match or exceed Transformers on many tasks, they lag behind Transformers on tasks which require strong copying or in-context learning abilities (e.g., 5-shot MMLU, Phonebook) or long-context reasoning. In contrast, we find that the 8B Mamba-2-Hybrid exceeds the 8B Transformer on all 12 standard tasks we evaluated (+2.65 points on average) and is predicted to be up to 8x faster when generating tokens at inference time. To validate long-context capabilities, we provide additional experiments evaluating variants of the Mamba-2-Hybrid and Transformer extended to support 16K, 32K, and 128K sequences. On an additional 23 long-context tasks, the hybrid model continues to closely match or exceed the Transformer on average. To enable further study, we release the checkpoints as well as the code used to train our models as part of NVIDIA's Megatron-LM project.",,Open weights (unrestricted),0.299,Likely,2025-02-20 17:19:12+00:00,United States of America,,,,,,,4194304.0,"""On the larger dataset we increase the batch size to 1024"" seq length 4096",
ProteinReDiff,Biology,"FPT Software AI Center,University of Chicago,Indiana State University","Industry,Academia","Viet Thanh Duy Nguyen, Nhan D. Nguyen,  Truong Son Hy",2024-06-12,Complex-based Ligand-Binding Proteins Redesign by Equivariant Diffusion-based Generative Models,https://www.biorxiv.org/content/10.1101/2024.04.17.589997v3.abstract,1.0,,,,,,,,,,,8640001.000000004,"Total Samples: 9,430 (PDBBind) + 15,261 (CATH) = 24,691 samples
Tokens per Sample: 300 (protein) + 50 (SMILES) = 350 tokens
Total Data Points: 24,691 × 350 = 8,641,850",,,,,,,"Proteins, serving as the fundamental architects of biological processes, interact with ligands to perform a myriad of functions essential for life. Designing functional ligand-binding proteins is pivotal for advancing drug development and enhancing therapeutic efficacy. In this study, we introduce ProteinReDiff, an efficient computational framework targeting the redesign of ligand-binding proteins. Using equivariant diffusion-based generative models, ProteinReDiff enables the creation of high-affinity ligand-binding proteins without the need for detailed structural information, leveraging instead the potential of initial protein sequences and ligand SMILES strings. Our evaluations across sequence diversity, structural preservation, and ligand binding affinity underscore ProteinReDiff’s potential to advance computational drug discovery and protein engineering. Our source code is publicly available at https: //github.com/HySonLab/Protein_Redesign.",,,,Unverified,2025-01-30 05:04:22+00:00,"Vietnam,United States of America,United States of America",,,,,,,,,
Stable Diffusion 3 Medium,Image generation,Stability AI,Industry,,2024-06-12,"Announcing the Open Release of Stable Diffusion 3 Medium, Our Most Sophisticated Image Generation Model to Date ","https://stability.ai/news/stable-diffusion-3-medium
https://huggingface.co/stabilityai/stable-diffusion-3-medium",,,,2500000000.0,2.5B,,,,,Unspecified unreleased,"We used synthetic data and filtered publicly available data to train our models. The model was pre-trained on 1 billion images. The fine-tuning data includes 30M high-quality aesthetic images focused on specific visual content and style, as well as 3M preference data images.

from the april paper: ""In general, we pretrain all of our models on low-resolution images of size 256^2 pixels. Next, we finetune our models on higher resolutions with mixed aspect ratios""",,,,,,,,,"Stable Diffusion 3 Medium is Stability AI’s most advanced text-to-image open model yet.

The small size of this model makes it perfect for running on consumer PCs and laptops as well as enterprise-tier GPUs. It is suitably sized to become the next standard in text-to-image models.

The weights are now available under an open Community License. For large-scale commercial use, please contact us for licensing details.

To try Stable Diffusion 3 models, try using the API on the Stability Platform, sign up for a free three-day trial on Stable Assistant, and try Stable Artisan via Discord.",,Open weights (restricted use),,Confident,2025-02-14 18:51:08+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Luma Dream Machine,Video,LumaLabs,Industry,,2024-06-12,,https://lumalabs.ai/dream-machine,,,,,,,,,,Unspecified unreleased,,,,,,"""To build Dream Machine we worked with Amazon Web Services (AWS) and their best-in-class H100 training infrastructure SageMaker HyperPod. """,NVIDIA H100 SXM5 80GB,,,"Dream Machine is an AI model that makes high quality, realistic videos fast from text and images.
It is a highly scalable and efficient transformer model trained directly on videos making it capable of generating physically accurate, consistent and eventful shots. Dream Machine is our first step towards building a universal imagination engine and it is available to everyone now!",,API access,,Unknown,2024-11-09 15:52:05+00:00,United States of America,,,,Amazon Web Services,,,,,
Llama-3.1-Nemotron-70B-Instruct,Language,"NVIDIA,Meta AI","Industry,Industry","Zhilin Wang, Yi Dong, Olivier Delalleau, Jiaqi Zeng, Gerald Shen, Daniel Egert, Jimmy Zhang, Makesh Narsimhan Sreedhar, Oleksii Kuchaiev",2024-06-12,https://www.semanticscholar.org/paper/HelpSteer2%3A-Open-source-dataset-for-training-reward-Wang-Dong/f590d8926dd12345a3bd22253461850f5ca4b3ed,https://www.semanticscholar.org/paper/HelpSteer2%3A-Open-source-dataset-for-training-reward-Wang-Dong/f590d8926dd12345a3bd22253461850f5ca4b3ed,,SOTA improvement,"""As of 1 Oct 2024, Llama-3.1-Nemotron-70B-Instruct performs best on Arena Hard, AlpacaEval 2 LC (verified tab) and MT Bench (GPT-4-Turbo)""",,200000 monthly HF download as of Nov 2024,7.929e+24,,,Taken from Llama 3.1 70B as the finetuning compute is multiple orders of magnitude lower,Llama 3 dataset,"Overall, we have 7,118 preference pairs with 6,766
pairs in the training set and 352 pairs in the validation set.",,,,96.0,,,,Reinforcement learning,"High-quality preference datasets are essential for training reward models that can effectively guide large language models (LLMs) in generating high-quality responses aligned with human preferences. As LLMs become stronger and better aligned, permissively licensed preference datasets, such as Open Assistant, HH-RLHF, and HelpSteer need to be updated to remain effective for reward modeling. Methods that distil preference data from proprietary LLMs such as GPT-4 have restrictions on commercial usage imposed by model providers. To improve upon both generated responses and attribute labeling quality, we release HelpSteer2, a permissively licensed preference dataset (CC-BY-4.0). Using a powerful internal base model trained on HelpSteer2, we are able to achieve the SOTA score (92.0%) on Reward-Bench's primary dataset, outperforming currently listed open and proprietary models, as of June 12th, 2024. Notably, HelpSteer2 consists of only ten thousand response pairs, an order of magnitude fewer than existing preference datasets (e.g., HH-RLHF), which makes it highly efficient for training reward models. Our extensive experiments demonstrate that reward models trained with HelpSteer2 are effective in aligning LLMs. In particular, we propose SteerLM 2.0, a model alignment approach that can effectively make use of the rich multi-attribute score predicted by our reward models. HelpSteer2 is available at https://huggingface.co/datasets/nvidia/HelpSteer2 and code is available at https://github.com/NVIDIA/NeMo-Aligner",,Open weights (restricted use),,Unverified,2025-03-06 20:31:05+00:00,"United States of America,United States of America",Llama 3.1-70B,1.0259136e+20,"Llama 3.1  70B: 7.929e+24
FT (see Appendix F): 32+64=96 hours on a single H100
Compute: 96*60*60*989500000000000*0.3=102591360000000000000=1e20
",,,,,,
Samba 3.8B,Language,"Microsoft,University of Illinois Urbana-Champaign (UIUC)","Industry,Academia","Liliang Ren, Yang Liu, Yadong Lu, Yelong Shen, Chen Liang, Weizhu Chen",2024-06-11,Samba: Simple Hybrid State Space Models for Efficient Unlimited Context Language Modeling,https://arxiv.org/abs/2406.07522,,,"not formally notable

New architecture (Mamba hybrid) with strongest performance for an open model of its size:

""In particular, the largest 3.8B base model pre-trained with 3.2T tokens achieves a 71.2 score for MMLU [HBB+21], 54.9 for
HumanEval [CTJ+21], and 69.6 for GSM8K [CKB+21], substantially outperforming strong open source language models up to 8B parameters, as detailed in Table 1.",3800000000.0,"3.8B, table 10",7.3e+22,,,"""We scale SAMBA with 421M, 1.3B, 1.7B and up to 3.8B parameters. In particular, the largest 3.8B
base model pre-trained with 3.2T tokens achieves a 71.2 score for MMLU [HBB+21], 54.9 for
HumanEval [CTJ+21], and 69.6 for GSM8K ""

3.8B * 3.2T * 6 = 7.3e22",Phi-3 Dataset,Table 10,3200000000000.0,3.2T tokens,1.0,,,,,,,,Unreleased,,Confident,2025-02-14 19:16:22+00:00,"United States of America,United States of America",,,,,,,,,
TiTok-L,Image generation,"ByteDance,Technical University of Munich","Industry,Academia","Qihang Yu, Mark Weber, Xueqing Deng, Xiaohui Shen, Daniel Cremers, Liang-Chieh Chen",2024-06-11,An Image is Worth 32 Tokens for Reconstruction and Generation,https://arxiv.org/abs/2406.07550,,,,307000000.0,"""For TiTok variants, we primarily investigate three model sizes—small, base, and large (i.e., TiTok-S, TiTok-B, TiTok-L)—comprising 22M, 86M, and 307M parameters for encoder and decoder, respectively""",1.7252352e+21,,,312000000000000*5120*3600*0.3 = 1.7252352e+21,ImageNet-1k,,,"Tokenizer:
""longer training to 200 epochs and decoder fine-tuning, all other hyper-parameters remain the same. We use patch size 16 for all vision transformers at resolution 256 × 256 and increase it to 32 for resolution 512 × 512 to ensure a computation efficiency.""

""the training duration is extended to 1M iterations (200 epochs)""

Generator:
"" The generative models are trained with a batch size of 2048 and 500k iterations to improve training efficiency""

""ImageNet 256 × 256""",,,"""Moreover, the tokenizer training takes 64 A100-40G for 74 hours
(TiTok-L-32)""

""The generator training takes 32 A100-40G for 12 hours (TiTok-L-32)""

74*64+12*32 = 5120 chip-hours",NVIDIA A100 SXM4 80 GB,,,"Recent advancements in generative models have highlighted the crucial role of image tokenization in the efficient synthesis of high-resolution images. Tokenization, which transforms images into latent representations, reduces computational demands compared to directly processing pixels and enhances the effectiveness and efficiency of the generation process. Prior methods, such as VQGAN, typically utilize 2D latent grids with fixed downsampling factors. However, these 2D tokenizations face challenges in managing the inherent redundancies present in images, where adjacent regions frequently display similarities. To overcome this issue, we introduce Transformer-based 1-Dimensional Tokenizer (TiTok), an innovative approach that tokenizes images into 1D latent sequences. TiTok provides a more compact latent representation, yielding substantially more efficient and effective representations than conventional techniques. For example, a 256 x 256 x 3 image can be reduced to just 32 discrete tokens, a significant reduction from the 256 or 1024 tokens obtained by prior methods. Despite its compact nature, TiTok achieves competitive performance to state-of-the-art approaches. Specifically, using the same generator framework, TiTok attains 1.97 gFID, outperforming MaskGIT baseline significantly by 4.21 at ImageNet 256 x 256 benchmark. The advantages of TiTok become even more significant when it comes to higher resolution. At ImageNet 512 x 512 benchmark, TiTok not only outperforms state-of-the-art diffusion model DiT-XL/2 (gFID 2.74 vs. 3.04), but also reduces the image tokens by 64x, leading to 410x faster generation process. Our best-performing variant can significantly surpasses DiT-XL/2 (gFID 2.13 vs. 3.04) while still generating high-quality samples 74x faster.",,Open weights (unrestricted),,Confident,2024-11-18 16:54:02+00:00,"China,Germany",,,,,,,,,
YiSu,,,,,2024-06-11,"清华大学等发布超长时长、高性价比的Sora级视频生成大模型
",https://www.stdaily.com/index/kejixinwen/202406/bdac079567b240708883899b883433d0.shtml,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Kling,Video,Kuaishou Technology,Industry,,2024-06-10,"Kling is a video generation model developed by the Kuaishou model team, which has powerful video generation capabilities and allows users to easily and efficiently complete artistic video creation.",https://klingai.io/,,,,,,,,,,,,,,,,,,,,"Large-scale reasonable movement
Kling uses a 3D spatiotemporal joint attention mechanism to better model complex spatiotemporal movement, generate video content with large-scale movement, and conform to the laws of movement.

Video generation up to 2 minutes
Thanks to efficient training infrastructure, extreme reasoning optimization and scalable infrastructure, Kling's large model can generate videos up to 2 minutes long with a frame rate of 30fps.

Simulate physical world characteristics
Based on the powerful modeling capabilities inspired by the self-developed model architecture and Scaling Law, Kling can simulate the physical characteristics of the real world and generate videos that conform to the laws of physics.

Powerful concept combination capabilities
Based on a deep understanding of text-video semantics and the powerful capabilities of the Diffusion Transformer architecture, Kling can transform users' rich imagination into concrete pictures and fictional scenes that will not appear in the real world.

Movie-level image generation
Based on the self-developed 3D VAE, Keling can generate movie-level videos with 1080p resolution, which can vividly present both the vast and magnificent grand scenes and the delicate close-up shots.

Supports free output video aspect ratio
Keling adopts a variable resolution training strategy, which can output a variety of video aspect ratios for the same content during the inference process, meeting the needs of using video materials in richer scenes.

Expression and body drive
Based on the self-developed 3D face and body reconstruction technology, combined with background stability and redirection modules, the expression and body full drive technology is realized. With only a full-body photo, you can experience the vivid ""singing and dancing"" gameplay.",,Hosted access (no API),,Unknown,2024-11-10 22:56:23+00:00,China,,,,,,,,,
Qwen2-72B,Language,Alibaba,Industry,Qwen Team,2024-06-07,Hello Qwen2,"https://qwenlm.github.io/blog/qwen2/ 
https://arxiv.org/abs/2407.10671 ",,Training cost,"SOTA claims are against open source models within a parameter class.

Possibly high training cost, at 3e24 FLOP seems borderline.",72710000000.0,"72.71B parameters in total, of which 70.21B are non-embedding parameters",3.02e+24,,5.000010000000001e+24,"72 billion params, 7 trillion tokens

6 * 72 billion * 7 trillion ~= 3.02e24",Unspecified unreleased,"""All models were pre-trained on a high-quality, large-scale dataset comprising over 7 trillion tokens,
covering a wide range of domains and languages. Compared to previous editions of Qwen, Qwen2
includes a broader spectrum of linguistic data, enhancing the quantity and quality of code and mathematics content. """,7000000000000.0,"""All models were pre-trained on a high-quality, large-scale dataset comprising over 7 trillion tokens, covering a wide range of domains and languages.""",,,,,,Self-supervised learning,"After months of efforts, we are pleased to announce the evolution from Qwen1.5 to Qwen2. This time, we bring to you:
- Pretrained and instruction-tuned models of 5 sizes, including Qwen2-0.5B, Qwen2-1.5B, Qwen2-7B, Qwen2-57B-A14B, and Qwen2-72B;
- Having been trained on data in 27 additional languages besides English and Chinese;
- State-of-the-art performance in a large number of benchmark evaluations;
- Significantly improved performance in coding and mathematics;
- Extended context length support up to 128K tokens with Qwen2-7B-Instruct and Qwen2-72B-Instruct.

(Technical report to follow)",,Open weights (unrestricted),,Confident,2025-01-28 22:13:24+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
Audioseal,"Audio,Speech",Facebook AI Research,Industry,"Robin San Roman, Pierre Fernandez, Alexandre Défossez, Teddy Furon, Tuan Tran, Hady Elsahar",2024-06-06,Proactive Detection of Voice Cloning with Localized Watermarking,https://arxiv.org/abs/2401.17264,,,,,,,,,,VoxPopuli,"Our watermark generator and detector are trained on a 4.5K hours subset from the VoxPopuli (Wang et al., 2021) dataset.",61560000.0,"4,500 hours * 13,680 English words per hour = 61560000 words",,,,,,,"In the rapidly evolving field of speech generative models, there is a pressing need to ensure audio authenticity against the risks of voice cloning. We present AudioSeal, the first audio watermarking technique designed specifically for localized detection of AI-generated speech. AudioSeal employs a generator/detector architecture trained jointly with a localization loss to enable localized watermark detection up to the sample level, and a novel perceptual loss inspired by auditory masking, that enables AudioSeal to achieve better imperceptibility. AudioSeal achieves state-of-the-art performance in terms of robustness to real life audio manipulations and imperceptibility based on automatic and human evaluation metrics. Additionally, AudioSeal is designed with a fast, single-pass detector, that significantly surpasses existing models in speed - achieving detection up to two orders of magnitude faster, making it ideal for large-scale and real-time applications.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
ProTrek,Biology,Westlake University,Academia,"Jin Su, Xibin Zhou, Xuting Zhang, Fajie Yuan",2024-06-03,"ProTrek: Navigating the Protein Universe through
Tri-Modal Contrastive Learning",https://www.biorxiv.org/content/10.1101/2024.05.30.596740v2.abstract,1.0,,,,,,,,,,,45000000001.000206,"40M examples
Step 1: 14M (Swiss-Prot) + 25M (UniRef50) ≈ 40M examples

Step 2: 512 (sequence) + 512 (structure) + 100 (text) = 1,124 tokens per example

Step 3: 40,000,000 × 1,124 = 4.496 × 10¹⁰ tokens

Final result: 4.496 × 10¹⁰ tokens",,,,,,,"ProTrek redefines protein exploration by seamlessly fusing sequence, structure, and natural language function (SSF) into an advanced tri-modal language model. Through contrastive learning, ProTrek bridges the gap between protein data and human understanding, enabling lightning-fast searches across nine SSF pairwise modality combinations. Trained on vastly larger datasets, ProTrek demonstrates quantum leaps in performance: (1) Elevating protein sequence-function interconversion by 30-60 fold; (2) Surpassing current alignment tools (i.e., Foldseek and MMseqs2) in both speed (100-fold acceleration) and accuracy, identifying functionally similar proteins with diverse structures; and (3) Outperforming ESM-2 in 9 of 11 downstream prediction tasks, setting new benchmarks in protein intelligence. These results suggest that ProTrek will become a core tool for protein searching, understanding, and analysis.",,,,Unverified,2025-01-30 05:05:11+00:00,China,,,,,,,,,
Prot2Token,Biology,"University of Missouri,Politecnico di Milano",Academia,"Mahdi Pourmirzaei, Farzaneh Esmaili, Mohammadreza Pourmirzaei, Duolin Wang, Dong Xu",2024-06-03,Prot2Token: A multi-task framework for protein language processing using autoregressive language modeling,https://www.biorxiv.org/content/10.1101/2024.05.31.596915v1.abstract,1.0,,,,,,,,,,,310000000.9999994,"1,024,055 = 8,678 + 53,571 + 21,446 + 15,550 + 29,898 + 12,312 + 29,215 + 23,604 + 35,669 + 8,716 + 300,700 + 6,391 + 16,436 + 22,841 + 10,400 + 428,628

307,216,500 = 1,024,055 × 300

Final estimate: 3.1 × 10⁸",,,,,,,"This paper proposes a versatile tokenization method and introduces Prot2Token, a model that combines autoregressive language modeling with protein language models (PLMs) to tackle various protein prediction tasks using protein sequences. Leveraging our tokenization method, Prot2Token adapts existing PLMs for multiple tasks such as protein-level prediction, residue-level prediction, and protein-protein interaction prediction through next-token prediction of tokenized target label sequences. By incorporating prompt tokens into the decoder, Prot2Token enables multi-task training in a single end-to-end session. Our results demonstrate that Prot2Token not only matches the performance of specialized models across various tasks but also paves the way for integrating protein tasks with large language models (LLMs), representing an important step towards creating general-purpose PLMs for advanced protein language processing (PLP). Additionally, we use Prot2Token to develop S-ESM, a structure-aware version of the ESM model, which achieves competitive performance with state-of-the-art methods in 3D structure-related tasks using only protein sequences. Code is available at: https://github.com/mahdip72/prot2token.",,,,Unverified,2025-01-30 05:04:30+00:00,"United States of America,Italy",,,,,,,,,
MiniCPM-2.4B,Language,"Tsinghua University,ModelBest","Academia,Industry","Shengding Hu, Yuge Tu, Xu Han, Chaoqun He, Ganqu Cui, Xiang Long, Zhi Zheng, Yewei Fang, Yuxiang Huang, Weilin Zhao, Xinrong Zhang, Zheng Leng Thai, Kaihuo Zhang, Chongyi Wang, Yuan Yao, Chenyang Zhao, Jie Zhou, Jie Cai, Zhongwu Zhai, Ning Ding, Chao Jia, Guoyang Zeng, Dahai Li, Zhiyuan Liu, Maosong Sun",2024-06-03,MiniCPM: Unveiling the Potential of Small Language Models with Scalable Training Strategies,https://arxiv.org/abs/2404.06395,,,,2442057984.0,Table 2,1.584e+22,,,6*2.4*10^9*1.1*10^12 = 1.584e+22,"Common Crawl,Dolma,C4,The Pile","The models were trained on a mixture of datasets including:

CommonCrawl Chinese (25%)
Code Pretrain (25%)
Dolma (24%)
C4 (15%)
Pile (8%)
Other smaller datasets including peS2o, Arxiv, and Open Web Math (3% combined)",1100000000000.0,1.1T tokens (Table 2),,,,,,,"The burgeoning interest in developing Large Language Models (LLMs) with up to trillion parameters has been met with concerns regarding resource efficiency and practical expense, particularly given the immense cost of experimentation. This scenario underscores the importance of exploring the potential of Small Language Models (SLMs) as a resource-efficient alternative. In this context, we introduce MiniCPM, specifically the 1.2B and 2.4B non-embedding parameter variants, not only excel in their respective categories but also demonstrate capabilities on par with 7B-13B LLMs. While focusing on SLMs, our approach exhibits scalability in both model and data dimensions for future LLM research. Regarding model scaling, we employ extensive model wind tunnel experiments for stable and optimal scaling. For data scaling, we introduce a Warmup-Stable-Decay (WSD) learning rate scheduler (LRS), conducive to continuous training and domain adaptation. We present an in-depth analysis of the intriguing training dynamics that occurred in the WSD LRS. With WSD LRS, we are now able to efficiently study data-model scaling law without extensive retraining experiments on both axes of model and data, from which we derive the much higher compute optimal data-model ratio than Chinchilla Optimal. Additionally, we introduce MiniCPM family, including MiniCPM-DPO, MiniCPM-MoE and MiniCPM-128K, whose excellent performance further cementing MiniCPM's foundation in diverse SLM applications. MiniCPM models are available publicly at this https URL .",,Open weights (restricted use),,Confident,2024-12-09 19:23:27+00:00,"China,China",,,,,,,4000000.0,,
MiniCPM-3-4B,Language,"Tsinghua University,ModelBest","Academia,Industry","Shengding Hu, Yuge Tu, Xu Han, Chaoqun He, Ganqu Cui, Xiang Long, Zhi Zheng, Yewei Fang, Yuxiang Huang, Weilin Zhao, Xinrong Zhang, Zheng Leng Thai, Kaihuo Zhang, Chongyi Wang, Yuan Yao, Chenyang Zhao, Jie Zhou, Jie Cai, Zhongwu Zhai, Ning Ding, Chao Jia, Guoyang Zeng, Dahai Li, Zhiyuan Liu, Maosong Sun",2024-06-03,MiniCPM: Unveiling the Potential of Small Language Models with Scalable Training Strategies,https://huggingface.co/openbmb/MiniCPM3-4B,,,,4000000000.0,4b,,,,,,,,,,,,,,,"MiniCPM3-4B is the 3rd generation of MiniCPM series. The overall performance of MiniCPM3-4B surpasses Phi-3.5-mini-Instruct and GPT-3.5-Turbo-0125, being comparable with many recent 7B~9B models.

Compared to MiniCPM1.0/MiniCPM2.0, MiniCPM3-4B has a more powerful and versatile skill set to enable more general usage. MiniCPM3-4B supports function call, along with code interpreter. Please refer to Advanced Features for usage guidelines.

MiniCPM3-4B has a 32k context window. Equipped with LLMxMapReduce, MiniCPM3-4B can handle infinite context theoretically, without requiring huge amount of memory.",,Open weights (restricted use),,Confident,2024-12-09 19:24:17+00:00,"China,China",,,,,,,,,
MiniCPM-1.2B,Language,"Tsinghua University,ModelBest","Academia,Industry","Shengding Hu, Yuge Tu, Xu Han, Chaoqun He, Ganqu Cui, Xiang Long, Zhi Zheng, Yewei Fang, Yuxiang Huang, Weilin Zhao, Xinrong Zhang, Zheng Leng Thai, Kaihuo Zhang, Chongyi Wang, Yuan Yao, Chenyang Zhao, Jie Zhou, Jie Cai, Zhongwu Zhai, Ning Ding, Chao Jia, Guoyang Zeng, Dahai Li, Zhiyuan Liu, Maosong Sun",2024-06-03,MiniCPM: Unveiling the Potential of Small Language Models with Scalable Training Strategies,https://arxiv.org/abs/2404.06395,,,,1247442432.0,Table 2,7.92e+21,,,6*1.2*10^9*1.1*10^12 = 7.92e+21,"Common Crawl,Dolma,C4,The Pile","The models were trained on a mixture of datasets including:

CommonCrawl Chinese (25%)
Code Pretrain (25%)
Dolma (24%)
C4 (15%)
Pile (8%)
Other smaller datasets including peS2o, Arxiv, and Open Web Math (3% combined)",1100000000000.0,1.1T tokens (Table 2),,,,,,,"The burgeoning interest in developing Large Language Models (LLMs) with up to trillion parameters has been met with concerns regarding resource efficiency and practical expense, particularly given the immense cost of experimentation. This scenario underscores the importance of exploring the potential of Small Language Models (SLMs) as a resource-efficient alternative. In this context, we introduce MiniCPM, specifically the 1.2B and 2.4B non-embedding parameter variants, not only excel in their respective categories but also demonstrate capabilities on par with 7B-13B LLMs. While focusing on SLMs, our approach exhibits scalability in both model and data dimensions for future LLM research. Regarding model scaling, we employ extensive model wind tunnel experiments for stable and optimal scaling. For data scaling, we introduce a Warmup-Stable-Decay (WSD) learning rate scheduler (LRS), conducive to continuous training and domain adaptation. We present an in-depth analysis of the intriguing training dynamics that occurred in the WSD LRS. With WSD LRS, we are now able to efficiently study data-model scaling law without extensive retraining experiments on both axes of model and data, from which we derive the much higher compute optimal data-model ratio than Chinchilla Optimal. Additionally, we introduce MiniCPM family, including MiniCPM-DPO, MiniCPM-MoE and MiniCPM-128K, whose excellent performance further cementing MiniCPM's foundation in diverse SLM applications. MiniCPM models are available publicly at this https URL .",,Open weights (restricted use),,Confident,2024-12-09 19:22:52+00:00,"China,China",,,,,,,4000000.0,,
MULAN,Biology,"AIRI Artificial Intelligence Research Institute,Skolkovo Institute of Science and Technology,Belozersky Institute of Physio-Chemical Biology,Ligand Pro","Research collective,Academia,Academia,Industry","Daria Frolova, Marina A. Pak, Anna Litvin, Ilya Sharov, Dmitry N. Ivankov, Ivan Oseledets",2024-06-02,MULAN: Multimodal Protein Language Model for Sequence and Structure Encoding,https://www.biorxiv.org/content/10.1101/2024.05.30.596565v1,0.0,,,,,2.400000000000002e+20,,,"1. Hardware: 1x NVIDIA H100 GPU (7.56E14 FLOP/s per GPU)
2. Training duration: 9 days = 777,600 seconds (directly provided)
3. Utilization: 40%
4. Calculation: 7.56E14 FLOP/s × 1 GPU × 777,600s × 0.4 = 2.35E20 FLOPs",,,4070000000.999998,"Calculation:
61,000,000,000 tokens / 15 epochs = 4,070,000,000 tokens

Final estimate: 4.07 billion tokens",,,,,,,"Most protein language models (PLMs), which are used to produce high-quality protein representations, use only protein sequences during training. However, the known protein structure is crucial in many protein property prediction tasks, so there is a growing interest in incorporating the knowledge about the protein structure into a PLM. In this study, we propose MULAN, a MULtimodal PLM for both sequence and ANgle-based structure encoding. MULAN has a pre-trained sequence encoder and an introduced Structure Adapter, which are then fused and trained together. According to the evaluation on 7 downstream tasks of various nature, both small and medium-sized MULAN models show consistent improvement in quality compared to both sequence-only ESM-2 and structure-aware SaProt. Importantly, our model offers a cheap increase in the structural awareness of the protein representations due to finetuning of existing PLMs instead of training from scratch. We perform a detailed analysis of the proposed model and demonstrate its awareness of the protein structure. The implementation, training data and model checkpoints are available at https://github.com/DFrolova/MULAN.",,,,Unverified,2025-02-14 19:16:27+00:00,"Russia,Russia,Russia,Russia",,,,,,,,,
DRGN-AI,Biology,"Stanford University,SLAC National Laboratory,Princeton University,Columbia University","Academia,Academia,Academia","Axel Levy, Michal Grzadkowski, Frédéric Poitevin, Francesca Vallese, Oliver Biggs Clarke, Gordon Wetzstein, Ellen D. Zhong",2024-06-02,Revealing biomolecular structure and motion with neural ab initio cryo-EM reconstruction,https://www.biorxiv.org/content/10.1101/2024.05.30.596729v1,,,,,,,,,,,,,,,,,,,,"Proteins and other biomolecules form dynamic macromolecular machines that are tightly orchestrated to move, bind, and perform chemistry. Cryo-electron microscopy (cryo-EM) can access the intrinsic heterogeneity of these complexes and is therefore a key tool for understanding mechanism and function. However, 3D reconstruction of the resulting imaging data presents a challenging computational problem, especially without any starting information, a setting termed ab initio reconstruction. Here, we introduce a method, DRGN-AI, for ab initio heterogeneous cryo-EM reconstruction. With a two-step hybrid approach combining search and gradient-based optimization, DRGN-AI can reconstruct dynamic protein complexes from scratch without input poses or initial models. Using DRGN-AI, we reconstruct the compositional and conformational variability contained in a variety of benchmark datasets, process an unfiltered dataset of the DSL1/SNARE complex fully ab initio, and reveal a new “supercomplex” state of the human erythrocyte ankyrin-1 complex. With this expressive and scalable model for structure determination, we hope to unlock the full potential of cryo-EM as a high-throughput tool for structural biology and discovery.",,,,Unverified,2025-01-12 05:10:06+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Xingchen,,,,,2024-06-01,"Comm operator's TeleAI surmounts dialect challenge

",https://www.chinadaily.com.cn/a/202406/06/WS66611799a31082fc043cb30a.html,,,,100000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
KeTu (Kolors),Image generation,Kuaishou Technology,Industry,Kolors Team,2024-05-31,Kolors: Effective Training of Diffusion Model for Photorealistic Text-to-Image Synthesis,https://github.com/Kwai-Kolors/Kolors/blob/master/imgs/Kolors_paper.pdf,,,,2600000000.0,2.6B (Table 4),,,,,"LAION,JourneyDB,Unspecified unreleased","The training of Kolors is divided into two distinct phases: the concept learning phase and the quality improvement phase. During the concept learning phase, the model primarily acquires comprehensive knowledge and concepts from a large-scale dataset comprising billions of image-text pairs. The data
for this phase is sourced from public datasets (e.g. , LAION [35], DataComp [11], JourneyDB [37]) as well as proprietary datasets.

In the quality improvement phase, the focus shifts to enhancing image details and aesthetics at high resolutions. This methodology ultimately yields millions of Level 5 high-aesthetic images",,,,,,,,,"We present Kolors, a latent diffusion model for text-to-image synthesis, characterized by its profound understanding of both English and Chinese, as well as an impressive degree of photorealism. There are three key insights contributing to the development of Kolors. Firstly, unlike large language model T5 used in Imagen and Stable Diffusion 3, Kolors is built upon the General Language Model (GLM), which enhances its comprehension capabilities in both English and Chinese.
Moreover, we employ a multimodal large language model to recaption the extensive training dataset for fine-grained text understanding. These strategies significantly improve Kolors’ ability to comprehend intricate semantics, particularly those involving multiple entities, and enable its advanced text rendering capabilities.
Secondly, we divide the training of Kolors into two phases: the concept learning phase with broad knowledge and the quality improvement phase with specifically curated high-aesthetic data. Furthermore, we investigate the critical role of the noise schedule and introduce a novel schedule to optimize high-resolution image generation. These strategies collectively enhance the visual appeal of the generated high-resolution images. Lastly, we propose a category-balanced benchmark KolorsPrompts, which serves as a guide for the training and evaluation of Kolors. Consequently, even when employing the commonly used U-Net backbone, Kolors has demonstrated remarkable performance in human evaluations, surpassing the existing open-source models and achieving Midjourney-v6 level performance, especially in terms of visual appeal. We will release the code and weights of Kolors at https://github.com/Kwai-Kolors/Kolors, and hope that it will benefit future research and applications in the visual generation community.",,Open weights (restricted use),,Confident,2024-11-11 00:08:38+00:00,China,ChatGLM3-6B,,,,,,,,
"Mamba 2, 2.7B",Language,"Princeton University,Carnegie Mellon University (CMU)","Academia,Academia","Tri Dao, Albert Gu",2024-05-31,Transformers are SSMs: Generalized Models and Efficient Algorithms Through Structured State Space Duality,https://arxiv.org/abs/2405.21060,,,,2700000000.0,2.7B,4.86e+21,,,6ND = 6*2.7B*300B = 4.86×10^21,The Pile,,300000000000.0,300B tokens,,,,,,,"While Transformers have been the main architecture behind deep learning's success in language modeling, state-space models (SSMs) such as Mamba have recently been shown to match or outperform Transformers at small to medium scale. We show that these families of models are actually quite closely related, and develop a rich framework of theoretical connections between SSMs and variants of attention, connected through various decompositions of a well-studied class of structured semiseparable matrices. Our state space duality (SSD) framework allows us to design a new architecture (Mamba-2) whose core layer is an a refinement of Mamba's selective SSM that is 2-8X faster, while continuing to be competitive with Transformers on language modeling.",,Open weights (unrestricted),,Confident,2024-11-11 02:17:36+00:00,"United States of America,United States of America",,,,,,,,,
Granite 20B,Language,IBM Research,Industry,IBM Research,2024-05-31,Granite Foundation Models,https://www.ibm.com/downloads/documents/us-en/10a99803c92fdb35,,,Unclear how many users,20000000000.0,,3.0000000000001e+23,,,6*2500000000000*20000000000=3e+23,"Stack Exchange,Common Crawl,Wikimedia","""For English and code, we used Wikimedia, Stack Exchange, and commoncrawl. For multilingual data, we used portions of commoncrawl.""",2500000000000.0,"For pre-training, we used 0.5 trillion English, 0.4 trillion multilingual (es, fr, de, pt), and 1.6 trillion code tokens.",,,,,,,"We introduce the Granite series of decoder-only foundation models for generative artificial intelligence (AI) tasks that are ready for enterprise use. We report on the architecture, capabilities, underlying data and data governance, training algorithms, compute infrastructure, energy and carbon footprint, testing and evaluation, socio-technical harms and mitigations, and usage policies.",,Open weights (unrestricted),,Confident,2024-12-16 20:49:02+00:00,"United States of America,Multinational",,,,,,,,,
sgRNAGen,Biology,Beijing Institute of Technology,Academia,"Yan Xia, Zeyu Liang, Xiaowen Du, Dengtian Cao, Jing Li, Lichao Sun, Yi-Xin Huo, Shuyuan Guo",2024-05-31,Design nonrepetitive and diverse activity single-guide RNA by deep learning,https://www.biorxiv.org/content/10.1101/2024.05.30.596019v1,,,,,,,,,,,,,,,,,,,,"Multiplex and precise control of the gene expression based on CRISPR/Cas9 is important to metabolic regulation in synthetic biology. However, employing single guide RNAs (sgRNAs) that possess repetitive DNA sequences and exhibit uniform activity could detrimentally affect the editing process, undermining both its stability and regulatory potential. In this study, we developed a deep generative model based on a decoder-only Transformer architecture (sgRNAGen) for the de novo generation of a series of nonrepetitive and diverse sgRNAs with activity. To assess the quality of sgRNAs generated by sgRNAGen, we evaluated their activity by targeting essential genes, with the results indicating that 98% of the generated sgRNAs were active in Bacillus subtilis. The generated sgRNAs were further validated for applications in single-gene editing, large fragment knockouts, and multiplex editing. Notably, the efficiency of knocking out long fragments up to 169.5 kb reached 100%, and targeting multiple sites allowed for the creation of strains with various combinations of mutations in a single editing. Furthermore, we developed a CRISPRi system utilizing the designed sgRNAs to regulate gene expression with desired strength and high precision. SgRNAGen offers a method for devising nonrepetitive and diverse activity sgRNAs, enhancing metabolic control and advancing applications within synthetic biology.",,,,Unverified,2025-01-12 05:07:04+00:00,China,,,,,,,,,
FoldFlow2,Biology,"Dreamfold,University of Montreal / Université de Montréal,McGill University,University of Oxford","Industry,Academia,Academia,Academia","Guillaume Huguet, James Vuckovic, Kilian Fatras, Eric Thibodeau-Laufer, Pablo Lemos, Riashat Islam, Cheng-Hao Liu, Jarrid Rector-Brooks, Tara Akhound-Sadegh, Michael Bronstein, Alexander Tong, Avishek Joey Bose",2024-05-30,Sequence-Augmented SE(3)-Flow Matching For Conditional Protein Backbone Generation,https://arxiv.org/abs/2405.20313,8.0,,,,,8.599999999999977e+19,,,"1. Hardware setup: 2x NVIDIA A100 40GB GPUs (3.12 x 10^14 FLOP/s per GPU)
2. Training duration: 4 days (directly provided) = 345,600 seconds
3. Utilization rate: 40%
4. Calculation: 2 GPUs × 3.12×10^14 FLOP/s × 345,600s × 0.4 = 8.6×10^19 FLOPs",,,32000001.0,"Average protein length = (60 + 384) / 2 = 222 residues
Total datapoints = 160,000 structures × 222 residues = 35,520,000
Final estimate ≈ 3.2 × 10^7 datapoints",,,,,,,"Proteins are essential for almost all biological processes and derive their diverse functions from complex 3D structures, which are in turn determined by their amino acid sequences. In this paper, we exploit the rich biological inductive bias of amino acid sequences and introduce FoldFlow-2, a novel sequence-conditioned SE(3)-equivariant flow matching model for protein structure generation. FoldFlow-2 presents substantial new architectural features over the previous FoldFlow family of models including a protein large language model to encode sequence, a new multi-modal fusion trunk that combines structure and sequence representations, and a geometric transformer based decoder. To increase diversity and novelty of generated samples -- crucial for de-novo drug design -- we train FoldFlow-2 at scale on a new dataset that is an order of magnitude larger than PDB datasets of prior works, containing both known proteins in PDB and high-quality synthetic structures achieved through filtering. We further demonstrate the ability to align FoldFlow-2 to arbitrary rewards, e.g. increasing secondary structures diversity, by introducing a Reinforced Finetuning (ReFT) objective. We empirically observe that FoldFlow-2 outperforms previous state-of-the-art protein structure-based generative models, improving over RFDiffusion in terms of unconditional generation across all metrics including designability, diversity, and novelty across all protein lengths, as well as exhibiting generalization on the task of equilibrium conformation sampling. Finally, we demonstrate that a fine-tuned FoldFlow-2 makes progress on challenging conditional design tasks such as designing scaffolds for the VHH nanobody.",,,,Unverified,2025-02-14 19:17:03+00:00,"Canada,Canada,Canada,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Codestral,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Sablayrolles, Alexis Tacnet, Antoine Roux, Arthur Mensch, Audrey Herblin-Stoop, Baptiste Bout, Baudouin de Monicault, Blanche Savary, Bam4d, Caroline Feldman, Devendra Singh Chaplot, Diego de las Casas, Eleonore Arcelin, Emma Bou Hanna, Etienne Metzger, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Harizo Rajaona, Henri Roussez, Jean-Malo Delignon, Jia Li, Justus Murke, Kartik Khandelwal, Lawrence Stewart, Louis Martin, Louis Ternon, Lucile Saulnier, Lélio Renard Lavaud, Margaret Jennings, Marie Pellat, Marie Torelli, Marie-Anne Lachaux, Marjorie Janiewicz, Mickael Seznec, Nicolas Schuhl, Patrick von Platen, Romain Sauvestre, Pierre Stock, Sandeep Subramanian, Saurabh Garg, Sophia Yang, Szymon Antoniak, Teven Le Scao, Thibaut Lavril, Thibault Schueller, Timothée Lacroix, Théophile Gervet, Thomas Wang, Valera Nemychnikova, Wendy Shang, William El Sayed, William Marshall",2024-05-29,,https://mistral.ai/news/codestral/,,,,22200000000.0,22.2B from hugging face model card,,,,,Unspecified unreleased,"Codestral is trained on a diverse dataset of 80+ programming languages, including the most popular ones, such as Python, Java, C, C++, JavaScript, and Bash. It also performs well on more specific ones like Swift and Fortran. ",,,,,,,,,"We introduce Codestral, our first-ever code model. Codestral is an open-weight generative AI model explicitly designed for code generation tasks. It helps developers write and interact with code through a shared instruction and completion API endpoint. As it masters code and English, it can be used to design advanced AI applications for software developers.

A model fluent in 80+ programming languages
Codestral is trained on a diverse dataset of 80+ programming languages, including the most popular ones, such as Python, Java, C, C++, JavaScript, and Bash. It also performs well on more specific ones like Swift and Fortran. This broad language base ensures Codestral can assist developers in various coding environments and projects.

Codestral saves developers time and effort: it can complete coding functions, write tests, and complete any partial code using a fill-in-the-middle mechanism. Interacting with Codestral will help level up the developer’s coding game and reduce the risk of errors and bugs.",,Open weights (non-commercial),,Confident,2024-09-05 18:08:31+00:00,France,,,,,,,,,
Aurora,Earth science,Microsoft Research,Industry,"Cristian Bodnar, Wessel P. Bruinsma, Ana Lucic, Megan Stanley, Johannes Brandstetter, Patrick Garvan, Maik Riechert, Jonathan Weyn, Haiyu Dong, Anna Vaughan, Jayesh K. Gupta, Kit Tambiratnam, Alex Archibald, Elizabeth Heider, Max Welling, Richard E. Turner, Paris Perdikaris",2024-05-28,Aurora: A Foundation Model of the Atmosphere,https://arxiv.org/abs/2405.13063,,,,1300000000.0,,4.5287424e+21,,,"""The model is trained using bf16 mixed
precision.""

312000000000000*420*32*3600*.3 =  4528742400000000000000 FLOP

",,,700000000000.0,"700B tokens (see Figure 4)
Total 1,219.91 TB 11,023,730 frames

""All models are pretrained for 150 k steps on 32 GPUs, with a batch size of one per GPU.""",,420.0,"""32 A100 GPUs, which corresponds to approximately two and a half weeks of training""

17,5 days * 24 hours = 420",NVIDIA A100,32.0,,"Deep learning foundation models are revolutionizing many facets of science by leveraging vast amounts of data to learn general-purpose representations that can be adapted to tackle diverse downstream tasks. Foundation models hold the promise to also transform our ability to model our planet and its subsystems by exploiting the vast expanse of Earth system data. Here we introduce Aurora, a large-scale foundation model of the atmosphere trained on over a million hours of diverse weather and climate data. Aurora leverages the strengths of the foundation modelling approach to produce operational forecasts for a wide variety of atmospheric prediction problems, including those with limited training data, heterogeneous variables, and extreme events. In under a minute, Aurora produces 5-day global air pollution predictions and 10-day high-resolution weather forecasts that outperform state-of-the-art classical simulation tools and the best specialized deep learning models. Taken together, these results indicate that foundation models can transform environmental forecasting.",,Unreleased,,Confident,2024-11-26 14:59:54+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
TimeGPT-1,Other,Nixtla,Industry,"Azul Garza, Cristian Challu, Max Mergenthaler-Canseco",2024-05-27,TimeGPT-1,https://arxiv.org/abs/2310.03589,,,,,,,,,,,"""training set incorporates time series from a broad array of domains, including finance, economics, demographics, healthcare, weather, IoT sensor data, energy, web traffic, sales, transport, and banking.""",100000000000.0,"""TimeGPT was trained on, to our knowledge, the largest collection of publicly available time series,collectively encompassing over 100 billion data points.""",,,"""TimeGPT underwent a multi-day training period on a cluster of NVIDIA A10G GPUs.""",NVIDIA A10G,,,"In this paper, we introduce TimeGPT, the first foundation model for time series, capable of generating accurate predictions for diverse datasets not seen during training. We evaluate our pre-trained model against established statistical, machine learning, and deep learning methods, demonstrating that TimeGPT zero-shot inference excels in performance, efficiency, and simplicity. Our study provides compelling evidence that insights from other domains of artificial intelligence can be effectively applied to time series analysis. We conclude that large-scale time series models offer an exciting opportunity to democratize access to precise predictions and reduce uncertainty by leveraging the capabilities of contemporary advancements in deep learning.",,,,Confident,2024-11-07 02:25:03+00:00,United States of America,,,,,,,,,
NV-Embed-v1,Language,NVIDIA,Industry,"Chankyu Lee, Rajarshi Roy, Mengyao Xu, Jonathan Raiman, Mohammad Shoeybi, Bryan Catanzaro, Wei Ping",2024-05-27,NV-Embed: Improved Techniques for Training LLMs as Generalist Embedding Models,https://arxiv.org/abs/2405.17428,,,,7000000000.0,,,,,,,,2490368000.0,"""The model is finetuned with 128 batch
size, where each batch is composed of a query paired with 1 positive and 7 hard negative documents.
We train using Bfloat16, and set the maximum sequence length as 512 tokens.""

First stage - 20k
Second stage - 18k

128*512*38000=2490368000",,,,,,,"Decoder-only large language model (LLM)-based embedding models are beginning to outperform BERT or T5-based embedding models in general-purpose text embedding tasks, including dense vector-based retrieval. In this work, we introduce the NV-Embed model with a variety of architectural designs and training procedures to significantly enhance the performance of LLM as a versatile embedding model, while maintaining its simplicity and reproducibility. For model architecture, we propose a latent attention layer to obtain pooled embeddings, which consistently improves retrieval and downstream task accuracy compared to mean pooling or using the last <EOS> token embedding from LLMs. To enhance representation learning, we remove the causal attention mask of LLMs during contrastive training. For model training, we introduce a two-stage contrastive instruction-tuning method. It first applies contrastive training with instructions on retrieval datasets, utilizing in-batch negatives and curated hard negative examples. At stage-2, it blends various non-retrieval datasets into instruction tuning, which not only enhances non-retrieval task accuracy but also improves retrieval performance. Combining these techniques, our NV-Embed model, using only publicly available data, has achieved a record-high score of 69.32, ranking No. 1 on the Massive Text Embedding Benchmark (MTEB) (as of May 24, 2024), with 56 tasks, encompassing retrieval, reranking, classification, clustering, and semantic textual similarity tasks. Notably, our model also attains the highest score of 59.36 on 15 retrieval tasks in the MTEB benchmark (also known as BEIR). We will open-source the model at: this https URL.",,Open weights (non-commercial),,Confident,2024-12-02 15:22:11+00:00,United States of America,Mistral 7B,1.0459546e+20,6ND = 6*7*10^9*2490368000 = 1.0459546e+20,,,,,,
Genie 2 (bio),Biology,"Columbia University,Rutgers University","Academia,Academia","Yeqing Lin, Minji Lee, Zhao Zhang, Mohammed AlQuraishi",2024-05-24,"Out of Many, One: Designing and Scaffolding Proteins at the Scale of the Structural Universe with Genie 2",https://arxiv.org/abs/2405.15489,,,,15700000.0,Table 2,3.234816e+20,,,"""We train Genie 2 using data parallelism on 8 Nvidia A100 GPUs with an effective batch size of 48. We train the model for 40 epochs (∼5 days) for a total of ∼960 GPU hours.""

312000000000000 peak FLOP/s * 960 GPU hours * 3600 s * 0.3 assumed utilization = 3.234816e+20 ", AlphaFold database (AFDB),"we train Genie 2 using the AlphaFold database (AFDB) [39], which consists of approximately 214M AlphaFold 2 predictions spanning nearly the entirety of UniProt [14].",214000000.0,,40.0,120.0,,NVIDIA A100,8.0,,"Protein diffusion models have emerged as a promising approach for protein design. One such pioneering model is Genie, a method that asymmetrically represents protein structures during the forward and backward processes, using simple Gaussian noising for the former and expressive SE(3)-equivariant attention for the latter. In this work we introduce Genie 2, extending Genie to capture a larger and more diverse protein structure space through architectural innovations and massive data augmentation. Genie 2 adds motif scaffolding capabilities via a novel multi-motif framework that designs co-occurring motifs with unspecified inter-motif positions and orientations. This makes possible complex protein designs that engage multiple interaction partners and perform multiple functions. On both unconditional and conditional generation, Genie 2 achieves state-of-the-art performance, outperforming all known methods on key design metrics including designability, diversity, and novelty. Genie 2 also solves more motif scaffolding problems than other methods and does so with more unique and varied solutions. Taken together, these advances set a new standard for structure-based protein design. Genie 2 inference and training code, as well as model weights, are freely available at: this https URL.",,Open weights (unrestricted),,Confident,2024-12-04 18:40:08+00:00,"United States of America,United States of America",,,,,,,48.0,,
LLPS,Biology,InstaDeep,Industry,"Benoit Gaujac, Jérémie Donà, Liviu Copoiu, Timothy Atkinson, Thomas Pierrot, Thomas D. Barrett",2024-05-24,Learning the Language of Protein Structure,https://arxiv.org/abs/2405.15840,4.0,,,,,,,,,,,70000001.00000003,"70 million total structural tokens 
= 310,000 protein structures x ~225 tokens/structure
= 7.0 x 10^7 tokens",,,,,,,"Representation learning and \emph{de novo} generation of proteins are pivotal computational biology tasks. Whilst natural language processing (NLP) techniques have proven highly effective for protein sequence modelling, structure modelling presents a complex challenge, primarily due to its continuous and three-dimensional nature. Motivated by this discrepancy, we introduce an approach using a vector-quantized autoencoder that effectively tokenizes protein structures into discrete representations. This method transforms the continuous, complex space of protein structures into a manageable, discrete format with a codebook ranging from 4096 to 64000 tokens, achieving high-fidelity reconstructions with backbone root mean square deviations (RMSD) of approximately 1-5 Å. To demonstrate the efficacy of our learned representations, we show that a simple GPT model trained on our codebooks can generate novel, diverse, and designable protein structures. Our approach not only provides representations of protein structure, but also mitigates the challenges of disparate modal representations and sets a foundation for seamless, multi-modal integration, enhancing the capabilities of computational methods in protein design.",,,,Unverified,2025-01-30 05:05:16+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
UniGPT-mMed,,,,,2024-05-24,"引领AGI新高度，云知声荣获CCKS 2023医疗大模型评测双冠军
",https://www.163.com/dy/article/IDFC8PJJ0518C51R.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
YOLOv10-X,Vision,Tsinghua University,Academia,"Ao Wang, Hui Chen, Lihao Liu, Kai Chen, Zijia Lin, Jungong Han, Guiguang Ding",2024-05-23,YOLOv10: Real-Time End-to-End Object Detection,https://arxiv.org/abs/2405.14458,,,,29500000.0,29.5M,1.478888e+17,,,"6ND = 6*29500000.00*118000*500 = 1.0443e+16 (likely an underestimation)

(speculative confidence because I don't know the amount of tokens per image)

assuming(!) batch size 64 -> number of updates per epoch = 118000/64 = 1844

160.4 Gigaflops * 1844 * 500 = 1.478888e+17",COCO,,118000.0,size of COCO 2017,500.0,, All models are trained on 8 NVIDIA 3090 GPUs,NVIDIA GeForce RTX 3090 Ti,8.0,,YOLOv10 is created by researchers from Tsinghua University using the Ultralytics Python package. This version provides real-time object detection advancements by introducing an End-to-End head that eliminates Non-Maximum Suppression (NMS) requirements.,,Open weights (restricted use),,Likely,2025-02-17 17:55:22+00:00,China,,,,,,,,,
Baichuan4,,,,,2024-05-22,国产最强大模型易主！Baichuan 4霸榜SuperCLUE，击败GPT-4-Turbo，首款AI助手来了,https://zhidx.com/p/426526.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
360Zhinao-7B,Language,360 Security Technology,Industry,360zhinao,2024-05-22,360Zhinao Technical Report,https://arxiv.org/abs/2405.13386,0.0,,,7000000000.0,,,,,,,,3400000000000.0,3.4 trillion tokens,,,,,,,"We present 360Zhinao models with 7B parameter size and context lengths spanning 4K, 32K and 360K, all available at this https URL. For rapid development in pretraining, we establish a stable and sensitive ablation environment to evaluate and compare experiment runs with minimal model size. Under such guidance, we perfect our data cleaning and composition strategies to pretrain 360Zhinao-7B-Base on 3.4T tokens. We also mainly emphasize data during alignment, where we strive to balance quantity and quality with filtering and reformatting. With tailored data, 360Zhinao-7B's context window is easily extended to 32K and 360K. RMs and RLHF are trained following SFT and credibly applied to specific tasks. All together these contributions lead to 360Zhinao-7B's competitive performance among models of similar size.",,,,Unverified,2025-02-25 12:26:51+00:00,China,,,,,,,,,
ProtT3,Biology,"National University of Singapore,University of Science and Technology of China,Hokkaido University","Academia,Academia,Academia","Zhiyuan Liu, An Zhang, Hao Fei, Enzhi Zhang, Xiang Wang, Kenji Kawaguchi, Tat-Seng Chua",2024-05-21,ProtT3: Protein-to-Text Generation for Text-based Protein Understanding,https://arxiv.org/abs/2405.12564,8.0,,,,,,,,,,,1300000000.9999995,"430,595 + 422,315 + 3,360,000 = 4,212,910 datapoints
4,212,910 × 300 = 1,263,873,000 tokens
Final estimate: 1.3 billion tokens",,,,,,,"Language Models (LMs) excel in understanding textual descriptions of proteins, as evident in biomedical question-answering tasks. However, their capability falters with raw protein data, such as amino acid sequences, due to a deficit in pretraining on such data. Conversely, Protein Language Models (PLMs) can understand and convert protein data into high-quality representations, but struggle to process texts. To address their limitations, we introduce ProtT3, a framework for Protein-to-Text Generation for Text-based Protein Understanding. ProtT3 empowers an LM to understand protein sequences of amino acids by incorporating a PLM as its protein understanding module, enabling effective protein-to-text generation. This collaboration between PLM and LM is facilitated by a cross-modal projector (i.e., Q-Former) that bridges the modality gap between the PLM's representation space and the LM's input space. Unlike previous studies focusing on protein property prediction and protein-text retrieval, we delve into the largely unexplored field of protein-to-text generation. To facilitate comprehensive benchmarks and promote future research, we establish quantitative evaluations for protein-text modeling tasks, including protein captioning, protein question-answering, and protein-text retrieval. Our experiments show that ProtT3 substantially surpasses current baselines, with ablation studies further highlighting the efficacy of its core components. Our code is available at this https URL.",,,,Unverified,2025-01-30 05:05:10+00:00,"Singapore,China,Japan",,,,,,,,,
"ALLaM adapted13B
",Language,Saudi Data and Artificial Intelligence Authority,"Industry,Government","M Saiful Bari, Yazeed Alnumay, Norah A. Alzahrani, Nouf M. Alotaibi, Hisham A. Alyahya, Sultan AlRashed, Faisal A. Mirza, Shaykhah Z. Alsubaie, Hassan A. Alahmed, Ghadah Alabduljabbar, Raghad Alkhathran, Yousef Almushayqih, Raneem Alnajim, Salman Alsubaihi, Maryam Al Mansour, Majed Alrubaian, Ali Alammari, Zaki Alawami, Abdulmohsen Al-Thubaity, Ahmed Abdelali, Jeril Kuriakose, Abdalghani Abujabal, Nora Al-Twairesh, Areeb Alowisheq, Haidar Khan",2024-05-21,"ALLaM: Large Language Models for Arabic and English
","https://arxiv.org/abs/2407.15390
https://huggingface.co/ALLaM-AI/ALLaM-7B-Instruct-previehttps://www.middleeastainews.com/p/sdaias-allam-arabic-llm-live-on-watsonxw",9.0,,,13000000000.0,,,,,,,,5200000000000.0,"3,431,217,579(4.3B) total documents, with a total of 4,587,781,981,546(4.5T) words, and 5.2T tokens.",3.0,,,NVIDIA A100,,,,,,,Unverified,2025-03-11 14:17:30+00:00,Saudi Arabia,LLaMA-13B,,,,,,,,
ALLaM adapted 70B ,Language,Saudi Data and Artificial Intelligence Authority,"Industry,Government","M Saiful Bari, Yazeed Alnumay, Norah A. Alzahrani, Nouf M. Alotaibi, Hisham A. Alyahya, Sultan AlRashed, Faisal A. Mirza, Shaykhah Z. Alsubaie, Hassan A. Alahmed, Ghadah Alabduljabbar, Raghad Alkhathran, Yousef Almushayqih, Raneem Alnajim, Salman Alsubaihi, Maryam Al Mansour, Majed Alrubaian, Ali Alammari, Zaki Alawami, Abdulmohsen Al-Thubaity, Ahmed Abdelali, Jeril Kuriakose, Abdalghani Abujabal, Nora Al-Twairesh, Areeb Alowisheq, Haidar Khan",2024-05-21,"ALLaM: Large Language Models for Arabic and English
",https://arxiv.org/abs/2407.15390,9.0,,,70000000000.0,,,,,,,,5200000000000.0,"3,431,217,579(4.3B) total documents, with a total of 4,587,781,981,546(4.5T) words, and 5.2T tokens.",3.0,,,NVIDIA A100,,,,,,,Unverified,2025-03-11 13:58:08+00:00,Saudi Arabia,Llama 2-70B,,,,,,,,
ALLaM 7B,Language,Saudi Data and Artificial Intelligence Authority,"Industry,Government","M Saiful Bari, Yazeed Alnumay, Norah A. Alzahrani, Nouf M. Alotaibi, Hisham A. Alyahya, Sultan AlRashed, Faisal A. Mirza, Shaykhah Z. Alsubaie, Hassan A. Alahmed, Ghadah Alabduljabbar, Raghad Alkhathran, Yousef Almushayqih, Raneem Alnajim, Salman Alsubaihi, Maryam Al Mansour, Majed Alrubaian, Ali Alammari, Zaki Alawami, Abdulmohsen Al-Thubaity, Ahmed Abdelali, Jeril Kuriakose, Abdalghani Abujabal, Nora Al-Twairesh, Areeb Alowisheq, Haidar Khan",2024-05-21,"ALLaM: Large Language Models for Arabic and English
",https://arxiv.org/abs/2407.15390,9.0,,,7000000000.0,,,,,,,,5200000000000.0,"3,431,217,579(4.3B) total documents, with a total of 4,587,781,981,546(4.5T) words, and 5.2T tokens.",3.0,,,NVIDIA A100,,,,,,,Unverified,2025-03-11 13:58:08+00:00,Saudi Arabia,,,,,,,,,
ALLaM 34B,Language,Saudi Data and Artificial Intelligence Authority,"Industry,Government","M Saiful Bari, Yazeed Alnumay, Norah A. Alzahrani, Nouf M. Alotaibi, Hisham A. Alyahya, Sultan AlRashed, Faisal A. Mirza, Shaykhah Z. Alsubaie, Hassan A. Alahmed, Ghadah Alabduljabbar, Raghad Alkhathran, Yousef Almushayqih, Raneem Alnajim, Salman Alsubaihi, Maryam Al Mansour, Majed Alrubaian, Ali Alammari, Zaki Alawami, Abdulmohsen Al-Thubaity, Ahmed Abdelali, Jeril Kuriakose, Abdalghani Abujabal, Nora Al-Twairesh, Areeb Alowisheq, Haidar Khan",2024-05-21,AI Models for Arabic and English,https://openreview.net/pdf?id=MscdsFVZrN,9.0,,,34000000000.0,,,,,,,,5200000000000.0,"3,431,217,579(4.3B) total documents, with a total of 4,587,781,981,546(4.5T) words, and 5.2T tokens.",3.0,,,NVIDIA A100,,,,,,,Unverified,2025-03-11 13:57:05+00:00,Saudi Arabia,,,,,,,,,
GLM-4 (0520),Language,Zhipu AI,Industry,"Aohan Zeng, Bin Xu, Bowen Wang, Chenhui Zhang, Da Yin, Diego Rojas, Guanyu Feng, Hanlin Zhao, Hanyu Lai, Hao Yu, Hongning Wang, Jiadai Sun, Jiajie Zhang, Jiale Cheng, Jiayi Gui, Jie Tang, Jing Zhang, Juanzi Li, Lei Zhao, Lindong Wu, Lucen Zhong, Mingdao Liu, Minlie Huang, Peng Zhang, Qinkai Zheng, Rui Lu, Shuaiqi Duan, Shudan Zhang, Shulin Cao, Shuxun Yang, Weng Lam Tam, Wenyi Zhao, Xiao Liu, Xiao Xia, Xiaohan Zhang, Xiaotao Gu, Xin Lv, Xinghan Liu, Xinyi Liu, Xinyue Yang, Xixuan Song, Xunkai Zhang, Yifan An, Yifan Xu, Yilin Niu, Yuantao Yang, Yueyan Li, Yushi Bai, Yuxiao Dong, Zehan Qi, Zhaoyu Wang, Zhen Yang, Zhengxiao Du, Zhenyu Hou, Zihan Wang",2024-05-20,ChatGLM: A Family of Large Language Models from GLM-130B to GLM-4 All Tools,https://arxiv.org/abs/2406.12793,,Training cost,"Trained on 10T tokens with similar architecture to GPT-4, probably >$1M compute cost.",,,,,,"- “the GLM-4 models are pre-trained on ten trillions of tokens”
- I did not find any information about parameters or compute. Here they speculatively estimate GLM-4 to be 200B parameters (which seems plausible), though no source provided: https://lifearchitect.ai/models-table/
- “GLM-4 gets close to the state-of-the-art models (GPT-4-Turbo, Gemini 1.5 Pro, and Claude 3 Opus)”  none of these models has parameters disclosed or compute estimation.

6*10000000000000*200000000000 = 1.2e+25 FLOPs with “Likely” confidence (+/- 1 OOM)",,"""To date, the GLM-4 models are pre-trained on ten trillions of tokens mostly in Chinese and English, along with a small set of corpus from 24 languages, and aligned primarily for Chinese and English usage""",10000000000000.0,,,,,,,,"We introduce ChatGLM, an evolving family of large language models that we have been developing over time. This report primarily focuses on the GLM-4 language series, which includes GLM-4, GLM-4-Air, and GLM-4-9B. They represent our most capable models that are trained with all the insights and lessons gained from the preceding three generations of ChatGLM. To date, the GLM-4 models are pre-trained on ten trillions of tokens mostly in Chinese and English, along with a small set of corpus from 24 languages, and aligned primarily for Chinese and English usage. The high-quality alignment is achieved via a multi-stage post-training process, which involves supervised fine-tuning and learning from human feedback. Evaluations show that GLM-4 1) closely rivals or outperforms GPT-4 in terms of general metrics such as MMLU, GSM8K, MATH, BBH, GPQA, and HumanEval, 2) gets close to GPT-4-Turbo in instruction following as measured by IFEval, 3) matches GPT-4 Turbo (128K) and Claude 3 for long context tasks, and 4) outperforms GPT-4 in Chinese alignments as measured by AlignBench. The GLM-4 All Tools model is further aligned to understand user intent and autonomously decide when and which tool(s) touse -- including web browser, Python interpreter, text-to-image model, and user-defined functions -- to effectively complete complex tasks. In practical applications, it matches and even surpasses GPT-4 All Tools in tasks like accessing online information via web browsing and solving math problems using Python interpreter. Over the course, we have open-sourced a series of models, including ChatGLM-6B (three generations), GLM-4-9B (128K, 1M), GLM-4V-9B, WebGLM, and CodeGeeX, attracting over 10 million downloads on Hugging face in the year 2023 alone. The open models can be accessed through this https URL and this https URL.",,API access,,Likely,2024-12-16 19:47:09+00:00,China,GLM-4 (0116),,,,,,,,
Diamond,Games,"University of Geneva,University of Edinburgh,Microsoft Research","Academia,Academia,Industry","Eloi Alonso, Adam Jelley, Vincent Micheli, Anssi Kanervisto, Amos Storkey, Tim Pearce, François Fleuret",2024-05-20,Diffusion for World Modeling: Visual Details Matter in Atari,https://arxiv.org/abs/2405.12399,,,,,,8.0490594e+20,,,82600000000000*9022.8*3600*0.3=8.0490594e+20,,"Training loop
Number of epochs 1000
Training steps per epoch 400
Batch size 32
Environment steps per epoch 100

Image observation dimensions 64×64×3",,,,9022.8,"""We trained DIAMOND from scratch for 5 random seeds on each game. Each run utilized around 12GB of VRAM and took approximately 2.9 days on a single Nvidia RTX 4090 (1.03 GPU years in total).""

1.03*365*24 = 9022.8",NVIDIA GeForce RTX 4090,,,"World models constitute a promising approach for training reinforcement learning agents in a safe and sample-efficient manner. Recent world models predominantly operate on sequences of discrete latent variables to model environment dynamics. However, this compression into a compact discrete representation may ignore visual details that are important for reinforcement learning. Concurrently, diffusion models have become a dominant approach for image generation, challenging well-established methods modeling discrete latents. Motivated by this paradigm shift, we introduce DIAMOND (DIffusion As a Model Of eNvironment Dreams), a reinforcement learning agent trained in a diffusion world model. We analyze the key design choices that are required to make diffusion suitable for world modeling, and demonstrate how improved visual details can lead to improved agent performance. DIAMOND achieves a mean human normalized score of 1.46 on the competitive Atari 100k benchmark; a new best for agents trained entirely within a world model. To foster future research on diffusion for world modeling, we release our code, agents and playable world models at this https URL.",,Open weights (unrestricted),,Likely,2025-02-14 19:17:59+00:00,"Switzerland,United Kingdom of Great Britain and Northern Ireland,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
HelixFold,Biology,Baidu,Industry,"Xiaomin Fang, Jie Gao, Jing Hu, Lihang Liu, Yang Xue, Xiaonan Zhang, Kunrui Zhu",2024-05-17,HelixFold-Multimer: Elevating Protein Complex Structure Prediction to New Heights,https://arxiv.org/html/2404.10260v2,4.0,,,,,,,,,,,,,,,,,,,"While monomer protein structure prediction tools boast impressive accuracy, the prediction of protein complex structures remains a daunting challenge in the field. This challenge is particularly pronounced in scenarios involving complexes with protein chains from different species, such as antigen-antibody interactions, where accuracy often falls short. Limited by the accuracy of complex prediction, tasks based on precise protein-protein interaction analysis also face obstacles. In this report, we highlight the ongoing advancements of our protein complex structure prediction model, HelixFold-Multimer, underscoring its enhanced performance. HelixFold-Multimer provides precise predictions for diverse protein complex structures, especially in therapeutic protein interactions. Notably, HelixFold-Multimer achieves remarkable success in antigen-antibody and peptide-protein structure prediction, greatly surpassing AlphaFold 3. HelixFold-Multimer is now available for public use on the PaddleHelix platform, offering both a general version and an antigen-antibody version. Researchers can conveniently access and utilize this service for their development needs.",,,,Unverified,2024-11-01 14:02:36+00:00,China,,,,,,,,,
ProSST,Biology,"Shanghai Jiao Tong University,Shanghai AI Lab,East China University of Science and Technology","Academia,Academia,Academia","Mingchen Li, Pan Tan, Xinzhu Ma, Bozitao Zhong, Huiqun Yu, Ziyi Zhou, Wanli Ouyang, Bingxin Zhou, Liang Hong, Yang Tan",2024-05-17,ProSST: Protein Language Modeling with Quantized Structure and Disentangled Attention,https://www.biorxiv.org/content/10.1101/2024.04.15.589672v3.abstract,9.0,,,110000000.0,Explicitly denoted in Table 2,2.6e+21,,,"""All ProSST models is trained on a DGX-A800 GPU (8×80G) server in BF16 precision for about a month."" I assume 8 accelerators each at 311.84 TFLOPS (A800 is absent from compute calculator) at 40% utilization. ",,,5600000000.999998,18.8M structures × 300 residues per structure = 5.64B data points ≈ 5.6B data points,,720.0,"""All ProSST models is trained [...] for about a month.""",NVIDIA A800,8.0,,"Protein language models (PLMs) have shown remarkable capabilities in various protein function prediction tasks. However, while protein function is intricately tied to structure, most existing PLMs do not incorporate protein structure information. To address this issue, we introduce ProSST, a Transformer-based protein language model that seamlessly integrates both protein sequences and structures. ProSST incorporates a structure quantization module and a Transformer architecture with disentangled attention. The structure quantization module translates a 3D protein structure into a sequence of discrete tokens by first serializing the protein structure into residue-level local structures and then embeds them into dense vector space. These vectors are then quantized into discrete structure tokens by a pre-trained clustering model. These tokens serve as an effective protein structure representation. Furthermore, ProSST explicitly learns the relationship between protein residue token sequences and structure token sequences through the sequence-structure disentangled attention. We pre-train ProSST on millions of protein structures using a masked language model objective, enabling it to learn comprehensive contextual representations of proteins. To evaluate the proposed ProSST, we conduct extensive experiments on the zero-shot mutation effect prediction and several supervised downstream tasks, where ProSST achieves the state-of-the-art performance among all baselines. Our code and pretrained models are publicly available 2.",,,,Unverified,2025-02-14 19:18:10+00:00,"China,China,China",,,,,,,,,
Chameleon-34B,"Multimodal,Image generation,Language,Vision",Facebook AI Research,Industry,"Srinivasan Iyer, Bernie Huang, Lili Yu, Arun Babu, Chunting Zhou, Kushal Tirumala, Xi Victoria Lin, Hu Xu, Xian Li, Akshat Shrivastava, Omer Levy, Armen Aghajanyan, Ram Pasunuru, Andrew Cohen, Aram H. Markosyan, Koustuv Sinha, Xiaoqing Ellen Tan, Ivan Evtimov, Ping Yu, Tianlu Wang, Olga Golovneva, Asli Celikyilmaz, Pedro Rodriguez, Leonid Shamis, Vasu Sharma, Christine Jou, Karthik Padthe, Ching-Feng Yeh, Mingda Chen, Bapi Akula, Jacob Kahn, Daniel Li, Scott Yih, Barlas Oguz, Morteza Behrooz, Benjamin Muller, Carleigh Wood, Mary Williamson, Ramya Raghavendra, Barbara Usher, William Ngan, Nikolay Bashlykov, Lukas Blecher, Sony Theakanath, Ammar Rizvi, Gargi Ghosh, Luke Zettlemoyer",2024-05-16,Chameleon: Mixed-Modal Early-Fusion Foundation Models,https://arxiv.org/abs/2405.09818v1,,,"They claim SOTA on some vision-text tasks, but it seems like this is only against other general purpose vision-language models. Specialized models win by a fair margin on COCO image captioning and Flickr30k.",34000000000.0,,1.6453571041e+24,,,"GPU method:
Table 2 shows that 34B model pre-training uses 4282407 GPU-hours, trained across 3072 A100s.
3.12e14 * 4282407 * 3600 * 0.3 =  1.44e24

Parameter-token method:
Pre-training goes over 9.2T tokens, post-training only goes over 1.1B tokens (sum of tokens column in Table 3).
6 * 34B *  9.2T = 1.88e24

Geometric mean: sqrt(1.44e24 * 1.88e24) = 1.65e24",Unspecified unreleased,"Pre-training:
- 2.9 trillion tokens of pure text
- 1.4 billion text-image pairs, which produces 1.5 trillion text-image tokens
	- Since each image is 1024 tokens, implies 1.43 trillion image tokens and 0.07 trillion text tokens
- 400 billion tokens of image-text interleaved documents
	- Difficult to estimate image-to-text ratio, but references OBELIKS paper which had 141 million web pages, 353 million associated images, and 115 billion text tokens.
	- 353 million * 1024 = 361.5 billion image tokens, so 75.9% of the tokens would be from images
	- Implies 303.5 billion image tokens and 96.5 text tokens
- There is a second stage of ""higher quality"" pre-training tokens which are not described in detail


Post-training:
- 940 million tokens of text
- 1.1 million tokens of code
- 19.4 million tokens of visual chats
	- Featuring 16.7 thousand images, so 17.1M image tokens and 2.3M text tokens
- 68 million tokens of image generations
	- Featuring 64.3 thousand images, so 65.8M image tokens and 2.2M text tokens
- 35.8 million tokens of interleaved generations
	- Featuring 30.7 thousand images, so 31.4M image tokens and 4.4M text tokens
- 38.6 million tokens of safety training
	- Featuring 1.6 thousand images, so 1.6M image tokens and 37M text tokens",4400000000000.0,"Slightly conflicting info. Pre-training data details describe different types of data that sum to 4.8 trillion tokens, but Table 1 indicates 4.4T. Using table values as this agrees with other statements about epochs and total tokens seen.",2.1,1394.0,"34B model pre-training uses 4282407 GPU-hours, trained across 3072 A100s
4282407 / 3072 = 1394",NVIDIA A100 SXM4 80 GB,3072.0,Self-supervised learning,"We present Chameleon, a family of early-fusion token-based mixed-modal models capable of understanding and generating images and text in any arbitrary sequence. We outline a stable training approach from inception, an alignment recipe, and an architectural parameterization tailored for the early-fusion, token-based, mixed-modal setting. The models are evaluated on a comprehensive range of tasks, including visual question answering, image captioning, text generation, image generation, and long-form mixed modal generation. Chameleon demonstrates broad and general capabilities, including state-of-the-art performance in image captioning tasks, outperforms Llama-2 in text-only tasks while being competitive with models such as Mixtral 8x7B and Gemini-Pro, and performs non-trivial image generation, all in a single model. It also matches or exceeds the performance of much larger models, including Gemini Pro and GPT-4V, according to human judgments on a new long-form mixed-modal generation evaluation, where either the prompt or outputs contain mixed sequences of both images and text. Chameleon marks a significant step forward in a unified modeling of full multimodal documents.",,Open weights (non-commercial),,Confident,2025-02-14 19:18:32+00:00,United States of America,,,"Not enough info to estimate. GPU time given for pretraining, and while we know # of fine-tuning tokens we don't know # of epochs.",,,,,,
LBSTER,Biology,"Prescient Design,Genentech","Industry,Industry","Nathan C. Frey, Taylor Joren, Aya Abdelsalam Ismail, Allen Goodman, Richard Bonneau, Kyunghyun Cho, Vladimir Gligorijević",2024-05-15,Cramming Protein Language Model Training in 24 GPU Hours,https://www.biorxiv.org/content/10.1101/2024.05.14.594108v1.abstract,1.0,,,67000000.0,"""we are able to train a 67 million parameter model""",2e+18,,,"1 day on 1 A100, assumed FP16 precision due to paper mentioning ""Using 8-bit floating point mixed precision training and other recent advances in efficient
transformer training are also promising avenues for future work."" Assuming 30% utilization rate.",UniRef50,"While listing rules of general challenge the paper is trying to complete, they list ""The training, validation, and test data splits are from UniRef50 [...]""",13000000001.000025,"UniRef50 dataset size calculation:
43,000,000 sequences × 300 tokens/sequence = 1.29 × 10¹⁰ tokens

Training process calculation: 
1,048,576 tokens/step × 50,000 steps = 5.24288 × 10¹⁰ total tokens

Epochs calculation:
5.24288 × 10¹⁰ / 1.29 × 10¹⁰ = 4.06 epochs

Final unique tokens (first epoch only): 1.3 × 10¹⁰ tokens",,24.0,"""we are able to train a 67 million parameter model in a single day",NVIDIA A100 SXM4 80 GB,1.0,,"Protein language models (pLMs) are ubiquitous across biological machine learning research, but state-of-the-art models like ESM2 take hundreds of thousands of GPU hours to pre-train on the vast protein universe. Resource requirements for scaling up pLMs prevent fundamental investigations into how optimal modeling choices might differ from those used in natural language. Here, we define a “cramming” challenge for pLMs and train performant models in 24 hours on a single GPU. By re-examining many aspects of pLM training, we are able to train a 67 million parameter model in a single day that achieves comparable performance on downstream protein fitness landscape inference tasks to ESM-3B, a model trained for over 15, 000× more GPU hours than ours. We open source our library1 for training and inference, LBSTER: Language models for Biological Sequence Transformation and Evolutionary Representation.",,,,Unverified,2025-02-14 19:18:47+00:00,"United States of America,United States of America",,,,,,,,,
Doubao-lite,Language,ByteDance,Industry,,2024-05-15,Doubao General Model Lite (Doubao-lite),https://www.volcengine.com/docs/6360/1264663,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"A lightweight version of the LLM, offering lower token costs and latency compared to the Pro version. 
",,API access,,Unknown,2024-12-08 19:52:12+00:00,China,,,,,,,,,
Doubao Role-Playing Model,Language,ByteDance,Industry,,2024-05-15,Doubao Role-Playing Model,https://www.volcengine.com/docs/6360/1264663,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"This model is designed for personalized character creation. 
",,API access,,Unknown,2024-12-08 19:52:24+00:00,China,,,,,,,,,
Doubao Text-to-Speech Model,Speech,ByteDance,Industry,,2024-05-15,Doubao Text-to-Speech Model,https://www.volcengine.com/docs/6360/1264663,,,,,,,,,,Unspecified unreleased,,,,,,,,,,This model is capable of generating natural and expressive speech. ,,API access,,Unknown,2024-12-08 19:52:06+00:00,China,,,,,,,,,
Doubao Voice Cloning Model,Speech,ByteDance,Industry,,2024-05-15,Doubao Voice Cloning Model,https://www.volcengine.com/docs/6360/1264663,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"This model can accurately clone a voice within just 5 seconds, preserving timbre similarity and naturalness. It also supports cross-lingual voice transfer. 
",,API access,,Unknown,2024-12-08 19:52:06+00:00,China,,,,,,,,,
Doubao Speech Recognition Model,Speech,ByteDance,Industry,,2024-05-15,Doubao Speech Recognition Model,https://www.volcengine.com/docs/6360/1264663,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"This model supports multi-language speech recognition, with high accuracy, sensitivity, and low latency. ",,API access,,Unknown,2024-12-08 19:52:06+00:00,China,,,,,,,,,
Doubao Text-to-Image Model,Image generation,ByteDance,Industry,,2024-05-15,Doubao Text-to-Image Model,https://www.volcengine.com/docs/6360/1264663,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"With precise text understanding and accurate image-text matching, this model produces aesthetically pleasing images, especially those related to Chinese cultural elements. 
",,API access,,Unknown,2024-12-08 19:52:06+00:00,China,,,,,,,,,
Doubao Function Call Model,Language,ByteDance,Industry,,2024-05-15,Doubao Function Call Model,https://www.volcengine.com/docs/6360/1264663,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Designed for complex tool invocation, this model excels at accurately identifying functions and extracting parameters. 
",,API access,,Unknown,2024-12-08 19:53:46+00:00,China,,,,,,,,,
Doubao Vectorization Model,Language,ByteDance,Industry,,2024-05-15,Doubao Vectorization Model,https://www.volcengine.com/docs/6360/1264663,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Focused on vector search applications, this model provides core understanding capabilities for LLM knowledge bases and supports multiple languages. 
",,API access,,Unknown,2024-12-08 19:53:25+00:00,China,,,,,,,,,
Doubao Image-to-Image generation model,"Image generation,Vision",ByteDance,Industry,,2024-05-15,Doubao Image-to-Image generation model,https://www.volcengine.com/product/doubao,,,,,,,,,,Unspecified unreleased,,,,,,,,,,,,API access,,Unknown,2024-12-08 19:55:47+00:00,China,,,,,,,,,
Doubao Real-Time translation model,"Language,Speech",ByteDance,Industry,,2024-05-15,Doubao Real-Time translation model,https://www.volcengine.com/product/doubao,,,,,,,,,,Unspecified unreleased,,,,,,,,,,,,API access,,Unknown,2024-12-08 19:55:47+00:00,China,,,,,,,,,
Doubao Video Generation model,Video,ByteDance,Industry,,2024-05-15,Doubao Video Generation model,https://www.volcengine.com/product/doubao,,,,,,,,,,Unspecified unreleased,,,,,,,,,,,,API access,,Unknown,2024-12-08 19:55:47+00:00,China,,,,,,,,,
Veo,"Video,Vision",Google DeepMind,Industry,"Abhishek Sharma, Adams Yu, Ali Razavi, Andeep Toor, Andrew Pierson, Ankush Gupta, Austin Waters, Aäron van den Oord, Daniel Tanis, Dumitru Erhan, Eric Lau, Eleni Shaw, Gabe Barth-Maron, Greg Shaw, Han Zhang, Henna Nandwani, Hernan Moraldo, Hyunjik Kim, Irina Blok, Jakob Bauer, Jeff Donahue, Junyoung Chung, Kory Mathewson, Kurtis David, Lasse Espeholt, Marc van Zee, Matt McGill, Medhini Narasimhan, Miaosen Wang, Mikołaj Bińkowski, Mohammad Babaeizadeh, Mohammad Taghi Saffar, Nando de Freitas, Nick Pezzotti, Pieter-Jan Kindermans, Poorva Rane, Rachel Hornung, Robert Riachi, Ruben Villegas, Rui Qian, Sander Dieleman, Serena Zhang, Serkan Cabi, Shixin Luo, Shlomi Fruchter, Signe Nørly, Srivatsan Srinivasan, Tobias Pfaff, Tom Hume, Vikas Verma, Weizhe Hua, William Zhu, Xinchen Yan, Xinyu Wang, Yelin Kim, Yuqing Du and Yutian Chen.",2024-05-14,"We’re introducing Veo, our most capable model for generating high-definition video",https://deepmind.google/technologies/veo/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Veo is our most capable video generation model to date. It generates high-quality, 1080p resolution videos that can go beyond a minute, in a wide range of cinematic and visual styles.",,Hosted access (no API),,Unverified,2024-10-21 19:42:42+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Imagen 3,Image generation,Google DeepMind,Industry,"Jason Baldridge, Jakob Bauer, Mukul Bhutani, Nicole Brichtova, Andrew Bunner, Kelvin Chan, Sergio Gómez Colmenarejo, Sander Dieleman, Yuqing Du, Zach Eaton-Rosen, Hongliang Fei, Yilin Gao, Evgeny Gladchenko, Mandy Guo, Alex Haig, Will Hawkins, Hexiang (Frank) Hu, Huilian Huang, Tobenna Peter Igwe, Christos Kaplanis, Siavash Khodadadeh, Ksenia Konyushkova, Karol Langner, Eric Lau, Shixin Luo, Soňa Mokrá, Henna Nandwani, Yasumasa Onoe, Aäron van den Oord, Zarana Parekh, Jordi Pont-Tuset, Hang Qi, Rui Qian, Deepak Ramachandran, Ali Razavi, Robert Riachi, Hansa Srinivasan, Srivatsan Srinivasan, Robin Strudel, Benigno Uria, Oliver Wang, Su Wang, Austin Waters, Chris Wolff, Auriel Wright, Zhisheng Xiao, Keyang Xu, Marc van Zee, Junlin Zhang, Wenlei Zhou and Konrad Zoln.",2024-05-14,Imagen 3: our highest quality text-to-image model,https://deepmind.google/technologies/imagen-3/,,,,,,,,,,Unspecified unreleased,"""Our model is trained on a large dataset comprising images, text and associated annotations. To ensure quality and safety standards, we employ a multi-stage filtering process. This process begins by removing unsafe, violent, or low-quality images. We then eliminate AI-generated images to prevent
the model from learning artifacts or biases commonly found in such images. Additionally, we use deduplication pipelines and down-weight similar images to minimize the risk of outputs overfitting particular elements of training data.""",,,,,,"Google TPU v4,Google TPU v5e",,,"Imagen 3 is our highest quality text-to-image model, capable of generating images with even better detail, richer lighting and fewer distracting artifacts than our previous models.",,Hosted access (no API),,Unknown,2024-12-27 17:21:52+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
LearnLM-Tutor,Language,"Google Research,Google DeepMind,Google,Arizona State University,Lund University,University of Oxford","Industry,Industry,Industry,Academia,Academia,Academia","Irina Jurenka, Markus Kunesch, Kevin R. McKee, Daniel Gillick, Shaojian Zhu, Sara Wiltberger, Shubham Milind Phal, Katherine Hermann, Daniel Kasenberg, Avishkar Bhoopchand, Ankit Anand, Miruna Pîslar, Stephanie Chan, Lisa Wang§, Jennifer She, Parsa Mahmoudieh, Aliya Rysbek, Wei-Jen Ko, Andrea Huber, Brett Wiltshire, Gal Elidan‡, Roni Rabin, Jasmin Rubinovitz†, Amit Pitaru, Mac McAllister, Julia Wilkowski, David Choi, Roee Engelberg, Lidan Hackmon, Adva Levin, Rachel Griffin, Michael Sears, Filip Bar, Mia Mesar, Mana Jabbour, Arslan Chaudhry, James Cohan, Sridhar Thiagarajan, Nir Levine, Ben Brown, Dilan Gorur§, Svetlana Grant, Rachel Hashimshoni, Laura Weidinger, Jieru Hu, Dawn Chen, Kuba Dolecki, Canfer Akbulut, Maxwell Bileschi, Laura Culp, Wen-Xin Dong, Nahema Marchal, Kelsie Van Deman, Hema Bajaj Misra, Michael Duah, Moran Ambar, Avi Caciularu, Sandra Lefdal, Chris Summerfield, James An, Pierre-Alexandre Kamienny, Abhinit Mohdi, Theofilos Strinopoulous, Annie Hale, Wayne Anderson, Luis C. Cobo, Niv Efron†, Muktha Ananda, Shakir Mohamed, Maureen Heymans, Zoubin Ghahramani, Yossi Matias, Ben Gomes, Lila Ibrahim.",2024-05-14,Towards Responsible Development of Generative AI for Education: An Evaluation-Driven Approach,https://storage.googleapis.com/deepmind-media/LearnLM/LearnLM_paper.pdf,,,,,,,,,,"GSM8K,Unspecified unreleased","Human Tutoring Data: Conversations between educators and learners.
Gen AI Role-Play Data: Simulated tutor-learner interactions.
GSM8k Dialogue: Adapted word-problem datasets converted into conversational format.
Golden Conversations: Handcrafted, high-quality dialogues by educators.
Safety Dataset: Specially designed for safety-related fine-tuning.",,,,,,,,,"A major challenge facing the world is the provision of equitable and universal access to quality education. Recent advances in generative AI (gen AI) have created excitement about the potential of new technologies to offer a personal tutor for every learner and a teaching assistant for every teacher. The full extent of this dream, however, has not yet materialised. We argue that this is primarily due to the difficulties with verbalising pedagogical intuitions into gen AI prompts and the lack of good evaluation practices, reinforced by the challenges in defining excellent pedagogy. Here we present our work collaborating with learners and educators to translate high level principles from learning science into a pragmatic set of seven diverse educational benchmarks, spanning quantitative, qualitative, automatic and human
evaluations; and to develop a new set of fine-tuning datasets to improve the pedagogical capabilities of Gemini, introducing LearnLM-Tutor. Our evaluations show that LearnLM-Tutor is consistently preferred over a prompt tuned Gemini by educators and learners on a number of pedagogical dimensions. We hope that this work can serve as a first step towards developing a comprehensive educational evaluation framework, and that this can enable rapid progress within the AI and EdTech communities towards
maximising the positive impact of gen AI in education.",,Hosted access (no API),,Unknown,2024-11-25 16:13:04+00:00,"Multinational,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America,United States of America,Sweden,United Kingdom of Great Britain and Northern Ireland",Gemini 1.0 Ultra,,,,,,,,
Hunyuan-DiT,Image generation,Tencent,Industry,"Zhimin Li, Jianwei Zhang, Qin Lin, Jiangfeng Xiong, Yanxin Long, Xinchi Deng, Yingfang Zhang, Xingchao Liu, Minbin Huang, Zedong Xiao, Dayou Chen, Jiajun He, Jiahao Li, Wenyue Li, Chen Zhang, Rongwei Quan, Jianxiang Lu, Jiabin Huang, Xiaoyan Yuan, Xiaoxiao Zheng, Yixuan Li, Jihong Zhang, Chao Zhang, Meng Chen, Jie Liu, Zheng Fang, Weiyan Wang, Jinbao Xue, Yangyu Tao, Jianchen Zhu, Kai Liu, Sihuan Lin, Yifu Sun, Yun Li, Dongdong Wang, Mingtao Chen, Zhichao Hu, Xiao Xiao, Yan Chen, Yuhong Liu, Wei Liu, Di Wang, Yong Yang, Jie Jiang, Qinglin Lu",2024-05-14,Hunyuan-DiT: A Powerful Multi-Resolution Diffusion Transformer with Fine-Grained Chinese Understanding,https://arxiv.org/abs/2405.08748,,,,1500000000.0,1.5B,,,,,Unspecified unreleased,,,,,,,,,,"We present Hunyuan-DiT, a text-to-image diffusion transformer with fine-grained understanding of both English and Chinese. To construct Hunyuan-DiT, we carefully design the transformer structure, text encoder, and positional encoding. We also build from scratch a whole data pipeline to update and evaluate data for iterative model optimization. For fine-grained language understanding, we train a Multimodal Large Language Model to refine the captions of the images. Finally, Hunyuan-DiT can perform multi-turn multimodal dialogue with users, generating and refining images according to the context. Through our holistic human evaluation protocol with more than 50 professional human evaluators, Hunyuan-DiT sets a new state-of-the-art in Chinese-to-image generation compared with other open-source models. Code and pretrained models are publicly available at this http URL",,Open weights (restricted use),,Confident,2025-01-06 16:09:31+00:00,China,,,,,,,,,
Yi-Large,Language,01.AI,Industry,"Alex Young, Bei Chen, Chao Li, Chengen Huang, Ge Zhang, Guanwei Zhang, Heng Li, Jiangcheng Zhu, Jianqun Chen, Jing Chang, Kaidong Yu, Peng Liu, Qiang Liu, Shawn Yue, Senbin Yang, Shiming Yang, Tao Yu, Wen Xie, Wenhao Huang, Xiaohui Hu, Xiaoyi Ren, Xinyao Niu, Pengcheng Nie, Yuchi Xu, Yudong Liu, Yue Wang, Yuxuan Cai, Zhenyu Gu, Zhiyuan Liu, Zonghong Dai",2024-05-13,,,,,,100000000000.0,"""Yi-Large is a software over-the-air-driven closed-source large model with a parameter of over 100 billion tokens."" from https://www.chinadaily.com.cn/a/202405/13/WS6641abd1a31082fc043c6ccd.html",1.8e+24,,5.6920997883e+25,"6ND = 6*100000000000*3000000000000=1.8e+24

(speculative confidence because training dataset size is very uncertain)",,,3000000000000.0,"3T tokens for previous Yi models: ""Targeted as a bilingual language model and trained on 3T multilingual corpus, the Yi series models become one of the strongest LLM worldwide, showing promise in language understanding, commonsense reasoning, reading comprehension, and more.""
",,,,,,,,,API access,,Speculative,2025-01-30 02:34:08+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
GPT-4o,"Multimodal,Language,Audio,Speech,Vision",OpenAI,Industry,"Aidan Clark, Alex Paino, Jacob Menick, Liam Fedus, Luke Metz, Clemens Winter, Lia Guy, Sam Schoenholz, Daniel Levy, Nitish Keskar, Alex Carney, Alex Paino, Ian Sohl, Qiming Yuan, Reimar Leike, Arka Dhar, Brydon Eastman, Mia Glaese, Ben Sokolowsky, Andrew Kondrich, Felipe Petroski Such, Henrique Ponde de Oliveira Pinto, Jiayi Weng, Randall Lin, Youlong Cheng, Nick Ryder, Lauren Itow, Barret Zoph, John Schulman, Mianna Chen, Adam Lerer, Adam P. Goucher, Adam Perelman, Akila Welihinda, Alec Radford, Alex Borzunov, Alex Carney, Alex Chow, Alex Paino, Alex Renzin, Alex Tachard Passos, Alexi Christakis, Ali Kamali, Allison Moyer, Allison Tam, Amin Tootoonchian, Ananya Kumar, Andrej Karpathy, Andrey Mishchenko, Andrew Cann, Andrew Kondrich, Andrew Tulloch, Angela Jiang, Antoine Pelisse, Anuj Gosalia, Avi Nayak, Avital Oliver, Behrooz Ghorbani, Ben Leimberger, Ben Wang, Blake Samic, Brian Guarraci, Brydon Eastman, Camillo Lugaresi, Chak Li, Charlotte Barette, Chelsea Voss, Chong Zhang, Chris Beaumont, Chris Hallacy, Chris Koch, Christian Gibson, Christopher Hesse, Colin Wei, Daniel Kappler, Daniel Levin, Daniel Levy, David Farhi, David Mely, David Sasaki, Dimitris Tsipras, Doug Li, Duc Phong Nguyen, Duncan Findlay, Edmund Wong, Ehsan Asdar, Elizabeth Proehl, Elizabeth Yang, Eric Peterson, Eric Sigler, Eugene Brevdo, Farzad Khorasani, Francis Zhang, Gene Oden, Geoff Salmon, Hadi Salman, Haiming Bao, Heather Schmidt, Hongyu Ren, Hyung Won Chung, Ian Kivlichan, Ian O'Connell, Ian Osband, Ilya Kostrikov, Ingmar Kanitscheider, Jacob Coxon, James Crooks, James Lennon, Jason Teplitz, Jason Wei, Jason Wolfe, Jay Chen, Jeff Harris, Jiayi Weng, Jie Tang, Joanne Jang, Jonathan Ward, Jonathan McKay, Jong Wook Kim, Josh Gross, Josh Kaplan, Joy Jiao, Joyce Lee, Juntang Zhuang, Kai Fricke, Kavin Karthik, Kenny Hsu, Kiel Howe, Kyle Luther, Larry Kai, Lauren Itow, Leo Chen, Lia Guy, Lien Mamitsuka, Lilian Weng, Long Ouyang, Louis Feuvrier, Lukas Kondraciuk, Lukasz Kaiser, Lyric Doshi, Mada Aflak, Maddie Simens, Madeleine Thompson, Marat Dukhan, Marvin Zhang, Mateusz Litwin, Max Johnson, Mayank Gupta, Mia Glaese, Michael Janner, Michael Petrov, Michael Wu, Michelle Fradin, Michelle Pokrass, Miguel Oom Temudo de Castro, Mikhail Pavlov, Minal Khan, Mo Bavarian, Natalia Gimelshein, Natalie Staudacher, Nick Stathas, Nik Tezak, Nithanth Kudige, Noel Bundick, Ofir Nachum, Oleg Boiko, Oleg Murk, Olivier Godement, Owen Campbell-Moore, Philip Pronin, Philippe Tillet, Rachel Lim, Rajan Troll, Randall Lin, Rapha gontijo lopes, Raul Puri, Reah Miyara, Reimar Leike, Renaud Gaubert, Reza Zamani, Rob Honsby, Rohit Ramchandani, Rory Carmichael, Ruslan Nigmatullin, Ryan Cheu, Scott Gray, Sean Grove, Sean Metzger, Shantanu Jain, Shengjia Zhao, Sherwin Wu, Shuaiqi (Tony) Xia, Sonia Phene, Spencer Papay, Steve Coffey, Steve Lee, Steve Lee, Stewart Hall, Suchir Balaji, Tal Broda, Tal Stramer, Tarun Gogineni, Ted Sanders, Thomas Cunninghman, Thomas Dimson, Thomas Raoux, Tianhao Zheng, Tina Kim, Todd Underwood, Tristan Heywood, Valerie Qi, Vinnie Monaco, Vlad Fomenko, Weiyi Zheng, Wenda Zhou, Wojciech Zaremba, Yash Patil, Yilei, Qian, Yongjik Kim, Youlong Cheng, Yuchen He, Yuchen Zhang, Yujia Jin, Yunxing Dai, Yury Malkov",2024-05-13,Hello GPT-4o,"https://openai.com/index/hello-gpt-4o/ 
https://openai.com/index/gpt-4o-system-card/",,"SOTA improvement,Significant use","Outperforms GPT-4 Turbo and other models on text and especially on multimodal benchmarks, such as MMLU, GPQA, HumanEval, MMMU, etc See Model Evaluations: https://openai.com/index/hello-gpt-4o/ 

GPT-4o is now the default model in ChatGPT, so it's one of the most widely used models.",,"Not known.

Inference costs in the API are 2x cheaper than GPT-4 Turbo",3.810001e+25,,,Training compute estimated from benchmark scores.,Unspecified unreleased,"""With GPT-4o, we trained a single new model end-to-end across text, vision, and audio.""",,,,,,,,,"We’re announcing GPT-4o, our new flagship model that can reason across audio, vision, and text in real time.

GPT-4o (“o” for “omni”) is a step towards much more natural human-computer interaction—it accepts as input any combination of text, audio, image, and video and generates any combination of text, audio, and image outputs. It can respond to audio inputs in as little as 232 milliseconds, with an average of 320 milliseconds, which is similar to human response time(opens in a new window) in a conversation. It matches GPT-4 Turbo performance on text in English and code, with significant improvement on text in non-English languages, while also being much faster and 50% cheaper in the API. GPT-4o is especially better at vision and audio understanding compared to existing models.",,API access,,Speculative,2024-12-30 18:36:09+00:00,United States of America,,,"Definitely a new model, not a GPT-4 finetune",,,,,,
Yi-1.5-34B,Language,01.AI,Industry,,2024-05-13,"Yi-1.5 is an upgraded version of Yi, delivering stronger performance in coding, math, reasoning, and instruction-following capability.",https://huggingface.co/01-ai/Yi-1.5-34B,,,,34000000000.0,34b,7.344e+23,,,6*34*10^9*3.6*10^12 = 7.344e+23,Unspecified unreleased,assuming same as Yi 34 - Chinese and English dataset,3600000000000.0,"500b
""Yi-1.5 is an upgraded version of Yi. It is continuously pre-trained on Yi with a high-quality corpus of 500B tokens and fine-tuned on 3M diverse fine-tuning samples.""

3.6T total pre-trained tokens ",,,,,,,"Yi-1.5 is an upgraded version of Yi. It is continuously pre-trained on Yi with a high-quality corpus of 500B tokens and fine-tuned on 3M diverse fine-tuning samples.

Compared with Yi, Yi-1.5 delivers stronger performance in coding, math, reasoning, and instruction-following capability, while still maintaining excellent capabilities in language understanding, commonsense reasoning, and reading comprehension.

Yi-1.5 comes in 3 model sizes: 34B, 9B, and 6B. For model details and benchmarks, see Model Card.",,Open weights (restricted use),,Confident,2024-12-16 18:36:32+00:00,China,,,,,,Yi-34B,,,
llama-3-airoboros-70b-3.3,Language,,,Jon Durbin,2024-05-12,airoboros: using large language models to fine-tune large language models,https://huggingface.co/jondurbin/airoboros-70b-3.3,,,,70000000000.0,same as llama 3 70B,,,,,airoboros datasets,"The fine-tuning data was mostly generated by OpenAI API calls to gpt-4, via airoboros",,,,,,NVIDIA RTX A6000,2.0,,"This is my take on implementing the Self-Instruct paper. The approach is quite heavily modified, and does not use any human-generated seeds.

This updated implementation supports either the /v1/completions endpoint or /v1/chat/completions, which is particularly useful in that it supports gpt-4 and gpt-3.5-turbo (which is 1/10 the cost of text-davinci-003).

Huge thank you to the folks over at a16z for sponsoring the costs associated with building models and associated tools!",,Open weights (restricted use),,Confident,2024-12-16 18:50:38+00:00,,Llama 3-70B,,,,,,,,
MoLeR,Biology,"Microsoft Research,Novartis","Industry,Industry","Krzysztof Maziarz, Henry Jackson-Flux, Pashmina Cameron, Finton Sirockin, Nadine Schneider, Nikolaus Stiefl, Marwin Segler, Marc Brockschmidt",2024-05-12,Learning to Extend Molecular Scaffolds with Structural Motifs,https://arxiv.org/abs/2103.03864,,,,,,2.1062592e+18,,,"training speed 95.2 molecules/sec (Table 1)

1.5*10^6 molecules / 95.2 = 15756 seconds = 4 hours (1 epoch)

""a few GPU days"" - let's assume (!) it was 10 GPU-days 

10*24*3600*8126000000000*0.3 = 2.1062592e+18",GuacaMol,"We use training data from GuacaMol (Brown et al., 2019), which released a curated set of ≈1.5M drug-like molecules, divided into train, validation and test sets.",,,,,"""Training MoLeR requires first preprocessing the data, which takes up to one CPU day for GuacaMol, followed by training itself, which takes up to a few GPU days.""",NVIDIA Tesla K80,,,"Recent advancements in deep learning-based modeling of molecules promise to accelerate in silico drug discovery. A plethora of generative models is available, building molecules either atom-by-atom and bond-by-bond or fragment-by-fragment. However, many drug discovery projects require a fixed scaffold to be present in the generated molecule, and incorporating that constraint has only recently been explored. Here, we propose MoLeR, a graph-based model that naturally supports scaffolds as initial seed of the generative procedure, which is possible because it is not conditioned on the generation history. Our experiments show that MoLeR performs comparably to state-of-the-art methods on unconstrained molecular optimization tasks, and outperforms them on scaffold-based tasks, while being an order of magnitude faster to train and sample from than existing approaches. Furthermore, we show the influence of a number of seemingly minor design choices on the overall performance.",,Open weights (unrestricted),,Speculative,2025-02-14 19:19:06+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Switzerland",,,,,,,,,
Fugaku-LLM,Language,"Tohoku University,CyberAgent,Tokyo Institute of Technology,Fujitsu,RIKEN,Nagoya University,Kotoba Technologies","Academia,Industry,Academia,Industry,Academia,Industry",Fugaku Team,2024-05-10,Release of “Fugaku-LLM” – a large language model trained on the supercomputer “Fugaku”,https://www.fujitsu.com/global/about/resources/news/press-releases/2024/0510-01.html,,,,13000000000.0,"""Fugaku-LLM has 13 billion parameters (2)""",2.9640000000001e+22,,,https://www.wolframalpha.com/input?i=6+FLOP+*+13+billion+*+380+billion,Unspecified unreleased,"""Fugaku-LLM was trained on proprietary Japanese data collected by CyberAgent, along with English data, and other data.""",380000000000.0,"""Fugaku-LLM was trained on 380 billion tokens using 13,824 nodes of Fugaku, with about 60% of the training data being Japanese, combined with English, mathematics, and code.""",,,,,,,"A team of researchers in Japan released Fugaku-LLM, a large language model (1) with enhanced Japanese language capability, using the RIKEN supercomputer Fugaku. The team is led by Professor Rio Yokota of Tokyo Institute of Technology, Associate Professor Keisuke Sakaguchi of Tohoku University, Koichi Shirahata of Fujitsu Limited, Team Leader Mohamed Wahib of RIKEN, Associate Professor Koji Nishiguchi of Nagoya University, Shota Sasaki of CyberAgent, Inc, and Noriyuki Kojima of Kotoba Technologies Inc.

To train large language models on Fugaku, the researchers developed distributed training methods, including porting the deep learning framework Megatron-DeepSpeed to Fugaku in order to optimize the performance of Transformers on Fugaku. They accelerated the dense matrix multiplication library for Transformers, and optimized communication performance for Fugaku by combining three types of parallelization techniques and accelerated the collective communication library on the Tofu interconnect D.

Fugaku-LLM has 13 billion parameters (2) and is larger than the 7-billion-parameter models that have been developed widely in Japan. Fugaku-LLM has enhanced Japanese capabilities, with an average score of 5.5 on the Japanese MT-Bench (3), the highest performance among open models that are trained using original data produced in Japan. In particular, the benchmark performance for humanities and social sciences tasks reached a remarkably high score of 9.18.

Fugaku-LLM was trained on proprietary Japanese data collected by CyberAgent, along with English data, and other data. The source code of Fugaku-LLM is available on GitHub (4) and the model is available on Hugging Face (5). Fugaku-LLM can be used for research and commercial purposes as long as users comply with the license.

In the future, as more researchers and engineers participate in improving the models and their applications, the efficiency of training will be improved, leading to next-generation innovative research and business applications, such as the linkage of scientific simulation and generative AI, and social simulation of virtual communities with thousands of AIs.",,Open weights (unrestricted),,Confident,2024-12-16 19:49:58+00:00,"Japan,Japan,Japan,Japan,Japan,Japan,Japan",,,,,,,,,
Gemini 1.5 Flash,"Multimodal,Language,Vision,Audio",Google DeepMind,Industry,Gemini Team,2024-05-10,Gemini 1.5: Unlocking multimodal understanding across millions of tokens of context,https://storage.googleapis.com/deepmind-media/gemini/gemini_v1_5_report.pdf,,,,,,,,,"""Gemini 1.5 Flash is a dense Transformer based model that is online distilled [...] from Gemini 1.5 Pro.""
So Flash implicitly includes training compute of 1.5 Pro.",,"""Our pre-training dataset includes data sourced across many different domains, including web documents and code, and incorporates image, audio, and video content. For the instruction tuning phase we finetuned Gemini 1.5 models on a collection of multimodal data (containing paired instructions and appropriate responses), with further tuning based on human preference data. We refer readers to the Gemini 1.0 Technical Report (Gemini-Team et al., 2023) for further information.""
",,,,,"""Gemini 1.5 models are trained on multiple 4096-chip pods of Google’s TPUv4 accelerators, distributed across multiple datacenters""",Google TPU v4,,,"In this report, we introduce the Gemini 1.5 family of models, representing the next generation of highly compute-efficient multimodal models capable of recalling and reasoning over fine-grained information from millions of tokens of context, including multiple long documents and hours of video and audio. The family includes two new models: (1) an updated Gemini 1.5 Pro, which exceeds the February version on the great majority of capabilities and benchmarks; (2) Gemini 1.5 Flash, a more lightweight variant designed for efficiency with minimal regression in quality. Gemini 1.5 models achieve near-perfect recall on long-context retrieval tasks across modalities, improve the state-of-the-art in long-document QA, long-video QA and long-context ASR, and match or surpass Gemini 1.0 Ultra’s state-of-the-art performance across a broad set of benchmarks. Studying the limits of Gemini 1.5’s long-context ability, we find continued improvement in next-token prediction and near-perfect retrieval (>99%) up to at least 10M tokens, a generational leap over existing models such as Claude 3.0 (200k) and GPT-4 Turbo (128k). Finally, we highlight real-world use cases, such as Gemini 1.5 collaborating with professions on their completing their tasks achieving 26 to 75% time savings across 10 different job categories, as well as surprising new capabilities of large language models at the frontier; when given a grammar manual for Kalamang, a language with fewer than 200 speakers worldwide, the model learns to translate English to Kalamang at a similar level to a person who learned from the same content.
",,API access,,Unknown,2024-12-30 17:24:46+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Gemini 1.5 Flash 8B,"Multimodal,Language,Vision,Audio",Google DeepMind,Industry,Gemini Team,2024-05-10,Gemini 1.5: Unlocking multimodal understanding across millions of tokens of context,https://storage.googleapis.com/deepmind-media/gemini/gemini_v1_5_report.pdf,,,,8000000000.0,8B,,,,,,"""Our pre-training dataset includes data sourced across many different domains, including web documents and code, and incorporates image, audio, and video content. For the instruction tuning phase we finetuned Gemini 1.5 models on a collection of multimodal data (containing paired instructions and appropriate responses), with further tuning based on human preference data. We refer readers to the Gemini 1.0 Technical Report (Gemini-Team et al., 2023) for further information.""
",,,,,"""Gemini 1.5 models are trained on multiple 4096-chip pods of Google’s TPUv4 accelerators, distributed across multiple datacenters""",Google TPU v4,,,"In this report, we introduce the Gemini 1.5 family of models, representing the next generation of highly compute-efficient multimodal models capable of recalling and reasoning over fine-grained information from millions of tokens of context, including multiple long documents and hours of video and audio. The family includes two new models: (1) an updated Gemini 1.5 Pro, which exceeds the February version on the great majority of capabilities and benchmarks; (2) Gemini 1.5 Flash, a more lightweight variant designed for efficiency with minimal regression in quality. Gemini 1.5 models achieve near-perfect recall on long-context retrieval tasks across modalities, improve the state-of-the-art in long-document QA, long-video QA and long-context ASR, and match or surpass Gemini 1.0 Ultra’s state-of-the-art performance across a broad set of benchmarks. Studying the limits of Gemini 1.5’s long-context ability, we find continued improvement in next-token prediction and near-perfect retrieval (>99%) up to at least 10M tokens, a generational leap over existing models such as Claude 3.0 (200k) and GPT-4 Turbo (128k). Finally, we highlight real-world use cases, such as Gemini 1.5 collaborating with professions on their completing their tasks achieving 26 to 75% time savings across 10 different job categories, as well as surprising new capabilities of large language models at the frontier; when given a grammar manual for Kalamang, a language with fewer than 200 speakers worldwide, the model learns to translate English to Kalamang at a similar level to a person who learned from the same content.
",,API access,,Confident,2024-12-30 17:27:03+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
MatterSim (M3GNet - MatterSim-v1.0.0-5M),Materials science,Microsoft Research AI for Science,Industry,"Han Yang, Chenxi Hu, Yichi Zhou, Xixian Liu, Yu Shi, Jielan Li, Guanzhi Li, Zekun Chen, Shuizhou Chen, Claudio Zeni, Matthew Horton, Robert Pinsler, Andrew Fowler, Daniel Zügner, Tian Xie, Jake Smith, Lixin Sun, Qian Wang, Lingyu Kong, Chang Liu, Hongxia Hao, Ziheng Lu",2024-05-10,"MatterSim: A Deep Learning Atomistic Model Across Elements, Temperatures and Pressures",https://arxiv.org/abs/2405.04967,,,,4500000.0,"""As the training data size increases up to 3M, the the total number of parameters in M3GNet increase accordingly from 880K to 4.5M.""",1.62e+16,,,"Speculative confidence because I am unsure how to calculate gradient updates/tokens

6ND = 6*4500000*3000000*200 = 1.62e+16",,,3000000.0,"""As the training data size increases up to 3M, the the total number of parameters in M3GNet increase accordingly from 880K to 4.5M.""",200.0,,,NVIDIA A100,8.0,,"Accurate and fast prediction of materials properties is central to the digital transformation of materials design. However, the vast design space and diverse operating conditions pose significant challenges for accurately modeling arbitrary material candidates and forecasting their properties. We present MatterSim, a deep learning model actively learned from large-scale first-principles computations, for efficient atomistic simulations at first-principles level and accurate prediction of broad material properties across the periodic table, spanning temperatures from 0 to 5000 K and pressures up to 1000 GPa. Out-of-the-box, the model serves as a machine learning force field, and shows remarkable capabilities not only in predicting ground-state material structures and energetics, but also in simulating their behavior under realistic temperatures and pressures, signifying an up to ten-fold enhancement in precision compared to the prior best-in-class. This enables MatterSim to compute materials' lattice dynamics, mechanical and thermodynamic properties, and beyond, to an accuracy comparable with first-principles methods. Specifically, MatterSim predicts Gibbs free energies for a wide range of inorganic solids with near-first-principles accuracy and achieves a 15 meV/atom resolution for temperatures up to 1000K compared with experiments. This opens an opportunity to predict experimental phase diagrams of materials at minimal computational cost. Moreover, MatterSim also serves as a platform for continuous learning and customization by integrating domain-specific data. The model can be fine-tuned for atomistic simulations at a desired level of theory or for direct structure-to-property predictions, achieving high data efficiency with a reduction in data requirements by up to 97%.",,Open weights (unrestricted),,Speculative,2025-01-06 18:14:50+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,China,Netherlands,Germany",,,,,,,,,
MatterSim (Grpaphomer),Materials science,Microsoft Research AI for Science,Industry,"Han Yang, Chenxi Hu, Yichi Zhou, Xixian Liu, Yu Shi, Jielan Li, Guanzhi Li, Zekun Chen, Shuizhou Chen, Claudio Zeni, Matthew Horton, Robert Pinsler, Andrew Fowler, Daniel Zügner, Tian Xie, Jake Smith, Lixin Sun, Qian Wang, Lingyu Kong, Chang Liu, Hongxia Hao, Ziheng Lu",2024-05-10,"MatterSim: A Deep Learning Atomistic Model Across Elements, Temperatures and Pressures",https://arxiv.org/abs/2405.04967,,,,182000000.0,"""The total parameters of Graphormer is 182M.""",1.118208e+20,,,"Speculative confidence because I am unsure how to calculate gradient updates/tokens

6*1,562,500*256*256*182000000=1.118208e+20",,,,"""The model is trained for a total of 1,562,500 steps""
""The batch size for training is set to 256""
""the maximum number of expanded atoms is capped at 256""

",,,,NVIDIA A100,64.0,,"Accurate and fast prediction of materials properties is central to the digital transformation of materials design. However, the vast design space and diverse operating conditions pose significant challenges for accurately modeling arbitrary material candidates and forecasting their properties. We present MatterSim, a deep learning model actively learned from large-scale first-principles computations, for efficient atomistic simulations at first-principles level and accurate prediction of broad material properties across the periodic table, spanning temperatures from 0 to 5000 K and pressures up to 1000 GPa. Out-of-the-box, the model serves as a machine learning force field, and shows remarkable capabilities not only in predicting ground-state material structures and energetics, but also in simulating their behavior under realistic temperatures and pressures, signifying an up to ten-fold enhancement in precision compared to the prior best-in-class. This enables MatterSim to compute materials' lattice dynamics, mechanical and thermodynamic properties, and beyond, to an accuracy comparable with first-principles methods. Specifically, MatterSim predicts Gibbs free energies for a wide range of inorganic solids with near-first-principles accuracy and achieves a 15 meV/atom resolution for temperatures up to 1000K compared with experiments. This opens an opportunity to predict experimental phase diagrams of materials at minimal computational cost. Moreover, MatterSim also serves as a platform for continuous learning and customization by integrating domain-specific data. The model can be fine-tuned for atomistic simulations at a desired level of theory or for direct structure-to-property predictions, achieving high data efficiency with a reduction in data requirements by up to 97%.",,,,Speculative,2025-01-06 18:14:52+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,China,Netherlands,Germany",,,,,,,,,
Falcon 2 11B,Language,Technology Innovation Institute,Government,,2024-05-09,Falcon2-11B,https://huggingface.co/tiiuae/falcon-11B ,,,,11000000000.0,11B,3.6e+23,,,"trained on 5.5T tokens

6 * 11B * 5.5T = 3.6e23",RefinedWeb,"""Falcon2-11B was trained over 5,000B tokens of RefinedWeb, a high-quality filtered and deduplicated web dataset which we enhanced with curated corpora. It followed a four stage training strategy. The first three stages were focused on increasing the context length, from to 2048 to 4096 and finally to 8192 tokens. The last stage aimed to further enhance performance using only high quality data.""

Possibly an updated version of RefinedWeb, which only had 3.5T tokens when Falcon 1 was released? not clear.",5500000000000.0,5.5T tokens: https://falconllm.tii.ae/falcon-2.html ,,1400.0,"roughly two months: https://huggingface.co/tiiuae/falcon-11B 

so ~1400 days",NVIDIA A100 SXM4 40 GB,,,"Falcon2-11B is an 11B parameters causal decoder-only model built by TII and trained on over 5,000B tokens of RefinedWeb enhanced with curated corpora. The model is made available under the TII Falcon License 2.0, the permissive Apache 2.0-based software license which includes an acceptable use policy that promotes the responsible use of AI.",,Open weights (restricted use),,Confident,2025-02-14 19:19:12+00:00,United Arab Emirates,,,,,,,,,
AlphaFold 3,Biology,"Google DeepMind,Isomorphic Labs","Industry,Industry","Josh Abramson, Jonas Adler, Jack Dunger, Richard Evans, Tim Green, Alexander Pritzel, Olaf Ronneberger, Lindsay Willmore, Andrew J. Ballard, Joshua Bambrick, Sebastian W. Bodenstein, David A. Evans, Chia-Chun Hung, Michael O’Neill, David Reiman, Kathryn Tunyasuvunakool, Zachary Wu, Akvilė Žemgulytė, Eirini Arvaniti, Charles Beattie, Ottavia Bertolli, Alex Bridgland, Alexey Cherepanov, Miles Congreve, Alexander I. Cowen-Rivers, Andrew Cowie, Michael Figurnov, Fabian B. Fuchs, Hannah Gladman, Rishub Jain, Yousuf A. Khan, Caroline M. R. Low, Kuba Perlin, Anna Potapenko, Pascal Savy, Sukhdeep Singh, Adrian Stecula, Ashok Thillaisundaram, Catherine Tong, Sergei Yakneen, Ellen D. Zhong, Michal Zielinski, Augustin Žídek, Victor Bapst, Pushmeet Kohli, Max Jaderberg, Demis Hassabis, John M. Jumper",2024-05-08,Accurate structure prediction of biomolecular interactions with AlphaFold 3,https://www.nature.com/articles/s41586-024-07487-w,,,,,,4.1405645e+22,,,256*480*3600*312000000000000*0.3=4.1405645e+22,PDB (Protein Data Bank),,3494400000.0,"supplementary materials Table 6

20*10^6 training samples * 384 tokens + 1.5*10^6*640+1.5*10:6*768+1.8*10^6*768=3494400000 tokens",,480.0,"supplementary materials Table 6
20 days *24 hours = 480 hours",NVIDIA A100,256.0,,"The introduction of AlphaFold 2 has spurred a revolution in modelling the structure of proteins and their interactions, enabling a huge range of applications in protein modelling and design Here we describe our AlphaFold 3 model with a substantially updated diffusion-based architecture that is capable of predicting the joint structure of complexes including proteins, nucleic acids, small molecules, ions and modified residues. The new AlphaFold model demonstrates substantially improved accuracy over many previous specialized tools: far greater accuracy for protein–ligand interactions compared with state-of-the-art docking tools, much higher accuracy for protein–nucleic acid interactions compared with nucleic-acid-specific predictors and substantially higher antibody–antigen prediction accuracy compared with AlphaFold-Multimer. Together, these results show that high-accuracy modelling across biomolecular space is possible within a single unified deep-learning framework.",,Open weights (non-commercial),,Confident,2024-11-11 22:57:23+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
BiosimDock,"Medicine,Biology",DeepOrigin,Industry,"Garik Petrosyan, Garegin Papoian, Natalie Ma, Tigran Abramyan",2024-05-08,We Spill the Beans: Deep Origin's AI- and Physics-Based Models for Drug Discovery,https://www.deeporigin.com/blog/we-spill-the-beans-deep-origins-ai-and-physics-based-models-for-drug-discovery,,,,,,,,,,PDBbind,,,,,,,,,,"We outperform other models on accuracy of binding affinity and binding pose prediction
Docking and virtual screening tools are meaningful only if they are able to make fast, accurate, and useful predictions. A good model can filter true binders from a broad pool of potential molecules, including false positives that may be similar in chemical properties. In the hit identification stage of drug discovery it can give drug hunting teams a chemically-diverse set of potential hit molecules to evaluate with experimental assays or further computational analysis, helping them narrow the path to a lead candidate. In contrast, a bad model returns many false positives, costing a team money and effort – and potentially leading drug hunters off-course for months or years.

To benchmark, we tested the BiosimDock model on the PDBbind core dataset and the DEKOIS 2.0 dataset.1, 2, 3, 4 The PDBbind core dataset contains 285 experimental structures of protein-ligand bound complexes across different protein classes. It remains a standard due to widespread use in benchmarking, facilitating comparison between models. It also enables accuracy prediction based on binding poses. DEKOIS 2.0 (Demanding Evaluation Kits for Objective In silico Screening) is an extensively-curated dataset of 81 targets across protein classes, including proteases, kinases, transferases, oxido-reductases, nuclear receptors, and hydrolases. Each target has an accompanying library of true binders and decoys, which have similar physical and chemical properties but do not interact with the target protein. This enables rigorous benchmarking of models for enrichment of true binders over false positives.4, 5, 6 ",,Hosted access (no API),,Unknown,2024-11-25 19:26:42+00:00,"Armenia,United States of America",,,,,,,,,
DeepSeek-V2 (MoE-236B),Language,DeepSeek,Industry,"DeepSeek-AI, Aixin Liu, Bei Feng, Bin Wang, Bingxuan Wang, Bo Liu, Chenggang Zhao, Chengqi Dengr, Chong Ruan, Damai Dai, Daya Guo, Dejian Yang, Deli Chen, Dongjie Ji, Erhang Li, Fangyun Lin, Fuli Luo, Guangbo Hao, Guanting Chen, Guowei Li, H. Zhang, Hanwei Xu, Hao Yang, Haowei Zhang, Honghui Ding, Huajian Xin, Huazuo Gao, Hui Li, Hui Qu, J.L. Cai, Jian Liang, Jianzhong Guo, Jiaqi Ni, Jiashi Li, Jin Chen, Jingyang Yuan, Junjie Qiu, Junxiao Song, Kai Dong, Kaige Gao, Kang Guan, Lean Wang, Lecong Zhang, Lei Xu, Leyi Xia, Liang Zhao, Liyue Zhang, Meng Li, Miaojun Wang, Mingchuan Zhang, Minghua Zhang, Minghui Tang, Mingming Li, Ning Tian, Panpan Huang, Peiyi Wang, Peng Zhang, Qihao Zhu, Qinyu Chen, Qiushi Du, R.J. Chen, R.L. Jin, Ruiqi Ge, Ruizhe Pan, Runxin Xu, Ruyi Chen, S.S. Li, Shanghao Lu, Shangyan Zhou, Shanhuang Chen, Shaoqing Wu, Shengfeng Ye, Shirong Ma, Shiyu Wang, Shuang Zhou, Shuiping Yu, Shunfeng Zhou, Size Zheng, T. Wang, Tian Pei, Tian Yuan, Tianyu Sun, W.L. Xiao, Wangding Zeng, Wei An, Wen Liu, Wenfeng Liang, Wenjun Gao, Wentao Zhang, X.Q. Li, Xiangyue Jin, Xianzu Wang, Xiao Bi, Xiaodong Liu, Xiaohan Wang, Xiaojin Shen, Xiaokang Chen, Xiaosha Chen, Xiaotao Nie, Xiaowen Sun",2024-05-07,"DeepSeek-V2: A Strong, Economical, and Efficient Mixture-of-Experts Language Model","https://arxiv.org/abs/2405.04434 
https://github.com/deepseek-ai/DeepSeek-V2 ",,,as of July 2024 the strongest open model in lmsys: https://huggingface.co/spaces/lmsys/chatbot-arena-leaderboard ,236000000000.0,"21B active params, 236B total",1.02e+24,,,21b active params * 8.1 trillion * 6 = 1.02e24,Unspecified unreleased,"""We construct a high-quality and multi-source pre-training corpus consisting of 8.1T tokens.
Compared with the corpus used in DeepSeek 67B (our previous release) (DeepSeek-AI, 2024), this
corpus features an extended amount of data, especially Chinese data, and higher data quality. We
first pretrain DeepSeek-V2 on the full pre-training corpus""",8100000000000.0,8.1 Trillion,,,"172.8K GPU hours, wall time not stated",NVIDIA H800 SXM5,,,"We present DeepSeek-V2, a strong Mixture-of-Experts (MoE) language model characterized by economical training and efficient inference. It comprises 236B total parameters, of which 21B are activated for each token, and supports a context length of 128K tokens. DeepSeek-V2 adopts innovative architectures including Multi-head Latent Attention (MLA) and DeepSeekMoE. MLA guarantees efficient inference through significantly compressing the Key-Value (KV) cache into a latent vector, while DeepSeekMoE enables training strong models at an economical cost through sparse computation. Compared with DeepSeek 67B, DeepSeek-V2 achieves significantly stronger performance, and meanwhile saves 42.5% of training costs, reduces the KV cache by 93.3%, and boosts the maximum generation throughput to 5.76 times. We pretrain DeepSeek-V2 on a high-quality and multi-source corpus consisting of 8.1T tokens, and further perform Supervised Fine-Tuning (SFT) and Reinforcement Learning (RL) to fully unlock its potential. Evaluation results show that, even with only 21B activated parameters, DeepSeek-V2 and its chat versions still achieve top-tier performance among open-source models.",,Open weights (restricted use),,Confident,2025-01-27 04:59:29+00:00,China,,,,,Paper on DeepSeek-V3,,18432000.0,"During main training: ""the batch size is gradually increased from 2304 to 9216 in the training of the first 225B tokens, and then keeps 9216 in the remaining training. We set the maximum sequence length to 4K."" So for most of training it is 9216*4k = 36,864. They then do long context training ""with a sequence length of 32K and a batch size of 576 sequences"" so 32K * 576 = 18,432,000",
xLSTM 1.4B,Language,,,"Maximilian Beck, Korbinian Pöppel, Markus Spanring, Andreas Auer, Oleksandra Prudnikova, Michael Kopp, Günter Klambauer, Johannes Brandstetter, Sepp Hochreiter",2024-05-07,xLSTM: Extended Long Short-Term Memory,https://arxiv.org/abs/2405.04517,,,,1422600000.0,,,,,"""We developed and trained all our models and baselines over the course of
three months on a cluster with 128 nodes of eight NVIDIA A100 GPUs each."" 1024 ",SlimPajama,"""We therefore increase the amount of training data and train on 300B tokens
from SlimPajama. """,300000000.0,"""We therefore increase the amount of training data and train on 300B tokens
from SlimPajama. """,,,,NVIDIA A100,1024.0,,"In the 1990s, the constant error carousel and gating were introduced as the central ideas of the Long Short-Term Memory (LSTM). Since then, LSTMs have stood the test of time and contributed to numerous deep learning success stories, in particular they constituted the first Large Language Models (LLMs). However, the advent of the Transformer technology with parallelizable self-attention at its core marked the dawn of a new era, outpacing LSTMs at scale. We now raise a simple question: How far do we get in language modeling when scaling LSTMs to billions of parameters, leveraging the latest techniques from modern LLMs, but mitigating known limitations of LSTMs? Firstly, we introduce exponential gating with appropriate normalization and stabilization techniques. Secondly, we modify the LSTM memory structure, obtaining: (i) sLSTM with a scalar memory, a scalar update, and new memory mixing, (ii) mLSTM that is fully parallelizable with a matrix memory and a covariance update rule. Integrating these LSTM extensions into residual block backbones yields xLSTM blocks that are then residually stacked into xLSTM architectures. Exponential gating and modified memory structures boost xLSTM capabilities to perform favorably when compared to state-of-the-art Transformers and State Space Models, both in performance and scaling. Code available at: https://github.com/NX-AI/xlstm",,,,Unverified,2025-02-25 18:41:51+00:00,,,,,,,,,,
Med-Gemini-2D,"Medicine,Vision","Google DeepMind,Google Research","Industry,Industry","Lin Yang, Shawn Xu, Andrew Sellergren, Timo Kohlberger, Yuchen Zhou, Ira Ktena, Atilla Kiraly, Faruk Ahmed, Farhad Hormozdiari, Tiam Jaroensri, Eric Wang, Ellery Wulczyn, Fayaz Jamil, Theo Guidroz, Chuck Lau, Siyuan Qiao, Yun Liu, Akshay Goel, Kendall Park, Arnav Agharwal, Nick George, Yang Wang, Ryutaro Tanno, David G. T. Barrett, Wei-Hung Weng, S. Sara Mahdavi, Khaled Saab, Tao Tu, Sreenivasa Raju Kalidindi, Mozziyar Etemadi, Jorge Cuadros, Gregory Sorensen, Yossi Matias, Katherine Chou, Greg Corrado, Joelle Barral, Shravya Shetty, David Fleet, S. M. Ali Eslami, Daniel Tse, Shruthi Prabhakara, Cory McLean, Dave Steiner, Rory Pilgrim, Christopher Kelly, Shekoofeh Azizi, Daniel Golden",2024-05-06,Advancing Multimodal Medical Capabilities of Gemini,https://arxiv.org/abs/2405.03162,,,,,,,,,,"Slake-VQA,MIMIC-CXR,PAD-UFES-20,Path-VQA,CXR-US2,PubMed Central,UK Biobank","""More than 7 million data samples from 3.7 million medical images and cases is used for fine-tuning and further instruction-tuning of Gemini for medical applications in Med-Gemini. This includes diverse set of modalities including 2D and 3D radiology images, pathology,
ophthalmology, and genomic data. These datasets includes mostly free text paired with medical data, which eliminates the need for expensive expert labeling of the training data.""",,,,,"""Like its predecessor Gemini 1.5 Pro and all other Gemini models, Med-Gemini was trained on
large-scale Google TPUv4 accelerator pods spread across multiple data-centers.""",Google TPU v4,,,"Many clinical tasks require an understanding of specialized data, such as medical images and genomics, which is not typically found in general-purpose large multimodal models. Building upon Gemini's multimodal models, we develop several models within the new Med-Gemini family that inherit core capabilities of Gemini and are optimized for medical use via fine-tuning with 2D and 3D radiology, histopathology, ophthalmology, dermatology and genomic data. Med-Gemini-2D sets a new standard for AI-based chest X-ray (CXR) report generation based on expert evaluation, exceeding previous best results across two separate datasets by an absolute margin of 1% and 12%, where 57% and 96% of AI reports on normal cases, and 43% and 65% on abnormal cases, are evaluated as ""equivalent or better"" than the original radiologists' reports. We demonstrate the first ever large multimodal model-based report generation for 3D computed tomography (CT) volumes using Med-Gemini-3D, with 53% of AI reports considered clinically acceptable, although additional research is needed to meet expert radiologist reporting quality. Beyond report generation, Med-Gemini-2D surpasses the previous best performance in CXR visual question answering (VQA) and performs well in CXR classification and radiology VQA, exceeding SoTA or baselines on 17 of 20 tasks. In histopathology, ophthalmology, and dermatology image classification, Med-Gemini-2D surpasses baselines across 18 out of 20 tasks and approaches task-specific model performance. Beyond imaging, Med-Gemini-Polygenic outperforms the standard linear polygenic risk score-based approach for disease risk prediction and generalizes to genetically correlated diseases for which it has never been trained. Although further development and evaluation are necessary in the safety-critical medical domain, our results highlight the potential of Med-Gemini across a wide range of medical tasks.
",,Unreleased,,Unknown,2024-11-18 18:30:04+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,Multinational,United States of America",Gemini 1.5 Pro,,,,,,,,
Med-Gemini-3D,"Medicine,Vision","Google DeepMind,Google Research","Industry,Industry","Lin Yang, Shawn Xu, Andrew Sellergren, Timo Kohlberger, Yuchen Zhou, Ira Ktena, Atilla Kiraly, Faruk Ahmed, Farhad Hormozdiari, Tiam Jaroensri, Eric Wang, Ellery Wulczyn, Fayaz Jamil, Theo Guidroz, Chuck Lau, Siyuan Qiao, Yun Liu, Akshay Goel, Kendall Park, Arnav Agharwal, Nick George, Yang Wang, Ryutaro Tanno, David G. T. Barrett, Wei-Hung Weng, S. Sara Mahdavi, Khaled Saab, Tao Tu, Sreenivasa Raju Kalidindi, Mozziyar Etemadi, Jorge Cuadros, Gregory Sorensen, Yossi Matias, Katherine Chou, Greg Corrado, Joelle Barral, Shravya Shetty, David Fleet, S. M. Ali Eslami, Daniel Tse, Shruthi Prabhakara, Cory McLean, Dave Steiner, Rory Pilgrim, Christopher Kelly, Shekoofeh Azizi, Daniel Golden",2024-05-06,Advancing Multimodal Medical Capabilities of Gemini,https://arxiv.org/abs/2405.03162,,,,,,,,,,CT-US1,"""More than 7 million data samples from 3.7 million medical images and cases is used for fine-tuning and further instruction-tuning of Gemini for medical applications in Med-Gemini. This includes diverse set of modalities including 2D and 3D radiology images, pathology,
ophthalmology, and genomic data. These datasets includes mostly free text paired with medical data, which eliminates the need for expensive expert labeling of the training data.""",,,,,"""Like its predecessor Gemini 1.5 Pro and all other Gemini models, Med-Gemini was trained on
large-scale Google TPUv4 accelerator pods spread across multiple data-centers.""",Google TPU v4,,,"Many clinical tasks require an understanding of specialized data, such as medical images and genomics, which is not typically found in general-purpose large multimodal models. Building upon Gemini's multimodal models, we develop several models within the new Med-Gemini family that inherit core capabilities of Gemini and are optimized for medical use via fine-tuning with 2D and 3D radiology, histopathology, ophthalmology, dermatology and genomic data. Med-Gemini-2D sets a new standard for AI-based chest X-ray (CXR) report generation based on expert evaluation, exceeding previous best results across two separate datasets by an absolute margin of 1% and 12%, where 57% and 96% of AI reports on normal cases, and 43% and 65% on abnormal cases, are evaluated as ""equivalent or better"" than the original radiologists' reports. We demonstrate the first ever large multimodal model-based report generation for 3D computed tomography (CT) volumes using Med-Gemini-3D, with 53% of AI reports considered clinically acceptable, although additional research is needed to meet expert radiologist reporting quality. Beyond report generation, Med-Gemini-2D surpasses the previous best performance in CXR visual question answering (VQA) and performs well in CXR classification and radiology VQA, exceeding SoTA or baselines on 17 of 20 tasks. In histopathology, ophthalmology, and dermatology image classification, Med-Gemini-2D surpasses baselines across 18 out of 20 tasks and approaches task-specific model performance. Beyond imaging, Med-Gemini-Polygenic outperforms the standard linear polygenic risk score-based approach for disease risk prediction and generalizes to genetically correlated diseases for which it has never been trained. Although further development and evaluation are necessary in the safety-critical medical domain, our results highlight the potential of Med-Gemini across a wide range of medical tasks.
",,Unreleased,,Unknown,2024-11-18 18:30:05+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,Multinational,United States of America",Gemini 1.5 Pro,,,,,,,,
Soccer Robot,Robotics,"Google DeepMind,University College London (UCL)","Industry,Academia","Dhruva Tirumala, Markus Wulfmeier, Ben Moran, Sandy Huang, Jan Humplik, Guy Lever, Tuomas Haarnoja, Leonard Hasenclever, Arunkumar Byravan, Nathan Batchelor, Neil Sreendra, Kushal Patel, Marlon Gwira, Francesco Nori, Martin Riedmiller, Nicolas Heess",2024-05-03,Learning Robot Soccer from Egocentric Vision with Deep Reinforcement Learning,https://arxiv.org/abs/2405.02425,,,,,,,,,,,,,,,,"""We use a distributed training setup with 64 V100 GPU actors and a
TPU v2 learner pod arranged in a 2 × 2 topology.""","NVIDIA V100,Google TPU v2",64.0,,"We apply multi-agent deep reinforcement learning (RL) to train end-to-end robot soccer policies with fully onboard computation and sensing via egocentric RGB vision. This setting reflects many challenges of real-world robotics, including active perception, agile full-body control, and long-horizon planning in a dynamic, partially-observable, multi-agent domain. We rely on large-scale, simulation-based data generation to obtain complex behaviors from egocentric vision which can be successfully transferred to physical robots using low-cost sensors. To achieve adequate visual realism, our simulation combines rigid-body physics with learned, realistic rendering via multiple Neural Radiance Fields (NeRFs). We combine teacher-based multi-agent RL and cross-experiment data reuse to enable the discovery of sophisticated soccer strategies. We analyze active-perception behaviors including object tracking and ball seeking that emerge when simply optimizing perception-agnostic soccer play. The agents display equivalent levels of performance and agility as policies with access to privileged, ground-truth state. To our knowledge, this paper constitutes a first demonstration of end-to-end training for multi-agent robot soccer, mapping raw pixel observations to joint-level actions, that can be deployed in the real world. Videos of the game-play and analyses can be seen on our website this https URL .",,Unreleased,,Unknown,2024-10-31 20:26:26+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
MetaMath 70B,Language,"University of Cambridge,Southern University of Science and Technology (SUSTech),Hong Kong University of Science and Technology,Huawei Noah's Ark Lab,Alan Turing Institute,Max Planck Institute for Intelligent Systems","Academia,Academia,Academia,Industry,Government,Academia","Longhui Yu, Weisen Jiang, Han Shi, Jincheng Yu, Zhengying Liu, Yu Zhang, James T. Kwok, Zhenguo Li, Adrian Weller, Weiyang Liu",2024-05-03,MetaMath: Bootstrap Your Own Mathematical Questions for Large Language Models,https://arxiv.org/abs/2309.12284,,,,70000000000.0,70B,,,,,"GSM8K,MATH",,105600000.0,"160K examples 
396 MB

396 MB * 200000 english words per MB * 4/3 tokens per english word = 105600000 tokens",3.0,,,,,,"Large language models (LLMs) have pushed the limits of natural language understanding and exhibited excellent problem-solving ability. Despite the great success, most existing open-source LLMs (e.g., LLaMA-2) are still far away from satisfactory for solving mathematical problem due to the complex reasoning procedures. To bridge this gap, we propose MetaMath, a fine-tuned language model that specializes in mathematical reasoning. Specifically, we start by bootstrapping mathematical questions by rewriting the question from multiple perspectives without extra knowledge, which results in a new dataset called MetaMathQA. Then we fine-tune the LLaMA-2 models on MetaMathQA. Experimental results on two popular benchmarks (i.e., GSM8K and MATH) for mathematical reasoning demonstrate that MetaMath outperforms a suite of open-source LLMs by a significant margin. Our MetaMath-7B model achieves 66.4% on GSM8K and 19.4% on MATH, exceeding the state-of-the-art models of the same size by 11.5% and 8.7%. Particularly, MetaMath-70B achieves an accuracy of 82.3% on GSM8K, slightly better than GPT-3.5-Turbo. We release all the MetaMathQA dataset, the MetaMath models with different model sizes and the training code for public use.",,Open weights (restricted use),,Likely,2024-12-02 15:22:11+00:00,"United Kingdom of Great Britain and Northern Ireland,China,Hong Kong,China,China,United Kingdom of Great Britain and Northern Ireland,Germany",Llama 2-70B,1.33056e+20,"Likely confidence because I am not sure about the epochs

6*70*10^9*105600000*3 = 1.33056 × 10^20
",,,,,,
MetaMath 7B (Mistral finetune),Language,"University of Cambridge,Southern University of Science and Technology (SUSTech),Hong Kong University of Science and Technology,Huawei Noah's Ark Lab,Alan Turing Institute,Max Planck Institute for Intelligent Systems","Academia,Academia,Academia,Industry,Government,Academia","Longhui Yu, Weisen Jiang, Han Shi, Jincheng Yu, Zhengying Liu, Yu Zhang, James T. Kwok, Zhenguo Li, Adrian Weller, Weiyang Liu",2024-05-03,MetaMath: Bootstrap Your Own Mathematical Questions for Large Language Models,https://arxiv.org/abs/2309.12284,,,,7000000000.0,7B,,,,,"GSM8K,MATH",,105600000.0,"160K examples 
396 MB

396 MB * 200000 english words per MB * 4/3 tokens per english word = 105600000 tokens",3.0,,,NVIDIA A100,8.0,,"Large language models (LLMs) have pushed the limits of natural language understanding and exhibited excellent problem-solving ability. Despite the great success, most existing open-source LLMs (e.g., LLaMA-2) are still far away from satisfactory for solving mathematical problem due to the complex reasoning procedures. To bridge this gap, we propose MetaMath, a fine-tuned language model that specializes in mathematical reasoning. Specifically, we start by bootstrapping mathematical questions by rewriting the question from multiple perspectives without extra knowledge, which results in a new dataset called MetaMathQA. Then we fine-tune the LLaMA-2 models on MetaMathQA. Experimental results on two popular benchmarks (i.e., GSM8K and MATH) for mathematical reasoning demonstrate that MetaMath outperforms a suite of open-source LLMs by a significant margin. Our MetaMath-7B model achieves 66.4% on GSM8K and 19.4% on MATH, exceeding the state-of-the-art models of the same size by 11.5% and 8.7%. Particularly, MetaMath-70B achieves an accuracy of 82.3% on GSM8K, slightly better than GPT-3.5-Turbo. We release all the MetaMathQA dataset, the MetaMath models with different model sizes and the training code for public use.",,Open weights (unrestricted),,Confident,2024-12-16 19:49:53+00:00,"United Kingdom of Great Britain and Northern Ireland,China,Hong Kong,China,China,United Kingdom of Great Britain and Northern Ireland,Germany",Mistral 7B,1.33056e+19,6*7*10^9*105600000*3 = 1.33056 × 10^19,,,,,,
Idefics2,"Multimodal,Language,Vision","Hugging Face,Sorbonne University","Industry,Academia","Hugo Laurençon, Léo Tronchon, Matthieu Cord, Victor Sanh",2024-05-03,What matters when building vision-language models?,https://arxiv.org/abs/2405.02246,,,,8000000000.0,8B,,,,,"OBELICS,LAION-COCO,OCR-IDL,PDFA,Public Multimodal Dataset (PMD)","Idefics2 was trained on a mixture of openly available datasets for the pretraining: Interleaved webdocuments (Wikipedia,OBELICS), image-caption pairs (Public Multimodal Dataset, LAION-COCO), OCR data (PDFA (en), IDL and Rendered-text, and image-to-code data (WebSight)).",321000000000.0,"""The resulting visual features are mapped (and optionally pooled) to the LLM input space to get the visual tokens (64 in our standard configuration).""

""We use a learning rate of 10−4 and do around 2 epochs on our training data. It corresponds to approximately 1.5 billion images and 225 billion text tokens. We note that this is orders of magnitude more training data than other open VLMs.""

225*10^9+64*1.5*10^9 = 321000000000 = 321B tokens

+ they used similar sized dataset for fine-tuning",,,,,,,"The growing interest in vision-language models (VLMs) has been driven by improvements in large language models and vision transformers. Despite the abundance of literature on this subject, we observe that critical decisions regarding the design of VLMs are often not justified. We argue that these unsupported decisions impede progress in the field by making it difficult to identify which choices improve model performance. To address this issue, we conduct extensive experiments around pre-trained models, architecture choice, data, and training methods. Our consolidation of findings includes the development of Idefics2, an efficient foundational VLM of 8 billion parameters. Idefics2 achieves state-of-the-art performance within its size category across various multimodal benchmarks, and is often on par with models four times its size. We release the model (base, instructed, and chat) along with the datasets created for its training.",,Open weights (unrestricted),,Confident,2025-01-03 19:45:42+00:00,"Multinational,United States of America,France","Mistral 7B,SigLIP",1.5408e+22,6ND = 6*321*10^9*8*10^9 = 1.5408e+22,,,,,,
Med-Gemini-M 1.5,"Medicine,Vision,Video,Language,Multimodal","Google DeepMind,Google Research","Industry,Industry","Khaled Saab, Tao Tu, Wei-Hung Weng, Ryutaro Tanno, David Stutz, Ellery Wulczyn, Fan Zhang, Tim Strother, Chunjong Park, Elahe Vedadi, Juanma Zambrano Chaves, Szu-Yeu Hu, Mike Schaekermann, Aishwarya Kamath, Yong Cheng, David G.T. Barrett, Cathy Cheung, Basil Mustafa, Anil Palepu, Daniel McDuff, Le Hou, Tomer Golany, Luyang Liu, Jean-baptiste Alayrac, Neil Houlsby, Nenad Tomasev, Jan Freyberg, Charles Lau, Jonas Kemp, Jeremy Lai, Shekoofeh Azizi, Kimberly Kanada, SiWai Man, Kavita Kulkarni, Ruoxi Sun, Siamak Shakeri, Luheng He, Ben Caine, Albert Webson, Natasha Latysheva, Melvin Johnson, Philip Mansfield, Jian Lu, Ehud Rivlin, Jesper Anderson, Bradley Green, Renee Wong, Jonathan Krause, Jonathon Shlens, Ewa Dominowska, S. M. Ali Eslami, Katherine Chou, Claire Cui, Oriol Vinyals, Koray Kavukcuoglu, James Manyika, Jeff Dean, Demis Hassabis, Yossi Matias, Dale Webster, Joelle Barral, Greg Corrado, Christopher Semturs, S. Sara Mahdavi, Juraj Gottweis, Alan Karthikesalingam, Vivek Natarajan",2024-05-01,Capabilities of Gemini Models in Medicine,https://arxiv.org/abs/2404.18416,,,,,,,,,,"Slake-VQA,Path-VQA,ROCO (Radiology Objects in COntext),PAD-UFES-20,MIMIC-CXR","Med-Gemini-M 1.5 uses the following datasets for training:

Slake-VQA: Visual Question Answering (VQA) for radiology images, containing 9,849 samples.
Path-VQA: VQA for pathology images, with 19,755 samples.
ROCO (Radiology Objects in COntext): VQA tasks across multiple imaging modalities
PAD-UFES-20: Dermatology image classification dataset
MIMIC-CXR: Radiology dataset with chest X-rays and corresponding reports",,,,,,Google TPU v4,,,"Excellence in a wide variety of medical applications poses considerable challenges for AI, requiring advanced reasoning, access to up-to-date medical knowledge and understanding of complex multimodal data. Gemini models, with strong general capabilities in multimodal and long-context reasoning, offer exciting possibilities in medicine. Building on these core strengths of Gemini, we introduce Med-Gemini, a family of highly capable multimodal models that are specialized in medicine with the ability to seamlessly use web search, and that can be efficiently tailored to novel modalities using custom encoders. We evaluate Med-Gemini on 14 medical benchmarks, establishing new state-of-the-art (SoTA) performance on 10 of them, and surpass the GPT-4 model family on every benchmark where a direct comparison is viable, often by a wide margin. On the popular MedQA (USMLE) benchmark, our best-performing Med-Gemini model achieves SoTA performance of 91.1% accuracy, using a novel uncertainty-guided search strategy. On 7 multimodal benchmarks including NEJM Image Challenges and MMMU (health & medicine), Med-Gemini improves over GPT-4V by an average relative margin of 44.5%. We demonstrate the effectiveness of Med-Gemini's long-context capabilities through SoTA performance on a needle-in-a-haystack retrieval task from long de-identified health records and medical video question answering, surpassing prior bespoke methods using only in-context learning. Finally, Med-Gemini's performance suggests real-world utility by surpassing human experts on tasks such as medical text summarization, alongside demonstrations of promising potential for multimodal medical dialogue, medical research and education. Taken together, our results offer compelling evidence for Med-Gemini's potential, although further rigorous evaluation will be crucial before real-world deployment in this safety-critical domain.",,Unreleased,,Unknown,2024-10-28 15:02:41+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,Multinational,United States of America",Gemini 1.5 Pro,,,,,,,,
Multi-Token Prediction 7B,Language,Facebook AI Research,Industry,"Fabian Gloeckle, Badr Youbi Idrissi, Baptiste Rozière, David Lopez-Paz, Gabriel Synnaeve",2024-04-30,Better & Faster Large Language Models via Multi-token Prediction,https://arxiv.org/abs/2404.19737,,,,6700000000.0,6.7B (“7B”),3.841092e+23,,,"""training all models reported in the paper required around 500K GPU hours of computation on hardware of type A100-80GB and H100.""
A100-80 GB peak FLOP/s [assumed fp16 precision]: 77970000000000
H100 peak FLOP/s [assumed SXM5 TensorCore]: 989000000000000
assuming 50/50 usage:

(77970000000000+989000000000000)*0.5*500000hours*3600s*0.3=2.880819e+23 for ALL models in the paper

assuming this model has taken around 40% of all used compute (https://docs.google.com/spreadsheets/d/1Yc-HAdYgn6e9SUIliMaQtvQscIsEZomLdXbWyYl_jfQ/edit?usp=sharing)

then it's assumed compute is 3.841092e+23 FLOPs","CodeContests,Unspecified unreleased",,250000000000.0,1T total tokens over 4 epochs (Table 1),4.0,,,"NVIDIA A100 SXM4 80 GB,NVIDIA H100 SXM5 80GB",,,"Large language models such as GPT and Llama are trained with a next-token prediction loss. In this work, we suggest that training language models to predict multiple future tokens at once results in higher sample efficiency. More specifically, at each position in the training corpus, we ask the model to predict the following n tokens using n independent output heads, operating on top of a shared model trunk. Considering multi-token prediction as an auxiliary training task, we measure improved downstream capabilities with no overhead in training time for both code and natural language models. The method is increasingly useful for larger model sizes, and keeps its appeal when training for multiple epochs. Gains are especially pronounced on generative benchmarks like coding, where our models consistently outperform strong baselines by several percentage points. Our 13B parameter models solves 12 % more problems on HumanEval and 17 % more on MBPP than comparable next-token models. Experiments on small algorithmic tasks demonstrate that multi-token prediction is favorable for the development of induction heads and algorithmic reasoning capabilities. As an additional benefit, models trained with 4-token prediction are up to 3 times faster at inference, even with large batch sizes.",,Open weights (non-commercial),,Likely,2025-02-14 19:19:38+00:00,United States of America,,,,,,,,,
Multi-Token Prediction 13B,Language,Facebook AI Research,Industry,"Fabian Gloeckle, Badr Youbi Idrissi, Baptiste Rozière, David Lopez-Paz, Gabriel Synnaeve",2024-04-30,Better & Faster Large Language Models via Multi-token Prediction,https://arxiv.org/abs/2404.19737,,,,13000000000.0,13B (Figure 1),1.5364368e+23,,,"""training all models reported in the paper required around 500K GPU hours of computation on hardware of type A100-80GB and H100.""
A100-80 GB peak FLOP/s [assumed fp16 precision]: 77970000000000
H100 peak FLOP/s [assumed SXM5 TensorCore]: 989000000000000
assuming 50/50 usage:

(77970000000000+989000000000000)*0.5*500000hours*3600s*0.3=2.880819e+23 for ALL models in the paper

assuming this model has taken around 16% of all used compute (https://docs.google.com/spreadsheets/d/1Yc-HAdYgn6e9SUIliMaQtvQscIsEZomLdXbWyYl_jfQ/edit?usp=sharing)

then it's assumed compute is 1.5364368e+23 FLOPs",,,209700000000.0, 209.7B (Table S13),,,,"NVIDIA A100 SXM4 80 GB,NVIDIA H100 SXM5 80GB",,,"Large language models such as GPT and Llama are trained with a next-token prediction loss. In this work, we suggest that training language models to predict multiple future tokens at once results in higher sample efficiency. More specifically, at each position in the training corpus, we ask the model to predict the following n tokens using n independent output heads, operating on top of a shared model trunk. Considering multi-token prediction as an auxiliary training task, we measure improved downstream capabilities with no overhead in training time for both code and natural language models. The method is increasingly useful for larger model sizes, and keeps its appeal when training for multiple epochs. Gains are especially pronounced on generative benchmarks like coding, where our models consistently outperform strong baselines by several percentage points. Our 13B parameter models solves 12 % more problems on HumanEval and 17 % more on MBPP than comparable next-token models. Experiments on small algorithmic tasks demonstrate that multi-token prediction is favorable for the development of induction heads and algorithmic reasoning capabilities. As an additional benefit, models trained with 4-token prediction are up to 3 times faster at inference, even with large batch sizes.",,Unreleased,,Likely,2025-02-14 19:20:05+00:00,United States of America,,,,,,,,,
DiffPepBuilder,Biology,Peking University,Academia,"Fanhao Wang, Yuzhe Wang, Laiyi Feng, Changsheng Zhang, Luhua Lai",2024-04-30,Target-Specific De Novo Peptide Binder Design with DiffPepBuilder,https://arxiv.org/abs/2405.00128,0.0,,,,,1.0800000000000016e+20,,,"1. Hardware: 8x NVIDIA A800 80GB GPUs (7.80e13 FLOP/s per GPU)
2. Training duration: 5 days = 432,000 seconds (directly provided)
3. Utilization: 40%
4. Calculation: 
   7.80e13 FLOP/s/GPU × 8 GPUs × 432,000s × 0.40 = 1.08e20 FLOP
   (7.80e13 × 8 = 6.24e14 FLOP/s total → × 432,000s = 2.70e20 → × 0.40 = 1.08e20)",,,283001.0000000002,"Step-by-step calculation:
Complexes = 14,897
Average length = (8 + 30)/2 = 19
Total datapoints = 14,897 × 19 = 283,043 ≈ 2.83×10⁵",,,,,,,"Despite the exciting progress in target-specific de novo protein binder design, peptide binder design remains challenging due to the flexibility of peptide structures and the scarcity of protein-peptide complex structure data. In this study, we curated a large synthetic dataset, referred to as PepPC-F, from the abundant protein-protein interface data and developed DiffPepBuilder, a de novo target-specific peptide binder generation method that utilizes an SE(3)-equivariant diffusion model trained on PepPC-F to co-design peptide sequences and structures. DiffPepBuilder also introduces disulfide bonds to stabilize the generated peptide structures. We tested DiffPepBuilder on 30 experimentally verified strong peptide binders with available protein-peptide complex structures. DiffPepBuilder was able to effectively recall the native structures and sequences of the peptide ligands and to generate novel peptide binders with improved binding free energy. We subsequently conducted de novo generation case studies on three targets. In both the regeneration test and case studies, DiffPepBuilder outperformed AfDesign and RFdiffusion coupled with ProteinMPNN, in terms of sequence and structure recall, interface quality, and structural diversity. Molecular dynamics simulations confirmed that the introduction of disulfide bonds enhanced the structural rigidity and binding performance of the generated peptides. As a general peptide binder de novo design tool, DiffPepBuilder can be used to design peptide binders for given protein targets with three dimensional and binding site information.",,,,Unverified,2025-02-14 19:19:56+00:00,China,,,,,,,,,
Amazon Q Developer,Language,Amazon,Industry,,2024-04-30,The most capable generative AI–powered assistant for software development,https://aws.amazon.com/blogs/aws/amazon-q-developer-now-generally-available-includes-new-capabilities-to-reimagine-developer-experience/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Amazon Q Developer has agents that can generate real-time code suggestions based on your comments and existing code, bootstrap new projects from a single prompt (/dev), automate the process of upgrading and transforming legacy Java applications with the Amazon Q Developer transformation capability (/transform), generate customized code recommendations from your private repositories securely, and quickly understand what resources are running in your AWS account with a simple prompt.

Today [Dec 03, 2024], we’re expanding Amazon Q Developer agent capabilities for: 1) enhanced documentation in codebases (/doc), 2) supporting code reviews to detect and resolve security and code quality issues (/review), and 3) generating unit tests automatically and improving test coverage (/test) across the software development lifecycle in your preferred IDE or GitLab Duo with Amazon Q (in preview), which is one of the most popular enterprise DevOps platforms",,API access,,Unknown,2025-01-03 15:05:43+00:00,United States of America,,,,,,,,,
SeedLLM,,,,,2024-04-29,"我国首个种业大语言模型“丰登”发布
",https://www.stdaily.com/index/kejixinwen/202404/2d95c8c08ac14e75b5e207a6ce165889.shtml,,,,20000000000.0,,,,,,,,,,,,,,,,"This is the industry's first speech recognition big model that supports the free mixing of 30 dialects. It is also the speech recognition big model that currently supports the most dialects in China. It can simultaneously recognize and understand more than 30 dialects including Cantonese, Shanghainese, Sichuanese, Wenzhounese, etc.",,,,Unverified,,,,,,,,,,,
TAIDE-LX-7B,Language,National Science and Technology Council,Government,,2024-04-29,,https://huggingface.co/taide/TAIDE-LX-7B,,,,7000000000.0,,,,,,,,41440000000.0,,,,,NVIDIA H100 SXM5 80GB,,,,,,,Unverified,2025-01-24 13:57:25+00:00,Taiwan,Llama 2-7B,,,,,,,,
TAIDE LX-13B,Language,National Science and Technology Council,Government,,2024-04-29,,https://en.taide.tw/,,,,13000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-24 14:05:40+00:00,Taiwan,,,,,,,,,
Llama 3-TAIDE-LX-8B-Chat-Alpha1,Language,National Science and Technology Council,Government,,2024-04-29,,https://huggingface.co/taide/Llama3-TAIDE-LX-8B-Chat-Alpha1,,,,8000000000.0,,,,,,,,43000000000.0,,,,,,,,,,,,Unverified,2025-01-24 14:07:11+00:00,Taiwan,Llama 3-8B,,,,,,,,
InternVL1.5,"Multimodal,Vision,Language","Shanghai AI Lab,SenseTime,Tsinghua University,Nanjing University,Fudan University,Chinese University of Hong Kong (CUHK)","Academia,Industry,Academia,Academia,Academia,Academia","Zhe Chen, Weiyun Wang, Hao Tian, Shenglong Ye, Zhangwei Gao, Erfei Cui, Wenwen Tong, Kongzhi Hu, Jiapeng Luo, Zheng Ma, Ji Ma, Jiaqi Wang, Xiaoyi Dong, Hang Yan, Hewei Guo, Conghui He, Botian Shi, Zhenjiang Jin, Chao Xu, Bin Wang, Xingjian Wei, Wei Li, Wenjian Zhang, Bo Zhang, Pinlong Cai, Licheng Wen, Xiangchao Yan, Min Dou, Lewei Lu, Xizhou Zhu, Tong Lu, Dahua Lin, Yu Qiao, Jifeng Dai, Wenhai Wang",2024-04-29,How Far Are We to GPT-4V? Closing the Gap to Commercial Multimodal Models with Open-Source Suites,https://arxiv.org/abs/2404.16821,,,,25500000000.0,25.5B,,,,,"LAION,COYO-700M,GRIT,TextCaps",,,"""in our model,
a 448×448 image is represented by 256 visual tokens.""",,,,,,,"In this report, we introduce InternVL 1.5, an open-source multimodal large language model (MLLM) to bridge the capability gap between open-source and proprietary commercial models in multimodal understanding. We introduce three simple improvements: (1) Strong Vision Encoder: we explored a continuous learning strategy for the large-scale vision foundation model -- InternViT-6B, boosting its visual understanding capabilities, and making it can be transferred and reused in different LLMs. (2) Dynamic High-Resolution: we divide images into tiles ranging from 1 to 40 of 448×448 pixels according to the aspect ratio and resolution of the input images, which supports up to 4K resolution input. (3) High-Quality Bilingual Dataset: we carefully collected a high-quality bilingual dataset that covers common scenes, document images, and annotated them with English and Chinese question-answer pairs, significantly enhancing performance in OCR- and Chinese-related tasks. We evaluate InternVL 1.5 through a series of benchmarks and comparative studies. Compared to both open-source and proprietary models, InternVL 1.5 shows competitive performance, achieving state-of-the-art results in 8 of 18 benchmarks. Code has been released at this https URL.",,Open weights (unrestricted),,Confident,2025-02-08 01:50:50+00:00,"China,Hong Kong,China,China,China,China,Hong Kong,China","InternViT-6B,InternLM2-20B",,,,,,,,
Swallow,Language,Tokyo Institute of Technology,Academia,"Kazuki Fujii, Taishi Nakamura, Mengsay Loem, Hiroki Iida, Masanari Ohi, Kakeru Hattori, Hirai Shota, Sakae Mizuki, Rio Yokota, Naoaki Okazaki",2024-04-27,Continual Pre-Training for Cross-Lingual LLM Adaptation: Enhancing Japanese Language Capabilities,https://arxiv.org/abs/2404.17790,,,,70000000.0,,,,,,"Wikipedia (ja),The Pile,RefinedWeb","The corpus used for continual pre-training includes the Swallow Corpus, which is explained in Appendix A, Japanese Wikipedia‡, and for English, the RefinedWeb (Penedo et al., 2023) and The Pile (Gao et al., 2020). From these corpora, approximately 100B tokens were sampled for the training data of continual pre-training. The sampling was configured so that 5% of the English text comes from RefinedWeb, another 5% from English arXiv paper texts within The Pile, and the remaining 90% from Japanese texts. The Japanese text comprises about 1.6B tokens from Japanese Wikipedia, with the rest from the Swallow Corpus. The ratio of Japanese to English data in the training set was decided based on preliminary experiments (see Appendix B for details).",100000000000.0,100B,,,,NVIDIA A100,,,"Cross-lingual continual pre-training of large language models (LLMs) initially trained on English corpus allows us to leverage the vast amount of English language resources and reduce the pre-training cost. In this study, we constructed Swallow, an LLM with enhanced Japanese capability, by extending the vocabulary of Llama 2 to include Japanese characters and conducting continual pre-training on a large Japanese web corpus. Experimental results confirmed that the performance on Japanese tasks drastically improved through continual pre-training, and the performance monotonically increased with the amount of training data up to 100B tokens. Consequently, Swallow achieved superior performance compared to other LLMs that were trained from scratch in English and Japanese. An analysis of the effects of continual pre-training revealed that it was particularly effective for Japanese question answering tasks. Furthermore, to elucidate effective methodologies for cross-lingual continual pre-training from English to Japanese, we investigated the impact of vocabulary expansion and the effectiveness of incorporating parallel corpora. The results showed that the efficiency gained through vocabulary expansion had no negative impact on performance, except for the summarization task, and that the combined use of parallel corpora enhanced translation ability.",,Open weights (restricted use),0.506,Confident,2024-12-02 15:25:02+00:00,Japan,Llama 2-70B,5e+22,"Mentioned directly in the paper: The training of Swallow 7b, 13b, and 70b required approximately 5.0 × 1021 FLOPS, 9.4 × 1021 FLOPS, 5.0 × 1022 FLOPS of computation, respectively.

6ND = 6*70B*100B=4.2*10^22 FLOPs

We utilized the AI Bridging Cloud Infrastructure (ABCI) of the National Institute of Advanced Industrial Science and Technology, Japan for training. We employed mixed precision (bfloat16) and used multiple NVIDIA A100 nodes for distributed parallel training. Each node is equipped with eight NVIDIA A100 40GB GPUs, and the nodes are interconnected via InfiniBand HDR.",,,,,,
Vidu,Video,"Tsinghua University,ShengShu","Academia,Industry","Fan Bao, Chendong Xiang, Gang Yue, Guande He, Hongzhou Zhu, Kaiwen Zheng, Min Zhao, Shilong Liu, Yaole Wang, Jun Zhu",2024-04-27,"我国自研视频大模型面向全球上线

Vidu: a Highly Consistent, Dynamic and Skilled Text-to-Video Generator with Diffusion Models","https://www.stdaily.com/index/kejixinwen/202408/927f046f4fb743f994726fb08c7e3cbf.shtml

https://arxiv.org/abs/2405.04233",,,,,,,,,,,,,,,,,,,,"We introduce Vidu, a high-performance text-to-video generator that is capable of producing 1080p videos up to 16 seconds in a single generation. Vidu is a diffusion model with U-ViT as its backbone, which unlocks the scalability and the capability for handling long videos. Vidu exhibits strong coherence and dynamism, and is capable of generating both realistic and imaginative videos, as well as understanding some professional photography techniques, on par with Sora -- the most powerful reported text-to-video generator. Finally, we perform initial experiments on other controllable video generation, including canny-to-video generation, video prediction and subject-driven generation, which demonstrate promising results.",,API access,,Unverified,2025-03-10 16:38:18+00:00,"China,China",,,,,,,,,
Qwen1.5-110B,Language,Alibaba,Industry,Qwen Team,2024-04-25,Qwen1.5-110B: The First 100B+ Model of the Qwen1.5 Series,https://qwenlm.github.io/blog/qwen1.5-110b/?ref=upstract.com,,,,110000000000.0,"110B
",,1.3e+24,,lower bound is taken from Qwen1.5 72B training compute estimation,Unspecified unreleased,"We pretrained the models with a large amount of data, and we post-trained the models with both supervised finetuning and direct preference optimization.",,"A Qwen developer gave token counts for other models in the series at this github issue: https://github.com/QwenLM/Qwen2/issues/97
110B was asked but got no response.
7B, 14B, and 72B got 4T, 4T, and 3T tokens respectively.

In another issue from Qwen2: ""We are not authorized to share the details right now but the rough number is over 3T tokens for Qwen1.5 and over 7T tokens for Qwen2."" https://github.com/QwenLM/Qwen2/issues/562",,,,,,,"The Qwen1.5-110B is the largest model in the Qwen1.5 series, and it is also the first one with over 100 billion parameters in the series. It demonstrates competitive performance against the very recently released SOTA model Llama-3-70B and it is significantly better than the 72B model. This tells us that there is still a lot of room in model size scaling for better performance. While the releease of Llama-3 indicates the significance of data scaling to an extremely large scale, we believe we can get the best of both worlds by scaling both data and model size in our future release. Stay tuned for Qwen2!",,Open weights (unrestricted),,Confident,2025-01-19 23:30:36+00:00,China,,,,,,,,,
Beyond ESM2: Graph-Enhanced Protein Sequence Modeling with Efficient,Biology,"Huazhong University of Science and Technology,Fudan University,Northwestern Polytechnical University","Academia,Academia,Academia","Shujian Jiao, Bingxuan Li, Lei Wang, Xiaojin Zhang, Wei Chen, Jiajie Peng, Zhongyu Wei",2024-04-24,Beyond ESM2: Graph-Enhanced Protein Sequence Modeling with Efficient Clustering,https://arxiv.org/abs/2404.15805,,,,,,,,,,,,86000000001.00052,"Data points = 86 billion (8.6e10)
Calculation: 250 million protein sequences containing 86 billion amino acids total
86,000,000,000 = 8.6e10",,,,,,,"Proteins are essential to life's processes, underpinning evolution and diversity. Advances in sequencing technology have revealed millions of proteins, underscoring the need for sophisticated pre-trained protein models for biological analysis and AI development. Facebook's ESM2, the most advanced protein language model to date, leverages a masked prediction task for unsupervised learning, crafting amino acid representations with notable biochemical accuracy. Yet, it lacks in delivering functional protein insights, signaling an opportunity for enhancing representation this http URL study addresses this gap by incorporating protein family classification into ESM2's this http URL approach, augmented with Community Propagation-Based Clustering Algorithm, improves global protein representations, while a contextual prediction task fine-tunes local amino acid accuracy. Significantly, our model achieved state-of-the-art results in several downstream experiments, demonstrating the power of combining global and local methodologies to substantially boost protein representation quality.",,,,Unverified,2025-01-30 05:04:59+00:00,"China,China,China",,,,,,,,,
Arctic,Language,Snowflake,Industry,Snowflake AI Research,2024-04-24,"Snowflake Arctic: The Best LLM for Enterprise AI — Efficiently Intelligent, Truly Open",https://www.snowflake.com/en/blog/arctic-open-efficient-foundation-language-models-snowflake/,,,,480000000000.0,""" It combines a 10B dense transformer model with a residual 128x3.66B MoE MLP resulting in 480B total and 17B active parameters chosen using a top-2 gating.""",3.8347175e+23,,,"from the graph:
1x - Arctic
1.9X - Llama 3 8B (7.2×10^23) ~ = Yi 34B (6.1e23) -> x = 3.2105263e+23
3X - Code Llama 70B (1.26e+24) -> x = 4.2e+23
17.5X - Llama 3 70B (7.861e24) -> x =4.492e+23

= 3.7975893e+23

Operation counting (17B active parameters): 
6ND = 6*17*10^9*3.5*10^12 = 3.57e+23

(3.2105263e+23*4.492e+23*4.2e+23*3.57e+23)^(1/4) = 3.8347175e+23",,,3500000000000.0,"""Arctic was trained with a three-stage curriculum each with a different data composition focusing on generic skills in the first phase (1T Tokens), and enterprise-focused skills in the latter two phases (1.5T and 1T tokens). ""

1+1.5+1 = 3.5",,,"""less than 3K GPU weeks""",,,,"Built by Snowflake, Arctic is a family of enterprise-grade LLMs with leading performance in enterprise intelligence and breakthrough efficiency. Snowflake Arctic is a truly open, Apache 2.0 licensed model.",,Open weights (unrestricted),,Confident,2025-02-19 18:31:34+00:00,United States of America,,,,AWS,,,,,
phi-3-medium 14B,Language,Microsoft,Industry,"Marah Abdin, Sam Ade Jacobs, Ammar Ahmad Awan, Jyoti Aneja, Ahmed Awadallah, Hany Awadalla, Nguyen Bach, Amit Bahree, Arash Bakhtiari, Harkirat Behl, Alon Benhaim, Misha Bilenko, Johan Bjorck, Sébastien Bubeck, Martin Cai, Caio César Teodoro Mendes, Weizhu Chen, Vishrav Chaudhary, Parul Chopra, Allie Del Giorno, Gustavo de Rosa, Matthew Dixon, Ronen Eldan, Dan Iter, Amit Garg, Abhishek Goswami, Suriya Gunasekar, Emman Haider, Junheng Hao, Russell J. Hewett, Jamie Huynh, Mojan Javaheripi, Xin Jin, Piero Kauffmann, Nikos Karampatziakis, Dongwoo Kim, Mahoud Khademi, Lev Kurilenko, James R. Lee, Yin Tat Lee, Yuanzhi Li, Chen Liang, Weishung Liu, Eric Lin, Zeqi Lin, Piyush Madan, Arindam Mitra, Hardik Modi, Anh Nguyen, Brandon Norick, Barun Patra, Daniel Perez-Becker, Thomas Portet, Reid Pryzant, Heyang Qin, Marko Radmilac, Corby Rosset, Sambudha Roy, Olatunji Ruwase, Olli Saarikivi, Amin Saied, Adil Salim, Michael Santacroce, Shital Shah, Ning Shang, Hiteshi Sharma, Xia Song, Masahiro Tanaka, Xin Wang, Rachel Ward, Guanhua Wang, Philipp Witte, Michael Wyatt, Can Xu, Jiahang Xu, Sonali Yadav, Fan Yang, Ziyi Yang, Donghan Yu, Chengruidong Zhang, Cyril Zhang, Jianwen Zhang, Li Lyna Zhang, Yi Zhang, Yue Zhang, Yunan Zhang, Xiren Zhou",2024-04-23,Phi-3 Technical Report: A Highly Capable Language Model Locally on Your Phone,https://arxiv.org/abs/2404.14219,,,,14000000000.0,14B,4.032e+23,,,counting operations: 6×4.8×10^12 tokens × 14×10^9 parameters ≈ 4.032×10^23 FLOPS,Phi-3 Dataset,"we also trained phi-3-medium, a model with 14B parameters using the same tokenizer and architecture of phi-3-mini, and trained on the same data for slightly more epochs (4.8T tokens total as for phi-3-small)",4800000000000.0,,,,,,,,"We introduce phi-3-mini, a 3.8 billion parameter language model trained on 3.3 trillion tokens, whose overall performance, as measured by both academic benchmarks and internal testing, rivals that of models such as Mixtral 8x7B and GPT-3.5 (e.g., phi-3-mini achieves 69% on MMLU and 8.38 on MT-bench), despite being small enough to be deployed on a phone. The innovation lies entirely in our dataset for training, a scaled-up version of the one used for phi-2, composed of heavily filtered web data and synthetic data. The model is also further aligned for robustness, safety, and chat format. We also provide some initial parameter-scaling results with a 7B and 14B models trained for 4.8T tokens, called phi-3-small and phi-3-medium, both significantly more capable than phi-3-mini (e.g., respectively 75% and 78% on MMLU, and 8.7 and 8.9 on MT-bench).",,Open weights (unrestricted),,Likely,2025-03-05 16:28:06+00:00,United States of America,,,,,,,,,
SenseChat 5.0,Language,SenseTime,Industry,SenseNova Team,2024-04-23,,https://zhidx.com/p/421866.html,,,,600000000000.0,"This article claims the model is a 600B MoE:
https://www.sensetime.com/cn/news-detail/51168158?categoryId=72",,,,,,,1670000000000.0,"Words per gygabyte for Mandarin Chinese: 167M

10000*167000000 = 1670000000000

""is trained based on more than 10TB of tokens, covers a large amount of synthetic data""

However, a later news article from SenseTime itself said: ""In terms of data, SenseChat V5 uses a new generation of data production pipelines to produce 10T tokens of high-quality training data."" (It also says ""10T tokens"" in the original untranslated version).",,,,,,,"SenseTime has newly upgraded its ""SenseNova 5.0"" large model system , and its comprehensive capabilities are fully comparable to GPT-4 Turbo .",,Hosted access (no API),,Likely,2025-01-14 21:36:09+00:00,"Hong Kong,China",,,,,,,,,
phi-3-small 7.4B,Language,Microsoft,Industry,"Marah Abdin, Sam Ade Jacobs, Ammar Ahmad Awan, Jyoti Aneja, Ahmed Awadallah, Hany Awadalla, Nguyen Bach, Amit Bahree, Arash Bakhtiari, Harkirat Behl, Alon Benhaim, Misha Bilenko, Johan Bjorck, Sébastien Bubeck, Martin Cai, Caio César Teodoro Mendes, Weizhu Chen, Vishrav Chaudhary, Parul Chopra, Allie Del Giorno, Gustavo de Rosa, Matthew Dixon, Ronen Eldan, Dan Iter, Amit Garg, Abhishek Goswami, Suriya Gunasekar, Emman Haider, Junheng Hao, Russell J. Hewett, Jamie Huynh, Mojan Javaheripi, Xin Jin, Piero Kauffmann, Nikos Karampatziakis, Dongwoo Kim, Mahoud Khademi, Lev Kurilenko, James R. Lee, Yin Tat Lee, Yuanzhi Li, Chen Liang, Weishung Liu, Eric Lin, Zeqi Lin, Piyush Madan, Arindam Mitra, Hardik Modi, Anh Nguyen, Brandon Norick, Barun Patra, Daniel Perez-Becker, Thomas Portet, Reid Pryzant, Heyang Qin, Marko Radmilac, Corby Rosset, Sambudha Roy, Olatunji Ruwase, Olli Saarikivi, Amin Saied, Adil Salim, Michael Santacroce, Shital Shah, Ning Shang, Hiteshi Sharma, Xia Song, Masahiro Tanaka, Xin Wang, Rachel Ward, Guanhua Wang, Philipp Witte, Michael Wyatt, Can Xu, Jiahang Xu, Sonali Yadav, Fan Yang, Ziyi Yang, Donghan Yu, Chengruidong Zhang, Cyril Zhang, Jianwen Zhang, Li Lyna Zhang, Yi Zhang, Yue Zhang, Yunan Zhang, Xiren Zhou",2024-04-23,Phi-3 Technical Report: A Highly Capable Language Model Locally on Your Phone,https://arxiv.org/abs/2404.14219,,,,7400000000.0,7.4B,2.1312e+23,,,6ND = 6*7.4B parameters * 4.8T tokens =2.1312e+23,,"""4.8T tokens total as for phi-3-small""",4800000000000.0,,,,,,,,"We introduce phi-3-mini, a 3.8 billion parameter language model trained on 3.3 trillion tokens, whose overall performance, as measured by both academic benchmarks and internal testing, rivals that of models such as Mixtral 8x7B and GPT-3.5 (e.g., phi-3-mini achieves 69% on MMLU and 8.38 on MT-bench), despite being small enough to be deployed on a phone. The innovation lies entirely in our dataset for training, a scaled-up version of the one used for phi-2, composed of heavily filtered web data and synthetic data. The model is also further aligned for robustness, safety, and chat format. We also provide some initial parameter-scaling results with a 7B and 14B models trained for 4.8T tokens, called phi-3-small and phi-3-medium, both significantly more capable than phi-3-mini (e.g., respectively 75% and 78% on MMLU, and 8.7 and 8.9 on MT-bench).",,,,Confident,2025-03-05 16:27:34+00:00,United States of America,,,,,,,,,
SI-PLM,Biology,University of Pittsburgh,Academia,"Daniel Peñaherrera, David Ryan Koes",2024-04-23,Structure-Infused Protein Language Models,https://www.ncbi.nlm.nih.gov/pmc/articles/PMC11071282/,,,,,,,,,,,,,,,,,,,,"Embeddings from protein language models (PLM’s) capture intricate patterns
for protein sequences, enabling more accurate and efficient prediction of protein
properties. Incorporating protein structure information as direct input into PLMs
results in an improvement on the predictive ability of protein embeddings on
downstream tasks. In this work we demonstrate that indirectly infusing structure
information into PLMs also leads to performance gains on structure related tasks.
The key difference between this framework and others is that at inference time the
model does not require access to structure to produce its embeddings.",,,,Unverified,2025-01-10 16:31:02+00:00,United States of America,,,,,,,,,
phi-3.5-mini,Language,Microsoft,Industry,"Marah Abdin, Sam Ade Jacobs, Ammar Ahmad Awan, Jyoti Aneja, Ahmed Awadallah, Hany Awadalla, Nguyen Bach, Amit Bahree, Arash Bakhtiari, Harkirat Behl, Alon Benhaim, Misha Bilenko, Johan Bjorck, Sébastien Bubeck, Martin Cai, Caio César Teodoro Mendes, Weizhu Chen, Vishrav Chaudhary, Parul Chopra, Allie Del Giorno, Gustavo de Rosa, Matthew Dixon, Ronen Eldan, Dan Iter, Amit Garg, Abhishek Goswami, Suriya Gunasekar, Emman Haider, Junheng Hao, Russell J. Hewett, Jamie Huynh, Mojan Javaheripi, Xin Jin, Piero Kauffmann, Nikos Karampatziakis, Dongwoo Kim, Mahoud Khademi, Lev Kurilenko, James R. Lee, Yin Tat Lee, Yuanzhi Li, Chen Liang, Weishung Liu, Eric Lin, Zeqi Lin, Piyush Madan, Arindam Mitra, Hardik Modi, Anh Nguyen, Brandon Norick, Barun Patra, Daniel Perez-Becker, Thomas Portet, Reid Pryzant, Heyang Qin, Marko Radmilac, Corby Rosset, Sambudha Roy, Olatunji Ruwase, Olli Saarikivi, Amin Saied, Adil Salim, Michael Santacroce, Shital Shah, Ning Shang, Hiteshi Sharma, Xia Song, Masahiro Tanaka, Xin Wang, Rachel Ward, Guanhua Wang, Philipp Witte, Michael Wyatt, Can Xu, Jiahang Xu, Sonali Yadav, Fan Yang, Ziyi Yang, Donghan Yu, Chengruidong Zhang, Cyril Zhang, Jianwen Zhang, Li Lyna Zhang, Yi Zhang, Yue Zhang, Yunan Zhang, Xiren Zhou",2024-04-23,Phi-3 Technical Report: A Highly Capable Language Model Locally on Your Phone,https://arxiv.org/abs/2404.14219,,,,3800000000.0,3.8B,3.7101154e+22,,,"6ND = 6*3800000000.00 parameters *3400000000000 tokens  = 7.752e+22

512 GPUs *133800000000000 FLOP/s *240 hours *3600 sec/hour *0.3 [assumed utilization] = 1.7756652e+22

geometric mean sqrt (7.752e+22*1.7756652e+22) = 3.7101154e+22",,"Status: This is a static model trained on an offline dataset with cutoff date October 2023 for publicly available data. Future versions of the tuned models may be released as we improve models.
Supported languages: Arabic, Chinese, Czech, Danish, Dutch, English, Finnish, French, German, Hebrew, Hungarian, Italian, Japanese, Korean, Norwegian, Polish, Portuguese, Russian, Spanish, Swedish, Thai, Turkish, Ukrainian",3400000000000.0,Training data: 3.4T tokens,,240.0,"GPUs: 512 H100-80G
Training time: 10 days
https://huggingface.co/microsoft/Phi-3.5-mini-instruct",NVIDIA H100 SXM5 80GB,512.0,,"We introduce phi-3-mini, a 3.8 billion parameter language model trained on 3.3 trillion tokens, whose overall performance, as measured by both academic benchmarks and internal testing, rivals that of models such as Mixtral 8x7B and GPT-3.5 (e.g., phi-3-mini achieves 69% on MMLU and 8.38 on MT-bench), despite being small enough to be deployed on a phone. The innovation lies entirely in our dataset for training, a scaled-up version of the one used for phi-2, composed of heavily filtered web data and synthetic data. The model is also further aligned for robustness, safety, and chat format. We also provide some initial parameter-scaling results with a 7B and 14B models trained for 4.8T tokens, called phi-3-small and phi-3-medium, both significantly more capable than phi-3-mini (e.g., respectively 75% and 78% on MMLU, and 8.7 and 8.9 on MT-bench).",,Open weights (unrestricted),,Confident,2025-03-05 16:27:07+00:00,United States of America,,,,,,,,,
phi-3.5-Vision,Vision,Microsoft,Industry,"Marah Abdin, Sam Ade Jacobs, Ammar Ahmad Awan, Jyoti Aneja, Ahmed Awadallah, Hany Awadalla, Nguyen Bach, Amit Bahree, Arash Bakhtiari, Harkirat Behl, Alon Benhaim, Misha Bilenko, Johan Bjorck, Sébastien Bubeck, Martin Cai, Caio César Teodoro Mendes, Weizhu Chen, Vishrav Chaudhary, Parul Chopra, Allie Del Giorno, Gustavo de Rosa, Matthew Dixon, Ronen Eldan, Dan Iter, Amit Garg, Abhishek Goswami, Suriya Gunasekar, Emman Haider, Junheng Hao, Russell J. Hewett, Jamie Huynh, Mojan Javaheripi, Xin Jin, Piero Kauffmann, Nikos Karampatziakis, Dongwoo Kim, Mahoud Khademi, Lev Kurilenko, James R. Lee, Yin Tat Lee, Yuanzhi Li, Chen Liang, Weishung Liu, Eric Lin, Zeqi Lin, Piyush Madan, Arindam Mitra, Hardik Modi, Anh Nguyen, Brandon Norick, Barun Patra, Daniel Perez-Becker, Thomas Portet, Reid Pryzant, Heyang Qin, Marko Radmilac, Corby Rosset, Sambudha Roy, Olatunji Ruwase, Olli Saarikivi, Amin Saied, Adil Salim, Michael Santacroce, Shital Shah, Ning Shang, Hiteshi Sharma, Xia Song, Masahiro Tanaka, Xin Wang, Rachel Ward, Guanhua Wang, Philipp Witte, Michael Wyatt, Can Xu, Jiahang Xu, Sonali Yadav, Fan Yang, Ziyi Yang, Donghan Yu, Chengruidong Zhang, Cyril Zhang, Jianwen Zhang, Li Lyna Zhang, Yi Zhang, Yue Zhang, Yunan Zhang, Xiren Zhou",2024-04-23,Phi-3 Technical Report: A Highly Capable Language Model Locally on Your Phone,https://arxiv.org/abs/2404.14219,,,,4200000000.0,4.2B,,,,,,,500000000000.0,Training data: 500B tokens (vision tokens + text tokens),,144.0,"GPUs: 256 A100-80G
Training time: 6 days
https://huggingface.co/microsoft/Phi-3.5-vision-instruct",NVIDIA H100 SXM5 80GB,256.0,,"We introduce phi-3-mini, a 3.8 billion parameter language model trained on 3.3 trillion tokens, whose overall performance, as measured by both academic benchmarks and internal testing, rivals that of models such as Mixtral 8x7B and GPT-3.5 (e.g., phi-3-mini achieves 69% on MMLU and 8.38 on MT-bench), despite being small enough to be deployed on a phone. The innovation lies entirely in our dataset for training, a scaled-up version of the one used for phi-2, composed of heavily filtered web data and synthetic data. The model is also further aligned for robustness, safety, and chat format. We also provide some initial parameter-scaling results with a 7B and 14B models trained for 4.8T tokens, called phi-3-small and phi-3-medium, both significantly more capable than phi-3-mini (e.g., respectively 75% and 78% on MMLU, and 8.7 and 8.9 on MT-bench).",,Open weights (unrestricted),,Unverified,2025-03-05 16:21:51+00:00,United States of America,phi-3-mini 3.8B,8.1926884e+21,"6ND = 6*4200000000.00 parameters *500000000000 tokens = 1.26e+22

256 GPUs *133800000000000 FLOP/s*144 hours *3600 sec/hour *0.3 [assumed utilization]= 5.3269955e+21

geometric mean sqrt(5.3269955e+21*1.26e+22) = 8.1926884e+21",,,,,,
VISTA-2D,"Biology,Vision",NVIDIA,Industry,"Vishwesh Nath, Andriy Myronenko, Harry Clifford",2024-04-22,Advancing Cell Segmentation and Morphology Analysis with NVIDIA AI Foundation Model VISTA-2D,https://developer.nvidia.com/blog/advancing-cell-segmentation-and-morphology-analysis-with-nvidia-ai-foundation-model-vista-2d/,,,,100000000.0,"""VISTA-2D has a network architecture with ~100 million training hyperparameters""
Presumably the quote is incorrect and they meant 100 million parameters.",,,,,,,,"""A total of ~15,000 annotated cell images were collected to train the generalist VISTA-2D model.""",,,,,,,"Model highlights
Robust deep learning algorithm based on transformers
Generalist model as compared to specialist models
Multiple dataset sources and file formats supported
Multiple modalities of imaging data collectively supported 
Multi-GPU and multinode training support",,Hosted access (no API),,Confident,2024-12-10 19:18:49+00:00,United States of America,Segment Anything Model,,,,,,,,
InstructPLM,Biology,"Zhejiang Lab,Zhejiang University,Nanjing University,Tsinghua University,Alibaba,Chinese University of Hong Kong (CUHK)","Academia,Academia,Academia,Industry,Academia","Jiezhong Qiu, Junde Xu, Jie Hu, Hanqun Cao, Liya Hou, Zijun Gao, Xinyi Zhou, Anni Li, Xiujuan Li, Bin Cui, Fei Yang, Shuang Peng, Ning Sun, Fangyu Wang, Aimin Pan, Jie Tang, Jieping Ye, Junyang Lin, Jin Tang, Xingxu Huang, Pheng Ann Heng, Guangyong Chen",2024-04-20,InstructPLM: Aligning Protein Language Models to Follow Protein Structure Instructions,https://www.biorxiv.org/content/10.1101/2024.04.17.589642v1.abstract,3.0,,,,,,,,,,,5400001.0,"InstructPLM Training Data Points:
- Training Proteins: 18,024
- Avg Sequence Length: 300
- Total Tokens = 18,024 × 300 = 5,407,200 ≈ 5.4 × 10^6 data points",,,,,,,"Large language models are renowned for their efficacy in capturing intricate patterns, including co-evolutionary relationships, and underlying protein languages. However, current methodologies often fall short in illustrating the emergence of genomic insertions, duplications, and insertion/deletions (indels), which account for approximately 14% of human pathogenic mutations. Given that structure dictates function, mutated proteins with similar structures are more likely to persist throughout biological evolution. Motivated by this, we leverage crossmodality alignment and instruct fine-tuning techniques inspired by large language models to align a generative protein language model with protein structure instructions. Specifically, we present a method for generating variable-length and diverse proteins to explore and simulate the complex evolution of life, thereby expanding the repertoire of options for protein engineering. Our proposed protein LM-based approach, InstructPLM, demonstrates significant performance enhancements both in silico and in vitro. On native protein backbones, it achieves a perplexity of 2.68 and a sequence recovery rate of 57.51, surpassing Protein-MPNN by 39.2% and 25.1%, respectively. Furthermore, we validate the efficacy of our model by redesigning PETase and L-MDH. For PETase, all fifteen designed variable-length PETase exhibit depolymerization activity, with eleven surpassing the activity levels of the wild type. Regarding L-MDH, an enzyme lacking an experimentally determined structure, InstructPLM is able to design functional enzymes with an AF2-predicted structure. Code and model weights of InstructPLM are publicly available*.",,,,Unverified,2025-01-30 05:04:40+00:00,"China,China,China,China,China,Hong Kong,China",,,,,,,,,
SaProt,Biology,"Zhejiang University,Westlake University","Academia,Academia","Jin Su, Chenchen Han, Yuyang Zhou, Junjie Shan, Xibin Zhou, Fajie Yuan",2024-04-19,SaProt: Protein Language Modeling with Structure-aware Vocabulary,https://www.biorxiv.org/content/10.1101/2023.10.01.560349v5.abstract,60.0,,,650000000.0,"""To our knowledge, SaProt stands out as the PLM currently trained with the largest number of protein structures, containing 650 million parameters"" Assume 40% utilization, FP16 tensor precision",1.6e+22,,,"""Its training lasted 3 months and utilized 64 NVIDIA 80G A100 GPUs,""",,,12000000001.000015,4.0 × 10⁷ sequences × 3.0 × 10² tokens/sequence = 1.2 × 10¹⁰ tokens,,2160.0,"""Its training lasted 3 months """,,,,"Large-scale protein language models (PLMs), such as the ESM family, have achieved remarkable performance in various downstream tasks related to protein structure and function by undergoing unsupervised training on residue sequences. They have become essential tools for researchers and practitioners in biology. However, a limitation of vanilla PLMs is their lack of explicit consideration for protein structure information, which suggests the potential for further improvement. Motivated by this, we introduce the concept of a “structure-aware vocabulary” that integrates residue tokens with structure tokens. The structure tokens are derived by encoding the 3D structure of proteins using Foldseek. We then propose SaProt, a large-scale general-purpose PLM trained on an extensive dataset comprising approximately 40 million protein sequences and structures. Through extensive evaluation, our SaProt model surpasses well-established and renowned baselines across 10 significant downstream tasks, demonstrating its exceptional capacity and broad applicability. We have made the code1, pre-trained model, and all relevant materials available at https://github.com/westlake-repl/SaProt.",,,,Unverified,2025-02-14 19:20:12+00:00,"China,China",,,,,,,,,
Llama 3-70B,Language,Meta AI,Industry,Aaditya Singh; Aaron Grattafiori; Abhimanyu Dubey; Abhinav Jauhri; Abhinav Pandey; Abhishek Kadian; Adam Kelsey; Adi Gangidi; Ahmad Al-Dahle; Amit Sangani; Ahuva Goldstand; Aiesha Letman; Ajay Menon; Akhil Mathur; Alan Schelten; Alex Vaughan; Amy Yang; Andrei Lupu; Andres Alvarado; Andrew Gallagher; Andrew Gu; Andrew Ho; Andrew Poulton; Andrew Ryan; Angela Fan; Ankit Ramchandani; Anthony Hartshorn; Archi Mitra; Archie Sravankumar; Artem Korenev; Arun Rao; Ashley Gabriel; Ashwin Bharambe; Assaf Eisenman; Aston Zhang; Ash JJhaveri; Aurelien Rodriguez; Austen Gregerson; Ava Spataru; Baptiste Roziere; Ben Maurer; Benjamin Leonhardi; Bernie Huang; Bhargavi Paranjape; Bing Liu; Binh Tang; Bobbie Chern; Brani Stojkovic; Brian Fuller; Catalina Mejia Arenas; Chao Zhou; Charlotte Caucheteux; Chaya Nayak; Ching-Hsiang Chu; Chloe Bi; Chris Cai; Chris Cox; Chris Marra; Chris McConnell; Christian Keller; Christoph Feichtenhofer; Christophe Touret; Chunyang Wu; Corinne Wong; Cristian Canton Ferrer; Damien Allonsius; Daniel Kreymer; Daniel Haziza; Daniel Li; Danielle Pintz; Danny Livshits; Danny Wyatt; David Adkins; David Esiobu; David Xu; Davide Testuggine; Delia David; Devi Parikh; Dhruv Choudhary; Dhruv Mahajan; Diana Liskovich; Diego Garcia-Olano; Diego Perino; Dieuwke Hupkes; Dingkang Wang; Dustin Holland; Egor Lakomkin; Elina Lobanova; Xiaoqing Ellen Tan; Emily Dinan; Eric Smith; Erik Brinkman; Esteban Arcaute; Filip Radenovic; Firat Ozgenel; Francesco Caggioni; Frank Seide; Frank Zhang; Gabriel Synnaeve; Gabriella Schwarz; Gabrielle Lee; Gada Badeer; Georgia Anderson; Graeme Nail; Gregoire Mialon; Guan Pang; Guillem Cucurell; Hailey Nguyen; Hamid Shojanazeri; Hannah Korevaar; Hannah Wang; Haroun Habeeb; Harrison Rudolph; Henry Aspegren; Hu Xu; Hugo Touvron; Iga Kozlowska; Igor Molybog; Igor Tufanov; Iliyan Zarov; Imanol Arrieta Ibarra; Irina-Elena Veliche; Isabel Kloumann; Ishan Misra; Ivan Evtimov; Jacob Xu; Jade Copet; Jake Weissman; Jan Geffert; Jana Vranes; Japhet Asher; Jason Park; Jay Mahadeokar; Jean-Baptiste Gaya; Jeet Shah; Jelmer van der Linde; Jennifer Chan; Jenny Hong; Jenya Lee; Jeremy Fu; Jeremy Teboul; Jianfeng Chi; Jianyu Huang; Jie Wang; Jiecao Yu; Joanna Bitton; Joe Spisak; Joelle Pineau; Jon Carvill; Jongsoo Park; Joseph Rocca; Joshua Johnstun; Junteng Jia; Kalyan Vasuden Alwala; Kam Hou U; Kate Plawiak; Kartikeya Upasani; Kaushik Veeraraghavan; Ke Li; Kenneth Heafield; Kevin Stone; Khalid El-Arini; Krithika Iyer; Kshitiz Malik; Kuenley Chiu; Kunal Bhalla; Kyle Huang; Lakshya Garg; Lauren Rantala-Yeary; Laurens van der Maaten; Lawrence Chen; Leandro Silva; Lee Bell; Lei Zhang; Liang Tan; Louis Martin; Lovish Madaan; Luca Wehrstedt; Lukas Blecher; Luke de Oliveira; Madeline Muzzi; Madian Khabsa; Manav Avlani; Mannat Singh; Manohar Paluri; Mark Zuckerberg; Marcin Kardas; Martynas Mankus; Mathew Oldham; Mathieu Rita; Matthew Lennie; Maya Pavlova; Meghan Keneally; Melanie Kambadur; Mihir Patel; Mikayel Samvelyan; Mike Clark; Mike Lewis; Min Si; Mitesh Kumar Singh; Mo Metanat; Mona Hassan; Naman Goyal; Narjes Torabi; Nicolas Usunier; Nikolay Bashlykov; Nikolay Bogoychev; Niladri Chatterji; Ning Dong; Oliver Aobo Yang; Olivier Duchenne; Onur Celebi; Parth Parekh; Patrick Alrassy; Paul Saab; Pavan Balaji; Pedro Rittner; Pengchuan Zhang; Pengwei Li; Petar Vasic; Peter Weng; Polina Zvyagina; Prajjwal Bhargava; Pratik Dubal; Praveen Krishnan; Punit Singh Koura; Qing He; Rachel Rodriguez; Ragavan Srinivasan; Rahul Mitra; Ramon Calderer; Raymond Li; Robert Stojnic; Roberta Raileanu; Robin Battey; Rocky Wang; Rohit Girdhar; Rohit Patel; Romain Sauvestre; Ronnie Polidoro; Roshan Sumbaly; Ross Taylor; Ruan Silva; Rui Hou; Rui Wang; Russ Howes; Ruty Rinott; Saghar Hosseini; Sai Jayesh Bondu; Samyak Datta; Sanjay Singh; Sara Chugh; Sargun Dhillon; Satadru Pan; Sean Bell; Sergey Edunov; Shaoliang Nie; Sharan Narang; Sharath Raparthy; Shaun Lindsay; Sheng Feng; Sheng Shen; Shenghao Lin; Shiva Shankar; Shruti Bhosale; Shun Zhang; Simon Vandenhende; Sinong Wang; Seohyun Sonia Kim; Soumya Batra; Sten Sootla; Steve Kehoe; Suchin Gururangan; Sumit Gupta; Sunny Virk; Sydney Borodinsky; Tamar Glaser; Tamar Herman; Tamara Best; Tara Fowler; Thomas Georgiou; Thomas Scialom; Tianhe Li; Todor Mihaylov; Tong Xiao; Ujjwal Karn; Vedanuj Goswami; Vibhor Gupta; Vignesh Ramanathan; Viktor Kerkez; Vinay Satish Kumar; Vincent Gonguet; Vish Vogeti; Vlad Poenaru; Vlad Tiberiu Mihailescu; Vladan Petrovic; Vladimir Ivanov; Wei Li; Weiwei Chu; Wenhan Xiong; Wenyin Fu; Wes Bouaziz; Whitney Meers; Will Constable; Xavier Martinet; Xiaojian Wu; Xinbo Gao; Xinfeng Xie; Xuchao Jia; Yaelle Goldschlag; Yann LeCun; Yashesh Gaur; Yasmine Babaei; Ye Qi; Yenda Li; Yi Wen; Yiwen Song; Youngjin Nam; Yuchen Hao; Yuchen Zhang; Yun Wang; Yuning Mao; Yuzi He; Zacharie Delpierre Coudert; Zachary DeVito; Zahra Hankir; Zhaoduo Wen; Zheng Yan; Zhengxing Chen; Zhenyu Yang; Zoe Papakipos,2024-04-18,Introducing Meta Llama 3: The most capable openly available LLM to date,https://ai.meta.com/blog/meta-llama-3/,,Significant use,"Will almost certainly be very influential and widely used in the open access AI industry, as with the previous Llama generations.",70000000000.0,,7.861e+24,,9.799999999999998e+24,"Arithmetic calculation:
6 * 15T tokens * 70B parameters = 6.3e24

GPU calculation:
https://huggingface.co/meta-llama/Meta-Llama-3-70B indicates training took 6.4M GPU-hours
We also know their larger scale training runs for 405B were getting between 0.38-0.41 MFU. Presumably the 70B model gets at least 0.43 utilization (405B has to be split across two nodes, while 70B should fit on one).
990 TFLOPS per GPU * 6.4 million GPU hours * 3600s * 0.43 = 9.808e24

Geometric mean: sqrt(6.3e24 * 9.808e24) = 7.861e24",Llama 3 dataset,"""Llama 3 is pretrained on over 15T tokens that were all collected from publicly available sources. Our training dataset is seven times larger than that used for Llama 2, and it includes four times more code. To prepare for upcoming multilingual use cases, over 5% of the Llama 3 pretraining dataset consists of high-quality non-English data that covers over 30 languages.""",15000000000000.0,,,,,NVIDIA H100 SXM5 80GB,,,,,Open weights (restricted use),,Confident,2025-01-30 01:56:56+00:00,United States of America,,,,,,,,,
FRED-T5-XL,Language,Sber,"Industry,Government","Dmitry Zmitrovich, Alexander Abramov, Andrey Kalmykov, Maria Tikhonova, Ekaterina Taktasheva, Danil Astafurov, Mark Baushenko, Artem Snegirev, Vitalii Kadulin, Sergey Markov, Tatiana Shavrina, Vladislav Mikhailov, Alena Fenogenova",2024-04-18,A Family of Pretrained Transformer Language Models for Russian,https://arxiv.org/abs/2309.10931,,,,1740000000.0,1.74B,2.5264222803e+22,,,"6*1500000000000*1740000000=1.566e+22
or
312000000000000 FLOPs/s * 112 GPUs * 45 days * 24 h * 3600 s * 0.3  = 4.076e22
geometric mean: 2.5e22","Wikipedia,Corus,C4,OpenSubtitles","In general, different domains and sizes of the subcorpora are included in the resulting pretraining corpora of our LMs, which range from 30GB (ruBERT) to 450GB (ruGPT-3).",1500000000000.0,"450GB *200M words per GB = 90000000000 words
In general, different domains and sizes of the subcorpora are included in the resulting pretraining corpora of our LMs, which range from 30GB (ruBERT) to 450GB (ruGPT-3).

""Collectively, the model saw about 1.5 trillion tokens."" from https://habr.com/ru/companies/sberdevices/articles/730088/",,1920.0,"""The FRED-T5-large and FREDT5-XL models are pretrained with a total batch size of 2048 for 35 days on 160 V100 GPUs, followed by 5 days on 80 A100 GPUs, and for 45 days on 112 A100 GPUs, respectively.""

Total hardware-time: 264960 chip-hours
https://www.wolframalpha.com/input?i=%2835*160%2B5*80%2B45*112%29*24.","NVIDIA A100,NVIDIA Tesla V100 SXM2",160.0,,"Transformer language models (LMs) are fundamental to NLP research methodologies and applications in various languages. However, developing such models specifically for the Russian language has received little attention. This paper introduces a collection of 13 Russian Transformer LMs, which spans encoder (ruBERT, ruRoBERTa, ruELECTRA), decoder (ruGPT-3), and encoder-decoder (ruT5, FRED-T5) architectures. We provide a report on the model architecture design and pretraining, and the results of evaluating their generalization abilities on Russian language understanding and generation datasets and benchmarks. By pretraining and releasing these specialized Transformer LMs, we aim to broaden the scope of the NLP research directions and enable the development of industrial solutions for the Russian language.",,Open weights (unrestricted),,Confident,2025-02-14 19:20:25+00:00,Russia,,,,,,,2048.0,,
Mixtral 8x22B,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Sablayrolles, Alexis Tacnet, Antoine Roux, Arthur Mensch, Audrey Herblin-Stoop, Baptiste Bout, Baudouin de Monicault,Blanche Savary, Bam4d, Caroline Feldman, Devendra Singh Chaplot, Diego de las Casas, Eleonore Arcelin, Emma Bou Hanna, Etienne Metzger, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Harizo Rajaona, Jean-Malo Delignon, Jia Li, Justus Murke, Louis Martin, Louis Ternon, Lucile Saulnier, Lélio Renard Lavaud, Margaret Jennings, Marie Pellat, Marie Torelli, Marie-Anne Lachaux, Nicolas Schuhl, Patrick von Platen, Pierre Stock, Sandeep Subramanian, Sophia Yang, Szymon Antoniak, Teven Le Scao, Thibaut Lavril, Timothée Lacroix, Théophile Gervet, Thomas Wang, Valera Nemychnikova, William El Sayed, William Marshall",2024-04-17,Mixtral 8x22B,https://mistral.ai/news/mixtral-8x22b/,,,Previous release (Mixtral 8x7B) seems to have significant usage. Appears to be SOTA in several benchmarks (MMLU) for open source models,141000000000.0,"141B params, 39B active: https://mistral.ai/news/mixtral-8x22b/ ",,,,,,,,,,,,,,Self-supervised learning,"Mixtral 8x22B is our latest open model. It sets a new standard for performance and efficiency within the AI community. It is a sparse Mixture-of-Experts (SMoE) model that uses only 39B active parameters out of 141B, offering unparalleled cost efficiency for its size.

Mixtral 8x22B comes with the following strengths:

- It is fluent in English, French, Italian, German, and Spanish
- It has strong mathematics and coding capabilities
- It is natively capable of function calling; along with the constrained output mode implemented on la Plateforme, this enables application development and tech stack modernisation at scale
- Its 64K tokens context window allows precise information recall from large documents
",,Open weights (unrestricted),,Confident,2025-01-21 20:25:43+00:00,France,,,,,,,,,
SIMA,"Games,Video",Google DeepMind,Industry,"SIMA Team, Maria Abi Raad, Arun Ahuja, Catarina Barros, Frederic Besse, Andrew Bolt, Adrian Bolton, Bethanie Brownfield, Gavin Buttimore, Max Cant, Sarah Chakera, Stephanie C. Y. Chan, Jeff Clune, Adrian Collister, Vikki Copeman, Alex Cullum, Ishita Dasgupta, Dario de Cesare, Julia Di Trapani, Yani Donchev, Emma Dunleavy, Martin Engelcke, Ryan Faulkner, Frankie Garcia, Charles Gbadamosi, Zhitao Gong, Lucy Gonzales, Kshitij Gupta, Karol Gregor, Arne Olav Hallingstad, Tim Harley, Sam Haves, Felix Hill, Ed Hirst, Drew A. Hudson, Jony Hudson, Steph Hughes-Fitt, Danilo J. Rezende, Mimi Jasarevic, Laura Kampis, Rosemary Ke, Thomas Keck, Junkyung Kim, Oscar Knagg, Kavya Kopparapu, Andrew Lampinen, Shane Legg, Alexander Lerchner, Marjorie Limont, Yulan Liu, Maria Loks-Thompson, Joseph Marino, Kathryn Martin Cussons, Loic Matthey, Siobhan Mcloughlin, Piermaria Mendolicchio, Hamza Merzic, Anna Mitenkova, Alexandre Moufarek, Valeria Oliveira, Yanko Oliveira, Hannah Openshaw, Renke Pan, Aneesh Pappu, Alex Platonov, Ollie Purkiss, David Reichert, John Reid, Pierre Harvey Richemond, Tyson Roberts, Giles Ruscoe, Jaume Sanchez Elias, Tasha Sandars, Daniel P. Sawyer, Tim Scholtes, Guy Simmons, Daniel Slater, Hubert Soyer, Heiko Strathmann, Peter Stys, Allison C. Tam, Denis Teplyashin, Tayfun Terzi, Davide Vercelli, Bojan Vujatovic, Marcus Wainwright, Jane X. Wang, Zhengdong Wang, Daan Wierstra, Duncan Williams, Nathaniel Wong, Sarah York, Nick Young",2024-04-17,Scaling Instructable Agents Across Many Simulated Worlds,https://arxiv.org/abs/2404.10179,,,,,,,,,,,,,,,,,,,,"Building embodied AI systems that can follow arbitrary language instructions in any 3D environment is a key challenge for creating general AI. Accomplishing this goal requires learning to ground language in perception and embodied actions, in order to accomplish complex tasks. The Scalable, Instructable, Multiworld Agent (SIMA) project tackles this by training agents to follow free-form instructions across a diverse range of virtual 3D environments, including curated research environments as well as open-ended, commercial video games. Our goal is to develop an instructable agent that can accomplish anything a human can do in any simulated 3D environment. Our approach focuses on language-driven generality while imposing minimal assumptions. Our agents interact with environments in real-time using a generic, human-like interface: the inputs are image observations and language instructions and the outputs are keyboard-and-mouse actions. This general approach is challenging, but it allows agents to ground language across many visually complex and semantically rich environments while also allowing us to readily run agents in new environments. In this paper we describe our motivation and goal, the initial progress we have made, and promising preliminary results on several diverse research environments and a variety of commercial video games.",,Unreleased,,Unverified,2024-09-24 16:00:32+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
METL,Biology,"University of Wisconsin Madison,Morgridge Institute for Research","Academia,Academia","Sam Gelman, Bryce Johnson, Chase Freschlin, Sameer D’Costa, Anthony Gitter, Philip A. Romero",2024-04-17,Biophysics-based protein language models for protein engineering,https://www.biorxiv.org/content/10.1101/2024.03.15.585128v1.abstract,3.0,,,,,,,,,,,10000000001.000015,"50M variants (20M + 30M) × 200 residues = 10 billion (1.0e10) tokens

20M from METL-Local
30M from METL-Global (148 proteins × 200k variants)
Average sequence length: 200 residues

Final estimate: 1.0e10 tokens",,,,,,,"Protein language models trained on evolutionary data have emerged as powerful tools for predictive problems involving protein sequence, structure, and function. However, these models overlook decades of research into biophysical factors governing protein function. We propose Mutational Effect Transfer Learning (METL), a protein language model framework that unites advanced machine learning and biophysical modeling. Using the METL framework, we pretrain transformer-based neural networks on biophysical simulation data to capture fundamental relationships between protein sequence, structure, and energetics. We finetune METL on experimental sequence-function data to harness these biophysical signals and apply them when predicting protein properties like thermostability, catalytic activity, and fluorescence. METL excels in challenging protein engineering tasks like generalizing from small training sets and position extrapolation, although existing methods that train on evolutionary signals remain powerful for many types of experimental assays. We demonstrate METL’s ability to design functional green fluorescent protein variants when trained on only 64 examples, showcasing the potential of biophysics-based protein language models for protein engineering.",,,,Unverified,2025-01-30 05:04:43+00:00,"United States of America,United States of America",,,,,,,,,
GRITLM 7B,Language,"Contextual AI,The University of Hong Kong,Microsoft","Industry,Academia,Industry","Niklas Muennighoff, Hongjin Su, Liang Wang, Nan Yang, Furu Wei, Tao Yu, Amanpreet Singh, Douwe Kiela",2024-04-17,Generative Representational Instruction Tuning,https://arxiv.org/abs/2402.09906,,,,7240000000.0,7.24B,,,,,"E5,Tulu 2","""We finetune our final models from Mistral 7B [68] and Mixtral 8x7B [69] using adaptations of E5 [160] and the Tülu 2 data [64]. For E5, we adapt it by adding S2ORC [91] to increase its scientific data (“E5S”), while for Tülu 2 we filter out their custom prompts that contain answers related to the origin of their model.""",,"""For GRITLM 7B, we use a batch size of 2048 for embedding data and 256 for generative data and we train the model for a total of 1253 steps corresponding to one epoch on the generative data and 1.36 epochs on the embedding data.""",,48.0,"""For the training of GRITLM 7B, we used 8 nodes with 8 NVIDIA A100 80GB GPUs each for 48 hours corresponding to 3,072 GPU hours. """,NVIDIA A100 SXM4 80 GB,8.0,,"7B parameter model that uses bidirectional attention for embedding and causal attention for generation. It is finetuned from Mistral-7B

All text-based language problems can be reduced to either generation or embedding. Current models only perform well at one or the other. We introduce generative representational instruction tuning (GRIT) whereby a large language model is trained to handle both generative and embedding tasks by distinguishing between them through instructions. Compared to other open models, our resulting GritLM 7B sets a new state of the art on the Massive Text Embedding Benchmark (MTEB) and outperforms all models up to its size on a range of generative tasks. By scaling up further, GritLM 8x7B outperforms all open generative language models that we tried while still being among the best embedding models. Notably, we find that GRIT matches training on only generative or embedding data, thus we can unify both at no performance loss. Among other benefits, the unification via GRIT speeds up Retrieval-Augmented Generation (RAG) by > 60% for long documents, by no longer requiring separate retrieval and generation models. Models, code, etc. are freely available at this https URL.",,Open weights (unrestricted),,Confident,2024-12-02 15:22:11+00:00,"United States of America,Hong Kong,China,United States of America",Mistral 7B,1.0351411e+21,312000000000000*3072*3600*0.3 = 1.0351411e+21,,,,,,
GRITLM 8x7B,Language,"Contextual AI,The University of Hong Kong,Microsoft","Industry,Academia,Industry","Niklas Muennighoff, Hongjin Su, Liang Wang, Nan Yang, Furu Wei, Tao Yu, Amanpreet Singh, Douwe Kiela",2024-04-17,Generative Representational Instruction Tuning,https://arxiv.org/abs/2402.09906,,,,46700000000.0,46.7B,,,,,"E5,Tulu 2","""We finetune our final models from Mistral 7B [68] and Mixtral 8x7B [69] using adaptations of E5 [160] and the Tülu 2 data [64]. For E5, we adapt it by adding S2ORC [91] to increase its scientific data (“E5S”), while for Tülu 2 we filter out their custom prompts that contain answers related to the origin of their model.""",,"""For GRITLM 8X7B, the embedding batch size is 256 due to compute limitations. """,,80.0,"""for GRITLM 8X7B, we used 32 nodes with 8 NVIDIA H100 80GB GPUs each for 80 hours corresponding to 20,480 GPU hours.""",NVIDIA H100 SXM5 80GB,8.0,,"8x7B parameter model that uses bidirectional attention for embedding and causal attention for generation. It is finetuned from Mistral-8x7B

All text-based language problems can be reduced to either generation or embedding. Current models only perform well at one or the other. We introduce generative representational instruction tuning (GRIT) whereby a large language model is trained to handle both generative and embedding tasks by distinguishing between them through instructions. Compared to other open models, our resulting GritLM 7B sets a new state of the art on the Massive Text Embedding Benchmark (MTEB) and outperforms all models up to its size on a range of generative tasks. By scaling up further, GritLM 8x7B outperforms all open generative language models that we tried while still being among the best embedding models. Notably, we find that GRIT matches training on only generative or embedding data, thus we can unify both at no performance loss. Among other benefits, the unification via GRIT speeds up Retrieval-Augmented Generation (RAG) by > 60% for long documents, by no longer requiring separate retrieval and generation models. Models, code, etc. are freely available at this https URL.",,Open weights (unrestricted),,Confident,2024-12-02 15:22:11+00:00,"United States of America,Hong Kong,China,United States of America",Mixtral 8x7B,2.1886157e+22,989500000000000*20480*3600*0.3 = 2.1886157e+22,,,,,,
Tiangong 3.0,,,,,2024-04-17,,https://www.leiphone.com/category/industrynews/aKm3DiETl4rw1A6G.html,,,,400000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Tiangong SkyMusic,,,,,2024-04-17,"Kunlun World Wide (300418): Upgraded Tiangong 3.0 Big Model AI Music Iteration
",https://news.futunn.com/en/post/40677784/kunlun-world-wide-300418-upgraded-tiangong-3-0-big-model?level=1&data_ticket=1733998099122708,,,,,,,,,,,,,,,,,,,,"“Tiangong SkyMusic” is based on the “Tiangong 3.0” large model base. It is currently the only publicly available AI music generation large model in China. It uses a Sora model architecture in the field of music audio, and supports the generation of dual-channel stereo songs with a sample rate of 44,100 Hz in 80 seconds.",,,,Unverified,,,,,,,,,,,
abab6.5,Language,MiniMax,Industry,,2024-04-17,The General Large Language Model abab6.5 Series,https://www.minimaxi.com/en/news/abab65-series,,,,1000000000000.0,,,,,,Unspecified unreleased,,,,,,,,,,"The abab6.5 series includes two models: abab6.5 and abab6.5s. Abab6.5 features a trillion parameters and supports a context length of 200k tokens; abab6.5s uses the same training techniques and data as abab6.5 but is more efficient, supporting a 200k token context length and capable of processing nearly 30,000 words within a second. With significant cost advantages, an industry-leading context length and fast speed, MiniMax's abab6.5 series of LLMs offer unique value propositions.",,API access,,Confident,2025-01-06 18:59:57+00:00,China,,,,,,,,,
Reka Core,"Multimodal,Language,Vision",Reka AI,Industry,"Aitor Ormazabal Che Zheng Cyprien de Masson d’Autume Dani Yogatama
Deyu Fu Donovan Ong Eric Chen Eugenie Lamprecht Hai Pham Isaac Ong
Kaloyan Aleksiev Lei Li Matthew Henderson Max Bain Mikel Artetxe
Nishant Relan Piotr Padlewski Qi Liu Ren Chen Samuel Phua
Yazheng Yang Yi Tay Yuqi Wang Zhongkai Zhu Zhihui Xie",2024-04-15,"Reka Core, Flash, and Edge: A Series of Powerful
Multimodal Language Models",https://publications.reka.ai/reka-core-tech-report.pdf,,Training cost,,67000000000.0,,8.400010000000001e+24,6.3e+23,2.6563132345e+26,"No direct information about Reka Core model (""Reka Core has not finished training and is still improving."")

The smaller dense model Reka Flash has 21B parameters and was trained on 5 trillion language tokens.

There is information about compute: ""Our setup comprises of clusters from a mixture of vendors with our peak compute being approximately
2.5K H100s and 2.5K A100s.""

If we assume 2 months of training with 2.5k H100s and 2.5k A100s at utilization 0.5 we get 8.4e24 FLOP (2500*9.9e14+2500*3.12e14)*60*60*24*60*0.5.","Wikipedia,Unspecified unreleased","The training data comprises a mixture of publicly available and proprietary/licensed datasets with a dataset knowledge cutoff of November 2023. The dataset ingested by our model comprises of text, images, videos, and audio clips. Reka Flash and Reka Edge were trained on approximately 5 trillion and 4.5 trillion extensively deduplicated and filtered language tokens, respectively. While the classification of corpora is not strictly defined to one class or category, approximately 25% of our pretraining data is code related, and 30% are STEM related. Approximately 25% of the data is web crawl. About 10% of our data has some relation to math.",,,,,,"NVIDIA A100,NVIDIA H100 SXM5 80GB",,,,,API access,,Speculative,2025-02-14 19:22:11+00:00,United States of America,,,,,,,,,
WizardLM-2 8x22B,Language,Microsoft,Industry,,2024-04-15,,https://wizardlm.github.io/WizardLM2/,,,,141000000000.0,Parameters: 141B,,,,,,,,,,,,,,,"We introduce and opensource WizardLM-2, our next generation state-of-the-art large language models, which have improved performance on complex chat, multilingual, reasoning and agent. New family includes three cutting-edge models: WizardLM-2 8x22B, WizardLM-2 70B, and WizardLM-2 7B.

WizardLM-2 is the latest milestone in our effort in scaling up LLM post-training. One year ago, we have been iterating on training of Wizard series since our first work on Empowering Large Language Models to Follow Complex Instructions, then we accelerate the evolution to code and math reasoning scenarios. Since then, Evol-Instruct and Instruction&Process Supervised Reinforcement Learning (RLEIF) have become fundamental technologies for GenAI community. Recently, we have further optimized our methods and data quality, resulting in significant performance improvements, the outcome is WizardLM-2.

WizardLM-2 8x22B is our most advanced model, and the best opensource LLM in our internal evaluation on highly complex tasks. WizardLM-2 70B reaches top-tier reasoning capabilities and is the first choice in the same size. WizardLM-2 7B is the fastest and achieves comparable performance with existing 10x larger opensource leading models.
",,Open weights (unrestricted),,Confident,2024-12-26 23:42:19+00:00,United States of America,Mixtral 8x22B,,,,,,,,
WizardLM-2 70B,Language,Microsoft,Industry,,2024-04-15,,https://wizardlm.github.io/WizardLM2/,,,,70000000000.0,70b,,,,,,,,,,,,,,,"We introduce and opensource WizardLM-2, our next generation state-of-the-art large language models, which have improved performance on complex chat, multilingual, reasoning and agent. New family includes three cutting-edge models: WizardLM-2 8x22B, WizardLM-2 70B, and WizardLM-2 7B.

WizardLM-2 is the latest milestone in our effort in scaling up LLM post-training. One year ago, we have been iterating on training of Wizard series since our first work on Empowering Large Language Models to Follow Complex Instructions, then we accelerate the evolution to code and math reasoning scenarios. Since then, Evol-Instruct and Instruction&Process Supervised Reinforcement Learning (RLEIF) have become fundamental technologies for GenAI community. Recently, we have further optimized our methods and data quality, resulting in significant performance improvements, the outcome is WizardLM-2.

WizardLM-2 8x22B is our most advanced model, and the best opensource LLM in our internal evaluation on highly complex tasks. WizardLM-2 70B reaches top-tier reasoning capabilities and is the first choice in the same size. WizardLM-2 7B is the fastest and achieves comparable performance with existing 10x larger opensource leading models.
",,Unreleased,,Confident,2024-12-08 03:59:49+00:00,United States of America,Llama 2-70B,,,,,,,,
WizardLM-2 7B,Language,Microsoft,Industry,,2024-04-15,,https://wizardlm.github.io/WizardLM2/,,,,7000000000.0,7b,,,,,,,,,,,,,,,"We introduce and opensource WizardLM-2, our next generation state-of-the-art large language models, which have improved performance on complex chat, multilingual, reasoning and agent. New family includes three cutting-edge models: WizardLM-2 8x22B, WizardLM-2 70B, and WizardLM-2 7B.

WizardLM-2 is the latest milestone in our effort in scaling up LLM post-training. One year ago, we have been iterating on training of Wizard series since our first work on Empowering Large Language Models to Follow Complex Instructions, then we accelerate the evolution to code and math reasoning scenarios. Since then, Evol-Instruct and Instruction&Process Supervised Reinforcement Learning (RLEIF) have become fundamental technologies for GenAI community. Recently, we have further optimized our methods and data quality, resulting in significant performance improvements, the outcome is WizardLM-2.

WizardLM-2 8x22B is our most advanced model, and the best opensource LLM in our internal evaluation on highly complex tasks. WizardLM-2 70B reaches top-tier reasoning capabilities and is the first choice in the same size. WizardLM-2 7B is the fastest and achieves comparable performance with existing 10x larger opensource leading models.
",,Open weights (unrestricted),,Confident,2024-12-08 03:57:15+00:00,United States of America,Mistral 7B,,,,,,,,
DDPM,Biology,"University Paris-Saclay,Radboud University Medical Center","Academia,Academia","Alice Lacan, Romain André, Michele Sebag, Blaise Hanczar",2024-04-13,In Silico Generation of Gene Expression profiles using Diffusion Models,https://www.biorxiv.org/content/10.1101/2024.04.10.588825v1.abstract,0.0,,,,,9.000000000000006e+17,,,"1. Hardware setup: 1x NVIDIA A40 GPU (1.50×10¹⁴ FLOP/s per GPU)

2. Training duration: 15,000 seconds (directly provided - sum of TCGA training: 3,780s and GTEx training: 11,220s)

3. Utilization rate: 40%

4. Calculation: 1.50×10¹⁴ FLOP/s × 1 GPU × 15,000s × 0.4 = 9.0×10¹⁷ FLOPs",,,16000000.999999998,"TCGA: 6,499 × 978 = 6,356,022
GTEx: 9,796 × 974 = 9,541,304
Total: 6,356,022 + 9,541,304 = 15,897,326 ≈ 1.6e7 datapoints",,,,,,,"Motivation RNA-seq data is used for precision medicine (e.g., cancer predictions), which benefits from deep learning approaches to analyze complex gene expression data. However, transcriptomics datasets often have few samples compared to deep learning standards. Synthetic data generation is thus being explored to address this data scarcity. So far, only deep generative models such as Variational Autoencoders (VAEs) and Generative Adversarial Networks (GANs) have been used for this aim. Considering the recent success of diffusion models (DM) in image generation, we propose the first generation pipeline that leverages the power of said diffusion models.

Results This paper presents two state-of-the-art diffusion models (DDPM and DDIM) and achieves their adaptation in the transcriptomics field. DM-generated data of L1000 landmark genes show better predictive performance over TCGA and GTEx datasets. We also compare linear and nonlinear reconstruction methods to recover the complete transcriptome. Results show that such reconstruction methods can boost the performances of diffusion models, as well as VAEs and GANs. Overall, the extensive comparison of various generative models using data quality indicators shows that diffusion models perform best and second-best, making them promising synthetic transcriptomics generators.",,,,Unverified,2025-02-14 19:22:54+00:00,"France,Netherlands",,,,,,,,,
DDIM,Biology,"University Paris-Saclay,Radboud University Medical Center","Academia,Academia","Alice Lacan, Romain André, Michele Sebag, Blaise Hanczar",2024-04-13,In Silico Generation of Gene Expression profiles using Diffusion Models,https://www.biorxiv.org/content/10.1101/2024.04.10.588825v1.abstract,0.0,,,,,9.000000000000006e+17,,,"1. Hardware setup: 1x NVIDIA A40 GPU (1.50×10¹⁴ FLOP/s per GPU)

2. Training duration: 15,000 seconds (directly provided - sum of TCGA training: 3,780s and GTEx training: 11,220s)

3. Utilization rate: 40%

4. Calculation: 1.50×10¹⁴ FLOP/s × 1 GPU × 15,000s × 0.4 = 9.0×10¹⁷ FLOPs",,,16000000.999999998,"TCGA: 6,499 × 978 = 6,356,022
GTEx: 9,796 × 974 = 9,541,304
Total: 6,356,022 + 9,541,304 = 15,897,326 ≈ 1.6e7 datapoints",,,,,,,"Motivation: RNA-seq data is used for precision medicine (e.g., cancer predictions), which benefits from deep learning approaches to analyze complex gene expression data. However, transcriptomics datasets often have few samples compared to deep learning standards. Synthetic data generation is thus being explored to address this data scarcity. So far, only deep generative models such as Variational Autoencoders (VAEs) and Generative Adversarial Networks (GANs) have been used for this aim. Considering the recent success of diffusion models (DM) in image generation, we propose the first generation pipeline that leverages the power of said diffusion models. Results: This paper presents two state-of-the-art diffusion models (DDPM and DDIM) and achieves their adaptation in the transcriptomics field. DM-generated data of L1000 landmark genes show better predictive performance over TCGA and GTEx datasets. We also compare linear and nonlinear reconstruction methods to recover the complete transcriptome. Results show that such reconstruction methods can boost the performances of diffusion models, as well as VAEs and GANs. Overall, the extensive comparison of various generative models using data quality indicators shows that diffusion models perform best and second-best, making them promising synthetic transcriptomics generators.",,,,Unverified,2025-02-14 19:22:44+00:00,"France,Netherlands",,,,,,,,,
Bencao Zhiku,,,,,2024-04-12,"我国发布全球首个中药全产业链大模型

",https://ecas.cas.cn/xxkw/kbcd/201115_145987/ml/xxhcxyyyal/202407/t20240718_5026378.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
tsuzumi 7B upgrade 2024,"Language,Multimodal,Vision",NTT Communication Science Laboratories,Industry,Kyosuke Nishida,2024-04-11,"NTT's Large Language Model ""tsuzumi"" is Here!",https://ntt-research.com/2024-upgrade-reality-tsuzumi/,,,,7000000000.0,7B,4.2e+22,,,"6ND = 6 * 7000000000 * 1000000000000 = 4.2e+22
(unknown number of epochs -> 'likely' confidence)",,,1000000000000.0,"1T+ from https://ntt-research.com/2024-upgrade-reality-tsuzumi/
5:55",,,,,,,"tsuzumi is a large-scale language model created by NTT Laboratories. The name is inspired by the traditional Japanese drum “鼓” and the model reflects the instrument’s compact and efficient design. Our vision for the future involves tackling societal challenges through the collaborative intelligence of a network of smaller, specialized LLMs like tsuzumi. 

In this presentation, Kyosuke Nishida, Senior Distinguished Researcher in the NTT Human Informatics Laboratories, demonstrates the tsuzumi-7B model, which was developed from scratch and features 7 billion parameters and over one trillion Japanese and English tokens. A vision-and-language model using tsuzumi for visual document understanding is also showcased.",,,,Likely,2025-02-14 19:23:09+00:00,Japan,,,,,,,,,
HGRN2 3B,Language,"Shanghai AI Lab,Massachusetts Institute of Technology (MIT),Taptap","Academia,Academia,Industry","Zhen Qin, Songlin Yang, Weixuan Sun, Xuyang Shen, Dong Li, Weigao Sun, Yiran Zhong",2024-04-11,HGRN2: Gated Linear RNNs with State Expansion,https://arxiv.org/abs/2404.07904v1,,,,2900000000.0,2.9B,1.74e+21,,,6ND = 6* 2.9*10^9*100*10^9 = 1.74e+21,"The Pile,C4,Wikipedia",,100000000000.0,100B Table 6,,,,,,,"Hierarchically gated linear RNN (HGRN,Qin et al. 2023) has demonstrated competitive training speed and performance in language modeling, while offering efficient inference. However, the recurrent state size of HGRN remains relatively small, which limits its this http URL address this issue, inspired by linear attention, we introduce a simple outer-product-based state expansion mechanism so that the recurrent state size can be significantly enlarged without introducing any additional parameters. The linear attention form also allows for hardware-efficient this http URL extensive experiments verify the advantage of HGRN2 over HGRN1 in language modeling, image classification, and Long Range this http URL largest 3B HGRN2 model slightly outperforms Mamba and LLaMa Architecture Transformer for language modeling in a controlled experiment setting; and performs competitively with many open-source 3B models in downstream evaluation while using much fewer total training tokens.

""HGRN2 is comparable to the state-of-the-art (SOTA)
methods at 1 billion and better than SOTA methods at 3 billion size.""",,,,Confident,2025-01-03 16:16:28+00:00,"China,United States of America,Spain",,,,,,,,,
HGRN2 1B,Language,"Shanghai AI Lab,Massachusetts Institute of Technology (MIT),Taptap","Academia,Academia,Industry","Zhen Qin, Songlin Yang, Weixuan Sun, Xuyang Shen, Dong Li, Weigao Sun, Yiran Zhong",2024-04-11,HGRN2: Gated Linear RNNs with State Expansion,https://arxiv.org/abs/2404.07904v1,,,,1000000000.0,1B,6.000000001e+21,,,6ND = 6*10^9 * 100*10^9 = 6*10^21,"The Pile,C4,Wikipedia",,100000000000.0,100B Table 6,,,,,,,"Hierarchically gated linear RNN (HGRN,Qin et al. 2023) has demonstrated competitive training speed and performance in language modeling, while offering efficient inference. However, the recurrent state size of HGRN remains relatively small, which limits its this http URL address this issue, inspired by linear attention, we introduce a simple outer-product-based state expansion mechanism so that the recurrent state size can be significantly enlarged without introducing any additional parameters. The linear attention form also allows for hardware-efficient this http URL extensive experiments verify the advantage of HGRN2 over HGRN1 in language modeling, image classification, and Long Range this http URL largest 3B HGRN2 model slightly outperforms Mamba and LLaMa Architecture Transformer for language modeling in a controlled experiment setting; and performs competitively with many open-source 3B models in downstream evaluation while using much fewer total training tokens.

""HGRN2 is comparable to the state-of-the-art (SOTA)
methods at 1 billion and better than SOTA methods at 3 billion size.""",,,,Confident,2025-01-03 16:17:13+00:00,"China,United States of America,Spain",,,,,,,,,
AF2RAVE,Biology,University of Maryland,Academia,"Xinyu Gu, Akashnathan Aranganathan, Pratyush Tiwary",2024-04-10,Empowering AlphaFold2 for Protein Conformation-Selective Drug Discovery with AlphaFold2-RAVE,https://arxiv.org/abs/2404.07102v3,4.0,,,,,,,,,,,16000000000.999985,"Initial simulations: 12 × (48.5×10^-9 / 2×10^-15) = 291×10^6 steps

Umbrella sampling: 12 × (11×11) × (90×10^-9 / 2×10^-15) = 6.534×10^10 steps

Total: 291×10^6 + 6.534×10^10 = 6.563×10^10 steps

Conservative estimate: 1.6×10^10 data points",,,,,,,"Small molecule drug design hinges on obtaining co-crystallized ligand-protein structures. Despite AlphaFold2’s strides in protein native structure prediction, its focus on apo structures overlooks ligands and associated holo structures. Moreover, designing selective drugs often benefits from the targeting of diverse metastable conformations. Therefore, direct application of AlphaFold2 models in virtual screening and drug discovery remains tentative. Here, we demonstrate an AlphaFold2 based framework combined with all-atom enhanced sampling molecular dynamics and induced fit docking, named AF2RAVE-Glide, to conduct computational model based small molecule binding of metastable protein kinase conformations, initiated from protein sequences. We demonstrate the AF2RAVE-Glide workflow on three different protein kinases and their type I and II inhibitors, with special emphasis on binding of known type II kinase inhibitors which target the metastable classical DFG-out state. These states are not easy to sample from AlphaFold2. Here we demonstrate how with AF2RAVE these metastable conformations can be sampled for different kinases with high enough accuracy to enable subsequent docking of known type II kinase inhibitors with more than 50% success rates across docking calculations. We believe the protocol should be deployable for other kinases and more proteins generally.",,,,Unverified,2025-01-30 05:04:41+00:00,United States of America,,,,,,,,,
Zephyr 141B-A39B																																						,Language,"Hugging Face,Korea Advanced Institute of Science and Technology (KAIST),Argilla","Industry,Academia,Industry","Alvaro Bartolome, Jiwoo Hong, Noah Lee, Kashif Rasul, Lewis Tunstall",2024-04-10,Model Card for Zephyr 141B-A39B,https://huggingface.co/HuggingFaceH4/zephyr-orpo-141b-A35b-v0.1,,,,141000000000.0,"""A Mixture of Experts (MoE) model with 141B total parameters and 39B active parameters.""",,,,,Capybara-DPO 7K binarized,,,,3.0,1.3,"""1.3 hours on 4 nodes of 8 x H100s""",NVIDIA H100 SXM5 80GB,32.0,,"Zephyr is a series of language models that are trained to act as helpful assistants. Zephyr 141B-A39B is the latest model in the series, and is a fine-tuned version of mistral-community/Mixtral-8x22B-v0.1 that was trained using a novel alignment algorithm called Odds Ratio Preference Optimization (ORPO) with 7k instances for 1.3 hours on 4 nodes of 8 x H100s. ORPO does not require an SFT step to achieve high performance and is thus much more computationally efficient than methods like DPO and PPO. To train Zephyr-141B-A39B, we used the argilla/distilabel-capybara-dpo-7k-binarized preference dataset, which consists of synthetic, high-quality, multi-turn preferences that have been scored via LLMs.",,Open weights (unrestricted),,Confident,2024-12-02 15:55:57+00:00,"Multinational,United States of America,Korea (Republic of),Spain",Mixtral 8x22B,4.4456256e+19,989500000000000*32*1.3*3600*0.3 = 4.4456256e+19,,,,,,
DiffBindFR,Biology,"Peking University,Tsinghua-Peiking Center for Life Sciences","Academia,Research collective","Jintao Zhu, Zhonghui Gu, Jianfeng Pei, Luhua Lai",2024-04-09,DiffBindFR: an SE(3) equivariant network for flexible protein–ligand docking,https://pubs.rsc.org/en/content/articlehtml/2024/sc/d3sc06803j,4.0,,,,,4.000000000000001e+20,,,"1. Hardware setup:
- Main model: 8× NVIDIA A800 GPUs (7.80×10¹³ FLOP/s per GPU)
- MDN model: 4× NVIDIA Tesla V100-SXM2 GPUs (1.25×10¹⁴ FLOP/s per GPU)

2. Training duration (estimated from steps and step time):
- Main model: 262,000 steps × 5s = 1.31×10⁶ seconds (~15 days)
- MDN model: 65,000 steps × 5s = 3.25×10⁵ seconds (~3.76 days)

3. Utilization rate: 40%

4. Final calculation:
Main: 8 GPUs × 7.80×10¹³ FLOP/s × 1.31×10⁶ s × 0.4 = 3.31×10²⁰ FLOPs
MDN: 4 GPUs × 1.25×10¹⁴ FLOP/s × 3.25×10⁵ s × 0.4 = 6.50×10¹⁹ FLOPs
Total: 3.31×10²⁰ + 6.50×10¹⁹ ≈ 4.0×10²⁰ FLOPs",,,16740.999999999985,"Data points = 16,739 training structures
Note: Epochs (1000) not counted as we only consider unique data points

16,739 = 1.674e4",,,,,,,"Molecular docking, a key technique in structure-based drug design, plays pivotal roles in protein–ligand interaction modeling, hit identification and optimization, in which accurate prediction of protein–ligand binding mode is essential. Conventional docking approaches perform well in redocking tasks with known protein binding pocket conformation in the complex state. However, in real-world docking scenario without knowing the protein binding conformation for a new ligand, accurately modeling the binding complex structure remains challenging as flexible docking is computationally expensive and inaccurate. Typical deep learning-based docking methods do not explicitly consider protein side chain conformations and fail to ensure the physical plausibility and detailed atomic interactions. In this study, we present DiffBindFR, a full-atom diffusion-based flexible docking model that operates over the product space of ligand overall movements and flexibility and pocket side chain torsion changes. We show that DiffBindFR has higher accuracy in producing native-like binding structures with physically plausible and detailed interactions than available docking methods. Furthermore, in the Apo and AlphaFold2 modeled structures, DiffBindFR demonstrates superior advantages in accurate ligand binding pose and protein binding conformation prediction, making it suitable for Apo and AlphaFold2 structure-based drug design. DiffBindFR provides a powerful flexible docking tool for modeling accurate protein–ligand binding structures.",,,,Unverified,2025-02-14 19:23:24+00:00,"China,China",,,,,,,,,
Stable LM 2 12B,Language,Stability AI,Industry,,2024-04-08,Introducing Stable LM 2 12B,"https://stability.ai/news/introducing-stable-lm-2-12b
https://huggingface.co/stabilityai/stablelm-2-12b",,,,12143605760.0,Precise number given in HF model card,2.91e+23,,,"2* 12143605760 params * 3* 2T tokens * 2 epochs = 2.91e23. 
Trained on 384 H100s (AWS P5 instances).","RefinedWeb,RedPajama-Data,The Pile,StarCoder,CulturaX","The dataset is comprised of a filtered mixture of open-source large-scale datasets available on the HuggingFace Hub: Falcon RefinedWeb extract (Penedo et al., 2023), RedPajama-Data (Together Computer., 2023) and The Pile (Gao et al., 2020) both without the Books3 subset, and StarCoder (Li et al., 2023). We further supplement our training with multi-lingual data from CulturaX (Nguyen et al., 2023) and, in particular, from its OSCAR corpora, as well as restructured data in the style of Yuan & Liu (2022).",2000000000000.0,2T tokens,2.0,,,NVIDIA H100 SXM5 80GB,,Self-supervised learning,"Introducing the latest additions to our Stable LM 2 language model series: a 12 billion parameter base model and an instruction-tuned variant, trained on 2 trillion tokens in seven languages: English, Spanish, German, Italian, French, Portuguese, and Dutch. This medium-sized model balances strong performance, efficiency, memory requirements, and speed, following our established Stable LM 2 1.6B framework as detailed in our previously released technical report. With this release, we’re extending our model range, offering a transparent and powerful tool for developers to innovate in AI language technology. Soon, we plan to introduce a long-context variant of these models which will be available on Hugging Face upon release.

From Hugging Face:
Stable LM 2 12B is a 12.1 billion parameter decoder-only language model pre-trained on 2 trillion tokens of diverse multilingual and code datasets for two epochs.",,Open weights (restricted use),,Confident,2024-10-26 16:36:04+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
YaART,Image generation,Yandex,Industry,"Sergey Kastryulin, Artem Konev, Alexander Shishenya, Eugene Lyapustin, Artem Khurshudov, Alexander Tselousov, Nikita Vinokurov, Denis Kuznedelev, Alexander Markovich, Grigoriy Livshits, Alexey Kirillov, Anastasiia Tabisheva, Liubov Chubarova, Marina Kaminskaia, Alexander Ustyuzhanin, Artemii Shvetsov, Daniil Shlenskii, Valerii Startsev, Dmitrii Kornilov, Mikhail Romanov, Artem Babenko, Sergei Ovcharenko, Valentin Khrulkov",2024-04-08,YaART: Yet Another ART Rendering Technology,https://arxiv.org/abs/2404.05666,,,,2300000000.0,,8.21376e+19,,,"There is cascade of 3 models:

GEN64
Parameters: 2.3 billion
Input: Textual prompt
Output: 64x64 image
Batch Size: 4800
Iterations: 1.1 × 10^6 

Compute = 6 * 2.3 billion * 4800 * 1.1 × 10^6 = 7.2864e+19

SR256
Parameters: 700 million
Input: 64x64 image
Output: 256x256 image
Batch Size: 960
Iterations: 1.5 × 10^6 

Compute = 6 * 700 million * 960 * 1.5 × 10^6 = 6.048e+18

SR1024
Parameters: 700 million
Input: 256x256 image
Output: 1024x1024 image
Batch Size: 512
Iterations: 1.5 × 10^6 

Compute = 6 * 700 million * 512 * 1.5 × 10^6 = 3.2256e+18

Total compute = 7.2864e+19 + 6.048e+18 + 3.2256e+18 = 8.21376e+19",,,,,,,,NVIDIA A100 SXM4 80 GB,160.0,,"In the rapidly progressing field of generative models, the development of efficient and high-fidelity text-to-image diffusion systems represents a significant frontier. This study introduces YaART, a novel production-grade text-to-image cascaded diffusion model aligned to human preferences using Reinforcement Learning from Human Feedback (RLHF). During the development of YaART, we especially focus on the choices of the model and training dataset sizes, the aspects that were not systematically investigated for text-to-image cascaded diffusion models before. In particular, we comprehensively analyze how these choices affect both the efficiency of the training process and the quality of the generated images, which are highly important in practice. Furthermore, we demonstrate that models trained on smaller datasets of higher-quality images can successfully compete with those trained on larger datasets, establishing a more efficient scenario of diffusion models training. From the quality perspective, YaART is consistently preferred by users over many existing state-of-the-art models.",,API access,,Speculative,2025-02-14 19:24:24+00:00,Russia,,,,,,,4800.0,,
Solar Stone Mining Large Model,,,,,2024-04-07,"中国煤科发布“太阳石矿山大模型” 助力煤炭行业智能化转型
",https://www.stdaily.com/index/kejixinwen/202404/8e75d8cef5a648a480a79b0f2c59a128.shtml,,,,,,,,,,,,,,,,,,,,"The ""Sunstone Mine Big Model"" is designed to meet the specific needs of multi-dimensional application scenarios in coal mines. It is built from six levels: infrastructure layer, data resource layer, algorithm model layer, application service layer, security, trust and testing layer, and industry ecosystem layer. Cheng Jian, chief scientist of China Coal Technology and Engineering Group, introduced that the data resource layer brings together a large amount of multimodal data in the coal industry, including 50 billion safety monitoring data sets, 3 million visual image data sets, and professional academic journal data sets. The algorithm model layer can support more than 100 types of autonomous and controllable AI algorithms; the application service layer includes mine multimodal data interaction, mine space reconstruction and calculation, mine operation and maintenance decision analysis, mine disaster warning decision analysis, and mine intelligent design.",,,,Unverified,,,,,,,,,,,
ESM-AA,Biology,"Peking University,Nanjing University,Tsinghua University,PharMolix","Academia,Academia,Academia,Industry","Kangjie Zheng, Siyu Long, Tianyu Lu, Junwei Yang, Xinyu Dai, Ming Zhang, Zaiqing Nie, Wei-Ying Ma, Hao Zhou",2024-04-05,ESM All-Atom: Multi-scale Protein Language Model for Unified Molecular Modeling,https://arxiv.org/abs/2403.12995,2.0,,,,,5.200000000000003e+20,,,"1. Hardware: 16x NVIDIA A100 GPUs (3.12e14 FLOP/s per GPU)
2. Training duration: 3 days directly reported = 259,200 seconds
3. Utilization: 40% assumed
4. Calculation: 3.12e14 FLOP/s × 16 GPUs × 259,200s × 0.40 = 5.18e20 FLOPs",,,32000000001.0,"Protein tokens:
- Residue tokens: 8M * 100 = 800M
- Atom tokens: 8M * 100 * 10 = 8B
- Protein total: (800M + 8B) * 1.08 = 9.5B

Molecule tokens: 
- 209M * 100 * 1.08 = 22.5B

Total tokens: 9.5B + 22.5B ≈ 32B (3.2e10)",,,,,,,"Protein language models have demonstrated significant potential in the field of protein engineering. However, current protein language models primarily operate at the residue scale, which limits their ability to provide information at the atom level. This limitation prevents us from fully exploiting the capabilities of protein language models for applications involving both proteins and small molecules. In this paper, we propose ESM-AA (ESM All-Atom), a novel approach that enables atom-scale and residue-scale unified molecular modeling. ESM-AA achieves this by pre-training on multi-scale code-switch protein sequences and utilizing a multi-scale position encoding to capture relationships among residues and atoms. Experimental results indicate that ESM-AA surpasses previous methods in protein-molecule tasks, demonstrating the full utilization of protein language models. Further investigations reveal that through unified molecular modeling, ESM-AA not only gains molecular knowledge but also retains its understanding of proteins. The source codes of ESM-AA are publicly released at this https URL.",,,,Unverified,2025-02-14 19:24:31+00:00,"China,China,China,China",,,,,,,,,
Command R+,Language,"Cohere,Cohere for AI","Industry,Industry",,2024-04-04,,https://txt.cohere.com/command-r-plus-microsoft-azure/,,,,104000000000.0,,,,,,Unspecified unreleased,,,,,,,,,,"C4AI Command R+ is an open weights research release of a 104B billion parameter model with highly advanced capabilities, this includes Retrieval Augmented Generation (RAG) and tool use to automate sophisticated tasks. The tool use in this model generation enables multi-step tool use which allows the model to combine multiple tools over multiple steps to accomplish difficult tasks. C4AI Command R+ is a multilingual model evaluated in 10 languages for performance: English, French, Spanish, Italian, German, Brazilian Portuguese, Japanese, Korean, Arabic, and Simplified Chinese. Command R+ is optimized for a variety of use cases including reasoning, summarization, and question answering.",,Open weights (non-commercial),,,2025-02-06 00:17:44+00:00,"Canada,Multinational,Canada",,,,,,,,,True
Viking,Language,"Silo AI,University of Turku","Industry,Academia",,2024-04-04,"Viking 33B is a 33B parameter decoder-only transformer pretrained on Finnish, English, Swedish, Danish, Norwegian, Icelandic and code. It is being trained on 2 trillion tokens (700B billion as of this release). Viking 33B is a fully open source model and is made available under the Apache 2.0 License.",https://huggingface.co/LumiOpen/Viking-33B,,,,33000000000.0,,2.574e+23,,,"Plan is to train on 2 trillion tokens, but most recent release is at 1.3T
6 * 33B * 1.3 trillion = 2.574E23",,,2000000000000.0,"Viking is being trained on a 2 trillion token mixed dataset of English, Finnish, Swedish, Danish, Norwegian, Icelandic and code.",,,,AMD Radeon Instinct MI250X,1024.0,,,,Open weights (unrestricted),,Confident,2025-02-14 19:25:09+00:00,"Finland,Finland",,,,,LUMI supercomputer (Finland),,,,
eFold,Biology,"Harvard Medical School,Stanford University,Columbia University,University of Strasbourg","Academia,Academia,Academia","Silvi Rouskin, Alberic de Lajart, Yves Martin des Taillades, Colin Kalicki, Federico Fuchs Wightman, Justin Aruda, Dragui Salazar, Matthew Allan, Casper L'Esperance-Kerckhoff, Alex Kashi, Fabrice Jossinet",2024-04-04,Diverse Database and Machine Learning Model to Narrow the Generalization Gap in RNA Structure Prediction,https://www.researchsquare.com/article/rs-4159627/v1,,,,,,,,,,,,,,,,,,,,"Understanding macromolecular structures of proteins and nucleic acids is critical for discerning their functions and biological roles. Advanced techniques—crystallography, NMR, and CryoEM—have facilitated the determination of over 180,000 protein structures, all cataloged in the Protein Data Bank (PDB). This comprehensive repository has been pivotal in developing deep learning algorithms for predicting protein structures directly from sequences. In contrast, RNA structure prediction has lagged, and suffers from a scarcity of structural data. Here, we present the secondary structure models of 1098 pri-miRNAs and 1456 human mRNA regions determined through chemical probing. We develop a novel deep learning architecture, inspired from the Evoformer model of Alphafold and traditional architectures for secondary structure prediction. This new model, eFold, was trained on our newly generated database and over 300,000 secondary structures across multiple sources. We benchmark eFold on two new test sets of long and diverse RNA structures and show that our dataset and new architecture contribute to increasing the prediction performance, compared to similar state-of-the-art methods. All together, our results reveal that merely expanding the database size is insufficient for generalization across families, whereas incorporating a greater diversity and complexity of RNAs structures allows for enhanced model performance.",,,,Unverified,2025-01-10 16:31:02+00:00,"United States of America,United States of America,United States of America,France",,,,,,,,,
Universal-1,Speech,AssemblyAI,Industry,"Francis McCann (lead), Luka Chkhetiani (lead), Andrew Ehrenberg, Robert McHardy, Rami Botros, Yash Khare, Andrea Vanzo, Taufiquzzaman Peyash, Gabriel Oexle, Michael Liang, Ilya Sklyar, Ahmed Etefy, Daniel McCrystal, William Pipsico Ferreira, Ruben Bousbib, Ben Gotthold, Soheyl Bahadoori, Enver Fakhan, Rahul Bagai, Mez Rashid, James He, Takuya Yoshioka, Travis Kupsche, Domenic Donato, Marco Ramponi, Ryan O’Connor, Sam Flamini, 
Sergio Ramirez Martin (lead), Rajpreet Thethy, Lee Vaughn, Martin Schweiger, Anita Miller, Prachie Banthia, Audy Mulia, Amanda Lee, Christy Roach, Domenic Donato, Dylan Duan, Matt Lawler, Ryan O’Connor, and Whitney DeGraaf, Francis McCann, Sergio Ramirez Martin, Jaime Lorenzo-Trueba, Ruben Bousbib, Michelle Asuamah, Marco Ramponi, Gabriel Oexle, Rami Botros, Ilya Skylar, Patrick Loeber, Dillon Pulliam, Michael Chinen",2024-04-03,Robust and accurate multilingual speech-to-text,https://www.assemblyai.com/research/universal-1,,,,600000000.0,"""Training on more than 12.5 million hours of diverse multilingual audio data, 600M-parameter Conformer RNN-T based Universal-1 achieves remarkable robustness""",,,,,,,,"""Trained on over 12.5 million hours of multilingual audio data""

""A batch size of 2048 is used.""",,,,Google TPU v5e,,,"We are excited to introduce Universal-1, our latest and most powerful speech recognition model. Trained on over 12.5 million hours of multilingual audio data, Universal-1 achieves best-in-class speech-to-text accuracy across four major languages: English, Spanish, French, and German.",,API access,0.54,Confident,2024-12-08 19:05:15+00:00,,Conformer,,,,,,,,
Mixture-of-Depths,Language,"Google DeepMind,McGill University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms)","Industry,Academia,Academia","David Raposo, Sam Ritter, Blake Richards, Timothy Lillicrap, Peter Conway Humphreys, Adam Santoro",2024-04-02,Mixture-of-Depths: Dynamically allocating compute in transformer-based language models,https://arxiv.org/abs/2404.02258,35.0,,"Improvements on transformer loss for a given compute budget, or can match loss with >60% fewer FLOPs per training step. See Figure 3.",3000000000.0,"Figure 4: ""We used the 12.5% capacity MoD variant to perform an isoFLOP analysis for 6e18, 2e19, and 1e20 FLOPs, training models varying in size from 60M to 3B parameters""",1e+20,,,"Figure 4: ""We used the 12.5% capacity MoD variant to perform an isoFLOP analysis for 6e18, 2e19, and 1e20 FLOPs, training models varying in size from 60M to 3B parameters""",,Training set not described.,,,,,,,,,"Transformer-based language models spread FLOPs uniformly across input sequences. In this work we demonstrate that transformers can instead learn to dynamically allocate FLOPs (or compute) to specific positions in a sequence, optimising the allocation along the sequence for different layers across the model depth. Our method enforces a total compute budget by capping the number of tokens (k) that can participate in the self-attention and MLP computations at a given layer. The tokens to be processed are determined by the network using a top-k routing mechanism. Since k is defined a priori, this simple procedure uses a static computation graph with known tensor sizes, unlike other conditional computation techniques. Nevertheless, since the identities of the k tokens are fluid, this method can expend FLOPs non-uniformly across the time and model depth dimensions. Thus, compute expenditure is entirely predictable in sum total, but dynamic and context-sensitive at the token-level. Not only do models trained in this way learn to dynamically allocate compute, they do so efficiently. These models match baseline performance for equivalent FLOPS and wall-clock times to train, but require a fraction of the FLOPs per forward pass, and can be upwards of 50\% faster to step during post-training sampling.",,Unreleased,,Confident,2025-02-19 18:35:12+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,Canada,Canada",,,,,,,,,
POKE´LLMON,"Games,Language",Georgia Institute of Technology,Academia,"Sihao Hu, Tiansheng Huang, Ling Liu",2024-04-02,PokeLLMon: A Human-Parity Agent for Pokemon Battles with Large Language Models,https://arxiv.org/abs/2402.01118,,,,,,,,,,,,,,,,,,,,"We introduce PokeLLMon, the first LLM-embodied agent that achieves human-parity performance in tactical battle games, as demonstrated in Pokemon battles. The design of PokeLLMon incorporates three key strategies: (i) In-context reinforcement learning that instantly consumes text-based feedback derived from battles to iteratively refine the policy; (ii) Knowledge-augmented generation that retrieves external knowledge to counteract hallucination and enables the agent to act timely and properly; (iii) Consistent action generation to mitigate the panic switching phenomenon when the agent faces a powerful opponent and wants to elude the battle. We show that online battles against human demonstrates PokeLLMon's human-like battle strategies and just-in-time decision making, achieving 49% of win rate in the Ladder competitions and 56% of win rate in the invited battles. Our implementation and playable battle logs are available at: this https URL.",,Hosted access (no API),,Unverified,2024-09-24 15:58:45+00:00,United States of America,GPT-4,,,,,,,,
AutoDiff,Biology,"Galixir Technologies,Rensselaer Polytechnic Institute,Massachusetts Institute of Technology (MIT)","Industry,Academia,Academia","Xinze Li, Penglei Wang, Tianfan Fu, Wenhao Gao, Chengtao Li, Leilei Shi, Junhong Liu",2024-04-02,AUTODIFF: Autoregressive Diffusion Modeling for Structure-based Drug Design,https://arxiv.org/abs/2404.02003,1.0,,,,,,,,,,,22500000.999999985,"22.5M poses = 22.5M datapoints
= 22,500,000 datapoints

Final estimate = 22.5M",,,,,,,"Structure-based drug design (SBDD), which aims to generate molecules that can bind tightly to the target protein, is an essential problem in drug discovery, and previous approaches have achieved initial success. However, most existing methods still suffer from invalid local structure or unrealistic conformation issues, which are mainly due to the poor leaning of bond angles or torsional angles. To alleviate these problems, we propose AUTODIFF, a diffusion-based fragment-wise autoregressive generation model. Specifically, we design a novel molecule assembly strategy named conformal motif that preserves the conformation of local structures of molecules first, then we encode the interaction of the protein-ligand complex with an SE(3)-equivariant convolutional network and generate molecules motif-by-motif with diffusion modeling. In addition, we also improve the evaluation framework of SBDD by constraining the molecular weights of the generated molecules in the same range, together with some new metrics, which make the evaluation more fair and practical. Extensive experiments on CrossDocked2020 demonstrate that our approach outperforms the existing models in generating realistic molecules with valid structures and conformations while maintaining high binding affinity.",,,,Unverified,2025-01-30 05:05:09+00:00,"China,United States of America,United States of America",,,,,,,,,
MobileCLIP-B (LT),Vision,Apple,Industry,"Pavan Kumar Anasosalu Vasu, Hadi Pouransari, Fartash Faghri, Raviteja Vemulapalli, Oncel Tuzel",2024-04-01,MobileCLIP: Fast Image-Text Models through Multi-Modal Reinforced Training,https://arxiv.org/abs/2311.17049,,,,149700000.0,"Table 7 
Params (M) (img+txt)
86.3 + 63.4",1.3423599e+22,,,"6*490*10^9*30.50*149700000.00 = 1.3423599e+22

'Likely' confidence because I am not sure about dataset size",DataCompDR-1B,"""One seen sample for DataCompDR is a triplet of one randomly augmented
image, one ground-truth caption, and one randomly picked synthetic caption.""",490000000000.0,"140TB, 1.28B datapoints - size of the dataset

""We train using 64 nodes with 8xA100-80GB GPUs and a
per-GPU batch size of either 128 or 256.""

39B - seen samples

LR schedule Const(300k, 65k, 2k) + Cosine(300k, 65k, 2k) 39B

600k total steps(for LT = long training model)

39/1.28 ~ 30.5 epochs

assumming image resolution 256*256, patch size 14*14, caption length 50 text tokens

then total size of the dataset is

1.28*10^9*((256/14)^2+50) = 491990204082 tokens ~490B tokens",30.5,,"""We train using 64 nodes with 8xA100-80GB GPUs and a
per-GPU batch size of either 128 or 256.""",NVIDIA A100 SXM4 80 GB,256.0,,"Contrastive pretraining of image-text foundation models, such as CLIP, demonstrated excellent zero-shot performance and improved robustness on a wide range of downstream tasks. However, these models utilize large transformer-based encoders with significant memory and latency overhead which pose challenges for deployment on mobile devices. In this work, we introduce MobileCLIP -- a new family of efficient image-text models optimized for runtime performance along with a novel and efficient training approach, namely multi-modal reinforced training. The proposed training approach leverages knowledge transfer from an image captioning model and an ensemble of strong CLIP encoders to improve the accuracy of efficient models. Our approach avoids train-time compute overhead by storing the additional knowledge in a reinforced dataset. MobileCLIP sets a new state-of-the-art latency-accuracy tradeoff for zero-shot classification and retrieval tasks on several datasets. Our MobileCLIP-S2 variant is 2.3× faster while more accurate compared to previous best CLIP model based on ViT-B/16. We further demonstrate the effectiveness of our multi-modal reinforced training by training a CLIP model based on ViT-B/16 image backbone and achieving +2.9% average performance improvement on 38 evaluation benchmarks compared to the previous best. Moreover, we show that the proposed approach achieves 10×-1000× improved learning efficiency when compared with non-reinforced CLIP training. Code and models are available at this https URL .",,Open weights (unrestricted),,Likely,2024-11-15 19:20:10+00:00,United States of America,,,,,,,,,
TeleChat-7B,,,,"Zhongjiang He, Zihan Wang, Xinzhang Liu, Shixuan Liu, Yitong Yao, Yuyao Huang, Xuelong Li, Yongxiang Li, Zhonghao Che, Zhaoxi Zhang, Yan Wang, Xin Wang, Luwen Pu, Huinan Xu, Ruiyu Fang, Yu Zhao, Jie Zhang, Xiaomeng Huang, Zhilong Lu, Jiaxin Peng, Wenjun Zheng, Shiquan Wang, Bingkai Yang, Xuewei he, Zhuoru Jiang, Qiyi Xie, Yanhan Zhang, Zhongqiu Li, Lingling Shi, Weiwei Fu, Yin Zhang, Zilu Huang, Sishi Xiong, Yuxiang Zhang, Chao Wang, Shuangyong Song",2024-04-01,TELECHAT TECHNICAL REPORT,https://arxiv.org/pdf/2401.03804,,,,7000000000.0,,,,,"80 nodes, each having 8 Nvidia A100 Sxm 40GB GPUs",,,1000000000000.0,,,,,NVIDIA A100 SXM4 40 GB,640.0,,,,,,Unverified,2025-01-16 23:08:47+00:00,,,,,,,,,,
TeleChat-3B,,,,"Zhongjiang He, Zihan Wang, Xinzhang Liu, Shixuan Liu, Yitong Yao, Yuyao Huang, Xuelong Li, Yongxiang Li, Zhonghao Che, Zhaoxi Zhang, Yan Wang, Xin Wang, Luwen Pu, Huinan Xu, Ruiyu Fang, Yu Zhao, Jie Zhang, Xiaomeng Huang, Zhilong Lu, Jiaxin Peng, Wenjun Zheng, Shiquan Wang, Bingkai Yang, Xuewei he, Zhuoru Jiang, Qiyi Xie, Yanhan Zhang, Zhongqiu Li, Lingling Shi, Weiwei Fu, Yin Zhang, Zilu Huang, Sishi Xiong, Yuxiang Zhang, Chao Wang, Shuangyong Song",2024-04-01,TELECHAT TECHNICAL REPORT,https://arxiv.org/pdf/2401.03804,,,,3000000000.0,,,,,"80 nodes, each having 8 Nvidia A100 Sxm 40GB GPUs",,,800000000000.0,,,,,NVIDIA A100 SXM4 40 GB,640.0,,,,,,Unverified,2025-01-16 23:08:48+00:00,,,,,,,,,,
Wutong 2.0,,,,,2024-04-01,"「装备大模型化」落地破圈！AI技术的一次自证与他证
",https://news.qq.com/rain/a/20241022A077IC00,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
TeleChat-12B,,,,"Zhongjiang He, Zihan Wang, Xinzhang Liu, Shixuan Liu, Yitong Yao, Yuyao Huang, Xuelong Li, Yongxiang Li, Zhonghao Che, Zhaoxi Zhang, Yan Wang, Xin Wang, Luwen Pu, Huinan Xu, Ruiyu Fang, Yu Zhao, Jie Zhang, Xiaomeng Huang, Zhilong Lu, Jiaxin Peng, Wenjun Zheng, Shiquan Wang, Bingkai Yang, Xuewei he, Zhuoru Jiang, Qiyi Xie, Yanhan Zhang, Zhongqiu Li, Lingling Shi, Weiwei Fu, Yin Zhang, Zilu Huang, Sishi Xiong, Yuxiang Zhang, Chao Wang, Shuangyong Song",2024-04-01,TELECHAT TECHNICAL REPORT,https://arxiv.org/pdf/2401.03804,10.0,,,12000000000.0,,,,,"80 nodes, each having 8 Nvidia A100 Sxm 40GB GPUs",,,1200000000000.0,,,,,NVIDIA A100 SXM4 40 GB,640.0,,,,,,Unverified,2025-01-16 23:08:49+00:00,,,,,,,,,,
ReALM,Language,Apple,Industry,"Joel Ruben Antony Moniz, Soundarya Krishnan, Melis Ozyildirim, Prathamesh Saraf, Halim Cagri Ates, Yuan Zhang, Hong Yu, Nidhi Rajshree",2024-03-29,ReALM: Reference Resolution As Language Modeling,https://arxiv.org/abs/2403.20329,,SOTA improvement,"""We show that ReaLM outperforms previous approaches, and performs roughly as well as the state-of-the-art LLM today, GPT-4, despite consisting of far fewer parameters.""

""We also benchmark against GPT-3.5 and GPT-4, with our smallest model achieving performance comparable to that of GPT-4, and our larger models substantially outperforming it.""",3000000000.0,Fine-tuned FLAN-T5 models ranging from 80M to 3B,,,,Fine-tuned from FLAN-T5,,"Mix of synthetic and manually annotated data. 

""Each data point contains the user query and a list of entities, along with the ground-truth entity (or set of entities) that are relevant to the corresponding user query. Each entity, in turn, contains information about its type and other properties such as the name and other textual details associated with the entity (the label and time of an alarm, for example)""",16300.0,2300 training examples from conversation; 3900 synthetically generated training examples; 10100 training examples using context from a phone screen.,,,,,,Supervised,"Reference resolution is an important problem, one that is essential to understand and successfully handle context of different kinds. This context includes both previous turns and context that pertains to non-conversational entities, such as entities on the user's screen or those running in the background. While LLMs have been shown to be extremely powerful for a variety of tasks, their use in reference resolution, particularly for non-conversational entities, remains underutilized. This paper demonstrates how LLMs can be used to create an extremely effective system to resolve references of various types, by showing how reference resolution can be converted into a language modeling problem, despite involving forms of entities like those on screen that are not traditionally conducive to being reduced to a text-only modality. We demonstrate large improvements over an existing system with similar functionality across different types of references, with our smallest model obtaining absolute gains of over 5% for on-screen references. We also benchmark against GPT-3.5 and GPT-4, with our smallest model achieving performance comparable to that of GPT-4, and our larger models substantially outperforming it.",,Unreleased,,Confident,2024-09-05 18:08:31+00:00,United States of America,Flan-T5 11B,,No training details given,,,,,,
Voice Engine,"Audio,Speech",OpenAI,Industry,,2024-03-29,Navigating the Challenges and Opportunities of Synthetic Voices,https://openai.com/blog/navigating-the-challenges-and-opportunities-of-synthetic-voices,,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Grok-1.5,Language,xAI,Industry,,2024-03-28,"Introducing Grok-1.5, our latest model capable of long context understanding and advanced reasoning. Grok-1.5 will be available to our early testers and existing Grok users on the 𝕏 platform in the coming days.",https://x.ai/blog/grok-1.5,,,,,,,2.90000000001e+24,,,,,,,,,,,,,,,Hosted access (no API),,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,Oracle,,,,,
Grok-1.5V,"Multimodal,Language,Vision",xAI,Industry,,2024-03-28,"Introducing Grok-1.5V, our first-generation multimodal model. In addition to its strong text capabilities, Grok can now process a wide variety of visual information, including documents, diagrams, charts, screenshots, and photographs. Grok-1.5V will be available soon to our early testers and existing Grok users.",https://x.ai/blog/grok-1.5v,,,,,,,2.90000000001e+24,,,,,,,,,,,,,,,Hosted access (no API),,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,Oracle,,,,,
YandexGPT 3,Language,Yandex,Industry,,2024-03-28,,https://ya.ru/ai/gpt-3,,,,,,,,,,,,,,,,,,,,,,API access,,Unknown,2024-09-24 15:52:14+00:00,Russia,,,,,,,,,
Jamba,Language,AI21 Labs,Industry,"Opher Lieber, Barak Lenz, Hofit Bata, Gal Cohen, Jhonathan Osin, Itay Dalmedigos, Erez Safahi, Shaked Meirom, Yonatan Belinkov, Shai Shalev-Shwartz, Omri Abend, Raz Alon, Tomer Asida, Amir Bergman, Roman Glozman, Michael Gokhman, Avashalom Manevich, Nir Ratner, Noam Rozen, Erez Shwartz, Mor Zusman, Yoav Shoham",2024-03-28,Jamba: A Hybrid Transformer-Mamba Language Model,https://arxiv.org/abs/2403.19887,,,,51600000000.0,"51.6B from https://huggingface.co/ai21labs/Jamba-v0.1
(12B active parameters, 52B total available parameters)",,,,,Unspecified unreleased,"Jamba is trained on an in-house dataset that contains text data from the Web, books, and code, with the last update in March 2024.",,,,,,NVIDIA H100 SXM5 80GB,,,"We present Jamba, a new base large language model based on a novel hybrid Transformer-Mamba mixture-of-experts (MoE) architecture. Specifically, Jamba interleaves blocks of Transformer and Mamba layers, enjoying the benefits of both model families. MoE is added in some of these layers to increase model capacity while keeping active parameter usage manageable. This flexible architecture allows resource- and objective-specific configurations. In the particular configuration we have implemented, we end up with a powerful model that fits in a single 80GB GPU. Built at large scale, Jamba provides high throughput and small memory footprint compared to vanilla Transformers, and at the same time state-of-the-art performance on standard language model benchmarks and long-context evaluations. Remarkably, the model presents strong results for up to 256K tokens context length. We study various architectural decisions, such as how to combine Transformer and Mamba layers, and how to mix experts, and show that some of them are crucial in large scale modeling. We also describe several interesting properties of these architectures which the training and evaluation of Jamba have revealed, and plan to release checkpoints from various ablation runs, to encourage further exploration of this novel architecture. We make the weights of our implementation of Jamba publicly available under a permissive license.",,Open weights (unrestricted),,Confident,2025-02-05 23:13:06+00:00,Israel,,,,,,,,,
DBRX,Language,Databricks,Industry,Mosaic Research Team,2024-03-27,Introducing DBRX: A New State-of-the-Art Open LLM,https://www.databricks.com/blog/introducing-dbrx-new-state-art-open-llm,,Training cost,,132000000000.0,132B mixture of experts. 36B parameters active per inference,2.6e+24,,,"Mixture of Experts (MoE)

36 billion active params * 12 trillion tokens * 6 ~= 2.6e24
https://www.wolframalpha.com/input?i=6+FLOP+*+36+billion+*+12+trillion

also, it was trained on 3072 NVIDIA H100s, but with an unclear timeframe (end-end process was three months, including evals and red-teaming).",,"12T tokens, text and code

""It was pre-trained on 12T tokens of text and code data...

DBRX was pretrained on 12T tokens of carefully curated data and a maximum context length of 32k tokens. We estimate that this data is at least 2x better token-for-token than the data we used to pretrain the MPT family of models""

from HF: https://huggingface.co/databricks/dbrx-base

The training mix used for DBRX contains both natural-language and code examples. The vast majority of our training data is in the English language",9000000000000.0,"12T tokens is equivalent to 9T words. Though it includes code data, so not very literally 9T words",1.0,,,NVIDIA H100 SXM5 80GB,,,"Today, we are excited to introduce DBRX, an open, general-purpose LLM created by Databricks. Across a range of standard benchmarks, DBRX sets a new state-of-the-art for established open LLMs. Moreover, it provides the open community and enterprises building their own LLMs with capabilities that were previously limited to closed model APIs; according to our measurements, it surpasses GPT-3.5, and it is competitive with Gemini 1.0 Pro. It is an especially capable code model, surpassing specialized models like CodeLLaMA-70B on programming, in addition to its strength as a general-purpose LLM.",,Open weights (restricted use),,Confident,2024-12-19 20:34:11+00:00,United States of America,,,,,,,,,
AInno-75B 2.0,,,,,2024-03-27,大模型为工业智能化按下“加速键”,https://www.stdaily.com/index/kejixinwen/202403/0b007a7b6ed04d4e812ddfa6fe4dd601.shtml,,,,75000000000.0,,,,,,,,,,,,,,,,"After this upgrade, the number of parameters of the industrial large model has reached more than 75 billion, achieving a new breakthrough. It has not only consolidated industrial knowledge question and answer, data analysis, code generation, task scheduling, etc., but also enhanced the capabilities in massive knowledge management, complex logical reasoning, long-process task scheduling, and Agent intelligence.",,,,Unverified,,,,,,,,,,,
ProstT5,Biology,"Technical University of Munich,Seoul National University,Institute for Advanced Study,TUM School of Life Sciences Weihenstephan","Academia,Academia,Academia,Academia","Michael Heinzinger, Konstantin Weissenow, Joaquin Gomez Sanchez, Adrian Henkel, Milot Mirdita, Martin Steinegger, Burkhard Rost",2024-03-24,Bilingual Language Model for Protein Sequence and Structure,https://www.biorxiv.org/content/10.1101/2023.07.23.550085v2.abstract,50.0,,,,,3.09999999999999e+21,,,"1. Hardware setup: 8x NVIDIA A100 GPUs (3.12e14 FLOP/s per GPU)

2. Training duration: Directly provided - 36 days total (10 days pre-training + 26 days translation training) = 3,110,400 seconds

3. Utilization rate: 40%

4. Final calculation:
3.12e14 FLOP/s × 8 GPUs × 3,110,400s × 0.4 = 3.1e21 FLOPs",,,8100000000.999997,"Number of samples = 34M
Tokens per sequence = 238
Total = 34,000,000 × 238 = 8,092,000,000 tokens ≈ 8.1B",,,,,,,"Adapting large language models (LLMs) to protein sequences spawned the development of powerful
protein language models (pLMs). Concurrently, AlphaFold2 broke through in protein structure prediction.
Now we can systematically and comprehensively explore the dual nature of proteins that act and exist
as three-dimensional (3D) machines and evolve as linear strings of one-dimensional (1D) sequences.
Here, we leverage pLMs to simultaneously model both modalities by combining 1D sequences with 3D
structure in a single model. We encode protein structures as token sequences using the 3Di-alphabet
introduced by the 3D-alignment method Foldseek. This new foundation pLM extracts the features and
patterns of the resulting “structure-sequence” representation. Toward this end, we built a non-redundant
dataset from AlphaFoldDB and fine-tuned an existing pLM (ProtT5) to translate between 3Di and amino
acid sequences. As a proof-of-concept for our novel approach, dubbed Protein structure-sequence T5
(ProstT5), we showed improved performance for subsequent prediction tasks, and for “inverse folding”,
namely the generation of novel protein sequences adopting a given structural scaffold (“fold”). Our work
showcased the potential of pLMs to tap into the information-rich protein structure revolution fueled by
AlphaFold2. ProstT5 paves the way to develop new tools integrating the vast resource of 3D predictions,
and opens new research avenues in the post-AlphaFold2 era. Our model is freely available for all at
https://github.com/mheinzinger/ProstT5.",,,,Unverified,2025-02-14 19:25:36+00:00,"Germany,Korea (Republic of),United States of America,Germany",,,,,,,,,
CrossBind,Biology,"Shanghai AI Lab,Fudan University,Loughborough University,Chinese University of Hong Kong (CUHK),Shanghai Jiao Tong University","Academia,Academia,Academia,Academia,Academia","Linglin Jing, Sheng Xu, Yifan Wang, Yuzhe Zhou, Tao Shen, Zhigang Ji, Hui Fang, Zhen Li, Siqi Sun",2024-03-24,CrossBind: Collaborative Cross-Modal Identification of Protein Nucleic-Acid-Binding Residues,https://ojs.aaai.org/index.php/AAAI/article/view/28044,,,,,,,,,,,,320001.0000000001,"Total Proteins = 573 + 495 = 1068
Datapoints = 1068 x 300 = 320,400
Final result = 3.2e5",,,,,,,"Accurate identification of protein nucleic acid binding residues poses a significant challenge with important implications for various biological processes and drug design. Many typical computational methods for protein analysis rely on a single model that could ignore either the semantic context of the protein or the global 3D geometric information. Consequently, these approaches may result in incomplete or inaccurate protein analysis. To address the above issue, in this paper, we present CrossBind, a novel collaborative cross modal approach for identifying binding residues by exploiting both protein geometric structure and its sequence prior knowledge extracted from a large scale protein language model. Specifically, our multi modal approach leverages a contrastive learning technique and atom wise attention to capture the positional relationships between atoms and residues, thereby incorporating fine grained local geometric knowledge, for better binding residue prediction. Extensive experimental results demonstrate that our approach outperforms the next best state of the art methods, GraphSite and GraphBind, on DNA and RNA datasets by 10.8/17.3% in terms of the harmonic mean of precision and recall (F1 Score) and 11.9/24.8% in Matthews correlation coefficient (MCC), respectively. We release the code at https://github.com/BEAM-Labs/CrossBind.",,,,Unverified,2025-01-30 05:05:03+00:00,"China,China,United Kingdom of Great Britain and Northern Ireland,Hong Kong,China,China",,,,,,,,,
BindDM,Biology,"Peng Cheng Laboratory,Peking University,University of Science and Technology of China,ByteDance,Tsinghua University","Academia,Academia,Academia,Industry,Academia","Zhilin Huang, Ling Yang, Zaixi Zhang, Xiangxin Zhou, Yu Bao, Xiawu Zheng, Yuwei Yang, Yu Wang, Wenming Yang",2024-03-24,Binding-Adaptive Diffusion Models for Structure-Based Drug Design,https://ojs.aaai.org/index.php/AAAI/article/view/29162,4.0,,,,,,,,,,,100001.00000000006,"100,000 protein-ligand pairs

Total datapoints = 100,000
Final result = 1.0e5",,,,,,,"Structure-based drug design (SBDD) aims to generate 3D ligand molecules that bind to specific protein targets. Existing 3D deep generative models including diffusion models have shown great promise for SBDD. However, it is complex to capture the essential protein-ligand interactions exactly in 3D space for molecular generation. To address this problem, we propose a novel framework, namely Binding-Adaptive Diffusion Models (BindDM). In BindDM, we adaptively extract subcomplex, the essential part of binding sites responsible for protein-ligand interactions. Then the selected protein-ligand subcomplex is processed with SE(3)-equivariant neural networks, and transmitted back to each atom of the complex for augmenting the target-aware 3D molecule diffusion generation with binding interaction information. We iterate this hierarchical complex-subcomplex process with cross-hierarchy interaction node for adequately fusing global binding context between the complex and its corresponding subcomplex. Empirical studies on the CrossDocked2020 dataset show BindDM can generate molecules with more realistic 3D structures and higher binding affinities towards the protein targets, with up to -5.92 Avg. Vina Score, while maintaining proper molecular properties. Our code is available at https://github.com/YangLing0818/BindDM",,,,Unverified,2025-01-30 05:05:07+00:00,"China,China,China,China,China",,,,,,,,,
Suno v3,Audio,Suno,Industry,,2024-03-21,"Create full, two-minute songs in seconds with v3",https://suno.com/blog/v3,,,,,,,,,,,,,,,,,,,,"At Suno, we are building a future where anyone can make music. You can make a song for any moment in any major language with just a few short words. Award-winning artists use Suno, but our core user base consists of everyday people making music — often for the first time.

Today, we are excited to introduce v3, our first model capable of producing radio-quality music. v3 enables you to make full, two-minute songs in seconds and is now available to all users at https://app.suno.ai. Make your own song with v3 today!",,Hosted access (no API),,Unknown,2024-11-06 23:56:15+00:00,United States of America,,,,,,,,,
Qiyuan 3.0,,,,,2024-03-20,"安全领域效果超越GPT4 360安全大模型3.0发布
",https://www.stdaily.com/index/kejixinwen/202403/976fc5638b0c4323b19c6e4349dacfa5.shtml,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
MiniGPT4 + LRV-Instruction,"Language,Vision,Multimodal","University of Maryland,Microsoft","Academia,Industry","Fuxiao Liu, Kevin Lin, Linjie Li, Jianfeng Wang, Yaser Yacoob, Lijuan Wang",2024-03-19,Mitigating Hallucination in Large Multi-Modal Models via Robust Instruction Tuning,https://arxiv.org/abs/2306.14565,,,,7000000000.0,7B (Table 3),,,,,,"We build LRV-Instruction, a large and diverse dataset containing 400k visual instructions, with 16 vision and language tasks and negative instructions in different semantic levels and styles.

we leverage GPT4, instead of human workers, to build LRV-Instruction",4840000.0,"Figure 4:
400k instructions
Ave Instruction Length 12.1

12.1*400000=4840000",,,,NVIDIA Quadro RTX 8000,,,"Despite the promising progress in multi-modal tasks, current large multi-modal models (LMMs) are prone to hallucinating inconsistent descriptions with respect to the associated image and human instructions. This paper addresses this issue by introducing the first large and diverse visual instruction tuning dataset, named Large-scale Robust Visual (LRV)-Instruction. Our dataset comprises 400k visual instructions generated by GPT4, covering 16 vision-and-language tasks with open-ended instructions and answers. Unlike existing studies that primarily focus on positive instruction samples, we design LRV-Instruction to include both positive and negative instructions for more robust visual instruction tuning. Our negative instructions are designed at three semantic levels: (i) Nonexistent Object Manipulation, (ii) Existent Object Manipulation and (iii) Knowledge Manipulation. To efficiently measure the hallucination generated by LMMs, we propose GPT4-Assisted Visual Instruction Evaluation (GAVIE), a stable approach to evaluate visual instruction tuning like human experts. GAVIE does not require human-annotated groundtruth answers and can adapt to diverse instruction formats. We conduct comprehensive experiments to investigate the hallucination of LMMs. Our results demonstrate existing LMMs exhibit significant hallucinations when presented with our negative instructions, particularly Existent Object and Knowledge Manipulation instructions. Moreover, we successfully mitigate hallucination by finetuning MiniGPT4 and mPLUG-Owl on LRV-Instruction while improving performance on several public datasets compared to state-of-the-art methods. Additionally, we observed that a balanced ratio of positive and negative instances in the training data leads to a more robust model. Code and data are available at this https URL.",,Open weights (unrestricted),,Speculative,2024-12-02 15:24:32+00:00,"United States of America,United States of America",MiniGPT4 (Vicuna finetune),2e+17,6ND = 6*7B*4840000=203280000*10^9=2*10^17,,,,,,
JetFire (GPT2-LARGE),Language,Tsinghua University,Academia,"Haocheng Xi, Yuxiang Chen, Kang Zhao, Kaijun Zheng, Jianfei Chen, Jun Zhu",2024-03-19,Jetfire: Efficient and Accurate Transformer Pretraining with INT8 Data Flow and Per-Block Quantization,https://arxiv.org/abs/2403.12422v1,,,,774000000.0,Table 4.,,,,,OPENWEBTEXT,"We evaluate our method by training three GPT2 (Radford et al., 2019) models with different sizes: GPT2-base for 300k steps, GPT2-medium for 200k steps, and GPT2-large for 120k steps on the OpenWebText (Peterson et al., 2019) dataset based on NanoGPT3 (Hyperparameters: Learning Rate = 1.5 × 10−4, Weight Decay = 10−1). We report the validation loss and the fine tuning average accuracy on the GLUE (Wang et al., 2018a) dataset over 3 seeds. The results are shown in Table 4.",,,,,,NVIDIA GeForce RTX 4090,,,"Pretraining transformers are generally time-consuming. Fully quantized training (FQT) is a promising approach to speed up pretraining. However, most FQT methods adopt a quantize-compute-dequantize procedure, which often leads to suboptimal speedup and significant performance degradation when used in transformers due to the high memory access overheads and low-precision computations. In this work, we propose Jetfire, an efficient and accurate INT8 training method specific to transformers. Our method features an INT8 data flow to optimize memory access and a per-block quantization method to maintain the accuracy of pretrained transformers. Extensive experiments demonstrate that our INT8 FQT method achieves comparable accuracy to the FP16 training baseline and outperforms the existing INT8 training works for transformers. Moreover, for a standard transformer block, our method offers an end-to-end training speedup of 1.42x and a 1.49x memory reduction compared to the FP16 baseline.",,,,Confident,2024-12-10 19:19:04+00:00,China,,,,,,,,,
Stable Video 3D (SV3D),"Vision,3D modeling",Stability AI,Industry,"Vikram Voleti, Chun-Han Yao, Mark Boss, Adam Letts, David Pankratz, Dmitry Tochilkin, Christian Laforte, Robin Rombach, Varun Jampani",2024-03-18,SV3D: Novel Multi-view Synthesis and 3D Generation from a Single Image using Latent Video Diffusion,https://arxiv.org/abs/2403.12008,,,,,,5.1757056e+20,,,4*8*144*3600*312000000000000*0.3 / 3 models = 5.1757056e+20,Objaverse,"Training Dataset
We use renders from the Objaverse dataset, utilizing our enhanced rendering method that more closely replicate the distribution of images found in the real world, significantly improving our model’s ability to generalize. We selected a carefully curated subset of the Objaverse dataset for the training data, which is available under the CC-BY license.",,"""All three models (SV3Du, SV3Dc, SV3Dp) are trained for 105k iterations in
total (SV3Dp is trained unconditionally for 55k iterations and conditionally for 50k iterations), with an effective batch size of 64 on 4 nodes of 8 80GB A100 GPUs for around 6 days.""",,144.0,"""on 4 nodes of 8 80GB A100 GPUs for around 6 days.""

6*24 = 144 hours",NVIDIA A100 SXM4 80 GB,,,"We present Stable Video 3D (SV3D) -- a latent video diffusion model for high-resolution, image-to-multi-view generation of orbital videos around a 3D object. Recent work on 3D generation propose techniques to adapt 2D generative models for novel view synthesis (NVS) and 3D optimization. However, these methods have several disadvantages due to either limited views or inconsistent NVS, thereby affecting the performance of 3D object generation. In this work, we propose SV3D that adapts image-to-video diffusion model for novel multi-view synthesis and 3D generation, thereby leveraging the generalization and multi-view consistency of the video models, while further adding explicit camera control for NVS. We also propose improved 3D optimization techniques to use SV3D and its NVS outputs for image-to-3D generation. Extensive experimental results on multiple datasets with 2D and 3D metrics as well as user study demonstrate SV3D's state-of-the-art performance on NVS as well as 3D reconstruction compared to prior works.",,Open weights (non-commercial),,Confident,2024-10-26 19:34:47+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
ERNIE-RNA,Biology,"Microsoft Research,Syngentech,Tsinghua University","Industry,Industry,Academia","Weijie Yin, Zhaoyu Zhang, Liang He, Rui Jiang, Shuo Zhang, Gan Liu, Xuegong Zhang, Tao Qin, Zhen Xie",2024-03-17,ERNIE-RNA: An RNA Language Model with Structure-enhanced Representations,https://www.biorxiv.org/content/10.1101/2024.03.17.585376v1.abstract,3.0,,,,,2.1000000000000013e+21,,,"1. Hardware: 24x V100 32GB GPUs (1.30e+14 FLOPs/s per GPU)
2. Training duration: 20 days (directly provided) = 1.728e+6 seconds
3. Utilization: 40%
4. Calculation: 
   24 GPUs × 1.30e+14 FLOPs/s × 1.728e+6 seconds × 0.4 utilization = 2.1e+21 FLOPs",,,20900000001.00002,"Number of sequences (20.4M) × Maximum sequence length (1024) = 20,400,000 × 1,024 = 20,889,600,000 ≈ 2.09e10 datapoints",,,,,,,"With large amounts of unlabeled RNA sequences data produced by high-throughput sequencing technologies, pre-trained RNA language models have been developed to estimate semantic space of RNA molecules, which facilities the understanding of grammar of RNA language. However, existing RNA language models overlook the impact of structure when modeling the RNA semantic space, resulting in incomplete feature extraction and suboptimal performance across various downstream tasks. In this study, we developed a RNA pre-trained language model named ERNIE-RNA (Enhanced Representations with base-pairing restriction for RNA modeling) based on a modified BERT (Bidirectional Encoder Representations from Transformers) by incorporating base-pairing restriction with no MSA (Multiple Sequence Alignment) information. We found that the attention maps from ERNIE-RNA with no fine-tuning are able to capture RNA structure in the zero-shot experiment more precisely than conventional methods such as fine-tuned RNAfold and RNAstructure, suggesting that the ERNIE-RNA can provide comprehensive RNA structural representations. Furthermore, ERNIE-RNA achieved SOTA (state-of-the-art) performance after fine-tuning for various downstream tasks, including RNA structural and functional predictions. In summary, our ERNIE-RNA model provides general features which can be widely and effectively applied in various subsequent research tasks. Our results indicate that introducing key knowledge-based prior information in the BERT framework may be a useful strategy to enhance the performance of other language models.",,,,Unverified,2025-02-14 19:25:55+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,China,China",,,,,,,,,
"PocketVec
",Biology,"Barcelona Institute of Science and Technology,Universitat de Barcelona,Institució Catalana de Recerca i Estudis Avançats (ICREA)",Academia,"Arnau Comajuncosa-Creus, Guillem Jorba, Xavier Barril, Patrick Aloy",2024-03-16,Comprehensive detection and characterization of human druggable pockets through binding site descriptors,https://www.biorxiv.org/content/10.1101/2024.03.14.584971v1.abstract,,,,,,,,,,,,1.0,"0.0

Final calculation: 0.0
(No additions or multiplications performed as there is no training data involved)",,,,,,,"Druggable pockets are protein regions that have the ability to bind organic small molecules, and their characterization is essential in target-based drug discovery. However, strategies to derive pocket descriptors are scarce and usually exhibit limited applicability. Here, we present PocketVec, a novel approach to generate pocket descriptors for any protein binding site of interest through the inverse virtual screening of lead-like molecules. We assess the performance of our descriptors in a variety of scenarios, showing that it is on par with the best available methodologies, while overcoming some important limitations. In parallel, we systematically search for druggable pockets in the folded human proteome, using experimentally determined protein structures and AlphaFold2 models, identifying over 32,000 binding sites in more than 20,000 protein domains. Finally, we derive PocketVec descriptors for each small molecule binding site and run an all-against-all similarity search, exploring over 1.2 billion pairwise comparisons. We show how PocketVec descriptors facilitate the identification of druggable pocket similarities not revealed by structure- or sequence-based comparisons. Indeed, our analyses unveil dense clusters of similar pockets in distinct proteins for which no inhibitor has yet been crystalized, opening the door to strategies to prioritize the development of chemical probes to cover the druggable space.

",,,,Unverified,2025-01-30 05:04:56+00:00,"Spain,Spain,Spain",,,,,,,,,
MM1-30B,"Multimodal,Language,Vision",Apple,Industry,"Brandon McKinzie, Zhe Gan, Jean-Philippe Fauconnier, Sam Dodge, Bowen Zhang, Philipp Dufter, Dhruti Shah, Xianzhi Du, Futang Peng, Floris Weers, Anton Belyi, Haotian Zhang, Karanjeet Singh, Doug Kang, Ankur Jain, Hongyu Hè, Max Schwarzer, Tom Gunter, Xiang Kong, Aonan Zhang, Jianyu Wang, Chong Wang, Nan Du, Tao Lei, Sam Wiseman, Guoli Yin, Mark Lee, Zirui Wang, Ruoming Pang, Peter Grasch, Alexander Toshev, Yinfei Yang",2024-03-14,"MM1: Methods, Analysis & Insights from Multimodal LLM Pre-training",https://arxiv.org/abs/2403.09611,122.0,SOTA improvement,""" In particular, the pretrained model MM1 is SOTA, performing better than Emu2 [105], Flamingo [3],
and IDEFICS [47] on captioning and visual question answering (VQA) tasks
in few-shot settings, both in small and large size regimes""

Table 4: outperforms Gemini and GPT-4V on VQA",30000000000.0,30B,4.86e+23,,,"Pre-trained on ~2B image-text pairs and 2T tokens (Table 2). Each image is 144 tokens, so the images are ~300B tokens.
Then additional multimodal training for 400B tokens, for a total of ~2.7T tokens.

This is the final training recipe: ""We initialize both the image encoder and the underlying LLM decoder weights for MM1 from in-house pre-trained models2. We then perform multimodal pre-training on the above data mix for 200k steps (approx. 400B tokens).""

Compute  = 6ND = 6 * 2.7 trillion * 30 billion = 4.86e23

maybe the size of the visual connector is relevant","Conceptual Captions (CC3M),Conceptual Captions 12M (CC12M),COYO-700M,Unspecified unreleased,OBELICS","Text, captioned images. See Table 2",1500000000000.0,at least 2T tokens,,,,,,,"In this work, we discuss building performant Multimodal Large Language Models (MLLMs). In particular, we study the importance of various architecture components and data choices. Through careful and comprehensive ablations of the image encoder, the vision language connector, and various pre-training data choices, we identified several crucial design lessons. For example, we demonstrate that for large-scale multimodal pre-training using a careful mix of image-caption, interleaved image-text, and text-only data is crucial for achieving state-of-the-art (SOTA) few-shot results across multiple benchmarks, compared to other published pre-training results. Further, we show that the image encoder together with image resolution and the image token count has substantial impact, while the vision-language connector design is of comparatively negligible importance. By scaling up the presented recipe, we build MM1, a family of multimodal models up to 30B parameters, including both dense models and mixture-of-experts (MoE) variants, that are SOTA in pre-training metrics and achieve competitive performance after supervised fine-tuning on a range of established multimodal benchmarks. Thanks to large-scale pre-training, MM1 enjoys appealing properties such as enhanced in-context learning, and multi-image reasoning, enabling few-shot chain-of-thought prompting.",,Unreleased,,Likely,2025-02-14 19:36:42+00:00,United States of America,,,,,,,,,
Command R,Language,"Cohere,Cohere for AI","Industry,Industry",,2024-03-11,,https://cohere.com/blog/command-r,,,,35000000000.0,https://huggingface.co/CohereForAI/c4ai-command-r-v01,,,,,Unspecified unreleased,,,,,,,,,,"Today, we are introducing Command R, a new LLM aimed at large-scale production workloads. Command R targets the emerging “scalable” category of models that balance high efficiency with strong accuracy, enabling companies to move beyond proof of concept, and into production.

Command R is a generative model optimized for long context tasks such as retrieval-augmented generation (RAG) and using external APIs and tools. It is designed to work in concert with our industry-leading Embed and Rerank models to provide best-in-class integration for RAG applications and excel at enterprise use cases. As a model built for companies to implement at scale, Command R boasts: 
- Strong accuracy on RAG and Tool Use
- Low latency, and high throughput
- Longer 128k context and lower pricing
- Strong capabilities across 10 key languages
- Model weights available on HuggingFace for research and evaluation",,Open weights (non-commercial),,Confident,2025-02-05 23:02:46+00:00,"Canada,Multinational,Canada",,,,,,,,,True
RFM-1,"Robotics,Vision,Video",Covariant,Industry,"Andrew Sohn, Anusha Nagabandi, Carlos Florensa, Daniel Adelberg, Di Wu, Hassan Farooq, Ignasi Clavera, Jeremy Welborn, Juyue Chen, Nikhil Mishra, Peter Chen, Peter Qian, Pieter Abbeel, Rocky Duan, Varun Vijay, Yang Liu",2024-03-11,Introducing RFM-1: Giving robots human-like reasoning capabilities,https://covariant.ai/insights/introducing-rfm-1-giving-robots-human-like-reasoning-capabilities/,,,,8000000000.0,8b,2.4e+20,,,"6*5000000000*8*10^9 = 2.4e+20

I am not confident about amount of epochs and whether the model is dense",,,5000000000.0,"from here https://covariant.ai/insights/rfm-1-update-higher-quality-grasp-accuracy/

5*10^9 tokens",,,,,,,"What is RFM-1
Set up as a multimodal any-to-any sequence model, RFM-1 is an 8 billion parameter transformer trained on text, images, videos, robot actions, and a range of numerical sensor readings.

By tokenizing all modalities into a common space and performing autoregressive next-token prediction, RFM-1 uses its broad range of input and output modalities to enable diverse applications.

For example, it can perform image-to-image learning for scene analysis tasks like segmentation and identification. It can combine text instructions with image observations to generate desired grasp actions or motion sequences. It can pair a scene image with a targeted grasp image to predict outcomes as videos or simulate the numerical sensor readings that would occur along the way.",,,,Likely,2024-12-02 18:49:57+00:00,United States of America,,,,,,,,,
HAM-TTS,,Geely Automobile Research Institute (Ningbo) Company,Industry,,2024-03-09,,https://arxiv.org/pdf/2403.05989,,,,,,,,,,,,,,,,,NVIDIA A100,,,,,,,Unverified,2024-12-19 02:34:06+00:00,China,,,,,,,,,
Inflection-2.5,Language,Inflection AI,Industry,,2024-03-07,Inflection-2.5: meet the world's best personal AI,https://inflection.ai/inflection-2-5,,Significant use,one million daily users; six million monthly,,,1.0001e+25,,,"""Inflection-1 used approximately 4% the training FLOPs of GPT-4 and, on average, performed at approximately 72% GPT-4 level on a diverse range of IQ-oriented tasks. Inflection-2.5, now powering Pi, achieves more than 94% the average performance of GPT-4 despite using only 40% the training FLOPs.""

This is a weird one - we estimated GPT-4 at 2.1e25 FLOP (which could be off somewhat, or Inflection could believe a different number). 40% of that is ~8e24. But Inflection 2, the previous model, was trained on ~1e25 FLOP per Inflection. Inflection-2.5 also does better on benchmarks than 2. Intuitively Inflection-2.5 would be trained on appreciably more compute. 

1e25 seems like a rough, perhaps conservative guess given all this.",,,,,,,,NVIDIA H100 SXM5 80GB,,,"At Inflection, our mission is to create a personal AI for everyone. Last May, we released Pi—a personal AI, designed to be empathetic, helpful, and safe. In November we announced a new major foundation model, Inflection-2, the second best LLM in the world at the time.

Now we are adding IQ to Pi’s exceptional EQ.

We are launching Inflection-2.5, our upgraded in-house model that is competitive with all the world's leading LLMs like GPT-4 and Gemini. It couples raw capability with our signature personality and unique empathetic fine-tuning. Inflection-2.5 is available to all Pi's users today, at pi.ai, on iOS, on Android, or our new desktop app.",,Hosted access (no API),,Speculative,2025-02-19 18:35:34+00:00,United States of America,,,,,,,,,
BaseFold,Biology,Basecamp Research,,"Geraldene Munsamy, Tanggis Bohnuud, Philipp Lorenz",2024-03-06,IMPROVING ALPHAFOLD2 PERFORMANCE WITH A GLOBAL METAGENOMIC & BIOLOGICAL DATA SUPPLY CHAIN,https://www.biorxiv.org/content/10.1101/2024.03.06.583325v1,,,,,,,,,,BRD (Basecamp Research Data),,300000000001.0002,"Number of Sequences (1 x 10⁹) × Average Residues per Sequence (300) = 3 × 10¹¹ datapoints

Final estimate: 3 × 10¹¹",,,,NVIDIA A100,,,"Scaling laws suggest that more than a trillion species inhabit our planet but only a miniscule and unrepresentative fraction (less than 0.00001%) have been studied or sequenced to date. Deep learning models, including those applied to tasks in the life sciences, depend on the quality and size of training or reference datasets. Given the large knowledge gap we experience when it comes to life on earth, we present a data-centric approach to improving deep learning models in Biology: We built partnerships with nature parks and biodiversity stakeholders across 5 continents covering 50% of global biomes, establishing a global metagenomics and biological data supply chain. With higher protein sequence diversity captured in this dataset compared to existing public data, we apply this data advantage to the protein folding problem by MSA supplementation during inference of AlphaFold2. Our model, BaseFold, exceeds traditional AlphaFold2 performance across targets from the CASP15 and CAMEO, 60% of which show improved pLDDT scores and RMSD values being reduced by up to 80%. On top of this, the improved quality of the predicted structures can yield better docking results. By sharing benefits with the stakeholders this data originates from, we present a way of simultaneously improving deep learning models for biology and incentivising protection of our planet’s biodiversity.",,,,Unknown,2025-01-30 05:04:15+00:00,United Kingdom of Great Britain and Northern Ireland,AlphaFold 2,,,,,,,,
GroundingGPT,"Multimodal,Language,Video,Vision,Speech","ByteDance,Fudan University","Industry,Academia","Zhaowei Li, Qi Xu, Dong Zhang, Hang Song, Yiqing Cai, Qi Qi, Ran Zhou, Junting Pan, Zefeng Li, Van Tu Vu, Zhida Huang, Tao Wang",2024-03-05,GroundingGPT:Language Enhanced Multi-modal Grounding Model,https://arxiv.org/abs/2401.06071v5,,,,7000000000.0,,,,,,"LLaVA-Pretrain-595k,Valley-Pretrain-703k,Wavcaps,COCO,OCR-VQA,TextVQA,VisualGenome,Flickr30K Entities,DiDeMo,VGGSS,VCR ,Activitynet Captions,Clotho","Stage1
Image LLaVA-Pretrain-595k
Video Valley-Pretrain-703k
Audio Wavcaps
Stage2
Image RefCOCO, RefCOCOg, RefCOCO+, Visual Genome
Video DiDeMo, HiREST, Charades-STA, Didemo
Audio VGGSS
Stage3
Image LLava-1.5-mix665k, Flickr30k Entities, VCR
Video Valley-Instruct-73k, Videochat-Instruct-11k, Activitynet Captions
Audio Clotho",,can probably be extracted from their github dataset preparation guide,,,,,,,"Multi-modal large language models have demonstrated impressive performance across various tasks in different modalities. However, existing multi-modal models primarily emphasize capturing global information within each modality while neglecting the importance of perceiving local information across modalities. Consequently, these models lack the ability to effectively understand the fine-grained details of input data, limiting their performance in tasks that require a more nuanced understanding. To address this limitation, there is a compelling need to develop models that enable fine-grained understanding across multiple modalities, thereby enhancing their applicability to a wide range of tasks. In this paper, we propose GroundingGPT, a language enhanced multi-modal grounding model. Beyond capturing global information like other multi-modal models, our proposed model excels at tasks demanding a detailed understanding of local information within the input. It demonstrates precise identification and localization of specific regions in images or moments in videos. To achieve this objective, we design a diversified dataset construction pipeline, resulting in a multi-modal, multi-granularity dataset for model training. The code, dataset, and demo of our model can be found at https: //github.com/lzw-lzw/GroundingGPT.",,Open weights (unrestricted),,Unverified,2024-12-08 19:03:53+00:00,"China,China",Vicuna-7B v0,,,,,,,,
Claude 3 Sonnet,"Multimodal,Language,Vision",Anthropic,Industry,,2024-03-04,"The Claude 3 Model Family: Opus, Sonnet, Haiku",https://www-cdn.anthropic.com/de8ba9b01c9ab7cbabf5c33b80b7bbc618857627/Model_Card_Claude_3.pdf,,Training cost,"Based on leaks, Claude 3 Opus and Sonnet probably cost >$1M to train.",,,,,,,Unspecified unreleased,"Claude 3 models are trained on a proprietary mix of publicly available information on the Internet as of August 2023, as well as non-public data from third parties, data provided by data labeling services and paid contractors, and data we generate internally. We employ several data cleaning and filtering methods, including deduplication and classification. The Claude 3 suite of models have not been trained on any user prompt or output data submitted to us by users or customers, including free users, Claude Pro users, and API customers.",,,,,"Like its predecessors, Claude 3 models employ various training methods, such as unsupervised learning and Constitutional AI [6]. These models were trained using hardware from Amazon Web Services (AWS) and Google Cloud Platform (GCP)",,,,"We introduce Claude 3, a new family of large multimodal models – Claude 3 Opus, our most capable offering, Claude 3 Sonnet, which provides a combination of skills and speed, and Claude 3 Haiku, our fastest and least expensive model. All new models have vision capabilities that enable them to process and analyze image data. The Claude 3 family demonstrates strong performance across benchmark evaluations and sets a new standard on
measures of reasoning, math, and coding. Claude 3 Opus achieves state-of-the-art results on evaluations like GPQA [1], MMLU [2], MMMU [3] and many more. Claude 3 Haiku performs as well or better than Claude 2 [4] on most pure-text tasks, while Sonnet and Opus significantly outperform it. Additionally, these models exhibit improved fluency in non-English languages, making them more versatile for a global audience. In this report, we provide an in-depth analysis of our evaluations, focusing on core capabilities, safety, societal impacts, and the catastrophic risk assessments we committed to in our Responsible Scaling Policy [5].
",,API access,,Unknown,2024-12-26 23:41:47+00:00,United States of America,,,,,,,,,
Claude 3 Opus,"Multimodal,Language,Vision",Anthropic,Industry,,2024-03-04,"The Claude 3 Model Family: Opus, Sonnet, Haiku",https://www-cdn.anthropic.com/de8ba9b01c9ab7cbabf5c33b80b7bbc618857627/Model_Card_Claude_3.pdf,,"SOTA improvement,Training cost","Based on leaks, Claude 3 Opus and Sonnet probably cost >$1M to train.",,,1.640001e+25,,,Training compute estimated from benchmark scores.,Unspecified unreleased,"Claude 3 models are trained on a proprietary mix of publicly available information on the Internet as of August 2023, as well as non-public data from third parties, data provided by data labeling services and paid contractors, and data we generate internally. We employ several data cleaning and filtering methods, including deduplication and classification. The Claude 3 suite of models have not been trained on any user prompt or output data submitted to us by users or customers, including free users, Claude Pro users, and API customers.",,,,,"Like its predecessors, Claude 3 models employ various training methods, such as unsupervised learning and Constitutional AI [6]. These models were trained using hardware from Amazon Web Services (AWS) and Google Cloud Platform (GCP)",,,,"We introduce Claude 3, a new family of large multimodal models – Claude 3 Opus, our most capable offering, Claude 3 Sonnet, which provides a combination of skills and speed, and Claude 3 Haiku, our fastest and least expensive model. All new models have vision capabilities that enable them to process and analyze image data. The Claude 3 family demonstrates strong performance across benchmark evaluations and sets a new standard on
measures of reasoning, math, and coding. Claude 3 Opus achieves state-of-the-art results on evaluations like GPQA [1], MMLU [2], MMMU [3] and many more. Claude 3 Haiku performs as well or better than Claude 2 [4] on most pure-text tasks, while Sonnet and Opus significantly outperform it. Additionally, these models exhibit improved fluency in non-English languages, making them more versatile for a global audience. In this report, we provide an in-depth analysis of our evaluations, focusing on core capabilities, safety, societal impacts, and the catastrophic risk assessments we committed to in our Responsible Scaling Policy [5].
",,API access,,Speculative,2025-01-30 02:34:26+00:00,United States of America,,,,,,,,,
Aramco Metabrain AI,Language,Saudi Aramco,"Industry,Government",Saudi Aramco,2024-03-04,Saudi Aramco unveils industry’s first generative AI model,https://www.offshore-technology.com/news/saudi-aramco-unveils-industry-first-generative-ai-model/,,Training cost,,250000000000.0,"""It has 250 billion parameters that are adjustable during training to generate outputs or make predictions.""",1.05e+25,,,6*250B*7T=1.05e+25,,"""The AI was trained using seven trillion data points, collecting more than 90 years of company history.""",7000000000000.0,,,,,,,Supervised,,,Unreleased,,Likely,2025-02-14 19:36:59+00:00,Saudi Arabia,,,,,,,,,
MACE-MP-0,Materials science,"University of Cambridge,Federal Institute of Materials Research and Testing (BAM),NERSC, Lawrence Berkeley National Laboratory,University of British Columbia (UBC),Friedrich Schiller University Jena,University of Bayreuth,Fritz Haber Institute of the Max Planck Society,U. S. Naval Research Laboratory,Chemix,Daresbury Laboratory,BASF,University of South Carolina,University of Stuttgart,Uppsala University,Newcastle University,Technical University of Denmark,Aix-Marseille Université,University of Warwick,University of California Los Angeles (UCLA),InstaDeep,University of California (UC) Berkeley","Academia,Academia,Government,Academia,Academia,Academia,Academia,Government,Industry,Academia,Industry,Academia,Academia,Academia,Academia,Academia,Academia,Academia,Academia,Industry,Academia","Ilyes Batatia, Philipp Benner, Yuan Chiang, Alin M. Elena, Dávid P. Kovács, Janosh Riebesell, Xavier R. Advincula, Mark Asta, Matthew Avaylon, William J. Baldwin, Fabian Berger, Noam Bernstein, Arghya Bhowmik, Samuel M. Blau, Vlad Cărare, James P. Darby, Sandip De, Flaviano Della Pia, Volker L. Deringer, Rokas Elijošius, Zakariya El-Machachi, Fabio Falcioni, Edvin Fako, Andrea C. Ferrari, Annalena Genreith-Schriever, Janine George, Rhys E. A. Goodall, Clare P. Grey, Petr Grigorev, Shuang Han, Will Handley, Hendrik H. Heenen, Kersti Hermansson, Christian Holm, Jad Jaafar, Stephan Hofmann, Konstantin S. Jakob, Hyunwook Jung, Venkat Kapil, Aaron D. Kaplan, Nima Karimitari, James R. Kermode, Namu Kroupa, Jolla Kullgren, Matthew C. Kuner, Domantas Kuryla, Guoda Liepuoniute, Johannes T. Margraf, Ioan-Bogdan Magdău, Angelos Michaelides, J. Harry Moore, Aakash A. Naik, Samuel P. Niblett, Sam Walton Norwood, Niamh O'Neill, Christoph Ortner, Kristin A. Persson, Karsten Reuter, Andrew S. Rosen, Lars L. Schaaf, Christoph Schran, Benjamin X. Shi, Eric Sivonxay, Tamás K. Stenczel, Viktor Svahn, Christopher Sutton, Thomas D. Swinburne, Jules Tilly, Cas van der Oord, Eszter Varga-Umbrich, Tejs Vegge, Martin Vondrák, Yangshuai Wang, William C. Witt, Fabian Zills, Gábor Csányi",2024-03-01,A foundation model for atomistic materials chemistry,https://arxiv.org/abs/2401.00096,,,,,,8.76096e+20,,,312000000000000*2600*3600*0.3 = 8.76096e+20,Materials Project,"""public database of 150k inorganic crystals""

""The MACE-MP-0 model was trained on the MPtrj dataset which was compiled originally for CHGNet (24). This dataset consists of a large number of static calculations and structural optimization trajectories from the Materials Project (MP) (19). These include approx. 1.5M configurations
(roughly ten times the approx. 150k unique MP structures)""",,,200.0,,"""Models are trained for 200 epochs on 40–80 NVIDIA A100 GPUs across 10–20 nodes. Training the medium-sized model took approx. 2,600 GPU hours.""",NVIDIA A100,80.0,,"Machine-learned force fields have transformed the atomistic modelling of materials by enabling simulations of ab initio quality on unprecedented time and length scales. However, they are currently limited by: (i) the significant computational and human effort that must go into development and validation of potentials for each particular system of interest; and (ii) a general lack of transferability from one chemical system to the next. Here, using the state-of-the-art MACE architecture we introduce a single general-purpose ML model, trained on a public database of 150k inorganic crystals, that is capable of running stable molecular dynamics on molecules and materials. We demonstrate the power of the MACE-MP-0 model - and its qualitative and at times quantitative accuracy - on a diverse set problems in the physical sciences, including the properties of solids, liquids, gases, chemical reactions, interfaces and even the dynamics of a small protein. The model can be applied out of the box and as a starting or ""foundation model"" for any atomistic system of interest and is thus a step towards democratising the revolution of ML force fields by lowering the barriers to entry.",,Open weights (unrestricted),,Confident,2024-11-24 21:30:35+00:00,"United Kingdom of Great Britain and Northern Ireland,Germany,United States of America,Canada,Germany,Germany,Germany,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,Germany,United States of America,Germany,Sweden,United Kingdom of Great Britain and Northern Ireland,Denmark,France,United Kingdom of Great Britain and Northern Ireland,United States of America,United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
Step-1X,Image generation,StepFun,Industry,,2024-03-01,"100天后，阶跃星辰交出了第二份答卷
","https://www.sohu.com/a/791101272_114877

https://platform.stepfun.com/docs/llm/image",,,,,,,,,,,,,,,,,,,,"The model has powerful image generation capabilities and supports text description as an input method. With native Chinese support, you can better understand and process Chinese text descriptions, and you can more accurately capture semantic information in text descriptions and translate them into image features to achieve more accurate image generation. The model can generate high-resolution, high-quality images based on input, and has a certain style migration capability.",,API access,,Unverified,2025-02-07 01:24:22+00:00,China,,,,,,,,,
Step-1.5V,Vision,StepFun,Industry,,2024-03-01,"100天后，阶跃星辰交出了第二份答卷
",https://www.sohu.com/a/791101272_114877,,,,100000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-07 01:26:15+00:00,China,,,,,,,,,
Step-2,Language,StepFun,Industry,,2024-03-01,"100天后，阶跃星辰交出了第二份答卷
","https://www.sohu.com/a/791101272_114877
https://platform.stepfun.com/#step2",,,,2000000000000.0,,,,,,,,,,,,,,,,"A new generation of MoE architecture large model, with parameters breaking through trillions. Model performance/sensory/planning capabilities are fully approaching the international mainstream model to meet the various needs of users in the Chinese/English field, reflecting the cutting-edge results of Scaling Laws.",,API access,,Unverified,2025-02-07 01:29:12+00:00,China,,,,,,,,,
StarCoder 2 15B,Language,"Hugging Face,ServiceNow,NVIDIA,BigCode","Industry,Industry,Industry","Anton Lozhkov, Raymond Li, Loubna Ben Allal, Federico Cassano, Joel Lamy-Poirier, Nouamane Tazi, Ao Tang, Dmytro Pykhtar, Jiawei Liu, Yuxiang Wei, Tianyang Liu, Max Tian, Denis Kocetkov, Arthur Zucker, Younes Belkada, Zijian Wang, Qian Liu, Dmitry Abulkhanov, Indraneil Paul, Zhuang Li, Wen-Ding Li, Megan Risdal, Jia Li, Jian Zhu, Terry Yue Zhuo, Evgenii Zheltonozhskii, Nii Osae Osae Dade, Wenhao Yu, Lucas Krauß, Naman Jain, Yixuan Su, Xuanli He, Manan Dey, Edoardo Abati, Yekun Chai, Niklas Muennighoff, Xiangru Tang, Muhtasham Oblokulov, Christopher Akiki, Marc Marone, Chenghao Mou, Mayank Mishra, Alex Gu, Binyuan Hui, Tri Dao, Armel Zebaze, Olivier Dehaene, Nicolas Patry, Canwen Xu, Julian McAuley, Han Hu, Torsten Scholak, Sebastien Paquet, Jennifer Robinson, Carolyn Jane Anderson, Nicolas Chapados, Mostofa Patwary, Nima Tajbakhsh, Yacine Jernite, Carlos Muñoz Ferrandis, Lingming Zhang, Sean Hughes, Thomas Wolf, Arjun Guha, Leandro von Werra, Harm de Vries",2024-02-29,StarCoder 2 and The Stack v2: The Next Generation,https://arxiv.org/abs/2402.19173,,,,15000000000.0,15B,3.87e+23,,,estimation is given in Table 6 ,The Stack v2,See Table 4. The Stack V2 plus some extras. Created from repositorites from Github with permissive licences.,913230000000.0,from Table 4,4.49,,,,,,"The BigCode project, an open-scientific collaboration focused on the responsible development of Large Language Models for Code (Code LLMs), introduces StarCoder2. In partnership with Software Heritage (SWH), we build The Stack v2 on top of the digital commons of their source code archive. Alongside the SWH repositories spanning 619 programming languages, we carefully select other high-quality data sources, such as GitHub pull requests, Kaggle notebooks, and code documentation. This results in a training set that is 4x larger than the first StarCoder dataset. We train StarCoder2 models with 3B, 7B, and 15B parameters on 3.3 to 4.3 trillion tokens and thoroughly evaluate them on a comprehensive set of Code LLM benchmarks. We find that our small model, StarCoder2-3B, outperforms other Code LLMs of similar size on most benchmarks, and also outperforms StarCoderBase-15B. Our large model, StarCoder2- 15B, significantly outperforms other models of comparable size. In addition, it matches or outperforms CodeLlama-34B, a model more than twice its size. Although DeepSeekCoder- 33B is the best-performing model at code completion for high-resource languages, we find that StarCoder2-15B outperforms it on math and code reasoning benchmarks, as well as several low-resource languages. We make the model weights available under an OpenRAIL license and ensure full transparency regarding the training data by releasing the SoftWare Heritage persistent IDentifiers (SWHIDs) of the source code data. ",,Open weights (restricted use),,Confident,2025-02-17 20:38:35+00:00,"Multinational,United States of America,United States of America,United States of America",,,,,,,4100000.0,Table 7,
Griffin,Language,Google DeepMind,Industry,"Soham De, Samuel L. Smith, Anushan Fernando, Aleksandar Botev, George Cristian-Muraru, Albert Gu, Ruba Haroun, Leonard Berrada, Yutian Chen, Srivatsan Srinivasan, Guillaume Desjardins, Arnaud Doucet, David Budden, Yee Whye Teh, Razvan Pascanu, Nando De Freitas, Caglar Gulcehre",2024-02-29,Griffin: Mixing Gated Linear Recurrences with Local Attention for Efficient Language Models,https://arxiv.org/abs/2402.19427,,,,14000000000.0,,1.5848931924611137e+22,,,"Figure 1.a
10^(1/5)*10^22 = 15848931924611134852021.0137339150701326944213382503906831629",,,300000000000.0,,,,,Google TPU v3,,,"Recurrent neural networks (RNNs) have fast inference and scale efficiently on long sequences, but they are difficult to train and hard to scale. We propose Hawk, an RNN with gated linear recurrences, and Griffin, a hybrid model that mixes gated linear recurrences with local attention. Hawk exceeds the reported performance of Mamba on downstream tasks, while Griffin matches the performance of Llama-2 despite being trained on over 6 times fewer tokens. We also show that Griffin can extrapolate on sequences significantly longer than those seen during training. Our models match the hardware efficiency of Transformers during training, and during inference they have lower latency and significantly higher throughput. We scale Griffin up to 14B parameters, and explain how to shard our models for efficient distributed training.",,,,Confident,2025-02-19 18:04:45+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Hawk,Language,Google DeepMind,Industry,"Soham De, Samuel L. Smith, Anushan Fernando, Aleksandar Botev, George Cristian-Muraru, Albert Gu, Ruba Haroun, Leonard Berrada, Yutian Chen, Srivatsan Srinivasan, Guillaume Desjardins, Arnaud Doucet, David Budden, Yee Whye Teh, Razvan Pascanu, Nando De Freitas, Caglar Gulcehre",2024-02-29,Griffin: Mixing Gated Linear Recurrences with Local Attention for Efficient Language Models,https://arxiv.org/abs/2402.19427,,,,7000000000.0,"""All three model families are trained at a range of model scales from 100M to 7B parameters, with an additional Griffin model with 14 billion parameters.""",3.95e+21,,,"Figure 1.a
Digitized and found 3.95e21 for biggest Hawk model",,,300000000000.0,Table 1,,,,Google TPU v3,,,"Recurrent neural networks (RNNs) have fast inference and scale efficiently on long sequences, but they are difficult to train and hard to scale. We propose Hawk, an RNN with gated linear recurrences, and Griffin, a hybrid model that mixes gated linear recurrences with local attention. Hawk exceeds the reported performance of Mamba on downstream tasks, while Griffin matches the performance of Llama-2 despite being trained on over 6 times fewer tokens. We also show that Griffin can extrapolate on sequences significantly longer than those seen during training. Our models match the hardware efficiency of Transformers during training, and during inference they have lower latency and significantly higher throughput. We scale Griffin up to 14B parameters, and explain how to shard our models for efficient distributed training.",,,,Confident,2025-02-19 18:04:49+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Humanoid Locomotion,Robotics,University of California (UC) Berkeley,Academia,"Ilija Radosavovic, Bike Zhang, Baifeng Shi, Jathushan Rajasegaran, Sarthak Kamat, Trevor Darrell, Koushil Sreenath, Jitendra Malik",2024-02-29,Humanoid Locomotion as Next Token Prediction,https://arxiv.org/abs/2402.19469,28.0,,"No SOTA tag because there is no recognized benchmark, but does appear to improve on SOTA for metrics like trajectory adherence, positional tracking error (see figures 5-8).",8000000.0,"Largest model trained has 8M params. Note actual model used in real-world experiments appears to be 2M, to improve latency. See sections 5.1 and 5.9.",,,,,,"4 sources. First, they use a neural network policy pretrained with RL, and collect 10k trajectories of 10s each using the Agility Robotics’ simulator on flat ground, without domain randomization. Second, 10k trajectories of 10s each from the model-based controller developed by Agility Robotics. Third, a 1k trajectory subset of motion capture (MoCap) recordings of humans from the KIT dataset. Fourth, a collection of YouTube videos which are converted to trajectories with inverse kinematics (no details about how many).",,,,,,,,,"We cast real-world humanoid control as a next token prediction problem, akin to predicting the next word in language. Our model is a causal transformer trained via autoregressive prediction of sensorimotor trajectories. To account for the multi-modal nature of the data, we perform prediction in a modality-aligned way, and for each input token predict the next token from the same modality. This general formulation enables us to leverage data with missing modalities, like video trajectories without actions. We train our model on a collection of simulated trajectories coming from prior neural network policies, model-based controllers, motion capture data, and YouTube videos of humans. We show that our model enables a full-sized humanoid to walk in San Francisco zero-shot. Our model can transfer to the real world even when trained on only 27 hours of walking data, and can generalize to commands not seen during training like walking backward. These findings suggest a promising path toward learning challenging real-world control tasks by generative modeling of sensorimotor trajectories.",,Unreleased,,Likely,2024-11-01 14:03:32+00:00,United States of America,,,,,,,,,
YOLOv9-E,Vision,"Academia Sinica,National Taipei University of Technology,Chung Yuan Christian University","Academia,Academia,Academia","Chien-Yao Wang, I-Hau Yeh, Hong-Yuan Mark Liao",2024-02-29,YOLOv9: Learning What You Want to Learn Using Programmable Gradient Information,https://arxiv.org/abs/2402.13616,,,,57300000.0,57.3M,1.74258e+17,,,"6ND = 6*57300000.00 parameters *118000 images *500 epochs = 2.02842e+16 (likely an underestimation)

(speculative confidence because I don't know the amount of tokens per image)

assuming(!) batch size 64 -> number of updates per epoch = 118000/64 = 1844

 189.0 Gigaflops * 1844 * 500 = 1.74258e+17",COCO,,118000.0,"Training set: Approximately 118,000 images (COCO-2017), no information about about tokenization / patching / batching",500.0,,,,,,"Today's deep learning methods focus on how to design the most appropriate objective functions so that the prediction results of the model can be closest to the ground truth. Meanwhile, an appropriate architecture that can facilitate acquisition of enough information for prediction has to be designed. Existing methods ignore a fact that when input data undergoes layer-by-layer feature extraction and spatial transformation, large amount of information will be lost. This paper will delve into the important issues of data loss when data is transmitted through deep networks, namely information bottleneck and reversible functions. We proposed the concept of programmable gradient information (PGI) to cope with the various changes required by deep networks to achieve multiple objectives. PGI can provide complete input information for the target task to calculate objective function, so that reliable gradient information can be obtained to update network weights. In addition, a new lightweight network architecture -- Generalized Efficient Layer Aggregation Network (GELAN), based on gradient path planning is designed. GELAN's architecture confirms that PGI has gained superior results on lightweight models. We verified the proposed GELAN and PGI on MS COCO dataset based object detection. The results show that GELAN only uses conventional convolution operators to achieve better parameter utilization than the state-of-the-art methods developed based on depth-wise convolution. PGI can be used for variety of models from lightweight to large. It can be used to obtain complete information, so that train-from-scratch models can achieve better results than state-of-the-art models pre-trained using large datasets, the comparison results are shown in Figure 1. The source codes are at: this https URL.",,Open weights (unrestricted),,Likely,2025-03-06 19:59:57+00:00,"Taiwan,Taiwan,Taiwan",,,,,,,,,
RiNALMo,Biology,"University of Zagreb,Genome Institute of Singapore,Bioinformatics Institute","Academia,Academia,Government","Rafael Josip Penić, Tin Vlašić, Roland G. Huber, Yue Wan, Mile Šikić",2024-02-29,RiNALMo: General-Purpose RNA Language Models Can Generalize Well on Structure Prediction Tasks,https://arxiv.org/abs/2403.00043,16.0,,,,,1.0500000000000004e+21,,,"1. Hardware: 7x NVIDIA A100 GPUs (3.12e14 FLOP/s per GPU)
2. Training duration: 2 weeks (directly provided) = 1,209,600 seconds
3. Utilization: 40% (0.4)
4. Calculation: 3.12e14 FLOP/s × 7 GPUs × 1,209,600s × 0.4 = 1.05e21 FLOPs",,,17400000001.00007,"17,000,000 sequences x 1,024 tokens/sequence = 17,408,000,000 tokens (1.7408e10)",,,,,,,"Ribonucleic acid (RNA) plays a variety of crucial roles in fundamental biological processes. Recently, RNA has become an interesting drug target, emphasizing the need to improve our understanding of its structures and functions. Over the years, sequencing technologies have produced an enormous amount of unlabeled RNA data, which hides important knowledge and potential. Motivated by the successes of protein language models, we introduce RiboNucleic Acid Language Model (RiNALMo) to help unveil the hidden code of RNA. RiNALMo is the largest RNA language model to date with 650 million parameters pre-trained on 36 million non-coding RNA sequences from several available databases. RiNALMo is able to extract hidden knowledge and capture the underlying structure information implicitly embedded within the RNA sequences. RiNALMo achieves state-of-the-art results on several downstream tasks. Notably, we show that its generalization capabilities can overcome the inability of other deep learning methods for secondary structure prediction to generalize on unseen RNA families. The code has been made publicly available on this https URL.",,,,Unverified,2025-02-14 19:37:47+00:00,"Croatia,Singapore,Singapore",,,,,,,,,
PTM-Mamba,Biology,Duke University,Academia,"Zhangzhi Peng, Benjamin Schussheim, Pranam Chatterjee",2024-02-29,PTM-Mamba: A PTM-Aware Protein Language Model with Bidirectional Gated Mamba Blocks,https://www.biorxiv.org/content/10.1101/2024.02.28.581983v1,12.0,,,,,4.000000000000001e+19,,,"1. Hardware: 8x NVIDIA A100 GPUs (3.12e14 FLOP/s per GPU)

2. Training duration: Estimated 40,000 seconds (~11.1 hours)
   Calculation: 400,000 steps ÷ 10 steps/second

3. Utilization rate: 40%

4. Final calculation:
   8 GPUs × 3.12e14 FLOP/s = 2.496e15 FLOP/s total
   2.496e15 FLOP/s × 40,000s × 0.4 = 4.0e19 FLOPs",,,32000001.0,"79,707 sequences × 400 tokens/sequence = 31,882,800 tokens ≈ 3.2 × 10⁷ tokens",,,,,,,"Proteins serve as the workhorses of living organisms, orchestrating a wide array of vital functions. Post-translational modifications (PTMs) of their amino acids greatly influence the structural and functional diversity of different protein types and uphold proteostasis, allowing cells to swiftly respond to environmental changes and intricately regulate complex biological processes. To this point, efforts to model the complex features of proteins have involved the training of large and expressive protein language models (pLMs) such as ESM-2 and ProtT5, which accurately encode structural, functional, and physicochemical properties of input protein sequences. However, the over 200 million sequences that these pLMs were trained on merely scratch the surface of proteomic diversity, as they neither input nor account for the effects of PTMs. In this work, we fill this major gap in protein sequence modeling by introducing PTM tokens into the pLM training regime. We then leverage recent advancements in structured state space models (SSMs), specifically Mamba, which utilizes efficient hardware-aware primitives to overcome the quadratic time complexities of Transformers. After adding a comprehensive set of PTM tokens to the model vocabulary, we train bidirectional Mamba blocks whose outputs are fused with state-of-the-art ESM-2 embeddings via a novel gating mechanism. We demonstrate that our resultant PTM-aware pLM, PTM-Mamba, improves upon ESM-2’s performance on various PTM-specific tasks. PTM-Mamba is the first and only pLM that can uniquely input and represent both wild-type and PTM sequences, motivating downstream modeling and design applications specific to post-translationally modified proteins. To facilitate PTM-aware protein language modeling applications, we have made our model available at: https://huggingface.co/ChatterjeeLab/PTM-Mamba.",,,,Unverified,2025-02-14 19:37:43+00:00,United States of America,,,,,,,,,
AI Q&A Robot,,,,,2024-02-29,"What’s Worth Buying Releases Comprehensive AI Strategy: What’s Worth Buying Consumer Model Parameters Reach 13 Billion
",https://www.1ai.net/en/10155.html,,,,13000000000.0,,,,,,,,7450000000.0,,,,,,,,,,,,Unverified,2025-01-07 22:00:59+00:00,,,,,,,,,,
Protllm,Biology,"Beijing Institute of Technology,Beihang University,Peking University,Smart Grid Research Institute,Shanghai AI Lab","Academia,Academia,Academia,Academia","Le Zhuo, Zewen Chi, Minghao Xu, Heyan Huang, Heqi Zheng, Conghui He, Xian-Ling Mao, Wentao Zhang",2024-02-28,ProtLLM: An Interleaved Protein-Language LLM with Protein-as-Word Pre-Training,https://arxiv.org/abs/2403.07920,8.0,,,,,5.500000000000003e+19,,,"1. Hardware setup: 4x NVIDIA A100 GPUs (3.12e14 FLOP/s per GPU)
2. Training duration: ~30.6 hours (estimated based on total FLOPs, hardware capacity, and utilization)
3. Utilization rate: 40%
4. Final calculation: 
   Total tokens (10,000 × 256 × 512) × FLOPs per token (7B × 6) = 1.31072e9 × 4.2e10 ≈ 5.506e19 FLOPs",,,1310000001.0000055,"Summary of calculations:

PubMed Articles: 165,206 × 10,000 = 1.65206 × 10^9
UniProt Annotations: 64,634 × 100 = 6.4634 × 10^6
STRING Annotations: 25,682 × 100 = 2.5682 × 10^6
Mol-Instructions: 173,973 × 500 = 86.9865 × 10^6

Dataset total: 1.65206 × 10^9 + 6.4634 × 10^6 + 2.5682 × 10^6 + 86.9865 × 10^6 = 1.7475 × 10^9

Training tokens: 10,000 × 256 × 512 = 1.31072 × 10^9

Final estimate: 1.31 × 10^9 data points",,,,,,,"We propose ProtLLM, a versatile cross-modal large language model (LLM) for both protein-centric and protein-language tasks. ProtLLM features a unique dynamic protein mounting mechanism, enabling it to handle complex inputs where the natural language text is interspersed with an arbitrary number of proteins. Besides, we propose the protein-as-word language modeling approach to train ProtLLM. By developing a specialized protein vocabulary, we equip the model with the capability to predict not just natural language but also proteins from a vast pool of candidates. Additionally, we construct a large-scale interleaved protein-text dataset, named InterPT, for pre-training. This dataset comprehensively encompasses both (1) structured data sources like protein annotations and (2) unstructured data sources like biological research papers, thereby endowing ProtLLM with crucial knowledge for understanding proteins. We evaluate ProtLLM on classic supervised protein-centric tasks and explore its novel protein-language applications. Experimental results demonstrate that ProtLLM not only achieves superior performance against protein-specialized baselines on protein-centric tasks but also induces zero-shot and in-context learning capabilities on protein-language tasks.",,,,Unverified,2025-02-14 19:38:21+00:00,"China,China,China,China,China",,,,,,,,,
Evo,Biology,"Stanford University,University of California (UC) Berkeley,Together","Academia,Academia,Industry","Eric Nguyen, Michael Poli, Matthew G. Durrant, Armin W. Thomas, Brian Kang, Jeremy Sullivan, Madelena Y. Ng, Ashley Lewis, Aman Patel, Aaron Lou, Stefano Ermon, Stephen A. Baccus, Tina Hernandez-Boussard, Christopher Ré, Patrick D. Hsu, Brian L. Hie",2024-02-27,Sequence modeling and design from molecular to genome scale with Evo,"https://arcinstitute.org/news/blog/evo
https://www.biorxiv.org/content/10.1101/2024.02.27.582234v1",44.0,,Competitive with SOTA protein language models,7000000000.0,"Based on a StripedHyena architecture, context length of 131 kilobases",2.0000000001e+22,,,"""In total, Evo was trained on approximately 340B tokens, using approximately 2e22 FLOPS""",OpenGenome,"""We're also open-sourcing a large 300B token training dataset we compiled, which we call OpenGenome, consisting of 2.7M publicly available prokaryotic and phage genomes""",300000000000.0,"300 billion nucleotides. Since these are tokenized at the single-nucleotide level, 300B tokens.",1.0,2968.0,"Trained for first stage on 64 H100s, then for second stage on 128 A100s. Trained primarily with BF16 precision; FP32 used for ""long convolutional parameters"". I use BF16 performance for simplicity.

This gives a plausible range for completing 2e22 FLOPs.

If all 2e22 FLOPs were performed on H100s:
2e22 FLOP / (64 GPUs * 1.3e14 FLOP/GPU-sec) * 1/0.3 efficiency *  1/3600 hour/sec  = 2226 hours

If all 2e22 FLOPs were performed on A100s:
2e22 FLOP / (128 GPUs * 3.9e13 FLOP/GPU-sec) * 1/0.3 efficiency * 1/3600 hour/sec = 3710 hours

Assume each stage is roughly half the total time, so:
(2226+3710)/2 = 2968 hours","NVIDIA A100,NVIDIA H100 SXM5 80GB",,Self-supervised learning,"The genome is a sequence that completely encodes the DNA, RNA, and proteins that orchestrate the function of a whole organism. Advances in machine learning combined with massive datasets of whole genomes could enable a biological foundation model that accelerates the mechanistic understanding and generative design of complex molecular interactions. We report Evo, a genomic foundation model that enables prediction and generation tasks from the molecular to genome scale. Using an architecture based on advances in deep signal processing, we scale Evo to 7 billion parameters with a context length of 131 kilobases (kb) at single-nucleotide, byte resolution. Trained on whole prokaryotic genomes, Evo can generalize across the three fundamental modalities of the central dogma of molecular biology to perform zero-shot function prediction that is competitive with, or outperforms, leading domain-specific language models. Evo also excels at multielement generation tasks, which we demonstrate by generating synthetic CRISPR-Cas molecular complexes and entire transposable systems for the first time. Using information learned over whole genomes, Evo can also predict gene essentiality at nucleotide resolution and can generate coding-rich sequences up to 650 kb in length, orders of magnitude longer than previous methods. Advances in multi-modal and multi-scale learning with Evo provides a promising path toward improving our understanding and control of biology across multiple levels of complexity.",,Open weights (unrestricted),,Confident,2025-02-14 19:38:02+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
BitNet b1.58,Language,"University of Chinese Academy of Sciences,Microsoft Research","Academia,Industry","Shuming Ma, Hongyu Wang, Lingxiao Ma, Lei Wang, Wenhui Wang, Shaohan Huang, Li Dong, Ruiping Wang, Jilong Xue, Furu Wei",2024-02-27,The Era of 1-bit LLMs: All Large Language Models are in 1.58 Bits,https://arxiv.org/abs/2402.17764,,,,70000000000.0,,2.8735486e+22,,,"6ND = 6*70*10^9*100*10^9 = 42000000000000000000000 (4.2e+22)

Figure 3 suggests it 41.2 times more energy efficient than LLAMA 70B (which is estimated 8.1e+23 FLOPS  -> 1.9660194e+22 FLOPs 

geometric mean -> 2.8735486e+22",RedPajama,,100000000000.0,"""we pre-trained the models on the RedPajama dataset [Com23] for 100 billion tokens.""",,,,,,,"Recent research, such as BitNet, is paving the way for a new era of 1-bit Large Language Models (LLMs). In this work, we introduce a 1-bit LLM variant, namely BitNet b1.58, in which every single parameter (or weight) of the LLM is ternary {-1, 0, 1}. It matches the full-precision (i.e., FP16 or BF16) Transformer LLM with the same model size and training tokens in terms of both perplexity and end-task performance, while being significantly more cost-effective in terms of latency, memory, throughput, and energy consumption. More profoundly, the 1.58-bit LLM defines a new scaling law and recipe for training new generations of LLMs that are both high-performance and cost-effective. Furthermore, it enables a new computation paradigm and opens the door for designing specific hardware optimized for 1-bit LLMs.",,,,Confident,2025-02-19 18:31:44+00:00,"China,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Nemotron-4 15B,Language,NVIDIA,Industry,"Jupinder Parmar, Shrimai Prabhumoye, Joseph Jennings, Mostofa Patwary, Sandeep Subramanian, Dan Su, Chen Zhu, Deepak Narayanan, Aastha Jhunjhunwala, Ayush Dattagupta, Vibhu Jawa, Jiwei Liu, Ameya Mahabaleshwarkar, Osvald Nitski, Annika Brundyn, James Maki, Miguel Martinez, Jiaxuan You, John Kamalu, Patrick LeGresley, Denys Fridman, Jared Casper, Ashwath Aithal, Oleksii Kuchaiev, Mohammad Shoeybi, Jonathan Cohen, Bryan Catanzaro",2024-02-27,Nemotron-4 15B Technical Report,https://arxiv.org/abs/2402.16819,,,,15000000000.0,15b,7.5005116e+23,,,"6ND = 6*15*10^9*8*10^12 = 7.2e+23

""Nemotron-4 was trained using 384 DGX H100 nodes; each node contains 8 H100 80GB SXM5 GPUs based on the NVIDIA Hopper architecture (NVIDIA, 2022). Each H100 GPU has a peak throughput of 989 teraFLOP/s when doing 16-bit floating point (bfloat16) arithmetic without sparsity.

Table 2 reports more detailed training schedule:

989*10^12*3600*24*(768*0.343*0.8 +  1536*0.333*0.4 + 2304*0.305* 11.9) = 7.5005116e+23",Unspecified unreleased,"""At a high-level, the data blend is split into three different types of data: English natural language data (70%), multilingual natural language data (15%), and source-code data (15%).""",8000000000000.0,"""15-billion-parameter large multilingual language model trained on 8 trillion text tokens""",,312.0,"""Training was completed in approximately 13 calendar days.""",NVIDIA H100 SXM5 80GB,3072.0,,"We introduce Nemotron-4 15B, a 15-billion-parameter large multilingual language model trained on 8 trillion text tokens. Nemotron-4 15B demonstrates strong performance when assessed on English, multilingual, and coding tasks: it outperforms all existing similarly-sized open models on 4 out of 7 downstream evaluation areas and achieves competitive performance to the leading open models in the remaining ones. Specifically, Nemotron-4 15B exhibits the best multilingual capabilities of all similarly-sized models, even outperforming models over four times larger and those explicitly specialized for multilingual tasks.",,Unreleased,0.305,Confident,2024-12-09 20:15:13+00:00,United States of America,,,,,,,,,
Palmyra Vision,"Vision,Language",Writer,Industry,,2024-02-27,"Meet Palmyra Vision, our multimodal LLM with vision capabilities",https://writer.com/blog/palmyra-vision/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Palmyra Vision is a multimodal large language model (LLM) with vision capabilities developed by Writer that can analyze and generate text based on images.
It excels in tasks such as extracting handwritten text, classifying objects, analyzing graphs and charts, and answering specific questions based on visual inputs. Palmyra Vision achieved a score of 84.4% on VQAv2 benchmark, outperforming other prominent multimodal models.
Palmyra Vision offers a range of practical applications in the enterprise, including product description generation, interpreting charts and graphs, compliance detection, improving accessibility by creating ALT descriptions, and text extraction from handwritten reports.",,Hosted access (no API),,Unknown,2025-01-06 20:33:54+00:00,United States of America,,,,,,,,,
Mistral Large,Language,Mistral AI,Industry,,2024-02-26,"Mistral Large, our new flagship model",https://mistral.ai/news/mistral-large/,,Training cost,"~$20M training cost: https://www.wsj.com/tech/ai/the-9-month-old-ai-startup-challenging-silicon-valleys-giants-ee2e4c48
https://x.com/EMostaque/status/1762152740938031484?s=20 ",,,1.1199999999999999e+25,,,"https://www.wsj.com/tech/ai/the-9-month-old-ai-startup-challenging-silicon-valleys-giants-ee2e4c48

Mistral spent <20 million euro (meaning approximately 20 million?) to train Mistral Large:

https://x.com/EMostaque/status/1762152740938031484?s=20
""assuming this is on H100s with @Scaleway who are €1.9/hour => 10m H100 hours (c 30m A100 hrs), 3 months at 4k H100s :timer_clock:"" -Emad Mostaque

Assuming bf16 or fp16, H100 SXM performance is 989 TFLOPS
At 1.9 euro per H100-hour and 30% utilization, spending 20M euro produces 1.12*10^25 FLOP.
https://www.wolframalpha.com/input?i=20+million+%2F+%281.9%2Fhour%29+*+989+TFLOPS+*+0.30 ",,,,,,2500.0,Speculation by Emad Mostaque: 20M euro spent at Scaleway (1.9 euro per H100-hour) would be around 3 months on 4000 H100s.,NVIDIA H100 SXM5 80GB,,,,,API access,,Likely,2025-02-14 19:38:42+00:00,France,,,,,,,,,
ProLLaMA,Biology,"Peking University,Peng Cheng Laboratory","Academia,Academia","Liuzhenghao Lv, Zongying Lin, Hao Li, Yuyang Liu, Jiaxi Cui, Calvin Yu-Chian Chen, Li Yuan, Yonghong Tian",2024-02-26,ProLLaMA: A Protein Language Model for Multi-Task Protein Language Processing,https://arxiv.org/abs/2402.16445,13.0,,,,,1.2000000000000008e+20,,,"1. Hardware setup: 8x NVIDIA RTX A6000 GPUs (3.87e13 FLOP/s per GPU)

2. Training duration: Provided directly - Stage 1: 6 days, Stage 2: 5 days (Total: 11 days = 950,400 seconds)

3. Utilization rate: 40%

4. Calculation:
(8 GPUs × 3.87e13 FLOP/s/GPU) × 950,400 seconds × 0.4 utilization = 1.2e20 FLOPs
(Stage 1: 1.603e20 + Stage 2: 1.338e20) × 0.4 = 1.2e20 FLOPs",,,16000000000.999985,"52,807,283 sequences × 300 residues/sequence = 15,842,184,900 tokens ≈ 1.6 × 10^10 tokens",,,,,,,"Large Language Models (LLMs) have achieved remarkable performance in multiple Natural Language Processing (NLP) tasks. Under the premise that protein sequences constitute the protein language, Protein Language Models(PLMs) have advanced the field of protein engineering. However, as of now, unlike LLMs in NLP, PLMs cannot handle the protein understanding task and the protein generation task simultaneously in the Protein Language Processing (PLP) field. This prompts us to delineate the inherent limitations in current PLMs: (i) the lack of natural language capabilities, (ii) insufficient instruction understanding, and (iii) high training resource demands. To address these challenges, we introduce a training framework to transform any general LLM into a PLM capable of handling multiple PLP tasks. To improve training efficiency, we propose Protein Vocabulary Pruning (PVP) for general LLMs. We construct a multi-task instruction dataset containing 13 million samples with superfamily information, facilitating better modeling of protein sequence-function landscapes. Through these methods, we develop the ProLLaMA model, the first known PLM to handle multiple PLP tasks simultaneously. Experiments show that ProLLaMA achieves state-of-the-art results in the unconditional protein sequence generation task. In the controllable protein sequence generation task, ProLLaMA can design novel proteins with desired functionalities. As for the protein understanding task, ProLLaMA achieves a 62\% exact match rate in superfamily prediction. Codes, model weights, and datasets are available at \url{this https URL} and \url{this https URL}.",,,,Unverified,2025-02-14 19:38:59+00:00,"China,China",,,,,,,,,
DecompDiff,Biology,"University of Illinois Urbana-Champaign (UIUC),ByteDance,University of Chinese Academy of Sciences,Chinese Academy of Sciences,Tsinghua University","Academia,Industry,Academia,Academia,Academia","Jiaqi Guan, Xiangxin Zhou, Yuwei Yang, Yu Bao, Jian Peng, Jianzhu Ma, Qiang Liu, Liang Wang, Quanquan Gu",2024-02-26,DecompDiff: Diffusion Models with Decomposed Priors for Structure-Based Drug Design,https://arxiv.org/abs/2403.07902,41.0,,,,"The key/value/query embedding is obtained through a 2-layer MLP with LayerNorm and ReLU activation. Stacking these three layers as a block, our model consists of 6 blocks with hidden dim=128 and n heads=16.",1.9e+19,,,"1. Hardware setup: 1x NVIDIA A100 GPU (3.12e14 FLOPs/s for FP16)
2. Training duration: 41.7 hours (provided directly) = 150,120 seconds
3. Utilization rate: 40% (assumed)
4. Calculation: 3.12e14 FLOPs/s × 1 GPU × 150,120s × 0.4 = 1.873e19 FLOPs",,,100001.00000000006,"300,000 steps * 4 batch size = 1,200,000 total samples
1,200,000 total samples / 100,000 complexes = 12 epochs
Final count = 100,000 unique data points (first epoch only)",,,,,,,"Designing 3D ligands within a target binding site is a fundamental task in drug discovery. Existing structured-based drug design methods treat all ligand atoms equally, which ignores different roles of atoms in the ligand for drug design and can be less efficient for exploring the large drug-like molecule space. In this paper, inspired by the convention in pharmaceutical practice, we decompose the ligand molecule into two parts, namely arms and scaffold, and propose a new diffusion model, DECOMPDIFF, with decomposed priors over arms and scaffold. In order to facilitate the decomposed generation and improve the properties of the generated molecules, we incorporate both bond diffusion in the model and additional validity guidance in the sampling phase. Extensive experiments on CrossDocked2020 show that our approach achieves state-of-the-art performance in generating high-affinity molecules while maintaining proper molecular properties and conformational stability, with up to −8.39 Avg. Vina Dock score and 24.5% Success Rate. The code is provided at https://github. com/bytedance/DecompDiff",,,,Unverified,2025-02-14 19:38:27+00:00,"United States of America,China,China,China,China",,,,,,,,,
Gemma 1.1 7B Instruct,Language,Google,Industry,"Gemma Team, Thomas Mesnard, Cassidy Hardin, Robert Dadashi, Surya Bhupatiraju, Laurent Sifre, Morgane Rivière, Mihir Sanjay Kale, Juliette Love, Pouya Tafti, Léonard Hussenot and et al.",2024-02-24,,https://huggingface.co/google/gemma-1.1-7b-it,,,,8540000000.0,"Safetensors 
Model size 8.54B params",3.0744e+23,,,6ND = 6*6000000000000*8540000000=3.0744e+23,Unspecified unreleased,"""These models were trained on a dataset of text data that includes a wide variety of sources, totaling 6 trillion tokens. Here are the key components:

Web Documents: A diverse collection of web text ensures the model is exposed to a broad range of linguistic styles, topics, and vocabulary. Primarily English-language content.
Code: Exposing the model to code helps it to learn the syntax and patterns of programming languages, which improves its ability to generate code or understand code-related questions.
Mathematics: Training on mathematical text helps the model learn logical reasoning, symbolic representation, and to address mathematical queries.""",6000000000000.0,"""These models were trained on a dataset of text data that includes a wide variety of sources, totaling 6 trillion tokens. """,,,,Google TPU v5e,,,"This is Gemma 1.1 7B (IT), an update over the original instruction-tuned Gemma release.

Gemma 1.1 was trained using a novel RLHF method, leading to substantial gains on quality, coding capabilities, factuality, instruction following and multi-turn conversation quality. We also fixed a bug in multi-turn conversations, and made sure that model responses don't always start with ""Sure,"".

We believe this release represents an improvement for most use cases, but we encourage users to test in their particular applications. The previous model will continue to be available in the same repo. We appreciate the enthusiastic adoption of Gemma, and we continue to welcome all feedback from the community.",,Open weights (restricted use),,Confident,2024-12-09 19:43:00+00:00,United States of America,,,,,,,,,
MegaScale (Production),Language,"ByteDance,Peking University","Industry,Academia","Ziheng Jiang, Haibin Lin, Yinmin Zhong, Qi Huang, Yangrui Chen, Zhi Zhang, Yanghua Peng, Xiang Li, Cong Xie, Shibiao Nong, Yulu Jia, Sun He, Hongmin Chen, Zhihao Bai, Qi Hou, Shipeng Yan, Ding Zhou, Yiyao Sheng, Zhuo Jiang, Haohan Xu, Haoran Wei, Zhang Zhang, Pengfei Nie, Leqi Zou, Sida Zhao, Liang Xiang, Zherui Liu, Zhe Li, Xiaoying Jia, Jianxi Ye, Xin Jin, Xin Liu",2024-02-23,"MegaScale: Scaling Large Language Model Training to More Than 10,000 GPUs",https://arxiv.org/abs/2402.15627,40.0,SOTA improvement,Improves SOTA in FLOP utilization for distributed LLM training by 1.34X.,530000000000.0,"Production run is stated to have ""hundreds of billions of parameters"". Since the authors also do a number of experiments with a 530B model, I speculate they've used 530B for the production model.",3.9e+24,,8.01e+24,"Speculative. The model is stated to have trained for ""several weeks"". Assuming 530B parameters and ""several"" = 3, compute can be estimated from the 175B model's stated PFLOP/sec:
2166.3 aggregate PFlops/sec * 3 weeks * 7 days/week * 24 hours/day * 3600 seconds/hour = 3.9e+24.
As an upper bound, say 8e+24. ",,,,"Speculative. Authors note production system was trained on ""multi-trillions of tokens"". This could refer to training for multiple epochs on the same 300B tokens used to train the 175B and 530B models outlined in more detail in the paper. Alternatively, it could refer to a larger dataset of perhaps 3-9 trillion tokens.",,504.0,"Speculative. Authors state ""several weeks"". For analysis, I've assumed this means around 3 weeks.",NVIDIA A100,12288.0,Self-supervised learning,"We present the design, implementation and engineering experience in building and deploying MegaScale, a production system for training large language models (LLMs) at the scale of more than 10,000 GPUs. Training LLMs at this scale brings unprecedented challenges to training efficiency and stability. We take a full-stack approach that co-designs the algorithmic and system components across model block and optimizer design, computation and communication overlapping, operator optimization, data pipeline, and network performance tuning. Maintaining high efficiency throughout the training process (i.e., stability) is an important consideration in production given the long extent of LLM training jobs. Many hard stability issues only emerge at large scale, and in-depth observability is the key to address them. We develop a set of diagnosis tools to monitor system components and events deep in the stack, identify root causes, and derive effective techniques to achieve fault tolerance and mitigate stragglers. MegaScale achieves 55.2% Model FLOPs Utilization (MFU) when training a 175B LLM model on 12,288 GPUs, improving the MFU by 1.34x compared to Megatron-LM. We share our operational experience in identifying and fixing failures and stragglers. We hope by articulating the problems and sharing our experience from a systems perspective, this work can inspire future LLM systems research.",,Unreleased,0.48,Speculative,2025-01-30 01:59:36+00:00,"China,China",,,,,ByteDance MegaScale training cluster,,,,
Genie,"Video,Games",Google DeepMind,Industry,"Jake Bruce, Michael Dennis, Ashley Edwards, Jack Parker-Holder, Yuge Shi, Edward Hughes, Matthew Lai, Aditi Mavalankar, Richie Steigerwald, Chris Apps, Yusuf Aytar, Sarah Bechtle, Feryal Behbahani, Stephanie Chan, Nicolas Heess, Lucy Gonzalez, Simon Osindero, Sherjil Ozair, Scott Reed, Jingwei Zhang, Konrad Zolna, Jeff Clune, Nando de Freitas, Satinder Singh, Tim Rocktäschel",2024-02-23,Genie: Generative Interactive Environments,https://arxiv.org/abs/2402.15391,,,,10700000000.0,"When combined with the tokenizer and action
model this brings the total to 10.7B parameters,
trained on 942B tokens, which we refer to as the
Genie model. ",6.6e+22,,,Table 12,,"Our approach, Genie, is trained from a large dataset of over 200,000 hours of publicly available Internet gaming videos

We train Genie on a filtered set of 30,000 hours of Internet gameplay videos from hundreds of 2D platformer games, producing a foundation world model for this setting.

The final dataset contains 6.8M 16s video clips (30k hours)",942000000000.0,"When combined with the tokenizer and action model this brings the total to 10.7B parameters, trained on 942B tokens, which we refer to as the Genie model.",,,,Google TPU v5p,256.0,,"We introduce Genie, the first generative interactive environment trained in an unsupervised manner from unlabelled Internet videos. The model can be prompted to generate an endless variety of action-controllable virtual worlds described through text, synthetic images, photographs, and even sketches. At 11B parameters, Genie can be considered a foundation world model. It is comprised of a spatiotemporal video tokenizer, an autoregressive dynamics model, and a simple and scalable latent action model. Genie enables users to act in the generated environments on a frame-by-frame basis despite training without any ground-truth action labels or other domain-specific requirements typically found in the world model literature. Further the resulting learned latent action space facilitates training agents to imitate behaviors from unseen videos, opening the path for training generalist agents of the future.",,Unreleased,,Confident,2025-02-14 19:39:49+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,512.0,"As a result, for our final model, we train a 10.1B dynamics model with a batch size of 512, for a total of 125k steps, using 256 TPUv5p",
Stable Diffusion 3,Image generation,Stability AI,Industry,"Patrick Esser, Sumith Kulal, Andreas Blattmann, Rahim Entezari, Jonas Müller, Harry Saini, Yam Levi, Dominik Lorenz, Axel Sauer, Frederic Boesel, Dustin Podell, Tim Dockhorn, Zion English, Kyle Lacey, Alex Goodwin, Yannik Marek, Robin Rombach",2024-02-22,Scaling Rectified Flow Transformers for High-Resolution Image Synthesis,"https://arxiv.org/abs/2403.03206
https://stability.ai/news/stable-diffusion-3",,,,8000000000.0,,5e+22,,,"Finally, we performed
a scaling study of this combination up to a model size of
8B parameters and 5 × 1022 training FLOPs.","ImageNet,Conceptual Captions 12M (CC12M)","We use two datasets to account for the missing of a standard text-to-image benchmark. As a widely used dataset, we convert the ImageNet dataset (Russakovsky et al., 2014) into a dataset suitable for text-to-image models by adding captions of the form “a photo of a 〈class name〉” to images, where 〈class name〉 is randomly chosen from one of the provided names for the image’s class label. As a more realistic text-to-image dataset, we use the CC12M dataset (Changpinyo et al., 2021) for training.",,,,,,,,,"Diffusion models create data from noise by inverting the forward paths of data towards noise and have emerged as a powerful generative modeling technique for high-dimensional, perceptual data such as images and videos. Rectified flow is a recent generative model formulation that connects data and noise in a straight line. Despite its better theoretical properties and conceptual simplicity, it is not yet decisively established as standard practice. In this work, we improve existing noise sampling techniques for training rectified flow models by biasing them towards perceptually relevant scales. Through a large-scale study, we demonstrate the superior performance of this approach compared to established diffusion formulations for high-resolution text-to-image synthesis. Additionally, we present a novel transformer-based architecture for text-to-image generation that uses separate weights for the two modalities and enables a bidirectional flow of information between image and text tokens, improving text comprehension, typography, and human preference ratings. We demonstrate that this architecture follows predictable scaling trends and correlates lower validation loss to improved text-to-image synthesis as measured by various metrics and human evaluations. Our largest models outperform state-of-the-art models, and we will make our experimental data, code, and model weights publicly available.",,API access,,Confident,2024-11-06 22:13:06+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Gemma 7B,Language,Google DeepMind,Industry,"Gemma Team, Google DeepMind",2024-02-21,Gemma: Open Models Based on Gemini Research and Technology,https://storage.googleapis.com/deepmind-media/gemma/gemma-report.pdf,,,,8538074112.0,"Table 2, sum of embedding and non-embedding parameters",3.07e+23,,,"6ND aproximation 6*8.54B*6T = 3.07e23
""Gemma 2B and 7B are trained on 2T and 6T tokens respectively of primarily-English data from web documents, mathematics, and code.""

As confirmation: ""We estimate the carbon emissions from pretraining the Gemma models to be ∼ 131 𝑡𝐶𝑂2𝑒𝑞. ""

U.S. avg CO2 per kWh is ~0.87lbs 
131 tCO2 * 2000 lb/t * (1 kWh/0.87lb) = 3.01e5 kWh

Per SemiAnalysis TPU v5e uses ~ 5x less power than H100, so ~140 W TDP
3.01e5 kWh * 1000 W/kW * 1 TPUv5e/140 W  = 2.15e6 TPUv5e-hours

In bf16 precision, TPUv5e has peak performance of 197 TF/s, so:
2.15e6 * 3600 * 197e12 * 0.3 = 4.57e23",Unspecified unreleased,"""Gemma 2B and 7B are trained on 2T and 6T tokens respectively of primarily-English data from web documents, mathematics, and code.""",6000000000000.0,"""Gemma 2B and 7B are trained on 2T and 6T tokens respectively of primarily-English data from web documents, mathematics, and code.""
Not explicitly stated that this doesn't involve multiple epochs, but I expect it does not.",,,,Google TPU v5e,4096.0,,,,Open weights (restricted use),,Confident,2025-02-17 20:50:17+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Re-Dock,Biology,"Zhejiang University,Westlake University,University of Washington","Academia,Academia,Academia","Yufei Huang, Odin Zhang, Lirong Wu, Cheng Tan, Haitao Lin, Zhangyang Gao, Siyuan Li, Stan. Z. Li",2024-02-21,Re-Dock: Towards Flexible and Realistic Molecular Docking with Diffusion Bridge,https://arxiv.org/abs/2402.11459,2.0,,,,,7.500000000000002e+19,,,"1. Hardware setup: 1x NVIDIA A100 GPU (3.12e14 FLOP/s)

2. Training duration: 7 days (directly provided) = 604,800 seconds

3. Utilization rate: 40%

4. Final calculation:
1 GPU × 3.12e14 FLOP/s × 604,800s × 0.4 = 7.55e19 FLOPs",,,20001.0,"20,000 data points

= Number of complexes in PDBBind v2020 dataset
= 20,000

Final: 20,000 (2.0e4)",,,,,,,"Accurate prediction of protein-ligand binding structures, a task known as molecular docking is crucial for drug design but remains challenging. While deep learning has shown promise, existing methods often depend on holo-protein structures (docked, and not accessible in realistic tasks) or neglect pocket sidechain conformations, leading to limited practical utility and unrealistic conformation predictions. To fill these gaps, we introduce an under-explored task, named flexible docking to predict poses of ligand and pocket sidechains simultaneously and introduce Re-Dock, a novel diffusion bridge generative model extended to geometric manifolds. Specifically, we propose energy-to-geometry mapping inspired by the Newton-Euler equation to co-model the binding energy and conformations for reflecting the energy-constrained docking generative process. Comprehensive experiments on designed benchmark datasets including apo-dock and cross-dock demonstrate our model's superior effectiveness and efficiency over current methods.",,,,Unverified,2025-02-14 19:40:41+00:00,"China,China,United States of America",,,,,,,,,
PepGLAD,Biology,"Tsinghua University,Renmin University of China","Academia,Academia","Xiangzhe Kong, Yinjun Jia, Wenbing Huang, Yang Liu",2024-02-21,Full-Atom Peptide Design with Geometric Latent Diffusion,https://arxiv.org/abs/2402.13555,,,,,,2.50000000000002e+19,,,"1. Hardware: 1x NVIDIA GeForce RTX 3090 (1.60e+14 FLOP/s)
2. Training duration: Estimated - (60 + 500 epochs) × 600s/epoch = 336,000s
3. Utilization: 40%
4. Final calculation: 1.60e+14 FLOP/s × 1 GPU × 336,000s × 0.4 = 2.5e+19 FLOPs",,,196600.99999999985,"
PepBench Training: 4,157 entries × 10 residues = 41,570 residues
PepBDB Training: 8,434 entries × 10 residues = 84,340 residues
ProtFrag: 70,645 monomers × 1 residue = 70,645 residues

Total: 41,570 + 84,340 + 70,645 = 196,555 residues",,,,,,,"Peptide design plays a pivotal role in therapeutics, allowing brand new possibility to leverage target binding sites that are previously undruggable. Most existing methods are either inefficient or only concerned with the target-agnostic design of 1D sequences. In this paper, we propose a generative model for full-atom \textbf{Pep}tide design with \textbf{G}eometric \textbf{LA}tent \textbf{D}iffusion (PepGLAD) given the binding site. We first establish a benchmark consisting of both 1D sequences and 3D structures from Protein Data Bank (PDB) and literature for systematic evaluation. We then identify two major challenges of leveraging current diffusion-based models for peptide design: the full-atom geometry and the variable binding geometry. To tackle the first challenge, PepGLAD derives a variational autoencoder that first encodes full-atom residues of variable size into fixed-dimensional latent representations, and then decodes back to the residue space after conducting the diffusion process in the latent space. For the second issue, PepGLAD explores a receptor-specific affine transformation to convert the 3D coordinates into a shared standard space, enabling better generalization ability across different binding shapes. Experimental Results show that our method not only improves diversity and binding affinity significantly in the task of sequence-structure co-design, but also excels at recovering reference structures for binding conformation generation.",,,,Unverified,2025-02-14 19:40:34+00:00,"China,China",,,,,,,,,
Reinvent 4,Biology,AstraZeneca,Industry,"Hannes H. Loeffler, Jiazhen He, Alessandro Tibo, Jon Paul Janet, Alexey Voronov, Lewis H. Mervin, Ola Engkvist",2024-02-21,Reinvent 4: Modern AI–driven generative molecule design,https://link.springer.com/article/10.1186/s13321-024-00812-5,50.0,,,,,,,,,,,20000000000001.062,"Prior Model: 1M molecules × 50 tokens/molecule = 5 × 10^7 tokens
Mol2Mol Agent: 200B pairs × 2 molecules/pair × 50 tokens/molecule = 2 × 10^13 tokens
Total: 5 × 10^7 + 2 × 10^13 ≈ 2.0 × 10^13 tokens",,,,,,,"REINVENT 4 is a modern open-source generative AI framework for the design of small molecules. The software utilizes recurrent neural networks and transformer architectures to drive molecule generation. These generators are seamlessly embedded within the general machine learning optimization algorithms, transfer learning, reinforcement learning and curriculum learning. REINVENT 4 enables and facilitates de novo design, R-group replacement, library design, linker design, scaffold hopping and molecule optimization. This contribution gives an overview of the software and describes its design. Algorithms and their applications are discussed in detail. REINVENT 4 is a command line tool which reads a user configuration in either TOML or JSON format. The aim of this release is to provide reference implementations for some of the most common algorithms in AI based molecule generation. An additional goal with the release is to create a framework for education and future innovation in AI based molecular design. The software is available from https://github.com/MolecularAI/REINVENT4 and released under the permissive Apache 2.0 license. Scientific contribution. The software provides an open–source reference implementation for generative molecular design where the software is also being used in production to support in–house drug discovery projects. The publication of the most common machine learning algorithms in one code and full documentation thereof will increase transparency of AI and foster innovation, collaboration and education.",,,,Unverified,2025-01-30 05:04:14+00:00,"Sweden,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Gemma 2B,Language,Google DeepMind,Industry,"Gemma Team, Google DeepMind",2024-02-21,Gemma: Open Models Based on Gemini Research and Technology,https://storage.googleapis.com/deepmind-media/gemma/gemma-report.pdf,,,,2506434560.0,"Table 2, sum of embedding and non-embedding parameters:

2B 524,550,144 + 1,981,884,416 = 2506434560",4.5115822e+22,,,"6ND = 6*2506434560.00*3*10^12 = 4.5115822e+22

(assuming 1 epoch)",Unspecified unreleased,"""Gemma 2B and 7B are trained on 2T and 6T tokens respectively of primarily-English data from web documents, mathematics, and code.""",3000000000000.0,"""Gemma 2B and 7B are trained on 3T and 6T tokens respectively of primarily-English data from web documents, mathematics, and code.""
Not explicitly stated that this doesn't involve multiple epochs, but I expect it does not.",,,,Google TPU v5e,512.0,,,,Open weights (restricted use),,Confident,2024-12-10 16:13:21+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Sora,"Video,Vision",OpenAI,Industry,,2024-02-15,Video generation models as world simulators,https://openai.com/index/video-generation-models-as-world-simulators/,,SOTA improvement,,,,,,,,Unspecified unreleased,"Sora was trained on diverse datasets, including a mix of publicly available data, proprietary data accessed through partnerships, and custom datasets developed in-house. These consist of:

Select publicly available data, mostly collected from industry-standard machine learning datasets and web crawls.

Proprietary data from data partnerships. We form partnerships to access non-publicly available data. For example, we partnered with Shutterstock⁠ Pond5 on building and delivering AI-generated images. We also partner to commission and create datasets fit for our needs.

Human data: Feedback from AI trainers, red teamers, and employees. ",,,,,,,,,"Sora is OpenAI’s video generation model, designed to take text, image, and video inputs and generate a new video as an output. Users can create videos up to 1080p resolution (20 seconds max) in various formats, generate new content from text, or enhance, remix, and blend their own assets. Users will be able to explore the Featured and Recent feeds which showcase community creations and offer inspiration for new ideas. Sora builds on learnings from DALL·E and GPT models, and is designed to give people expanded tools for storytelling and creative expression. 

Sora is a diffusion model, which generates a video by starting off with a base video that looks like static noise and gradually transforms it by removing the noise over many steps. By giving the model foresight of many frames at a time, we’ve solved a challenging problem of making sure a subject stays the same even when it goes out of view temporarily. Similar to GPT models, Sora uses a transformer architecture, unlocking superior scaling performance. ",,Unreleased,,Unknown,2025-01-03 19:42:49+00:00,United States of America,,,,,,,,,
Gemini 1.5 Pro,"Language,Multimodal",Google DeepMind,Industry,Gemini Team,2024-02-15,Gemini 1.5: Unlocking multimodal understanding across millions of tokens of context,https://storage.googleapis.com/deepmind-media/gemini/gemini_v1_5_report.pdf,,Significant use,"Google DeepMind's current best public model, being used for their products.",,MoE architecture,1.580001e+25,,,Training compute imputed from benchmark scores.,Unspecified unreleased,,,,,,,Google TPU v4,,,,,API access,,Speculative,2025-02-28 23:24:46+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
ProtChatGPT,Biology,"University of Technology Sydney,Zhejiang University","Academia,Academia","Chao Wang, Hehe Fan, Ruijie Quan, Yi Yang",2024-02-15,ProtChatGPT: Towards Understanding Proteins with Large Language Models,https://arxiv.org/abs/2402.09649,9.0,,,,,3.199999999999976e+20,,,"1. Hardware setup: 4x NVIDIA A100 (80GB) GPUs, 3.12e14 FLOP/s per GPU
2. Training duration: 7.5 days (provided directly - 5.5 days first stage + 2 days second stage) = 648,000 seconds
3. Utilization rate: 40%
4. Calculation: 3.12e14 FLOP/s × 4 GPUs × 648,000 seconds × 0.4 = 3.2e20 FLOPs",,,380000000.9999994,"Stage 1:
- Proteins: 549,000 × 500 = 2.745 × 10⁸
- Descriptions: 549,000 × 50 = 2.745 × 10⁷
- Total: 2.745 × 10⁸ + 2.745 × 10⁷ = 3.0195 × 10⁸

Stage 2:
- Proteins: 143,508 × 500 = 7.1754 × 10⁷
- Descriptions: 143,508 × 50 = 7.1754 × 10⁶
- Total: 7.1754 × 10⁷ + 7.1754 × 10⁶ = 7.892 × 10⁷

Final Total: 3.0195 × 10⁸ + 7.892 × 10⁷ = 3.8087 × 10⁸",,,,,,,"Protein research is crucial in various fundamental disciplines, but understanding their intricate structure-function relationships remains challenging. Recent Large Language Models (LLMs) have made significant strides in comprehending task-specific knowledge, suggesting the potential for ChatGPT-like systems specialized in protein to facilitate basic research. In this work, we introduce ProtChatGPT, which aims at learning and understanding protein structures via natural languages. ProtChatGPT enables users to upload proteins, ask questions, and engage in interactive conversations to produce comprehensive answers. The system comprises protein encoders, a Protein-Language Pertaining Transformer (PLP-former), a projection adapter, and an LLM. The protein first undergoes protein encoders and PLP-former to produce protein embeddings, which are then projected by the adapter to conform with the LLM. The LLM finally combines user questions with projected embeddings to generate informative answers. Experiments show that ProtChatGPT can produce promising responses to proteins and their corresponding questions. We hope that ProtChatGPT could form the basis for further exploration and application in protein research. Code and our pre-trained model will be publicly available.",,,,Unverified,2025-02-14 19:40:46+00:00,"Australia,China",,,,,,,,,
Gemini 1.0 Pro Vision,"Vision,Language,Video",Google DeepMind,Industry,Gemini Team,2024-02-15,The best performing image and video understanding model to handle a broad range of applications. ,,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Gemini 1.0 Pro Vision supports text, image, and video as inputs.

Max input tokens: 16,384
Max output tokens: 2,048
Max images per prompt: 16
Max video length: 2 minutes
Max videos per prompt: 1
Training data: Up to February 2023",,API access,,Unknown,2024-11-18 20:27:34+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Sora Turbo,"Video,Vision",OpenAI,Industry,,2024-02-15,Sora is here,https://openai.com/index/sora-is-here/,,Significant use,,,,,,,,Unspecified unreleased,"Sora was trained on diverse datasets, including a mix of publicly available data, proprietary data accessed through partnerships, and custom datasets developed in-house. These consist of:

Select publicly available data, mostly collected from industry-standard machine learning datasets and web crawls.

Proprietary data from data partnerships. We form partnerships to access non-publicly available data. For example, we partnered with Shutterstock⁠ Pond5 on building and delivering AI-generated images. We also partner to commission and create datasets fit for our needs.

Human data: Feedback from AI trainers, red teamers, and employees. ",,,,,,,,,"Our video generation model is rolling out at sora.com⁠(opens in a new window).

Earlier this year, we introduced Sora⁠, our model that can create realistic videos from text, and shared our initial research progress⁠ on world simulation. Sora serves as a foundation for AI that understands and simulates reality—an important step towards developing models that can interact with the physical world.

We developed a new version of Sora—Sora Turbo—that is significantly faster than the model we previewed in February. We’re releasing it today as a standalone product at Sora.com to ChatGPT Plus and Pro users.",,Unreleased,,Unknown,2025-01-03 19:45:06+00:00,United States of America,,,,,,,,,
KwaiYii 175B,Language,Kuaishou Technology,Industry,,2024-02-14,,https://blog.csdn.net/kuaishoutech/article/details/140542568,,,,175000000000.0,175B,,,,,,,,,,,,,,,"In June 2024, quick-handed NLP experts reported on the “KwaiYii” model at the Global Artificial Intelligence Technology Conference. The model was developed in early 2023, and the 175B model was released at the end of February 2024. Many capabilities are close to the latest version of GPT-4. Introduced eight key technological innovations and landing practices in scenes such as AI Xiaofu, including solutions to various challenges, which will continue to be iterated in the future.",,,,Confident,2024-11-10 23:24:18+00:00,China,,,,,,,,,
Aya,Language,"Cohere for AI,Brown University,Cohere,Carnegie Mellon University (CMU),Massachusetts Institute of Technology (MIT)","Industry,Academia,Industry,Academia,Academia","Ahmet Üstün, Viraat Aryabumi, Zheng-Xin Yong, Wei-Yin Ko, Daniel D'souza, Gbemileke Onilude, Neel Bhandari, Shivalika Singh, Hui-Lee Ooi, Amr Kayid, Freddie Vargus, Phil Blunsom, Shayne Longpre, Niklas Muennighoff, Marzieh Fadaee, Julia Kreutzer, Sara Hooker",2024-02-12,Aya Model: An Instruction Finetuned Open-Access Multilingual Language Model,https://arxiv.org/abs/2402.07827,114.0,SOTA improvement,"from abstract ""We introduce extensive new evaluation suites that broaden the state-of-art for multilingual eval across 99
language""",13000000000.0,13B  - fine tune of mT5 - from last page - model card ,,,,"13B parameters, batch size = 256, sequence length = 1024 (for both input and output), 30K updates
- aproximation 6ND = 6 * 13B * 2 * 1024 * 30K * 256= 1226833920000000000000 = 1.22683392e+21
""We finetune mT5 models using the Adafactor optimizer [Shazeer & Stern, 2018] with a learning rate of 3 × 10−4 and a batch size of 256. We find that using a smaller learning rate compared to 1 × 10−3 leads to a better downstream performance, which is potentially due to the diverse nature of our IFT mixture. Both input and target sequence length are set to 1024.""
""We train all the models for 30,000 update steps with data packing enabled.16 This results in a training budget of 25M samples. """,,"""Expansion of Language Coverage We significantly expand the size of available training data to directly address the linguistic inequality of recent NLP development. "" from the paper
""Datasets: xP3x, Aya Dataset, Aya Collection, DataProvenance collection, ShareGPT-Command."" from https://huggingface.co/CohereForAI/aya-101and https://huggingface.co/CohereForAI/aya-101#data-sources",,"at least 835 GB + size of ShareGPT-command + size of DataProvenance collection
https://huggingface.co/CohereForAI/aya-101#data-sourcesxP3x  - 680GB - from 
https://huggingface.co/datasets/CohereForAI/xP3x

aya_dataset - 138MB - https://huggingface.co/datasets/CohereForAI/aya_dataset

aya collection - 155GB - https://huggingface.co/datasets/CohereForAI/aya_collection",,,,Google TPU v4,128.0,,"Recent breakthroughs in large language models (LLMs) have centered around a handful of data-rich languages. What does it take to broaden access to breakthroughs beyond first-class citizen languages? Our work introduces Aya, a massively multilingual generative language model that follows instructions in 101 languages of which over 50% are considered as lower-resourced. Aya outperforms mT0 and BLOOMZ on the majority of tasks while covering double the number of languages. We introduce extensive new evaluation suites that broaden the state-of-art for multilingual eval across 99 languages -- including discriminative and generative tasks, human evaluation, and simulated win rates that cover both held-out tasks and in-distribution performance. Furthermore, we conduct detailed investigations on the optimal finetuning mixture composition, data pruning, as well as the toxicity, bias, and safety of our models. We open-source our instruction datasets and our model at this https://huggingface.co/CohereForAI/aya-101",,Open weights (unrestricted),,Speculative,2024-11-01 14:04:28+00:00,"Multinational,Canada,United States of America,Canada,United States of America,United States of America",mT5-XXL,1.22683392e+21,"13B parameters, batch size = 256, sequence length = 1024 (for both input and output), 30K updates
- aproximation 6ND = 6 * 13B * 2 * 1024 * 30K * 256= 1226833920000000000000 = 1.22683392e+21
""We finetune mT5 models using the Adafactor optimizer [Shazeer & Stern, 2018] with a learning rate of 3 × 10−4 and a batch size of 256. We find that using a smaller learning rate compared to 1 × 10−3 leads to a better downstream performance, which is potentially due to the diverse nature of our IFT mixture. Both input and target sequence length are set to 1024.""
""We train all the models for 30,000 update steps with data packing enabled.16 This results in a training budget of 25M samples. """,,,,,,
PLAPT,Biology,"Wolfram Research,ASC27,Newport High School,Sanskriti School","Industry,Industry,Academia","Tyler Rose, Nicolò Monti, Navvye Anand, Tianyu Shen",2024-02-12,PLAPT: Protein-Ligand Binding Affinity Prediction Using Pretrained Transformers,https://www.biorxiv.org/content/10.1101/2024.02.08.575577v3.abstract,1.0,,,1474624.0,"""Figure 3: The prediction module takes a 1792x1 feature vector as its input, which is then partitioned into two streams: The first stream processes the first 1024 indices of the feature vector through a 512-node protein-specific linear layer, followed by a ReLU activation function. Concurrently, the second stream processes the latter 768 feature indices through a similar 512-node moleculespecific linear layer, also followed by a ReLU activation.  Outputs from both streams are concatenated into a single vector of 1024 elements. This combined vector is passed through a batch normalization layer with a momentum of 0.9 and epsilon of 0.001. The vector is then fed through the 512-node Linear Layer 1 and ReLU activation. A dropout layer with a probability of 20% is then applied to mitigate overfitting.  Following the dropout layer, the prediction module continues to reduce the feature space with the 64-node Linear Layer 2 with ReLU activation, before reaching the single node Linear Layer 3. This layer outputs the predicted scalar value representing the normalized negative log10 affinity value, which is then un-normalized.""  (512 * 1024) + (512 * 768) + (512 * 1024) + (64 * 512) + 64 = 1474624",796296960000.0,,,"1474624 connections; 90,000 training examples; assuming only one epoch (no mention otherwise). ",,,313000001.0000004,"Training set: 90,000 samples
Tokens per sample: 3,200 (protein) + 278 (ligand) = 3,478
Total tokens = 90,000 × 3,478 = 313,020,000 (3.13e8) tokens",,,,NVIDIA GeForce RTX 4060 Ti,1.0,,"Predicting protein-ligand binding affinity is crucial for drug discovery, as it enables efficient identification of drug candidates. We introduce PLAPT, a novel model utilizing transfer learning from pre-trained transformers like ProtBERT and ChemBERTa to predict binding affinities with high accuracy. Our method processes one-dimensional protein and ligand sequences, leveraging a branching neural network architecture for feature integration and affinity estimation. We demonstrate PLAPT’s superior performance through validation on multiple datasets, achieving state-of-the-art results while requiring significantly less computational resources for training compared to existing models. Our findings indicate that PLAPT offers a highly effective and accessible approach for accelerating drug discovery efforts.",,,,Unverified,2025-02-14 19:40:51+00:00,"United States of America,Italy,United States of America,India",,,,,,,,,
DiscDiff,Biology,Imperial College London,Academia,"Zehui Li, Yuhao Ni, William A V Beardall, Guoxuan Xia, Akashaditya Das, Guy-Bart Stan, Yiren Zhao",2024-02-08,DiscDiff: Latent Diffusion Model for DNA Sequence Generation,https://arxiv.org/abs/2402.06079,2.0,,,,,3.399999999999988e+19,,,"1. Hardware setup:
- VAE stage: 1x NVIDIA RTX A6000 (3.87e13 FLOP/s)
- UNet stage: 1x NVIDIA A100 40GB (3.12e14 FLOP/s)

2. Training duration (provided directly):
- VAE: 24 GPU-hours (86,400 seconds)
- UNet: 72 GPU-hours (259,200 seconds)

3. Utilization rate: 40% for both stages

4. Calculation:
VAE: 3.87e13 FLOP/s × 86,400s × 0.4 = 1.34e18 FLOPs
UNet: 3.12e14 FLOP/s × 259,200s × 0.4 = 3.24e19 FLOPs
Total = 1.34e18 + 3.24e19 = 3.4e19 FLOPs",,,94000000001.00015,"EPD-GenDNA (256 bases): 15,000,000 × 256 = 3.84 × 10^9
EPD-GenDNA (2048 bases): 15,000,000 × 2048 = 3.072 × 10^10
EPD-GenDNA Total: 3.84 × 10^9 + 3.072 × 10^10 = 3.456 × 10^10
EPDnew: 29,349,475 × 2048 = 5.9392 × 10^10
Final Total: 3.456 × 10^10 + 5.9392 × 10^10 = 9.3952 × 10^10",,,,,,,"This paper introduces a novel framework for DNA sequence generation, comprising two key components: DiscDiff, a Latent Diffusion Model (LDM) tailored for generating discrete DNA sequences, and Absorb-Escape, a post-training algorithm designed to refine these sequences. Absorb-Escape enhances the realism of the generated sequences by correcting ‘round errors’ inherent in the conversion process between latent and input spaces. Our approach not only sets new standards in DNA sequence generation but also demonstrates superior performance over existing diffusion models, in generating both short and long DNA sequences. Additionally, we introduce EPD-GenDNA, the first comprehensive, multi-species dataset for DNA generation, encompassing 160,000 unique sequences from 15 species. We hope this study will advance the generative modelling of DNA, with potential implications for gene therapy and protein production.",,,,Unverified,2025-02-14 20:45:44+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Distilled Grandmaster,Games,DeepMind,Industry,"Anian Ruoss, Grégoire Delétang, Sourabh Medapati, Jordi Grau-Moya, Li Kevin Wenliang, Elliot Catt, John Reid, Tim Genewein",2024-02-07,Grandmaster-Level Chess Without Search,https://arxiv.org/abs/2402.04494,10.0,,,270000000.0,"""Our largest model has roughly 270 million parameters.""",1.035671832e+22,,,"10356718320000000065536 FLOP
""Board states 𝑠 are encoded as FEN strings which we convert to fixed-length strings of 77 characters where the ASCII-code of each character is one token."" so 77 tokens for board + 1 token for action ""For our largest training dataset, based on 10M games, this results in 15.32B action-value estimates""
so input is 78 tokens for each action-value
number of tokens = 1194960000000.0
The model is dense transformer
"" We train for 10 million
steps, which corresponds to 2.67 epochs for a batch
size of 4096 with 15.32B data points "", but in appendix A.2 there is mention of 5.35 epochs
I have used higher value from 5.35 and 2.67,
Probably final they trained model for 5.35 epochs and used checkpoint from 2.67 as final model.
aproximation 6ND for 5.35 epochs = 6*270e6*1194960000000.0 * 5.35 =  10356718320000000065536
",,"custom
""To get a large corpus of “ground-truth” action-values we
use Stockfish 16 as an oracle to annotate millions of
board states obtained from randomly drawn games on
lichess.org, which are mostly played by humans vary-
ing significantly in playing strength.""",15320000000.0,"15.32B examples * 78 tokens per example = 1.19e12
Training is supervised. I count each action-value (board state, action and numeric evaluation of state from Stockfish 16) as 1 data point.""For our largest training dataset, based on 10M games, this results in 15.32B action-value estimates""",,,,,,Supervised,"The recent breakthrough successes in machine learning are mainly attributed to scale: namely large-scale attention-based architectures and datasets of unprecedented scale. This paper investigates the impact of training at scale for chess. Unlike traditional chess engines that rely on complex heuristics, explicit search, or a combination of both, we train a 270M parameter transformer model with supervised learning on a dataset of 10 million chess games. We annotate each board in the dataset with action-values provided by the powerful Stockfish 16 engine, leading to roughly 15 billion data points. Our largest model reaches a Lichess blitz Elo of 2895 against humans, and successfully solves a series of challenging chess puzzles, without any domain-specific tweaks or explicit search algorithms. We also show that our model outperforms AlphaZero's policy and value networks (without MCTS) and GPT-3.5-turbo-instruct. A systematic investigation of model and dataset size shows that strong chess performance only arises at sufficient scale. To validate our results, we perform an extensive series of ablations of design choices and hyperparameters. ",,,,Confident,2025-02-14 20:45:58+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Structure-Informed Protein Language Model,Biology,"Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),University of Montreal / Université de Montréal,IBM Research,HEC Montreal,CIFAR AI Research","Academia,Academia,Industry,Academia,Research collective","Zuobai Zhang, Jiarui Lu, Vijil Chenthamarakshan, Aurélie Lozano, Payel Das, Jian Tang",2024-02-07,Structure-Informed Protein Language Model,https://arxiv.org/abs/2402.05856,3.0,,,,,,,,,,,420000000001.0018,"
Pre-training:
2.1B sequences × 200 amino acids = 4.2 × 10^11 tokens

Fine-tuning:
12,312 proteins × 300 residues = 3.7 × 10^6 tokens

Total unique tokens: 4.2 × 10^11",,,,,,,"Protein language models are a powerful tool for learning protein representations through pre-training on vast protein sequence datasets. However, traditional protein language models lack explicit structural supervision, despite its relevance to protein function. To address this issue, we introduce the integration of remote homology detection to distill structural information into protein language models without requiring explicit protein structures as input. We evaluate the impact of this structure-informed training on downstream protein function prediction tasks. Experimental results reveal consistent improvements in function annotation accuracy for EC number and GO term prediction. Performance on mutant datasets, however, varies based on the relationship between targeted properties and protein structures. This underscores the importance of considering this relationship when applying structure-aware training to protein function prediction tasks. Code and model weights are available at this https URL.",,,,Unverified,2025-01-30 05:05:06+00:00,"Canada,Canada,United States of America,Multinational,Canada,Canada",,,,,,,,,
CARP,Biology,Microsoft Research,Industry,"Kevin K. Yang, Nicolo Fusi, Alex X. Lu",2024-02-06,Convolutions are competitive with transformers for protein sequence pretraining,https://www.cell.com/cell-systems/abstract/S2405-4712(24)00029-2,85.0,,,,,3.09999999999999e+22,,,"1. Hardware setup: 128 NVIDIA V100 GPUs (1.25e14 FLOP/s per GPU)

2. Training duration: 56 days (directly provided)
   - Converted to seconds: 56 × 24 × 3600 = 4.8384e6 seconds

3. Utilization rate: 40%

4. Final calculation:
   1.25e14 FLOP/s × 128 GPUs × 4.8384e6 seconds × 0.4 = 3.1e22 FLOPs",,,21000000001.0,"Total Datapoints = 41.5 × 10^6 × 500 = 2.075 × 10^10 ≈ 2.1 × 10^10 tokens
where:
- Number of sequences: 41.5 million
- Average sequence length: 500 residues",,,,,,,"Pretrained protein sequence language models have been shown to improve the performance of many prediction tasks and are now routinely integrated into bioinformatics tools. However, these models largely rely on the transformer architecture, which scales quadratically with sequence length in both run-time and memory. Therefore, state-of-the-art models have limitations on sequence length. To address this limitation, we investigated whether convolutional neural network (CNN) architectures, which scale linearly with sequence length, could be as effective as transformers in protein language models. With masked language model pretraining, CNNs are competitive with, and occasionally superior to, transformers across downstream applications while maintaining strong performance on sequences longer than those allowed in the current state-of-the-art transformer models. Our work suggests that computational efficiency can be improved without sacrificing performance, simply by using a CNN architecture instead of a transformer, and emphasizes the importance of disentangling pretraining task and model architecture. A record of this paper’s transparent peer review process is included in the supplemental information.",,,,Unverified,2025-02-14 20:49:26+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
SenseChat-DataAnalysis V4,,,,,2024-02-06,"SenseTime Unveils SenseNova 4.0, Bringing Novel AI experience
",https://www.sensetime.com/en/news-detail/51167493?categoryId=1072,,,,,,,,,,,,,,,,,,,,"SenseNova's new code interpreter, SenseChat-DataAnalysis V4, surpasses GPT-4 with an accuracy rate of 85.71% in data analysis scenarios, comprising of more than 1,000 questions. It demonstrates comprehension of complex and multiple forms and files; along with common data analysis tasks such as data cleaning, operation, comparative analysis, trend analysis, predictive analysis, and visualization. It can be applied in various scenarios, including financial analysis, business analysis, sales forecasting, market analysis, and macro analysis.",,,,Unverified,,,,,,,,,,,
SenseMirage V4,,,,,2024-02-06,"SenseTime Unveils SenseNova 4.0, Bringing Novel AI experience
",https://www.sensetime.com/en/news-detail/51167493?categoryId=1072,,,,10000000000.0,,,,,,,,,,,,,,,,"The upgraded text-to-image generation model, SenseMirage V4, can produce cinematic-grade posters with enhanced context, texture and details, owing to its increased parameters to 10 billion and the optimization of mixture of text experts and spatial-aware CFG algorithms, resulting in a marked advancement in prompt comprehension and image rendering capabilities. The newly introduced SenseMirage-Turbo V4 incorporates the adversarial distillation algorithm and the inference time is 10 times faster than the V4 basic version.",,,,Unverified,,,,,,,,,,,
SenseChat-Medical V4,,,,,2024-02-06,"SenseTime Unveils SenseNova 4.0, Bringing Novel AI experience
",https://www.sensetime.com/en/news-detail/51167493?categoryId=1072,,,,,,,,,,,,,,,,,,,,"SenseChat-Medical V4, SenseTime's upgraded medical LLM, boasts stronger capabilities for multi-round dialogues, context understanding, and tool invocation. It can handle professional medical Q&A, complex inference for medical tasks, intelligent interpretation, and interactive Q&A of multimodal medical documents. SenseChat-Medical V4's overall performance closely matches that of GPT-4 and ranks second in two authoritative industry evaluations: the 2023 Pharmacist Licensure Examination LLM evaluation and the Chinese medical LLM evaluation benchmark MedBench. In the former evaluation, it even outperforms GPT-4 in two categories.",,,,Unverified,,,,,,,,,,,
SenseChat-Vision V4,,,,,2024-02-06,"SenseTime Unveils SenseNova 4.0, Bringing Novel AI experience
",https://www.sensetime.com/en/news-detail/51167493?categoryId=1072,,,,30000000000.0,,,,,,,,,,,,,,,,"Multimodal AI represents a pivotal phase in the evolution of large AI models. SenseChat-Vision V4, the large multimodal model (""LMM"") powered by 30 billion parameters and world-leading image and text comprehension abilities, tops the comprehensive score of MME Benchmark (2199.5 vs GPT-4's 1926.57), an authoritative test for LMMs. SenseChat-Vision V4 enables a wider array of industrial upgrades through practical applications, such as intelligent driving, smart cabin, and the power industry.",,,,Unverified,,,,,,,,,,,
SenseChat 4.0,,,,,2024-02-06,"SenseTime Unveils SenseNova 4.0, Bringing Novel AI experience
",https://www.sensetime.com/en/news-detail/51167493?categoryId=1072,,,,,,,,,,,,,,,,,,,,"SenseTime releases SenseNova 4.0, a multi-dimensional upgrade of the foundation model sets. SenseNova 4.0 demonstrates more advanced knowledge coverage with greater capabilities in reasoning, long text comprehension, numerical inference, code generation, and multimodal interactions.",,,,Unverified,2025-01-14 21:03:25+00:00,,,,,,,,,,
Qwen1.5-32B,Language,Alibaba,Industry,Qwen Team,2024-02-05,Introducing Qwen1.5,https://qwenlm.github.io/blog/qwen1.5/,,,,32000000000.0,32B,,3.36e+23,1.3e+24,"upper bound is taken from Qwen1.5 72B training compute estimation

lower bound is taken from Qwen1.5 14B training compute estimation",Unspecified unreleased,,,,,,,,,,"Qwen1.5 is the beta version of Qwen2, a transformer-based decoder-only language model pretrained on a large amount of data. In comparison with the previous released Qwen, the improvements include:

8 model sizes, including 0.5B, 1.8B, 4B, 7B, 14B, 32B and 72B dense models, and an MoE model of 14B with 2.7B activated;
Significant performance improvement in human preference for chat models;
Multilingual support of both base and chat models;
Stable support of 32K context length for models of all sizes
No need of trust_remote_code.",,Open weights (restricted use),,Confident,2025-01-19 23:30:32+00:00,China,,,,,,,,,
DeepSeekMath 7B,Language,"DeepSeek,Tsinghua University,Peking University","Industry,Academia,Academia","Zhihong Shao, Peiyi Wang, Qihao Zhu, Runxin Xu, Junxiao Song, Xiao Bi, Haowei Zhang, Mingchuan Zhang, Y.K. Li, Y. Wu, Daya Guo",2024-02-05,DeepSeekMath: Pushing the Limits of Mathematical Reasoning in Open Language Models,https://arxiv.org/abs/2402.03300,,,,7000000000.0,"""Our model is initialized with DeepSeek-Coder-Base-v1.5 7B (Guo et al., 2024) and trained for 500B tokens.""",1.014e+23,,,8.04e+22 (base model) + 2.1e+22 (fine-tune) = 1.014e+23,"DeepSeekMath Corpus,arXiv,GitHub,Common Crawl","""By implementing a meticulously designed data selection pipeline, we successfully construct the DeepSeekMath Corpus, a high-quality dataset of 120B tokens from web pages filtered for mathematical content, which is almost 7 times the size of the math web pages used by Minerva (Lewkowycz et al., 2022a) and 9 times the size of the recently released OpenWebMath
(Paster et al., 2023).""

""The distribution of the data is as follows: 56% is from the DeepSeekMath Corpus, 4% from AlgebraicStack, 10% from arXiv, 20% is Github code, and the remaining 10% is natural language data from Common Crawl in both English and Chinese.""",500000000000.0,"""Our model is initialized with DeepSeek-Coder-Base-v1.5 7B (Guo et al., 2024) and trained for 500B tokens.""",,,,,,,"Mathematical reasoning poses a significant challenge for language models due to its complex and structured nature. In this paper, we introduce DeepSeekMath 7B, which continues pre-training DeepSeek-Coder-Base-v1.5 7B with 120B math-related tokens sourced from Common Crawl, together with natural language and code data. DeepSeekMath 7B has achieved an impressive score of 51.7% on the competition-level MATH benchmark without relying on external toolkits and voting techniques, approaching the performance level of Gemini-Ultra and GPT-4. Self-consistency over 64 samples from DeepSeekMath 7B achieves 60.9% on MATH. The mathematical reasoning capability of DeepSeekMath is attributed to two key factors: First, we harness the significant potential of publicly available web data through a meticulously engineered data selection pipeline. Second, we introduce Group Relative Policy Optimization (GRPO), a variant of Proximal Policy Optimization (PPO), that enhances mathematical reasoning abilities while concurrently optimizing the memory usage of PPO.",,Open weights (restricted use),,Confident,2024-12-23 02:32:23+00:00,"China,China,China",DeepSeek Coder 6.7B,2.1e+22,6*7B*500B = 2.1e+22,,,,,,
Qwen1.5-72B,Language,Alibaba,Industry,Qwen Team,2024-02-04,Introducing Qwen1.5,https://qwenlm.github.io/blog/qwen1.5/,,SOTA improvement,"#1 in C-Eval (84.1, better than Qwen-72B. https://qwenlm.github.io/blog/qwen1.5/, https://cevalbenchmark.com/static/leaderboard.html)",72000000000.0,72B,1.3e+24,,,"3T training tokens: https://github.com/QwenLM/Qwen2/issues/97 

6 * 72 billion * 3 trillion = ~1.3e24",Unspecified unreleased,"""We pretrained the models with a large amount of data, and we post-trained the models with both supervised finetuning and direct preference optimization.""",3000000000000.0,3 trillion tokens from this response https://github.com/QwenLM/Qwen2/issues/97,,,,,,,"In recent months, our focus has been on developing a “good” model while optimizing the developer experience. As we progress towards Qwen1.5, the next iteration in our Qwen series, this update arrives just before the Chinese New Year. With Qwen1.5, we are open-sourcing base and chat models across six sizes: 0.5B, 1.8B, 4B, 7B, 14B, and 72B. In line with tradition, we’re also providing quantized models, including Int4 and Int8 GPTQ models, as well as AWQ and GGUF quantized models. To enhance the developer experience, we’ve merged Qwen1.5’s code into Hugging Face transformers, making it accessible with transformers>=4.37.0 without needing trust_remote_code.",,Open weights (restricted use),,Confident,2025-01-27 01:27:25+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
Qwen1.5-7B,Language,Alibaba,Industry,Qwen Team,2024-02-04,Introducing Qwen1.5,https://huggingface.co/Qwen/Qwen1.5-7B,,,,7000000000.0,7B,1.68e+23,,,6*7*10^9*4*10^12 =  1.68e+23,Unspecified unreleased,"""We pretrained the models with a large amount of data, and we post-trained the models with both supervised finetuning and direct preference optimization.""",4000000000000.0,4 trillion tokens from this response https://github.com/QwenLM/Qwen2/issues/97,,,,,,,"Qwen1.5 is the beta version of Qwen2, a transformer-based decoder-only language model pretrained on a large amount of data. In comparison with the previous released Qwen, the improvements include:

8 model sizes, including 0.5B, 1.8B, 4B, 7B, 14B, 32B and 72B dense models, and an MoE model of 14B with 2.7B activated;
Significant performance improvement in human preference for chat models;
Multilingual support of both base and chat models;
Stable support of 32K context length for models of all sizes
No need of trust_remote_code.",,Open weights (unrestricted),,Confident,2025-01-19 23:30:28+00:00,China,,,,,,,,,
Qwen1.5-14B,Language,Alibaba,Industry,Qwen Team,2024-02-04,Introducing Qwen1.5,https://huggingface.co/Qwen/Qwen1.5-14B,,,,14000000000.0,14B,3.36e+23,,,6*14*10^9*4*10^12 =  3.36e+23,Unspecified unreleased,"""We pretrained the models with a large amount of data, and we post-trained the models with both supervised finetuning and direct preference optimization.""",4000000000000.0,4 trillion tokens from this response https://github.com/QwenLM/Qwen2/issues/97,,,,,,,"Qwen1.5 is the beta version of Qwen2, a transformer-based decoder-only language model pretrained on a large amount of data. In comparison with the previous released Qwen, the improvements include:

8 model sizes, including 0.5B, 1.8B, 4B, 7B, 14B, 32B and 72B dense models, and an MoE model of 14B with 2.7B activated;
Significant performance improvement in human preference for chat models;
Multilingual support of both base and chat models;
Stable support of 32K context length for models of all sizes
No need of trust_remote_code.",,Open weights (unrestricted),,Confident,2025-01-19 23:30:30+00:00,China,,,,,,,,,
OLMo-7B,Language,"Allen Institute for AI,University of Washington","Research collective,Academia","Dirk Groeneveld, Iz Beltagy, Pete Walsh, Akshita Bhagia, Rodney Kinney, Oyvind Tafjord, Ananya Harsh Jha, Hamish Ivison, Ian Magnusson, Yizhong Wang, Shane Arora, David Atkinson, Russell Authur, Khyathi Raghavi Chandu, Arman Cohan, Jennifer Dumas, Yanai Elazar, Yuling Gu, Jack Hessel, Tushar Khot, William Merrill, Jacob Morrison, Niklas Muennighoff, Aakanksha Naik, Crystal Nam, Matthew E. Peters, Valentina Pyatkin, Abhilasha Ravichander, Dustin Schwenk, Saurabh Shah, Will Smith, Emma Strubell, Nishant Subramani, Mitchell Wortsman, Pradeep Dasigi, Nathan Lambert, Kyle Richardson, Luke Zettlemoyer, Jesse Dodge, Kyle Lo, Luca Soldaini, Noah A. Smith, Hannaneh Hajishirzi",2024-02-01,OLMo: Accelerating the Science of Language Models,https://arxiv.org/abs/2402.00838v1,,,,7000000000.0,,1.0332e+23,,,"direct calculation:
6*7B*2.46trillion=1.0332 × 10^23

(calculation also reporoduced by the developers in https://arxiv.org/pdf/2501.00656)",Dolma,,2000000000000.0,"""We built our training dataset out of a 2T-token sample from our open dataset, Dolma [...] All of our released models have been trained to at least 2T tokens (a single epoch over our training data), and some have been trained beyond that by starting a second epoch over the data with a different shuffling order"" 

Table 1 indicates total tokens seen are 2.46T for the 7B parameter model, though note that a later release in July 2024 has been trained to 2.75T tokens: https://github.com/allenai/OLMo?tab=readme-ov-file",1.23,,,"AMD Radeon Instinct MI250X,NVIDIA A100",,,"Language models (LMs) have become ubiquitous in both NLP research and in commercial product offerings. As their commercial importance has surged, the most powerful models have become closed off, gated behind proprietary interfaces, with important details of their training data, architectures, and development undisclosed. Given the importance of these details in scientifically studying these models, including their biases and potential risks, we believe it is essential for the research community to have access to powerful, truly open LMs. To this end, this technical report details the first release of OLMo, a state-of-the-art, truly Open Language Model and its framework to build and study the science of language modeling. Unlike most prior efforts that have only released model weights and inference code, we release OLMo and the whole framework, including training data and training and evaluation code. We hope this release will empower and strengthen the open research community and inspire a new wave of innovation.",,Open weights (unrestricted),,Confident,2025-01-03 20:51:41+00:00,"United States of America,United States of America",,,,,"LUMI supercomputer,  MosaicML (Databricks)",,4000000.0,"For OLMo-1B and -7B models, we use a constant global batch size of 
approximately 4M tokens (2048 instances, each with a sequence length of 2048 tokens).",
o3-mini,Language,OpenAI,Industry,"Training
Brian Zhang, Eric Mitchell, Hongyu Ren, Kevin Lu, Max Schwarzer, Michelle Pokrass, Shengjia Zhao, Ted Sanders

Eval
Adam Kalai, Alex Tachard Passos, Ben Sokolowsky, Elaine Ya Le, Erik Ritter, Hao Sheng, Hanson Wang, Ilya Kostrikov, James Lee, Johannes Ferstad, Michael Lampe, Prashanth Radhakrishnan, Sean Fitzgerald, Sebastien Bubeck, Yann Dubois, Yu Bai

Frontier Evals & Preparedness
Andy Applebaum, Elizabeth Proehl, Evan Mays, Joel Parish, Kevin Liu, Leon Maksin, Leyton Ho, Miles Wang, Michele Wang, Olivia Watkins, Patrick Chao, Samuel Miserendino, Tejal Patwardhan

Engineering
Adam Walker, Akshay Nathan, Alyssa Huang, Andy Wang, Ankit Gohel, Ben Eggers, Brian Yu, Bryan Ashley, Chengdu Huang, Christian Hoareau, Davin Bogan, Emily Sokolova, Eric Horacek, Eric Jiang, Felipe Petroski Such, Jonah Cohen, Josh Gross, Justin Becker, Kan Wu, Kevin Whinnery, Larry Lv, Lee Byron, Manoli Liodakis, Max Johnson, Mike Trpcic, Murat Yesildal, Rasmus Rygaard, RJ Marsan, Rohit Ramchandani, Rohan Kshirsagar, Roman Huet, Sara Conlon, Shuaiqi (Tony) Xia, Siyuan Fu, Srinivas Narayanan, Sulman Choudhry, Tomer Kaftan, Trevor Creech

Search
Adam Fry, Adam Perelman, Brandon Wang, Cristina Scheau, Philip Pronin, Sundeep Tirumalareddy, Will Ellsworth, Zewei Chu

Product
Antonia Woodford, Beth Hoover, Jake Brill, Kelly Stirman, Minnia Feng, Neel Ajjarapu, Nick Turley, Nikunj Handa, Olivier Godement

Safety
Andrea Vallone, Andrew Duberstein, Enis Sert, Eric Wallace, Grace Zhao, Irina Kofman, Jieqi Yu, Joaquin Quinonero Candela, Madelaine Boyd, Mehmet Yatbaz, Mike McClay, Mingxuan Wang, Saachi Jain, Sandhini Agarwal, Sam Toizer, Santiago Hernández, Steve Mostovoy, Young Cha, Tao Li, Yunyun Wang

External Redteaming
Lama Ahmad, Troy Peterson


Research Program Managers
Carpus Chang, Kristen Ying

Leadership
Aidan Clark, Dane Stuckey, Jerry Tworek, Jakub Pachocki, Johannes Heidecke, Kevin Weil, Liam Fedus, Mark Chen, Sam Altman, Wojciech Zaremba",2024-01-31,Pushing the frontier of cost-effective reasoning.,https://openai.com/index/openai-o3-mini/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"We’re releasing OpenAI o3-mini, the newest, most cost-efficient model in our reasoning series, available in both ChatGPT and the API today. Previewed in December 2024⁠, this powerful and fast model advances the boundaries of what small models can achieve, delivering exceptional STEM capabilities—with particular strength in science, math, and coding—all while maintaining the low cost and reduced latency of OpenAI o1-mini.

OpenAI o3-mini is our first small reasoning model that supports highly requested developer features including function calling⁠(opens in a new window), Structured Outputs⁠(opens in a new window), and developer messages⁠(opens in a new window), making it production-ready out of the gate. Like OpenAI o1-mini and OpenAI o1-preview, o3-mini will support streaming⁠(opens in a new window). Also, developers can choose between three reasoning effort⁠(opens in a new window) options—low, medium, and high—to optimize for their specific use cases. This flexibility allows o3-mini to “think harder” when tackling complex challenges or prioritize speed when latency is a concern. o3-mini does not support vision capabilities, so developers should continue using OpenAI o1 for visual reasoning tasks. o3-mini is rolling out in the Chat Completions API, Assistants API, and Batch API starting today to select developers in API usage tiers 3-5⁠",,API access,,Unknown,2025-02-13 16:00:37+00:00,United States of America,,,,,,,,,
LLaVA-NeXT-34B (LLaVA-1.6),"Multimodal,Language,Vision","University of Wisconsin Madison,ByteDance,Nanyang Technological University,University of California (UC) Berkeley","Academia,Industry,Academia,Academia","Haotian Liu, Chunyuan Li, Yuheng Li, Bo Li, Yuanhan Zhang, Sheng Shen, Yong Jae Lee",2024-01-30,"LLaVA-NeXT: Improved reasoning, OCR, and world knowledge","https://llava-vl.github.io/blog/2024-01-30-llava-next/, https://huggingface.co/liuhaotian/llava-v1.6-34b",,,"""SoTA Performance! LLaVA-NeXT achieves the best performance compared with open-source LMMs such as CogVLM or Yi-VL. Compared with commercial ones, it catches up to Gemini Pro and outperforms Qwen-VL-Plus on selected benchmarks.""",34750000000.0,34.75B,2.5878528e+20,,,"2.6e20 = 32 * 312e12 * 0.3 * 24* 3600 = num gpus * peak flops * assumed utilization rate * time in seconds
""The largest 34B variant finishes training in ~1 day with 32 A100s.""",,"""Data: Coming soon.""",,"'1318K"" image-text pairs",,24.0,"""The largest 34B variant finishes training in ~1 day with 32 A100s.""",NVIDIA A100,32.0,,,,Open weights (unrestricted),,Likely,2025-02-11 22:04:26+00:00,"United States of America,China,Singapore,United States of America",,,,,,,,,
BGE-M3 Embedding,Language,Beijing Academy of Artificial Intelligence / BAAI,Academia,"Jianlv Chen, Shitao Xiao, Peitian Zhan, Kun Luo, Defu Lian, Zheng Liu",2024-01-30,"BGE M3-Embedding: Multi-Lingual, Multi-Functionality, Multi-Granularity Text Embeddings Through Self-Knowledge Distillation",https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/BGE_M3/BGE_M3.pdf,,,,335000000.0,335M params (from Hugging Face model card),,,,"I'm not sure that 6ND works since the architecture might not be dense.

Pre-training is conducted on 32 A100(40GB) GPUs for 20,000 steps.
The second stage is conducted on 96 A800(80GB) GPUs. This training process takes 25,000 steps.","MTP,mC4,CC-News,xP3,Wikipedia,NLLB,S2ORC,CCMatrix",Table 1,1200041400.0,"From Table 1
Pre-training data: 1.2B tokens
Fine-tuning data: 41.4K tokens",,,,"NVIDIA A100,NVIDIA A800",,,"In this paper, we present a new embedding
model, called M3-Embedding, which is distinguished
for its versatility in Multi-Linguality,
Multi-Functionality, and Multi-Granularity. It
can support more than 100 working languages,
leading to new state-of-the-art performances
on multi-lingual and cross-lingual retrieval
tasks. It can simultaneously perform the three
common retrieval functionalities of embedding
model: dense retrieval, multi-vector retrieval,
and sparse retrieval, which provides a unified
model foundation for real-world IR applications.
It is able to process inputs of different
granularities, spanning from short sentences to
long documents of up to 8192 tokens. The effective
training of M3-Embedding involves the
following technical contributions. We propose
a novel self-knowledge distillation approach,
where the relevance scores from different retrieval
functionalities can be integrated as the
teacher signal to enhance the training quality.
We also optimize the batching strategy,
enabling a large batch size and high training
throughput to ensure the discriminativeness of
embeddings. To the best of our knowledge,
M3-Embedding is the first embedding model
which realizes such a strong versatility. The
model and code will be publicly available at
https://github.com/FlagOpen/FlagEmbedding.",,Open weights (unrestricted),,Likely,2024-09-05 18:08:31+00:00,China,XLM-RoBERTa,,,,,,,,
Code Llama-70B,Language,Meta AI,Industry,"Baptiste Rozière, Jonas Gehring, Fabian Gloeckle, Sten Sootla, Itai Gat, Ellen Tan, Yossef (Yossi) Adi, Jingyu Liu, Tal Remez, Jérémy Rapin, Artyom Kozhevnikov, Ivan Evtimov, Joanna Bitton, Manish Bhatt, Cristian Canton Ferrer, Aaron Grattafiori, Wenhan Xiong, Alexandre Defossez, Jade Copet, Faisal Azhar, Hugo Touvron, Gabriel Synnaeve, Louis Martin, Nicolas Usunier, Thomas Scialom",2024-01-29,Code Llama: Open Foundation Models for Code,"https://ai.meta.com/research/publications/code-llama-open-foundation-models-for-code/
https://arxiv.org/abs/2308.12950",1297.0,,"""In our own benchmark testing, Code Llama outperformed state-of-the-art publicly available LLMs on code tasks""",70000000000.0,70B,1.26e+24,,,"Base model saw 2T tokens, Code Llama-70B was trained on an additional 1T. 6NC:
6 * 3T * 70B = 1.26e24",Unspecified unreleased,"We are releasing four sizes of Code Llama with 7B, 13B, 34B, and 70B parameters respectively. Each of these models is trained with 500B tokens of code and code-related data, apart from 70B, which is trained on 1T tokens.",1000000000000.0,Llama 70B training dataset was 2 trillion tokens. Code Llama finetuning dataset was 1 trillion tokens of code.,1.0,6480.0,"Assuming Code Llama 70B training continued on same hardware as Llama 2 70B.
Llama 2 70B used 1720320 A100 hours. Training all Code Llama models took 1.4M A100 hours (Table 26). Based on model sizes and number of tokens seen, 70B model used about 985k A100 hours to fine tune (see utilization notes). Total GPU hours is thus around 2.7M",NVIDIA A100 SXM4 80 GB,400.0,,"We release Code Llama, a family of large language models for code based on Llama 2 providing state-of-the-art performance among open models, infilling capabilities, support for large input contexts, and zero-shot instruction following ability for programming tasks. We provide multiple flavors to cover a wide range of applications: foundation models (Code Llama), Python specializations (Code Llama - Python), and instruction-following models (Code Llama - Instruct) with 7B, 13B and 34B parameters each. All models are trained on sequences of 16k tokens and show improvements on inputs with up to 100k tokens. 7B and 13B Code Llama and Code Llama - Instruct variants support infilling based on surrounding content. Code Llama reaches state-of-the-art performance among open models on several code benchmarks, with scores of up to 53% and 55% on HumanEval and MBPP, respectively. Notably, Code Llama - Python 7B outperforms Llama 2 70B on HumanEval and MBPP, and all our models outperform every other publicly available model on MultiPL-E. We release Code Llama under a permissive license that allows for both research and commercial use.",,Open weights (restricted use),0.3821,Confident,2024-11-25 20:23:39+00:00,United States of America,Llama 2-70B,4.2e+23,"Fine tuning from base model uses 1T tokens.
70B * 1T * 6 = 4.2E23",,,,4000000.0,"Llama 2 pretraining used 4M batches. I believe the sentence below refers to the training from Llama 2 -> Code Llama-base. 

""We use a batch size of 4M tokens which are presented as sequences of 4,096 tokens each.""

Subsequent fine-tuning batch sizes are 500k-1M. 

""For Code Llama - Instruct, we train with a batch size of 524,288 tokens and on approx. 5B tokens in total... For long context fine-tuning (LCFT)... the batch size is set to 2M tokens for model sizes 7B and 13B and to 1M tokens for model size 34B, respectively. Training lasts for 10,000 gradient steps by default."" ",
Baichuan3,,,,,2024-01-29,"百川智能发布超千亿大模型Baichuan 3，中文评测水平超GPT-4
",https://www.jiqizhixin.com/articles/2024-01-29-12,,,,1000000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Karakuri LM,Language,KARAKURI Inc.,Industry,,2024-01-26,KARAKURI LM,https://huggingface.co/karakuri-ai/karakuri-lm-70b-v0.1,,,,70000000000.0,70B,,,,,,"Uses cc100 (~0.6T tokens), mC4 (6.3T tokens), and RedPajama-Data-1T (1.2T tokens).

Seems likely these contain considerable overlap.",,"If no overlap, full dataset being trained on contains as many as 8.1T tokens.",,,,,,,,,Open weights (restricted use),,Confident,2024-09-05 18:08:31+00:00,Japan,Llama 2-70B,,,,,,,,
ProteinStructureTransformer,Biology,Max Planck Institute of Biochemistry,Academia,"Dexiong Chen, Philip Hartout, Paolo Pellizzoni, Carlos Oliver, Karsten Borgwardt",2024-01-26,ENDOWING PROTEIN LANGUAGE MODELS WITH STRUCTURAL KNOWLEDGE,https://arxiv.org/abs/2401.14819,7.0,,,,,4.400000000000004e+19,,,"1. Hardware: 4x NVIDIA H100 PCIe GPUs (7.56e14 FLOP/s per GPU with FP16 Tensor)
2. Training duration: 10 hours (provided directly)
3. Utilization: 40%
4. Calculation: 4 GPUs × 7.56e14 FLOP/s × 36000 seconds × 0.4 utilization = 4.4e19 FLOPs",,,160000001.00000018,"542,378 proteins × 300 residues/protein = 162,713,400 tokens (1.627e8)

Final estimate: 1.6e8 datapoints",,,,,,,"Understanding the relationships between protein sequence, structure and function is a long-standing biological challenge with manifold implications from drug design to our understanding of evolution. Recently, protein language models have emerged as the preferred method for this challenge, thanks to their ability to harness large sequence databases. Yet, their reliance on expansive sequence data and parameter sets limits their flexibility and practicality in real-world scenarios. Concurrently, the recent surge in computationally predicted protein structures unlocks new opportunities in protein representation learning. While promising, the computational burden carried by such complex data still hinders widely-adopted practical applications. To address these limitations, we introduce a novel framework that enhances protein language models by integrating protein structural data. Drawing from recent advances in graph transformers, our approach refines the self-attention mechanisms of pretrained language transformers by integrating structural information with structure extractor modules. This refined model, termed Protein Structure Transformer (PST), is further pretrained on a small protein structure database, using the same masked language modeling objective as traditional protein language models. Empirical evaluations of PST demonstrate its superior parameter efficiency relative to protein language models, despite being pretrained on a dataset comprising only 542K structures. Notably, PST consistently outperforms the state-of-the-art foundation model for protein sequences, ESM-2, setting a new benchmark in protein function prediction. Our findings underscore the potential of integrating structural information into protein language models, paving the way for more effective and efficient protein modeling Code and pretrained models are available at this https URL.",,,,Unverified,2025-02-14 20:49:32+00:00,Germany,,,,,,,,,
Yan,,,,,2024-01-26,"Shanghai Stonehill Technology Unveils the First Non-Attention-Based Large Model in China: Faster, Stronger, More Economical
",https://finance.yahoo.com/news/shanghai-stonehill-technology-unveils-first-084100444.html?guccounter=1&guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&guce_referrer_sig=AQAAALZVOWhnGXMeBPEqVFKDfgb5yMoB2IZcvVtHDMWMIRNDKB7imuhHqZigPiw0fT76pyLSJCU-3ykJlOUUrlm_E7CjdQow3_XdDst1g0TEVvjCD2W9JPgl4Mmn5COAdqZtRzeFPX7GaHN9sp0PF7JZ85l_6Gu7LD1HnXcTsXJtQQed,,,,,,,,,,,,,,,,,,,,"On January 24th, at the ""New Architecture of Large Language Model"", Rock AI (a subsidiary of Shanghai Stonehill Technology Co., Ltd.) officially unveiled the first domestic general-purpose large language model without an Attention mechanism—the Yan Model. It is also one of the rare large models in the industry that does not rely on a Transformer architecture. The Yan Model offers a training efficiency that is 7 times higher than that of Transformer models with equivalent parameters, 5 times the inference throughput, and 3 times the memory capacity. Additionally, it supports lossless operation on CPUs, reduced hallucination in expressions, and 100% support for private deployment applications.",,,,Unverified,,,,,,,,,,,
DeepSeek Coder 33B,Language,"DeepSeek,Peking University","Industry,Academia","Daya Guo, Qihao Zhu, Dejian Yang, Zhenda Xie, Kai Dong, Wentao Zhang, Guanting Chen, Xiao Bi, Y. Wu, Y.K. Li, Fuli Luo, Yingfei Xiong, Wenfeng Liang",2024-01-25,DeepSeek-Coder: When the Large Language Model Meets Programming -- The Rise of Code Intelligence,https://arxiv.org/abs/2401.14196,,,"SOTA among open-source: ""For coding capabilities, DeepSeek Coder achieves state-of-the-art performance among open-source code models on multiple programming languages and various benchmarks.""",33000000000.0,33B,3.96e+23,,,"""Step 1: Initially pre-trained with a dataset consisting of 87% code, 10% code-related language (Github Markdown and StackExchange), and 3% non-code-related Chinese language. Models are pre-trained using 1.8T tokens and a 4K window size in this step.
Step 2: Further Pre-training using an extended 16K window size on an additional 200B tokens, resulting in foundational models (DeepSeek-Coder-Base).
Step 3: Instruction Fine-tuning on 2B tokens of instruction data, resulting in instruction-tuned models (DeepSeek-Coder-Instruct).""

This means it was trained on 2T tokens. 2T * 33B * 6 = 3.96e23",,"""Trained from scratch on 2T tokens, including 87% code and 13% linguistic data in both English and Chinese languages.""",2000000000000.0,"""Trained from scratch on 2T tokens, including 87% code and 13% linguistic data in both English and Chinese languages.""

""The total data volume is 798 GB with 603 million files.""",,,,,,,"The rapid development of large language models has revolutionized code intelligence in software development. However, the predominance of closed-source models has restricted extensive research and development. To address this, we introduce the DeepSeek-Coder series, a range of open-source code models with sizes from 1.3B to 33B, trained from scratch on 2 trillion tokens. These models are pre-trained on a high-quality project-level code corpus and employ a fill-in-the-blank task with a 16K window to enhance code generation and infilling. Our extensive evaluations demonstrate that DeepSeek-Coder not only achieves state-of-the-art performance among open-source code models across multiple benchmarks but also surpasses existing closed-source models like Codex and GPT-3.5. Furthermore, DeepSeek-Coder models are under a permissive license that allows for both research and unrestricted commercial use.",,Open weights (restricted use),,Likely,2024-12-23 02:28:32+00:00,"China,China",,,,,,,,,
Qwen-VL-Max,"Multimodal,Language,Vision",Alibaba,Industry,,2024-01-25,Introducing Qwen-VL,https://qwenlm.github.io/blog/qwen-vl/,,SOTA improvement,"""Notably, Qwen-VL-Max outperforms both GPT-4V from OpenAI and Gemini from Google in tasks on Chinese question answering and Chinese text comprehension""",7000000000.0,"Not stated. Qwen-VL (less capable, presumably smaller version) is 9.6B

Upd: 7B parameters mentioned here
https://github.com/QwenLM/Qwen-VL#qwen-vl-plus",,,,,Unspecified unreleased,,,,,,,,,,"Along with the rapid development of our large language model Qwen, we leveraged Qwen’s capabilities and unified multimodal pretraining to address the limitations of multimodal models in generalization, and we opensourced multimodal model Qwen-VL in Sep. 2023. Recently, the Qwen-VL series has undergone a significant upgrade with the launch of two enhanced versions, Qwen-VL-Plus and Qwen-VL-Max. The key technical advancements in these versions include:

Substantially boost in image-related reasoning capabilities;
Considerable enhancement in recognizing, extracting, and analyzing details within images and texts contained therein;
Support for high-definition images with resolutions above one million pixels and images of various aspect ratios.",,API access,,Confident,2025-02-03 16:35:51+00:00,China,,,,,,,,,
text-embedding-3-small,Language,OpenAI,Industry,,2024-01-25,New embedding models and API updates,https://openai.com/index/new-embedding-models-and-api-updates/,,,,,,,,,,,,,,,,,,,,,,API access,,Unknown,2024-12-30 19:28:10+00:00,United States of America,,,,,,,,,
text-embedding-3-large,Language,OpenAI,Industry,,2024-01-25,New embedding models and API updates,https://openai.com/index/new-embedding-models-and-api-updates/,,,,,,,,,,,,,,,,,,,,,,API access,,Unknown,2024-12-30 19:27:56+00:00,United States of America,,,,,,,,,
Fuyu-Heavy,"Multimodal,Language",Adept,Industry,,2024-01-24,Adept Fuyu-Heavy: A new multimodal model,https://www.adept.ai/blog/adept-fuyu-heavy,,,"According to Adept: ""Fuyu-Heavy is the world’s third-most-capable multimodal model, behind only GPT4-V and Gemini Ultra, which are 10-20 times bigger.""

""Fuyu-Heavy performs roughly on par with Gemini Pro on standard text-only evaluations, outperforming it on the commonly used MMLU benchmark.""",100000000000.0,"""Fuyu-Heavy is the world’s third-most-capable multimodal model, behind only GPT4-V and Gemini Ultra, which are 10-20 times bigger""

So possibly around ~100B params, though GPT-4/Gemini params aren't public",,,,Nvidia hardware,,"curated/generated image data:

""high-quality image pre-training data is scarce, we’ve devoted a lot of effort to collecting, curating, and even creating this data. There’s also a delicate balance between text and image tasks — we had to develop recipes for striking this balance at scale""",,,,,,,,,"We’re excited to introduce Adept Fuyu-Heavy, a new multimodal model designed specifically for digital agents. Fuyu-Heavy is the world’s third-most-capable multimodal model, behind only GPT4-V and Gemini Ultra, which are 10-20 times bigger. We’re excited about this model because:

It excels at multimodal reasoning. To us the killer feature is UI understanding, but it also performs well on more traditional multimodal benchmarks. In particular, Fuyu-Heavy scores higher on the MMMU benchmark than even Gemini Pro.
On standard text-based benchmarks, it matches or exceeds the performance of models in the same compute class despite having to devote some of its capacity to image modeling.
It demonstrates that (with some modifications) we can scale up the Fuyu architecture and reap all of the associated benefits, including handling arbitrary size/shape images and efficiently re-using existing transformer optimizations.",,,,Speculative,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Lumiere,"Multimodal,Video","Google Research,Weizmann Institute of Science,Tel Aviv University,Technion - Israel Institute of Technology","Industry,Academia,Academia,Academia","Omer Bar-Tal, Hila Chefer, Omer Tov, Charles Herrmann, Roni Paiss, Shiran Zada, Ariel Ephrat, Junhwa Hur, Guanghui Liu, Amit Raj, Yuanzhen Li, Michael Rubinstein, Tomer Michaeli, Oliver Wang, Deqing Sun, Tali Dekel, Inbar Mosseri",2024-01-23,Lumiere: A Space-Time Diffusion Model for Video Generation,https://arxiv.org/abs/2401.12945,115.0,,"Authors claim to attain state-of-the-art text-to-video generation results, though quantitative results in Table 1 indicate that Lumiere is did not set records for either metric (though it is at the Pareto frontier of these metrics). Figure 10 indicates qualitative improvements over baseline systems, but the baseline appears to be an average of all other systems.",,"The authors ""inflate"" a pre-trained T2I Imagen model (3B parameters). These pre-trained weights are frozen. An overview of the inflated architecture is given in Figure 4, but is not sufficient to calculate total trainable parameters.",,,,Actual # of newly trained parameters is unclear. The 3B Imagen weights are frozen.,,,2400000000.0,"We train our T2V model on a dataset containing 30M videos along with their text caption. The videos are 80 frames long at 16 fps (5 seconds). The base model is trained at 128×128 and the SSR outputs 1024 × 1024 frames.

30M videos * 80 frame/video = 2.4B",200.0,,,,,Self-supervised learning,"We introduce Lumiere -- a text-to-video diffusion model designed for synthesizing videos that portray realistic, diverse and coherent motion -- a pivotal challenge in video synthesis. To this end, we introduce a Space-Time U-Net architecture that generates the entire temporal duration of the video at once, through a single pass in the model. This is in contrast to existing video models which synthesize distant keyframes followed by temporal super-resolution -- an approach that inherently makes global temporal consistency difficult to achieve. By deploying both spatial and (importantly) temporal down- and up-sampling and leveraging a pre-trained text-to-image diffusion model, our model learns to directly generate a full-frame-rate, low-resolution video by processing it in multiple space-time scales. We demonstrate state-of-the-art text-to-video generation results, and show that our design easily facilitates a wide range of content creation tasks and video editing applications, including image-to-video, video inpainting, and stylized generation.",,Unreleased,,Confident,2024-11-01 14:05:35+00:00,"Multinational,United States of America,Israel,Israel,Israel",Imagen,,,,,,,,
Yi-VL-34B,"Vision,Language,Multimodal",01.AI,Industry,,2024-01-23,"Yi Vision Language Model
Better Bilingual Multimodal Model",https://huggingface.co/01-ai/Yi-VL-34B,,,,34000000000.0,34b,1.85174e+22,,,"989500000000000*240*3600*128*0.3 = 3.2829235e+22

6*34B*(100*10^6*224×224/14×14 + 25*10^6*448×448/14×14) =  1.04448 × 10^22 

sqrt(3.2829235e+22*1.04448 × 10^22 ) = 1.85174... × 10^22","LAION-400M,LLaVAR,Flickr2K,VQAv2,RefCOCO",,,"""Stage 1: The parameters of ViT and the projection module are trained using an image resolution of 224×224. The LLM weights are frozen. The training leverages an image caption dataset comprising 100 million image-text pairs from LAION-400M. ""

""Stage 2: The image resolution of ViT is scaled up to 448×448, and the parameters of ViT and the projection module are trained. It aims to further boost the model's capability for discerning intricate visual details. The dataset used in this stage includes about 25 million image-text pairs, such as LAION-400M, CLLaVA, LLaVAR, Flickr, VQAv2, RefCOCO, Visual7w and so on.""",1.0,240.0,"""The total training time amounted to approximately 10 days for Yi-VL-34B""",NVIDIA H100 SXM5 80GB,128.0,,"Yi Vision Language (Yi-VL) model is the open-source, multimodal version of the Yi Large Language Model (LLM) series, enabling content comprehension, recognition, and multi-round conversations about images.

Yi-VL demonstrates exceptional performance, ranking first among all existing open-source models in the latest benchmarks including MMMU in English and CMMMU in Chinese (based on data available up to January 2024).

Yi-VL-34B is the first open-source 34B vision language model worldwide.",,Open weights (restricted use),,Confident,2025-02-10 20:20:14+00:00,China,"Yi-34B,CLIP ViT-H/14 - LAION-2B",,,,,,,,
Prothyena,Biology,Tokyo Institute of Technology,Academia,"Yiming Zhang, Manabu Okumura",2024-01-22,ProtHyena: A fast and efficient foundation protein language model at single amino acid Resolution,https://www.biorxiv.org/content/10.1101/2024.01.18.576206v1.abstract,2.0,,,,,,,,,,,3000000001.000009,"Data Estimate Summary:
10,000,000 sequences × 300 amino acids = 3,000,000,000 tokens (3 billion)",,,,,,,"The emergence of self-supervised deep language models has revolutionized natural language processing tasks and has recently extended its applications to biological sequence analysis. Traditional models, primarily based on the Transformer and BERT architectures, demonstrate substantial effectiveness in various applications. However, these models are inherently constrained by the attention mechanism’s quadratic computational complexity O(L2), limiting their efficiency and the length of context they can process. Addressing these limitations, we introduce ProtHyena, a novel approach that leverages the Hyena operator. This innovative methodology circumvents the constraints imposed by attention mechanisms, thereby reducing the time complexity to a subquadratic, enabling the modeling of extra-long protein sequences at the single amino acid level without the need to compress data. ProtHyena is able to achieve, and in many cases exceed, state-of-the-art results in various downstream tasks with only 10% of the parameters typically required by attention-based models. The architecture of ProtHyena presents a highly efficient solution for training protein predictors, offering a promising avenue for fast and efficient analysis of biological sequences.",,,,Unverified,2025-01-30 05:04:55+00:00,Japan,,,,,,,,,
StableLM-2-1.6B,Language,Stability AI,Industry,Stability AI Language Team,2024-01-18,Stable LM 2 1.6B,https://huggingface.co/stabilityai/stablelm-2-1_6b,,,,1644417024.0,Table under Model Architecture gives exact parameter count,1.92e+22,,,"6 * 1.6B * 2T = 19200000000000000000000
","RefinedWeb,RedPajama-Data,The Pile,StarCoder","""The dataset is comprised of a filtered mixture of open-source large-scale datasets available on the HuggingFace Hub: Falcon RefinedWeb extract (Penedo et al., 2023), RedPajama-Data (Together Computer., 2023) and The Pile (Gao et al., 2020) both without the Books3 subset, and StarCoder (Li et al., 2023). We further supplement our training with multi-lingual data from CulturaX (Nguyen et al., 2023) and, in particular, from its OSCAR corpora, as well as restructured data in the style of Yuan & Liu (2022).""",2000000000000.0,"""model pre-trained on 2 trillion tokens of diverse multilingual and code datasets for two epochs.""",,,,NVIDIA A100 SXM4 40 GB,512.0,Self-supervised learning,,,Open weights (non-commercial),,Confident,2024-10-26 16:37:36+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
ESM-NBR,Biology,Hunan University,Academia,"Wenwu Zeng, Dafeng Lv, Xuan Liu, Guo Chen, Wenjuan Liu, Shaoliang Peng",2024-01-18,ESM-NBR: fast and accurate nucleic acid-binding residue prediction via protein language model feature representation and multi-task learning,https://ieeexplore.ieee.org/abstract/document/10385509?casa_token=3fdFlCTqsngAAAAA:e2xRjxP3NP4t39elNf9BYR-zw6AWHayrqqFsavdQYXyyVGp7Jpyu62satcyzrum7NQ-MSFK7Ug,4.0,,,,,,,,,,,13000000001.000025,"Summary for ESM-NBR data estimate:

Pre-training (UniRef50):
43,000,000 proteins × 300 residues = 12,900,000,000 tokens (1.29e10)

Training (YK17-Tr + DRNATr-1068):
2,068 proteins × 300 residues = 620,400 tokens (6.2e5)

Total: 12,900,000,000 + 620,400 ≈ 1.29e10 tokens

Final estimate: 1.3e10 data points",,,,,,,"Protein-nucleic acid interactions play a very important role in a variety of biological activities. Accurate identification of nucleic acid-binding residues is a critical step in understanding the interaction mechanisms. Although many computationally based methods have been developed to predict nucleic acid-binding residues, challenges remain. In this study, a fast and accurate sequence-based method, called ESM-NBR, is proposed. In ESM-NBR, we first use the large protein language model ESM2 to extract discriminative biological properties feature representation from protein primary sequences; then, a multi-task deep learning model composed of stacked bidirectional long short-term memory (BiLSTM) and multi-layer perceptron (MLP) networks is employed to explore common and private information of DNA- and RNA-binding residues with ESM2 feature as input. Experimental results on benchmark data sets demonstrate that the prediction performance of ESM2 feature representation comprehensively outperforms evolutionary information-based hidden Markov model (HMM) features. Meanwhile, the ESM-NBR obtains the MCC values for DNA-binding residues prediction of 0.427 and 0.391 on two independent test sets, which are 18.61 and 10.45% higher than those of the second-best methods, respectively. Moreover, by completely discarding the time-cost multiple sequence alignment process, the prediction speed of ESM-NBR far exceeds that of existing methods (5.52s for a protein sequence of length 500, which is about 16 times faster than the second-fastest method). A user-friendly standalone package and the data of ESM-NBR are freely available for academic use at: https://github.com/wwzll123/ESM-NBR.",,,,Unverified,2025-01-30 05:04:31+00:00,China,,,,,,,,,
XGPT,,,,,2024-01-18,"XGPT---国内网安领域首个通过备案的生成式人工智能大模型
",https://x.threatbook.com/v5/article?threatInfoID=101146,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
AlphaGeometry,Mathematics,"Google DeepMind,New York University (NYU)","Industry,Academia","Trieu H. Trinh, Yuhuai Wu, Quoc V. Le, He He, Thang Luong",2024-01-17,Solving olympiad geometry without human demonstrations,https://www.nature.com/articles/s41586-023-06747-5,186.0,SOTA improvement,"""On a test set of 30 latest olympiad-level problems, AlphaGeometry solves 25, outperforming the previous best method that only solves ten problems and approaching the performance of an average International Mathematical Olympiad (IMO) gold medallist.""",151000000.0,"""Overall, the transformer has 151 million parameters, excluding embedding layers at its input and output heads.""",,,,"Training details. Don't think there's enough info for a FLOP estimate.

""Our customized tokenizer is trained with ‘word’ mode using
SentencePiece36 and has a vocabulary size of 757. We limit the maximum context length to 1,024 tokens and use T5-style relative position embedding37. Sequence packing38,39 is also used because more
than 90% of our sequences are under 200 in length. During training, a
dropout40 rate of 5% is applied pre-attention and post-dense. A 4 × 4 slice of TPUv3 (ref. 41) is used as its hardware accelerator. For pretraining, we train the transformer with a batch size of 16 per core
and a cosine learning-rate schedule that decays from 0.01 to 0.001
in 10,000,000 steps. For fine-tuning, we maintain the final learning rate of 0.001 for another 1,000,000 steps""",,Synthetic dataset of geometry proofs,,"100m examples of theorem-proofs

""By using existing symbolic engines on a diverse set of random theorem premises, we extracted 100 million synthetic theorems and their
proofs, many with more than 200 proof steps, four times longer than
the average proof length of olympiad theorems.""",,,,Google TPU v3,,,"Proving mathematical theorems at the olympiad level represents a notable milestone in human-level automated reasoning1,2,3,4, owing to their reputed difficulty among the world’s best talents in pre-university mathematics. Current machine-learning approaches, however, are not applicable to most mathematical domains owing to the high cost of translating human proofs into machine-verifiable format. The problem is even worse for geometry because of its unique translation challenges1,5, resulting in severe scarcity of training data. We propose AlphaGeometry, a theorem prover for Euclidean plane geometry that sidesteps the need for human demonstrations by synthesizing millions of theorems and proofs across different levels of complexity. AlphaGeometry is a neuro-symbolic system that uses a neural language model, trained from scratch on our large-scale synthetic data, to guide a symbolic deduction engine through infinite branching points in challenging problems. On a test set of 30 latest olympiad-level problems, AlphaGeometry solves 25, outperforming the previous best method that only solves ten problems and approaching the performance of an average International Mathematical Olympiad (IMO) gold medallist. Notably, AlphaGeometry produces human-readable proofs, solves all geometry problems in the IMO 2000 and 2015 under human expert evaluation and discovers a generalized version of a translated IMO theorem in 2004.",,Open weights (unrestricted),,Confident,2024-11-01 14:05:35+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America",,,,,,,,,
GLM-4,"Language,Multimodal,Image generation",Zhipu AI,Industry,"Aohan Zeng, Bin Xu, Bowen Wang, Chenhui Zhang, Da Yin, Diego Rojas, Guanyu Feng, Hanlin Zhao, Hanyu Lai, Hao Yu, Hongning Wang, Jiadai Sun, Jiajie Zhang, Jiale Cheng, Jiayi Gui, Jie Tang, Jing Zhang, Juanzi Li, Lei Zhao, Lindong Wu, Lucen Zhong, Mingdao Liu, Minlie Huang, Peng Zhang, Qinkai Zheng, Rui Lu, Shuaiqi Duan, Shudan Zhang, Shulin Cao, Shuxun Yang, Weng Lam Tam, Wenyi Zhao, Xiao Liu, Xiao Xia, Xiaohan Zhang, Xiaotao Gu, Xin Lv, Xinghan Liu, Xinyi Liu, Xinyue Yang, Xixuan Song, Xunkai Zhang, Yifan An, Yifan Xu, Yilin Niu, Yuantao Yang, Yueyan Li, Yushi Bai, Yuxiao Dong, Zehan Qi, Zhaoyu Wang, Zhen Yang, Zhengxiao Du, Zhenyu Hou, Zihan Wang",2024-01-17,ChatGLM: A Family of Large Language Models from GLM-130B to GLM-4 All Tools,https://arxiv.org/abs/2406.12793,,,,,,,,,,,"""To date, the GLM-4 models are pre-trained on ten trillions of tokens mostly in Chinese and English, along with a small set of corpus from 24 languages, and aligned primarily for Chinese and English usage""",10000000000000.0,,,,,,,,"We introduce ChatGLM, an evolving family of large language models that we have been developing over time. This report primarily focuses on the GLM-4 language series, which includes GLM-4, GLM-4-Air, and GLM-4-9B. They represent our most capable models that are trained with all the insights and lessons gained from the preceding three generations of ChatGLM. To date, the GLM-4 models are pre-trained on ten trillions of tokens mostly in Chinese and English, along with a small set of corpus from 24 languages, and aligned primarily for Chinese and English usage. The high-quality alignment is achieved via a multi-stage post-training process, which involves supervised fine-tuning and learning from human feedback. Evaluations show that GLM-4 1) closely rivals or outperforms GPT-4 in terms of general metrics such as MMLU, GSM8K, MATH, BBH, GPQA, and HumanEval, 2) gets close to GPT-4-Turbo in instruction following as measured by IFEval, 3) matches GPT-4 Turbo (128K) and Claude 3 for long context tasks, and 4) outperforms GPT-4 in Chinese alignments as measured by AlignBench. The GLM-4 All Tools model is further aligned to understand user intent and autonomously decide when and which tool(s) touse -- including web browser, Python interpreter, text-to-image model, and user-defined functions -- to effectively complete complex tasks. In practical applications, it matches and even surpasses GPT-4 All Tools in tasks like accessing online information via web browsing and solving math problems using Python interpreter. Over the course, we have open-sourced a series of models, including ChatGLM-6B (three generations), GLM-4-9B (128K, 1M), GLM-4V-9B, WebGLM, and CodeGeeX, attracting over 10 million downloads on Hugging face in the year 2023 alone. The open models can be accessed through this https URL and this https URL.",,Hosted access (no API),,Confident,2024-12-16 19:42:39+00:00,China,,,,,,,,,
VideoCrafter2,Video,Tencent,Industry,"Haoxin Chen, Yong Zhang, Xiaodong Cun, Menghan Xia, Xintao Wang, Chao Weng, Ying Shan",2024-01-17,VideoCrafter2: Overcoming Data Limitations for High-Quality Video Diffusion Models,https://arxiv.org/abs/2401.09047,,,,,,,,,,"WebVid-10M,LAION-COCO,JourneyDB","""For joint image and video training,
we utilize the low-quality WebVid-10M and LAION-COCO
datasets.""",,"""The training resolution is set at 512 × 320. <..> The models are trained on 32 NVIDIA A100 GPUs for 270K iterations with a batch size of 128.  <..> The finetuning is conducted on 8 A100 GPUs for 30K iterations with a batch size of 256. Given that the images from JDB have a square resolution, we adjust the finetuning resolution to 512 × 512.""",,,,NVIDIA A100,32.0,,"Text-to-video generation aims to produce a video based on a given prompt. Recently, several commercial video models have been able to generate plausible videos with minimal noise, excellent details, and high aesthetic scores. However, these models rely on large-scale, well-filtered, high-quality videos that are not accessible to the community. Many existing research works, which train models using the low-quality WebVid-10M dataset, struggle to generate high-quality videos because the models are optimized to fit WebVid-10M. In this work, we explore the training scheme of video models extended from Stable Diffusion and investigate the feasibility of leveraging low-quality videos and synthesized high-quality images to obtain a high-quality video model. We first analyze the connection between the spatial and temporal modules of video models and the distribution shift to low-quality videos. We observe that full training of all modules results in a stronger coupling between spatial and temporal modules than only training temporal modules. Based on this stronger coupling, we shift the distribution to higher quality without motion degradation by finetuning spatial modules with high-quality images, resulting in a generic high-quality video model. Evaluations are conducted to demonstrate the superiority of the proposed method, particularly in picture quality, motion, and concept composition.",,Open weights (unrestricted),,Unknown,2024-11-17 22:23:40+00:00,China,,,,,,,,,
ProteinINR,Biology,Kakao,Industry,"Youhan Lee, Hasun Yu, Jaemyung Lee, Jaehoon Kim",2024-01-16,"Pre-training Sequence, Structure, and Surface Features for Comprehensive Protein Representation Learning",https://openreview.net/forum?id=BEH4mGo7zP,5.0,,,,,,,,,,,15000000001.0,"Calculation: 16,384 x 906,458 = 14,879,754,112 ≈ 1.5e10 data points

Additional calculation: 300 x 906,458 = 272,000,000 points (sequence data)

Final estimate: 1.5e10 data points (dominated by structural data)",,,,,,,"Proteins can be represented in various ways, including their sequences, 3D structures, and surfaces. While recent studies have successfully employed sequence- or structure-based representations to address multiple tasks in protein science, there has been significant oversight in incorporating protein surface information, a critical factor for protein function. In this paper, we present a pre-training strategy that incorporates information from protein sequences, 3D structures, and surfaces to improve protein representation learning. Specifically, we utilize Implicit Neural Representations (INRs) for learning surface characteristics, and name it ProteinINR. We confirm that ProteinINR successfully reconstructs protein surfaces, and integrate this surface learning into the existing pre-training strategy of sequences and structures. Our results demonstrate that our approach can enhance performance in various downstream tasks, thereby underscoring the importance of including surface attributes in protein representation learning. These findings underline the importance of understanding protein surfaces for generating effective protein representations.",,,,Unverified,2025-01-30 05:04:32+00:00,Korea (Republic of),,,,,,,,,
DeciCoder-6B,Language,Deci AI,Industry,DeciAI Research Team,2024-01-15, Model Card for DeciCoder-6B,https://huggingface.co/Deci/DeciCoder-6B,,,,6000000000.0,6B,7.56e+21,,,"Python, Java, Javascript, Rust, C++, C, and C# subset of Starcoder Training Dataset

From the Starcoder paper, that's 7.9% + 11.3% + 8.4% + 1.2% + 6.4% + 7% + 5.8% of the total, so 48% of 815 GB, say 410 GB of code. If we assume they trained for 2 epochs, 820 GB.

820 GB * 200M word per GB = 1.6e11 words
1.6e11 / 0.75 = 2.1e11 tokens

C = 6ND = 6 * 2.1e11 * 6e9 = 7.6e21",StarCoder,,,,,,,,,,,,Open weights (unrestricted),,Likely,2025-02-14 20:49:47+00:00,Israel,,,,,,,,,
OmniNA,Biology,Tianjin Medical University,Academia,"Xilin Shen, Xiangchun Li",2024-01-15,OmniNA: A foundation model for nucleotide sequences,https://www.biorxiv.org/content/10.1101/2024.01.14.575543v1.abstract,3.0,,,,,2.50000000000002e+21,,,"1. Hardware setup: 8x NVIDIA A100 SXM4 80GB GPUs @ 3.12e14 FLOP/s per GPU

2. Training duration: 29 days (estimated from total compute divided by effective FLOP/s)

3. Utilization rate: 40%

4. Calculation:
Total FLOPs = 6 × 1.7e9 (params) × 601 (seq_len) × 2048 (batch) × 200000 (steps) = 2.5e21 FLOPs",,,1076400000000.997,"From Nucleotide Sequences: 1,076,200,000,000 tokens
From Text Annotations: 197,000,000 tokens
Total: 1,076,200,000,000 + 197,000,000 = 1,076,397,000,000 (1.0764e12)",,,,,,,"Foundation models have demonstrated exceptional efficacy across diverse downstream tasks. However, within the realms of genomics and transcriptomics, a notable gap persists in the availability of models that afford a comprehensive understanding of nucleotide sequence principles across various species. Here, we present OmniNA, a foundation generative model designed for comprehensive nucleotide sequence learning. The model was pre-trained on 91.7 million nucleotide sequences and the corresponding annotations encompassing 1076.2 billion bases and 197 million words spanning a multitude of species. We demonstrated OmniNA gains the capacity to understand the semantics of the nucleotide sequence and textual annotations by analyzing the learned representation of the pre-trained model. OmniNA can be fine-tuned to align multiple nucleotide learning tasks with natural language paradigms. We demonstrate OmniNA-1.7B surpasses or rivals state-of-the art methods in 17 nucleotide tasks, encompassing nucleotide sequences detection and species classification. The model’s understanding of nucleotide grammars enhances its capability to reveal the mutation effect of nucleotide sequence on DNA and RNA processing. We hereby release the OmniNA-1.7B model as an open-source contribution to the research community. This foundation model signifies a step toward advancing our comprehension of nucleotide sequences across diverse species and holds substantial promise to facilitating genomics and transcriptomics research.",,,,Unverified,2025-02-14 20:49:55+00:00,China,,,,,,,,,
InternViT-6B,"Vision,Language","Shanghai AI Lab,Nanjing University,The University of Hong Kong,Tsinghua University,SenseTime,University of Science and Technology of China","Academia,Academia,Academia,Academia,Industry,Academia","Zhe Chen, Jiannan Wu, Wenhai Wang, Weijie Su, Guo Chen, Sen Xing, Muyan Zhong, Qinglong Zhang, Xizhou Zhu, Lewei Lu, Bin Li, Ping Luo, Tong Lu, Yu Qiao, Jifeng Dai",2024-01-15,InternVL: Scaling up Vision Foundation Models and Aligning for Generic Visual-Linguistic Tasks,https://arxiv.org/abs/2312.14238,,,,6000000000.0,6B,,,,,,,,,,,,,,,"The exponential growth of large language models (LLMs) has opened up numerous possibilities for multimodal AGI systems. However, the progress in vision and vision-language foundation models, which are also critical elements of multi-modal AGI, has not kept pace with LLMs. In this work, we design a large-scale vision-language foundation model (InternVL), which scales up the vision foundation model to 6 billion parameters and progressively aligns it with the LLM, using web-scale image-text data from various sources. This model can be broadly applied to and achieve state-of-the-art performance on 32 generic visual-linguistic benchmarks including visual perception tasks such as image-level or pixel-level recognition, vision-language tasks such as zero-shot image/video classification, zero-shot image/video-text retrieval, and link with LLMs to create multi-modal dialogue systems. It has powerful visual capabilities and can be a good alternative to the ViT-22B. We hope that our research could contribute to the development of multi-modal large models. Code and models are available at this https URL.",,,,Unverified,2025-02-07 21:34:37+00:00,"China,China,Hong Kong,China,China,Hong Kong,China,China",,,,,,,,,
 InternVL,"Vision,Language","Shanghai AI Lab,Nanjing University,The University of Hong Kong,Tsinghua University,SenseTime,University of Science and Technology of China","Academia,Academia,Academia,Academia,Industry,Academia","Zhe Chen, Jiannan Wu, Wenhai Wang, Weijie Su, Guo Chen, Sen Xing, Muyan Zhong, Qinglong Zhang, Xizhou Zhu, Lewei Lu, Bin Li, Ping Luo, Tong Lu, Yu Qiao, Jifeng Dai",2024-01-15,InternVL: Scaling up Vision Foundation Models and Aligning for Generic Visual-Linguistic Tasks,https://arxiv.org/abs/2312.14238,,,,14000000000.0,"14B
",1.744956e+23,,,"trainable / total parameters 
stage 1: 13B / 13B 
stage 2: 1B / 14B

training tokens: 
stage 1: (28.7-0.5)*0.5*(196/16)^2 + 0.5*(224/16)^2  = 2213B
stage 2: 1.6*(224/16)^2 = 313.6 B

6*13B*2213B + 6*1B*313.6 B = 174495.6 *10^18 = 1.744956 × 1023","LAION-COCO,COYO-700M,SBU,Conceptual Captions (CC3M),Conceptual Captions 12M (CC12M),Wukong,LAION",,2527000000000.0,"Stage 1

"" The training involves a total batch size of 164K across 640 A100 GPUs, extending over 175K iterations to process about 28.7 billion samples. To enhance efficiency, we initially train at a 196×196 resolution, masking 50% of image tokens [87], and later switch to 224×224 resolution without masking for the final 0.5 billion samples.""

Stage 2

1.6B samples
""The input images are processed at a resolution of 224×224. For optimization, the AdamW optimizer [98] is employed with β1 = 0.9, β2 = 0.98, weight decay set at 0.05, and a total batch size of 20K. The training extends over 80K steps across 160 A100 GPUs""

28.7 billion / 4.98 = 5.76 epochs

""As summarized in Table 2, the original dataset contains 6.03 billion image-text pairs, and 4.98 billion remains after cleaning.""

patch size is 14

(28.7-0.5)*0.5*(196/16)^2 + 0.5*(224/16)^2 + 1.6*(224/16)^2 = 2 527 000 000 000 training tokens",,800.0,1.744956e+23/(312000000000000*640*3600*0.3) = 809 hours ~ 1 month,NVIDIA A100 SXM4 80 GB,640.0,,"The exponential growth of large language models (LLMs) has opened up numerous possibilities for multimodal AGI systems. However, the progress in vision and vision-language foundation models, which are also critical elements of multi-modal AGI, has not kept pace with LLMs. In this work, we design a large-scale vision-language foundation model (InternVL), which scales up the vision foundation model to 6 billion parameters and progressively aligns it with the LLM, using web-scale image-text data from various sources. This model can be broadly applied to and achieve state-of-the-art performance on 32 generic visual-linguistic benchmarks including visual perception tasks such as image-level or pixel-level recognition, vision-language tasks such as zero-shot image/video classification, zero-shot image/video-text retrieval, and link with LLMs to create multi-modal dialogue systems. It has powerful visual capabilities and can be a good alternative to the ViT-22B. We hope that our research could contribute to the development of multi-modal large models. Code and models are available at this https URL.",,Open weights (unrestricted),,Likely,2025-02-07 21:36:05+00:00,"China,China,Hong Kong,China,China,Hong Kong,China,China","InternViT-6B,LLaMA-7B",,,,,,164000.0,,
InternLM2-20B,Language,"Shanghai AI Lab,SenseTime,Chinese University of Hong Kong (CUHK),Fudan University","Academia,Industry,Academia,Academia","Zheng Cai, Maosong Cao, Haojiong Chen, Kai Chen, Keyu Chen, Xin Chen, Xun Chen, Zehui Chen, Zhi Chen, Pei Chu, Xiaoyi Dong, Haodong Duan, Qi Fan, Zhaoye Fei, Yang Gao, Jiaye Ge, Chenya Gu, Yuzhe Gu, Tao Gui, Aijia Guo, Qipeng Guo, Conghui He, Yingfan Hu, Ting Huang, Tao Jiang, Penglong Jiao, Zhenjiang Jin, Zhikai Lei, Jiaxing Li, Jingwen Li, Linyang Li, Shuaibin Li, Wei Li, Yining Li, Hongwei Liu, Jiangning Liu, Jiawei Hong, Kaiwen Liu, Kuikun Liu, Xiaoran Liu, Chengqi Lv, Haijun Lv, Kai Lv, Li Ma, Runyuan Ma, Zerun Ma, Wenchang Ning, Linke Ouyang, Jiantao Qiu, Yuan Qu, Fukai Shang, Yunfan Shao, Demin Song, Zifan Song, Zhihao Sui, Peng Sun, Yu Sun, Huanze Tang, Bin Wang, Guoteng Wang, Jiaqi Wang, Jiayu Wang, Rui Wang, Yudong Wang, Ziyi Wang, Xingjian Wei, Qizhen Weng, Fan Wu, Yingtong Xiong, Chao Xu, Ruiliang Xu, Hang Yan, Yirong Yan, Xiaogui Yang, Haochen Ye, Huaiyuan Ying, Jia Yu, Jing Yu, Yuhang Zang, Chuyu Zhang, Li Zhang, Pan Zhang, Peng Zhang, Ruijie Zhang, Shuo Zhang, Songyang Zhang, Wenjian Zhang, Wenwei Zhang, Xingcheng Zhang, Xinyue Zhang, Hui Zhao, Qian Zhao, Xiaomeng Zhao, Fengzhe Zhou, Zaida Zhou, Jingming Zhuo, Yicheng Zou, Xipeng Qiu, Yu Qiao, Dahua Lin",2024-01-12,InternLM2 Technical Report,https://arxiv.org/abs/2403.17297,,,,20000000000.0,20B,3.12e+23,,,6ND = 6 * 2600000000000 * 20000000000 = 3.12e+23,Unspecified unreleased,"""The text data in our pre-training dataset can be categorized by source into web pages,
papers, patents, and books. To transform these sources into a pre-training dataset, we first
standardize all data into a specified format, categorize them by type and language, and
store them in JSON Lines (jsonl) format. Then, for all data, we apply several processing
steps including rule-based filtering, data deduplication, safety filtering, and quality filtering.
This results in a rich, safe, and high-quality text dataset.""",2600000000000.0,"""The total number of tokens used for pre-training the 1.8B, 7B, and 20B models ranges from 2.0T to 2.6T, and the pre-training process consists of three distinct phases. """,1.0,,,,,,"The evolution of Large Language Models (LLMs) like ChatGPT and GPT-4 has sparked discussions on the advent of Artificial General Intelligence (AGI). However, replicating such advancements in open-source models has been challenging. This paper introduces InternLM2, an open-source LLM that outperforms its predecessors in comprehensive evaluations across 6 dimensions and 30 benchmarks, long-context modeling, and open-ended subjective evaluations through innovative pre-training and optimization techniques. The pre-training process of InternLM2 is meticulously detailed, highlighting the preparation of diverse data types including text, code, and long-context data. InternLM2 efficiently captures long-term dependencies, initially trained on 4k tokens before advancing to 32k tokens in pre-training and fine-tuning stages, exhibiting remarkable performance on the 200k ``Needle-in-a-Haystack"" test. InternLM2 is further aligned using Supervised Fine-Tuning (SFT) and a novel Conditional Online Reinforcement Learning from Human Feedback (COOL RLHF) strategy that addresses conflicting human preferences and reward hacking. By releasing InternLM2 models in different training stages and model sizes, we provide the community with insights into the model's evolution.",,Open weights (restricted use),,Confident,2025-02-07 18:56:39+00:00,"China,Hong Kong,China,Hong Kong,China,China",,,,,,,5000000.0,Table 3. ,
DeepSeekMoE-16B,Language,DeepSeek,Industry,"Damai Dai, Chengqi Deng, Chenggang Zhao, R.X. Xu, Huazuo Gao, Deli Chen, Jiashi Li, Wangding Zeng, Xingkai Yu, Y. Wu, Zhenda Xie, Y.K. Li, Panpan Huang, Fuli Luo, Chong Ruan, Zhifang Sui, Wenfeng Liang",2024-01-11,DeepSeekMoE: Towards Ultimate Expert Specialization in Mixture-of-Experts Language Models,https://arxiv.org/abs/2401.06066,101.0,,"""In addition, DeepSeekMoE 2B nearly approaches the performance of its dense counterpart with the same number of total parameters, which set the upper bound of MoE models. Subsequently, we scale up DeepSeekMoE to 16B parameters and show that it achieves comparable performance with LLaMA2 7B, with only about 40% of computations""",16000000000.0,"16B (total, but it's sparse)",3.4e+22,,,"""With the DeepSeekMoE architecture, we scale up our MoE model to a larger scale with 16B total parameters and train it on 2T tokens""

""Evaluation results reveal that with only about 40% of computations, DeepSeekMoE 16B achieves comparable performance with DeepSeek 7B (DeepSeek-AI, 2024), a dense model trained on the same 2T corpus""

40% * 7B = 2.8B, so 2.8B effective parameters (see also Table 4)

2.8B * 2T * 6 ~= 3.4e22

Table 4 shows 74.4T FLOPs per 4k tokens. Over 2T tokens, this is 3.72e22 FLOPs (unclear whether this is FLOPs for training or inference)",,"""Our training data is sampled from a large-scale multilingual corpus created by DeepSeek-AI. The corpus primarily focuses on English and Chinese but also encompasses other languages. It is derived from diverse sources, including web text, mathematical material, coding scripts, published literature, and various other textual materials. For the purpose of validation experiments, we sample a subset containing 100B tokens from the corpus to train our models""",2000000000000.0,"""Leveraging our architecture, we subsequently scale up the model parameters to 16B and train DeepSeekMoE 16B on a large-scale corpus with 2T tokens.""
Not actually clear that the dataset size is 2T, since 2T appears to be the number of tokens trained over, possibly for multiple epochs.",1.0,,,"NVIDIA A100,NVIDIA H800 SXM5",,,"In the era of large language models, Mixture-of-Experts (MoE) is a promising architecture for managing computational costs when scaling up model parameters. However, conventional MoE architectures like GShard, which activate the top-K out of N experts, face challenges in ensuring expert specialization, i.e. each expert acquires non-overlapping and focused knowledge. In response, we propose the DeepSeekMoE architecture towards ultimate expert specialization. It involves two principal strategies: (1) finely segmenting the experts into mN ones and activating mK from them, allowing for a more flexible combination of activated experts; (2) isolating Ks experts as shared ones, aiming at capturing common knowledge and mitigating redundancy in routed experts. Starting from a modest scale with 2B parameters, we demonstrate that DeepSeekMoE 2B achieves comparable performance with GShard 2.9B, which has 1.5 times the expert parameters and computation. In addition, DeepSeekMoE 2B nearly approaches the performance of its dense counterpart with the same number of total parameters, which set the upper bound of MoE models. Subsequently, we scale up DeepSeekMoE to 16B parameters and show that it achieves comparable performance with LLaMA2 7B, with only about 40% of computations. Further, our preliminary efforts to scale up DeepSeekMoE to 145B parameters consistently validate its substantial advantages over the GShard architecture, and show its performance comparable with DeepSeek 67B, using only 28.5% (maybe even 18.2%) of computations.",,Open weights (restricted use),,Likely,2024-11-10 22:26:05+00:00,China,,,,,,,,,
YOLOv8x,Vision,Ultralytics,Industry,,2024-01-10,,"https://yolov8.com/
https://docs.ultralytics.com/models/yolov8
",,,,68200000.0,(the biggest model from YOLOv8 family trained on COCO dataset for object detection tasks),,,,,COCO,,,,,,,,,,"YOLOv8 is the latest version of YOLO by Ultralytics. As a cutting-edge, state-of-the-art (SOTA) model, YOLOv8 builds on the success of previous versions, introducing new features and improvements for enhanced performance, flexibility, and efficiency. YOLOv8 supports a full range of vision AI tasks, including detection, segmentation, pose estimation, tracking, and classification. This versatility allows users to leverage YOLOv8's capabilities across diverse applications and domains.",,Open weights (restricted use),,Unverified,2024-09-25 15:59:34+00:00,United States of America,,,,,,,,,
MAGNeT,Audio,"Meta AI,Hebrew University of Jerusalem,Kyutai","Industry,Academia,Industry","Alon Ziv, Itai Gat, Gael Le Lan, Tal Remez, Felix Kreuk, Alexandre Défossez, Jade Copet, Gabriel Synnaeve, Yossi Adi",2024-01-09,Masked Audio Generation using a Single Non-Autoregressive Transformer,"https://arxiv.org/abs/2401.04577, https://github.com/facebookresearch/audiocraft/blob/main/docs/MAGNET.md",,,"Mainly efficiency benefits: ""The proposed approach is comparable to the evaluated baselines, while being significantly faster (x7 faster than the autoregressive baseline).""",1500000000.0,"""We train non-autoregressive transformer models using 300M (MAGNET-small) and 1.5B
(MAGNET-large) parameters.""",,,,"""We train the models for
1M steps with the AdamW optimizer (Loshchilov & Hutter, 2017), a batch size of 192 examples... We train the models using respectively 32 GPUs for the small model and 64 GPUs for the large ones with float16 precision.""","ShutterStock,Pond5","""We follow the same setup as in Copet et al. (2023) and use 20K hours of licensed music to train
MAGNET.  Specifically, we rely on the same 10K high-quality music tracks, the ShutterStock,
and Pond5 music data collections as used in Copet et al. (2023)
8 with respectively 25K and 365K
instrument-only music tracks""

Copet et al is the MusicGen paper",,20k hours,,,,,,,"We introduce MAGNeT, a masked generative sequence modeling method that operates directly over several streams of audio tokens. Unlike prior work, MAGNeT is comprised of a single-stage, non-autoregressive transformer. During training, we predict spans of masked tokens obtained from a masking scheduler, while during inference we gradually construct the output sequence using several decoding steps. To further enhance the quality of the generated audio, we introduce a novel rescoring method in which, we leverage an external pre-trained model to rescore and rank predictions from MAGNeT, which will be then used for later decoding steps. Lastly, we explore a hybrid version of MAGNeT, in which we fuse between autoregressive and non-autoregressive models to generate the first few seconds in an autoregressive manner while the rest of the sequence is being decoded in parallel. We demonstrate the efficiency of MAGNeT for the task of text-to-music and text-to-audio generation and conduct an extensive empirical evaluation, considering both objective metrics and human studies. The proposed approach is comparable to the evaluated baselines, while being significantly faster (x7 faster than the autoregressive baseline). Through ablation studies and analysis, we shed light on the importance of each of the components comprising MAGNeT, together with pointing to the trade-offs between autoregressive and non-autoregressive modeling, considering latency, throughput, and generation quality. Samples are available on our demo page this https URL.",,Open weights (unrestricted),,Likely,2024-09-05 18:08:31+00:00,"United States of America,Israel,France",,,,,,,,,
Stable Code 3B,Language,Stability AI,Industry,"Pinnaparaju, Nikhil and Adithyan, Reshinth and Phung, Duy and Tow, Jonathan and Baicoianu, James and  and Cooper, Nathan",2024-01-09,Stable Code 3B,https://huggingface.co/stabilityai/stable-code-3b,,,,2796431360.0,"2796431360 from https://huggingface.co/stabilityai/stable-code-3b#model-architecture
""stable-code-3b is a 2.7B billion parameter decoder-only language model pre-trained on 1.3 trillion tokens of diverse textual and code datasets. """,2.106e+22,,,"6ND = 2.7e9 * 1.3e12 * 6 = 2,106E+22
""stable-code-3b is a 2.7B billion parameter decoder-only language model pre-trained on 1.3 trillion tokens of diverse textual and code datasets. ""","RefinedWeb,GitHub,StarCoder","""Training Dataset

The dataset is comprised of a filtered mixture of open-source large-scale datasets available on the HuggingFace Hub: Falcon RefinedWeb extract (Penedo et al., 2023), along with CommitPackFT and Github Issues (BigCode., 2023), and StarCoder (Li et al., 2023). We further supplement our training with data from mathematical domains (Azerbayev, Zhangir, et al., 2023 and, Yu, Longhui, et al., 2023). """,,"1.3T tokens
""stable-code-3b is a 2.7B billion parameter decoder-only language model pre-trained on 1.3 trillion tokens of diverse textual and code datasets. """,,,,NVIDIA A100 SXM4 40 GB,256.0,,,,Open weights (non-commercial),,Likely,2024-10-26 16:37:40+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
FABind,Biology,"Renmin University of China,Huazhong University of Science and Technology,Microsoft Research AI for Science,University of Science and Technology of China","Academia,Academia,Industry,Academia","Qizhi Pei, Kaiyuan Gao, Lijun Wu, Jinhua Zhu, Yingce Xia, Shufang Xie, Tao Qin, Kun He, Tie-Yan Liu, Rui Yan",2024-01-09,FABind: Fast and Accurate Protein-Ligand Binding,https://arxiv.org/abs/2310.06763v5,,,,,,,,,,,,,,,,,,,,"Modeling the interaction between proteins and ligands and accurately predicting their binding structures is a critical yet challenging task in drug discovery. Recent advancements in deep learning have shown promise in addressing this challenge, with sampling-based and regression-based methods emerging as two prominent approaches. However, these methods have notable limitations. Sampling-based methods often suffer from low efficiency due to the need for generating multiple candidate structures for selection. On the other hand, regression-based methods offer fast predictions but may experience decreased accuracy. Additionally, the variation in protein sizes often requires external modules for selecting suitable binding pockets, further impacting efficiency. In this work, we propose FABind, an end-to-end model that combines pocket prediction and docking to achieve accurate and fast protein-ligand binding. FABind incorporates a unique ligand-informed pocket prediction module, which is also leveraged for docking pose estimation. The model further enhances the docking process by incrementally integrating the predicted pocket to optimize protein-ligand binding, reducing discrepancies between training and inference. Through extensive experiments on benchmark datasets, our proposed FABind demonstrates strong advantages in terms of effectiveness and efficiency compared to existing methods. Our code is available at this https URL",,,,Unverified,2025-01-12 05:24:57+00:00,"China,China,United States of America,United Kingdom of Great Britain and Northern Ireland,China,Netherlands,Germany,China",,,,,,,,,
Improved motif-scaffolding with SE(3) flow matching,Biology,"University of Oxford,Massachusetts Institute of Technology (MIT),Microsoft Research AI for Science","Academia,Academia,Industry","Jason Yim, Andrew Campbell, Emile Mathieu, Andrew Y. K. Foong, Michael Gastegger, José Jiménez-Luna, Sarah Lewis, Victor Garcia Satorras, Bastiaan S. Veeling, Frank Noé, Regina Barzilay, Tommi S. Jaakkola",2024-01-08,Improved motif-scaffolding with SE(3) flow matching,https://arxiv.org/abs/2401.04082,,,,,,1.6000000000000008e+19,,,"1. Hardware: 2x NVIDIA RTX A6000 (3.87e13 FLOP/s per GPU)
2. Training duration: 6 days = 518,400 seconds (directly provided)
3. Utilization: 40%
4. Calculation: 
   2 GPUs × 3.87e13 FLOP/s × 518,400s × 0.40 = 1.6e19 FLOPs",,,,,,,,,,,"Protein design often begins with the knowledge of a desired function from a motif which motif-scaffolding aims to construct a functional protein around. Recently, generative models have achieved breakthrough success in designing scaffolds for a range of motifs. However, generated scaffolds tend to lack structural diversity, which can hinder success in wet-lab validation. In this work, we extend FrameFlow, an SE(3) flow matching model for protein backbone generation, to perform motif-scaffolding with two complementary approaches. The first is motif amortization, in which FrameFlow is trained with the motif as input using a data augmentation strategy. The second is motif guidance, which performs scaffolding using an estimate of the conditional score from FrameFlow without additional training. On a benchmark of 24 biologically meaningful motifs, we show our method achieves 2.5 times more designable and unique motif-scaffolds compared to state-of-the-art. Code: this https URL",,,,Unverified,2025-02-14 20:50:01+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,China,Netherlands,Germany",,,,,,,,,
"Llama-3-Taiwan-70B
",Language,National Taiwan University,Academia,,2024-01-07,MiuLab/Taiwan-LLM,https://github.com/MiuLab/Taiwan-LLM?tab=readme-ov-file,,,,70000000000.0,,,,,,,,,,,,,NVIDIA H100 SXM5 80GB,,,,,,,Unverified,2025-01-28 00:44:33+00:00,Taiwan,Llama 3-70B,,,,,,,,
DeepSeek LLM 67B,Language,DeepSeek,Industry,"Xiao Bi, Deli Chen, Guanting Chen, Shanhuang Chen, Damai Dai, Chengqi Deng, Honghui Ding, Kai Dong, Qiushi Du, Zhe Fu, Huazuo Gao, Kaige Gao, Wenjun Gao, Ruiqi Ge, Kang Guan, Daya Guo, Jianzhong Guo, Guangbo Hao, Zhewen Hao, Ying He, Wenjie Hu, Panpan Huang, Erhang Li, Guowei Li, Jiashi Li, Yao Li, Y.K. Li, Wenfeng Liang, Fangyun Lin, A.X. Liu, Bo Liu, Wen Liu, Xiaodong Liu, Xin Liu, Yiyuan Liu, Haoyu Lu, Shanghao Lu, Fuli Luo, Shirong Ma, Xiaotao Nie, Tian Pei, Yishi Piao, Junjie Qiu, Hui Qu, Tongzheng Ren, Zehui Ren, Chong Ruan, Zhangli Sha, Zhihong Shao, Junxiao Song, Xuecheng Su, Jingxiang Sun, Yaofeng Sun, Minghui Tang, Bingxuan Wang, Peiyi Wang, Shiyu Wang, Yaohui Wang, Yongji Wang, Tong Wu, Y. Wu, Xin Xie, Zhenda Xie, Ziwei Xie, Yiliang Xiong, Hanwei Xu, R.X. Xu, Yanhong Xu, Dejian Yang, Yuxiang You, Shuiping Yu, Xingkai Yu, B. Zhang, Haowei Zhang, Lecong Zhang, Liyue Zhang, Mingchuan Zhang, Minghua Zhang, Wentao Zhang, Yichao Zhang, Chenggang Zhao, Yao Zhao, Shangyan Zhou, Shunfeng Zhou, Qihao Zhu, Yuheng Zou",2024-01-05,DeepSeek LLM: Scaling Open-Source Language Models with Longtermism,"https://arxiv.org/abs/2401.02954, https://github.com/deepseek-ai/DeepSeek-LLM",,,"One of the best open/Chinese models: ""Our evaluation results demonstrate that DeepSeek LLM 67B surpasses LLaMA-2 70B on various benchmarks, particularly in the domains of code, mathematics, and reasoning. Furthermore, open-ended evaluations reveal that DeepSeek LLM 67B Chat exhibits superior performance compared to GPT-3.5.""",67000000000.0,"67B
",8.04e+23,,,67B * 2T * 6 = 8.04e23,Unspecified unreleased,"""We collect 2 trillion tokens for pre-training, primarily in Chinese and English.""

""We have gained valuable insights from reputable sources such as (Computer, 2023; Gao et al., 2020; Penedo et al., 2023; Touvron et al., 2023a)... We adopted an aggressive deduplication strategy, expanding the deduplication scope. Our analysis revealed that deduplicating the entire Common Crawl corpus results in higher removal of duplicate instances compared to deduplicating within a single dump""",2000000000000.0,"""We collect 2 trillion tokens for pre-training, primarily in Chinese and English""",1.0,,,,,,"The rapid development of open-source large language models (LLMs) has been truly remarkable. However, the scaling law described in previous literature presents varying conclusions, which casts a dark cloud over scaling LLMs. We delve into the study of scaling laws and present our distinctive findings that facilitate scaling of large scale models in two commonly used open-source configurations, 7B and 67B. Guided by the scaling laws, we introduce DeepSeek LLM, a project dedicated to advancing open-source language models with a long-term perspective. To support the pre-training phase, we have developed a dataset that currently consists of 2 trillion tokens and is continuously expanding. We further conduct supervised fine-tuning (SFT) and Direct Preference Optimization (DPO) on DeepSeek LLM Base models, resulting in the creation of DeepSeek Chat models. Our evaluation results demonstrate that DeepSeek LLM 67B surpasses LLaMA-2 70B on various benchmarks, particularly in the domains of code, mathematics, and reasoning. Furthermore, open-ended evaluations reveal that DeepSeek LLM 67B Chat exhibits superior performance compared to GPT-3.5.",,Open weights (restricted use),,Confident,2024-12-23 03:20:06+00:00,China,,,,,,,,,
RT-1 + AutoRT,Robotics,Google DeepMind,Industry,"Michael Ahn, Debidatta Dwibedi, Chelsea Finn, Montse Gonzalez Arenas, Keerthana Gopalakrishnan, Karol Hausman, Brian Ichter, Alex Irpan, Nikhil Joshi, Ryan Julian, Sean Kirmani, Isabel Leal, Edward Lee, Sergey Levine, Yao Lu, Isabel Leal, Sharath Maddineni, Kanishka Rao, Dorsa Sadigh, Pannag Sanketi, Pierre Sermanet, Quan Vuong, Stefan Welker, Fei Xia, Ted Xiao, Peng Xu, Steve Xu, Zhuo Xu",2024-01-04,AutoRT: Embodied Foundation Models for Large Scale Orchestration of Robotic Agents,https://auto-rt.github.io/,,,"Some improvements on RT-1: ""The co-fine-tuned model is evaluated on two tasks we find RT-1 generalizes poorly to: picking from
different heights, and wiping. Exact evaluation instructions and details are in Appendix F. When co-fine-tuned, RT-1’s performance increases from 0% to 12.5% on picking from different height, and 10% to 30% on wiping.""",35000000.0,from RT-1,,,,,RT-1,"fine-tuned on a mix of original RT-1 dataset, and dataset collected by AutoRT:

""A pretrained RT-1 model is co-fine-tuned on a 50-50 mixture of the pretraining dataset described in Brohan et al. (2022) and AutoRT’s dataset. RT-1 is used instead of RT-2 due to training more quickly and cheaply.""",,"""Data statistics: In total, 53 robots were used to collect 77,000 new episodes over the course of 7 months, with a peak load of over 20 simultaneous robots. Over 6,650 unique instructions appear
in the dataset""",,,,,,,"Foundation models that incorporate language, vision, and more recently actions have revolutionized the ability to harness internet scale data to reason about useful tasks. However, one of the key challenges of training embodied foundation models is the lack of data grounded in the physical world. In this paper, we propose AutoRT, a system that leverages existing foundation models to scale up the deployment of operational robots in completely unseen scenarios with minimal human supervision. AutoRT leverages vision-language models (VLMs) for scene understanding and grounding, and further uses large language models (LLMs) for proposing diverse and novel instructions to be performed by a fleet of robots. Guiding data collection by tapping into the knowledge of foundation models enables AutoRT to effectively reason about autonomy tradeoffs and safety while significantly scaling up data collection for robot learning. We demonstrate AutoRT
proposing instructions to over 20 robots across multiple buildings and collecting 77k real robot episodes via both teleoperation and autonomous robot policies. We experimentally show that such “in-the-wild” data collected by AutoRT is significantly more diverse, and that AutoRT’s use of LLMs allows for instruction following data collection robots that can align to human preferences.",,Unreleased,,Likely,2024-09-24 15:49:56+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",RT-1,,"fine-tuned on a mix of AutoRT data, which is 77k episodes (unclear how many network passes per episode) and original RT-1 data.

""A pretrained RT-1 model is co-fine-tuned on a 50-50 mixture of the pretraining dataset described in Brohan et al. (2022) and AutoRT’s dataset. RT-1 is used instead of RT-2 due to training more quickly and cheaply.""",,,,,,
CLAPE-DB,Biology,Tsinghua University,Academia," Yufan Liu, Boxue Tian",2024-01-03,Protein–DNA binding sites prediction based on pre-trained protein language model and contrastive learning,https://academic.oup.com/bib/article/25/1/bbad488/7505238,,,,,,,,,,,,474000.99999999977,"Dataset1 TR646 residues: 314,139
Dataset2 TR573 residues: 159,883
314,139 + 159,883 = 474,022 total residues
Final data points = 474,022",,,,,,,"Protein–DNA interaction is critical for life activities such as replication, transcription and splicing. Identifying protein–DNA binding residues is essential for modeling their interaction and downstream studies. However, developing accurate and efficient computational methods for this task remains challenging. Improvements in this area have the potential to drive novel applications in biotechnology and drug design. In this study, we propose a novel approach called Contrastive Learning And Pre-trained Encoder (CLAPE), which combines a pre-trained protein language model and the contrastive learning method to predict DNA binding residues. We trained the CLAPE-DB model on the protein–DNA binding sites dataset and evaluated the model performance and generalization ability through various experiments. The results showed that the area under ROC curve values of the CLAPE-DB model on the two benchmark datasets reached 0.871 and 0.881, respectively, indicating superior performance compared to other existing models. CLAPE-DB showed better generalization ability and was specific to DNA-binding sites. In addition, we trained CLAPE on different protein–ligand binding sites datasets, demonstrating that CLAPE is a general framework for binding sites prediction. To facilitate the scientific community, the benchmark datasets and codes are freely available at https://github.com/YAndrewL/clape.",,,,Unverified,2025-01-30 05:04:33+00:00,China,,,,,,,,,
PLLaMa,Biology,"University of California Santa Barbara (UCSB),University of Lincoln,Chinese Academy of Agricultural Sciences,Swedish University of Agricultural Sciences","Academia,Academia,Academia","Xianjun Yang, Junfeng Gao, Wenxin Xue, Erik Alexandersson",2024-01-03,PLLaMa: An Open-source Large Language Model for Plant Science,https://arxiv.org/abs/2401.01600,20.0,,,,,3.000000000000001e+20,,,"1. Hardware setup:
- Pretraining: 8x NVIDIA A100 80GB GPUs (3.12E14 FLOP/s per GPU)
- Instruction Tuning: 4x NVIDIA A100 80GB GPUs (3.12E14 FLOP/s per GPU)

2. Training duration (provided directly):
- Pretraining: 7B model (26h), 13B model (57h)
- Instruction Tuning: 7B model (1.3h), 13B model (2.7h)

3. Utilization rate: 40%

4. Final calculation:
Pretraining:
- 7B: 3.12E14 × 8 GPUs × 26h × 3600s × 0.4 = 9.36E19
- 13B: 3.12E14 × 8 GPUs × 57h × 3600s × 0.4 = 2.05E20
Instruction Tuning:
- 7B: 3.12E14 × 4 GPUs × 1.3h × 3600s × 0.4 = 2.34E18
- 13B: 3.12E14 × 4 GPUs × 2.7h × 3600s × 0.4 = 4.85E18
Total: 3.0E20 FLOPs",,,11660000000.999992,"Number of text pieces: 2,278,433
Tokens per text piece: 5,120

Calculations:
2,278,433 × 5,000 = 11,392,165,000
2,278,433 × 120 = 273,411,960
11,392,165,000 + 273,411,960 = 11,665,576,960

Final result: 11,665,576,960 tokens (1.166 × 10¹⁰)",,,,,,,"Large Language Models (LLMs) have exhibited remarkable capabilities in
understanding and interacting with natural language across various sectors.
However, their effectiveness is limited in specialized areas requiring high accuracy, such as plant science, due to a lack of specific expertise in these fields.
This paper introduces PLLaMa, an open-source language model that evolved
from LLaMa-2. It’s enhanced with a comprehensive database, comprising
more than 1.5 million scholarly articles in plant science. This development
significantly enriches PLLaMa with extensive knowledge and proficiency in
plant and agricultural sciences. Our initial tests, involving specific datasets
related to plants and agriculture, show that PLLaMa substantially improves
its understanding of plant science-related topics. Moreover, we have formed
an international panel of professionals, including plant scientists, agricultural
engineers, and plant breeders. This team plays a crucial role in verifying
the accuracy of PLLaMa’s responses to various academic inquiries, ensuring
its effective and reliable application in the field. To support further research
and development, we have made the model’s checkpoints and source codes
accessible to the scientific community. These resources are available for
download at https://github.com/Xianjun-Yang/PLLaMa.",,,,Unverified,2025-02-14 20:50:11+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,China,Sweden",,,,,,,,,
Palmyra X 003,Language,Writer,Industry,Writer,2024-01-01,Palmyra X 003 Instruct,https://writer.com/llms/palmyra-x-003/,,SOTA improvement,"""Palmyra X 003 launched as the #3 model on Stanford’s HELM benchmark and has since claimed the top spot in translation accuracy.""",72000000000.0,,,,,,,,,,,,,,,,"Palmyra X 003, is a top-performing instruct model, built specifically for structured text completion rather than conversational use. Available in AI Studio no-code apps, the Writer Framework, and via API, it delivers precise, contextually accurate responses to instructions across diverse workflows. Ranked #3 on HELM at release, Palmyra X 003 remains a powerful option for enterprises needing reliable, instruct-focused AI.",,API access,,,2025-01-06 20:34:05+00:00,United States of America,,,,,,,,,
Kimi Explorer,Language,Moonshot,,,2024-01-01,,https://www.53ai.com/news/LargeLanguageModel/2024101137012.html,,SOTA improvement,"Highest score at SuperCLUE benchmark for ""AISearch"" in term of ""Basic Capabilities https://www.superclueai.com/",,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 13:48:54+00:00,,,,,,,,,,
Qarasu-14B,Language,Lightblue,Industry,Peter Devine,2023-12-29,Karasu and Qarasu: The new top Japanese Chatbots,"https://note.com/peter_lightblue/n/ne08a7c8cc47a, https://huggingface.co/lightblue/qarasu-14B-chat-plus-unleashed",,,SOTA in class for Japanese,14000000000.0,14B,,,,,,"""We trained a Shisa model on roughly 7 billion tokens of mostly unstructured Japanese text. We chose the following data sources to use in our pre-training phase:

Aozora Bunko

Japanese Law Precedent Dataset

Japanese Wikipedia

.lg.jp, .go.jp, .ac.jp domain webscrapes from the Japanese subset of  CulturaX

English Ultrachat200K-gen""",7000000000.0,7B tokens,,,,NVIDIA A100 SXM4 40 GB,,,"In this blog post, we introduce Karasu and Qarasu - state of the art open-source Japanese chatbots.

Try chatting to our best model, Qarasu, here ( https://lightblue-qarasu.serveo.net/ )!

These models are able to chat in Japanese to a higher level than all other available LLMs of a similar size, as rated by a popular conversation benchmark. In this article, we describe the design and engineering process behind building them.",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,Japan,Qwen-14B,5.9e+20,"7B finetune tokens:

https://huggingface.co/lightblue/qarasu-14B-chat-plus-unleashed

7B * 14B * 6 = 5.9e20",,,,,,
CoRe,"Mathematics,Language",Tsinghua University,Academia,"Xinyu Zhu, Junjie Wang, Lin Zhang, Yuxiang Zhang, Ruyi Gan, Jiaxing Zhang, Yujiu Yang",2023-12-29,Solving Math Word Problems via Cooperative Reasoning induced Language Models,https://arxiv.org/abs/2210.16257,51.0,SOTA improvement,"We evaluate our CoRe framework on several mathematical reasoning datasets and achieve decent improvement over state-of-the-art methods, up to 9.6% increase over best baselines.",12400000000.0,"""Since the default setting consists of two GPT-J (6B) and a DeBERTa-large (0.4B), we note our backbone as “GPT-J 12B”, which implies around 12.4 billion parameters in total. """,,,,,"GSM8K,ASDiv","We consider several widely-used math word problem datasets: GSM8K (Cobbe et al., 2021), ASDivA (Miao et al., 2020), SingleOp (Roy et al., 2015), SinlgeEq (Koncel-Kedziorski et al., 2015) and MultiArith (Roy and Roth, 2015). (Details in Appendix A). Following the general setting as in (Kojima et al., 2022; Wei et al., 2022c), we employ accuracy as the evaluation metric for all datasets.",,,,,,NVIDIA A100 SXM4 40 GB,,,"Large-scale pre-trained language models (PLMs) bring new opportunities to challenging problems, especially those that need high-level intelligence, such as the math word problem (MWPs). However, directly applying existing PLMs to MWPs can fail as the generation process lacks sufficient supervision and thus lacks fast adaptivity as humans. We notice that human reasoning has a dual reasoning framework that consists of an immediate reaction system (system 1) and a delicate reasoning system (system 2), where the entire reasoning is determined by their interaction. This inspires us to develop a cooperative reasoning-induced PLM for solving MWPs, called Cooperative Reasoning (CoRe), resulting in a human-like reasoning architecture with system 1 as the generator and system 2 as the verifier. In our approach, the generator is responsible for generating reasoning paths, and the verifiers are used to supervise the evaluation in order to obtain reliable feedback for the generator. We evaluate our CoRe framework on several mathematical reasoning datasets and achieve decent improvement over state-of-the-art methods, up to 9.6% increase over best baselines.",,,,Speculative,2024-11-01 14:05:35+00:00,China,GPT-J-6B,,,,,,,,
Mengzi-Code-6.7B,,,,,2023-12-28,"澜舟科技通过生成式人工智能备案并重磅发布新版孟子GPT-金融模型和孟子GPT-Code模型
",https://www.langboat.com/en/portal/mengzi-gpt,,,,6700000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
MengziGPT-General-13B,,,,,2023-12-28,"澜舟科技通过生成式人工智能备案并重磅发布新版孟子GPT-金融模型和孟子GPT-Code模型
",https://hub.baai.ac.cn/view/33895,,,,13000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Elyza,Language,Elyza,Industry,"Akira Sasaki, Masato Hirakawa, Shintaro Horie, Tomoaki Nakamura, Passaglia himself, Daisuke Oba (intern)",2023-12-27,,https://huggingface.co/elyza/ELYZA-japanese-Llama-2-13b,,,,13000000000.0,13B,,,,,"OSCAR,Wikipedia (ja)","'ELYZA-japanese-Llama-2-13b' is a model with additional pre-training using approximately 18 billion (18B) Japanese text tokens on Meta's 'Llama-2-13b-chat.' The training data includes Japanese text data composed of OSCAR, Wikipedia, etc.",18000000000.0,,,,,,,,,,Open weights (restricted use),,Likely,2024-12-02 15:24:29+00:00,Japan,Llama 2-13B,1.404e+21,6ND = 6*13B*18B=1404*10^18=1.4*10^21,,,,,,
Solar-10.7B,Language,Upstage,Industry,"Dahyun Kim, Chanjun Park, Sanghoon Kim, Wonsung Lee, Wonho Song, Yunsu Kim, Hyeonwoo Kim, Yungi Kim, Hyeonju Lee, Jihoo Kim, Changbae Ahn, Seonghoon Yang, Sukyung Lee, Hyunbyung Park, Gyoungjin Gim, Mikyoung Cha, Hwalsuk Lee, Sunghun Kim",2023-12-23,SOLAR 10.7B: Scaling Large Language Models with Simple yet Effective Depth Up-Scaling,https://arxiv.org/abs/2312.15166,89.0,,"best in compute class: 

""We introduce SOLAR-10.7B, an advanced large language model (LLM) with 10.7 billion parameters, demonstrating superior performance in various natural language processing (NLP) tasks. It's compact, yet remarkably powerful, and demonstrates unparalleled state-of-the-art performance in models with parameters under 30B.""

https://huggingface.co/upstage/SOLAR-10.7B-v1.0",10700000000.0,10.7B,,,,,,"Instruction tuning: Alpaca-GPT4 (52k), OpenOrca (2.91M), and Synth.
Math-Instruct(126k)
Alignment tuning: Orca DPO Pairs (12.9k), Ultrafeedback
Cleaned (60.8k), and Synth. Math-Alignment (126k)

Note however that in actual training, only 100k OpenOrca samples, 52k Synth. Math-Instruct and 20.1k Synth. Math-Alignment examples were used.

Tokens per example unclear so dataset size not entered.",,,,,,,,,"We introduce SOLAR 10.7B, a large language model (LLM) with 10.7 billion parameters, demonstrating superior performance in various natural language processing (NLP) tasks. Inspired by recent efforts to efficiently up-scale LLMs, we present a method for scaling LLMs called depth up-scaling (DUS), which encompasses depthwise scaling and continued pretraining. In contrast to other LLM up-scaling methods that use mixture-of-experts, DUS does not require complex changes to train and inference efficiently. We show experimentally that DUS is simple yet effective in scaling up high-performance LLMs from small ones. Building on the DUS model, we additionally present SOLAR 10.7B-Instruct, a variant fine-tuned for instruction-following capabilities, surpassing Mixtral-8x7B-Instruct. SOLAR 10.7B is publicly available under the Apache 2.0 license, promoting broad access and application in the LLM field.",,Open weights (unrestricted),,Likely,2024-11-01 14:05:35+00:00,Korea (Republic of),Mistral 7B,,They integrate Mistral 7B weights into a larger model. They don't state token count for continued pretraining/fine-tuning,,,,,,
YaYi 2.0,,,,"Yin Luo, Qingchao Kong, Nan Xu, Jia Cao, Bao Hao, Baoyu Qu, Bo Chen, Chao Zhu Chenyang Zhao, Donglei Zhang, Fan Feng, Feifei Zhao, Hailong Sun, Hanxuan Yang, Haojun Pan, Hongyu Liu, Jianbin Guo, Jiangtao Du, Jingyi Wang, Junfeng Li, Lei Sun, Liduo Liu, Lifeng Dong, Lili Liu, Lin Wang, Liwen Zhang, Minzheng Wang, Pin Wang, Ping Yu, Qingxiao Li, Rui Yan, Rui Zou, Ruiqun Li, Taiwen Huang, Xiaodong Wang, Xiaofei Wu, Xin Peng, Xina Zhang, Xing Fang, Xinglin Xiao, Yanni Hao, Yao Dong, Yigang Wang, Ying Liu, Yongyu Jiang, Yungan Wang, Yuqi Wang, Zhangsheng Wang, Zhaoxin Yu, Zhen Luo, Wenji Mao, Lei Wang, Dajun Zeng",2023-12-22,"YAYI 2: Multilingual Open-Source Large Language Models
",https://arxiv.org/html/2312.14862v1,3.0,,,30000000000.0,,,,,1000 A800 GPUs,,2650000000000,,,,,,NVIDIA A800,1000.0,,"In this technical report, we propose YAYI 2, including both base and chat models, with 30 billion parameters. YAYI 2 is pre-trained from scratch on a multilingual corpus which contains 2.65 trillion tokens filtered by our pre-training data processing pipeline.",,,,Unverified,2025-01-07 22:00:04+00:00,,,,,,,,,,
VideoPoet,"Video,Language,Audio","Google Research,Carnegie Mellon University (CMU),Google DeepMind","Industry,Academia,Industry","Dan Kondratyuk, Lijun Yu, Xiuye Gu, José Lezama, Jonathan Huang, Grant Schindler, Rachel Hornung, Vighnesh Birodkar, Jimmy Yan, Ming-Chang Chiu, Krishna Somandepalli, Hassan Akbari, Yair Alon, Yong Cheng, Josh Dillon, Agrim Gupta, Meera Hahn, Anja Hauth, David Hendon, Alonso Martinez, David Minnen, Mikhail Sirotenko, Kihyuk Sohn, Xuan Yang, Hartwig Adam, Ming-Hsuan Yang, Irfan Essa, Huisheng Wang, David A. Ross, Bryan Seybold, Lu Jiang",2023-12-21,VideoPoet: A Large Language Model for Zero-Shot Video Generation,"https://arxiv.org/abs/2312.14125
https://sites.research.google/videopoet/",112.0,,"Beats out all competing video generation systems in subjective evaluations across several categories. 

Notably, Lumiere wins for ""Video quality"" (presumably the main metric), however this comparison is only made in revised versions of the paper – VideoPoet was released a couple of months before Lumiere.",8000000000.0,Biggest model has 8B parameters; there are also experiments with 300M and 1B models.,,,,"Not directly calculable, since we don't know how many epochs the main model was trained for. 

From section 5.2: ""We investigate the learning capabilities of different combinations of pretraining tasks using a model with 300 million parameters. All task combinations are trained using a learning rate of 10^−3 for the same number of steps (300k) with a batch size of 1024... The last row, “ALL (8B)”, is the model with 8 billion parameters, trained on the pretraining tasks as discussed in Section 3 and utilized significantly more compute.""

Compute per epoch (2T tokens) can be estimated as 9.6e22:
2 * 8B connections * 3 * 2T tokens = 9.6e22",,"Section 5.1: ""We train on a total of 1B image-text pairs and ∼270M videos (∼100M with paired text, of which ∼50M are used for high-quality finetuning, and ∼170M with paired audio) from the public internet and other sources, i.e. around 2 trillion tokens across all modalities.""",2000000000000.0,"Section 5.1: ""We train on a total of 1B image-text pairs and ∼270M videos (∼100M with paired text, of which ∼50M are used for high-quality finetuning, and ∼170M with paired audio) from the public internet and other sources, i.e. around 2 trillion tokens across all modalities.""",,,,,,Self-supervised learning,"We present VideoPoet, a language model capable of synthesizing high-quality video, with matching audio, from a large variety of conditioning signals. VideoPoet employs a decoder-only transformer architecture that processes multimodal inputs -- including images, videos, text, and audio. The training protocol follows that of Large Language Models (LLMs), consisting of two stages: pretraining and task-specific adaptation. During pretraining, VideoPoet incorporates a mixture of multimodal generative objectives within an autoregressive Transformer framework. The pretrained LLM serves as a foundation that can be adapted for a range of video generation tasks. We present empirical results demonstrating the model's state-of-the-art capabilities in zero-shot video generation, specifically highlighting VideoPoet's ability to generate high-fidelity motions.",,Unreleased,,Confident,2024-11-01 14:05:34+00:00,"Multinational,United States of America,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Suno Music Generation,Audio,Suno,Industry,,2023-12-20,,https://suno.com/about,,,,,,,,,,,,,,,,,,,,,,Hosted access (no API),,Unknown,2024-11-06 23:56:33+00:00,United States of America,,,,,,,,,
Gemini Nano-2,"Multimodal,Language,Vision,Audio",Google DeepMind,Industry,Gemini Team,2023-12-19,Gemini: A Family of Highly Capable Multimodal Models,https://arxiv.org/abs/2312.11805,633.0,Significant use,"Significant use; deployed on Android phones such as the Pixel: https://store.google.com/intl/en/ideas/articles/pixel-feature-drop-december-2023/

""Despite their size, they show exceptionally strong performance on factuality,
i.e. retrieval-related tasks, and significant performance on reasoning, STEM, coding, multimodal and multilingual tasks""",3250000000.0,3.25B,,,,"More tokens than Chinchilla-optimal:

""The number of tokens used to train the largest models were determined following the approach in Hoffmann et al. (2022). The smaller models are trained for significantly more tokens to improve performance for a given inference budget, similar to the approach advocated in Touvron et al. (2023a)""

Chinchilla was 1.4T tokens for 70B params, so Chinchilla-optimal for 3.25B params would be ~1.4T/20 = 70B tokens.

So compute was significantly greater than 3.25B * 70B * 6, which is 1.4e21. 

Touvron et al. is the Llama 1 paper, in which a 6.7B model is trained for 1T tokens. Using the same ratio, a 3.25B model would be trained on ~500B tokens. 3.25 * 500B * 6 = 9.75e21. No guarantee that the exact ratio for Nano is close to Llama's, of course.",Unspecified unreleased,"""Gemini models are trained on a dataset that is both multimodal and multilingual. Our pre-training dataset uses data from web documents, books, and code, and includes image, audio, and video data.""",,,,,,Google TPU v5e,,,"This report introduces a new family of multimodal models, Gemini, that exhibit remarkable capabilities across image, audio, video, and text understanding. The Gemini family consists of Ultra, Pro, and Nano sizes, suitable for applications ranging from complex reasoning tasks to on-device memory-constrained use-cases. Evaluation on a broad range of benchmarks shows that our most-capable Gemini Ultra model advances the state of the art in 30 of 32 of these benchmarks - notably being the first model to achieve human-expert performance on the well-studied exam benchmark MMLU, and improving the state of the art in every one of the 20 multimodal benchmarks we examined. We believe that the new capabilities of Gemini models in cross-modal reasoning and language understanding will enable a wide variety of use cases and we discuss our approach toward deploying them responsibly to users.",,Unreleased,,Confident,2024-12-08 19:03:00+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Gemini Nano-1,"Multimodal,Language,Vision,Audio",Google DeepMind,Industry,Gemini Team,2023-12-19,Gemini: A Family of Highly Capable Multimodal Models,https://arxiv.org/abs/2312.11805,633.0,Significant use,"Significant use; deployed on Android phones such as the Pixel: https://store.google.com/intl/en/ideas/articles/pixel-feature-drop-december-2023/

""Despite their size, they show exceptionally strong performance on factuality,
i.e. retrieval-related tasks, and significant performance on reasoning, STEM, coding, multimodal and multilingual tasks""",1800000000.0,1.8B,,,,"More tokens than Chinchilla-optimal:

""The number of tokens used to train the largest models were determined following the approach in Hoffmann et al. (2022). The smaller models are trained for significantly more tokens to improve performance for a given inference budget, similar to the approach advocated in Touvron et al. (2023a)""",Unspecified unreleased,"""Gemini models are trained on a dataset that is both multimodal and multilingual. Our pre-training
dataset uses data from web documents, books, and code, and includes image, audio, and video data.""",,,,,,Google TPU v5e,,,"This report introduces a new family of multimodal models, Gemini, that exhibit remarkable capabilities across image, audio, video, and text understanding. The Gemini family consists of Ultra, Pro, and Nano sizes, suitable for applications ranging from complex reasoning tasks to on-device memory-constrained use-cases. Evaluation on a broad range of benchmarks shows that our most-capable Gemini Ultra model advances the state of the art in 30 of 32 of these benchmarks - notably being the first model to achieve human-expert performance on the well-studied exam benchmark MMLU, and improving the state of the art in every one of the 20 multimodal benchmarks we examined. We believe that the new capabilities of Gemini models in cross-modal reasoning and language understanding will enable a wide variety of use cases and we discuss our approach toward deploying them responsibly to users.",,Unreleased,,Confident,2024-12-08 19:03:13+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
HiFi - NN,Biology,"Basecamp Research,Technical University of Munich,Molecular Institute of Biology,Microsoft Research","Academia,Academia,Industry",Gavin Ayres,2023-12-19,Breakthrough in Functional Annotation with HiFi-NN,https://developer.nvidia.com/blog/breakthrough-in-functional-annotation-with-hifi-nn/,,,,3000000.0,"""The model boasts over 3M parameters.""",,,,,,"""Small representativity, covering only 0.001% of life on earth
No consistent metadata
Lack of stakeholder consent and engagement before data collection
Basecamp opted to develop its proprietary biological data resource through biodiversity partnerships with nature parks across five continents and 23 countries. They sent their scientists on worldwide expeditions to discover new genomes, enzymes, and biological relationships from the most extreme and extraordinary biomes. 

In under two years, they created BaseGraph, the largest knowledge graph of natural biodiversity, containing over 5.5B relationships with a genomic context exceeding 70 kilobases per protein. Their extensive long-read sequencing is complemented by comprehensive metadata collection, enabling them to link proteins of interest to specific reactions and desired process conditions. """,,"""the model retrained with 3M selected, environmentally diverse sequences from Basecamp Research’s BaseGraph.""",,,,NVIDIA A100,8.0,,"The accurate computational annotation of protein sequences with enzymatic function, especially those that are part of the functional and taxonomic dark matter, remains a fundamental challenge in bioinformatics. Here, we present HiFi-NN, (Hierarchically-Finetuned Nearest Neighbor search) which annotates protein sequences to the 4th level of EC (enzyme commission) number with greater precision and recall than all existing deep learning methods. HiFi-NN is a hierarchically-finetuned deep learning method based on a combination of semi-supervised representation learning and a nearest neighbours classifier. Furthermore, we show that this method can correctly identify the EC number of a given sequence to identities below 40%, where the current state of the art annotation tool, BLASTp, cannot. We proceed to improve the representations learned by increasing the diversity of the training set, not just in sequence space but also in terms of the environment the sequences have been sampled from. Finally, we use HiFi-NN to annotate a portion of microbial dark matter sequences in the MGnify database.",,,,Confident,2024-12-02 18:23:22+00:00,"United Kingdom of Great Britain and Northern Ireland,Germany,Spain,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Lyra-Fr 10B,Language,LightOn,Industry,,2023-12-15,LightOn Lyra-fr model is now available on Amazon SageMaker,https://aws.amazon.com/fr/blogs/machine-learning/lighton-lyra-fr-model-is-now-available-on-amazon-sagemaker/,,,,10000000000.0,10B,,,,,,"""Lyra-fr was trained on a large corpus of French curated data""",,,,,,,,,"We are thrilled to announce the availability of the LightOn Lyra-fr foundation model for customers using Amazon SageMaker. LightOn is a leader in building foundation models specializing in European languages. Lyra-fr is a state-of-the-art French language model that can be used to build conversational AI, copywriting tools, text classifiers, semantic search, and more. You can easily try out this model and use it with Amazon SageMaker JumpStart. JumpStart is the machine learning (ML) hub of SageMaker that provides access to foundation models in addition to built-in algorithms and end-to-end solution templates to help you quickly get started with ML.",,API access,,Likely,2024-09-16 17:39:55+00:00,France,,,,,,,,,
Konan LLM 41B,"Language,Vision",Konan Technology,Industry,"Yang Seung-hyun, Wiretin, Changmin, Kim Jong-tae",2023-12-15,Konan LLM: A Korean Large Language Model,"https://en.konantech.com/en/llm/konanllm
https://techfinch.kr/ai/konan-technology-unveils-konan-llm--its-own-ai-language-model
https://www.dbpia.co.kr/journal/articleDetail?nodeId=NODE11610127 ",,,,41000000000.0,,1.722e+23,,,=41000000000*700000000000*6=1.722 × 10^23,Unspecified unreleased,,700000000000.0,"https://www.konantech.com/pr/press?number=2628&pn=1&stype2=&sfi=subj&sword=

Since 2007, via the real-time AI analysis service pulseK, over 20.5 billion pieces of data have been independently secured.
Among them, only 2 billion high-quality, large-scale data pieces have been used for training.",,,,,,,"Konan LLM is a Large Language Model developed in-house by Konan Technology. Konan Technology optimized for super-large AI training, it leverages high-quality, large-scale data and over 20 years of expertise in natural language processing.
Konan LLM supports all corporate documentation and creative tasks,
leading the way in workplace innovation.",,Hosted access (no API),,Likely,2025-02-14 20:50:17+00:00,Korea (Republic of),,,,,,,,,
Poro 34B,Language,"High-Performance Language Technologies (HPLT),University of Turku","Research collective,Academia","Risto Luukkonen, Jonathan Burdge, Elaine Zosa, Aarne Talman, Ville Komulainen, Väinö Hatanpää, Peter Sarlin, Sampo Pyysalo",2023-12-14,Poro 34B and the Blessing of Multilinguality,https://arxiv.org/abs/2404.01856,,,,34200000000.0,https://huggingface.co/LumiOpen/Poro-34B,2.052e+23,,,"6ND = 6*1T*34.2B= 2.04e+23

""This allowed total training cycle throughput of 49618 TFLOPs and 174378 tokens/second.""

the training took around 18 months (https://hplt-project.org/deliverables)
49618*18*30*24*3600*10^12=2.3149774e+24

","mC4,SlimPajama,StarCoder,Dolma","https://huggingface.co/LumiOpen/Poro-34B

""The Finnish dataset is a combination of many Finnish resources:

    Finnish Internet Parsebank
    mC4 multilingual colossal, cleaned Common Crawl
    Common Crawl Finnish
    Finnish Wikipedia
    Lönnrot Projekti Lönnrot
    Suomi24 The Suomi 24 Corpus 2001-2020
    Reddit r/Suomi submissions and comments
    STT Finnish News Agency Archive 1992-2018
    Yle Finnish News Archive 2011-2018
    Yle Finnish News Archive 2019-2020
    Yle News Archive Easy-to-read Finnish 2011-2018
    Yle News Archive Easy-to-read Finnish 2019-2020""
""

""Poro is a 34B parameter decoder-only transformer pretrained on Finnish, English and code. It is being trained on 1 trillion tokens (700 billion as of this release). Poro is a fully open source model and is made available under the Apache 2.0 License.""",1000000000000.0,"1T tokens, assuming 0.75 word per token
""Poro is a 34B parameter decoder-only transformer pretrained on Finnish, English and code. It is being trained on 1 trillion tokens. Poro is a fully open source model and is made available under the Apache 2.0 License.""",,,,AMD Radeon Instinct MI250X,512.0,,"The pretraining of state-of-the-art large language models now requires trillions of words of text, which is orders of magnitude more than available for the vast majority of languages. While including text in more than one language is an obvious way to acquire more pretraining data, multilinguality is often seen as a curse, and most model training efforts continue to focus near-exclusively on individual large languages. We believe that multilinguality can be a blessing and that it should be possible to substantially improve over the capabilities of monolingual models for small languages through multilingual training. In this study, we introduce Poro 34B, a 34 billion parameter model trained for 1 trillion tokens of Finnish, English, and programming languages, and demonstrate that a multilingual training approach can produce a model that not only substantially advances over the capabilities of existing models for Finnish, but also excels in translation and is competitive in its class in generating English and programming languages. We release the model parameters, scripts, and data under open licenses at this https URL.",,Open weights (unrestricted),,Confident,2025-01-22 17:52:22+00:00,"Multinational,Finland",,,,,,,,,
CogAgent,"Vision,Language","Tsinghua University,Zhipu AI","Academia,Industry","Wenyi Hong, Weihan Wang, Qingsong Lv, Jiazheng Xu, Wenmeng Yu, Junhui Ji, Yan Wang, Zihan Wang, Yuxuan Zhang, Juanzi Li, Bin Xu, Yuxiao Dong, Ming Ding, Jie Tang",2023-12-14,CogAgent: A Visual Language Model for GUI Agents,https://arxiv.org/abs/2312.08914,150.0,SOTA improvement,See Table 1,18000000000.0,,6.707e+22,,,"States 12.6 TFLOP per 1120x1120 image forward pass. Trained 60k steps with 4608 batch size, and then 10k with 1024 batch size.
12.6 TFLOP * (60000*4608 + 10000*1024) = 3.76e21

Uses pretrained CogVLM as base (6.331e22 FLOP), along with EVA2-CLIP-L. EVA2-CLIP-L's FLOPs are potentially estimable, but based on details about EVA2-CLIP-g/14 (a larger model), they likely contribute negligibly to CogAgent.

Sum: 6.707e22","COYO-700M,LAION-2B,Common Crawl,Unspecified unreleased","From section 2.3, pretraining data includes:
- Synthetic renderings with text from language pre-training dataset (80M image-text pairs)
- OCR from natural images from COYO [6] and LAION-2B (18M image-text pairs)
- Academic documents (9M image-text pairs)
- Visual grounding dataset with bounding boxes (see CogVLM) (40M image-text pairs)
- Common Crawl Screenshot 400K (400k images with  140M QA pairs)",287000000.0,,,,,,,Supervised,"People are spending an enormous amount of time on digital devices through graphical user interfaces (GUIs), e.g., computer or smartphone screens. Large language models (LLMs) such as ChatGPT can assist people in tasks like writing emails, but struggle to understand and interact with GUIs, thus limiting their potential to increase automation levels. In this paper, we introduce CogAgent, an 18-billion-parameter visual language model (VLM) specializing in GUI understanding and navigation. By utilizing both low-resolution and high-resolution image encoders, CogAgent supports input at a resolution of 1120*1120, enabling it to recognize tiny page elements and text. As a generalist visual language model, CogAgent achieves the state of the art on five text-rich and four general VQA benchmarks, including VQAv2, OK-VQA, Text-VQA, ST-VQA, ChartQA, infoVQA, DocVQA, MM-Vet, and POPE. CogAgent, using only screenshots as input, outperforms LLM-based methods that consume extracted HTML text on both PC and Android GUI navigation tasks -- Mind2Web and AITW, advancing the state of the art. The model and codes are available at this https URL .",,Open weights (restricted use),,Likely,2025-02-14 20:50:38+00:00,"China,China",CogVLM-17B,,,,,,,,
FunSearch,"Language,Search",Google DeepMind,Industry,"Bernardino Romera-Paredes, Mohammadamin Barekatain, Alexander Novikov, Matej Balog, M. Pawan Kumar, Emilien Dupont, Francisco J. R. Ruiz, Jordan S. Ellenberg, Pengming Wang, Omar Fawzi, Pushmeet Kohli, Alhussein Fawzi ",2023-12-14,Mathematical discoveries from program search with large language models,"https://www.nature.com/articles/s41586-023-06924-6
https://deepmind.google/discover/blog/funsearch-making-new-discoveries-in-mathematical-sciences-using-large-language-models/",170.0,"SOTA improvement,Historical significance",Improved SOTA for the cap set problem. Can plausibly claim the first instance of a LLM system making a genuine and novel scientific contribution.,15000000000.0,"From the section called ""Pretrained LLM"": ""We use Codey, an LLM built on top of the PaLM2 model family... Because FunSearch relies on sampling from an LLM extensively, an important performance-defining tradeoff is between the quality of the samples and the inference speed of the LLM. In practice, we have chosen to work with a fast-inference model (rather than slower-inference, higher-quality)""

Unclear which PaLM2 model was used (of Gecko, Otter, Bison, and Unicorn); above quote indicates it was perhaps Otter or Bison, but not Unicorn. Exact parameter counts are not publicly disclosed for any of these models. In comparisons where FunSearch uses StarCoder-15B, Codey is an improvement but not obviously of an entirely different model class.

I report the 15B parameters from StarCoder-15B, used as an open-source comparison",3.87e+23,,9.899999999999999e+24,"Appendix A.5: ""Finding the full-sized symmetric admissible set I(15, 10) required the generation and analysis of approximately two million programs... To reproduce admissible set experiments done above (generating 2 million samples) one would have to use 15 instances of StarCoder-15B running on A100 40 GB GPU each and 5 CPU servers (each running 32 evaluators in parallel) for two days. We estimate that when running on Google Cloud, the price of an experiment is around $800 – $1400, and the energy usage around 250 – 500 kWh; i.e., 0.5% of the energy used for training StarCoder""

15 GPUs * 7.80E+13 FLOP/GPU-sec * 2 days * 24 hours/day * 3600 sec/hour = 2.02e20 FLOP for the GPU servers

We should also add the compute used to train the PaLM2 variant used as the base LLM. Since we don't have any details about this model, I use the compute from StarCoder-15B (used as the open source comparison point): 3.87e+23 FLOP

Unclear how to evaluate the compute from the CPU servers implementing the evolutionary algorithm, but this is very likely dwarfed by the pre-training compute for the LLM.",,"""The experiments carried out in this paper do not require any data corpus other than the publicly available OR-Library bin packing benchmarks""",0.0,"""The experiments carried out in this paper do not require any data corpus other than the publicly available OR-Library bin packing benchmarks""",,48.0,"Appendix A.5: ""To reproduce admissible set experiments done above (generating 2 million samples) one would have to use 15 instances of StarCoder-15B running on A100 40 GB GPU each and 5 CPU servers (each running 32 evaluators in parallel) for two days""",,,,"Large language models (LLMs) have demonstrated tremendous capabilities in solving complex tasks, from quantitative reasoning to understanding natural language. However, LLMs sometimes suffer from confabulations (or hallucinations), which can result in them making plausible but incorrect statements1,2. This hinders the use of current large models in scientific discovery. Here we introduce FunSearch (short for searching in the function space), an evolutionary procedure based on pairing a pretrained LLM with a systematic evaluator. We demonstrate the effectiveness of this approach to surpass the best-known results in important problems, pushing the boundary of existing LLM-based approaches3. Applying FunSearch to a central problem in extremal combinatorics—the cap set problem—we discover new constructions of large cap sets going beyond the best-known ones, both in finite dimensional and asymptotic cases. This shows that it is possible to make discoveries for established open problems using LLMs. We showcase the generality of FunSearch by applying it to an algorithmic problem, online bin packing, finding new heuristics that improve on widely used baselines. In contrast to most computer search approaches, FunSearch searches for programs that describe how to solve a problem, rather than what the solution is. Beyond being an effective and scalable strategy, discovered programs tend to be more interpretable than raw solutions, enabling feedback loops between domain experts and FunSearch, and the deployment of such programs in real-world applications.",,Open weights (unrestricted),,Speculative,2025-02-14 20:50:51+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",PaLM 2,0.0,No finetuning,,,,,,
Imagen 2,Image generation,Google DeepMind,Industry,"Aäron van den Oord, Ali Razavi, Benigno Uria, Çağlar Ünlü, Charlie Nash, Chris Wolff, Conor Durkan, David Ding, Dawid Górny, Evgeny Gladchenko, Felix Riedel, Hang Qi, Jacob Kelly, Jakob Bauer, Jeff Donahue, Junlin Zhang, Mateusz Malinowski, Mikołaj Bińkowski, Pauline Luc, Robert Riachi, Robin Strudel, Sander Dieleman, Tobenna Peter Igwe, Yaroslav Ganin, Zach Eaton-Rosen",2023-12-13,Imagen 2,https://deepmind.google/technologies/imagen-2/,,,Does not appear to meet any notability criteria; could plausibly reach significant usage given integrations into other Google products.,,,,,,,,,,,,,,,,,"Imagen 2 is our most advanced text-to-image diffusion technology, delivering high-quality, photorealistic outputs that are closely aligned and consistent with the user’s prompt. It can generate more lifelike images by using the natural distribution of its training data, instead of adopting a pre-programmed style.",,API access,,Unknown,2024-09-05 18:08:31+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Phi-2,Language,Microsoft,Industry,"Marah Abdin, Jyoti Aneja, Sebastien Bubeck, Caio César Teodoro Mendes, Weizhu Chen, Allie Del Giorno, Ronen Eldan, Sivakanth Gopi, Suriya Gunasekar, Mojan Javaheripi, Piero Kauffmann, Yin Tat Lee, Yuanzhi Li, Anh Nguyen, Gustavo de Rosa, Olli Saarikivi, Adil Salim, Shital Shah, Michael Santacroce, Harkirat Singh Behl, Adam Taumann Kalai, Xin Wang, Rachel Ward, Philipp Witte, Cyril Zhang, Yi Zhang",2023-12-12,Phi-2: The surprising power of small language models,"https://www.microsoft.com/en-us/research/blog/phi-2-the-surprising-power-of-small-language-models/
https://huggingface.co/microsoft/phi-2 ",,,"""With only 2.7 billion parameters, Phi-2 surpasses the performance of Mistral and Llama-2 models at 7B and 13B parameters on various aggregated benchmarks. Notably, it achieves better performance compared to 25x larger Llama-2-70B model on muti-step reasoning tasks, i.e., coding and math. Furthermore, Phi-2 matches or outperforms the recently-announced Google Gemini Nano 2, despite being smaller in size.""",2700000000.0,2.7B,2.27e+22,,,"2.7B params, trained on 1.4T tokens

2.7 billion * 1.4 trillion * 6 = 2.27e22

96*14 A100-days

14 * 96 * 312 trillion * 24 * 3600 * 0.3 = 1.09e22",Phi-2 Dataset,"""Our training data mixture contains synthetic datasets specifically created to teach the model common sense reasoning and general knowledge, including science, daily activities, and theory of mind, among others. We further augment our training corpus with carefully selected web data that is filtered based on educational value and content quality. Secondly, we use innovative techniques to scale up, starting from our 1.3 billion parameter model, Phi-1.5, and embedding its knowledge within the 2.7 billion parameter Phi-2. This scaled knowledge transfer not only accelerates training convergence but shows clear boost in Phi-2 benchmark scores.""",250000000000.0,"""trained on 1.4T tokens from multiple passes on a mixture of Synthetic and Web datasets for NLP and coding""
From Huggingface Hub: ""Dataset size: 250B tokens, combination of NLP synthetic data created by AOAI GPT-3.5 and filtered web data from Falcon RefinedWeb and SlimPajama, which was assessed by AOAI GPT-4.""",,336.0,14 days,NVIDIA A100,,,"Over the past few months, our Machine Learning Foundations team at Microsoft Research has released a suite of small language models (SLMs) called “Phi” that achieve remarkable performance on a variety of benchmarks. Our first model, the 1.3 billion parameter Phi-1(opens in new tab), achieved state-of-the-art performance on Python coding among existing SLMs (specifically on the HumanEval and MBPP benchmarks). We then extended our focus to common sense reasoning and language understanding and created a new 1.3 billion parameter model named Phi-1.5(opens in new tab), with performance comparable to models 5x larger.

We are now releasing Phi-2(opens in new tab), a 2.7 billion-parameter language model that demonstrates outstanding reasoning and language understanding capabilities, showcasing state-of-the-art performance among base language models with less than 13 billion parameters. On complex benchmarks Phi-2 matches or outperforms models up to 25x larger, thanks to new innovations in model scaling and training data curation.",,Open weights (unrestricted),,Confident,2025-01-27 22:56:28+00:00,United States of America,,,,,,,,,
Mixtral 8x7B,Language,Mistral AI,Industry,"Albert Jiang, Alexandre Sablayrolles, Arthur Mensch, Blanche Savary, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Emma Bou Hanna, Florian Bressand, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Lélio Renard Lavaud, Louis Ternon, Lucile Saulnier, Marie-Anne Lachaux, Pierre Stock, Teven Le Scao, Théophile Gervet, Thibaut Lavril, Thomas Wang, Timothée Lacroix, William El Sayed.",2023-12-11,Mixtral of experts: A high quality Sparse Mixture-of-Experts.,"https://mistral.ai/news/mixtral-of-experts/, https://arxiv.org/abs/2401.04088",,Significant use,"Frequently downloaded: https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1

Probably the best OS model by a big margin at time of release, e.g. #7 on Chatbot Arena, above Gemini Pro and Claude 2.1: https://huggingface.co/spaces/lmsys/chatbot-arena-leaderboard
",46700000000.0,"46.7B *sparse* params. 12.9B params used on average:

""Concretely, Mixtral has 46.7B total parameters but only uses 12.9B parameters per token. It, therefore, processes input and generates output at the same speed and for the same cost as a 12.9B model.""",,,,,,"""Mixtral is pretrained with multilingual data using a context size of 32k tokens""",,,,,,,,,"Today, the team is proud to release Mixtral 8x7B, a high-quality sparse mixture of experts model (SMoE) with open weights. Licensed under Apache 2.0. Mixtral outperforms Llama 2 70B on most benchmarks with 6x faster inference. It is the strongest open-weight model with a permissive license and the best model overall regarding cost/performance trade-offs. In particular, it matches or outperforms GPT3.5 on most standard benchmarks.",,Open weights (unrestricted),,Confident,2025-01-21 20:25:47+00:00,France,,,,,,,,,
Mistral Medium,Language,Mistral AI,Industry,,2023-12-11,La Plateforme,https://mistral.ai/news/la-plateforme/,,,"One of the strongest models on Chatbot Arena, behind only GPT-4 and Bard/Gemini Pro: https://huggingface.co/spaces/lmsys/chatbot-arena-leaderboard.

""Our highest-quality endpoint currently serves a prototype model, that is currently among the top serviced models available based on standard benchmarks""
https://mistral.ai/news/la-plateforme/",,"May be 70B, based on this weird leak episode. 

https://venturebeat.com/ai/mistral-ceo-confirms-leak-of-new-open-source-ai-model-nearing-gpt-4-performance/",,,,,,,,,,,,,,,"Mistral-medium. Our highest-quality endpoint currently serves a prototype model, that is currently among the top serviced models available based on standard benchmarks. It masters English/French/Italian/German/Spanish and code and obtains a score of 8.6 on MT-Bench. The following table compare the performance of the base models of Mistral-medium, Mistral-small and the endpoint of a competitor.",,API access,,Unknown,2024-09-05 18:08:31+00:00,France,,,,,,,,,
ruDalle: Kandinsky 3.1,Image generation,Sber,"Industry,Government",,2023-12-11,,https://ai-forever.github.io/Kandinsky-3/K31/,,,,,,,2.014908000001e+20,,lower bound is taken from Kandinsky 3.0 estimate,"Unspecified unreleased,LAION,COYO-700M",,,,,,,NVIDIA A100,,,"We present Kandinsky 3.1, the follow-up to the Kandinsky 3.0 model, a large-scale text-to-image generation model based on latent diffusion, continuing the series of text-to-image Kandinsky models and reflecting our progress to achieve higher quality and realism of image generation, which we have enhanced and enriched with a variety of useful features and modes to give users more opportunities to fully utilise the power of our new model.",,Open weights (unrestricted),,Unknown,2024-09-06 15:29:53+00:00,Russia,,,,,,,,,
MBP,Biology,"University of Science and Technology of China,Tencent,Zhejiang University","Academia,Industry,Academia","Jiaxian Yan, Zhaofeng Ye, Ziyi Yang, Chengqiang Lu, Shengyu Zhang, Qi Liu, Jiezhong Qiu",2023-12-11,Multi-task bioassay pre-training for protein-ligand binding affinity prediction,https://academic.oup.com/bib/article/25/1/bbad451/7469349,,,,,"Approach 1: training FLOP = 2 * connections * 3 * training examples * epochs. ""For pre-training, the number of epochs was set to 100."" 
1.8e18 FLOP = 2 * connections * 3 *  * 100",1.8e+18,,,"""We pre-trained our model on one NVIDIA A100-PCIE-40GB for about 16 h and fine-tuned for about 1 h."" Assume 40% utilization and FP16 precision.",,,,,,,,,,,"Protein–ligand binding affinity (PLBA) prediction is the fundamental task in drug discovery. Recently, various deep learning-based models predict binding affinity by incorporating the three-dimensional (3D) structure of protein–ligand complexes as input and achieving astounding progress. However, due to the scarcity of high-quality training data, the generalization ability of current models is still limited. Although there is a vast amount of affinity data available in large-scale databases such as ChEMBL, issues such as inconsistent affinity measurement labels (i.e. IC50, Ki, Kd), different experimental conditions, and the lack of available 3D binding structures complicate the development of high-precision affinity prediction models using these data. To address these issues, we (i) propose Multi-task Bioassay Pre-training (MBP), a pre-training framework for structure-based PLBA prediction; (ii) construct a pre-training dataset called ChEMBL-Dock with more than 300k experimentally measured affinity labels and about 2.8M docked 3D structures. By introducing multi-task pre-training to treat the prediction of different affinity labels as different tasks and classifying relative rankings between samples from the same bioassay, MBP learns robust and transferrable structural knowledge from our new ChEMBL-Dock dataset with varied and noisy labels. Experiments substantiate the capability of MBP on the structure-based PLBA prediction task. To the best of our knowledge, MBP is the first affinity pre-training model and shows great potential for future development. MBP web-server is now available for free at: https://huggingface.co/spaces/jiaxianustc/mbp.",,,,Unverified,2025-02-14 20:51:03+00:00,"China,China,China",,,,,,,,,
CRYSTALCODER,Language,"Mohamed bin Zayed University of Artificial Intelligence (MBZUAI),Petuum,University of Southern California,Carnegie Mellon University (CMU),University of Illinois Urbana-Champaign (UIUC),University of California San Diego,LLM360","Academia,Industry,Academia,Academia,Academia,Academia,Research collective","Zhengzhong Liu, Aurick Qiao, Willie Neiswanger, Hongyi Wang, Bowen Tan, Tianhua Tao, Junbo Li, Yuqi Wang, Suqi Sun, Omkar Pangarkar, Richard Fan, Yi Gu, Victor Miller, Yonghao Zhuang, Guowei He, Haonan Li, Fajri Koto, Liping Tang, Nikhil Ranjan, Zhiqiang Shen, Xuguang Ren, Roberto Iriondo, Cun Mu, Zhiting Hu, Mark Schulze, Preslav Nakov, Tim Baldwin, Eric P. Xing",2023-12-11,LLM360: Towards Fully Transparent Open-Source LLMs,https://arxiv.org/abs/2312.06550,,,,6700000000.0,"6.7B
We used the exact same model architecture as LLaMA 7B",5.55564e+22,,,6*6700000000.00*1382000000000 = 5.55564e+22,"StarCoder,SlimPajama","our pretraining data is a
mixture of RefinedWeb, StarCoder, and RedPajama-v1",1382000000000.0, 1382B tokens in total,,,,,,,"The recent surge in open-source Large Language Models (LLMs), such as LLaMA, Falcon, and Mistral, provides diverse options for AI practitioners and researchers. However, most LLMs have only released partial artifacts, such as the final model weights or inference code, and technical reports increasingly limit their scope to high-level design choices and surface statistics. These choices hinder progress in the field by degrading transparency into the training of LLMs and forcing teams to rediscover many details in the training process. We present LLM360, an initiative to fully open-source LLMs, which advocates for all training code and data, model checkpoints, and intermediate results to be made available to the community. The goal of LLM360 is to support open and collaborative AI research by making the end-to-end LLM training process transparent and reproducible by everyone. As a first step of LLM360, we release two 7B parameter LLMs pre-trained from scratch, Amber and CrystalCoder, including their training code, data, intermediate checkpoints, and analyses (at this https URL). We are committed to continually pushing the boundaries of LLMs through this open-source effort. More large-scale and stronger models are underway and will be released in the future.",,Open weights (unrestricted),,Confident,2024-11-25 18:56:15+00:00,"United Arab Emirates,United States of America,United States of America,United States of America,United States of America,United States of America",,,,Cerebras,"CRYSTALCODER is trained on the Cerebras Condor Galaxy 1 (CG-1), a 4 exaFLOPS, 54 million core, 64-node cloud AI supercomputer",,,,
Amber,Language,"Mohamed bin Zayed University of Artificial Intelligence (MBZUAI),Petuum,University of Southern California,Carnegie Mellon University (CMU),University of Illinois Urbana-Champaign (UIUC),University of California San Diego,LLM360","Academia,Industry,Academia,Academia,Academia,Academia,Research collective","Zhengzhong Liu, Aurick Qiao, Willie Neiswanger, Hongyi Wang, Bowen Tan, Tianhua Tao, Junbo Li, Yuqi Wang, Suqi Sun, Omkar Pangarkar, Richard Fan, Yi Gu, Victor Miller, Yonghao Zhuang, Guowei He, Haonan Li, Fajri Koto, Liping Tang, Nikhil Ranjan, Zhiqiang Shen, Xuguang Ren, Roberto Iriondo, Cun Mu, Zhiting Hu, Mark Schulze, Preslav Nakov, Tim Baldwin, Eric P. Xing",2023-12-11,LLM360: Towards Fully Transparent Open-Source LLMs,https://arxiv.org/abs/2312.06550,,,,6700000000.0,"6.7B
We used the exact same model architecture as LLaMA 7B",4.7898069e+22,,,"6*6,7*10^9*1259130000000=5.0617026e+22

312000000000000*600.5*3600*224*0.3 = 4.5325164e+22

Sqrt(4.5325164e+22*5.0617026e+22) = 4.7898069e+22","RefinedWeb,StarCoder,RedPajama","our pretraining data is a
mixture of RefinedWeb, StarCoder, and RedPajama-v1",1259130000000.0,1259.13 billion tokens (table 2),,600.5,"The GPU cluster consists
of 56 DGX A100 nodes, each equipped with 4× 80GB A100 GPUs

""The throughput we manage to achieve with our distributed training framework is around 582.4k tokens per second.""

1259130000000 / 582400 / 3600 = 600.5 hours

",NVIDIA A100 SXM4 80 GB,224.0,,"The recent surge in open-source Large Language Models (LLMs), such as LLaMA, Falcon, and Mistral, provides diverse options for AI practitioners and researchers. However, most LLMs have only released partial artifacts, such as the final model weights or inference code, and technical reports increasingly limit their scope to high-level design choices and surface statistics. These choices hinder progress in the field by degrading transparency into the training of LLMs and forcing teams to rediscover many details in the training process. We present LLM360, an initiative to fully open-source LLMs, which advocates for all training code and data, model checkpoints, and intermediate results to be made available to the community. The goal of LLM360 is to support open and collaborative AI research by making the end-to-end LLM training process transparent and reproducible by everyone. As a first step of LLM360, we release two 7B parameter LLMs pre-trained from scratch, Amber and CrystalCoder, including their training code, data, intermediate checkpoints, and analyses (at this https URL). We are committed to continually pushing the boundaries of LLMs through this open-source effort. More large-scale and stronger models are underway and will be released in the future.",,Open weights (unrestricted),,Confident,2024-11-25 18:54:12+00:00,"United Arab Emirates,United States of America,United States of America,United States of America,United States of America,United States of America",,,,,,,,,
XVERSE-65B-2,Language,"XVERSE Technology,Shenzhen Yuanxiang Technology","Industry,Industry",,2023-12-08,,https://github.com/xverse-ai/XVERSE-65B/blob/main/README_EN.md,,,,65000000000.0,Based on the name. Exact count unknown but may be listed on Hugging Face.,1.24800000000001e+24,,,C = 6ND = 6 * 3.2T tokens * 65B params = 1.248e24 FLOP,,"[2023/12/08] Released the XVERSE-65B-2 base model. This model builds upon its predecessor through Continual Pre-Training, reaching a total training volume of 3.2 trillion tokens.",3200000000000.0,"Training Data: The model has been thoroughly trained on a diversified and high-quality dataset consisting of 2.6 trillion of tokens, including more than 40 languages such as Chinese, English, Russian, and Spanish. The sampling ratio of different types of data is finely set, which makes the performance of Chinese and English excellent, and also takes into account the effect of other languages.

Assume 0.85 words per token on average for the mix of languages.",,4096.0,November 6 to December 8 is 32 days. They did 600B tokens of continual pretraining during this period. The model's total tokens are 3200B. Therefore the total pretraining time was around (32 days * 24 hours/day)*(3200/600) = 4096 hours.,,,,,,Open weights (restricted use),,Confident,2025-02-14 20:51:07+00:00,"China,China",,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
SeamlessM4T,"Speech,Language","Facebook,INRIA,University of California (UC) Berkeley","Industry,Academia,Academia","Loïc Barrault, Yu-An Chung, Mariano Coria Meglioli, David Dale, Ning Dong, Mark Duppenthaler, Paul-Ambroise Duquenne, Brian Ellis, Hady Elsahar, Justin Haaheim, John Hoffman, Min-Jae Hwang, Hirofumi Inaguma, Christopher Klaiber, Ilia Kulikov, Pengwei Li, Daniel Licht, Jean Maillard, Ruslan Mavlyutov, Alice Rakotoarison, Kaushik Ram Sadagopan, Abinesh Ramakrishnan, Tuan Tran, Guillaume Wenzek, Yilin Yang, Ethan Ye, Ivan Evtimov, Pierre Fernandez, Cynthia Gao, Prangthip Hansanti, Elahe Kalbassi, Amanda Kallet, Artyom Kozhevnikov, Gabriel Mejia Gonzalez, Robin San Roman, Christophe Touret, Corinne Wong, Carleigh Wood, Bokai Yu, Pierre Andrews, Can Balioglu, Peng-Jen Chen, Marta R. Costa-jussà, Maha Elbayad, Hongyu Gong, Francisco Guzmán, Kevin Heffernan, Somya Jain, Justine Kao, Ann Lee, Xutai Ma, Alex Mourachko, Benjamin Peloquin, Juan Pino, Sravya Popuri, Christophe Ropers, Safiyyah Saleem, Holger Schwenk, Anna Sun, Paden Tomasello, Changhan Wang, Jeff Wang, Skyler Wang, Mary Williamson",2023-12-08,Seamless: Multilingual Expressive and Streaming Speech Translation,"https://arxiv.org/abs/2312.05187, https://huggingface.co/facebook/seamless-m4t-v2-large",93.0,SOTA improvement,"""As an improved version of SeamlessM4T,
SeamlessM4T v2 delivers state-of-the-art semantic accuracy across different speech and text translation tasks
while supporting nearly 100 languages as input speech or text""",2300000000.0,2.3B,,,,,,"Several datasets including unlabeled speech, ASR data, TTS data",,~5M hours of audio data (figure 2),,,,NVIDIA V100,,Self-supervised learning,"Large-scale automatic speech translation systems today lack key features that help machine-mediated communication feel seamless when compared to human-to-human dialogue. In this work, we introduce a family of models that enable end-to-end expressive and multilingual translations in a streaming fashion. First, we contribute an improved version of the massively multilingual and multimodal SeamlessM4T model-SeamlessM4T v2. This newer model, incorporating an updated UnitY2 framework, was trained on more low-resource language data. SeamlessM4T v2 provides the foundation on which our next two models are initiated. SeamlessExpressive enables translation that preserves vocal styles and prosody. Compared to previous efforts in expressive speech research, our work addresses certain underexplored aspects of prosody, such as speech rate and pauses, while also preserving the style of one's voice. As for SeamlessStreaming, our model leverages the Efficient Monotonic Multihead Attention mechanism to generate low-latency target translations without waiting for complete source utterances. As the first of its kind, SeamlessStreaming enables simultaneous speech-to-speech/text translation for multiple source and target languages. To ensure that our models can be used safely and responsibly, we implemented the first known red-teaming effort for multimodal machine translation, a system for the detection and mitigation of added toxicity, a systematic evaluation of gender bias, and an inaudible localized watermarking mechanism designed to dampen the impact of deepfakes. Consequently, we bring major components from SeamlessExpressive and SeamlessStreaming together to form Seamless, the first publicly available system that unlocks expressive cross-lingual communication in real-time. The contributions to this work are publicly released and accessible at this https URL",,Open weights (unrestricted),,Confident,2024-12-08 19:02:47+00:00,"United States of America,France,United States of America",W2v-BERT,,expanded from 1M hours data to 4.5M hours,,,,,,
Llama Guard,Language,Meta AI,Industry,"Hakan Inan, Kartikeya Upasani, Jianfeng Chi, Rashi Rungta, Krithika Iyer, Yuning Mao, Davide Testuggine, Madian Khabsa",2023-12-07,Llama Guard: LLM-based Input-Output Safeguard for Human-AI Conversations,https://arxiv.org/abs/2312.06674,201.0,SOTA improvement,"""Llama Guard, a Llama2-7b model that is instruction-tuned on our collected dataset, albeit low in volume, demonstrates strong performance on existing benchmarks such as the OpenAI Moderation Evaluation dataset and oxicChat, where its performance matches or exceeds that of currently available content moderation tools. """,7000000000.0,7B,1.6e+23,,,"1.7e17 finetune compute, plus Llama 2-13B pretrain compute (1.6e+23)",,"Dataset of prompt-response pairs of human-AI conversations

""We leverage the human preference data about harmlessness from Anthropic (Ganguli et al., 2022). From
this dataset, we pick the first human prompt and discard the corresponding response from the assistant, as
well as all the other turns to create an initial single-turn prompt dataset. Next, we use one of our internal
Llama checkpoints to generate a mix of cooperating and refusing responses for these prompts. We employ
our expert, in-house red team to label the prompt and response pairs for the corresponding category based
on the taxonomy defined in Section 2. The red-teamers annotate the dataset for 4 labels: prompt-category,
response-category, prompt-label (safe or unsafe), and response-label (safe or unsafe). During the annotation
process, we also do data cleaning, and discard examples with badly formatted inputs or outputs. The final
dataset comprises of 13,997 prompts and responses, with their respective annotations.""",4096000.0,"14k prompt-response pairs. Based on training details it's trained on ~4M tokens, which is stated to be ~1 epoch:
2 * 4096 * 500 = 4,096,000
(batch size) * (sequence length) * (steps)",1.0,,,NVIDIA A100 SXM4 80 GB,,,"We introduce Llama Guard, an LLM-based input-output safeguard model geared towards Human-AI conversation use cases. Our model incorporates a safety risk taxonomy, a valuable tool for categorizing a specific set of safety risks found in LLM prompts (i.e., prompt classification). This taxonomy is also instrumental in classifying the responses generated by LLMs to these prompts, a process we refer to as response classification. For the purpose of both prompt and response classification, we have meticulously gathered a dataset of high quality. Llama Guard, a Llama2-7b model that is instruction-tuned on our collected dataset, albeit low in volume, demonstrates strong performance on existing benchmarks such as the OpenAI Moderation Evaluation dataset and ToxicChat, where its performance matches or exceeds that of currently available content moderation tools. Llama Guard functions as a language model, carrying out multi-class classification and generating binary decision scores. Furthermore, the instruction fine-tuning of Llama Guard allows for the customization of tasks and the adaptation of output formats. This feature enhances the model's capabilities, such as enabling the adjustment of taxonomy categories to align with specific use cases, and facilitating zero-shot or few-shot prompting with diverse taxonomies at the input. We are making Llama Guard model weights available and we encourage researchers to further develop and adapt them to meet the evolving needs of the community for AI safety.",,Open weights (restricted use),,Confident,2025-02-14 20:52:52+00:00,United States of America,Llama 2-7B,1.7e+17,"""We train on a single machine with 8xA100 80GB GPUs using a batch size of 2, with sequence length of 4096, using model parallelism of 1 and a learning rate of 2 × 10−6. We train for 500 steps, which corresponds to ∼1 epoch over our training set.""

6 * 2*4096*500 * 7 billion = 1.7e17",,,,,,
StableLM - Zephyr 3B,Language,Stability AI,Industry,,2023-12-07,"Introducing Stable LM Zephyr 3B: A New Addition to Stable LM, Bringing Powerful LLM Assistants to Edge Devices",https://huggingface.co/stabilityai/stablelm-zephyr-3b,,,,3000000000.0,3B,,,,,"MetaMathQA,WizardLM,SlimOrca,UltraFeedback,Capybara-DPO 7K binarized","SFT Datasets
HuggingFaceH4/ultrachat_200k
meta-math/MetaMathQA
WizardLM/WizardLM_evol_instruct_V2_196k
Open-Orca/SlimOrca

Preference Datasets:
HuggingFaceH4/ultrafeedback_binarized
Intel/orca_dpo_pairs",,,,,"""Hardware: StableLM Zephyr 3B was trained on the Stability AI cluster across 8 nodes with 8 A100 80GBs GPUs for each nodes.""",NVIDIA A100 SXM4 80 GB,8.0,,"StableLM Zephyr 3B is a 3 billion parameter instruction tuned inspired by HugginFaceH4's Zephyr 7B training pipeline this model was trained on a mix of publicly available datasets, synthetic datasets using Direct Preference Optimization (DPO), evaluation for this model based on MT Bench and Alpaca Benchmark",,Open weights (restricted use),,Confident,2024-12-09 18:25:59+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",StableLM-3B-4E1T,,,,,,,,
Gemini 1.0 Ultra,"Multimodal,Language,Vision",Google DeepMind,Industry,Gemini Team,2023-12-06,Gemini: A Family of Highly Capable Multimodal Models,https://storage.googleapis.com/deepmind-media/gemini/gemini_1_report.pdf,633.0,"SOTA improvement,Training cost","""Evaluation on a broad range of benchmarks shows that our most-capable Gemini Ultra model advances the state of the art in 30 of 32 of these benchmarks — notably being the first model to achieve human-expert performance on the well-studied exam benchmark MMLU, and improving the state of the art in every one of the 20 multimodal benchmarks we examined.""",,,5.0000000001e+25,,,"This number is an estimate based on limited evidence. In particular, we combine information about the performance of Gemini Ultra on various benchmarks compared to other models, and guesstimates about the hardware setup used for training to arrive at our estimate. Our reasoning and calculations are detailed in this Colab notebook.
https://colab.research.google.com/drive/1sfG91UfiYpEYnj_xB5YRy07T5dv-9O_c",Unspecified unreleased,"""Gemini models are trained on a dataset that is both multimodal and multilingual. Our pretraining dataset uses data from web documents, books, and code, and includes image, audio, and video data... We find that data quality is critical to a highlyperforming model, and believe that many interesting questions remain around finding the optimal dataset distribution for pretraining.""",,,,2400.0,"Dylan Patel, author of SemiAnalysis, speculates that the training duration of Gemini may have been 100 days.",Google TPU v4,57000.0,,"This report introduces a new family of multimodal models, Gemini, that exhibit remarkable capabilities across image, audio, video, and text understanding. The Gemini family consists of Ultra, Pro, and Nano sizes, suitable for applications ranging from complex reasoning tasks to on-device memory-constrained use-cases. Evaluation on a broad range of benchmarks shows that our most-capable Gemini Ultra model advances the state of the art in 30 of 32 of these benchmarks — notably being the first model to achieve human-expert performance on the well-studied exam benchmark MMLU, and improving the state of the art in every one of the 20 multimodal benchmarks we examined. We believe that the new capabilities of Gemini models in cross-modal reasoning and language understanding will enable a wide variety of use cases and we discuss our approach toward deploying them responsibly to users.
",,API access,,Speculative,2025-02-25 20:51:05+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Gemini 1.0 Pro,"Multimodal,Language,Vision",Google DeepMind,Industry,Gemini Team,2023-12-06,Gemini: A Family of Highly Capable Multimodal Models,https://storage.googleapis.com/deepmind-media/gemini/gemini_1_report.pdf,633.0,Significant use,"Default/free model on gemini.google.com

From paper:
""Broadly, we find that the performance of Gemini Pro outperforms inference-optimized models such as GPT-3.5 and performs comparably with several of the most capable models available, and Gemini Ultra outperforms all current models. In this section, we examine some of these findings.""",,,1.830001e+24,,5.7869712804e+25,"Training compute estimated from benchmark scores.

Our reasoning and calculations for Gemini 1 Ultra are detailed in this Colab notebook.
https://colab.research.google.com/drive/1sfG91UfiYpEYnj_xB5YRy07T5dv-9O_c

",Unspecified unreleased,"""Gemini models are trained on a dataset that is both multimodal and multilingual. Our pretraining dataset uses data from web documents, books, and code, and includes image, audio, and video data... We find that data quality is critical to a highlyperforming model, and believe that many interesting questions remain around finding the optimal
dataset distribution for pretraining.""",,,,,,Google TPU v4,,,"This report introduces a new family of multimodal models, Gemini, that exhibit remarkable capabilities across image, audio, video, and text understanding. The Gemini family consists of Ultra, Pro, and Nano sizes, suitable for applications ranging from complex reasoning tasks to on-device memory-constrained use-cases. Evaluation on a broad range of benchmarks shows that our most-capable Gemini Ultra model advances the state of the art in 30 of 32 of these benchmarks — notably being the first model to achieve human-expert performance on the well-studied exam benchmark MMLU, and improving the state of the art in every one of the 20 multimodal benchmarks we examined. We believe that the new capabilities of Gemini models in cross-modal reasoning and language understanding will enable a wide variety of use cases and we discuss our approach toward deploying them responsibly to users.
",,API access,,Speculative,2025-01-30 02:34:11+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
OneLLM,"Multimodal,Language,Vision","Chinese University of Hong Kong (CUHK),Shanghai AI Lab","Academia,Academia","Jiaming Han, Kaixiong Gong, Yiyuan Zhang, Jiaqi Wang, Kaipeng Zhang, Dahua Lin, Yu Qiao, Peng Gao, Xiangyu Yue",2023-12-06,OneLLM: One Framework to Align All Modalities with Language,https://arxiv.org/abs/2312.03700,48.0,,It is using many modalities - possible SOTA improvement on chating about fMRI scans.,7000000000.0,7B from Table 1,,,,,"Conceptual Captions (CC3M),LAION-400M,LAION-COCO,WebVid-2.5M,Wavcaps,Ego4D","""The source dataset is a subset of CC3M [73], around 0.5M image-text pairs. For IMU-text pairs, we use the IMU sensor data of Ego4D [27] and the
corresponding video narrations (i.e., text annotations). For fMRI-text pairs, we use the subj01 imaging session of NSD [5] and follow the same data split with [72]. Note that the visual stimulus, i.e., images shown to participants, are
from MS COCO [14]. Therefore, we use the image captions in COCO Captions as text annotations of fMRI-text pairs""

""Finally, our mutlimodal IT datasets have about 2M items, covering
multiple tasks such as detailed description/reasoning, conversation, short question answering and captioning.""",1007006000.0,Table 9: 1005000000 + 2006000 = 1007006000 datapoints,,,,NVIDIA A100,16.0,,"Multimodal large language models (MLLMs) have gained significant attention due to their strong multimodal understanding capability. However, existing works rely heavily on modality-specific encoders, which usually differ in architecture and are limited to common modalities. In this paper, we present OneLLM, an MLLM that aligns eight modalities to language using a unified framework. We achieve this through a unified multimodal encoder and a progressive multimodal alignment pipeline. In detail, we first train an image projection module to connect a vision encoder with LLM. Then, we build a universal projection module (UPM) by mixing multiple image projection modules and dynamic routing. Finally, we progressively align more modalities to LLM with the UPM. To fully leverage the potential of OneLLM in following instructions, we also curated a comprehensive multimodal instruction dataset, including 2M items from image, audio, video, point cloud, depth/normal map, IMU and fMRI brain activity. OneLLM is evaluated on 25 diverse benchmarks, encompassing tasks such as multimodal captioning, question answering and reasoning, where it delivers excellent performance. Code, data, model and online demo are available at this https URL",,Open weights (non-commercial),,Likely,2024-12-08 19:04:28+00:00,"Hong Kong,China,China",Llama 2-7B,4.2e+19,"assuming that sizes in Table 9 are tokens, we can use 6ND approximation:
6*1B*7B = 4.2e19",,,,,,
NexusRaven-V2,Language,Nexusflow,Industry,,2023-12-05,NexusRaven-V2: Surpassing GPT-4 for Zero-shot Function Calling,https://nexusflow.ai/blogs/ravenv2,,,,13000000000.0,"13B
",,,,,,,,,,,,,,,"We are thrilled to open source NexusRaven-V2, a 13B LLM outperforming GPT-4 in zero-shot function calling, the capability to turn natural language instructions into executable code to use tools. The function calling capability lies at the core of the OpenAI Assistants API, and serves as the key to enabling copilots and agents to use software tools. With the goal of advancing open source models for copilots and agents, NexusRaven-V2 marks an exciting step in collaboration with the community to expand the open model ecosystem for technological and societal impacts. The highlights of this release include:

State-of-the-art & Generalizable Capability. NexusRaven-V2 surpasses GPT-4 by up to 7% in function calling success rates in human-generated use cases involving nested and composite functions. NexusRaven-V2 has never been trained on the functions used in evaluation.
Open-source and Commercially Permissive. NexusRaven-V2 is further instruction-tuned on Meta's CodeLlama-13B-instruct, leveraging curated data generated through Nexusflow's pipeline, exclusively sourced from open-code corpora without using proprietary LLMs. It is commercially permissive for both community developers and enterprises.
Ease of Integration. We release open-source utility artifacts that enable users to seamlessly replace mainstream proprietary function calling APIs with NexusRaven-V2 in their software workflow. We also provide online demos and Colab notebooks for onboarding and integration demonstration.
Function Calling Benchmark and Leaderboard. We open source our evaluation benchmark Nexus-Function-Calling and establish a Huggingface leaderboard which includes an extensive collection of real-life human-curated function-calling examples, covering a diverse range of function-calling use cases and difficulties. These hundreds of examples, across 9 tasks, have been curated with input from domain experts, and their ground truth has been meticulously checked. We open source 8 out of the 9 benchmarks, leaving one as an internal benchmark for testing new models.",,Open weights (restricted use),,Confident,2024-12-02 17:40:33+00:00,United States of America,Code Llama-13B,,,,,,,,
SARA-RT-2,Robotics,Google DeepMind,Industry,"Isabel Leal, Krzysztof Choromanski, Deepali Jain, Avinava Dubey, Jake Varley, Michael Ryoo, Yao Lu, Frederick Liu, Vikas Sindhwani, Quan Vuong, Tamas Sarlos, Ken Oslund, Karol Hausman, Kanishka Rao",2023-12-04,SARA-RT: Scaling up Robotics Transformers with Self-Adaptive Robust Attention,https://arxiv.org/abs/2312.01990,,,"from blog: https://deepmind.google/discover/blog/shaping-the-future-of-advanced-robotics/

""The best SARA-RT-2 models were 10.6% more accurate and 14% faster than RT-2 models after being provided with a short history of images""

Not sure if this is SOTA since they used a smaller (5B) RT-2 variant",5000000000.0,"5B

""We focus on the 5B PaLI-X variant, as more practical for the on-robot deployment than the 55B variant""",,,,,,,,,,,,,,,"We present Self-Adaptive Robust Attention for Robotics Transformers (SARA-RT): a new paradigm for addressing the emerging challenge of scaling up Robotics Transformers (RT) for on-robot deployment. SARA-RT relies on the new method of fine-tuning proposed by us, called up-training. It converts pre-trained or already fine-tuned Transformer-based robotic policies of quadratic time complexity (including massive billion-parameter vision-language-action models or VLAs), into their efficient linear-attention counterparts maintaining high quality. We demonstrate the effectiveness of SARA-RT by speeding up: (a) the class of recently introduced RT-2 models, the first VLA robotic policies pre-trained on internet-scale data, as well as (b) Point Cloud Transformer (PCT) robotic policies operating on large point clouds. We complement our results with the rigorous mathematical analysis providing deeper insight into the phenomenon of SARA.",,,,Confident,2024-09-16 17:37:46+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",RT-2,,,,,,,,
Mamba-24M (SC09),Speech,"Carnegie Mellon University (CMU),Princeton University","Academia,Academia","Albert Gu, Tri Dao",2023-12-01,Mamba: Linear-Time Sequence Modeling with Selective State Spaces,https://arxiv.org/abs/2312.00752,1195.0,SOTA improvement,"""SC09 is a benchmark speech generation dataset (Donahue, McAuley, and Puckette 2019; Warden 2018), consisting
of 1-second clips sampled at 16000 Hz of the digits “zero” through “nine” with highly variable characteristics. We
largely follow the autoregressive training setup and generation protocol of Goel et al. (2022).
Table 4 shows automated metrics of the Mamba-UNet model compared to a variety of baselines from Goel et al.
(2022): WaveNet (Oord et al. 2016), SampleRNN (Mehri et al. 2017), WaveGAN (Donahue, McAuley, and Puckette
2019), DiffWave (Z. Kong et al. 2021), and SaShiMi. A small Mamba model outperforms the state-of-the-art
(and much larger) GAN- and diffusion- based models. A larger model parameter-matched to the baselines further
improves on fidelity metrics dramatically.""",23400000.0,Table 4,,,,,SC09,"""SC09 is a benchmark speech generation dataset (Donahue, McAuley, and Puckette 2019; Warden 2018), consisting of 1-second clips sampled at 16000 Hz of the digits “zero” through “nine” with highly variable characteristics""",305280000.0,"Section 4.4.2: ""We largely follow the autoregressive training setup and generation protocol of Goel et al. (2022)""
In which they model raw audio waveforms, such that each sample is a datapoint.

SC09 is 5.3 hours long. 5.3h * 3600 sec/h * 16k samples/sec = 305,280,000 samples

Appendix E.4.2: ""We used a learning rate of 0.002 and 200000 training steps at a batch size of 16... training went through 100 epochs""",100.0,,,,,,"Foundation models, now powering most of the exciting applications in deep learning, are almost universally based on the Transformer architecture and its core attention module. Many subquadratic-time architectures such as linear attention, gated convolution and recurrent models, and structured state space models (SSMs) have been developed to address Transformers' computational inefficiency on long sequences, but they have not performed as well as attention on important modalities such as language. We identify that a key weakness of such models is their inability to perform content-based reasoning, and make several improvements. First, simply letting the SSM parameters be functions of the input addresses their weakness with discrete modalities, allowing the model to selectively propagate or forget information along the sequence length dimension depending on the current token. Second, even though this change prevents the use of efficient convolutions, we design a hardware-aware parallel algorithm in recurrent mode. We integrate these selective SSMs into a simplified end-to-end neural network architecture without attention or even MLP blocks (Mamba). Mamba enjoys fast inference (5× higher throughput than Transformers) and linear scaling in sequence length, and its performance improves on real data up to million-length sequences. As a general sequence model backbone, Mamba achieves state-of-the-art performance across several modalities such as language, audio, and genomics. On language modeling, our Mamba-3B model outperforms Transformers of the same size and matches Transformers twice its size, both in pretraining and downstream evaluation.",,,,Confident,2024-11-01 14:05:35+00:00,"United States of America,United States of America",,,,,,,,,
Mamba-2.8B,Language,"Carnegie Mellon University (CMU),Princeton University","Academia,Academia","Albert Gu, Tri Dao",2023-12-01,Mamba: Linear-Time Sequence Modeling with Selective State Spaces,https://arxiv.org/abs/2312.00752,1195.0,,,2800000000.0,"2.8B

https://github.com/state-spaces/mamba",5.400000000000001e+21,,,"""Table 3 shows the performance of Mamba on a range of popular downstream zero-shot evaluation tasks. We compare against the most well-known open source models at these sizes, most importantly Pythia (Biderman et al. 2023) and RWKV (B. Peng et al. 2023) which were trained with the same tokenizer, dataset, and training length (300B tokens) as our models.""

3b * 300b * 6 = 5.4e21

Note: this is a new architecture so not sure how well 6*params*data works as a heuristic

Figure 4 shows perplexity curves where Mamba is trained up to 2e20 FLOP, but those are for the 125M and 1.3B variants.",The Pile,,300000000000.0,"300B tokens of text 

""We compare against the most well-known open source models at these sizes, most importantly Pythia (Biderman et al. 2023) and RWKV (B. Peng et al. 2023) which were trained with the same tokenizer, dataset, and training length (300B tokens) as our models.""",,,,,,,"Foundation models, now powering most of the exciting applications in deep learning, are almost universally based on the Transformer architecture and its core attention module. Many subquadratic-time architectures such as linear attention, gated convolution and recurrent models, and structured state space models (SSMs) have been developed to address Transformers' computational inefficiency on long sequences, but they have not performed as well as attention on important modalities such as language. We identify that a key weakness of such models is their inability to perform content-based reasoning, and make several improvements. First, simply letting the SSM parameters be functions of the input addresses their weakness with discrete modalities, allowing the model to selectively propagate or forget information along the sequence length dimension depending on the current token. Second, even though this change prevents the use of efficient convolutions, we design a hardware-aware parallel algorithm in recurrent mode. We integrate these selective SSMs into a simplified end-to-end neural network architecture without attention or even MLP blocks (Mamba). Mamba enjoys fast inference (5× higher throughput than Transformers) and linear scaling in sequence length, and its performance improves on real data up to million-length sequences. As a general sequence model backbone, Mamba achieves state-of-the-art performance across several modalities such as language, audio, and genomics. On language modeling, our Mamba-3B model outperforms Transformers of the same size and matches Transformers twice its size, both in pretraining and downstream evaluation.",,Open weights (unrestricted),,Likely,2024-11-11 02:04:53+00:00,"United States of America,United States of America",,,,,,,,,
tsuzumi 7B,Language,NTT Communication Science Laboratories,Industry,,2023-12-01,"NTT's Large Language Model ""tsuzumi"" is Here!",https://group.ntt/en/magazine/blog/tsuzumi/,,,,7000000000.0,7B,,,,,,,,,,,,,,,,,,,Confident,2024-09-05 18:08:31+00:00,Japan,,,,,,,,,
NASA SMD,Language,"NASA,IBM","Government,Industry","Masayasu Maraoka, Bishwaranjan Bhattacharjee, Muthukumaran Ramasubramanian, Ikhsa Gurung, Rahul Ramachandran, Manil Maskey, Kaylin Bugbee, Rong Zhang, Yousef El Kurdi, Bharath Dandala, Mike Little, Elizabeth Fancher, Lauren Sanders, Sylvain Costes, Sergi Blanco-Cuaresma, Kelly Lockhart, Thomas Allen, Felix Grazes, Megan Ansdell, Alberto Accomazzi, Sanaz Vahidinia, Ryan McGranaghan, Armin Mehrabian, Tsendgar Lee",2023-12-01,nasa-smd-ibm-v0.1 (Revision f01d42f),https://huggingface.co/nasa-impact/nasa-smd-ibm-v0.1,,,,125000000.0,,,,,,"Wikipedia,PubMed Abstracts,NASA ADS,PubMed Central","Total: 66.24B tokens
",66240000000.0,"Training Data
Wikipedia English (Feb 1, 2020)
AGU Publications
AMS Publications
Scientific papers from Astrophysics Data Systems (ADS)
PubMed abstracts
PubMedCentral (PMC) (commercial license subset)",,,,,,,"nasa-smd-ibm-v0.1 is a RoBERTa-based, Encoder-only transformer model, domain-adapted for NASA Science Mission Directorate (SMD) applications. It's fine-tuned on scientific journals and articles relevant to NASA SMD, aiming to enhance natural language technologies like information retrieval and intelligent search.

IBM and NASA will build two foundation models. The first will be trained on reams of earth science journals to thematically organize the literature and make it easier to search and discover new knowledge. ",,Open weights (unrestricted),,Speculative,2024-09-05 18:08:31+00:00,"United States of America,United States of America",,4.968e+19,66240000000*125000000.00*6,,,,,,
Qwen-72B,Language,Alibaba,Industry,"Jinze Bai, Shuai Bai, Yunfei Chu, Zeyu Cui, Kai Dang, Xiaodong Deng, Yang Fan, Wenbin Ge, Yu Han, Fei Huang, Binyuan Hui, Luo Ji, Mei Li, Junyang Lin, Runji Lin, Dayiheng Liu, Gao Liu, Chengqiang Lu, Keming Lu, Jianxin Ma, Rui Men, Xingzhang Ren, Xuancheng Ren, Chuanqi Tan, Sinan Tan, Jianhong Tu, Peng Wang, Shijie Wang, Wei Wang, Shengguang Wu, Benfeng Xu, Jin Xu, An Yang, Hao Yang, Jian Yang, Shusheng Yang, Yang Yao, Bowen Yu, Hongyi Yuan, Zheng Yuan, Jianwei Zhang, Xingxuan Zhang, Yichang Zhang, Zhenru Zhang, Chang Zhou, Jingren Zhou, Xiaohuan Zhou, Tianhang Zhu",2023-11-30,,https://huggingface.co/Qwen/Qwen-72B,,SOTA improvement,"SOTA on several Chinese benchmarks, with highest average rating overall for Chinese benchmarks:

https://opencompass.org.cn/leaderboard-llm",72000000000.0,72B,1.3e+24,,4.11096e+24,"72 billion params, 3 trillion tokens
72b * 3T * 6 = 1.3e24",,"""It is pretrained on over 3 trillion tokens, including Chinese, English, multilingual texts, code, and mathematics, covering general and professional fields""",3000000000000.0,Assuming not trained for multiple epochs.,,,,,,,"Qwen-72B is the 72B-parameter version of the large language model series, Qwen (abbr. Tongyi Qianwen), proposed by Alibaba Cloud. Qwen-72B is a Transformer-based large language model, which is pretrained on a large volume of data, including web texts, books, codes, etc. Additionally, based on the pretrained Qwen-72B, we release Qwen-72B-Chat, a large-model-based AI assistant, which is trained with alignment techniques.",,Open weights (restricted use),,Confident,2025-01-29 00:07:02+00:00,China,,,,,"The paper does not mention any hardware, GPUs or any information regarding the hardware used.",,4000000.0,"Table 1 https://arxiv.org/abs/2309.16609
(this is uncertain because this table only lists sizes up to 14B. 72B was released after the paper)",
Granite 13B,Language,IBM,Industry,,2023-11-30,Granite Foundation Models,https://www.ibm.com/downloads/cas/X9W4O6BM,,,"Possible significant use - it is (one of) the foundation models behind IBM's ""watsonx"" product, alongside open models like Llama 2

https://www.ibm.com/products/watsonx-ai",13000000000.0,13 billion,2.44e+23,,,"Estimate using hardware:

""Granite.13b.v1 used 256 A100 GPUs for 1056 hours and 120 TFLOPs.
Granite.13b.v2 was trained on the same infrastructure for an
additional 1152 hours with 120 TFLOPS, bringing the total to
2208 hours""

Seems like 120 TFLOPS is the output per GPU after utilization, though they don't explicitly explain that part. That's 38% utilization.

256 * 2208 * 3600 * 120 TFLOPS = 2.44e23

Using 6ND:

""The second version of the granite.13b models leverages an updated base model trained on 2.5T trillion tokens.""

""The granite.13b.v1 base model is trained for 300K iterations,
with a batch size of 4M tokens, for a total of 1.25 trillion
5 tokens. The granite.13b.v2 base model continued pre-training
on top of the granite.13b.v1 checkpoint for an additional 300K
iterations and a total of 2.5 trillion tokens.""

2.5T * 13B * 6 = 1.95e23","Unspecified unreleased,Common Crawl,arXiv,OPENWEBTEXT","""To support the training of large enterprise-grade foundation
models, including granite.13b, IBM curated a massive dataset
of relevant unstructured language data from sources across
academia, the internet, enterprise (e.g., financial, legal), and
code.""

More breakdowns in paper, 20 sources in total

https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=models-granite-13b-v1-model-card ",2500000000000.0,"2.5T tokens, 1.875T words at 0.75 words/token

https://www.ibm.com/docs/en/cloud-paks/cp-data/5.0.x?topic=models-granite-13b-chat-v2-model-card",1.0,2208.0,"""Granite.13b.v1 used 256 A100 GPUs for 1056 hours and 120 TFLOPs. Granite.13b.v2 was trained on the same infrastructure for an
additional 1152 hours with 120 TFLOPS, bringing the total to
2208 hours""",NVIDIA A100,,,"We introduce the Granite series of decoder-only foundation models for generative artificial intelligence (AI) tasks that are ready for enterprise use. We report on the architecture, capabilities, underlying data and data governance, training algorithms, compute infrastructure, energy and carbon footprint,
testing and evaluation, socio-technical harms and mitigations, and usage policies.",,API access,,Likely,2024-12-16 20:42:36+00:00,United States of America,,,,,,,,,
Cohere Command Light,Language,Cohere,Industry,,2023-11-30,Cohere’s Embed and Command Light Models with Fine-tuning Now Available on Amazon Bedrock,https://txt.cohere.com/embed-command-light-fine-tuning-on-amazon-bedrock/,,,,6000000000.0,"6B

https://aws.amazon.com/bedrock/cohere-command-embed/",1.001e+22,,,"https://docs.cohere.com/docs/environmental-impact

2700kg CO2 equivalent. Cohere used this calculator: https://mlco2.github.io/impact/ 

This calculator claims that ~40000 TPUv3 hours causes ~3000 kg CO2 emissions in the ""us-west1"", ""us-west2"", and ""us-west3"" regions. Not clear what region the data center Cohere used was in. Google has data centers around the world; *most* regions are similarly carbon intensive as us-west but north-america-northeast is 10x less carbon intensive and south Asia is 5x more carbon intensive. So the calculation below could be quite off.

Cohere most likely used TPUv4s, which the calculator does not support, which seem to be much more efficient (2.7x more, according to this https://cloud.google.com/blog/topics/systems/tpu-v4-enables-performance-energy-and-co2e-efficiency-gains)

40000 hours * 123 teraflops * 3600 * 0.3 utilization * 2.7 = 1.4e22

",,,,,,,,Google TPU v4,,,,,API access,,Speculative,2025-02-14 20:51:58+00:00,Canada,,,,,,,,,
GNoME for crystal discovery,Materials science,Google DeepMind,Industry,"Amil Merchant, Simon Batzner, Samuel S. Schoenholz, Muratahan Aykol, Gowoon Cheon, Ekin Dogus Cubuk",2023-11-29,Scaling deep learning for materials discovery,https://www.nature.com/articles/s41586-023-06735-9,,Historical significance,Economic impacts from development of commercially and socially valuable protein designs and materials,16240000.0,"""The pretrained potential has 16.24 million parameters.""
This refers to the GNoME network, which is a ""Gaussian Network Model of Energy"" for predicting crystal potential energy of new crystals.",,,,"Pretraining involved 36.43M steps:
""The learning rate was decreased to a new value of 2 × 10−4 after approximately 23 million steps, to 5 × 10−5 after a further approximately 11 million steps and then trained for a final 2.43 million steps. Training was performed on four TPU v3 chips.""

""Inference on an A100 GPU on a 50-atom system takes approximately 14 ms""
3.12e14 FLOP/s * 0.014 s = 4.368e12 FLOP per 50 atom system

Batch size was 32. Multiply inference FLOPs by 3 to account for forward and backward passes during training.
32 * 4.368e12 * 36.43 million * 3 = 1.53e22

This seems implausible – on 4 TPUv3 chips this would take
(1.53e22 / (4 * 1.23e14)) / (3600 * 24) = 360 days",,"""Initial models are trained on a snapshot of the Materials Project from 2018 of approximately 69,000 materials""",69000.0,"""Initial models are trained on a snapshot of the Materials Project from 2018 of approximately 69,000 materials""",1000.0,,,Google TPU v4,4.0,,"Novel functional materials enable fundamental breakthroughs across technological applications from clean energy to information processing. From microchips to batteries and photovoltaics, discovery of inorganic crystals has been bottlenecked by expensive trial-and-error approaches. Concurrently, deep-learning models for language, vision and biology have showcased emergent predictive capabilities with increasing data and computation. Here we show that graph networks trained at scale can reach unprecedented levels of generalization, improving the efficiency of materials discovery by an order of magnitude. Building on 48,000 stable crystals identified in continuing studies15,16,17, improved efficiency enables the discovery of 2.2 million structures below the current convex hull, many of which escaped previous human chemical intuition. Our work represents an order-of-magnitude expansion in stable materials known to humanity. Stable discoveries that are on the final convex hull will be made available to screen for technological applications, as we demonstrate for layered materials and solid-electrolyte candidates. Of the stable structures, 736 have already been independently experimentally realized. The scale and diversity of hundreds of millions of first-principles calculations also unlock modelling capabilities for downstream applications, leading in particular to highly accurate and robust learned interatomic potentials that can be used in condensed-phase molecular-dynamics simulations and high-fidelity zero-shot prediction of ionic conductivity.",,Unreleased,,Likely,2024-11-27 14:20:09+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
PPLX-70B-Online,Language,Perplexity,Industry,"Lauren Yang, Kevin Hu, Aarash Heydari, Gradey Wang, Dmitry Pervukhin, Nikhil Thota, Alexandr Yarats, Max Morozov, Denis Yarats",2023-11-29,Introducing PPLX Online LLMs ,https://blog.perplexity.ai/blog/introducing-pplx-online-llms,,Significant use,"Probably significant use: ""Perplexity, which has just 41 employees and is based out of a shared working space in San Francisco, has 10 million monthly active users, an impressive number for a young start-up."" However, this includes everyone who uses Perplexity's app which also uses third party models like GPT-4.

https://www.nytimes.com/2024/02/01/technology/perplexity-search-ai-google.html

",70000000000.0,70B,,,,,,"Fine-tuned on website excerpts:

""Website excerpts, which we call “snippets”, are provided to our pplx-online models to enable responses with the most up-to-date information.

Fine-tuning: our PPLX models have been fine-tuned to effectively use snippets to inform their responses. Using our in-house data contractors, we carefully curate high quality, diverse, and large training sets in order to achieve high performance on various axes like helpfulness, factuality, and freshness.""",,,,,,,,,"We’re excited to share two new PPLX models: pplx-7b-online and pplx-70b-online! Our online models are focused on delivering helpful, up-to-date, and factual responses, and are publicly available via pplx-api, making it a first-of-its-kind API. pplx-7b-online and pplx-70b-online are also accessible via Perplexity Labs, our LLM playground.",,API access,,Likely,2024-09-05 18:08:31+00:00,United States of America,Llama 2-70B,,"""Fine-tuning: our PPLX models have been fine-tuned to effectively use snippets to inform their responses. Using our in-house data contractors, we carefully curate high quality, diverse, and large training sets in order to achieve high performance on various axes like helpfulness, factuality, and freshness. Our models are regularly fine-tuned to continually improve performance.""",,,,,,
Amazon Titan Text Express,Language,Amazon,Industry,,2023-11-29,,https://aws.amazon.com/ru/about-aws/whats-new/2023/11/amazon-titan-models-express-lite-bedrock/,,,,,,,,,,,,,,,,,,,,"Titan Text Express – Titan Text Express has a maximum context length of 8,192 tokens and is ideal for a wide range of tasks, such as open-ended text generation and conversational chat, and support within Retrieval Augmented Generation (RAG) workﬂows.",,API access,,Unknown,2024-10-27 02:12:48+00:00,United States of America,,,,,,,,,
Amazon Titan Text Lite,Language,Amazon,Industry,,2023-11-29,,https://aws.amazon.com/ru/about-aws/whats-new/2023/11/amazon-titan-models-express-lite-bedrock/,,,,,,,,,,,,,,,,,,,,"Titan Text Lite – Titan Text Lite has a maximum context length of 4,096 tokens and is a price-performant version that is ideal for English-language tasks. The model is highly customizable and can be fine-tuned for tasks such as article summarization and copywriting.",,API access,,Unknown,2024-10-27 02:12:50+00:00,United States of America,,,,,,,,,
Yuan 2.0,Language,Inspur,Industry,"Shaohua Wu, Xudong Zhao, Shenling Wang, Jiangang Luo, Lingjun Li, Xi Chen, Bing Zhao, Wei Wang, Tong Yu, Rongguo Zhang, Jiahua Zhang, Chao Wang",2023-11-27,YUAN 2.0: A Large Language Model with Localized Filtering-based Attention,https://arxiv.org/abs/2311.15786v1,,,,102600000000.0,102.6 billion,1.78e+23,,,"Trained on 288B tokens

6*102.6b*288b = 1.78e23",,"""The pretraining corpus includes a mix of books, codes, and encyclopedia in both Chinese and English (Table 2)""

with synthetic code data:
""Code (CN). Considering the diversity of programming tasks, we also build a synthesized instruction dataset
with 4 million code samples in Chinese. To cover the concepts involved in programming tasks as many as
possible, we collect 15,000 words of programming, computer science, mathematics, and other relevant
topics from the Sogou input dictionary. Two topic words are randomly selected as the seeds for a wellcrafted prompt in each time. Then the prompt will be fed to GPT-3.5 to generate a programming task and
corresponding Python solution. ""

and translated open-source fine-tuning instruction data:
""We construct a fine-tuning dataset focused on code, math and chat tasks.
Code Instruction dataset. We collect some open-source code instruction datasets, including CodeAlpaca20k [28], Evol-Instruct-Code-80k[38], CodeFuse-CodeExercise-Python-27k and CodeFuse-Evolinstruction-66k [39]. We translate the English code instruction into Chinese with GPT-3.5""",288000000000.0,"Most likely the 288B tokens do not represent multiple epochs. As a sense check, Table 2 appears to indicate that 5.73% of pre-training tokens come from synthetically generated text output by GPT-3.5. If the full training corpus is 288B tokens, this would imply ~$24k in API costs at $1.50/1M tokens to generate the data, which seems plausible.",1.0,,,,,,"In this work, the Localized Filtering-based Attention (LFA) is introduced to incorporate prior knowledge of local dependencies of natural language into Attention. Based on LFA, we develop and release Yuan 2.0, a large language model with parameters ranging from 2.1 billion to 102.6 billion. A data filtering and generation method is presented to build pretraining and fine-tuning dataset in high quality. A distributed training method with non-uniform pipeline parallel, data parallel, and optimizer parallel is proposed, which greatly reduces the bandwidth requirements of intra-node communication, and achieves good performance in large-scale distributed training. Yuan 2.0 models display impressive ability in code generation, math problem-solving, and chat compared with existing models. The latest version of YUAN 2.0, including model weights and source code, is accessible at Github.",,Open weights (restricted use),,Confident,2025-02-14 20:52:03+00:00,China,,,,,,,,,
StripedHyena-Hessian-7B,Language,"Together,Nous Research","Industry,Industry","Michael Poli, Jue Wang, Stefano Massaroli, Jeffrey Quesnelle, Ryan Carlow, Eric Nguyen, Armin Thomas",2023-11-27,StripedHyena-Hessian-7B (SH 7B) ,"https://huggingface.co/togethercomputer/StripedHyena-Hessian-7B
https://github.com/togethercomputer/stripedhyena
https://www.together.ai/blog/stripedhyena-7b",,,,7000000000.0,7B,8e+19,,,see Figure at https://www.together.ai/blog/stripedhyena-7b,RedPajama,"StripedHyena was obtained by grafting architectural components of Transformers and Hyena, and trained on a mix of the RedPajama dataset, augmented with longer-context data.",,,,,,,,,"StripedHyena is the first alternative model architecture competitive with the best open-source Transformers of similar sizes in short and long-context evaluations.

StripedHyena is a deep signal processing, hybrid architecture composed of rotary (grouped) attention and gated convolutions arranged in Hyena blocks, with improved scaling over decoder-only Transformers. StripedHyena is designed to leverage the specialization of each of its layer classes, with Hyena layers implementing the bulk of the computation required for sequence processing and attention layers supplementing the ability to perform targeted pattern recall.

Efficient autoregressive generation via a recurrent mode (>500k generation with a single 80GB GPU)
Low latency, faster decoding and higher throughput than Transformers.
Significantly faster training and finetuning at long context (>3x at 131k)
Improved scaling laws over state-of-the-art architectures (e.g., Transformer++) on both natural language and biological sequences.
Robust to training beyond the compute-optimal frontier e.g., training way beyond Chinchilla-optimal token amounts",,Open weights (unrestricted),,Confident,2024-11-24 20:49:30+00:00,"United States of America,United States of America",,,,,,,,,
Starling-LM-7B-alpha,Language,University of California (UC) Berkeley,Academia,"Zhu, Banghua and Frick, Evan and Wu, Tianhao and Zhu, Hanlin and Jiao, Jiantao",2023-11-25, Starling-LM-7B-alpha,"https://huggingface.co/berkeley-nest/Starling-LM-7B-alpha
https://starling.cs.berkeley.edu/",,,,7000000000.0,7B,,,,,,"'We present Nectar, the first high-quality 7-wise comparison dataset, generated through GPT-4-based ranking.' 'Our dataset’s prompts are an amalgamation of diverse sources, including lmsys-chat-1M, ShareGPT, Antropic/hh-rlhf, UltraFeedback, Evol-Instruct, and Flan. Responses are primarily derived from a variety of models, namely GPT-4, GPT-3.5-turbo, GPT-3.5-turbo-instruct, LLama-2-7B-chat, and Mistral-7B-Instruct, alongside other existing datasets and models.'",,"'We release Nectar, a GPT-4 labeled ranking dataset composed of 183K chat prompts' size on https://huggingface.co/datasets/berkeley-nest/Nectar is 518MB

",4.0,,,NVIDIA A100,8.0,,"We introduce Starling-7B, an open large language model (LLM) trained by Reinforcement Learning from AI Feedback (RLAIF). The model harnesses the power of our new GPT-4 labeled ranking dataset, Nectar, and our new reward training and policy tuning pipeline. Starling-7B-alpha scores 8.09 in MT Bench with GPT-4 as a judge, outperforming every model to date on MT-Bench except for OpenAI’s GPT-4 and GPT-4 Turbo. We release the ranking dataset Nectar, the reward model Starling-RM-7B-alpha and the language model Starling-LM-7B-alpha on HuggingFace, and an online demo in LMSYS Chatbot Arena. Stay tuned for our forthcoming code and paper, which will provide more details on the whole process.",,Open weights (non-commercial),,Confident,2024-12-02 17:34:27+00:00,United States of America,OpenChat 3.5-7B,,The model is trained on 8 A100 GPUs with batch size 28 and 10k steps in total.,,,,,,
Stable Video Diffusion,"Image generation,Video",Stability AI,Industry,"Andreas Blattmann, Tim Dockhorn, Sumith Kulal, Daniel Mendelevitch, Maciej Kilian, Dominik Lorenz, Yam Levi, Zion English, Vikram Voleti, Adam Letts, Varun Jampani, Robin Rombach",2023-11-25,Stable Video Diffusion: Scaling Latent Video Diffusion Models to Large Datasets,https://arxiv.org/abs/2311.15127,,,,,,6.7392e+22,,,200000*3600*312000000000000*0.3 = 6.7392e+22,,,,,,,"""Training the SVD checkpoints required a total of approximately 200,000 A100 80GB hours. The majority of the training occurred on 48 * 8 A100s, while some stages took more/less than that. The resulting CO2 emission is ~19,000kg CO2 eq., and energy consumed is ~64000 kWh. """,NVIDIA A100 SXM4 80 GB,384.0,,"We present Stable Video Diffusion - a latent video diffusion model for high-resolution, state-of-the-art text-to-video and image-to-video generation. Recently, latent diffusion models trained for 2D image synthesis have been turned into generative video models by inserting temporal layers and finetuning them on small, high-quality video datasets. However, training methods in the literature vary widely, and the field has yet to agree on a unified strategy for curating video data. In this paper, we identify and evaluate three different stages for successful training of video LDMs: text-to-image pretraining, video pretraining, and high-quality video finetuning. Furthermore, we demonstrate the necessity of a well-curated pretraining dataset for generating high-quality videos and present a systematic curation process to train a strong base model, including captioning and filtering strategies. We then explore the impact of finetuning our base model on high-quality data and train a text-to-video model that is competitive with closed-source video generation. We also show that our base model provides a powerful motion representation for downstream tasks such as image-to-video generation and adaptability to camera motion-specific LoRA modules. Finally, we demonstrate that our model provides a strong multi-view 3D-prior and can serve as a base to finetune a multi-view diffusion model that jointly generates multiple views of objects in a feedforward fashion, outperforming image-based methods at a fraction of their compute budget. We release code and model weights at this https URL .",,Open weights (non-commercial),,Confident,2024-10-26 17:09:38+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Belle VL,"Language,Vision,Multimodal",KE Holdings Inc. (“Beike”),Industry,,2023-11-24,,https://huggingface.co/BELLE-2/BELLE-VL,,,,14000000000.0,I assume the same as Qwen 14B,,,,,"Flickr30K Entities,LLaVAR,LLaVA-Pretrain-595k,LRV-Instruction,LVIS-Instruct4V","""Pre-training data: Pre-training data is mainly based on LLava558kEnglish instruction data and its corresponding Chinese translation data, in addition we also collectedFlickr30k-CNA And fromAI ChallengerRandomly selected 100k data

Multi-mode instruction data: In the fine-tuning stage of the instruction, the data mainly comes fromLLava, LRV-Instruction, LLaVAR,LVIS-INSTRUCT4VWaiting for the open source project, we have also translated some of the data, and sincerely thank them for their contributions to the open source!""",,,,,,,,,"Open source BELLE-VL A multi-modular large-language model, based on a more capable language model base to expand the visual capabilities of the model, providing a more flexible choice for the community (currently the latest BELLE-VL model is in MME Perception assessment dimensions are obtained together 1620.10 (Over Qwen-VL, Llava, mplug-owl)",,Open weights (unrestricted),,Confident,2024-11-06 17:57:17+00:00,China,Qwen-14B,,,,,,,,
TAIWAN-LLM 13B,Language,National Taiwan University,Academia,"Yen-Ting Lin, Yun-Nung Chen",2023-11-23,"""TAIWAN-LLM: Bridging the Linguistic Divide with
a Culturally Aligned Language Model""",https://arxiv.org/pdf/2311.17487,23.0,,,13000000000.0,,,,,,,,35100000000.0,,,,,NVIDIA H100 SXM5 80GB,48.0,,,,,,Unverified,2025-01-24 14:02:53+00:00,Taiwan,Llama 2-13B,,,,,,,,
TAIWAN-LLM 7B,Language,National Taiwan University,Academia,"Yen-Ting Lin, Yun-Nung Chen",2023-11-23,"""TAIWAN-LLM: Bridging the Linguistic Divide with
a Culturally Aligned Language Model""",https://arxiv.org/pdf/2311.17487,23.0,,,7000000000.0,,,,,,,,35100000000.0,,,,,NVIDIA H100 SXM5 80GB,48.0,,,,,,Unverified,2025-01-24 14:03:23+00:00,Taiwan,Llama 2-7B,,,,,,,,
Inflection-2,Language,Inflection AI,Industry,,2023-11-22,Inflection-2: The Next Step Up,https://inflection.ai/inflection-2,,"Significant use,Training cost","Inflection-2 either already powers Pi or soon will: https://inflection.ai/inflection-2

Inflection has claimed that Pi has >1m users: https://x.com/inflectionAI/status/1699100179390210091?s=20",,,1.001e+25,,,"""Inflection-2 was trained on 5,000 NVIDIA H100 GPUs in fp8 mixed precision for ~10²⁵ FLOPs""

(the second 1 is there because of airtable being wonky, it's not a real sig fig)",Unspecified unreleased,,,,,,,NVIDIA H100 SXM5 80GB,5000.0,,"Today we are proud to announce that we have completed training of Inflection-2, the best model in the world for its compute class and the second most capable LLM in the world today. Our mission at Inflection is to create a personal AI for everyone. Just a few months ago, we announced Inflection-1 — a best-in-class language model that currently powers Pi. Our new model, Inflection-2, is substantially more capable than Inflection-1, demonstrating much improved factual knowledge, better stylistic control, and dramatically improved reasoning.",,Hosted access (no API),,Confident,2025-02-11 22:15:28+00:00,United States of America,,,,,,,,,True
Claude 2.1,Language,Anthropic,Industry,,2023-11-21,Introducing Claude 2.1,https://www.anthropic.com/index/claude-2-1,,Significant use,,,,,,,,Unspecified unreleased,,,,,,,,,Reinforcement learning,"Our latest model, Claude 2.1, is now available over API in our Console and is powering our claude.ai chat experience. Claude 2.1 delivers advancements in key capabilities for enterprises—including an industry-leading 200K token context window, significant reductions in rates of model hallucination, system prompts and our new beta feature: tool use.",,API access,,Unknown,2025-01-10 16:31:02+00:00,United States of America,Claude 2,,,,,,,,True
Orca 2-13B,Language,Microsoft Research,Industry,"Arindam Mitra, Luciano Del Corro, Shweti Mahajan, Andres Codas, Clarisse Simoes, Sahaj Agarwal, Xuxi Chen, Anastasia Razdaibiedina, Erik Jones, Kriti Aggarwal, Hamid Palangi, Guoqing Zheng, Corby Rosset, Hamed Khanpour, Ahmed Awadallah",2023-11-21,Orca 2: Teaching Small Language Models How to Reason,"https://arxiv.org/abs/2311.11045, https://huggingface.co/microsoft/Orca-2-13b",99.0,,"""Orca 2 significantly surpasses models of similar size and attains performance levels similar or better
to those of models 5-10x larger, as assessed on complex tasks that test advanced reasoning
abilities in zero-shot settings""",13000000000.0,based on Llama 13B,4.6e+22,,,4.55e22 base compute from Llama-13 + 8.6e20 finetune compute ~= 4.6e22 ,"Flan,Orca 2 Dataset","""For Orca 2, we created a new dataset with ~817K training instances, which we will refer as Orca 2 dataset. Following Orca 1, Orca 2 has been trained with progressive learning, with subsets of data obtained from combining the original FLAN [33] annotations, Orca 1 dataset and the Orca 2 dataset. We also describe the details about the progressive learning.""",800000000.0,"817k training instances, ~1000 tokens per instance. See finetune notes",,80.0,"17+40+23 hours

""We trained Orca 2 on 32 NVIDIA A100 GPUs with 80GB memory with bfloat16.
For the 13B checkpoint, it took ~17 hours to train Orca 2 on FLAN dataset for one epoch,
~40 hours to train on 5 million ChatGPT data for 3 epochs and ~23 hours to continue
training on ~1.8 million GPT-4 data for 4 epochs""",NVIDIA A100 SXM4 80 GB,,,"Orca 1 learns from rich signals, such as explanation traces, allowing it to outperform conventional instruction-tuned models on benchmarks like BigBench Hard and AGIEval. In Orca 2, we continue exploring how improved training signals can enhance smaller LMs' reasoning abilities. Research on training small LMs has often relied on imitation learning to replicate the output of more capable models. We contend that excessive emphasis on imitation may restrict the potential of smaller models. We seek to teach small LMs to employ different solution strategies for different tasks, potentially different from the one used by the larger model. For example, while larger models might provide a direct answer to a complex task, smaller models may not have the same capacity. In Orca 2, we teach the model various reasoning techniques (step-by-step, recall then generate, recall-reason-generate, direct answer, etc.). More crucially, we aim to help the model learn to determine the most effective solution strategy for each task. We evaluate Orca 2 using a comprehensive set of 15 diverse benchmarks (corresponding to approximately 100 tasks and over 36,000 unique prompts). Orca 2 significantly surpasses models of similar size and attains performance levels similar or better to those of models 5-10x larger, as assessed on complex tasks that test advanced reasoning abilities in zero-shot settings. make Orca 2 weights publicly available at this http URL to support research on the development, evaluation, and alignment of smaller LMs",,Open weights (non-commercial),,Confident,2025-02-14 20:52:41+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",LLaMA-13B,8.6e+20,"""We trained Orca 2 on 32 NVIDIA A100 GPUs with 80GB memory with bfloat16.
For the 13B checkpoint, it took ~17 hours to train Orca 2 on FLAN dataset for one epoch, ~40 hours to train on 5 million ChatGPT data for 3 epochs and ~23 hours to continue training on ~1.8 million GPT-4 data for 4 epochs""

32 * (17+40+23) * 3600 * 312 trillion flop/s * 0.3 utilization = 8.6e20

(each 10 hours is ~1e20 flop, so the 5 million ChatGPT data took 4e20 FLOP. 4e20 / 5 million / 13 billion / 6 = 1025, so ~1000 tokens in each example)",,,,,,
Tulu V2 DPO 70B,Language,"Allen Institute for AI,University of Washington","Research collective,Academia","Hamish Ivison, Yizhong Wang, Valentina Pyatkin, Nathan Lambert, Matthew Peters, Pradeep Dasigi, Joel Jang, David Wadden, Noah A. Smith, Iz Beltagy, Hannaneh Hajishirzi",2023-11-20,Camels in a Changing Climate: Enhancing LM Adaptation with Tulu 2,https://arxiv.org/abs/2311.10702,,,,70000000000.0,70B,,,,,TÜLU-V2-mix,,150000000.0,"""After filtering, the V2 mixture consists of 326,154 samples""
""The mean length of a sample is 1097 tokens""

-> total ~ 357 790 938 tokens

from figure 1 (more accurate):

(1500*10^4.2)+(2500*10^4)+(3500*10^4.2)+(4500*10^4)+(5500*100)  = 149 795 000 tokens
",3.0,168.0,"""The 70B variant of TÜLU V2-DPO was trained on a 512-core TPUv3, completing three epochs in approximately 7 days.""

""All models except QLoRA models were trained on a 256-chip (512-chip for 70B DPO training) TPU v3 pod.""",Google TPU v3,512.0,,"Since the release of TÜLU [Wang et al., 2023b], open resources for instruction tuning have developed quickly, from better base models to new finetuning techniques. We test and incorporate a number of these advances into TÜLU, resulting in TÜLU 2, a suite of improved TÜLU models for advancing the understanding and best practices of adapting pretrained language models to downstream tasks and user preferences. Concretely, we release: (1) TÜLU-V2-mix, an improved collection of high-quality instruction datasets; (2) TÜLU 2, LLAMA-2 models finetuned on the V2 mixture; (3) TÜLU 2+DPO, TÜLU 2 models trained with direct preference optimization (DPO), including the largest DPO-trained model to date (TÜLU 2+DPO 70B); (4) CODE TÜLU 2, CODE LLAMA models finetuned on our V2 mix that outperform CODE LLAMA and its instruction-tuned variant, CODE LLAMA-Instruct. Our evaluation from multiple perspectives shows that the TÜLU 2 suite achieves state-of-the-art performance among open models and matches or exceeds the performance of GPT-3.5-turbo-0301 on several benchmarks. We release all the checkpoints, data, training and evaluation code to facilitate future open efforts on adapting large language models.",,Open weights (restricted use),,Likely,2024-12-02 15:22:11+00:00,"United States of America,United States of America",Llama 2-70B,5.7131825e+21,"123000000000000*512*168*3600*0.3*(1 chip / 2 cores)= 5.7131825e+21

6*70*10^9*150000000*3 = 1.89e+20

not sure why here is such a big difference",Google Cloud,,,,,
Lyria,Audio,Google DeepMind,Industry,"Kazuya Kawakami, David Ding, Björn Winckler, Cătălina Cangea, Tobenna Peter Igwe, Will Grathwohl, Yan Wu, Yury Sulsky, Jacob Kelly, Charlie Nash, Conor Durkan, Yaroslav Ganin, Tom Eccles, Zach Eaton-Rosen, Jakob Bauer, Mikita Sazanovich, Morgane Rivière, Evgeny Gladchenko, Mikołaj Bińkowski, Ali Razavi, Jeff Donahue, Benigno Uria, Sander Dieleman, Sherjil Ozair, John Schultz, Ankush Gupta, Junlin Zhang, Drew Jaegle, Aäron van den Oord.",2023-11-16,Transforming the future of music creation,https://deepmind.google/discover/blog/transforming-the-future-of-music-creation/,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Music contains huge amounts of information — consider every beat, note, and vocal harmony in every second. When generating long sequences of sound, it’s difficult for AI models to maintain musical continuity across phrases, verses, or extended passages. Since music often includes multiple voices and instruments at the same time, it's much harder to create than speech.

Built by Google DeepMind, the Lyria model excels at generating high-quality music with instrumentals and vocals, performing transformation and continuation tasks, and giving users more nuanced control of the output’s style and performance.",,,,Unknown,2024-09-05 18:08:31+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,True
Mistral 7B + OVM,Language,Chinese University of Hong Kong (CUHK),Academia,"Fei Yu, Anningzhe Gao, Benyou Wang",2023-11-16,Outcome-supervised Verifiers for Planning in Mathematical Reasoning,https://arxiv.org/abs/2311.09724,21.0,,"""Notably, in GSM8K, our OVM-7B model achieves state-of-the-art
results among LLMs up to 13B parameters;
especially it does not utilize GPT-4 or code
execution""",7000000000.0,"7B, based on Mistral 7B",,,,"Fine tuning likely small fraction of pretraining. E.g. Game of 24 has 90k solution paths, if average path is 1024 tokens and they do 10 epochs that is 
6 * 90k * 1024 * 10 * 7B = 3.9e19 FLOP. 
We don't have exact flops for Mistral 7B but compare at 8.4e22 FLOP for Llama 2-7B",,"They generated a synthetic dataset using fine-tuned Mistral 7B, which they then use to further train the model:

""OVMs were initialized from the corresponding generator checkpoints. We sampled 100 solution paths for each question from the respective generator (resulting in 747,300 for GSM8K and 90,000 for Game of
24), with a temperature setting of 0.7. In GSM8K, OVM was trained for 1 epoch with a batch size of 512. In Game of 24, OVM is trained for 10 epochs
with a batch size of 128, due to its smaller training set. ",837300.0,"""This allows us to produce numerous OVM training samples using just question-answer pairs, without path annotations, resulting in 747,300 training samples for GSM8K and 90,000 for Game of 24.""

747300+90000=837300 training samples",,,,,,,"Large language models (LLMs) often struggle with maintaining accuracy across a sequence of intermediate reasoning steps in mathematical reasoning, leading to error propagation that undermines the final result. The current methodology to mitigate this issue primarily involves using a verifier model to assess the correctness of generated solution candidates, focusing either on the overall reasoning path or on an incomplete reasoning path. By rethinking this approach, we argue that assessing potentials of incomplete reasoning paths could be more advantageous as it guides towards correct final answers, transforming the task into a \textit{planning} problem. Our proposed verifier, the Outcome-supervision Value Model (OVM), employs outcome supervision for training, offering an efficient and intuitive method for \textit{planning} by prioritizing steps that lead to accurate conclusions over mere per-step correctness. Furthermore, the OVM eschews the need for labor-intensive annotations on step-level correctness, enhancing its scalability. Our experiments on two multi-step mathematical reasoning datasets, GSM8K and Game of 24, demonstrate the superior performance of the OVM model. Notably, in GSM8K, our \textbf{OVM-7B model achieves state-of-the-art results among LLMs up to 13B parameters}; especially it does not utilize GPT-4 or code execution. These findings offer a novel perspective on the role of outcome supervision in training verifiers for multi-step reasoning tasks and provide theoretical justification for its advantage in value estimation for planning.",,Open weights (non-commercial),,Confident,2024-11-01 14:05:35+00:00,"Hong Kong,China",Mistral 7B,,,,,,,,
AndesGPT,Language,Oppo Mobile Telecommunications,Industry,,2023-11-16,,https://www.oppo.com/en/newsroom/press/2023-oppo-developers-conference-odc23/,,SOTA improvement,Highest score at SuperCLUE Safety benchmark. https://www.superclueai.com/,,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 13:56:41+00:00,China,,,,,,,,,
Nemotron-3-8B,Language,NVIDIA,Industry,,2023-11-15,NVIDIA AI Foundation Models: Build Custom Enterprise Chatbots and Co-Pilots with Production-Ready LLMs,"https://developer.nvidia.com/blog/nvidia-ai-foundation-models-build-custom-enterprise-chatbots-and-co-pilots-with-production-ready-llms/

https://catalog.ngc.nvidia.com/orgs/nvidia/teams/nemo/models/nemotron-3-8b-base-4k",,SOTA improvement,"""The Nemotron-3-8B-QA model offers state-of-the-art performance, achieving a zero-shot F1 score of 41.99% on the Natural Questions dataset. This metric measures how closely the generated answer resembles the truth in ‌QA. """,8000000000.0,,1.8e+23,,,"https://huggingface.co/nvidia/nemotron-3-8b-base-4k

""This model was trained on a dataset containing 3.8 Trillion tokens of text""

8 billion * 3.8 trillion * 6 = 1.8e23

Also, using the hardware method: ""1,024 A100s were used for 19 days to train the model.""

19*1024 * 312 trillion * 24 * 3600 * 0.3 = 1.57e23","Unspecified unreleased,Flan,P3 (Public Pool of Prompts)","""NVIDIA models are trained on a diverse set of public and proprietary datasets. This model was trained on a dataset containing 3.8 Trillion tokens of text. The dataset contains 53 different human languages (including English, German, Russian, Spanish, French, Japanese, Chinese, Italian, and Dutch) and 37 programming languages. The model also uses the training subsets of downstream academic benchmarks from sources like FLANv2, P3, and NaturalInstructions v2""",3800000000000.0,,,456.0,19 days,NVIDIA A100,1024.0,,"Large language models (LLMs) are revolutionizing data science, enabling advanced capabilities in natural language understanding, AI, and machine learning. Custom LLMs, tailored for domain-specific insights, are finding increased traction in enterprise applications.

The NVIDIA Nemotron-3 8B family of foundation models is a powerful new tool for building production-ready generative AI applications for the enterprise–fostering innovations ranging from customer service AI chatbots to cutting-edge AI products.",,Open weights (restricted use),0.3473,Confident,2024-11-16 00:02:12+00:00,United States of America,,,,,,,,,
Mi:dm 7B,Language,KT,Industry,,2023-11-15,"Mi:dm: KT Bilingual (Korean,English) Generative Pre-trained Transformer",https://huggingface.co/KT-AI/midm-bitext-S-7B-inst-v1,,,,7000000000.0,7B,,,,,"AI-HUB,National Institute of Korean Language Corpus","The Mi:dm-bitext-S model was pre-trained using Korean/English publicly available data. For fine-tuning, we used also publicly available data and went through some processing or refining. KT collected public data directly or obtained it under legal permission conditions. The korean corpus data from AI-HUB (https://www.aihub.or.kr/) and the National Institute of Korean Language (https://corpus.korean.go.kr/) were used in the pre-training stage.

We did not use any customer data held by KT.",,,,,,,,,,,Open weights (non-commercial),,Unverified,2024-09-16 17:31:10+00:00,Korea (Republic of),,,,,,,,,
GraphCast,Earth science,Google DeepMind,Industry,"Remi Lam, Alvaro Sanchez-Gonzalez, Matthew Willson, Peter Wirnsberger, Meire Fortunato, Ferran Alet, Suman Ravuri, Timo Ewalds, Zach Eaton-Rosen, Weihua Hu, Alexander Merose, Stephan Hoyer, George Holland, Oriol Vinyals, Jacklynn Stott, Alexander Pritzel, Shakir Mohamed, Peter Battaglia",2023-11-14,Learning skillful medium-range globalweather forecasting,https://www.science.org/doi/epdf/10.1126/science.adi2336,,SOTA improvement,"""Our state-of-the-art model delivers 10-day weather predictions at unprecedented accuracy in under one minute""",,Not mentioned in paper.,2.1e+22,,,"""Training GraphCast took roughly four weeks on 32 Cloud TPU v4 devices using batch parallelism.""

4.6: ""we use bfloat16 floating point precision""

2.1e22 = 2.75E+14 FLOP/s * 32 * 60* 60 * 24 * 7 * 4",,"According to the blog post, ""we trained GraphCast on four decades of weather reanalysis data, from the ECMWF’s ERA5 dataset. This trove is based on historical weather observations such as satellite images, radar, and weather stations using a traditional NWP to ‘fill in the blanks’ where the observations are incomplete, to reconstruct a rich record of global historical weather.""
https://deepmind.google/discover/blog/graphcast-ai-model-for-faster-and-more-accurate-global-weather-forecasting/",,,,,,,,,"Global medium-range weather forecasting is critical to decision-making across many social and economic domains. Traditional numerical weather prediction uses increased compute resources to improve forecast accuracy but does not directly use historical weather data to improve the underlying model. Here, we introduce GraphCast, a machine learning–based method trained directly from reanalysis data. It predicts hundreds of weather variables for the next 10 days at 0.25° resolution globally in under 1 minute. GraphCast significantly outperforms the most accurate operational deterministic systems on 90% of 1380 verification targets, and its forecasts support better severe event prediction, including tropical cyclone tracking, atmospheric rivers, and extreme temperatures. GraphCast is a key advance in accurate and efficient weather forecasting and helps realize the promise of machine learning for modeling complex dynamical systems.",,Open weights (unrestricted),,Speculative,2024-11-27 14:22:54+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Qwen-Audio-Chat,"Language,Speech,Audio",Alibaba,Industry,"Yunfei Chu, Jin Xu, Xiaohuan Zhou, Qian Yang, Shiliang Zhang, Zhijie Yan, Chang Zhou, Jingren Zhou",2023-11-14,Qwen-Audio: Advancing Universal Audio Understanding via Unified Large-Scale Audio-Language Models,https://arxiv.org/abs/2311.07919,144.0,SOTA improvement,"""A notable achievement of Qwen-Audio is its state-of-the-art performance on the test set of Aishell1, cochlscene, ClothoAQA, and VocalSound""",8460000000.0,"the model has two components - audio and language.
670M + 7.7B = 8.46B
""The audio encoder is composed of 640M parameters""

""Qwen-Audio incorporates a large language model as its foundational component.
The model is initialized using pre-trained weights derived from Qwen-7B (Bai et al., 2023a). Qwen-7B is a 32-layer Transformer decoder model with a hidden size of 4096, encompassing a total of 7.7B parameters.""",,,,,,multiple audio and language sources,,not clear,,,,,,," Recently, instruction-following audio-language models have received broad attention for audio interaction with humans. However, the absence of pre-trained audio models capable of handling diverse audio types and tasks has hindered progress in this field. Consequently, most existing works have only been able to support a limited range of interaction capabilities. In this paper, we develop the Qwen-Audio model and address this limitation by scaling up audio-language pre-training to cover over 30 tasks and various audio types, such as human speech, natural sounds, music, and songs, to facilitate universal audio understanding abilities. However, directly co-training all tasks and datasets can lead to interference issues, as the textual labels associated with different datasets exhibit considerable variations due to differences in task focus, language, granularity of annotation, and text structure. To overcome the one-to-many interference, we carefully design a multi-task training framework by conditioning on a sequence of hierarchical tags to the decoder for encouraging knowledge sharing and avoiding interference through shared and specified tags respectively. Remarkably, Qwen-Audio achieves impressive performance across diverse benchmark tasks without requiring any task-specific fine-tuning, surpassing its counterparts. Building upon the capabilities of Qwen-Audio, we further develop Qwen-Audio-Chat, which allows for input from various audios and text inputs, enabling multi-turn dialogues and supporting various audio-central scenarios. ",,Open weights (restricted use),,Likely,2024-11-01 14:05:35+00:00,China,,,,,,,,,
SPHINX (Llama 2 13B),"Vision,Language,Multimodal","Shanghai AI Lab,Chinese University of Hong Kong (CUHK),ShanghaiTech University","Academia,Academia,Academia","Ziyi Lin, Chris Liu, Renrui Zhang, Peng Gao, Longtian Qiu, Han Xiao, Han Qiu, Chen Lin, Wenqi Shao, Keqin Chen, Jiaming Han, Siyuan Huang, Yichi Zhang, Xuming He, Hongsheng Li, Yu Qiao",2023-11-13,"SPHINX: The Joint Mixing of Weights, Tasks, and Visual Embeddings for Multi-modal Large Language Models",https://arxiv.org/abs/2311.07575,,SOTA improvement,"""as shown in Figure 2, SPHINX can achieve impressive fine-grained visual perception for high-resolution images, which exhibits state-of-the-art performance on extensive evaluation benchmarks, e.g., MMBench (Liu et al., 2023f), MME (Fu et al., 2023a), and POPE (Li et al., 2023e).""",19900000000.0,"SPHINX + Llama 2 13B
SPHINX component involves four vision encoders:
- CLIP - ViT
- CLIP - ConvNeXt V2 (89M to 659M params, depending on size)
- DinoV2 - ViT (22M to 1.14B params, depending on size)
- Q-former (188M params)
Also involves to projection networks

Huggingface Hub model files appear to be 39.8GB. Assuming models are stored in fp16 there are 2 bytes per parameter, so 39.8 / 2 = 19.9B parameters.",3.04e+22,,,"""The pre-training time is around 125 hours on 32 A100 GPUs with a 7B
language model and about twice the time with a 13B language model... The fine-tuning takes about 38 hours with 16 A100 GPUs with a 13B
language model.""

((125*2 * 32) + (38 * 16)) * 3.12e14 * 3600 * 0.3 = 2.9e21

Component vision encoders were initialized from pre-trained:
- CLIP ViT: 1.5e22 FLOPs for L/14@336
- ConvNeXt V2: 6.8e21 FLOPs for largest
- DinoV2: 7.42e+21 FLOPs for largest
- Q-former: 1.2e21 FLOPs for largest

(Based on full parameter count, SPHINX probably uses largest models)

Sum: 3.04e22 FLOPs","LAION-400M,LAION-COCO,RefinedWeb","""We use two image captioning datasets LAION-400M (Schuhmann et al.,
2021) and LAION-COCO (Schuhmann et al., 2022) for multi-modal alignment. As we full-finetune the language model backbone for long steps, we also jointly train with a text-only dataset RefinedWeb (Penedo et al., 2023) to avoid harming its text reasoning capability due to catastrophic forgetting.""",,""" For the joint training on both images and texts, we form each
batch with 640 image-text pairs from LAION-400M or LAION-COCO and 65, 536 text tokens from RefinedWeb""

As per Figure 7 there was 20000 training steps",,290.0,"""The pre-training time is around 125 hours on 32 A100 GPUs with a 7B
language model and about twice the time with a 13B language model.""
"" The fine-tuning takes about 38 hours with 16 A100 GPUs with a 13B
language model.""",NVIDIA A100 SXM4 40 GB,32.0,,"We present SPHINX, a versatile multi-modal large language model (MLLM) with a joint mixing of model weights, tuning tasks, and visual embeddings. First, for stronger vision-language alignment, we unfreeze the large language model (LLM) during pre-training, and introduce a weight mix strategy between LLMs trained by real-world and synthetic data. By directly integrating the weights from two domains, the mixed LLM can efficiently incorporate diverse semantics with favorable robustness. Then, to enable multi-purpose capabilities, we mix a variety of tasks for joint visual instruction tuning, and design task-specific instructions to avoid inter-task conflict. In addition to the basic visual question answering, we include more challenging tasks such as region-level understanding, caption grounding, document layout detection, and human pose estimation, contributing to mutual enhancement over different scenarios. Additionally, we propose to extract comprehensive visual embeddings from various network architectures, pre-training paradigms, and information granularity, providing language models with more robust image representations. Based on our proposed joint mixing, SPHINX exhibits superior multi-modal understanding capabilities on a wide range of applications. On top of this, we further propose an efficient strategy aiming to better capture fine-grained appearances of high-resolution images. With a mixing of different scales and high-resolution sub-images, SPHINX attains exceptional visual parsing and reasoning performance on existing evaluation benchmarks. We hope our work may cast a light on the exploration of joint mixing in future MLLM research.",,Open weights (restricted use),,Likely,2025-01-03 19:33:11+00:00,"China,Hong Kong,China,China",Llama 2-13B,4.00000000001e+21,"32 A100 * 312 TFLOPS/A100 * 290 hours * 40% utilization ~= 4e21 FLOP
https://www.wolframalpha.com/input?i=250+hours+*+312+TFLOPS+*+32+*+0.4",,,,,,
Volcano 13B,"Language,Multimodal,Vision","Korea University,Korea Advanced Institute of Science and Technology (KAIST),LG","Academia,Academia,Industry","Seongyun Lee, Sue Hyun Park, Yongrae Jo, Minjoon Seo",2023-11-13,Volcano: Mitigating Multimodal Hallucination through Self-Feedback Guided Revision,https://arxiv.org/abs/2311.07362,28.0,SOTA improvement,"""Volcano effectively reduces multimodal hallucination and achieves state-of-the-art on MMHal-Bench, POPE, and GAVIE"" (hallucination benchmarks)",13000000000.0,13B,4.56e+22,,,"Base model is LLaVa-1.5 13B, which used 4.55e22 FLOP (mostly coming from Llama base)

""For this research, we used an NVIDIA A100-SXM4-80GB GPU and an AMD EPYC 7513 32-Core Processor running at 2.0778 GHz. Training
VOLCANO 7B required 8 GPUs and took a total of 15 hours, while training VOLCANO 13B took 30 hours.""
3.12e14 * 8 * 30 * 3600 * 0.3 = 8.1e19 finetune compute","LAION,SBU,ShareGPT4V,Unspecified unreleased","trained on synthetic data: ""To train VOLCANO, we collect initial responses for visual questions from an open-source LMM and
generate feedback and revisions using a proprietary
LLM as shown in Figure 3 (Akyürek et al., 2023;
Madaan et al., 2023; Ye et al., 2023b; Wang et al.,
2023d; Kim et al., 2023).""

https://huggingface.co/datasets/kaist-ai/volcano-train",,"https://huggingface.co/datasets/kaist-ai/volcano-train

558k image-text pairs, rest of dataset is ~1M examples of text data; length per sequence is not clear",1.0,30.0,,NVIDIA A100 SXM4 80 GB,,,"Large multimodal models (LMMs) suffer from multimodal hallucination, where they provide incorrect responses misaligned with the given visual information. Recent works have conjectured that one of the reasons behind multimodal hallucination might be due to the vision encoder failing to ground on the image properly. To mitigate this issue, we propose a novel approach that leverages self-feedback as visual cues. Building on this approach, we introduce Volcano, a multimodal self-feedback guided revision model. Volcano generates natural language feedback to its initial response based on the provided visual information and utilizes this feedback to self-revise its initial response. Volcano effectively reduces multimodal hallucination and achieves state-of-the-art on MMHal-Bench, POPE, and GAVIE. It also improves on general multimodal abilities and outperforms previous models on MM-Vet and MMBench. Through a qualitative analysis, we show that Volcano's feedback is properly grounded on the image than the initial response. This indicates that Volcano can provide itself with richer visual information, helping alleviate multimodal hallucination. We publicly release Volcano models of 7B and 13B sizes along with the data and code at this https URL.",,Open weights (non-commercial),,Likely,2025-02-14 20:53:02+00:00,"Korea (Republic of),Korea (Republic of),Korea (Republic of)",LLaVA 1.5,8.1e+19,"""For this research, we used an NVIDIA A100- SXM4-80GB GPU and an AMD EPYC 7513 32-Core Processor running at 2.0778 GHz. Training VOLCANO 7B required 8 GPUs and took a total of 15 hours, while training VOLCANO 13B took 30 hours""

= 8 * 312 teraflops * 30 * 3600 * 0.4 utilization (assumed)
= 8.1e19
",,,,128.0,,
LLaVA + LVIS-INSTRUCT4V,"Multimodal,Language,Vision","Fudan University,University of Maryland","Academia,Academia","Junke Wang, Lingchen Meng, Zejia Weng, Bo He, Zuxuan Wu, Yu-Gang Jiang",2023-11-13,To See is to Believe: Prompting GPT-4V for Better Visual Instruction Tuning,https://arxiv.org/abs/2311.07574,66.0,,"""Notably, by simply replacing the LLaVA-Instruct with our LVISINSTRUCT4V, we achieve better results than LLaVA on most challenging LMM
benchmarks, e.g., LLaVAw (76.7 vs. 70.7) and MM-Vet (40.2 vs. 35.4).""",13000000000.0,,,,,,LVIS-Instruct4V,"""To address this challenge, we introduce a fine-grained visual instruction dataset, LVIS-INSTRUCT4V, which contains 220K visually aligned and context-aware instructions produced by prompting the powerful GPT-4V with images from LVIS.""",,"""To the end, we use 110K images from LVIS and generate 220K high-quality visual instructions"" provided examples are roughly 30-60 words each",1.0,,,,,,"Existing visual instruction tuning methods typically prompt large language models with textual descriptions to generate instruction-following data. Despite the promising performance achieved, these descriptions are derived from image annotations, which are oftentimes coarse-grained. Furthermore, the instructions might even contradict the visual content without observing the entire visual context. To address this challenge, we introduce a fine-grained visual instruction dataset, LVIS-Instruct4V, which contains 220K visually aligned and context-aware instructions produced by prompting the powerful GPT-4V with images from LVIS. Through experimental validation and case studies, we demonstrate that high-quality visual instructional data could improve the performance of LLaVA-1.5, a state-of-the-art large multimodal model, across a wide spectrum of benchmarks by clear margins. Notably, by simply replacing the LLaVA-Instruct with our LVIS-Instruct4V, we achieve better results than LLaVA on most challenging LMM benchmarks, e.g., LLaVAw (76.7 vs. 70.7) and MM-Vet (40.2 vs. 35.4). We release our data and model at this https URL.",,Open weights (unrestricted),,Likely,2024-11-01 14:05:36+00:00,"China,United States of America",LLaVA 1.5,,,,,,,,
MultiBand Diffusion,"Audio,Speech","Meta AI,Hebrew University of Jerusalem,LORIA","Industry,Academia,Academia","Robin San Roman, Yossi Adi, Antoine Deleforge, Romain Serizel, Gabriel Synnaeve, Alexandre Défossez",2023-11-08,From Discrete Tokens to High-Fidelity Audio Using Multi-Band Diffusion,https://arxiv.org/abs/2308.02560,13.0,SOTA improvement,"""At equal bit rate, the proposed approach outperforms state-of-the-art generative techniques in terms of perceptual quality""",,,2.6e+19,,,"""It takes around 2 days on 4 Nvidia V100 with 16 GB to train one of the 4 models.""

125 tflop/s for V100 SXM (not clear which they used, could be PCI given small number - still same OOM thus confident)
4 * 125 trillion * 2 * 24 * 3600 * 0.3 = 2.6e19","Common Voice,DNS,MTG-Jamendo,FSD50K,AudioSet","""We train on a diverse set of domains and data. We use speech from the train set of Common Voice 7.0 (9096 hours) [Ardila et al., 2019] together with the DNS challenge 4 (2425 hours) [Dubey et al., 2022]. For music, we use the MTG-Jamendo dataset (919h) [Bogdanov et al., 2019]. For the environmental
sound we use FSD50K (108 hours) [Fonseca et al., 2021] and AudioSet (4989 hours) [Gemmeke et al., 2017]. We used AudioSet only for the research that is described in the publication and for the benefit of replicability. For evaluation, we also use samples from an internal music dataset.""",,9096+2425+919+108+4989=17537 hours,,48.0,around 2 days,NVIDIA V100,,,"Deep generative models can generate high-fidelity audio conditioned on various types of representations (e.g., mel-spectrograms, Mel-frequency Cepstral Coefficients (MFCC)). Recently, such models have been used to synthesize audio waveforms conditioned on highly compressed representations. Although such methods produce impressive results, they are prone to generate audible artifacts when the conditioning is flawed or imperfect. An alternative modeling approach is to use diffusion models. However, these have mainly been used as speech vocoders (i.e., conditioned on mel-spectrograms) or generating relatively low sampling rate signals. In this work, we propose a high-fidelity multi-band diffusion-based framework that generates any type of audio modality (e.g., speech, music, environmental sounds) from low-bitrate discrete representations. At equal bit rate, the proposed approach outperforms state-of-the-art generative techniques in terms of perceptual quality. Training and, evaluation code, along with audio samples, are available on the facebookresearch/audiocraft Github page.",,Open weights (unrestricted),,Confident,2025-02-14 20:53:08+00:00,"United States of America,Israel,France",,,,,,,,,
Samsung Gauss Language,Language,Samsung,Industry,,2023-11-08,,https://techcrunch.com/2023/11/08/samsung-unveils-chatgpt-alternative-samsung-gauss-that-can-generate-text-code-and-images/,,,"To be deployed in Samsung devices: ""Samsung plans to incorporate the large language model into its devices like phones, laptops and tablets""",,,,,,,,,,,,,,,,,"Just a few days after OpenAI’s developer event, Samsung unveiled its own generative AI model, Samsung Gauss, at the Samsung AI Forum 2023.

Samsung Gauss, developed by the tech giant’s research unit Samsung Research, consists of three tools: Samsung Gauss Language, Samsung Gauss Code and Samsung Gauss Image.

Samsung Gauss Language is a large language model that can understand human language and answer questions like ChatGPT. It can be used to increase productivity in several ways. For instance, it can help you write and edit emails, summarize documents and translate languages. Samsung plans to incorporate the large language model into its devices like phones, laptops and tablets to make the company’s smart devices a bit smarter. When asked if it supports both English and Korean as interaction languages, a spokesperson of Samsung declined to comment on it.",,,,Unknown,2024-09-05 18:08:31+00:00,Korea (Republic of),,,,,,,,,
Prithvi-100M,Earth science,"IBM,NASA","Industry,Government","Johannes Jakubik, Sujit Roy, C. E. Phillips, Paolo Fraccaro, Denys Godwin, Bianca Zadrozny, Daniela Szwarcman, Carlos Gomes, Gabby Nyirjesy, Blair Edwards, Daiki Kimura, Naomi Simumba, Linsong Chu, S. Karthik Mukkavilli, Devyani Lambhate, Kamal Das, Ranjini Bangalore, Dario Oliveira, Michal Muszynski, Kumar Ankur, Muthukumaran Ramasubramanian, Iksha Gurung, Sam Khallaghi, Hanxi (Steve)Li, Michael Cecil, Maryam Ahmadi, Fatemeh Kordi, Hamed Alemohammad, Manil Maskey, Raghu Ganti, Kommy Weldemariam, Rahul Ramachandran",2023-11-08,Foundation Models for Generalist Geospatial Artificial Intelligence,https://arxiv.org/abs/2310.18660,,,,100000000.0,,2.299133952e+21,,,"compute hardware: 
0.3*311.84 (peak TFLOPS)*384 (s per epoch)*64 (GPUs)*1000 (epochs) *(10^12) = 2299133952000000000000 = 2.299133952×10^21",HLS / Harmonized Landsat and Sentinel-2,model pre-trained on more than 1TB of multispectral satellite imagery from the Harmonized Landsat-Sentinel 2 (HLS) dataset,,"

",1000.0,,,NVIDIA A100,64.0,,"Significant progress in the development of highly adaptable and reusable Artificial Intelligence (AI) models is expected to have a significant impact on Earth science and remote sensing. Foundation models are pre-trained on large unlabeled datasets through self-supervision, and then fine-tuned for various downstream tasks with small labeled datasets. This paper introduces a first-of-a-kind framework for the efficient pre-training and fine-tuning of foundational models on extensive geospatial data. We have utilized this framework to create Prithvi, a transformer-based geospatial foundational model pre-trained on more than 1TB of multispectral satellite imagery from the Harmonized Landsat-Sentinel 2 (HLS) dataset. Our study demonstrates the efficacy of our framework in successfully fine-tuning Prithvi to a range of Earth observation tasks that have not been tackled by previous work on foundation models involving multi-temporal cloud gap imputation, flood mapping, wildfire scar segmentation, and multi-temporal crop segmentation. Our experiments show that the pre-trained model accelerates the fine-tuning process compared to leveraging randomly initialized weights. In addition, pre-trained Prithvi compares well against the state-of-the-art, e.g., outperforming a conditional GAN model in multi-temporal cloud imputation by up to 5pp (or 5.7%) in the structural similarity index. Finally, due to the limited availability of labeled data in the field of Earth observation, we gradually reduce the quantity of available labeled data for refining the model to evaluate data efficiency and demonstrate that data can be decreased significantly without affecting the model's accuracy. The pre-trained 100 million parameter model and corresponding fine-tuning workflows have been released publicly as open source contributions to the global Earth sciences community through Hugging Face.",,Open weights (unrestricted),,Speculative,2025-02-14 20:53:13+00:00,"United States of America,United States of America",,,,IBM,,,1024.0,"We use AdamW optimizer with β1 = 0.9, β2 = 0.999, batch size of 1024, one-cycle cosine learning rate scheduler, with a maximum learning rate of 5e-4. We experimented with ViTbase and ViT-large backbones and trained the models for 1000 epochs. ",
HGRN 1B (WT 103),Language,"Shanghai AI Lab,Massachusetts Institute of Technology (MIT)","Academia,Academia","Zhen Qin, Songlin Yang, Yiran Zhong",2023-11-08,Hierarchically Gated Recurrent Neural Network for Sequence Modeling,https://arxiv.org/abs/2311.04823,,,,1000000000.0,1B (table 4 and hugging  face repo),1.96608e+19,,,6ND = 6* 3 276 800 000 *10^9 = 1.96608e+19,WikiText-103,,3276800000.0,"Sequence length 512 
Total batch size 128
50k updates

512*128*50000 = 3 276 800 000",,,,NVIDIA A100,8.0,,"Transformers have surpassed RNNs in popularity due to their superior abilities in parallel training and long-term dependency modeling. Recently, there has been a renewed interest in using linear RNNs for efficient sequence modeling. These linear RNNs often employ gating mechanisms in the output of the linear recurrence layer while ignoring the significance of using forget gates within the recurrence. In this paper, we propose a gated linear RNN model dubbed Hierarchically Gated Recurrent Neural Network (HGRN), which includes forget gates that are lower bounded by a learnable value. The lower bound increases monotonically when moving up layers. This allows the upper layers to model long-term dependencies and the lower layers to model more local, short-term dependencies. Experiments on language modeling, image classification, and long-range arena benchmarks showcase the efficiency and effectiveness of our proposed model. The source code is available at this https URL.",,Open weights (unrestricted),,Confident,2025-01-03 15:41:38+00:00,"China,United States of America",,,,,,,,,
OmniVec,"Multimodal,Vision,Speech,Language,Video,3D modeling",TensorTour,Industry,"Siddharth Srivastava, Gaurav Sharma",2023-11-07,OmniVec: Learning robust representations with cross modal sharing,https://arxiv.org/abs/2311.05709v1,38.0,SOTA improvement,"Table 13.

E.g. SOTA on ImageNet at 92.4 top-1 accuracy",,,,,,,"AudioSet,Something-Something v2 (SSv2),English Wikipedia,ImageNet-1k,SUN RGB-D,ModelNet40","Many datasets across several modalities

""We use AudioSet (audio) [23], Something-Something v2 (SSv2)(video) [31], English Wikipedia (text), ImageNet1K (image) [17], SUN RGB-D (depth maps) [71], ModelNet40 (3D point cloud) [93] for pretraining the network.""",,,2000.0,,,,,,"Majority of research in learning based methods has been towards designing and training networks for specific tasks. However, many of the learning based tasks, across modalities, share commonalities and could be potentially tackled in a joint framework. We present an approach in such direction, to learn multiple tasks, in multiple modalities, with a unified architecture. The proposed network is composed of task specific encoders, a common trunk in the middle, followed by task specific prediction heads. We first pre-train it by self-supervised masked training, followed by sequential training for the different tasks. We train the network on all major modalities, e.g.\ visual, audio, text and 3D, and report results on 22 diverse and challenging public benchmarks. We demonstrate empirically that, using a joint network to train across modalities leads to meaningful information sharing and this allows us to achieve state-of-the-art results on most of the benchmarks. We also show generalization of the trained network on cross-modal tasks as well as unseen datasets and tasks.",,,,Unknown,2024-12-08 19:02:36+00:00,United States of America,BERT-Large,,"Appears to build on several models, like BERT and ViT (Table 1)",,,,,,
mPLUG-Owl2,"Vision,Language,Multimodal",Alibaba,Industry,"Qinghao Ye, Haiyang Xu, Jiabo Ye, Ming Yan, Anwen Hu, Haowei Liu, Qi Qian, Ji Zhang, Fei Huang, Jingren Zhou",2023-11-07,mPLUG-Owl2: Revolutionizing Multi-modal Large Language Model with Modality Collaboration,https://arxiv.org/abs/2311.04257,,SOTA improvement,"""Extensive experiments illustrate the effectiveness and generalization abilities of mPLUG-Owl2, which achieves state-of-the-art performance on 8 classic vision-language benchmarks using a single generic model.""",7120000000.0,"""As depicted in Figure 2, our model, referred to as mPLUGOwl2, is composed of three main components: a fundamental vision encoder, a visual abstractor, and a language decoder. Specifically, we utilize ViT-L/14 as the
vision encoder and LLaMA-2-7B [58] as the language decoder""
ViT-L/14 has 123M parameters and Llama 2 7B has 7B parameters.",,,,"ViT-L/14 and Llama 2-7b compute, plus 1.7e19 joint pretrain FLOP (6 * 400M * 7.1B) and 4e16 joint finetune FLOP. Everything is a negligible fraction except the Llama 2 compute.","Conceptual Captions (CC3M),Conceptual Captions 12M (CC12M),COCO,LAION,COYO-700M","""mPLUG-Owl2 is first pre-trained on image-text pairs and fine-tunes on mono-modal and multi-modal instruction data. For pre-training data, we randomly pick about 400 million image-text pairs from five public datasets: Conceptual Captions (CC3M/CC12M) [9], COCO [35], Laion-en [49], COYO [7], DataComp [18]. For instruction data, we collect 5 types of datasets including 1) image captioning (i.e., TextCaps [53], COCO [35]); 2) image question answering (i.e., VQAv2 [21], OKVQA [43], OCR-VQA [44], GQA [24], and A-OKVQA [50]); 3) region-aware QA (i.e., Ref-COCO [69], VisualGenome [26]); 4) multi-modal instruct data (i.e., LLaVA-instruct-150K [38]); 5) text-only instruct data (i.e., ShareGPT-80K [1], SlimOrca [34]). Details can be found in the Appendix.""
According to the appendix, the instruction-tuning dataset was 1.23MB total across text, dialog, captions, and visual question-answering. This can't be much more than 1.5M updates per epoch, and the paper says ""For the instruction tuning stage, we train the whole model for 1 epoch with a learning rate of 2e-5 and batch size 256"".",400672000.0,"400 million image-text pairs at pre-training + 672k image-text pairs at instruction tuning (table 14) = 400672000 images

+ 558k text instructions (table 14) ",1.0,,,,,,"Multi-modal Large Language Models (MLLMs) have demonstrated impressive instruction abilities across various open-ended tasks. However, previous methods primarily focus on enhancing multi-modal capabilities. In this work, we introduce a versatile multi-modal large language model, mPLUG-Owl2, which effectively leverages modality collaboration to improve performance in both text and multi-modal tasks. mPLUG-Owl2 utilizes a modularized network design, with the language decoder acting as a universal interface for managing different modalities. Specifically, mPLUG-Owl2 incorporates shared functional modules to facilitate modality collaboration and introduces a modality-adaptive module that preserves modality-specific features. Extensive experiments reveal that mPLUG-Owl2 is capable of generalizing both text tasks and multi-modal tasks and achieving state-of-the-art performances with a single generic model. Notably, mPLUG-Owl2 is the first MLLM model that demonstrates the modality collaboration phenomenon in both pure-text and multi-modal scenarios, setting a pioneering path in the development of future multi-modal foundation models.
",,Open weights (unrestricted),,Speculative,2024-09-05 18:08:31+00:00,China,Llama 2-7B,1.7000000001e+19,https://www.wolframalpha.com/input?i=6+*+400+million+*+7.12+billion,,,,,,
OtterHD-8B,"Multimodal,Vision,Language",Nanyang Technological University,Academia,"Bo Li, Peiyuan Zhang, Jingkang Yang, Yuanhan Zhang, Fanyi Pu, Ziwei Liu",2023-11-07,OtterHD: A High-Resolution Multi-modality Model,https://arxiv.org/abs/2311.04219,49.0,,"from page 2: ""We present OtterHD-8B, a novel model based on the Fuyu-8B architecture, optimized for varying input resolutions. Our empirical evaluations suggest that the model exhibits state-of-the-art performance across multiple tasks when instruction-tuned with higher resolutions.""",8000000000.0,8B,,,,,"LLaVA-Instruct-150k,VQAv2,OKVQA,TextVQA,OCR-VQA,ImageNet","""We compiled a total of 370K instruction/response pairs sourced from the following public datasets: LLaVA-Instruct [ 30], VQAv2 [2], GQA [ 23 ], OKVQA [ 36 ], OCRVQA [38 ], A-OKVQA [ 45], COCO-GOI [33 ], COCO-Caption [ 10], TextQA [ 48], RefCOCO [58], COCO-ITM [ 28 ], ImageNet [17 ], and LLaVA-RLHF [ 51 ].""",,"""We compiled a total of 370K instruction/response pairs sourced from the follow-
ing public datasets: LLaVA-Instruct [ 30], VQAv2 [2], GQA [ 23 ], OKVQA [ 36 ], OCRVQA [38 ],
A-OKVQA [ 45], COCO-GOI [33 ], COCO-Caption [ 10], TextQA [ 48], RefCOCO [58], COCO-ITM [ 28 ], ImageNet [17 ], and LLaVA-RLHF [ 51 ].""",3.0,9.0,3 hours per epoch over 3 epochs: 9 hours,NVIDIA A100,8.0,,"In this paper, we present OtterHD-8B, an innovative multimodal model evolved from Fuyu-8B, specifically engineered to interpret high-resolution visual inputs with granular precision. Unlike conventional models that are constrained by fixed-size vision encoders, OtterHD-8B boasts the ability to handle flexible input dimensions, ensuring its versatility across various inference requirements. Alongside this model, we introduce MagnifierBench, an evaluation framework designed to scrutinize models' ability to discern minute details and spatial relationships of small objects. Our comparative analysis reveals that while current leading models falter on this benchmark, OtterHD-8B, particularly when directly processing high-resolution inputs, outperforms its counterparts by a substantial margin. The findings illuminate the structural variances in visual information processing among different models and the influence that the vision encoders' pre-training resolution disparities have on model effectiveness within such benchmarks. Our study highlights the critical role of flexibility and high-resolution input capabilities in large multimodal models and also exemplifies the potential inherent in the Fuyu architecture's simplicity for handling complex visual data. ",,,,Confident,2024-11-01 14:05:19+00:00,Singapore,Fuyu-8B,2.4e+19,"flops = (8) * (312 * 10**12) * (3 * 3 * 3600) * (0.3) = 2.4e19
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

'Our implementation permits the completion of full-parameter training within 3 hours per epoch on 8×A100 GPUs. '
Table 4 indicates 3 epochs for the full finetune.",,,,,,
XVERSE-13B-2,Language,"XVERSE Technology,Shenzhen Yuanxiang Technology","Industry,Industry",,2023-11-06,,https://huggingface.co/xverse/XVERSE-13B,,,,13000000000.0,13B,,,,"Not enough info, eg number of epochs",,"""The model has been thoroughly trained on a diversified and high-quality dataset consisting of 3.2 trillion of tokens, including more than 40 languages such as Chinese, English, Russian, and Spanish. The sampling ratio of different types of data is finely set, which makes the performance of Chinese and English excellent, and also takes into account the effect of other languages.""",3200000000000.0,"Multilingual, 3.2 trillion tokens. Note that model was originally stated to have been trained on 1.4T tokens, so while the wording suggests a dataset of 3.2T unique tokens, it may actually be referencing the number of tokens seen by the model (i.e. possibly over multiple epochs).",,,,,,,"XVERSE-13B is a multilingual large language model, independently developed by Shenzhen Yuanxiang Technology. Its key features are as follows:

Model Structure: XVERSE-13B uses the mainstream Decoder-only Transformer network structure, supports 8k context length, the longest one among models of the same size, which can meet the need of longer multi-round dialogues, knowledge question-answering, and summarization. This makes the model more versatile in application scenarios.
Training Data: The model has been thoroughly trained on a diversified and high-quality dataset consisting of 3.2 trillion of tokens, including more than 40 languages such as Chinese, English, Russian, and Spanish. The sampling ratio of different types of data is finely set, which makes the performance of Chinese and English excellent, and also takes into account the effect of other languages.
Tokenization: Based on the BPE (Byte-Pair Encoding) algorithm, a tokenizer with a vocabulary size of 100,534 has been trained using hundreds of gigabytes of language data. This tokenizer is capable of supporting multilingual without the need for additional vocabulary expansion.
Training Framework: Several key technologies have also been independently developed, including efficient operators, memory optimization, parallel scheduling strategies, overlap of data-computation-communication, and synergy between platforms and frameworks. These advancements enhance training efficiency and model stability. With these technologies, the peak computational power utilization rate on a thousand-card cluster can reach 58.5%, ranking at the forefront of the industry.",,Open weights (restricted use),,Likely,2024-09-05 18:08:31+00:00,"China,China",,,,,,,,,
Whisper v3,Speech,OpenAI,Industry,,2023-11-06,,https://huggingface.co/openai/whisper-large-v3,,,"seems not SOTA: ""Our studies show that... accuracy on speech recognition and translation is near the state-of-the-art level""",1550000000.0,,2.7e+23,,,"Could derive this in terms of Whisper v1, which according to the paper was trained for 680k hours for between 2-3 epochs. Whisper v3 was trained on 5 million hours for 2 epochs, or ~5-7x as much data, and has the same architecture. We have an estimate of 4.65e22 for Whisper 1.

Assume Whisper v1 was trained on 2.5 epochs, or 2.5*680k = 1.7M hours. Whisper v3 was trained on 10M hours. 10/1.7 * 4.65e22 ~= 2.7e23",Unspecified unreleased,"""The Whisper large-v3 model is trained on 1 million hours of weakly labeled audio and 4 million hours of pseudolabeled audio collected using Whisper large-v2""",60000000000.0,"English audio is roughly 228 wpm: https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.sxcem9l5k3ce

The dataset is multilingual and other languages seem to have lower wpms. So using 200 wpm, we have

200*60*5 million hours = 60,000,000,000 (60B) words",2.0,,,,,Supervised,"Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains without the need for fine-tuning.

Whisper was proposed in the paper Robust Speech Recognition via Large-Scale Weak Supervision by Alec Radford et al. from OpenAI. The original code repository can be found here.",,Open weights (unrestricted),,Likely,2025-02-19 18:49:27+00:00,United States of America,,,,,,,,,
Consistency Decoder,Image generation,OpenAI,Industry,,2023-11-06,,https://github.com/openai/consistencydecoder,,,,,"The architecture is described in the DALL-E 3 paper, which is linked to from the GitHub page.

""For DALL-E 3, we trained our own diffusion decoder on top of the latent space learned by the VAE trained
by Rombach et al. (2022). We found that using a diffusion decoder here provided marked improvements to
fine image details, for example text or human faces.
This diffusion decoder is a convolutional U-Net identical to the one described in Ho et al. (2020). Once
trained, we used the consistency distillation process described in Song et al. (2023) to bring it down to two
denoising steps.""

The models in Ho et al are 35.7 million to 256 million. Not sure what the parameter count for this one is.  ",,,,,,,,,,,,,,,"We are also open sourcing the Consistency Decoder, a drop in replacement for the Stable Diffusion VAE decoder. This decoder improves all images compatible with the by Stable Diffusion 1.0+ VAE, with significant improvements in text, faces and straight lines.

https://openai.com/blog/new-models-and-developer-products-announced-at-devday",,Open weights (unrestricted),,Unknown,2024-09-05 18:08:31+00:00,United States of America,Denoising Diffusion Probabilistic Models (LSUN Bedroom),,"This model is derived from the denoising model as described below:

""For DALL-E 3, we trained our own diffusion decoder on top of the latent space learned by the VAE trained
by Rombach et al. (2022). We found that using a diffusion decoder here provided marked improvements to
fine image details, for example text or human faces.

This diffusion decoder is a convolutional U-Net identical to the one described in Ho et al. (2020). Once
trained, we used the consistency distillation process described in Song et al. (2023) to bring it down to two
denoising steps.""

Song et al is here: https://arxiv.org/pdf/2303.01469.pdf That paper just describes the general process, not specifically for this model I believe.",,,,,,
GPT-4 Turbo,"Multimodal,Vision,Language,Image generation",OpenAI,Industry,,2023-11-06,New models and developer products announced at DevDay,https://openai.com/blog/new-models-and-developer-products-announced-at-devday,,SOTA improvement,"""More capable"" than GPT-4 according to OpenAI, with larger context window",,Not known. Maybe smaller/sparser than GPT-4.,2.2e+25,,,Estimated using benchmark imputation,Unspecified unreleased,,,,,,,,,,"Today, we shared dozens of new additions and improvements, and reduced pricing across many parts of our platform. These include:

New GPT-4 Turbo model that is more capable, cheaper and supports a 128K context window",,API access,,Unknown,2025-01-30 18:29:42+00:00,United States of America,,,,,,,,,True
CogVLM-17B,"Multimodal,Vision,Language","Tsinghua University,Zhipu AI,Beihang University","Academia,Industry,Academia","Weihan Wang, Qingsong Lv, Wenmeng Yu, Wenyi Hong, Ji Qi, Yan Wang, Junhui Ji, Zhuoyi Yang, Lei Zhao, Xixuan Song, Jiazheng Xu, Bin Xu, Juanzi Li, Yuxiao Dong, Ming Ding, Jie Tang",2023-11-06,CogVLM: Visual Expert for Pretrained Language Models,"https://arxiv.org/abs/2311.03079
https://huggingface.co/THUDM/cogvlm-chat-hf
https://github.com/THUDM/CogVLM
",297.0,SOTA improvement,"""CogVLM-17B
achieves state-of-the-art performance on 17 clas-
sic cross-modal benchmarks, including 1) im-
age captioning datasets: NoCaps, Flicker30k, 2)
VQA datasets: OKVQA, TextVQA, OCRVQA,
ScienceQA, 3) LVLM benchmarks: MM-
Vet, MMBench, SEED-Bench, LLaVABench,
POPE, MMMU, MathVista, 4) visual grounding
datasets: RefCOCO, RefCOCO+, RefCOCOg,
Visual7W. Codes and checkpoints are available at
https://github.com/THUDM/CogVLM""",17000000000.0,"CogVLM-17B has 10 billion vision parameters and 7 billion language parameters. However, ""the total number of trainable parameters is 6.5B"".

""CogVLM model comprises four fundamental components: a vision transformer (ViT) encoder, an MLP adapter, a pretrained large language model (GPT), and a visual expert module.""

ViT: EVA2-CLIP-E, last layer removed (5B params with last layer, non-trainable)
MLP adapter: 2 layers, parameter count unavailable
GPT: Vicuna1.5-7B (7B params)
Visual expert module: parameter count unclear",6.331e+22,,,"from table 8 on page 17

230.1 FLOPS*days 
so 
10**15*24*3600*230.1= 1.988e22

Since this training uses pretrained weights from EVA02-CLIP-E and Vicuna1.5-7B, we report the full number of FLOPs baked into the model.

EVA02-CLIP-g/14 is stated to have taken 25 days to train 12B samples using 64 A100-40GB GPUs, implying: 
25 days * 24 hr/day * 3600 sec/hr * 64 GPU * 7.80E+13 FLOP/GPU-sec * 30% efficiency = 3.23e21

EVA02-CLIP-E doesn't give a training time; it saw 1/4 as many samples as the g/14 model but has 4.27x more parameters; as a rough estimate, assume it took the same number of FLOPs to train.

Vicuna1.5-7B's training compute is ~entirely embedded in the base Llama-7b weights, which took 4.02e+22 FLOPs

Total: 1.988e22 + 3.23e21 + 4.02e22 = 6.331E22","VQAv2,LAION-2B,COYO-700M,OKVQA,TextVQA,OCR-VQA,ScienceQA,LLaVA-Instruct-150k,LRV-Instruction,LLaVAR,Flickr30K Entities,RefCOCO,Visual7W,VisualGenome,COCO,TextCaps","Pretraining uses LAION-2B, COYO-700M, plus a newly created visual grounding dataset of 40M images.
Generalist models CogVLM-Chat and CogVLM-Grounding are additionally finetuned on VQAv2, OKVQA, TextVQA, OCRVQA, ScienceQA, LLaVA-Instruct, LRV-Instruction, LLaVAR, Flickr30K Entities, RefCOCO, Visual7W, and VisualGenome.
Additional tests finetune on the training sets from COCO and TextCaps.",1518534581.0,"After filtering, about 1.5B image-text pairs are left for pretraining in stage one. Stage two of pretraining adds a visual grounding dataset of 40M images with generated noun bounding boxes. These are filtered from LAION-115M so that 75% of images contain at least two bounding boxes.

Two different kinds of finetuning are done, each using a number of datasets:
- CogVLM-Chat: VQAv2 (11059040), OKVQA (70275), TextVQA (453360), OCRVQA (1002146), ScienceQA (21208), LLaVAInstruct (150000), LRV-Instruction (300000), LLaVAR (1633000)
- CogVLM-Grounding: Flickr30K Entities (520000), RefCOCO (142209), Visual7W (889388), VisualGenome (1700000)

Additional experiments finetune using the training sets from COCO (413915 in train) and TextCaps (109765 in train)

In sum, pretraining and finetuning appear to contain 1,500,000,000 and 18,534,581 datapoints, respectively.",,,,,,Supervised,"We introduce CogVLM, a powerful open-source visual language foundation model. Different from the popular shallow alignment method which maps image features into the input space of language model, CogVLM bridges the gap between the frozen pretrained language model and image encoder by a trainable visual expert module in the attention and FFN layers. As a result, CogVLM enables deep fusion of vision language features without sacrificing any performance on NLP tasks. CogVLM-17B achieves state-of-the-art performance on 10 classic cross-modal benchmarks, including NoCaps, Flicker30k captioning, RefCOCO, RefCOCO+, RefCOCOg, Visual7W, GQA, ScienceQA, VizWiz VQA and TDIUC, and ranks the 2nd on VQAv2, OKVQA, TextVQA, COCO captioning, etc., surpassing or matching PaLI-X 55B. Codes and checkpoints are available at this https URL. ",,Open weights (restricted use),,Confident,2025-02-14 20:53:44+00:00,"China,China,China",Vicuna-7B v0,2e+22,Trained from Vicuna1.5-7B weights,,,,,"8192 in pretraining stage 1, 1024 in stage 2",True
RNA-MSM,Biology,"Peking University,Shanghai AI Lab,Griffith University,Peng Cheng Laboratory,Shenzhen Bay Laboratory","Academia,Academia,Academia,Academia","Yikun Zhang, Mei Lang, Jiuhong Jiang, Zhiqiang Gao, Fan Xu, Thomas Litfin, Ke Chen, Jaswinder Singh, Xiansong Huang, Guoli Song, Yonghong Tian, Jian Zhan, Jie Chen, Yaoqi Zhou",2023-11-06,Multiple sequence alignment-based RNA language model and its application to structural inference,https://academic.oup.com/nar/article/52/1/e3/7369930,29.0,,,,10 blocks in the MSA transformer,,,,8 V100 32Gbs at FP32,,,64000000.99999989,"3932 (families) × 512 (sequences per family) × 32 (tokens per sequence) = 64,421,888 unique tokens

Total: 6.4e7 tokens",300.0,,,,,,"Compared with proteins, DNA and RNA are more difficult languages to interpret because four-letter coded DNA/RNA sequences have less infor-
mation content than 20-letter coded protein sequences. While BERT (Bidirectional Encoder Representations from Transformers)-like language
models have been developed for RNA, they are ineffective at capturing the evolutionary information from homologous sequences because unlike
proteins, RNA sequences are less conserved. Here, we have developed an unsupervised multiple sequence alignment-based RNA language
model (RNA-MSM) by utilizing homologous sequences from an automatic pipeline, RNAcmap, as it can provide significantly more homologous se-
quences than manually annotated Rfam. We demonstrate that the resulting unsupervised, two-dimensional attention maps and one-dimensional
embeddings from RNA-MSM contain structural information. In fact, they can be directly mapped with high accuracy to 2D base pairing probabil-
ities and 1D solvent accessibilities, respectively. Further fine-tuning led to significantly improved performance on these two downstream tasks
compared with existing state-of-the-art techniques including SPOT-RNA2 and RNAsnap2. By comparison, RNA-FM, a BERT-based RNA language
model, performs worse than one-hot encoding with its embedding in base pair and solvent-accessible surface area prediction. We anticipate
that the pre-trained RNA-MSM model can be fine-tuned on many other tasks related to RNA structure and function.",,Open weights (unrestricted),,Unverified,2025-01-30 05:05:12+00:00,"China,China,Australia,China,China",,,,,,,1.0,,
LLaVA 1.5,"Multimodal,Language,Vision","University of Wisconsin Madison,Microsoft Research","Academia,Industry","Haotian Liu, Chunyuan Li, Yuheng Li, Yong Jae Lee",2023-11-05,Improved Baselines with Visual Instruction Tuning,"https://arxiv.org/abs/2310.03744,
https://huggingface.co/liuhaotian/llava-v1.5-13b",1430.0,SOTA improvement,"from abstract: ""we establish stronger baselines that achieve state-of-the-art across 11 benchmark""",13000000000.0,"from abstract ""Our final 13B checkpoint uses merely 1.2M publicly available data, and finishes full training in ~1 day on a single 8-A100 node. """,7.807e+22,,,"""Due to the increased image input resolution to 336^2, the training of LLaVA-1.5 is ∼2× as long as LLaVA: ∼6 hours of pretraining and ∼20 hours of visual instruction tuning using 8× A100s.""
26 * 3600 * 8 * 3.12e14 * 0.3 = 7.0e19

Fine-tuned from Vicuna-13B (itself finetuned from LLaMa-13B), which used 7.8e22 FLOPs

7.0e19 + 7.8e22",Unspecified unreleased,from https://huggingface.co/liuhaotian/llava-v1.5-13b#training-dataset,1200000.0,1.2M text-image pairs from https://huggingface.co/liuhaotian/llava-v1.5-13b#training-dataset,1.0,24.0,"from abstract ""Our final 13B checkpoint uses merely 1.2M publicly available data, and finishes full training in ~1 day on a single 8-A100 node. """,NVIDIA A100,8.0,,"Large multimodal models (LMM) have recently shown encouraging progress with visual instruction tuning. In this note, we show that the fully-connected vision-language cross-modal connector in LLaVA is surprisingly powerful and data-efficient. With simple modifications to LLaVA, namely, using CLIP-ViT-L-336px with an MLP projection and adding academic-task-oriented VQA data with simple response formatting prompts, we establish stronger baselines that achieve state-of-the-art across 11 benchmarks. Our final 13B checkpoint uses merely 1.2M publicly available data, and finishes full training in ~1 day on a single 8-A100 node. We hope this can make state-of-the-art LMM research more accessible. Code and model will be publicly available. ",,Open weights (restricted use),,Confident,2025-02-14 20:55:42+00:00,"United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland",Vicuna-13B v0,7.008768e+19,"""Due to the increased image input resolution to 336^2, the training of LLaVA-1.5 is ∼2× as long as LLaVA: ∼6 hours of pretraining and ∼20 hours of visual instruction tuning using 8× A100s.""

26 * 3600 * 8 * 3.12e14 * 0.3 = 7.0e19",,,,,,
Grok-1,Language,xAI,Industry,,2023-11-04,Announcing Grok,"https://x.ai/model-card/, https://x.ai/blog/grok-os",,Training cost,"""On these benchmarks, Grok-1 displayed strong results, surpassing all other models in its compute class, including ChatGPT-3.5 and Inflection-1""",314000000000.0,"""314B parameter Mixture-of-Experts model with 25% of the weights active on a given token"". So effectively 78B parameters

Mixture of 8 experts: https://github.com/xai-org/grok-1",2.90000000001e+24,2.00000000001e+24,7.00000000001e+24,"""On these benchmarks, Grok-1 displayed strong results, surpassing all other models in its compute class, including ChatGPT-3.5 and Inflection-1. It is only surpassed by models that were trained with a significantly larger amount of training data and compute resources like GPT-4""

Per table, Grok-1 is surpassed by Palm 2, Claude 2, GPT-4, so it required less compute than these three models. Palm 2 was trained on 7e24 FLOP.

GPT-3.5 is ~2.6e24. Inflection-1's compute is not public/known by us but Inflection says Inflection-1 compute was <= Palm-540B's (which was ~2.5e24). 

For optimal training, our current working hypothesis is that you still need something like Chinchilla scaling on the total number of parameters in the model, even for MoE models, so optimal dataset size would be 20*310B tokens. With 25%*314B params active per forward pass, this would be around 3e24 FLOP.
https://www.wolframalpha.com/input?i=20*310+billion+*+6+*+25%25+*+314+billion",,"""Base model trained on a large amount of text data, not fine-tuned for any particular task.""

""The training data used for the release version of Grok-1 comes from both the Internet up to Q3 2023 and the data provided by our AI Tutors.""",6200000000000.0,"(Speculative confidence, see compute notes)",,,,,,,"Grok is an AI modeled after the Hitchhiker’s Guide to the Galaxy, so intended to answer almost anything and, far harder, even suggest what questions to ask!

Grok is designed to answer questions with a bit of wit and has a rebellious streak, so please don’t use it if you hate humor!

A unique and fundamental advantage of Grok is that it has real-time knowledge of the world via the 𝕏 platform. It will also answer spicy questions that are rejected by most other AI systems.

Grok is still a very early beta product – the best we could do with 2 months of training – so expect it to improve rapidly with each passing week with your help.",,Open weights (unrestricted),,Likely,2025-02-17 20:39:16+00:00,United States of America,,,,,,,,,True
Grok-0,Language,xAI,Industry,,2023-11-04,Announcing Grok,https://x.ai/,,,,33000000000.0,33 billion,,,,"Half of Llama 2-70B? (which we estimated at 8e23) ""This early model approaches LLaMA 2 (70B) capabilities on standard LM benchmarks but uses only half of its training resources""",,,,no information about the dataset found except for this speculation https://docs.google.com/spreadsheets/d/1O5KVQW1Hx5ZAkcg8AIRjbQLQzx2wVaLl0SqUu-ir9Fs/edit?gid=1158069878#gid=1158069878,,,,,,,"""The engine powering Grok is Grok-1, our frontier LLM, which we developed over the last four months. Grok-1 has gone through many iterations over this span of time.

After announcing xAI, we trained a prototype LLM (Grok-0) with 33 billion parameters. This early model approaches LLaMA 2 (70B) capabilities on standard LM benchmarks but uses only half of its training resources.""",,Hosted access (no API),,Likely,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Qiyuan,,,,,2023-11-04,"360 奇元大模型正式上线
",https://www.sohu.com/a/733914132_104036,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
BLUUMI,Language,"University of Turku,Hugging Face","Academia,Industry","Risto Luukkonen, Ville Komulainen, Jouni Luoma, Anni Eskelinen, Jenna Kanerva, Hanna-Mari Kupari, Filip Ginter, Veronika Laippala, Niklas Muennighoff, Aleksandra Piktus, Thomas Wang, Nouamane Tazi, Teven Le Scao, Thomas Wolf, Osma Suominen, Samuli Sairanen, Mikko Merioksa, Jyrki Heinonen, Aija Vahtola, Samuel Antao, Sampo Pyysalo",2023-11-03,FinGPT: Large Generative Models for a Small Language,https://arxiv.org/abs/2311.05640,28.0,SOTA improvement,"SOTA for Finnish: ""Our best monolingual model outperforms this result by over 10% points and the BLUUMI model by over 20% points, representing a substantial advance in the state of the art in the capability of generative models trained for Finnish.""",176000000000.0,176 billion,,,,,"Parsebank,mC4,Common Crawl,Wikipedia",Finnish data from several sources,38000000000.0,"38B tokens
""In total, the final pretraining dataset (including oversampling) consists of 38 billion tokens when processed with our Finnish tokenizer.""",8.0,,,AMD Radeon Instinct MI250X,,,"Large language models (LLMs) excel in many tasks in NLP and beyond, but most open models have very limited coverage of smaller languages and LLM work tends to focus on languages where nearly unlimited data is available for pretraining. In this work, we study the challenges of creating LLMs for Finnish, a language spoken by less than 0.1% of the world population. We compile an extensive dataset of Finnish combining web crawls, news, social media and eBooks. We pursue two approaches to pretrain models: 1) we train seven monolingual models from scratch (186M to 13B parameters) dubbed FinGPT, 2) we continue the pretraining of the multilingual BLOOM model on a mix of its original training data and Finnish, resulting in a 176 billion parameter model we call BLUUMI. For model evaluation, we introduce FIN-bench, a version of BIG-bench with Finnish tasks. We also assess other model qualities such as toxicity and bias. Our models and tools are openly available at this https URL.",,Open weights (unrestricted),,Likely,2024-11-01 14:05:18+00:00,"Finland,Multinational,United States of America",BLOOM-176B,,"They ""continued pretraining"" of BLOOM on Finnish data. Don't think they specify the number of tokens they trained BLOOM/BLUUMI on; for their smaller models it was 300b.",,LUMI Supercomputer,,4194304.0,Table 5.,True
RT-Trajectory,Robotics,"Google DeepMind,University of California San Diego,Stanford University","Industry,Academia,Academia","Jiayuan Gu, Sean Kirmani, Paul Wohlhart, Yao Lu, Montserrat Gonzalez Arenas, Kanishka Rao, Wenhao Yu, Chuyuan Fu, Keerthana Gopalakrishnan, Zhuo Xu, Priya Sundaresan, Peng Xu, Hao Su, Karol Hausman, Chelsea Finn, Quan Vuong, Ted Xiao",2023-11-03,RT-Trajectory: Robotic Task Generalization via Hindsight Trajectory Sketches,https://arxiv.org/abs/2311.01977,28.0,SOTA improvement,"from blog https://deepmind.google/discover/blog/shaping-the-future-of-advanced-robotics/

""When tested on 41 tasks unseen in the training data, an arm controlled by RT-Trajectory more than doubled the performance of existing state-of-the-art RT models: it achieved a task success rate of 63%, compared with 29% for RT-2.""",,seems to be based on the RT-1 architecture (35M parameters) with some modifications (section 3.3),,,,"Given the architecture seems to use 35M parameters, it seems unlikely this is above 1e23 FLOP.",RT-1,"""We use the RT-1 (Brohan et al., 2023b) demonstration dataset for training""

also trained with retroactively-generated trajectories created by humans, by code written by GPT-4, and image generation models",,,,,,,,Reinforcement learning,"Generalization remains one of the most important desiderata for robust robot learning systems. While recently proposed approaches show promise in generalization to novel objects, semantic concepts, or visual distribution shifts, generalization to new tasks remains challenging. For example, a language-conditioned policy trained on pick-and-place tasks will not be able to generalize to a folding task, even if the arm trajectory of folding is similar to pick-and-place. Our key insight is that this kind of generalization becomes feasible if we represent the task through rough trajectory sketches. We propose a policy conditioning method using such rough trajectory sketches, which we call RT-Trajectory, that is practical, easy to specify, and allows the policy to effectively perform new tasks that would otherwise be challenging to perform. We find that trajectory sketches strike a balance between being detailed enough to express low-level motion-centric guidance while being coarse enough to allow the learned policy to interpret the trajectory sketch in the context of situational visual observations. In addition, we show how trajectory sketches can provide a useful interface to communicate with robotic policies: they can be specified through simple human inputs like drawings or videos, or through automated methods such as modern image-generating or waypoint-generating methods. We evaluate RT-Trajectory at scale on a variety of real-world robotic tasks, and find that RT-Trajectory is able to perform a wider range of tasks compared to language-conditioned and goal-conditioned policies, when provided the same training data.",,,,Unknown,2024-11-01 14:05:18+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America,United States of America",,,,,,,,,
Yi-34B,Language,01.AI,Industry,"Alex Young, Bei Chen, Chao Li, Chengen Huang, Ge Zhang, Guanwei Zhang, Heng Li, Jiangcheng Zhu, Jianqun Chen, Jing Chang, Kaidong Yu, Peng Liu, Qiang Liu, Shawn Yue, Senbin Yang, Shiming Yang, Tao Yu, Wen Xie, Wenhao Huang, Xiaohui Hu, Xiaoyi Ren, Xinyao Niu, Pengcheng Nie, Yuchi Xu, Yudong Liu, Yue Wang, Yuxuan Cai, Zhenyu Gu, Zhiyuan Liu, Zonghong Dai",2023-11-02,Yi: Open Foundation Models by 01.AI,https://arxiv.org/abs/2403.04652,,Significant use,"2nd most popular model on HuggingFace: https://decrypt.co/206195/new-open-source-ai-model-from-china-boasts-twice-the-capacity-of-chatgpt

also maybe the best open-source model, does better than Llama 2-70B on several benchmarks",34000000000.0,34b,6.1e+23,,,"""The dataset we use contains Chinese & English only. We used approximately 3T tokens"" sounds like this means it was trained on 3T tokens, not necessarily that the dataset contains 3T tokens?

If so, 34b * 3T * 6 = 6.1e23",Unspecified unreleased,"Chinese and English dataset

""For pretraining, we construct 3.1 trillion tokens of English and Chinese corpora using a cascaded data deduplication and quality filtering pipeline. For finetuning, we polish a small scale (less than 10K) instruction dataset over multiple iterations such that every single instance has been verified directly by our machine learning engineers. For vision-language, we combine the chat language model with a vision transformer encoder and train the model to align visual representations to the semantic space of the language model.""",3100000000000.0,"""language models pretrained from scratch on 3.1T highly-engineered large amount of
data, and finetuned on a small but meticulously polished alignment data.""",,,,,,,The Yi series models are large language models trained from scratch by developers at 01.AI.,,Open weights (restricted use),,Confident,2024-12-16 18:36:40+00:00,China,,,,,,Yi-34B,,,
Cohere Embed,Language,Cohere,Industry,"Nils Reimers, Elliott Choi, Amr Kayid, Alekhya Nandula, Manoj Govindassamy, Abdullah Elkady",2023-11-02,Cohere Command & Embed on Amazon Bedrock,https://txt.cohere.com/introducing-embed-v3/,,SOTA improvement,"""We are releasing new English and multilingual Embed versions with either 1024 or 384 dimensions. All models can be accessed via our APIs. As of October 2023, these models achieve state-of-the-art performance among 90+ models on the Massive Text Embedding Benchmark (MTEB) and state-of-the-art performance for zero-shot dense retrieval on BEIR.""",,,,,,"https://docs.cohere.com/docs/environmental-impact

Embed v2 (older version) produced 6689.76 kg CO2 to train. Using the calculator Cohere links (https://mlco2.github.io/impact/) that's the equivalent of 80,000 TPUv3-hours in the ""us-west1"" region. That's 3.5e22 FLOP without considering utilization. However, I have no idea which region Cohere's GPUs are in (looks like CO2/energy can vary a lot by region), and they probably used a more recent GPU.",Unspecified unreleased,,,"""First, they have been trained on questions and answers from a large web crawl. When we presented our multilingual-v2.0 model last year, we had a collection of over 1.4 billion question-and-answer pairs from 100+ languages on basically every topic on the internet.""

""Hence, the second stage involved measuring content quality. We used over 3 million search queries from search engines and retrieved the top-10 most similar documents for each query.""",,,,,,,"We're excited to introduce Embed v3, our latest and most advanced embeddings model. Embed v3 offers state-of-the-art performance per trusted MTEB and BEIR benchmarks.",,API access,,Unknown,2024-09-05 18:08:31+00:00,Canada,,,,,,,,,
DeepSA,Biology,ShanghaiTech University,Academia,"Shihang Wang, Lin Wang, Fenglei Li, Fang Bai",2023-11-02,DeepSA: a deep-learning driven predictor of compound synthesis accessibility,https://jcheminf.biomedcentral.com/articles/10.1186/s13321-023-00771-3,,,,,can possibly be calculated from architecture description,1e+19,,,"1. Hardware setup: 1x NVIDIA GeForce RTX 3090 (1.60 × 10¹⁴ FLOP/s)

2. Training duration: Estimated based on dataset size and batch processing
   - 71,861,060 total samples (3,593,053 samples × 20 epochs)
   - 561,719 batches (batch size 128)
   - ~15.6 hours (56,172 seconds)

3. Utilization rate: 40%

4. Final calculation:
   1.60 × 10¹⁴ FLOP/s × 1 GPU × 5.6 × 10⁴ s × 0.4 = 3.6 × 10¹⁸ FLOPs
   (Rounded to 1.0 × 10¹⁹ FLOPs)",ChEMBL,"DeepSA is a chemical language model that was developed by training on a dataset of 3,593,053 molecules

The training dataset contains 800,000 molecules, of which 150,000 are from the ChEMBL [27] or GDBChEMBL[28]",3593053.0,,20.0,,,NVIDIA GeForce RTX 3090,,,"With the continuous development of artificial intelligence technology, more and more computational models for generating new molecules are being developed. However, we are often confronted with the question of whether these compounds are easy or difficult to synthesize, which refers to synthetic accessibility of compounds. In this study, a deep learning based computational model called DeepSA, was proposed to predict the synthesis accessibility of compounds, which provides a useful tool to choose molecules. DeepSA is a chemical language model that was developed by training on a dataset of 3,593,053 molecules using various natural language processing (NLP) algorithms, offering advantages over state-of-the-art methods and having a much higher area under the receiver operating characteristic curve (AUROC), i.e., 89.6%, in discriminating those molecules that are difficult to synthesize. This helps users select less expensive molecules for synthesis, reducing the time and cost required for drug discovery and development. Interestingly, a comparison of DeepSA with a Graph Attention-based method shows that using SMILES alone can also efficiently visualize and extract compound’s informative features. DeepSA is available online on the below web server (https://bailab.siais.shanghaitech.edu.cn/services/deepsa/) of our group, and the code is available at https://github.com/Shihang-Wang-58/DeepSA.",,Hosted access (no API),,Unverified,2025-02-14 20:59:12+00:00,China,,,,,,,,,
BlueLM 70B,Language,vivo AI lab,Industry,,2023-11-02,,https://baijiahao.baidu.com/s?id=1781445143383237948&wfr=spider&for=pc,,,,70000000000.0,,4.2e+23,,1.33e+25,6ND = 6*70B*1000B=4.2e+23,Unspecified unreleased,,,"1000B Text data
10B Image data
100M video data
100M Knowledge graph

(from the conference handout)",,,,,,,,,Unreleased,,Confident,2025-02-14 20:56:07+00:00,China,,,,,,,,,
BlueLM 130B,Language,vivo AI lab,Industry,,2023-11-02,,https://baijiahao.baidu.com/s?id=1781445143383237948&wfr=spider&for=pc,,,,130000000000.0,,7.8e+23,,2.4699999999999996e+25,6ND = 6*130B*1000B=7.8e+23,Unspecified unreleased,,,"1000B Text data
10B Image data
100M video data
100M Knowledge graph

(from the conference handout)",,,,,,,,,Unreleased,,Confident,2025-02-14 20:56:12+00:00,China,,,,,,,,,
BlueLM 175B,Language,vivo AI lab,Industry,,2023-11-02,,https://baijiahao.baidu.com/s?id=1781445143383237948&wfr=spider&for=pc,,,,175000000000.0,,1.05e+24,,3.3199999999999997e+25,6ND = 6*175B*1000B=1.05e+24,Unspecified unreleased,,,"1000B Text data
10B Image data
100M video data
100M Knowledge graph

(from the conference handout)",,,,,,,,,Unreleased,,Confident,2025-02-14 20:56:15+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
Yi 6B,Language,01.AI,Industry,"Alex Young, Bei Chen, Chao Li, Chengen Huang, Ge Zhang, Guanwei Zhang, Heng Li, Jiangcheng Zhu, Jianqun Chen, Jing Chang, Kaidong Yu, Peng Liu, Qiang Liu, Shawn Yue, Senbin Yang, Shiming Yang, Tao Yu, Wen Xie, Wenhao Huang, Xiaohui Hu, Xiaoyi Ren, Xinyao Niu, Pengcheng Nie, Yuchi Xu, Yudong Liu, Yue Wang, Yuxuan Cai, Zhenyu Gu, Zhiyuan Liu, Zonghong Dai",2023-11-02,Yi: Open Foundation Models by 01.AI,https://arxiv.org/abs/2403.04652,,,,6000000000.0,6B,1.26e+23,,,6*7*10^9*3*10^12 = 1.26e+23,Unspecified unreleased,,3100000000000.0,"""language models pretrained from scratch on 3.1T highly-engineered large amount of
data, and finetuned on a small but meticulously polished alignment data.""",,,,,,,The Yi series models are large language models trained from scratch by developers at 01.AI.,,Open weights (restricted use),,Confident,2024-11-18 19:46:33+00:00,China,,,,,,,,,
Nanbeige-16B,Language,Nanbeige LLM Lab,Industry,,2023-11-01,,https://github.com/Nanbeige/Nanbeige/blob/main/README_EN.md,,,"a little worse than Qwen on most metrics, and well short of GPT-4, ofc",16000000000.0,16 billion,2.4e+23,,,"""It uses 2.5T Tokens for pre-training"". I think that's the number of tokens the model was trained on, not the dataset size, but I'm not sure.

16 billion * 2.5 trillion * 6 = 2.4e23",Unspecified unreleased,"""The training data includes a large amount of high-quality internet corpus, various books, code, etc""",2500000000000.0,"""It uses 2.5T Tokens for pre-training""",,,,,,,"Nanbeige-16B is a 16 billion parameter language model developed by Nanbeige LLM Lab. It uses 2.5T Tokens for pre-training. The training data includes a large amount of high-quality internet corpus, various books, code, etc. It has achieved good results on various authoritative evaluation data sets. This release includes the Base, Chat, Base-32k and Chat-32k.",,Open weights (unrestricted),,Likely,2025-02-14 21:01:27+00:00,China,,,,,,,,,
LingoWhale-8B,Language,DeepLang AI,Industry,,2023-11-01,,https://github.com/DeepLangAI/LingoWhale-8B/blob/main/README_EN.md,,,competitive with Qwen-7B on C-Eval,8000000000.0,,,,,,,"""pre-trained on a large volume of high-quality bilingual data"" Chinese + English",,,,,,,,,"LingoWhale-8B is the first open-source model in the LingoWhale series introduced by DeepLangAI. It's a bilingual (Chinese-English) large language model.

LingoWhale-8B has been pre-trained on a large volume of high-quality bilingual data and exhibits powerful capabilities as a foundation model. It has achieved leading results on multiple public benchmarks. During its pre-training phase, the model was trained with a context window of 8K, allowing it to comprehend and generate longer sequences.

LingoWhale-8B is fully open for academic research. Users can apply for commercial use by email, and once granted official commercial permission, they can use it for free.",,Open weights (non-commercial),,Confident,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Calm2-7B,Language,CyberAgent,Industry,Ryosuke Ishigami,2023-11-01, CyberAgentLM2-7B (CALM2-7B)   https://huggingface.co/cyberagent/calm2-7b,https://huggingface.co/cyberagent/calm2-7b,,,,7000000000.0,7B,5.46e+22,,,"6*7B*1.3T = 54600000000000000000000
6ND aproximation",,"""1.3T tokens of publicly available Japanese and English datasets. """,1300000000000.0,"""1.3T tokens of publicly available Japanese and English datasets.""",,,,,,Self-supervised learning,CyberAgentLM2 is a decoder-only language model pre-trained on the 1.3T tokens of publicly available Japanese and English datasets.,,Open weights (unrestricted),,Confident,2025-02-14 21:01:17+00:00,Japan,,,,,,,,,
OpenChat 3.5-7B,Language,Tsinghua University,Academia,,2023-11-01,,https://huggingface.co/openchat/openchat_3.5,,,Creators claim it's the best 7B model and better than GPT-3.5,7000000000.0,7B,,,,,,"Fine-tuned on instruction data

""OpenChat 3.5 was trained with C-RLFT on a collection of publicly available high-quality instruction data, with a custom processing pipeline. We detail some notable subsets included here:

OpenChat ShareGPT
Open-Orca with FLAN answers
Capybara 1 2 3
GOAT
Glaive
MetaMathQA
MathInstruct
OpenAssistant""",,,,,,,,,"OpenChat is an innovative library of open-source language models, fine-tuned with C-RLFT - a strategy inspired by offline reinforcement learning. Our models learn from mixed-quality data without preference labels, delivering exceptional performance on par with ChatGPT, even with a 7B model. Despite our simple approach, we are committed to developing a high-performance, commercially viable, open-source large language model, and we continue to make significant strides toward this vision.",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,China,Llama 2-7B,,"Like a Llama 2 finetune though the HF page doesn't specify. Their paper describes a Llama 2-13B finetune: https://arxiv.org/abs/2309.11235

""OpenChat 3.5 was trained with C-RLFT on a collection of publicly available high-quality instruction data, with a custom processing pipeline. We detail some notable subsets included here:

OpenChat ShareGPT
Open-Orca with FLAN answers
...
""",,,,,,
MuggleMath,"Language,Mathematics","University of Science and Technology of China,Alibaba","Academia,Industry","Chengpeng Li, Zheng Yuan, Hongyi Yuan, Guanting Dong, Keming Lu, Jiancan Wu, Chuanqi Tan, Xiang Wang, Chang Zhou",2023-11-01,Query and Response Augmentation Cannot Help Out-of-domain Math Reasoning Generalization,https://arxiv.org/abs/2310.05506,,,,70000000000.0,"model: Apache 2  https://huggingface.co/OFA-Sys/MuggleMath_7B
code: undefined license https://github.com/OFA-Sys/gsm8k-ScRel?tab=readme-ov-file#readme",,,,,GSM8K,"By augmenting GSM8K with various queries and multiple reasoning paths, we curated GSM8K to a new dataset named AugGSM8K.",,"The original GSM8K training set has 7,473 samples. We augment 5 more
queries for each query in the training set and yield 7, 473 × 5 = 37, 365 augmented queries.",3.0,,,NVIDIA A100,32.0,,"In math reasoning with large language models (LLMs), fine-tuning data augmentation by query evolution and diverse reasoning paths is empirically verified effective, profoundly narrowing the gap between open-sourced LLMs and cutting-edge proprietary LLMs. In this paper, we conduct an investigation for such data augmentation in math reasoning and are intended to answer: (1) What strategies of data augmentation are more effective; (2) What is the scaling relationship between the amount of augmented data and model performance; and (3) Can data augmentation incentivize generalization to out-of-domain mathematical reasoning tasks? To this end, we create a new dataset, AugGSM8K, by complicating and diversifying the queries from GSM8K and sampling multiple reasoning paths. We obtained a series of LLMs called MuggleMath by fine-tuning on subsets of AugGSM8K. MuggleMath substantially achieves new state-of-the-art on GSM8K (from 54% to 68.4% at the scale of 7B, and from 63.9% to 74.0% at the scale of 13B). A log-linear relationship is presented between MuggleMath's performance and the amount of augmented data. We also find that MuggleMath is weak in out-of-domain math reasoning generalization to MATH. This is attributed to the differences in query distribution between AugGSM8K and MATH which suggest that augmentation on a single benchmark could not help with overall math reasoning performance. Codes and AugGSM8K will be uploaded to this https URL.",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,"China,China",Llama 2-70B,,,,,,,,
BlueLM 7B,Language,vivo AI lab,Industry,,2023-10-31,BlueLM: An Open Multilingual 7B Language Model,https://github.com/vivo-ai-lab/BlueLM/blob/main/BlueLM_technical_report.pdf,,,,7000000000.0,"""BlueLM is a large-scale pre-trained language model independently developed by vivo AI Global Research Institute. This release includes 7B base (base) model and 7B conversation (chat) model. At the same time, we have open sourced the long text base (base) model that supports 32K and conversation (chat) model."" from GitHub https://github.com/vivo-ai-lab/BlueLM

",1.0920000000001e+23,,,"C = 6DN = 6 * 2.6T * 7B = 1.092*10^23 FLOP
https://www.wolframalpha.com/input?i=6*7+billion+*+2.6+trillion
(assuming 1 epoch)

Figure 1 gives compute of 10^12 FLOPs  but this seems improbable

Training over 2.59T tokens took approximately 26 days using the vivolm system, with a throughput of 3150 tokens/sec/GPU.",Unspecified unreleased,,2592000000000.0,"""Larger amounts of high-quality data : high-quality corpus for training, reaching a scale of 2.6 trillion tokens. The corpus includes Chinese, English and a small amount of Japanese and Korean data"" from GitHub

see 2.1 https://github.com/vivo-ai-lab/BlueLM/blob/main/BlueLM_technical_report.pdf",,,,,,,"BlueLM is a large-scale open-source language model independently developed by the vivo AI Lab. This release includes 2K and 32K context length versions for both Base and Chat models.

High-quality Data: BlueLM is trained on a high-quality data with 2.6 trillion tokens. Our train corpus mainly consists of Chinese and English data, with a small amount of Japanese and Korean data.
Stronger Performance: BlueLM-7B-Chat achieves a strong competitive performance in C-Eval and CMMLU benchmarks of the same size.
Longer Context: We have extended the context length of both BlueLM-7B-Base-32K and BlueLM-7B-Chat-32K models from 2K to 32K. The models can support longer context understanding while maintaining the same basic capabilities.
Model License: BlueLM weights are open for academic research and commercial use.",,Open weights (restricted use),,Confident,2025-02-14 21:01:42+00:00,China,,,,,,,,,
Tongyi Qianwen 2.0,Language,Alibaba,Industry,,2023-10-31,Alibaba Cloud Launches Tongyi Qianwen 2.0 and Industry-specific Models to Support Customers Reap Benefits of Generative AI,https://www.alibabacloud.com/blog/alibaba-cloud-launches-tongyi-qianwen-2-0-and-industry-specific-models-to-support-customers-reap-benefits-of-generative-ai_600526,,,,,"""Tongyi Qianwen 2.0, a generic LLM with a few hundreds of billions of parameters""",,,,,Unspecified unreleased,,,,,,,,,,"Alibaba Cloud, the digital technology and intelligence backbone of Alibaba Group, today announced the launch of Tongyi Qianwen 2.0, its latest large language model (LLM), along with new industry-specific models at its annual flagship tech event Apsara Conference. This release signifies another significant progress in Alibaba Cloud's pursuit of cutting-edge AI innovation and its ongoing commitment to fuel digital transformation in businesses.",,API access,,Unknown,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Mi:dm 200B,Language,KT,Industry,,2023-10-31,,https://genielabs.ai/midm/about,,,,200000000000.0,200B,1.1999999999999999e+24,,,6ND=1000000000000*200000000000.00*6=1.2 × 10^24,,,1000000000000.0,Mi:dm is the first Korean LLM trained on over 1 trillion tokens.,,,,,,,"TL;DR:
KT Corp introduces Mi:dm, a massive AI model aimed at diverse sectors.
Mi:dm is the first Korean LLM trained on over 1 trillion tokens.
It offers four models, from basic to large, with up to 200 billion parameters.
KT plans to share Mi:dm’s foundational model with other companies.
Three advanced technologies reduce AI hallucinations by up to 70%.
Collaborations with AI startups, including Upstage, aim to conquer the global generative AI market.",,API access,,Confident,2025-02-14 21:01:59+00:00,Korea (Republic of),,,,,,,,,
Skywork-13B,Language,Kunlun Inc.,Industry,"Tianwen Wei, Liang Zhao, Lichang Zhang, Bo Zhu, Lijie Wang, Haihua Yang, Biye Li, Cheng Cheng, Weiwei Lü, Rui Hu, Chenxia Li, Liu Yang, Xilin Luo, Xuejie Wu, Lunan Liu, Wenjun Cheng, Peng Cheng, Jianhao Zhang, Xiaoyu Zhang, Lei Lin, Xiaokun Wang, Yutuan Ma, Chuanhai Dong, Yanqi Sun, Yifu Chen, Yongyi Peng, Xiaojuan Liang, Shuicheng Yan, Han Fang, Yahui Zhou",2023-10-30,Skywork: A More Open Bilingual Foundation Model,https://arxiv.org/abs/2310.19341,75.0,SOTA improvement,"""We show that our model not only excels on popular benchmarks, but also achieves state of the art performance in Chinese language modeling on diverse domains""",13000000000.0,13B,2.5e+23,,,"""Our Skywork-13B is trained on a cluster of 64 NVIDIA-HGX-A800 nodes, a total of 512 A800-80G SXM GPUs... The training process of Skywork-13B spanned a total of 39 days.""

They note that ""we achieved a token throughput of 1873 per GPU per second and a model flops utilization (MFU) of 56.5%... "". 

""MFU"" was coined in the Palm paper (https://arxiv.org/pdf/2204.02311.pdf) and only counts operations used to train the model, not all operations observed on the hardware. MFU is lower than traditionally measured utilization.

Using the 56.5% number, and a peak tensor performance of 623.8 TFLOPS for the A800, this suggests 512 * 623.8 TFLOPS * 39 days * 86400 seconds/day * 0.565 = 6.08e23 FLOP.

Based on C=6ND, with 13B parameters and 3.2T tokens, we have C=6*(13B)*(3.2T)=2.5e23 FLOP.

Since the reported MFU is quite high, and would imply a higher compute usage than 6ND, it seems they may have trained on mixed precision and with the GPUs not always operating in the 623.8 TFLOPS mode.",SkyPile,"""In order to train Skywork-13B, we build SkyPile, a vast, high quality corpus comprising more than 6 trillion tokens. A segment of the corpus, comprising over 150 billion tokens of web text, has been open sourced to facilitate research and training on Chinese LLMs""",3180000000000.0,"The full SkyPile dataset is 6 trillion tokens, roughly half English and half Chinese: (https://huggingface.co/Skywork/Skywork-13B-base).

The model is trained for the equivalent of 0.53 epochs on the full dataset, or 3.18 trillion unique tokens. This is around 2.78 trillion words, based on an average of 1 word/token for the Chinese portion and 0.75 word/token on the English portion.",1.0,940.0,39 days,NVIDIA A800,512.0,,"In this technical report, we present Skywork-13B, a family of large language models (LLMs) trained on a corpus of over 3.2 trillion tokens drawn from both English and Chinese texts. This bilingual foundation model is the most extensively trained and openly published LLMs of comparable size to date. We introduce a two-stage training methodology using a segmented corpus, targeting general purpose training and then domain-specific enhancement training, respectively. We show that our model not only excels on popular benchmarks, but also achieves state of the art performance in Chinese language modeling on diverse domains. Furthermore, we propose a novel leakage detection method, demonstrating that test data contamination is a pressing issue warranting further investigation by the LLM community. To spur future research, we release Skywork-13B along with checkpoints obtained during intermediate stages of the training process. We are also releasing part of our SkyPile corpus, a collection of over 150 billion tokens of web text, which is the largest high quality open Chinese pre-training corpus to date. We hope Skywork-13B and our open corpus will serve as a valuable open-source resource to democratize access to high-quality LLMs.",,Open weights (restricted use),0.565,Confident,2025-02-14 21:02:32+00:00,China,,,,,,,16000000.0,Table 3,
ChatGLM3-6B,"Multimodal,Language,Vision",Zhipu AI,Industry,"Aohan Zeng, Bin Xu, Bowen Wang, Chenhui Zhang, Da Yin, Diego Rojas, Guanyu Feng, Hanlin Zhao, Hanyu Lai, Hao Yu, Hongning Wang, Jiadai Sun, Jiajie Zhang, Jiale Cheng, Jiayi Gui, Jie Tang, Jing Zhang, Juanzi Li, Lei Zhao, Lindong Wu, Lucen Zhong, Mingdao Liu, Minlie Huang, Peng Zhang, Qinkai Zheng, Rui Lu, Shuaiqi Duan, Shudan Zhang, Shulin Cao, Shuxun Yang, Weng Lam Tam, Wenyi Zhao, Xiao Liu, Xiao Xia, Xiaohan Zhang, Xiaotao Gu, Xin Lv, Xinghan Liu, Xinyi Liu, Xinyue Yang, Xixuan Song, Xunkai Zhang, Yifan An, Yifan Xu, Yilin Niu, Yuantao Yang, Yueyan Li, Yushi Bai, Yuxiao Dong, Zehan Qi, Zhaoyu Wang, Zhen Yang, Zhengxiao Du, Zhenyu Hou, Zihan Wang",2023-10-27,Zhipu AI launches third-generation base model,https://www.zhipuai.cn/en/news/76,,SOTA improvement,"Aiming at GPT-4V, ChatGLM3 has implemented iterative upgrades of several new functions this time, including:

CogVLM with multi-modal understanding capabilities, looks at image semantics, and achieved SOTA on more than 10 international standard image and text evaluation data sets;",6000000000.0,6B from https://arxiv.org/abs/2406.12793,5.04e+22,,,"Highly speculative.
Assume 1 epoch on 1.4T tokens.
6 FLOP/token/param * 1.4T tokens * 6B params=50.4 * 10 ^(12+9) = 5.04*10^(22)",Unspecified unreleased,ChatGLM2 corpus pretraining plus human preference alignment training,1400000000000.0,"""ChatGLM-6B was pre-trained on approximately one trillion tokens of Chinese and English corpus""
""By further realizing more diverse training datasets, more sufficient training steps, and more optimized training strategies, ChatGLM3-6B topped 42 benchmarks across semantics, mathematics, reasoning, code, and knowledge.""
The ChatGLM website states that the latest ChatGLM service is based on (and upgraded from) ChatGLM2, which was trained on 1.4T tokens. Assume that ChatGLM3 is trained on at least the same number of tokens.
Sources:
https://chatglm.cn/
https://github.com/THUDM/ChatGLM2-6B/blob/main/README_EN.md
https://www.zhipuai.cn/en/news/76

here (https://github.com/Kwai-Kolors/Kolors/blob/master/imgs/Kolors_paper.pdf) they confirm the dataset size ""Consequently, in Kolors, we utilize the open-source ChatGLM3-6B-Base as text encoder, which has been pre-trained with over 1.4 trillion bilingual tokens, resulting in a robust capability for Chinese language understanding.""",,,,,,,"On October 27, 2023, at the 2023 China Computer Conference (CNCC), Zhipu AI launched the fully self-developed third-generation large base model ChatGLM3 and related series of products.",,Open weights (restricted use),,Likely,2025-02-03 16:44:50+00:00,China,,,,,,,,,True
CODEFUSION (Python),Language,"Microsoft,Microsoft Research","Industry,Industry","Mukul Singh, José Cambronero, Sumit Gulwani, Vu Le, Carina Negreanu, Gust Verbruggen",2023-10-26,CODEFUSION: A Pre-trained Diffusion Model for Code Generation,https://arxiv.org/abs/2310.17680 (was withdrawn),17.0,SOTA improvement,"See Table 1, SOTA in Python code generation",75000000.0,Table 1,7.92e+18,,,"V100 performance: 125 teraFLOPS according to https://www.nvidia.com/en-us/data-center/v100/

11 hours * 4 GPUs * 125 teraFLOPS/GPU * 0.40 utilization = 7.92e18 FLOP",,,4390400.0,"Section A3, Table 5: for python, 56k samples with an average length of 78.4 tokens",,11.0,"""The system used to run the experiments uses an Intel Core i7 processor (base at 1.8 GHz) along with 4 V100 GPU units, a 64-bit operating system, and 56 GB RAM. CODEFUSION took 8 hours to pre-train and 3 hours to fine-tune on average for each dataset.""",NVIDIA V100,4.0,Self-supervised learning,"Imagine a developer who can only change their last line of code, how often would they have to start writing a function from scratch before it is correct? Auto-regressive models for code generation from natural language have a similar limitation: they do not easily allow reconsidering earlier tokens generated. We introduce CodeFusion, a pre-trained diffusion code generation model that addresses this limitation by iteratively denoising a complete program conditioned on the encoded natural language. We evaluate CodeFusion on the task of natural language to code generation for Bash, Python, and Microsoft Excel conditional formatting (CF) rules. Experiments show that CodeFusion (75M parameters) performs on par with state-of-the-art auto-regressive systems (350M-175B parameters) in top-1 accuracy and outperforms them in top-3 and top-5 accuracy due to its better balance in diversity versus quality.",,,,Confident,2025-02-14 21:02:38+00:00,"United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
DiT-XL/2 + CADS,Image generation,ETH Zurich,Academia,"Seyedmorteza Sadat, Jakob Buhmann, Derek Bradley, Otmar Hilliges, Romann M. Weber",2023-10-26,CADS: Unleashing the Diversity of Diffusion Models through Condition-Annealed Sampling,https://arxiv.org/abs/2310.17347v2,,SOTA improvement,"""Further, using an existing pretrained diffusion model, CADS achieves a new state-of-the-art FID of 1.70 and 2.31 for class-conditional ImageNet generation at 256×256 and 512×512 respectively""",675000000.0,original parameter count for DiT-XL/2,,,,,ImageNet,,,,,,,,,,"While conditional diffusion models are known to have good coverage of the data distribution, they still face limitations in output diversity, particularly when sampled with a high classifier-free guidance scale for optimal image quality or when trained on small datasets. We attribute this problem to the role of the conditioning signal in inference and offer an improved sampling strategy for diffusion models that can increase generation diversity, especially at high guidance scales, with minimal loss of sample quality. Our sampling strategy anneals the conditioning signal by adding scheduled, monotonically decreasing Gaussian noise to the conditioning vector during inference to balance diversity and condition alignment. Our Condition-Annealed Diffusion Sampler (CADS) can be used with any pretrained model and sampling algorithm, and we show that it boosts the diversity of diffusion models in various conditional generation tasks. Further, using an existing pretrained diffusion model, CADS achieves a new state-of-the-art FID of 1.70 and 2.31 for class-conditional ImageNet generation at 256×256 and 512×512 respectively.",,,,Likely,2024-09-05 18:08:31+00:00,Switzerland,DiT-XL/2,,,,,,,,
QMoE: compressed SwitchTransformer,Language,"Institute of Science and Technology Austria (ISTA),Neural Magic","Academia,Industry","Elias Frantar, Dan Alistarh",2023-10-25,QMoE: Practical Sub-1-Bit Compression of Trillion-Parameter Models,https://arxiv.org/abs/2310.16795,15.0,,,1571000000000.0,"""Concretely, QMoE can compress the 1.6 trillion parameter SwitchTransformer-c2048 model to less than 160GB""
Same parameter count as base model. This paper compresses the model; there is no learning from data.",,,,,C4,"In this paper, the authors compress the SwitchTransformer-c2048 model. There is no training dataset used.",576000000000.0,"In this paper, the authors compress the SwitchTransformer-c2048 model. There is no training dataset used.",,,,NVIDIA RTX A6000,,,"Mixture-of-Experts (MoE) architectures offer a general solution to the high inference costs of large language models (LLMs) via sparse routing, bringing faster and more accurate models, at the cost of massive parameter counts. For example, the SwitchTransformer-c2048 model has 1.6 trillion parameters, requiring 3.2TB of accelerator memory to run efficiently, which makes practical deployment challenging and expensive. In this paper, we present a solution to this memory problem, in form of a new compression and execution framework called QMoE. Specifically, QMoE consists of a scalable algorithm which accurately compresses trillion-parameter MoEs to less than 1 bit per parameter, in a custom format co-designed with bespoke GPU decoding kernels to facilitate efficient end-to-end compressed inference, with minor runtime overheads relative to uncompressed execution. Concretely, QMoE can compress the 1.6 trillion parameter SwitchTransformer-c2048 model to less than 160GB (20x compression, 0.8 bits per parameter) at only minor accuracy loss, in less than a day on a single GPU. This enables, for the first time, the execution of a trillion-parameter model on affordable commodity hardware, like a single server with 4x NVIDIA A6000 or 8x NVIDIA 3090 GPUs, at less than 5% runtime overhead relative to ideal uncompressed inference. The source code and compressed models are available at github.com/IST-DASLab/qmoe.",,Open weights (unrestricted),,Confident,2025-01-16 04:25:00+00:00,"Austria,United States of America",Switch,1.0033632e+18,"(1) * (38.71 * 10 ** 12) * (0.3) * (24 * 3600) = 1003363200000000000
(num gpu) * (peak flop) * (assumed utilization rate) * (time in seconds)
from the paper: ""This allows us to apply data-dependent compression to massive MoEs, while preserving the key feature of post-training
compression techniques: the ability to perform effective
compression using only modest computational resources,
e.g., a single NVIDIA A6000 GPU and less than one day of
compute.""
A6000 have 38.71 TFLOPs from https://www.techpowerup.com/gpu-specs/rtx-a6000.c3686",,,,,,
Xinghan Foundation Model,"Multimodal,Video,Language,Vision",Dahua Technology,Industry,,2023-10-25,Dahua Announces Think# 2.0 Strategy to Accelerate Innovation for a Digital Intelligent Future,https://www.prnewswire.com/news-releases/dahua-announces-think-2-0-strategy-to-accelerate-innovation-for-a-digital-intelligent-future-301967122.html,,,,,,,,,,,,,,,,,,,,"At the summit, Dahua's ""Xinghan"" Foundation Model was launched. With video as the core, this multimodal fusion industry foundation model catapults the accuracy and generalization of AI algorithms, with breakthroughs in visual cognition capabilities, independent analysis of various scenarios, and efficient fulfillment of massive fragmented needs, especially urban governance and power industry applications.",,,,Unknown,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Zephyr 7B,Language,Hugging Face,Industry,"Lewis Tunstall, Edward Beeching, Nathan Lambert, Nazneen Rajani, Kashif Rasul, Younes Belkada, Shengyi Huang, Leandro von Werra, Clémentine Fourrier, Nathan Habib, Nathan Sarrazin, Omar Sanseviero, Alexander M. Rush, Thomas Wolf",2023-10-25,Zephyr: Direct Distillation of LM Alignment,https://arxiv.org/abs/2310.16944,,,,7000000000.0,7B,,,,,"UltraChat,UltraFeedback",,,,3.0,4.0,"""All experiments were run on 16 A100s using bfloat16 precision
and typically took 2-4 hours to complete.""",NVIDIA A100,16.0,,"We aim to produce a smaller language model that is aligned to user intent. Previous research has shown that applying distilled supervised fine-tuning (dSFT) on larger models significantly improves task accuracy; however, these models are unaligned, i.e. they do not respond well to natural prompts. To distill this property, we experiment with the use of preference data from AI Feedback (AIF). Starting from a dataset of outputs ranked by a teacher model, we apply distilled direct preference optimization (dDPO) to learn a chat model with significantly improved intent alignment. The approach requires only a few hours of training without any additional sampling during fine-tuning. The final result, Zephyr-7B, sets the state-of-the-art on chat benchmarks for 7B parameter models, and requires no human annotation. In particular, results on MT-Bench show that Zephyr-7B surpasses Llama2-Chat-70B, the best open-access RLHF-based model. Code, models, data, and tutorials for the system are available at this https URL.",,Open weights (unrestricted),,Confident,2024-12-02 16:17:04+00:00,"Multinational,United States of America",Mistral 7B,2.156544e+19,312000000000000*16*4*3600*0.3 = 2.156544e+19,,,,,,
Spark 3.0,Language,iFlytek,Industry,,2023-10-24,,https://www.gizmochina.com/2023/10/26/iflytek-spark-3-0-vs-openai-gpt/,,,"""One such claim comes from Chinese company iFlytek, which asserts that its latest large language model, Spark 3.0, surpasses OpenAI’s GPT-3.5 in Chinese language tasks while demonstrating comparable performance in English contexts""",,,,,,"""The company said that Spark 3.0 has been trained on a dataset of 1.2 trillion words and code, and that it can perform a variety of tasks, including text generation, language understanding, knowledge answering, logical reasoning, mathematical computation, code generation, and multimodal interaction."" https://www.gizmochina.com/2023/10/26/iflytek-spark-3-0-vs-openai-gpt/",,,1200000000000.0,"""Spark 3.0 has been trained on a dataset of 1.2 trillion words and code""",,,,,,,,,,,Likely,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Stockmark-13B,Language,Stockmark,Industry,,2023-10-23, stockmark/stockmark-13b,https://huggingface.co/stockmark/stockmark-13b,,,,13200000000.0,13.2B from https://huggingface.co/stockmark/stockmark-13b,1.716e+22,,,"6ND = 6*13B*220B = 17160000000000000000000
""Stockmark-13b is a 13 billion parameter LLM pretrained from scratch based on Japanese corpus of about 220B tokens. This model is developed by Stockmark Inc.""
","CC100,mC4,Wikipedia (ja),Common Crawl (ja)", Training dataset section from https://huggingface.co/stockmark/stockmark-13b,220000000000.0,220B tokens,,,,,,Self-supervised learning,,,Open weights (unrestricted),,Likely,2025-02-14 21:02:45+00:00,Japan,,,,,,,,,
DALL·E 3,Image generation,OpenAI,Industry,"James Betker, Gabriel Goh, Li Jing, Tim Brooks, Jianfeng Wang, Linjie Li, Long Ouyang, Juntang Zhuang, Joyce Lee, Yufei Guo, Wesam Manassra, Prafulla Dhariwal, Casey Chu, Yunxin Jiao, Aditya Ramesh",2023-10-19,Improving Image Generation with Better Captions,https://cdn.openai.com/papers/dall-e-3.pdf,622.0,SOTA improvement,,,,,,,,Unspecified unreleased,,,,,,,,,,"We show that prompt following abilities of text-to-image models can be substantially improved by training on highly descriptive generated image captions.
Existing text-to-image models struggle to follow detailed image descriptions and often ignore words or confuse the meaning of prompts. We hypothesize that this issue stems from noisy and inaccurate image captions in the training dataset. We address this by training a bespoke image captioner and use it to recaption the training dataset. We then train several text-to-image models and find that training on these synthetic captions reliably improves prompt following ability. Finally, we use these findings to build DALL-E 3: a new text-to-image generation system, and benchmark its performance on an evaluation designed to measure prompt following, coherence, and aesthetics, finding that it compares favorably to competitors. We publish samples and code for these evaluations so that future research can continue optimizing this important aspect of text-to-image systems.",,API access,,Unknown,2025-02-03 16:46:08+00:00,United States of America,,,,,,,,,True
KwaiYiiMath,Language,Kuaishou Technology,Industry,"Jiayi Fu, Lei Lin, Xiaoyang Gao, Pengli Liu, Zhengzong Chen, Zhirui Yang, Shengnan Zhang, Xue Zheng, Yan Li, Yuliang Liu, Xucheng Ye, Yiqiao Liao, Chao Liao, Bin Chen, Chengru Song, Junchen Wan, Zijia Lin, Fuzheng Zhang, Zhongyuan Wang, Di Zhang, Kun Gai",2023-10-19,KwaiYiiMath: Technical Report,https://arxiv.org/abs/2310.07488,,,,13000000000.0,13B - from Table 2,,,,,"GSM8K,Unspecified unreleased","""We chose a sample from the train set of GSM8k.""

""we first collect math data from a wide range of sources, including different difficulties (e.g., primary school, middle school, and university, etc.),
and different fields of math (e.g., algebra, geometry, and probability, etc.). Then, we generate intermediate rationales for math questions only with the final answer or without the answer using open-source LLMs and ensure the correctness of intermediate rationales and answers through manual annotation""",,,,,,,,,"Recent advancements in large language models (LLMs) have demonstrated remarkable abilities in handling a variety of natural language processing (NLP) downstream tasks, even on mathematical tasks requiring multi-step reasoning. In this report, we introduce the KwaiYiiMath which enhances the mathematical reasoning abilities of KwaiYiiBase1, by applying Supervised Fine-Tuning (SFT) and Reinforced Learning from Human Feedback (RLHF), including on both English and Chinese mathematical tasks. Meanwhile, we also constructed a small-scale Chinese primary school mathematics test set (named KMath), consisting of 188 examples to evaluate the correctness of the problem-solving process generated by the models. Empirical studies demonstrate that KwaiYiiMath can achieve state-of-the-art (SOTA) performance on GSM8k, CMath, and KMath compared with the similar size models, respectively. ",,Unreleased,,Confident,2024-09-05 18:08:31+00:00,China,KwaiYii 13B,,,,,,,,
ERNIE 4.0,"Multimodal,Language,Video,Image generation",Baidu,Industry,,2023-10-17,"Baidu Launches ERNIE 4.0 Foundation Model, Leading a New Wave of AI-Native Applications",https://www.prnewswire.com/news-releases/baidu-launches-ernie-4-0-foundation-model-leading-a-new-wave-of-ai-native-applications-301958681.html,,Significant use,"Likely SOTA for Mandarin? But very little info available.

Lots of users (https://www.cnn.com/2023/12/15/tech/gpt4-china-baidu-ernie-ai-comparison-intl-hnk/index.html):

""Baidu says ERNIE has racked up 70 million users. That’s compared with 150 million users for ChatGPT, according to an estimate from Similarweb, a digital data and analytics company.""",,"""similar architecture with 3.5 version""  -interpreter dub at 01:25:08 https://www.youtube.com/watch?v=wYozcsavRuM",,,,may be mentioned here https://www.youtube.com/watch?v=wYozcsavRuM,,may be mentioned here https://www.youtube.com/watch?v=wYozcsavRuM,,,,,,,,,"Baidu, Inc. (NASDAQ: BIDU and HKEX: 9888), a leading AI company with strong Internet foundation, today hosted its annual flagship technology conference Baidu World 2023 in Beijing, marking the conference's return to an offline format after four years. With the theme ""Prompt the World,"" this year's Baidu World conference saw Baidu launch ERNIE 4.0, Baidu's next-generation and most powerful foundation model offering drastically enhanced core AI capabilities. Baidu also showcased some of its most popular applications, solutions, and products re-built around the company's state-of-the-art generative AI.                                                                               

Robin Li, Co-founder, Chairman and CEO of Baidu, announced ERNIE 4.0 at Baidu World 2023
""ERNIE 4.0 has achieved a full upgrade with drastically improved performance in understanding, generation, reasoning, and memory,"" Robin Li, Co-founder, Chairman and CEO of Baidu, said at the event. ""These four core capabilities form the foundation of AI-native applications and have now unleashed unlimited opportunities for new innovations.""

",,,,Unknown,2025-01-30 03:03:25+00:00,China,,,,,,,,,True
Fuyu-8B,"Multimodal,Language,Vision",Adept,Industry,"Rohan Bavishi, Erich Elsen, Curtis Hawthorne, Maxwell Nye, Augustus Odena, Arushi Somani, Sağnak Taşırlar",2023-10-17,Fuyu-8B: A Multimodal Architecture for AI Agents,"https://www.adept.ai/blog/fuyu-8b, www.huggingface.co/adept/fuyu-8b",,,"""The Fuyu models perform well according to these metrics, even though they are heavily focused on natural images. Fuyu-8B improves over QWEN-VL and PALM-e-12B on 2 out of 3 metrics despite having 2B and 4B fewer parameters, respectively.""",8000000000.0,"8B

Also a ""Fuyu-medium"" with unstated param count (<56B: ""Fuyu-Medium performs comparably to PALM-E-562B despite having fewer than a tenth as many parameters"")",,,,,,,,,,,,,,,"We’re releasing Fuyu-8B, a small version of the multimodal1 model that powers our product. The model is available on HuggingFace. We think Fuyu-8B is exciting because:

It has a much simpler architecture and training procedure than other multi-modal models, which makes it easier to understand, scale, and deploy.
It’s designed from the ground up for digital agents, so it can support arbitrary image resolutions, answer questions about graphs and diagrams, answer UI-based questions, and do fine-grained localization on screen images.
It’s fast - we can get responses for large images in less than 100 milliseconds.
Despite being optimized for our use-case, it performs well at standard image understanding benchmarks such as visual question-answering and natural-image-captioning.",,Open weights (non-commercial),,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Aquila2 34B,Language,Beijing Academy of Artificial Intelligence / BAAI,Academia,,2023-10-13,,"https://github.com/FlagAI-Open/Aquila2
https://huggingface.co/BAAI/Aquila2-34B",,,,34000000000.0,"34B
safetensors say it is 18.2B params

There's also a 70B ""experimental"" version: https://github.com/FlagAI-Open/Aquila2",,,,"6ND = 6*34000000000*2000000000000=4.08e+23

'Likely' confidence because unknown number of epochs, dataset size and number of parameters are not certain.",Unspecified unreleased,,2000000000000.0,"""we have investigated all 2 trillion tokens of data"" from https://github.com/FlagAI-Open/Aquila2",,,,,,,"We announce that our Aquila2 series is now open source, comprising Aquila2 (the base language models: Aquila2-7B, Aquila2-34B and Aquila2-70B-Expr) and AquilaChat2 (the chat models, namely AquilaChat2-7B, AquilaChat2-34B and AquilaChat2-70B-Expr, as well as the long-text chat models, namely AquilaChat2-7B-16k and AquilaChat2-34B-16k). You can find the links in the following table. Kindly click on them to access the model cards.",,Open weights (unrestricted),,Likely,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Table-GPT,Language,Microsoft Research,Industry,"Peng Li, Yeye He, Dror Yashar, Weiwei Cui, Song Ge, Haidong Zhang, Danielle Rifinski Fainman, Dongmei Zhang, Surajit Chaudhuri",2023-10-13,Table-GPT: Table-tuned GPT for Diverse Table Tasks,https://arxiv.org/abs/2310.09263,44.0,,Likely the best model for the table-tasks the authors tested on. No standard benchmark though.,175000000000.0,,,,,,,"Fine-tuning data was synthesized examples of tables:

""In our default settings, we use a total of 14 types of table-tasks, listed as T-5 to T-18 in Table 2, as training data for table-tuning.
In all but two task-types (T-6: Entity Matching and T-12: NL-toSQL), we use synthesized instances of table-tasks. For each task type, we generate 1000 instances of table-tasks using a 50:50 mix of zero-shot and few-shot templates, following a synthesis-thenaugment approach described in Section 4""

14000 instances in total",,,,,,,,,"Language models, such as GPT-3.5 and ChatGPT, demonstrate remarkable abilities to follow diverse human instructions and perform a wide range of tasks. However, when probing language models using a range of basic table-understanding tasks, we observe that today's language models are still sub-optimal in many table-related tasks, likely because they are pre-trained predominantly on \emph{one-dimensional} natural-language texts, whereas relational tables are \emph{two-dimensional} objects.
In this work, we propose a new ""\emph{table-tuning}"" paradigm, where we continue to train/fine-tune language models like GPT-3.5 and ChatGPT, using diverse table-tasks synthesized from real tables as training data, with the goal of enhancing language models' ability to understand tables and perform table tasks. We show that our resulting Table-GPT models demonstrate (1) better \emph{table-understanding} capabilities, by consistently outperforming the vanilla GPT-3.5 and ChatGPT, on a wide-range of table tasks, including holdout unseen tasks, and (2) strong \emph{generalizability}, in its ability to respond to diverse human instructions to perform new table-tasks, in a manner similar to GPT-3.5 and ChatGPT.",,Unreleased,,Confident,2024-11-01 14:05:35+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",GPT-3.5,,"They fine-tuned GPT-3.5 and ChatGPT-3.5 on roughly 14k examples of tables. Not sure how many tokens per instance.

""Training tasks and data. In our default settings, we use a total of
14 types of table-tasks, listed as T-5 to T-18 in Table 2, as training
data for table-tuning.
In all but two task-types (T-6: Entity Matching and T-12: NL-toSQL), we use synthesized instances of table-tasks. For each task type, we generate 1000 instances of table-tasks using a 50:50 mix of zero-shot and few-shot templates, following a synthesis-thenaugment approach described in Section 4""",,,,,,
RT-2-X,Robotics,Google DeepMind,Industry,Open X-Embodiment Collaboration,2023-10-13,Open X-Embodiment: Robotic Learning Datasets and RT-X Models,https://arxiv.org/abs/2310.08864,255.0,SOTA improvement,"""Emergent skills evaluation. To investigate the transfer
of knowledge across robots, we conduct experiments with
the Google Robot, assessing the performance on tasks like
the ones shown in Fig. 5. These tasks involve objects and
skills that are not present in the RT-2 dataset but occur in the
Bridge dataset [95] for a different robot (the WidowX robot).
Results are shown in Table II, Emergent Skills Evaluation
column. Comparing rows (1) and (2), we find that RT-2-X
outperforms RT-2 by ∼ 3×, suggesting that incorporating
data from other robots into the training improves the range
of tasks that can be performed even by a robot that already
has large amounts of data available. Our results suggest that
co-training with data from other platforms imbues the RT-2-
X controller with additional skills for the platform that are
not present in that platform’s original dataset.""",55000000000.0,55B,,,,,Open X-Embodiment,"""The Open X-Embodiment Dataset contains 1M+ real robot
trajectories spanning 22 robot embodiments, from single
robot arms to bi-manual robots and quadrupeds. The dataset
was constructed by pooling 60 existing robot datasets from
34 robotic research labs around the world and converting
them into a consistent data format for easy download and
usage. We use the RLDS data format [119], which saves data
in serialized tfrecord files and accommodates the various
action spaces and input modalities of different robot setups,
such as differing numbers of RGB cameras, depth cameras
and point clouds. It also supports efficient, parallelized data
loading in all major deep learning frameworks. For more
details about the data storage format and a breakdown of all
60 datasets, see robotics-transformer-x.github.io.""

""Note that the robotics data mixture used in our experiments includes 9 embodiments which is fewer than the entire Open X-Embodiment dataset
(22) – the practical reason for this difference is that we have
continued to extend the dataset over time, and at the time
of the experiments, the dataset above represented all of the
data""",,,,,,,,,"Large, high-capacity models trained on diverse datasets have shown remarkable successes on efficiently tackling downstream applications. In domains from NLP to Computer Vision, this has led to a consolidation of pretrained models, with general pretrained backbones serving as a starting point for many applications. Can such a consolidation happen in robotics? Conventionally, robotic learning methods train a separate model for every application, every robot, and even every environment. Can we instead train generalist X-robot policy that can be adapted efficiently to new robots, tasks, and environments? In this paper, we provide datasets in standardized data formats and models to make it possible to explore this possibility in the context of robotic manipulation, alongside experimental results that provide an example of effective X-robot policies. We assemble a dataset from 22 different robots collected through a collaboration between 21 institutions, demonstrating 527 skills (160266 tasks). We show that a high-capacity model trained on this data, which we call RT-X, exhibits positive transfer and improves the capabilities of multiple robots by leveraging experience from other platforms. More details can be found on the project website this https URL.",,Unreleased,,Confident,2024-11-01 14:05:35+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",RT-2,,"""RT-2-X is trained via
co-fine-tuning (similarly to the original RT-2 [9]), with an approximately one to one split of the original VLM data
and the robotics data mixture. N""

RT-2 is in turn a fine-tune of Pali-X 55B",,,,,,
Jiutian,Language,China Mobile,Industry,,2023-10-12,,https://www.globaltimes.cn/page/202310/1299716.shtml,,,,13900000000.0,"A 13.9B parameter model is mentioned prominently at
https://jiutian.10086.cn/portal/#/home
2025-01-13.",1.668e+23,,,6*13.9e9*2e12=1.668e23,,,2000000000000.0,"""Designed to enhance efficiency, the model has trained over 2 trillion tokens""",,,,,,,"China Mobile, the largest telecom operator in the world by subscribers, unveiled its ""Jiutian"" artificial intelligence (AI) large-scale model on Thursday, which has reportedly won support from large enterprises including China Ocean Shipping (Group) Co and China Railway Construction Co.",,,,Likely,2025-02-14 21:02:49+00:00,China,,,,,,,,,
Ferret (13B),"Multimodal,Language,Vision","Columbia University,Apple","Academia,Industry","Haoxuan You, Haotian Zhang, Zhe Gan, Xianzhi Du, Bowen Zhang, Zirui Wang, Liangliang Cao, Shih-Fu Chang, Yinfei Yang",2023-10-11,Ferret: Refer and Ground Anything Anywhere at Any Granularity,https://arxiv.org/abs/2310.07704,193.0,SOTA improvement,"claimed SOTA on a new benchmark ""To evaluate this new capability, we introduce Ferret-Bench, covering three new types of tasks: Referring Description, Referring Reasoning, and Grounding in Conversation. We benchmark existing MLLMs and observe that Ferret can outperform the best of them by 20.4% on average.""",13000000000.0,13B,,,,"Fine-tuned from Vicuna-13B, which we don't have an estimate for. Finetuning cost is ~4e19.

""Training Details. We initialize the image encoder with CLIP-ViT-L/14@336p, the LLM with Vicuna, and the projection layer with LLaVA’s first-stage weights, leaving the visual sampler randomly initialized. After the initialization, Ferret is trained on the aforementioned GRIT data for three epochs, optimized by Loshchilov & Hutter (2017) with a learning rate of 2e − 5 and a batch size of 128. The training takes ∼5/2.5 days on 8 A100 GPU for a Ferret-13B/7B.""

5 * 24 * 3600 * 0.3 utilization (assumption) * 312 TFLOP/s = 4.04e19",GRIT,"""In order to make the refer-and-ground capability in Ferret open-vocabulary, instruction-following, and robust, we collect GRIT, a Ground-and-Refer Instruction-Tuning dataset with 1.1M samples. GRIT contains multiple levels of spatial knowledge, covering objects, relationships, region descriptions, and complex reasoning. It includes both text-in location-out (grounding) and location-in textout (referring) data, as well as data that mixes location and text in both input and output""",,,3.0,120.0,"""The training takes ∼5/2.5 days on 8 A100 GPU for a Ferret-13B/7B.""",NVIDIA A100,8.0,,"We introduce Ferret, a new Multimodal Large Language Model (MLLM) capable of understanding spatial referring of any shape or granularity within an image and accurately grounding open-vocabulary descriptions. To unify referring and grounding in the LLM paradigm, Ferret employs a novel and powerful hybrid region representation that integrates discrete coordinates and continuous features jointly to represent a region in the image. To extract the continuous features of versatile regions, we propose a spatial-aware visual sampler, adept at handling varying sparsity across different shapes. Consequently, Ferret can accept diverse region inputs, such as points, bounding boxes, and free-form shapes. To bolster the desired capability of Ferret, we curate GRIT, a comprehensive refer-and-ground instruction tuning dataset including 1.1M samples that contain rich hierarchical spatial knowledge, with 95K hard negative data to promote model robustness. The resulting model not only achieves superior performance in classical referring and grounding tasks, but also greatly outperforms existing MLLMs in region-based and localization-demanded multimodal chatting. Our evaluations also reveal a significantly improved capability of describing image details and a remarkable alleviation in object hallucination.",,Open weights (non-commercial),,Confident,2024-11-01 14:05:35+00:00,"United States of America,United States of America",Vicuna-13B v0,4.04e+19,"""The training takes ~5 days on 8 A100 GPU for a Ferret-13B""

5 * 24 * 3600 * 0.3 utilization (assumption) * 312 TFLOP/s = 4.04e19",,,,,,
Mistral 7B,Language,Mistral AI,Industry,"Albert Q. Jiang, Alexandre Sablayrolles, Arthur Mensch, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Florian Bressand, Gianna Lengyel, Guillaume Lample, Lucile Saulnier, Lélio Renard Lavaud, Marie-Anne Lachaux, Pierre Stock, Teven Le Scao, Thibaut Lavril, Thomas Wang, Timothée Lacroix, William El Sayed",2023-10-10,Mistral 7B,https://arxiv.org/abs/2310.06825,1244.0,,frequently downloaded: https://huggingface.co/mistralai/Mistral-7B-v0.1 ,7000000000.0,,,,,,Unspecified unreleased,"""Unfortunately we're unable to share details about the training and the datasets (extracted from the open Web) due to the highly competitive nature of the field.""",,,,,,,,,"We introduce Mistral 7B v0.1, a 7-billion-parameter language model engineered for superior performance and efficiency. Mistral 7B outperforms Llama 2 13B across all evaluated benchmarks, and Llama 1 34B in reasoning, mathematics, and code generation. Our model leverages grouped-query attention (GQA) for faster inference, coupled with sliding window attention (SWA) to effectively handle sequences of arbitrary length with a reduced inference cost. We also provide a model fine-tuned to follow instructions, Mistral 7B -- Instruct, that surpasses the Llama 2 13B -- Chat model both on human and automated benchmarks. Our models are released under the Apache 2.0 license.",,Open weights (unrestricted),,Speculative,2025-02-06 00:22:33+00:00,France,,,,,,,,,
CodeFuse-13B,Language,Ant Group,Industry,"Peng Di, Jianguo Li, Hang Yu, Wei Jiang, Wenting Cai, Yang Cao, Chaoyu Chen, Dajun Chen, Hongwei Chen, Liang Chen, Gang Fan, Jie Gong, Zi Gong, Wen Hu, Tingting Guo, Zhichao Lei, Ting Li, Zheng Li, Ming Liang, Cong Liao, Bingchang Liu, Jiachen Liu, Zhiwei Liu, Shaojun Lu, Min Shen, Guangpei Wang, Huan Wang, Zhi Wang, Zhaogui Xu, Jiawei Yang, Qing Ye, Gehao Zhang, Yu Zhang, Zelin Zhao, Xunjin Zheng, Hailian Zhou, Lifu Zhu, Xianying Zhu",2023-10-10,CodeFuse-13B: A Pretrained Multi-lingual Code Large Language Model,https://arxiv.org/abs/2310.06266,3.0,,"""The results demonstrate that CodeFuse-13B achieves a HumanEval pass@1 score of 37.10%, positioning it as one of the top multi-lingual code LLMs with similar parameter sizes""",13000000000.0,,3.09e+23,,,"""CodeFuse-13B was trained using 512 Nvidia A100 GPU cards, with
a Hardware FLOPs Utilization (HFU) of approximately 60%. The
training process took approximately 40 days to complete."" Later they state utilization of 56%

512 * 312 trillion * 40 * 24 * 3600 * 0.56 = 3.09e23

Using params*tokens, we have 13 billion * 1 trillion * 6 = 7.8e22. might be a sign of multiple epochs? 1T is the size of the dataset; they don't clearly state the number of training tokens","The Stack,GitHub","80% code, 10% English, 10% Chinese: ""The pre-training data for CodeFuse consists of 196TB of code, 1.75TB of Chinese raw data, and 1.7TB of English raw data, totaling 200TB, that are tokenized into 800 billion
tokens of code, 100 billion tokens of Chinese corpus, and 100 billion
tokens of English corpus (see Section 3.1).""

""We collected about 200+ TB of code-related data, and finally refined it to around 1.6TB (1T Token) of clean data suitable for pre-training.""",1000000000000.0,"1T tokens, mostly code but some Chinese/English",,960.0,~40 days,NVIDIA A100 SXM4 80 GB,512.0,,"Code Large Language Models (Code LLMs) have gained significant attention in the industry due to their wide applications in the full lifecycle of software engineering. However, the effectiveness of existing models in understanding non-English inputs for multi-lingual code-related tasks is still far from well studied. This paper introduces CodeFuse-13B, an open-sourced pre-trained code LLM. It is specifically designed for code-related tasks with both English and Chinese prompts and supports over 40 programming languages. CodeFuse achieves its effectiveness by utilizing a high quality pre-training dataset that is carefully filtered by program analyzers and optimized during the training process. Extensive experiments are conducted using real-world usage scenarios, the industry-standard benchmark HumanEval-x, and the specially designed CodeFuseEval for Chinese prompts. To assess the effectiveness of CodeFuse, we actively collected valuable human feedback from the AntGroup's software development process where CodeFuse has been successfully deployed. The results demonstrate that CodeFuse-13B achieves a HumanEval pass@1 score of 37.10%, positioning it as one of the top multi-lingual code LLMs with similar parameter sizes. In practical scenarios, such as code generation, code translation, code comments, and testcase generation, CodeFuse performs better than other models when confronted with Chinese prompts.",,Open weights (unrestricted),0.56,Confident,2025-02-14 21:03:10+00:00,China,,,,,,,16777216.0,"4096 batch size, 4096 sequence length",
CELLE-2,Biology,"Chan Zuckerberg Initiative,University of California San Francisco,University of California (UC) Berkeley","Research collective,Academia,Academia","Emaad Khwaja, Yun Song, Aaron Agarunov, Bo Huang",2023-10-10,CELL-E 2: Translating Proteins to Pictures and Back with a Bidirectional Text-to-Image Transformer,https://proceedings.neurips.cc/paper_files/paper/2023/hash/0fb7c02d420c993385c7de44c2b5bf01-Abstract-Conference.html,2.0,,,,,,,,,,,11300001.00000001,"Image tokens: 17,268 × 256 = 4,420,608
Sequence tokens: 17,268 × 400 = 6,907,200
Total: 4,420,608 + 6,907,200 = 11,327,808 (1.13e7)",,,,,,,"We present CELL-E 2, a novel bidirectional transformer that can generate images depicting protein subcellular localization from the amino acid sequences (and vice versa). Protein localization is a challenging problem that requires integrating sequence and image information, which most existing methods ignore. CELL-E 2 extends the work of CELL-E, not only capturing the spatial complexity of protein localization and produce probability estimates of localization atop a nucleus image, but also being able to generate sequences from images, enabling de novo protein design. We train and finetune CELL-E 2 on two large-scale datasets of human proteins. We also demonstrate how to use CELL-E 2 to create hundreds of novel nuclear localization signals (NLS). Results and interactive demos are featured at https://bohuanglab.github.io/CELL-E_2/.",,,,Unverified,2025-01-30 05:04:45+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
RoseTTAFold All-Atom (RFAA),Biology,"University of Washington,Seoul National University,University of Sheffield","Academia,Academia,Academia","Rohith Krishna, Jue Wang, Woody Ahern, Pascal Sturmfels, Preetham Venkatesh, Indrek Kalvet, Gyu Rie Lee, Felix S Morey-Burrows, Ivan Anishchenko, Ian R Humphreys, Ryan McHugh, Dionne Vafeados, Xinting Li, George A Sutherland, Andrew Hitchcock, C Neil Hunter, Minkyung Baek, Frank DiMaio, David Baker",2023-10-09,Generalized Biomolecular Modeling and Design with RoseTTAFold All-Atom,https://www.biorxiv.org/content/10.1101/2023.10.09.561603v1,,,,,,2.14e+20,,,"Supplementary material: ""This took 8 days on 8 NVIDIA A6000 GPUs.""
8*3.87E+13*60*60*24*8","PDB (Protein Data Bank),Cambridge Structural Dataset","More than a PLM. Models other kinds of molecules too. 

""From the PDB, we curated a protein-biomolecule dataset including protein-small molecule, protein-metal, and covalently modified protein complexes, filtering out common solvents and crystallization additives. Following clustering (30% sequence identity) to avoid bias towards overrepresented structures, we obtained 121,800 protein-small molecule structures in 5,662
clusters, 112,546 protein-metal complexes in 5,662 clusters, and 12,689 structures with covalently modified amino acids in 1,099 clusters for training. To help the network learn the general properties of small molecules rather than features specific to the molecules in the PDB, we supplemented the training set with small molecule crystal structures from the Cambridge
Structural Database(12).""",110000000.99999984,"Datasets:
121,800 + 112,546 + 12,689 + 21,000 + 6,016 + 25,000 = 298,051 ≈ 300,000 structures

Tokens per structure:
300 residues + 30 atoms = 330 tokens (used 375 tokens as upper estimate)

Final calculation:
300,000 structures × 375 tokens/structure = 1.125 × 10⁸ tokens ≈ 1.1 × 10⁸ tokens",,,,,,,"Although AlphaFold2 (AF2) and RoseTTAFold (RF) have transformed structural biology by enabling high-accuracy protein structure modeling, they are unable to model covalent modifications or interactions with small molecules and other non-protein molecules that can play key roles in biological function. Here, we describe RoseTTAFold All-Atom (RFAA), a deep network capable of modeling full biological assemblies containing proteins, nucleic acids, small molecules, metals, and covalent modifications given the sequences of the polymers and the atomic bonded geometry of the small molecules and covalent modifications. Following training on structures of full biological assemblies in the Protein Data Bank (PDB), RFAA has comparable protein structure prediction accuracy to AF2, excellent performance in CAMEO for flexible backbone small molecule docking, and reasonable prediction accuracy for protein covalent modifications and assemblies of proteins with multiple nucleic acid chains and small molecules which, to our knowledge, no existing method can model simultaneously. By fine-tuning on diffusive denoising tasks, we develop RFdiffusion All-Atom (RFdiffusionAA), which generates binding pockets by directly building protein structures around small molecules and other non-protein molecules. Starting from random distributions of amino acid residues surrounding target small molecules, we design and experimentally validate proteins that bind the cardiac disease therapeutic digoxigenin, the enzymatic cofactor heme, and optically active bilin molecules with potential for expanding the range of wavelengths captured by photosynthesis. We anticipate that RFAA and RFdiffusionAA will be widely useful for modeling and designing complex biomolecular systems.",,Open weights (unrestricted),,,2025-02-14 21:03:18+00:00,"United States of America,Korea (Republic of),United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
FinGPT-13B,Language,"University of California Los Angeles (UCLA),Columbia University,New York University (NYU)","Academia,Academia,Academia","Neng Wang, Hongyang Yang, Christina Dan Wang",2023-10-07,FinGPT: Instruction Tuning Benchmark for Open-Source Large Language Models in Financial Datasets,https://arxiv.org/abs/2310.04793; https://github.com/AI4Finance-Foundation/FinGPT,33.0,SOTA improvement,SOTA for financial sentiment analysis,13000000000.0,"Finetunes using LoRA, so only trains 3.67 million parameters",1.6e+23,,,From Llama 2-13B,,Financial sentiment data (for fine-tuning): https://huggingface.co/datasets/FinGPT/fingpt-sentiment-train,,,,17.25,https://github.com/AI4Finance-Foundation/FinGPT?tab=readme-ov-file,NVIDIA GeForce RTX 3090,1.0,Supervised,"In the swiftly expanding domain of Natural Language Processing (NLP), the potential of GPT-based models for the financial sector is increasingly evident. However, the integration of these models with financial datasets presents challenges, notably in determining their adeptness and relevance. This paper introduces a distinctive approach anchored in the Instruction Tuning paradigm for open-source large language models, specifically adapted for financial contexts. Through this methodology, we capitalize on the interoperability of open-source models, ensuring a seamless and transparent integration. We begin by explaining the Instruction Tuning paradigm, highlighting its effectiveness for immediate integration. The paper presents a benchmarking scheme designed for end-to-end training and testing, employing a cost-effective progression. Firstly, we assess basic competencies and fundamental tasks, such as Named Entity Recognition (NER) and sentiment analysis to enhance specialization. Next, we delve into a comprehensive model, executing multi-task operations by amalgamating all instructional tunings to examine versatility. Finally, we explore the zero-shot capabilities by earmarking unseen tasks and incorporating novel datasets to understand adaptability in uncharted terrains. Such a paradigm fortifies the principles of openness and reproducibility, laying a robust foundation for future investigations in open-source financial large language models (FinLLMs).",,Open weights (unrestricted),,Likely,2025-02-19 18:36:12+00:00,"United States of America,United States of America,United States of America",Llama 2-13B,6.532488e+17,"fine-tuned Llama 2 13B

RTX 3090 for 17 hours, at a cost of $17

35.5 trillion flops * 17 * 3600 * 0.3 = 6.532488e+17",,,,,,
NAEPro,Biology,"University of California Santa Barbara (UCSB),Massachusetts Institute of Technology (MIT),Carnegie Mellon University (CMU)","Academia,Academia,Academia","Zhenqiao Song, Yunlong Zhao, Wenxian Shi, Yang Yang, Lei Li",2023-10-06,Functional Geometry Guided Protein Sequence and Backbone Structure Co-Design,https://arxiv.org/abs/2310.04343,,,,,,1.6999999999999936e+17,,,"1. Hardware setup: 1x NVIDIA RTX A6000 (3.87e13 FLOP/s per GPU, fp16_non_tensor)

2. Training duration: 11,010 seconds (≈3.06 hours) - estimated from:
   - 8,808 proteins / 8 batch size = 1,101 steps per epoch
   - 1,101 steps × 100 epochs = 110,100 total steps
   - Assumed 0.1s per step → 110,100 × 0.1s = 11,010s

3. Utilization rate: 40%

4. Final calculation:
   3.87e13 FLOP/s × 1 GPU × 11,010s × 0.4 = 1.7e17 FLOPs",,,2100000.9999999986,"β-lactamase calculation: 5,427 proteins × 286 residues = 1,552,122 residues
Myoglobin calculation: 3,381 proteins × 153 residues = 517,143 residues
Total datapoints: 1,552,122 + 517,143 = 2,069,265 residues (≈ 2.1e6)",,,,,,,"Proteins are macromolecules responsible for essential functions in almost all living organisms. Designing reasonable proteins with desired functions is crucial. A protein’s sequence and structure are strongly correlated and they together determine its function. In this paper, we propose NAEPro, a model to jointly design Protein sequence and structure based on automatically detected functional and conserved sites. NAEPro is powered by an interleaving network of attention and equivariant layers, which can capture global correlation in a whole sequence and local influence from nearest amino acids in three dimensional (3D) space. Such an architecture facilitates effective yet economic message passing at two levels. We evaluate our model and several strong baselines on two protein datasets, β-lactamase and myoglobin. Experimental results show that our model achieves the highest binding affinity scores among the top-5, top-10 and top-30 candidates. These findings prove the capability of our model to design functional proteins. Furthermore, in-depth analysis further confirms our model’s ability to generate highly effective proteins capable of binding to their target metallocofactors1.",,,,Unverified,2025-02-14 21:05:13+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
FoldFlow,Biology,"McGill University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),Dreamfold,University of Montreal / Université de Montréal,University of Oxford","Academia,Academia,Industry,Academia,Academia","Avishek Joey Bose, Tara Akhound-Sadegh, Guillaume Huguet, Kilian Fatras, Jarrid Rector-Brooks, Cheng-Hao Liu, Andrei Cristian Nica, Maksym Korablyov, Michael Bronstein, Alexander Tong",2023-10-03,SE(3) Stochastic Flow Matching for Protein Backbone Generation,https://arxiv.org/abs/2310.02391,41.0,,,,,1.1000000000000008e+20,,,"1. Hardware: 4x NVIDIA A100-80GB GPUs (3.12e14 FLOP/s per GPU)
2. Training duration: 2.5 days = 216,000 seconds (directly provided)
3. Utilization rate: 40%
4. Calculation: 3.12e14 FLOP/s × 4 GPUs × 216,000s × 0.40 = 1.1e20 FLOP",,,16000000.999999998,"PDB Dataset: 22,248 proteins × 200 residues = 4,449,600 tokens
MD Dataset: 200,000 frames × 58 residues = 11,600,000 tokens
Total: 4,449,600 + 11,600,000 = 16,049,600 tokens (1.6 × 10⁷)",,,,,,,"The computational design of novel protein structures has the potential to impact numerous scientific disciplines greatly. Toward this goal, we introduce FOLDFLOW a series of novel generative models of increasing modeling power based on the flow-matching paradigm over 3D rigid motions—i.e. the group SE(3)—enabling accurate modeling of protein backbones. We first introduce FOLDFLOW-BASE a simulation-free approach to learning deterministic continuous-time dynamics and matching invariant target distributions on SE(3). We next accelerate training by incorporating Riemannian optimal transport to create FOLDFLOW-OT leading to the construction of both more simple and stable flows. Finally, we design FOLDFLOW-SFM coupling both Riemannian OT and simulation-free training to learn stochastic continuous-time dynamics over SE(3). Our family of FOLDFLOW generative models offers several key advantages over previous approaches to the generative modeling of proteins: they are more stable and faster to train than diffusion-based approaches, and our models enjoy the ability to map any invariant source distribution to any invariant target distribution over SE(3). Empirically, we validate FOLDFLOW on protein backbone generation of up to 300 amino acids leading to high-quality designable, diverse, and novel samples.",,,,Unverified,2025-02-14 21:05:25+00:00,"Canada,Canada,Canada,Canada,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
LLaMA-7B (protein-oriented instruction-tuned),"Language,Biology",Zhejiang University,Academia,"Yin Fang, Xiaozhuan Liang, Ningyu Zhang, Kangwei Liu, Rui Huang, Zhuo Chen, Xiaohui Fan, Huajun Chen",2023-10-02,Mol-Instructions: A Large-Scale Biomolecular Instruction Dataset for Large Language Models,https://arxiv.org/abs/2306.08018,54.0,,,7000000000.0,In the name,2.78e+22,,,"Estimate 1: 1T tokens * 6.7B parameters * 6 FLOP/token/parameter = 4e22 FLOP

from paper, Llama-7B took 82,432 GPU hours using A100s
Estimate 2: 312 trillion FLOP/s * (82,432 * 3600) s * 0.3 = 2.78e22 FLOP",Mol instructions,"""we introduce Mol-Instructions, a comprehensive instruction dataset designed for the biomolecular domain. Mol-Instructions encompasses three key components: molecule-oriented instructions, protein-oriented instructions, and biomolecular text instructions""",204000001.00000012,"Data estimate summary:
* Instructions: 2,043,587
* Tokens per instruction: 100 
* Total = 2,043,587 × 100 = 2.04e8 tokens",,,,,,,"Large Language Models (LLMs), with their remarkable task-handling capabilities and innovative outputs, have catalyzed significant advancements across a spectrum of fields. However, their proficiency within specialized domains such as biomolecular studies remains limited. To address this challenge, we introduce MolInstructions, a comprehensive instruction dataset designed for the biomolecular domain. Mol-Instructions encompasses three key components: molecule-oriented instructions, protein-oriented instructions, and biomolecular text instructions. Each component aims to improve the understanding and prediction capabilities of LLMs concerning biomolecular features and behaviors. Through extensive instruction tuning experiments on LLMs, we demonstrate the effectiveness of Mol-Instructions in enhancing large models’ performance in the intricate realm of biomolecular studies, thus fostering progress in the biomolecular research community. Mol-Instructions is publicly available for ongoing research and will undergo regular updates to enhance its applicability.",,Open weights (unrestricted),,Confident,2025-01-30 05:04:33+00:00,China,LLaMA-7B,,,,,,,,
MiniGPT4 (Vicuna finetune),"Language,Vision,Multimodal",King Abdullah University of Science and Technology (KAUST),Academia,"Deyao Zhu, Jun Chen, Xiaoqian Shen, Xiang Li, Mohamed Elhoseiny",2023-10-02,MiniGPT-4: Enhancing Vision-Language Understanding with Advanced Large Language Models,https://arxiv.org/abs/2304.10592,,,,13000000000.0,13B as Vicuna,,,,,"LAION,Conceptual Captions 12M (CC12M),SBU",,,"""We train MiniGPT-4 with two stages. The first traditional pretraining stage is trained using roughly 5 million aligned image-text pairs""

""we propose a novel way to create high-quality image-text pairs by the model itself and ChatGPT together. Based on this, we then create a small (3500 pairs in total) yet high-quality dataset.
The second finetuning stage is trained on this dataset in a conversation template to significantly improve its generation reliability and overall usability.""",,10.0,,NVIDIA A100,4.0,,"The recent GPT-4 has demonstrated extraordinary multi-modal abilities, such as directly generating websites from handwritten text and identifying humorous elements within images. These features are rarely observed in previous vision-language models. However, the technical details behind GPT-4 continue to remain undisclosed. We believe that the enhanced multi-modal generation capabilities of GPT-4 stem from the utilization of sophisticated large language models (LLM). To examine this phenomenon, we present MiniGPT-4, which aligns a frozen visual encoder with a frozen advanced LLM, Vicuna, using one projection layer. Our work, for the first time, uncovers that properly aligning the visual features with an advanced large language model can possess numerous advanced multi-modal abilities demonstrated by GPT-4, such as detailed image description generation and website creation from hand-drawn drafts. Furthermore, we also observe other emerging capabilities in MiniGPT-4, including writing stories and poems inspired by given images, teaching users how to cook based on food photos, and so on. In our experiment, we found that the model trained on short image caption pairs could produce unnatural language outputs (e.g., repetition and fragmentation). To address this problem, we curate a detailed image description dataset in the second stage to finetune the model, which consequently improves the model's generation reliability and overall usability. Our code, pre-trained model, and collected dataset are available at this https URL.",,Open weights (unrestricted),,Confident,2024-12-02 15:20:15+00:00,Saudi Arabia,Vicuna-13B v0,1.34784e+19,"Our MiniGPT-4 only requires training approximately 10 hours on 4 A100 GPUs

4*312000000000000 peak FLOPs * 10*3600*0.3=1.34784e+19",,,,,,
Phi-1,Language,Microsoft Research,Industry,"Suriya Gunasekar, Yi Zhang, Jyoti Aneja, Caio César Teodoro Mendes, Allie Del Giorno, Sivakanth Gopi, Mojan Javaheripi, Piero Kauffmann, Gustavo de Rosa, Olli Saarikivi, Adil Salim, Shital Shah, Harkirat Singh Behl, Xin Wang, Sébastien Bubeck, Ronen Eldan, Adam Tauman Kalai, Yin Tat Lee, Yuanzhi Li",2023-10-02,Textbooks Are All You Need,https://arxiv.org/abs/2306.11644,,,,1300000000.0,"1.3B
The architecture for our 1.3B parameter phi-1 model consists of 24 layers, hidden dimension of 2048, MLP-inner dimension of 8192, and 32 attention heads of dimension 64 each.",3.3234195e+20,,,"6ND = 6 *1.3*10^9 parameters * 51 * 10^9 tokens = 3.978e+20

312000000000000 FLOP/s * 8 GPUs *103 hours *3600 sec / hour *0.3 [assumed utilization] = 2.7765504e+20

geometric mean sqrt(2.7765504e+20*3.978e+20) = 3.3234195e+20
","The Stack,StackOverflow","selection of ``textbook quality"" data from the web (6B tokens) and synthetically generated textbooks and exercises with GPT-3.5 (1B tokens). ",7180000000.0,"A filtered code-language dataset, which is a subset of The Stack and StackOverflow, obtained by using a language model-based classifier (consisting of about 6B tokens).
• A synthetic textbook dataset consisting of <1B tokens of GPT-3.5 generated Python textbooks.
• A small synthetic exercises dataset consisting of ∼180M tokens of Python exercises and solutions

For the 1.3B models, phi-1 and phi-1-base are checkpoints
after training on 51B tokens (770 GPU hours)

Training tokens: 54B tokens (7B unique tokens)",7.3,103.0,"4 days on 8 A100s

""Finetuning to obtain phi-1 used an additional 7 hours on the same hardware""

4*24 + 7 =103 hours",NVIDIA A100,8.0,,"We introduce phi-1, a new large language model for code, with significantly smaller size than competing models: phi-1 is a Transformer-based model with 1.3B parameters, trained for 4 days on 8 A100s, using a selection of ``textbook quality"" data from the web (6B tokens) and synthetically generated textbooks and exercises with GPT-3.5 (1B tokens). Despite this small scale, phi-1 attains pass@1 accuracy 50.6% on HumanEval and 55.5% on MBPP. It also displays surprising emergent properties compared to phi-1-base, our model before our finetuning stage on a dataset of coding exercises, and phi-1-small, a smaller model with 350M parameters trained with the same pipeline as phi-1 that still achieves 45% on HumanEval.",,Open weights (unrestricted),,Confident,2025-03-05 16:26:05+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
New Intelligent Q&A,,,,,2023-10-02,"AIGC新资讯：脉脉上线ChatGPT问答能力，AI真的能帮我们求职吗？
",https://maimai.cn/article/detail?fid=1772490696&efid=877mstTqdcjFmkFxmte9Kg,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
CTM (CIFAR-10),Image generation,"Stanford University,Sony","Academia,Industry","Dongjun Kim, Chieh-Hsin Lai, Wei-Hsiang Liao, Naoki Murata, Yuhta Takida, Toshimitsu Uesaka, Yutong He, Yuki Mitsufuji, Stefano Ermon",2023-10-01,Consistency Trajectory Models: Learning Probability Flow ODE Trajectory of Diffusion,https://arxiv.org/abs/2310.02279v1,108.0,SOTA improvement,"""CTM... achieves new state-of-the-art FIDs for single-step diffusion model sampling on CIFAR-10 (FID 1.73)""",,,,,,"Almost certainly <1e23 FLOP due to the small scale experiments.

""We use 4×V100 (16G) GPUs for CIFAR-10 experiment""
100K training iterations
",CIFAR-10,,60000.0,100K training iterations / 60K images in the training dataset = 1.7 epochs,1.7,,,NVIDIA V100,4.0,,"Consistency Models (CM) (Song et al., 2023) accelerate score-based diffusion model sampling at the cost of sample quality but lack a natural way to trade-off quality for speed. To address this limitation, we propose Consistency Trajectory Model (CTM), a generalization encompassing CM and score-based models as special cases. CTM trains a single neural network that can -- in a single forward pass -- output scores (i.e., gradients of log-density) and enables unrestricted traversal between any initial and final time along the Probability Flow Ordinary Differential Equation (ODE) in a diffusion process. CTM enables the efficient combination of adversarial training and denoising score matching loss to enhance performance and achieves new state-of-the-art FIDs for single-step diffusion model sampling on CIFAR-10 (FID 1.73) and ImageNet at 64X64 resolution (FID 2.06). CTM also enables a new family of sampling schemes, both deterministic and stochastic, involving long jumps along the ODE solution trajectories. It consistently improves sample quality as computational budgets increase, avoiding the degradation seen in CM. Furthermore, CTM's access to the score accommodates all diffusion model inference techniques, including exact likelihood computation.",,,,Unknown,2025-01-17 20:10:57+00:00,"United States of America,Japan",,,,,,,128.0,,
TinyLlama-1.1B (3T token checkpoint),Language,Singapore University of Technology & Design,Academia,"Peiyuan Zhang, Guangtao Zeng, Tianduo Wang, Wei Lu",2023-10-01,TinyLlama: An Open-Source Small Language Model,https://arxiv.org/abs/2401.02385,219.0,,,1100000000.0,1.1B,2.173796352e+22,,,"6ND approximation: 6*1.1B * 3T = 19800000000000000000000
Extrapolation from the 1T checkpoint:
flops = (16) * (312 * 10**12) * (3 * 30 * 24 * 3600) * (0.56) = 7245987840000001048576
(num gpu) * (peak flops) * (time in seconds) * (reported utilization rate)

source: https://github.com/jzhang38/TinyLlama
""Thanks to those optimizations, we achieve a throughput of 24k tokens per second per A100-40G GPU, which translates to 56% model flops utilization""
and Releases Schedule from the same link","SlimPajama,StarCoderData",Slimpajama & Starcoderdata from Training Details from https://github.com/jzhang38/TinyLlama,1000000000000.0,1T tokens checkpoint so around 0.75T words,3.0,2160.0,"1T checkpoint was released after 1 month. Assume the 3T checkpoint took 3 months.

source: https://github.com/jzhang38/TinyLlama",NVIDIA A100 SXM4 40 GB,16.0,Self-supervised learning,"We present TinyLlama, a compact 1.1B language model pretrained on around 1 trillion tokens for approximately 3 epochs. Building on the architecture and tokenizer of Llama 2, TinyLlama leverages various advances contributed by the open-source community (e.g., FlashAttention), achieving better computational efficiency. Despite its relatively small size, TinyLlama demonstrates remarkable performance in a series of downstream tasks. It significantly outperforms existing open-source language models with comparable sizes. Our model checkpoints and code are publicly available on GitHub at https://github.com/jzhang38/TinyLlama",,Open weights (unrestricted),0.56,Confident,2024-11-24 20:36:55+00:00,Singapore,,,,,,,2000000.0,,
BITTERS,Vision,"LG,Shutterstock","Industry,Industry","Taehoon Kim, Mark Marsden, Pyunghwan Ahn, Sangyun Kim, Sihaeng Lee, Alessandra Sala, Seung Hwan Kim",2023-10-01,Large-Scale Bidirectional Training for Zero-Shot Image Captioning,https://arxiv.org/abs/2211.06774,,,,650000000.0, BITTERS has 650 million parameters in total.,7.8015e+17,,,"WaveVAE: 
""We train the model for 10 epochs with batch size 3840.""
""We reduced the number of parameters to 25 million in total""

25000*100000000*6*10=1.5e+14

BiART:
""We train our model for 2 epochs in total with batch size 1280""
""BITTERS has 650 million parameters in total""

650000000*100000000*6*2=7.8e+17

7.8e+17+1.5e+14=7.8015e+17",ShutterStock,"All images are random sampled from Shutterstock’s1
image catalog. Images are 500px on the longest side with a
single ground truth caption provided. A list of keywords is
also included for each image to enable keyword extraction
model training. All captions and keywords are in English
and were moderated for hate speech, slurs, and expletives",100000000.0,"we train BITTERS using a new, quality-controlled 100 million image dataset which we will refer to as Text Image Pairs 100 Million (TIP100M)

WaveVAE module
We also resize each image to 256 × 256 × 3 
We train the model for 3 epochs with a batch size of 480

Batch size: 1280
Number of updates: 2 epochs
Image resolution: 256x256
Sequence length: 64 text tokens, 1024 image tokens",,,,,,,"When trained on large-scale datasets, image captioning models can understand the content of images from a general domain but often fail to generate accurate, detailed captions. To improve performance, pretraining-and-finetuning has been a key strategy for image captioning. However, we find that large-scale bidirectional training between image and text enables zero-shot image captioning. In this paper, we introduce Bidirectional Image Text Training in largER Scale, BITTERS, an efficient training and inference framework for zero-shot image captioning. We also propose a new evaluation benchmark which comprises of high quality datasets and an extensive set of metrics to properly evaluate zero-shot captioning accuracy and societal bias. We additionally provide an efficient finetuning approach for keyword extraction. We show that careful selection of large-scale training set and model architecture is the key to achieving zero-shot image captioning.",,,,Likely,2025-02-14 21:05:56+00:00,"Korea (Republic of),United States of America",,,,,,,,,
PIXART-α,Image generation,"Huawei Noah's Ark Lab,The University of Hong Kong,Hong Kong University of Science and Technology","Industry,Academia,Academia","Junsong Chen, Jincheng Yu, Chongjian Ge, Lewei Yao, Enze Xie, Yue Wu, Zhongdao Wang, James Kwok, Ping Luo, Huchuan Lu, Zhenguo Li",2023-09-30,PIXART-α: Fast Training of Diffusion Transformer for Photorealistic Text-to-Image Synthesis,"https://arxiv.org/abs/2310.00426
https://openreview.net/pdf?id=eAKmQPe3m1
https://github.com/PixArt-alpha/PixArt-alpha",,,,600000000.0,0.6B,1.541475e+21,,,"PixArt-α only takes 12% of Stable Diffusion v1.5's training time (753 vs. 6,250 A100 GPU days), saving nearly $300,000 ($28,000 vs. $320,000) and reducing 90% CO2 emissions. Moreover, compared with a larger SOTA model, RAPHAEL, our training cost is merely 1%.
To ensure fairness, we convert the V100 GPU days (1656) of our training to A100 GPU days (753)

they compare their compute with Imagen as 7132:753 (see Table 2)
Imagen compute was 1.4600000000000002e+22 FLOPS (from Epoch table) then PIXART-α is
(1.4600000000000002e+22/7132)*753=1.541475e+21 FLOPS (the most likely)

Another calculation: 

753 A100 GPU days (most likely A100 SXM4 80 GB)
753 days * 24 hours * 3600 s * 77970000000000 FLOPS/s (assume FP16) * 40% utilization rate = 2.0290663296e+21 FLOPS
753 days * 24 hours * 3600 s * 312000000000000 FLOPS/s (assume FP16 Tensor core) * 40% utilization rate = 8.11938816e+21 FLOPS (unlikely)

1656 V100 GPU days 
1656*24*3600*125000000000000 (assume Tensor float 32)*40%=7.15392e+21 FLOPS (unlikely)
1656*24*3600*31330000000000 (assume the most popular NVIDIA Tesla V100 DGXS 32 GB FP16)*40% = 1.7930585088e+21 FLOPS

The count of GPU days excludes the time for data labeling.","Segment Anything 1B,JourneyDB,ImageNet","we propose an autolabeling pipeline utilizing the state-of-the-art vision-language model (LLaVA (Liu et al., 2023)) to
generate captions on the SAM (Kirillov et al., 2023). Referencing in Section 2.4, the SAM dataset is
advantageous due to its rich and diverse collection of objects, making it an ideal resource for creating
high-information-density text-image pairs, more suitable for text-image alignment learning

In the third stage, we construct our training dataset by incorporating JourneyDB (Pan et al., 2023)
and a 10M internal dataset to enhance the aesthetic quality of generated images beyond realistic
photographs.",25000000.0,Table 2,,,,NVIDIA V100,,,"PixArt-α is a Transformer-based T2I diffusion model whose image generation quality is competitive with state-of-the-art image generators (e.g., Imagen, SDXL, and even Midjourney), and the training speed markedly surpasses existing large-scale T2I models, e.g., PixArt-α only takes 10.8% of Stable Diffusion v1.5's training time (675 vs. 6,250 A100 GPU days).",,Open weights (unrestricted),,Unverified,2025-02-19 18:49:55+00:00,"China,Hong Kong,China,Hong Kong,China",,,,,,,,,
StableLM-3B-4E1T,Language,Stability AI,Industry,"Jonathan Tow, Marco Bellagente, Dakota Mahan, Carlos Riquelme Ruiz",2023-09-29,,https://stability.wandb.io/stability-llm/stable-lm/reports/StableLM-3B-4E1T--VmlldzoyMjU4?accessToken=u3zujipenkx5g7rtcj9qojjgxpconyjktjkli2po09nffrffdhhchq045vp0wyfo,,,,2795443200.0,,6.21e+22,,,"""StableLM-3B-4E1T was trained on the Stability AI cluster across 256 NVIDIA A100 40GB GPUs (AWS P4d instances). Training began on August 23, 2023, and took approximately 30 days to complete.""

256 * 30 * 24* 3600 * 312 trillion * 0.3 utilization (assumption) = 6.21e22

6ND = 6*2795443200*1000000000000*4 epochs = 6.7090637e+22","RefinedWeb,RedPajama-Data,The Pile","""The dataset is comprised of a filtered mixture of open-source large-scale datasets available on the HuggingFace Hub: Falcon RefinedWeb extract (Penedo et al., 2023), RedPajama-Data (Together Computer, 2023) and The Pile (Gao et al., 2020), both without the Books3 subset, and StarCoder (Li et al., 2023). The complete list is provided in Table 1.""",1000000000000.0,Trained on 1T tokens (~750B words),4.0,720.0,approximately 30 days,NVIDIA A100,,,"StableLM-3B-4E1T is a 3 billion (3B) parameter language model pre-trained under the multi-epoch regime to study the impact of repeated tokens on downstream performance. Given prior success in this area (Taylor et al., 2022 and Tay et al., 2023), we train on 1 trillion (1T) tokens for 4 epochs following the observations of Muennighoff et al. (2023) in ""Scaling Data-Constrained Language Models"" in which they find ""training with up to 4 epochs of repeated data yields negligible changes to loss compared to having unique data."" Further inspiration for the token count is taken from ""Go smol or go home"" (De Vries, 2023), which suggests a 2.96B model trained for 2.85 trillion tokens achieves a similar loss to a Chinchilla compute-optimal 9.87B language model.",,Open weights (unrestricted),,Confident,2024-10-26 16:37:47+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,4194304.0,"""The batch size is set to 1024 (4,194,304 tokens).""",
Amazon Titan,"Language,Image generation",Amazon,Industry,,2023-09-28,,https://aws.amazon.com/bedrock/titan/,,Training cost,,200000000000.0,"200B dense model
https://importai.substack.com/p/import-ai-365-wmd-benchmark-amazon",4.7999999999999996e+24,,9.899999999999999e+24,"trained using NVIDIA NeMo: https://blogs.nvidia.com/blog/nemo-amazon-titan/

13,760 NVIDIA A100 chips (using 1,720 P4d nodes). It took 48 days to train.
from https://importai.substack.com/p/import-ai-365-wmd-benchmark-amazon

counting operations: 6*200000000000*4000000000000=4.8e+24

gpu usage: 312000000000000(FLOP/s)*0.3*13760*1152*3600=5.3413281792e+24",,,4000000000000.0,"4T tokens of data, based on comments from amazon engineer James Hamilton at a 2024 talk: https://perspectives.mvdirona.com/2024/01/cidr-2024/
Also cited here:
https://lifearchitect.ai/titan/",,1152.0,,NVIDIA A100,13760.0,,,,API access,0.2696,Likely,2025-01-30 02:08:05+00:00,United States of America,,,,,,,,,
PLaMo-13B,Language,Preferred Networks Inc,Industry,"Preferred Networks, Inc",2023-09-28, PLaMo-13B,https://huggingface.co/pfnet/plamo-13b,,,,13000000000.0,,1.17e+23,,,"6ND = 6*13e9*1.5e12=1.17e+23
from https://huggingface.co/pfnet/plamo-13b#model-details

480 GPUs * 30 days [assumed, likely less] * 24 hours * 3600 s * 77970000000000 FLOP/s * 41.0 [reported utilization] = 3.9772934e+24


","C4,Project Gutenberg,RedPajama,mC4,Wikipedia (ja)",from https://huggingface.co/pfnet/plamo-13b#training-dataset,1500000000000.0,"Trained tokens: 1.5T tokens (English: 1.32T tokens, Japanese: 0.18T tokens)
from https://huggingface.co/pfnet/plamo-13b#model-details

0.75*1.32T + 0.18T = 1170000000000
0.75 words per token for English
1 for Japanese ",,720.0,"""We used 60 ABCI A nodes (480 GPUs) for just under a month, and trained the training data with a total of 1.4T tokens with a context length of 4096.""

https://tech.preferred.jp/ja/blog/llm-plamo/",NVIDIA A100 SXM4 40 GB,480.0,Self-supervised learning,,,Open weights (unrestricted),0.41,Confident,2025-02-14 21:06:32+00:00,Japan,,,,,,,,,
Show-1,Video,National University of Singapore,Academia,"David Junhao Zhang, Jay Zhangjie Wu, Jia-Wei Liu, Rui Zhao, Lingmin Ran, Yuchao Gu, Difei Gao, Mike Zheng Shou",2023-09-27,Show-1: Marrying Pixel and Latent Diffusion Models for Text-to-Video Generation,https://arxiv.org/abs/2309.15818,,SOTA improvement,"""Our approach achieves state-of-the-art performance on standard benchmarks including UCF-101 and MSR-VTT.""",,,,,,,WebVid-10M,"""WebVid-10M is a large-scale dataset of short videos with textual descriptions sourced from stock footage sites. The videos are diverse and rich in their content. 10.7M video-caption pairs. 52K total video hours.""",,"WebVid-10M
10.7M video-caption pairs. 52K total video hours.",,,,NVIDIA A100,,,"Significant advancements have been achieved in the realm of large-scale pre-trained text-to-video Diffusion Models (VDMs). However, previous methods either rely solely on pixel-based VDMs, which come with high computational costs, or on latent-based VDMs, which often struggle with precise text-video alignment. In this paper, we are the first to propose a hybrid model, dubbed as Show-1, which marries pixel-based and latent-based VDMs for text-to-video generation. Our model first uses pixel-based VDMs to produce a low-resolution video of strong text-video correlation. After that, we propose a novel expert translation method that employs the latent-based VDMs to further upsample the low-resolution video to high resolution. Compared to latent VDMs, Show-1 can produce high-quality videos of precise text-video alignment; Compared to pixel VDMs, Show-1 is much more efficient (GPU memory usage during inference is 15G vs 72G). We also validate our model on standard video generation benchmarks. Our code and model weights are publicly available at this https URL.",,Open weights (non-commercial),,Unknown,2024-12-10 20:39:03+00:00,Singapore,,,,,,,,,
Emu (Meta),Image generation,Meta AI,Industry,"Xiaoliang Dai, Ji Hou, Chih-Yao Ma, Sam Tsai, Jialiang Wang, Rui Wang, Peizhao Zhang, Simon Vandenhende, Xiaofang Wang, Abhimanyu Dubey, Matthew Yu, Abhishek Kadian, Filip Radenovic, Dhruv Mahajan, Kunpeng Li, Yue Zhao, Vladan Petrovic, Mitesh Kumar Singh, Simran Motwani, Yi Wen, Yiwen Song, Roshan Sumbaly, Vignesh Ramanathan, Zijian He, Peter Vajda, Devi Parikh",2023-09-27,Emu: Enhancing Image Generation Models Using Photogenic Needles in a Haystack,https://ai.meta.com/research/publications/emu-enhancing-image-generation-models-using-photogenic-needles-in-a-haystack/,,,,2800000000.0,"""We use a large U-Net with 2.8B trainable parameters.""",,,,,,,1100000000.0,"""We curate a large internal pre-training dataset consisting of 1.1 billion images to train our model. The model is trained with progressively increasing resolutions""",,,,,,,"Training text-to-image models with web scale image-text
pairs enables the generation of a wide range of visual concepts from text. However, these pre-trained models often
face challenges when it comes to generating highly aesthetic images. This creates the need for aesthetic alignment
post pre-training. In this paper, we propose quality-tuning
to effectively guide a pre-trained model to exclusively generate highly visually appealing images, while maintaining
generality across visual concepts. Our key insight is that
supervised fine-tuning with a set of surprisingly small but
extremely visually appealing images can significantly improve the generation quality. We pre-train a latent diffusion
model on 1.1 billion image-text pairs and fine-tune it with
only a few thousand carefully selected high-quality images.
The resulting model, Emu, achieves a win rate of 82.9%
compared with its pre-trained only counterpart. Compared
to the state-of-the-art SDXLv1.0, Emu is preferred 68.4%
and 71.3% of the time on visual appeal on the standard
PartiPrompts and our Open User Input benchmark based
on the real-world usage of text-to-image models. In addition, we show that quality-tuning is a generic approach that
is also effective for other architectures, including pixel diffusion and masked generative transformer models.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,True
InternLM-XComposer,"Multimodal,Language,Vision",Shanghai AI Lab,Academia,"Pan Zhang, Xiaoyi Dong, Bin Wang, Yuhang Cao, Chao Xu, Linke Ouyang, Zhiyuan Zhao, Haodong Duan, Songyang Zhang, Shuangrui Ding, Wenwei Zhang, Hang Yan, Xinyue Zhang, Wei Li, Jingwen Li, Kai Chen, Conghui He, Xingcheng Zhang, Yu Qiao, Dahua Lin, Jiaqi Wang",2023-09-26,InternLM-XComposer: A Vision-Language Large Model for Advanced Text-image Comprehension and Composition,https://arxiv.org/abs/2309.15112,159.0,,Table 9 and Table 10 suggests that model is better in image selection from GPT4-V based on human preference,7000000000.0,7B from https://huggingface.co/internlm/internlm-xcomposer-vl-7b,5.28e+21,,,"""The training procedure employs a batch size of approximately 15.7 million tokens and spans 8,000 iterations""
6ND = 6 * 7B params * 15.7M tokens/iteration * 8000 iterations = 5.28e21 FLOP","MMC4 / Multimodal C4,Wanjuan,Conceptual Captions (CC3M),LAION-400M,Conceptual Captions 12M (CC12M),Unspecified unreleased,TaiSu","WanJuan, CC 3M, SBU-Caption, LAION400M, CC 12M, In-house Concept data, Multimodal C4, TaiSu, WuKong, LAION-CN - form Table 1",359300000000.0,"from appendix A.1  55.6B English tokens and 22.1B Chineese tokens and 1.1B images.

""images are resized to
a consistent dimension of 224 × 224 and subsequently dissected into patches with a stride of 14. These patches serve
as input tokens""
There are 224^2 / 14^2 = 256 patches (tokens) per image.

So 55.6e9 + 22.1e9 + 256*1.1e9 = 359.3e9",,80.0,from appendix A.1,NVIDIA A100,128.0,Supervised fine-tuning,"We propose InternLM-XComposer, a vision-language large model that enables advanced image-text comprehension and composition. The innovative nature of our model is highlighted by three appealing properties: 1) Interleaved Text-Image Composition: InternLM-XComposer can effortlessly generate coherent and contextual articles that seamlessly integrate images, providing a more engaging and immersive reading experience. Simply provide a writing instruction, and our system will generate the corresponding manuscript. It can intelligently identify the areas in the text where images would enhance the content and automatically insert the most appropriate visual candidates. 2) Comprehension with Rich Multilingual Knowledge: The text-image comprehension is empowered by training on an extensive multi-modal multilingual database with carefully crafted strategies, resulting in a deep understanding of visual content. 3) State-of-the-art Performance: Our model consistently achieves state-of-the-art results across various mainstream benchmarks for vision-language foundational models, including MME Benchmark, MMBench, MMBench-CN, Seed-Bench, CCBench (Chinese Cultural Benchmark), QBench and Tiny LVLM. Owing to the absence of established metrics for quantitatively assessing text-image composition, we have devised a robust evaluation procedure that comprises both human and GPT4-Vision (GPT4-V) to ensure reliability. Notably, our InternLM-XComposer achieves competitive text-image composition scores compared to public solutions, including GPT4-V and GPT3.5. Collectively, InternLM-XComposer seamlessly blends advanced text-image comprehension and composition, revolutionizing vision-language interaction and offering new insights and opportunities. The InternLM-XComposer model series are publicly available at this https URL. ",,Open weights (restricted use),0.4590678418803418,Confident,2025-02-07 18:54:04+00:00,China,InternLM,3.45047040001e+21,"flops = (128) * (312 * 10**12) * (80 * 3600) * (0.3) = 3.45e21
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

from section A.1 we have 128xA100 used for 80 hours",,,,,,
GPT-4V,"Multimodal,Vision,Language",OpenAI,Industry,,2023-09-25,GPT-4V(ision) system card,https://cdn.openai.com/papers/GPTV_System_Card.pdf,,Significant use,Incorporated into ChatGPT,,,,,,,Unspecified unreleased,"""The pre-trained model was first trained to predict the next word in a document, using a large dataset of text and image data from the Internet as well as licensed sources of data. It was then fine-tuned with additional data, using an algorithm called reinforcement learning from human feedback (RLHF),[8, 9] to produce outputs that are preferred by human trainers.""",,,,,,,,Reinforcement learning,"GPT-4 with vision (GPT-4V) enables users to instruct GPT-4 to analyze image inputs provided by the user, and is the latest capability we are making broadly available. Incorporating additional modalities (such as image inputs) into large language models (LLMs) is viewed by some as a key frontier in artificial intelligence research and development. Multimodal LLMs offer the possibility of expanding the impact of language-only systems with novel interfaces and capabilities, enabling them to solve new tasks and provide novel experiences for their users. In this system card, we analyze the safety properties of GPT-4V. Our work on safety for GPT-4V builds on the work done for GPT-4 and here we dive deeper into the evaluations, preparation, and mitigation work done specifically for image inputs.",,API access,,Unknown,2025-02-03 19:03:29+00:00,United States of America,GPT-4,,,,,,,,
AlphaMissense,Biology,Google DeepMind,Industry,"Jun Cheng, Guido Novati, Joshua Pan, Clare Bycroft, Akvile ̇Žemgulyte ̇, Taylor Applebaum, Alexander Pritzel, Lai Hong Wong, Michal Zielinski, Tobias Sargeant, Rosalia G. Schneider,Andrew W. Senior, John Jumper, Demis Hassabis, Pushmeet Kohli,Žiga Avsec",2023-09-22,Accurate proteome-wide missense variant effect prediction with AlphaMissense,https://www.science.org/doi/10.1126/science.adg7492,425.0,SOTA improvement,"""By combining structural context and evolutionary conservation, our model achieves state-of-the-art results across a wide range of genetic and experimental benchmarks, all without explicitly training on such data."" [Abstract]",93000000.0,"""The model architecture is similar to that of AlphaFold (21), with minor modifications""
Reference is to the AlphaFold 2 paper; that model had 93 million parameters",,,,"From supplementary materials: ""We independently trained three AlphaFold models and fine-tuned them independently on variants. We followed the training procedure described in (21), (only the “Initial training” stage) ... AF training is carried out for about 7e6 steps on single-chain structures ... Fine-tuning is carried out @until auROC of the evaluation set converges (about 350k samples, each training sample contains maximum 50 variants)""

Table S4 gives details. Total samples seen across the three pretraining models are (7.8M + 7.5M + 5.85M) = 21.15M

Each sequence is cropped to 256 elements long, which suggests 5.4B tokens seen in training.","MGnify,UniRef90","Supplemental materials section on training data lists sources:
75% of pre-training structures are self-distillation data sampled from MGnify and UniRef90.

Fine-tuning data on benign variants come from gnomAD v2.1.1 (1.25M variants), the Great Ape project (95k variants), and FigShare (2k variants).
Fine-tuning data for pathogenic variants are sampled from the missense proteome map to create a dataset with balanced positive and negative labels.
Suggests a total of 2.7M variants, each 256 long.",9000000.0,"7800000 samples - size of training dataset (see Table S4 in supplementary materials)
+1,345,605 variants for fine-tuning (but less could be used)  see Table S1

around 9000000 samples is quite confident estimation",4.0,,,,,,"The vast majority of missense variants observed in the human genome are of unknown clinical significance. We present AlphaMissense, an adaptation of AlphaFold fine-tuned on human and primate variant population frequency databases to predict missense variant pathogenicity. By combining structural context and evolutionary conservation, our model achieves state-of-the-art results across a wide range of genetic and experimental benchmarks, all without explicitly training on such data. The average pathogenicity score of genes is also predictive for their cell essentiality, capable of identifying short essential genes that existing statistical approaches are underpowered to detect. As a resource to the community, we provide a database of predictions for all possible human single amino acid substitutions and classify 89% of missense variants as either likely benign or likely pathogenic.",,Unreleased,,Likely,2024-11-01 14:05:35+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",AlphaFold 2,,,,,,,,
BTLM-3B,Language,Cerebras Systems,Industry,"Nolan Dey, Daria Soboleva, Faisal Al-Khateeb, Bowen Yang, Ribhu Pathria, Hemant Khachane, Shaheer Muhammad, Zhiming (Charles)Chen, Robert Myers, Jacob Robert Steeves, Natalia Vassilieva, Marvin Tom, Joel Hestness",2023-09-20,BTLM-3B-8K: 7B Parameter Performance in a 3B Parameter Model,https://arxiv.org/abs/2309.11568,,,"SOTA for its parameter class: ""BTLM-3B-8K achieves state-of-the-art performance among 3B parameter models""",2600000000.0,"2.6B, per paper",9.8e+21,,,2.6b params * 627b tokens * 6 = 9.8e21,SlimPajama,"""To bolster BTLM’s performance, we create a high quality
627B token dataset called SlimPajama ((Soboleva et al., 2023)). Starting from the 1.21T token RedPajama dataset Computer (2023), we apply filtering and deduplication to improve data quality. First, we remove documents containing fewer than 200 characters, as we find these typically contain only metadata. Next, we perform global deduplication using MinHashLSH (Leskovec et al., 2014) to extensively remove documents with significant overlapping text.""",627000000000.0,"""To bolster BTLM’s performance, we create a high quality 627B token dataset called SlimPajama""",1.0,,,Cerebras CS-2,,,"We introduce the Bittensor Language Model, called ""BTLM-3B-8K"", a new state-of-the-art 3 billion parameter open-source language model. BTLM-3B-8K was trained on 627B tokens from the SlimPajama dataset with a mixture of 2,048 and 8,192 context lengths. BTLM-3B-8K outperforms all existing 3B parameter models by 2-5.5% across downstream tasks. BTLM-3B-8K is even competitive with some 7B parameter models. Additionally, BTLM-3B-8K provides excellent long context performance, outperforming MPT-7B-8K and XGen-7B-8K on tasks up to 8,192 context length. We trained the model on a cleaned and deduplicated SlimPajama dataset; aggressively tuned the \textmu P hyperparameters and schedule; used ALiBi position embeddings; and adopted the SwiGLU nonlinearity.
On Hugging Face, the most popular models have 7B parameters, indicating that users prefer the quality-size ratio of 7B models. Compacting the 7B parameter model to one with 3B parameters, with little performance impact, is an important milestone. BTLM-3B-8K needs only 3GB of memory with 4-bit precision and takes 2.5x less inference compute than 7B models, helping to open up access to a powerful language model on mobile and edge devices. BTLM-3B-8K is available under an Apache 2.0 license on Hugging Face: this https URL.",,Open weights (unrestricted),,Confident,2025-02-14 21:06:47+00:00,Multinational,,,,,,,3932160.0,,
DreamLLM,"Multimodal,Language,Vision,Image generation","Xi’an Jiaotong University,Megvii Inc,Tsinghua University,Huazhong University of Science and Technology","Academia,Industry,Academia,Academia","Runpei Dong, Chunrui Han, Yuang Peng, Zekun Qi, Zheng Ge, Jinrong Yang, Liang Zhao, Jianjian Sun, Hongyu Zhou, Haoran Wei, Xiangwen Kong, Xiangyu Zhang, Kaisheng Ma, Li Yi",2023-09-20,DreamLLM: Synergistic Multimodal Comprehension and Creation,https://arxiv.org/abs/2309.11499,105.0,,,7000000000.0,7B,7.547904e+20,,,"Table 13: 128xA800 GPU for (6+10+1.5) hours

flops = (128) * ( 312 * 10**12) * (17.5 * 3600) * (0.3) = 7.5e20
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)
","LLaVA-Pretrain-595k,MMC4 / Multimodal C4,LLaVA-Instruct-150k,LAION-400M,LAION-COCO,BLIP-LAION","LLaVAPretrain (558K), MMC4 (2M), LLaVAInstruct (80K), BLIP-LAION (8M), BLIP-LAION (2M), InstructMMC4 (20K), LAION400M (11M), Instruct-BLIP-LAION (20K), LAION-COCO (11M) from Table 11",,"from Table 13: 30M pairs image and text, 4M interleaved image-text documents, and 120k instruction examples",1.0,17.5,from Table 11: (6+10+1.5) hours,NVIDIA A800,128.0,,"This paper presents DreamLLM, a learning framework that first achieves versatile Multimodal Large Language Models (MLLMs) empowered with frequently overlooked synergy between multimodal comprehension and creation. DreamLLM operates on two fundamental principles. The first focuses on the generative modeling of both language and image posteriors by direct sampling in the raw multimodal space. This approach circumvents the limitations and information loss inherent to external feature extractors like CLIP, and a more thorough multimodal understanding is obtained. Second, DreamLLM fosters the generation of raw, interleaved documents, modeling both text and image contents, along with unstructured layouts. This allows DreamLLM to learn all conditional, marginal, and joint multimodal distributions effectively. As a result, DreamLLM is the first MLLM capable of generating free-form interleaved content. Comprehensive experiments highlight DreamLLM's superior performance as a zero-shot multimodal generalist, reaping from the enhanced learning synergy. ",,,,Confident,2025-02-14 21:06:54+00:00,"China,China,China,China",,,,,,,,,
GPT-MolBERTa,Biology,Carnegie Mellon University (CMU),Academia,"Suryanarayanan Balaji, Rishikesh Magar, Yayati Jadhav, Amir Barati Farimani",2023-09-20,GPT-MolBERTa: GPT Molecular Features Language Model for molecular property prediction,https://arxiv.org/abs/2310.03030,11.0,,,,,,,,,,,32600001.0,"326,000 molecules × 100 tokens/molecule = 32,600,000 (3.26e7) total tokens",,,,,,,"With the emergence of Transformer architectures and their powerful understanding of textual data, a new horizon has opened up to predict the molecular properties based on text description. While SMILES are the most common form of representation, they are lacking robustness, rich information and canonicity, which limit their effectiveness in becoming generalizable representations. Here, we present GPT-MolBERTa, a self-supervised large language model (LLM) which uses detailed textual descriptions of molecules to predict their properties. A text based description of 326000 molecules were collected using ChatGPT and used to train LLM to learn the representation of molecules. To predict the properties for the downstream tasks, both BERT and RoBERTa models were used in the finetuning stage. Experiments show that GPT-MolBERTa performs well on various molecule property benchmarks, and approaching state of the art performance in regression tasks. Additionally, further analysis of the attention mechanisms show that GPT-MolBERTa is able to pick up important information from the input textual data, displaying the interpretability of the model.",,,,Unverified,2025-01-30 05:04:28+00:00,United States of America,,,,,,,,,
Baichuan 2-7B,,Baichuan,Industry,"Aiyuan Yang, Bin Xiao, Bingning Wang, Borong Zhang, Chao Yin, Chenxu Lv, Da Pan, Dian Wang, Dong Yan, Fan Yang, Fei Deng, Feng Wang, Feng Liu, Guangwei Ai, Guosheng Dong, Haizhou Zhao, Hang Xu, Haoze Sun, Hongda Zhang, Hui Liu, Jiaming Ji, Jian Xie, Juntao Dai, Kun Fang, Lei Su, Liang Song, Lifeng Liu, Liyun Ru, Luyao Ma, Mang Wang, Mickel Liu, MingAn Lin, Nuolan Nie, Peidong Guo, Ruiyang Sun, Tao Zhang, Tianpeng Li, Tianyu Li, Wei Cheng, Weipeng Chen, Xiangrong Zeng, Xiaochuan Wang, Xiaoxi Chen, Xin Men, Xin Yu, Xuehai Pan, Yanjun Shen, Yiding Wang, Yiyu Li, Youxin Jiang, Yuchen Gao, Yupeng Zhang, Zenan Zhou, Zhiying Wu",2023-09-20,"Baichuan 2: Open Large-scale Language Models
",https://arxiv.org/pdf/2309.10305,405.0,,,7000000000.0,,1.092e+23,,,"7b * 2.6t * 6 = 1.092e23
Also mentions 1,024 NVIDIA A800 GPUs at 180 TFLOPS per GPU",,,2600000000000.0,,,,,NVIDIA A800,1024.0,,"In this technical report, we present Baichuan 2, a series of large-scale multilingual language models containing 7 billion and 13 billion parameters, trained from scratch, on 2.6 trillion tokens. ",,,0.5772,Unverified,2025-02-14 21:06:43+00:00,China,,,,,,,,,
bge-reranker-large,Language,"Beijing Academy of Artificial Intelligence / BAAI,Hugging Face","Academia,Industry","Shitao Xiao, Zheng Liu, Peitian Zhang, Niklas Muennighoff",2023-09-14,C-Pack: Packaged Resources To Advance General Chinese Embedding,"https://arxiv.org/abs/2309.07597v2
https://huggingface.co/BAAI/bge-reranker-large",86.0,,,560000000.0,"560M from https://huggingface.co/BAAI/bge-reranker-large
""This reranker is initialized from xlm-roberta-base"" from https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker
",,,,"It is fine tuning of xlm-roberta-base
citation from https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker
""This reranker is initialized from xlm-roberta-base,""
xlm-roberta-base is a dense 279M parameter model. From it's paper, it was trained on 286B multi-lingual tokens https://arxiv.org/pdf/1911.02116
6CN = 6 * 279M * 286B = 4.79e20",MTP,"T2ranking, MMmarco, dulreader, Cmedqa-v2, and nli-zh
msmarco, nq, hotpotqa, NLI, Mr.TyDi

citation from https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker ""This reranker is initialized from xlm-roberta-base, and we train it on a mixture of multilingual datasets:

    Chinese: 788,491 text pairs from T2ranking, MMmarco, dulreader, Cmedqa-v2, and nli-zh
    English: 933,090 text pairs from msmarco, nq, hotpotqa, and NLI
    Others: 97,458 text pairs from Mr.TyDi (including arabic, bengali, english, finnish, indonesian, japanese, korean, russian, swahili, telugu, thai)

In order to enhance the cross-language retrieval ability, we construct two cross-language retrieval datasets bases on MMarco. Specifically, we sample 100,000 english queries to retrieve the chinese passages, and also sample 100,000 chinese queries to retrieve english passages."" ",,"1819039 text pairs
citation from https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker""This reranker is initialized from xlm-roberta-base, and we train it on a mixture of multilingual datasets:

    Chinese: 788,491 text pairs from T2ranking, MMmarco, dulreader, Cmedqa-v2, and nli-zh
    English: 933,090 text pairs from msmarco, nq, hotpotqa, and NLI
    Others: 97,458 text pairs from Mr.TyDi (including arabic, bengali, english, finnish, indonesian, japanese, korean, russian, swahili, telugu, thai)

In order to enhance the cross-language retrieval ability, we construct two cross-language retrieval datasets bases on MMarco. Specifically, we sample 100,000 english queries to retrieve the chinese passages, and also sample 100,000 chinese queries to retrieve english passages."" ",,,,,,,"We introduce C-Pack, a package of resources that significantly advance the field of general Chinese embeddings. C-Pack includes three critical resources. 1) C-MTEB is a comprehensive benchmark for Chinese text embeddings covering 6 tasks and 35 datasets. 2) C-MTP is a massive text embedding dataset curated from labeled and unlabeled Chinese corpora for training embedding models. 3) C-TEM is a family of embedding models covering multiple sizes. Our models outperform all prior Chinese text embeddings on C-MTEB by up to +10% upon the time of the release. We also integrate and optimize the entire suite of training methods for C-TEM. Along with our resources on general Chinese embedding, we release our data and models for English text embeddings. The English models achieve state-of-the-art performance on MTEB benchmark; meanwhile, our released English data is 2 times larger than the Chinese data. All these resources are made publicly available at this https://github.com/FlagOpen/FlagEmbedding",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,"China,Multinational,United States of America",XLM-RoBERTa,,,,,,,,
DeciLM 6B,Language,Deci AI,Industry,DeciAI Research Team,2023-09-13,DeciLM 6B,https://huggingface.co/Deci/DeciLM-6b,,,,5700000000.0,"""DeciLM 6B is a 5.7 billion parameter decoder-only text generation model. """,1.026e+22,,,"assume they used 50% of SlimPajama dataset (300B tokens) - then we are  within 'Likely' confidence interval

6*300B*5700000000=1.026e+22",SlimPajama,"""DeciLM 6B underwent training utilizing a subset of the SlimPajamas dataset"" from https://deci.ai/blog/decilm-15-times-faster-than-llama2-nas-generated-llm-with-variable-gqa/?utm_campaign=repos&utm_source=hugging-face&utm_medium=model-card&utm_content=decilm-6b",,"subset of the SlimPajamas dataset, but we don't know which subset
""DeciLM 6B underwent training utilizing a subset of the SlimPajamas dataset"" from https://deci.ai/blog/decilm-15-times-faster-than-llama2-nas-generated-llm-with-variable-gqa/?utm_campaign=repos&utm_source=hugging-face&utm_medium=model-card&utm_content=decilm-6b",,,,,,,,,Open weights (restricted use),,Likely,2025-02-14 21:07:00+00:00,Israel,,,,,,,,,
Robot Parkour,Robotics,"Shanghai Qi Zhi institute,Stanford University,Carnegie Mellon University (CMU),Tsinghua University","Academia,Academia,Academia","Ziwen Zhuang, Zipeng Fu, Jianren Wang, Christopher Atkeson, Soeren Schwertfeger, Chelsea Finn, Hang Zhao",2023-09-12,Robot Parkour Learning,https://arxiv.org/abs/2309.05665,97.0,SOTA improvement,,500000.0,"Parkour policy details on page 8, table 11.",,,,"The paper provides some details on the training time and hardware used:

Each specialized skill policy (climbing, leaping, etc) was pre-trained with soft dynamics constraints for 12 hours using 1 Nvidia RTX 3090 GPU.
The skills were then fine-tuned with hard dynamics constraints for 6 hours each.
The final parkour policy distillation process used 4 computers with 1 RTX 3090 GPU each, training for an unspecified amount of time.
So the total training time was at least 12 + 6 x 5 = 42 hours for the initial skills, plus an additional unknown time for the distillation.

The hardware used was high-end Nvidia RTX 3090 GPUs, which at the time of paper writing would have been top of the line GPUs. Multiple GPUs were used in parallel during the distillation stage.",,"Isaac Gym simulated proprioceptive data, images, and actions",,,,,,NVIDIA GeForce RTX 3090,,,"Parkour is a grand challenge for legged locomotion that requires robots to overcome various obstacles rapidly in complex environments. Existing methods can generate either diverse but blind locomotion skills or vision-based but specialized skills by using reference animal data or complex rewards. However, autonomous parkour requires robots to learn generalizable skills that are both vision-based and diverse to perceive and react to various scenarios. In this work, we propose a system for learning a single end-to-end vision-based parkour policy of diverse parkour skills using a simple reward without any reference motion data. We develop a reinforcement learning method inspired by direct collocation to generate parkour skills, including climbing over high obstacles, leaping over large gaps, crawling beneath low barriers, squeezing through thin slits, and running. We distill these skills into a single vision-based parkour policy and transfer it to a quadrupedal robot using its egocentric depth camera. We demonstrate that our system can empower two different low-cost robots to autonomously select and execute appropriate parkour skills to traverse challenging real-world environments.",,,,Confident,2024-11-01 14:05:34+00:00,"China,United States of America,United States of America,China",,,,,,,,,
Phi-1.5,Language,Microsoft,Industry,"Yuanzhi Li, Sébastien Bubeck, Ronen Eldan, Allie Del Giorno, Suriya Gunasekar, Yin Tat Lee",2023-09-11,Textbooks Are All You Need II: phi-1.5 technical report,"https://arxiv.org/abs/2309.05463, https://huggingface.co/microsoft/phi-1_5",324.0,,,1300000000.0,,1.17e+21,,,"150B training tokens

150B*1.3B*6 = 1.17e21

also, took 1.5k GPU-hours with A100s, per Table 1

1500 * 312 trillion * 3600 * 0.3 (utilization assumption) = 5.05e20

so utilization was likely ~60%. may be high due to the relatively small cluster.
",,"Synthetic ""textbook"" data: 

""Our training data for phi-1.5 is a combination of phi-1’s training data (7B tokens) and newly created
synthetic, “textbook-like” data (roughly 20B tokens) for the purpose of teaching common sense reasoning
and general knowledge of the world (science, daily activities, theory of mind, etc.)""",30000000000.0,"""In a nutshell we build phi-1.5, a 1.3 billion parameter model trained on a dataset of 30 billion tokens""",5.0,192.0,,NVIDIA A100 SXM4 40 GB,,,"We continue the investigation into the power of smaller Transformer-based language models as initiated by \textbf{TinyStories} -- a 10 million parameter model that can produce coherent English -- and the follow-up work on \textbf{phi-1}, a 1.3 billion parameter model with Python coding performance close to the state-of-the-art. The latter work proposed to use existing Large Language Models (LLMs) to generate ``textbook quality"" data as a way to enhance the learning process compared to traditional web data. We follow the ``Textbooks Are All You Need"" approach, focusing this time on common sense reasoning in natural language, and create a new 1.3 billion parameter model named \textbf{phi-1.5}, with performance on natural language tasks comparable to models 5x larger, and surpassing most non-frontier LLMs on more complex reasoning tasks such as grade-school mathematics and basic coding. More generally, \textbf{phi-1.5} exhibits many of the traits of much larger LLMs, both good -- such as the ability to ``think step by step"" or perform some rudimentary in-context learning -- and bad, including hallucinations and the potential for toxic and biased generations -- encouragingly though, we are seeing improvement on that front thanks to the absence of web data. We open-source \textbf{phi-1.5} to promote further research on these urgent topics.",,Open weights (unrestricted),,Confident,2025-01-27 22:47:32+00:00,United States of America,,,,,,,,,True
MADLAD-400 10B,Language,"Google DeepMind,Google Research","Industry,Industry","Sneha Kudugunta, Isaac Caswell, Biao Zhang, Xavier Garcia, Christopher A. Choquette-Choo, Katherine Lee, Derrick Xin, Aditya Kusupati, Romi Stella, Ankur Bapna, Orhan Firat",2023-09-09,MADLAD-400: A Multilingual And Document-Level Large Audited Dataset,https://arxiv.org/abs/2309.04662,73.0,,,10700000000.0,10.7B  from appendix A.8,1.605e+22,,,"6ND = 10.7B * 250B = 1.6e22
'MADLAD-400-10B-MT is a multilingual machine translation model based on the T5 architecture that was trained on 250 billion tokens covering over 450 languages using publicly available data. '
10.7B  params from appendix A.8",MADLAD-400," 'We introduce MADLAD-400, a manually audited, general domain 3T token monolingual dataset based on CommonCrawl, spanning 419 languages.'",3000000000000.0,"MADLAD-400, dataset released with paper, is 3T tokens: 'We introduce MADLAD-400, a manually audited, general domain 3T token monolingual dataset based on CommonCrawl, spanning 419 languages.'

However, model in question was trained on only 250B tokens: ""We then train and release a 10.7B-parameter multilingual machine translation model on 250 billion tokens covering over 450 languages using publicly available data""",1.0,,,,,,"We introduce MADLAD-400, a manually audited, general domain 3T token monolingual dataset based on CommonCrawl, spanning 419 languages. We discuss the limitations revealed by self-auditing MADLAD-400, and the role data auditing had in the dataset creation process. We then train and release a 10.7B-parameter multilingual machine translation model on 250 billion tokens covering over 450 languages using publicly available data, and find that it is competitive with models that are significantly larger, and report the results on different domains. In addition, we train a 8B-parameter language model, and assess the results on few-shot translation. We make the baseline models available to the research community. ",,Open weights (unrestricted),,Confident,2025-02-14 21:07:05+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,Multinational,United States of America",,,,,,,,,
Mobile V-MoEs,Vision,Apple,Industry,"Erik Daxberger, Floris Weers, Bowen Zhang, Tom Gunter, Ruoming Pang, Marcin Eichner, Michael Emmersberger, Yinfei Yang, Alexander Toshev, Xianzhi Du",2023-09-08,Mobile V-MoEs: Scaling Down Vision Transformers via Sparse Mixture-of-Experts,https://arxiv.org/abs/2309.04354,,,,,"total number of layers: 12
embedding size: 384
number of multi-head self-attention heads: 6
number of experts: 10 ",,,,,ImageNet-1k,"We train all models from scratch on the ImageNet-1k training set of
1.28M images, and then evaluate their top-1 accuracy on
the held-out validation set of 50K images.",1280000.0,,,,,,,,"Sparse Mixture-of-Experts models (MoEs) have recently gained popularity due to their ability to decouple model size from inference efficiency by only activating a small subset of the model parameters for any given input token. As such, sparse MoEs have enabled unprecedented scalability, resulting in tremendous successes across domains such as natural language processing and computer vision. In this work, we instead explore the use of sparse MoEs to scale-down Vision Transformers (ViTs) to make them more attractive for resource-constrained vision applications. To this end, we propose a simplified and mobile-friendly MoE design where entire images rather than individual patches are routed to the experts. We also propose a stable MoE training procedure that uses super-class information to guide the router. We empirically show that our sparse Mobile Vision MoEs (V-MoEs) can achieve a better trade-off between performance and efficiency than the corresponding dense ViTs. For example, for the ViT-Tiny model, our Mobile V-MoE outperforms its dense counterpart by 3.39% on ImageNet-1k. For an even smaller ViT variant with only 54M FLOPs inference cost, our MoE achieves an improvement of 4.66%.",,,,Unverified,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Persimmon-8B,Language,Adept,Industry,"Erich Elsen, Augustus Odena, Maxwell Nye, Sağnak Taşırlar, Tri Dao, Curtis Hawthorne, Deepak Moparthi, Arushi Somani",2023-09-07,Releasing Persimmon-8B,https://www.adept.ai/blog/persimmon-8b,,,,9300000000.0,"""The checkpoint we are releasing has approximately 9.3B parameters. In order to make pipelining during training more efficient, we chose to decouple the input and output embeddings. Doing this does not increase the capacity of the model–it is purely a systems optimization to avoid all-reducing the gradients for the (very large) embeddings across potentially slow communication links. In terms of inference cost, the model is equivalent to an 8B parameter model with coupled input/output embeddings.""",4.11246e+22,,,6*9300000000*737000000000=4.11246e+22,,"We train the model from start to finish with a sequence length of 16K on 737B tokens uniformly sampled from a much larger dataset, which is a mix of text (~75%) and code (~25%).",552750000000.0,737B tokens = 552750M words,,,,,,,,,Open weights (unrestricted),,Confident,2025-02-14 21:07:10+00:00,United States of America,,,,,,,,,
FLM-101B,Language,"Chinese Academy of Sciences,Harbin Institute of Technology,Nanyang Technological University,Beijing Academy of Artificial Intelligence / BAAI","Academia,Academia,Academia,Academia","Xiang Li, Yiqun Yao, Xin Jiang, Xuezhi Fang, Xuying Meng, Siqi Fan, Peng Han, Jing Li, Li Du, Bowen Qin, Zheng Zhang, Aixin Sun, Yequan Wang",2023-09-07,FLM-101B: An Open LLM and How to Train It with $100K Budget,https://arxiv.org/abs/2309.03852,18.0,,,101000000000.0,,5.72e+22,,,"192 GPUs * 160 TFLOP/s per GPU (reported, adjusted for utilization) * 21.54 days * 24 * 3600 = 5.72e22 (confident)

6*101000000000*311540000000=1.8879324e+23 (less confident)",,"""By design, FLM-101B is an English-Chinese bilingual model pre-trained with causal language modeling. It mixes English and Chinese corpora at a ratio of approximately 53.5% : 46.5% for language modeling.""",272125000000.0,"Trained with 311.54B tokens. The dataset is approximately 50/50 English/Chinese: ""It mixes English and Chinese corpora at a ratio of approximately 53.5% : 46.5% for language modeling"". We assume 1 Chinese word per token and 0.75 English words per token (0.875 on average). 311B * 0.875 ~= 272B.",,517.0,"""Under this growth schedule, the total time cost for our 101B model is 21.54 days""",NVIDIA A800,,,"Large language models (LLMs) have achieved remarkable success in NLP and multimodal tasks, among others. Despite these successes, two main challenges remain in developing LLMs: (i) high computational cost, and (ii) fair and objective evaluations. In this paper, we report a solution to significantly reduce LLM training cost through a growth strategy. We demonstrate that a 101B-parameter LLM with 0.31T tokens can be trained with a budget of 100K US dollars. Inspired by IQ tests, we also consolidate an additional range of evaluations on top of existing evaluations that focus on knowledge-oriented abilities. These IQ evaluations include symbolic mapping, rule understanding, pattern mining, and anti-interference. Such evaluations minimize the potential impact of memorization. Experimental results show that our model, named FLM-101B, trained with a budget of 100K US dollars, achieves performance comparable to powerful and well-known models, e.g., GPT-3 and GLM-130B, especially on the additional range of IQ evaluations.",,Open weights (unrestricted),,Confident,2025-02-14 21:07:20+00:00,"China,China,Singapore,China",,,,,,,4310000.0,Table 1,
XGen-7B,Language,Salesforce,Industry,"Erik Nijkamp, Tian Xie, Hiroaki Hayashi, Bo Pang, Congying Xia, Chen Xing, Jesse Vig, Semih Yavuz, Philippe Laban, Ben Krause, Senthil Purushwalkam, Tong Niu, Wojciech Kryscinski, Lidiya Murakhovs’ka, Prafulla Kumar Choubey, Alex Fabbri, Ye Liu, Rui Meng, Lifu Tu, Meghana Bhat, Chien-Sheng Wu, Silvio Savarese, Yingbo Zhou, Shafiq Joty, Caiming Xiong",2023-09-07,XGen-7B Technical Report,https://arxiv.org/abs/2309.03450,12.0,,"""Our evaluation on standard benchmarks shows that XGen-7B models
achieve comparable or better results when compared with state-of-the-art opensource LLMs""",6700000000.0,"I think this suggests the same number of params as Llama-7b. In any case ~7B. 
""The model architecture follows LLaMA with exact numerical compatibility to ease adoption in third-party frameworks. The hyperparameters closely follow LLaMA-7B [34] with the following alterations""",8.02e+22,,,"270,336 TPUv4-hours per the carbon emissions section. They must mean chip-hours, not core-hours, because they multiply by 192W, which is the max power consumption of a TPU-v4 chip.

https://cloud.google.com/tpu/docs/system-architecture-tpu-vm#tpu_v4

This is probably the total for the whole paper? They released two versions of the base model, one of which is just trained further than the other, and they have two fine-tuned versions. If fine-tuning compute is minor, then this total is close to the largest training compute for any single model in the paper. 

270336 * 275 teraflop/s * 3600 * 0.3 = 8.02e22 FLOP

also, using 6ND:

1484 billion tokens * 6.7 billion * 6 = 5.97e22",,"""Our pre-training dataset is a mixture of data from several public sources, reported in Table 2. We employ a two-stage training strategy, where each stage uses a different data mixture, as shown in
Table 3.
Natural language data for stage 1. Natural language data is a mixture of publicly available data.
We made an effort to improve safety and diversity of the data.
Code data for stage 1. We use the GitHub subset from the recently released RedPajama dataset [9].
We also added Apex code data to enhance our model’s proficiency in Apex code generation. Apex is
a widely used object-oriented programming language in Salesforce products.
BigCode Starcoder data for stage 2. We use all the 86 programming languages from the Starcoder [15] data, preserving the original weight of each. Subsequently, we further filter the data
according to a stronger permissive license guideline.""",1484000000000.0,1484B tokens per Table 2,1.0,,,Google TPU v4,,,"Large Language Models (LLMs) have become ubiquitous across various domains,
transforming the way we interact with information and conduct research. However,
most high-performing LLMs remain confined behind proprietary walls, hindering
scientific progress. Most open-source LLMs, on the other hand, are limited in their
ability to support longer sequence lengths, which is a key requirement for many
tasks that require inference over an input context. To address this, we have trained
XGen-7B, a series of 7B parameter models on up to 8K sequence length for up
to 1.5T tokens. We have also finetuned the XGen-7B models on public-domain
instructional data, creating their instruction-tuned counterparts (XGen-7B-Inst).
We open-source our models for both research advancements and commercial
applications. Our evaluation on standard benchmarks shows that XGen-7B models
achieve comparable or better results when compared with state-of-the-art opensource LLMs. Our targeted evaluation on long sequence modeling tasks shows the
benefits of our 8K-sequence models over 2K-sequence open-source LLMs.",,Open weights (unrestricted),,Confident,2025-02-14 21:07:54+00:00,United States of America,,,,,,,1048576.0,"""batch size of 128, and a sequence length of 8,192 tokens""",
Hunyuan,"Language,Image generation,Multimodal",Tencent,Industry,,2023-09-07,"Tencent Unveils Hunyuan, its Proprietary Large Foundation Model on Tencent Cloud",https://www.tencent.com/en-us/articles/2201685.html,,,,100000000000.0,"""Presently, the Hunyuan model has over 100 billion parameters, with more than two trillion tokens in pre-training data.""",1.1999999999999999e+24,,,6ND = 6*100*10^9*2*10^12 = 1.2*10^24,Unspecified unreleased,,2000000000000.0,"""Presently, the Hunyuan model has over 100 billion parameters, with more than two trillion tokens in pre-training data.""",,,,,,,"Enterprises in China may now access Hunyuan via Tencent’s public cloud platform and finetune it to their specific needs. The platform features strong Chinese language processing abilities, advanced logical reasoning, and comes with reliable task execution abilities.

Tencent’s foundation model supports a wide array of functions spanning the creation of images, copywriting, text recognition, and customer service, to name a few. These will be instrumental in key industries like finance, public services, social media, e-commerce, transportation, games, and many more.

This empowers enterprises to build powerful tools, in addition to training their own unique large models derived from Tencent’s Model-as-a-Service (MaaS) offering, which was first introduced in June this year. The MaaS provides enterprises with economically viable, industry-specific large models, featuring more than 50 solutions spanning 20 major industries. This creates a virtuous cycle in which enterprises refine their large models with Hunyuan to create uniquely intelligent services across their operations. ",,API access,,Confident,2025-02-07 17:11:49+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
Falcon-180B,Language,Technology Innovation Institute,Government,"Ebtesam Almazrouei, Hamza Alobeidli, Abdulaziz Alshamsi, Alessandro Cappelli, Ruxandra Cojocaru, Mérouane Debbah, Étienne Goffinet, Daniel Hesslow, Julien Launay, Quentin Malartic, Daniele Mazzotta, Badreddine Noune, Baptiste Pannier, Guilherme Penedo",2023-09-06,The Falcon Series of Open Language Models,https://falconllm.tii.ae/falcon-180b.html; https://arxiv.org/abs/2311.16867,261.0,Training cost,"""It's currently at the top of the Hugging Face Leaderboard for pre-trained Open Large Language Models and is available for both research and commercial use.""

""This model performs exceptionally well in various tasks like reasoning, coding, proficiency, and knowledge tests, even beating competitors like Meta's LLaMA 2.""",180000000000.0,"""Falcon 180B is a super-powerful language model with 180 billion parameters""",3.76e+24,3.76e+24,3.76e+24,"43,500 petaflop-days per Table 1 of the paper

43500 * 1e15 * 24 * 3600 = 3.76e24


C = 6ND = 6 FLOP/token/parameter * 3.5 trillion tokens * 180 billion parameters = 3.78*10^24 FLOP",RefinedWeb,"""The Falcon series is made of three causal decoder-only models trained on up to 4,096 A100. We assembled a pretraining dataset of 3,500 billion tokens, predominantly sourced from our work on RefinedWeb (Penedo et al., 2023)–a massive filtered and deduplicated web dataset""

Training dataset composition is described in Table 3. Falcon was trained for 1 epoch.",2625000000000.0,3.5 trillion tokens * (~3 words per 4 tokens) ~= 2.625 trillion words,1.0,4320.0,"Stanford CRFM foundation model ecosystem graph data page https://crfm.stanford.edu/ecosystem-graphs/index.html?asset=Falcon-180B says 9 months, which is the maximum possible amount of time: training began sometime in 2023, and it was released in September. 

However, 6 months is more realistic. That is the length of the gap between Falcon 40B and Falcon 180B. Additionally, the amount of compute is specified in the paper, so there is only one degree of freedom in the uncertain values of training duration and hardware utilization rate. At six months, the utilization is unusually low, so the training was probably not longer than that.",NVIDIA A100 SXM4 40 GB,4096.0,,"Falcon 180B is a super-powerful language model with 180 billion parameters, trained on 3.5 trillion tokens. It's currently at the top of the Hugging Face Leaderboard for pre-trained Open Large Language Models and is available for both research and commercial use.

This model performs exceptionally well in various tasks like reasoning, coding, proficiency, and knowledge tests, even beating competitors like Meta's LLaMA 2.

Among closed source models, it ranks just behind OpenAI's GPT 4, and performs on par with Google's PaLM 2 Large, which powers Bard, despite being half the size of the model.",,Open weights (restricted use),0.1892,Confident,2025-01-29 00:25:27+00:00,United Arab Emirates,,,,Amazon Web Services,,,4194304.0,"from paper (https://arxiv.org/pdf/2311.16867.pdf):

Batch size 2048 (presumably sequences) per Table 16. Warmed up using smaller batches for first 100B tokens.

""All Falcon models are pretrained with a 2,048 sequence length""

2048*2048 = 4194304",
Baichuan2-13B,Language,Baichuan,Industry,"Aiyuan Yang, Bin Xiao, Bingning Wang, Borong Zhang, Ce Bian, Chao Yin, Chenxu Lv, Da Pan, Dian Wang, Dong Yan, Fan Yang, Fei Deng, Feng Wang, Feng Liu, Guangwei Ai, Guosheng Dong, Haizhou Zhao, Hang Xu, Haoze Sun, Hongda Zhang, Hui Liu, Jiaming Ji, Jian Xie, JunTao Dai, Kun Fang, Lei Su, Liang Song, Lifeng Liu, Liyun Ru, Luyao Ma, Mang Wang, Mickel Liu, MingAn Lin, Nuolan Nie, Peidong Guo, Ruiyang Sun, Tao Zhang, Tianpeng Li, Tianyu Li, Wei Cheng, Weipeng Chen, Xiangrong Zeng, Xiaochuan Wang, Xiaoxi Chen, Xin Men, Xin Yu, Xuehai Pan, Yanjun Shen, Yiding Wang, Yiyu Li, Youxin Jiang, Yuchen Gao, Yupeng Zhang, Zenan Zhou, Zhiying Wu",2023-09-06,Baichuan 2: Open Large-scale Language Models,"https://huggingface.co/baichuan-inc/Baichuan2-13B-Base, https://arxiv.org/abs/2309.10305",,,,13000000000.0,,2.03e+23,,,"They describe the dataset as having 2.6T tokens, but the checkpoint graph makes it clear that's also the number of tokens the model was trained on.

13b * 2.6t * 6 = 2.03e23",,"2.6 trillion tokens, bilingual.

paper/model card don't give breakdown between English and Chinese",2275000000000.0,"2.6T tokens, or ~2.3T words assuming that the dataset is roughly even English (0.75 words/token) and Chinese (1 word/token)

1.3T Chinese tokens * (1 word/token) = 1.3T Chinese words
1.3T English tokens * (0.75 words/token) = 0.975T English words
total: 2.275T, or ~2.3T",1.0,,,,1024.0,,,,Open weights (restricted use),0.5772,Confident,2025-01-13 21:58:27+00:00,China,,,,,,,,,
TigerBot-70B,Language,Tigerobo,Industry,"Ye Chen, Wei Cai, Liangmin Wu, Xiaowei Li, Zhanxuan Xin, Cong Fu",2023-09-06,TigerBot: An Open Multilingual Multitask LLM,"https://github.com/TigerResearch/TigerBot/blob/main/README_en.md, https://arxiv.org/abs/2312.08688",,,"Outperforms Llama 2:

""We use 10 mainstream benchmark test sets in the industry to evaluate the model's reading comprehension, reasoning, world knowledge, common sense Q&A, mathematics and coding capabilities, including: mmlu, arc, squad_v2, squad, mrqa, web_questions, openbook_qa, commonsense_qa, trivia_qa, wiki_qa. The evaluation results are shown in the figure below. The comprehensive capabilities of Tigerbot-70b are better than Llama-2-70b, and also ahead of large open source models at home and abroad.""

https://github.com/TigerResearch/TigerBot/wiki/TigerBot%E2%80%9070B%E5%8F%91%E5%B8%83%EF%BC%81",70000000000.0,70B,1.02e+24,,,"~1.02e24

Tigerobo did ~2.1e23 additional pre-training. We estimated Llama 2 was trained on 8.1e23 FLOP.",,"""Tigerbot-70b is further pre-trained on the foundation of Llama-2-70b using high-quality multi-language data of 300 billion tokens. ""

""We collected data from Chinese books, the internet, and encyclopedia-type data based on the distribution of GPT3 pretraining data, and filtered the data through source quality control and tf-idf soft deduplication. From 20TB of data, we filtered down to 2TB, maintaining the proportion of language and categories. On this basis, we randomly sampled 100G of data and released it open source.""",300000000000.0,,,,,NVIDIA A100,512.0,,"(translated from https://github.com/TigerResearch/TigerBot/wiki/TigerBot%E2%80%9070B%E5%8F%91%E5%B8%83%EF%BC%81)

We are pleased to release Tigerbot-70b, which continues to be open source and free for commercial use, including:

Tigerbot-70b-base: Continuing pre-training on the basis of Llama-2-70b, the model's comprehensive capabilities are better than Llama-2-70b in 10 mainstream benchmark tests such as mmlu, reaching SOTA in the industry.

a. Using high-quality multi-lingual data of 300 billion tokens,

b. The algorithm uses GQA, flash-attn, RoPE, holistic-training and other technologies,

c. The training uses tensor/pipeline-partition technology, and the computing efficiency reaches the SOTA reported in the Llama-2 paper.",,Open weights (restricted use),,Confident,2025-02-17 20:40:36+00:00,China,Llama 2-70B,1.26e+23,70b * 300b * 6 = 126000*10^18 = 1.26*10^23,,Paper on TigerBot-70B,,4000000.0,"from paper:

""We pretrained TigerBot models using a global batch size (GBS) of 4M tokens, while fine-tuned models with a GBS as small as 100–400k tokens""

It's also based on pretrained Llama 2, which also used a batch size of 4M",
360 Smart Brain,"Multimodal,Language,Image generation",360 Security Technology,Industry,,2023-09-04,The 360 ​​Brain Model is now open to the public,https://www.hayo.com/article/64f68f1d8578eea6c7ec663f,,,,,"""hundreds of billions"" https://www.hayo.com/article/650babb37c769bcba319ed83",,,,"hundreds of billions of parameters, trained on over 1T tokens, per this: https://www.hayo.com/article/650babb37c769bcba319ed83

vague report from a Google-translated article, though",,"hundreds of billions of parameters, trained on over 1T tokens, per this: https://www.hayo.com/article/650babb37c769bcba319ed83",1000000000000.0,,,,,,,,"According to news on September 5, the 360 ​​Smart Brain large model will be open to the public from now on and will be fully accessible to the 360 ​​“Family Bucket”.

360 Zhi Nao will be open to the public on five major platforms. Users can download the “360 Zhi Nao” App through the 360 ​​Zhi Nao official website and major application stores.",,,,Likely,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Swift,Robotics,Intel Labs,Industry,"Elia Kaufmann, Leonard Bauersfeld, Antonio Loquercio, Matthias Müller, Vladlen Koltun, Davide Scaramuzza ",2023-08-30,Champion-level drone racing using deep reinforcement learning,https://www.nature.com/articles/s41586-023-06419-4,101.0,SOTA improvement,"""Our work marks the first time, to our knowledge, that an autonomous mobile robot achieved world-champion-level performance in a real-world competitive sport.""",56804.0,"The control network is an MLP with input dimension 31, two hidden layers of size 128, and an output of dimension 4.
(31+1)*128+(128+1)*128+(128+1)*4 = 21124

Gate detector is a 6 layer U-net with 
8*(3^3*3+1) + 16*(3^2*8+1) + 16*(3^2*16+1) + 16*(5^2*16+1) + 16*(7^2*16+1) + 16*(7^2*16+1) = 35680

35680 + 21124 = 56804",5.337e+16,,,"Policies are trained for a total of 1 × 108 environment interactions, which takes 50 min on a workstation (i9 12900K, RTX 3090, 32 GB RAM DDR5). Fine-tuning is performed for 2 × 107 environment interactions.

35.58 TFLOPS * 50 min * 60 s/min * 0.50 utilization = 5.337*10^16 FLOP",,,,,,0.833,"50 minutes (training details, page 8)",NVIDIA GeForce RTX 3090,1.0,Reinforcement learning,"First-person view (FPV) drone racing is a televised sport in which professional competitors pilot high-speed aircraft through a 3D circuit. Each pilot sees the environment from the perspective of their drone by means of video streamed from an onboard camera. Reaching the level of professional pilots with an autonomous drone is challenging because the robot needs to fly at its physical limits while estimating its speed and location in the circuit exclusively from onboard sensors1. Here we introduce Swift, an autonomous system that can race physical vehicles at the level of the human world champions. The system combines deep reinforcement learning (RL) in simulation with data collected in the physical world. Swift competed against three human champions, including the world champions of two international leagues, in real-world head-to-head races. Swift won several races against each of the human champions and demonstrated the fastest recorded race time. This work represents a milestone for mobile robotics and machine intelligence2, which may inspire the deployment of hybrid learning-based solutions in other physical systems.",,Unreleased,,Likely,2025-02-14 21:14:13+00:00,"Multinational,United States of America",,,,,,,,,
ABAB,Language,MiniMax,Industry,,2023-08-30,,"https://kr-asia.com/baidus-ernie-bot-among-eight-chinese-llm-products-approved-for-public-launch, https://api.minimax.chat/",,,,,"""hundreds of billions"" per https://api.minimax.chat/",,,,,Unspecified unreleased,,,,,,,,,,"MiniMax has released three foundational model architectures: text-to-visual, text-to-audio, and text-to-text. The startup has also introduced a self-developed general LLM “ABAB”, named after the sound of baby babble.",,API access,,Unknown,2025-01-06 18:59:50+00:00,China,,,,,,,,,
Jais,Language,"Cerebras Systems,Mohamed bin Zayed University of Artificial Intelligence (MBZUAI),Inception","Industry,Academia","Neha Sengupta, Sunil Kumar Sahu, Bokang Jia, Satheesh Katipomu, Haonan Li, Fajri Koto, Osama Mohammed Afzal, Samta Kamboj, Onkar Pandit, Rahul Pal, Lalit Pradhan, Zain Muhammad Mujahid, Massa Baali, Alham Fikri Aji, Zhengzhong Liu, Andy Hock, Andrew Feldman, Jonathan Lee, Andrew Jackson, Preslav Nakov, Timothy Baldwin, Eric Xing",2023-08-29,Jais and Jais-chat: Arabic-Centric Foundation and Instruction-Tuned Open Generative Large Language Models,https://arxiv.org/abs/2308.16149,24.0,SOTA improvement,SOTA at Arabic language tasks.,13000000000.0,"""With 13 billion parameters, they demonstrate better knowledge and reasoning capabilities in Arabic""",3.08e+22,,,C = 6ND = 6 * 13 billion params * 395 billion tokens = 3.081e+22 FLOP,"Abu El-Khair,Aranews,ArabicText 2022,C4 Arabic,Arabic Wikipedia,ArabicNews 2020,Maktabah,United Nations Parallel Corpus,The Pile,Books3,arXiv,PubMed Central,WebText2,English Wikipedia,FreeLaw,PubMed Abstracts,DeepMind Mathematics,Project Gutenberg,BookCorpus2,EuroParl,PhilPapers,YouTube Subtitles,NIH Grant Abstracts,Enron Emails,GitHub","It was pretrained on 395 billion tokens, including 116 billion Arabic tokens, 232 billion English tokens, and 46 billion tokens of code.
The Arabic data consists of 72 billion tokens, which was augmented by 18 billion tokens of translated English text and then upsampled 1.6 times to reach 116 billion tokens.
The English data is sampled from the Pile dataset and consists of 232 billion tokens.
The code data consists of 46 billion tokens sampled from GitHub.",300000000000.0,395B tokens ~= 300B words,,600.0,2023 June 25 to July 18 = 25 days = 600 hours,,,,"We introduce Jais and Jais-chat, new state-of-the-art Arabic-centric foundation and instruction-tuned open generative large language models (LLMs). The models are based on the GPT-3 decoder-only architecture and are pretrained on a mixture of Arabic and English texts, including source code in various programming languages. With 13 billion parameters, they demonstrate better knowledge and reasoning capabilities in Arabic than any existing open Arabic and multilingual models by a sizable margin, based on extensive evaluation. Moreover, the models are competitive in English compared to English-centric open models of similar size, despite being trained on much less English data. We provide a detailed description of the training, the tuning, the safety alignment, and the evaluation of the models. We release two open versions of the model —the foundation Jais model, and an instruction-tuned Jais-chat variant— with the aim of promoting research on Arabic LLMs.",,Open weights (unrestricted),,Confident,2025-02-14 21:14:17+00:00,"Multinational,United Arab Emirates,United States of America",,,,,,,3932160.0,"""After packing, we used a global batch size of 1,920 sequences of 2,048 tokens each. """,True
Refact-1.6B,Language,Refact AI,Industry,"Oleg Klimov, Sergey Vakhreev",2023-08-29, Refact-1.6B ,https://huggingface.co/smallcloudai/Refact-1_6B-fim,,,,1600000000.0,1.6B,1.152e+22,,,"6ND = 6 * 1.6B * 1.2T = 11520000000000000000000 = 1.152e22
citation ""model trained for 1.2T tokens. ""
alternative
flops = (64) * (27770 * 10**9) * (28 * 24 * 3600) * (0.3) = 1.2898787328e+21
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)
Precision: bfloat16
GPUs 64 NVidia A5000
Training time 28 days
27.77 TFLOPS - peak flop from https://www.techpowerup.com/gpu-specs/rtx-a5000.c3748",RedPajama,"""For the base model, we used our own dataset that contains code with permissive licenses only, and open text datasets. Filtering is the key to success of this model:

    We only used text in English
    Only topics related to computer science
    Applied heavy deduplication

The text to code proportion was 50:50, model trained for 1.2T tokens. """,1200000000000.0,"1.2T from ""The text to code proportion was 50:50, model trained for 1.2T tokens. """,,672.0,"from ""Model Stats""",NVIDIA RTX A5000,6.0,Self-supervised learning,,,Open weights (restricted use),,Likely,2025-02-14 21:16:08+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
"Luca 2.0
",,Mianbi Intelligence,Industry,,2023-08-29,,https://www.163.com/dy/article/IDBGA8840511FQO9.html,,,,100000000000.0,"https://www.leiphone.com/category/ai/23kbzQXj60xZgUgO.html 
English translation:
""Li Dahai: From a technical point of view, the CPM2 (Chinese Pretrained Model) 100 billion model we launched at that time was a sparse model of MoE, which is different from the 100 billion model we are promoting now.""

This suggests it is a dense model.",1.1999999999999999e+24,,,"Assume Chinchilla-optimal dataset size:
20 * 100B * 100B * 6 = 1.2e24 FLOP",,,,,,,,,,,,,,,Unverified,2025-02-14 21:14:23+00:00,China,,,,,"There is no paper to reference, no information about hardware used for training found in media.",,,,
PeptideBERT,Biology,Carnegie Mellon University (CMU),Academia,"Chakradhar Guntuboina, Adrita Das, Parisa Mollaei, Seongwon Kim, and Amir Barati Farimani",2023-08-28,PeptideBERT: A language Model based on Transformers for Peptide Property Prediction,https://arxiv.org/abs/2309.03099,,SOTA improvement,"""Our model has achieved state of the art (SOTA) for predicting Hemolysis, which is a task for determining peptide’s potential to induce red blood cell lysis.""",,,4.9e+16,,,"""Compute for fine-tuning ProtBERT: 1 NVidia GeForce GTX 1080Ti, 30 epochs, batch size 32, model trained for individual tasks with training time ranging from 58-116 minutes, assuming 
from Table 1 we have 244 minutes
11.34e12 FLOPs and 0.3 utilization rate FLOP = 244 min * 60 sec/min * 11.34e12 FLOP/sec *0.3 = 4.9e16 FLOP,",,,21700000000.99997,"Pretraining:
217,000,000 sequences × 100 residues = 2.17 × 10¹⁰ tokens

Fine-tuning sequences:
9,316 + 29,892 + 17,185 = 56,393 sequences
56,393 × 100 residues = 5.64 × 10⁶ tokens

Total tokens:
2.17 × 10¹⁰ + 5.64 × 10⁶ ≈ 2.17 × 10¹⁰",30.0,4.067,244 minues from Table 1,NVIDIA GeForce GTX 1080 Ti,1.0,,"Recent advances in Language Models have enabled the protein modeling community with a powerful tool since protein sequences can be represented as text. Specifically, by taking advantage of Transformers, sequence-to-property prediction will be amenable without the need for explicit structural data. In this work, inspired by recent progress in Large Language Models (LLMs), we introduce PeptideBERT, a protein language model for predicting three key properties of peptides (hemolysis, solubility, and non- fouling). The PeptideBert utilizes the ProtBERT pretrained transformer model with 12 attention heads and 12 hidden layers. We then finetuned the pretrained model for the three downstream tasks. Our model has achieved state of the art (SOTA) for predicting Hemolysis, which is a task for determining peptide’s potential to induce red blood cell lysis. Our PeptideBert non-fouling model also achieved remarkable accuracy in predicting peptide’s capacity to resist non-specific interactions. This model, trained predominantly on shorter sequences, benefits from the dataset where negative examples are largely associated with insoluble peptides. Codes, models, and data used in this study are freely available at: https://github.com/ChakradharG/PeptideBERT",,Open weights (unrestricted),,Confident,2025-02-14 21:16:18+00:00,United States of America,ProtBERT-UniRef,4.980528e+16,"""Compute for fine-tuning ProtBERT: 1 NVidia GeForce GTX 1080Ti, 30 epochs, batch size 32, model trained for individual tasks with training time ranging from 58-116 minutes, assuming 
from Table 1 we have 244 minutes
11.34e12 FLOPs and 0.3 utilization rate FLOP = 244 min * 60 sec/min * 11.34e12 FLOP/sec *0.3 = 4.9e16 FLOP,",,,,,,
MengziGPT-General-40B,,,,,2023-08-27,"澜舟科技通过生成式人工智能备案并重磅发布新版孟子GPT-金融模型和孟子GPT-Code模型
",https://hub.baai.ac.cn/view/33895,,,,40000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Mengzi-Fin-7B,,,,,2023-08-27,"澜舟科技通过生成式人工智能备案并重磅发布新版孟子GPT-金融模型和孟子GPT-Code模型
",https://www.langboat.com/en/portal/mengzi-gpt,,,,7000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Mengzi-Fin-13B,,,,,2023-08-27,"澜舟科技通过生成式人工智能备案并重磅发布新版孟子GPT-金融模型和孟子GPT-Code模型
",https://hub.baai.ac.cn/view/33895,,,,13000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
MathGPT,Language,TAL Education Group (Xueersi),Industry,,2023-08-24,TAL’s MathGPT launches public beta: your next-gen math assistant,https://www.gizmochina.com/2023/08/24/mathgpt-launch-public-beta-next-gen-math-assistant/,,,,,,,,,,,,,,,,,,,,"During its 20th-anniversary event, TAL Education Group launched the public beta testing of its innovative mathematical large model, MathGPT. This LLM model is designed primarily for global mathematics enthusiasts and research institutions, marking a significant milestone as China’s first large model tailored for mathematics.",,Hosted access (no API),,Unknown,2024-09-05 18:08:31+00:00,China,,,,,,,,,
HyperCLOVA X,Language,NAVER,Industry,"Kang Min Yoo, Jaegeun Han, Sookyo In, Heewon Jeon, Jisu Jeong, Jaewook Kang, Hyunwook Kim, Kyung-Min Kim, Munhyong Kim, Sungju Kim, Donghyun Kwak, Hanock Kwak, Se Jung Kwon, Bado Lee, Dongsoo Lee, Gichang Lee, Jooho Lee, Baeseong Park, Seongjin Shin, Joonsang Yu, Seolki Baek, Sumin Byeon, Eungsup Cho, Dooseok Choe, Jeesung Han, Youngkyun Jin, Hyein Jun, Jaeseung Jung, Chanwoong Kim, Jinhong Kim, Jinuk Kim, Dokyeong Lee, Dongwook Park, Jeong Min Sohn, Sujung Han, Jiae Heo, Sungju Hong, Mina Jeon, Hyunhoon Jung, Jungeun Jung, Wangkyo Jung, Chungjoon Kim, Hyeri Kim, Jonghyun Kim, Min Young Kim, Soeun Lee, Joonhee Park, Jieun Shin, Sojin Yang, Jungsoon Yoon, Hwaran Lee, Sanghwan Bae, Jeehwan Cha, Karl Gylleus, Donghoon Ham, Mihak Hong, Youngki Hong, Yunki Hong, Dahyun Jang, Hyojun Jeon, Yujin Jeon, Yeji Jeong, Myunggeun Ji, Yeguk Jin, Chansong Jo, Shinyoung Joo, Seunghwan Jung, Adrian Jungmyung Kim, Byoung Hoon Kim, Hyomin Kim, Jungwhan Kim, Minkyoung Kim, Minseung Kim, Sungdong Kim, Yonghee Kim, Youngjun Kim, Youngkwan Kim, Donghyeon Ko, Dughyun Lee, Ha Young Lee, Jaehong Lee, Jieun Lee, Jonghyun Lee, Jongjin Lee, Min Young Lee, Yehbin Lee, Taehong Min, Yuri Min, Kiyoon Moon, Hyangnam Oh, Jaesun Park, Kyuyon Park, Younghun Park, Hanbae Seo, Seunghyun Seo, Mihyun Sim, Gyubin Son, Matt Yeo, Kyung Hoon Yeom, Wonjoon Yoo et al. (296 additional authors not shown)",2023-08-24,Korea’s internet giant Naver unveils generative AI services,"https://arxiv.org/abs/2404.01954
https://techcrunch.com/2023/08/24/koreas-internet-giant-naver-unveils-generative-ai-services/, https://www.ncloud.com/solution/featured/hyperclovax",,,"Possible significant usage: ""HyperCLOVA X is available for creators and enterprise customers""",,"Unknown

Previous version had 204B parameters: ""Naver says HyperCLOVA has more than 204 billion parameters, but it did not disclose how many parameters have been trained on the HyperCLOVA X""

Maybe ambiguous whether HyperCLOVA X is a new and separate model? But HyperClova is pretty old.

""HyperCLOVA X is built on HyperCLOVA and improves on the previous LLMs""

https://www.ncloud.com/solution/featured/hyperclovax",,1.476000000000001e+23,,,,,,,,,,,,,"South Korean internet search company Naver on Thursday rolled out its own generative artificial intelligence tool, HyperCLOVA X. The company’s large language model (LLM) offers services such as a ChatGPT-like AI chatbot, CLOVA X, and a generative AI-based search engine, Cue, equivalent to Microsoft Bing. ",,API access,,Unknown,2024-09-16 17:15:29+00:00,Korea (Republic of),,,,,,,,,
Qwen-VL,"Multimodal,Language,Vision",Alibaba,Industry,"Jinze Bai, Shuai Bai, Shusheng Yang, Shijie Wang, Sinan Tan, Peng Wang, Junyang Lin, Chang Zhou, Jingren Zhou",2023-08-24,"Qwen-VL: A Versatile Vision-Language Model for Understanding, Localization, Text Reading, and Beyond",https://arxiv.org/abs/2308.12966,405.0,SOTA improvement,"""As the results shown, our Qwen-VL and Qwen-VL-Chat both achieve obviously better results compared to previous
generalist models in terms of both two tasks. Specifically, on zero-shot image caption task, Qwen-VL achieves
state-of-the-art performance (i.e., 85.8 CIDEr score) on the Flickr30K karpathy-test split, even outperforms
previous generalist models with much more parameters (e.g., Flamingo-80B with 80B parameters).""",9600000000.0,9.6B total - Table 1,,,,"Qwen-7B and ViT as base models, trained on 1.5B image-text pairs",,"""Our pre-training dataset is composed of several publicly accessible sources and some in-house data.
We made an effort to clean the dataset of certain patterns. As summarized in Table 2, the original dataset
contains a total of 5 billion image-text pairs, and after cleaning, 1.4 billion data remain, with 77.3% English
(text) data and 22.7% Chinese (text) data.""",1400000000.0,1.4B text-image pairs,1.0,,,,,,"We introduce the Qwen-VL series, a set of large-scale vision-language models designed to perceive and understand both text and images. Comprising Qwen-VL and Qwen-VL-Chat, these models exhibit remarkable performance in tasks like image captioning, question answering, visual localization, and flexible interaction. The evaluation covers a wide range of tasks including zero-shot captioning, visual or document visual question answering, and grounding. We demonstrate the Qwen-VL outperforms existing Large Vision Language Models (LVLMs). We present their architecture, training, capabilities, and performance, highlighting their contributions to advancing multimodal artificial intelligence. Code, demo and models are available at https://github.com/QwenLM/Qwen-VL.",,Open weights (restricted use),,Likely,2024-11-01 14:05:35+00:00,China,Qwen-7B,,"50k steps, 30k batch size (table 8)",,,,,,
airoboros-l2-70b-2.1,Language,,,Jon Durbin,2023-08-24,airoboros: using large language models to fine-tune large language models,https://huggingface.co/jondurbin/airoboros-l2-70b-2.1,,,,70000000000.0,same as llama 2 70b,,,,,airoboros datasets,https://huggingface.co/datasets/jondurbin/airoboros-2.1,,,,,,,,,"This is my take on implementing the Self-Instruct paper. The approach is quite heavily modified, and does not use any human-generated seeds.

This updated implementation supports either the /v1/completions endpoint or /v1/chat/completions, which is particularly useful in that it supports gpt-4 and gpt-3.5-turbo (which is 1/10 the cost of text-davinci-003).

Huge thank you to the folks over at a16z for sponsoring the costs associated with building models and associated tools!",,Open weights (restricted use),,Confident,2024-12-16 18:50:38+00:00,,Llama 2-70B,,,,,,,,
PULI GPTrio,Language,Hungarian Research Centre for Linguistics,Academia,"Zijian Győző Yang, László János Laki, Tamás Váradi & Gábor Prószéky ",2023-08-23,Mono- and Multilingual GPT-3 Models for Hungarian,https://link.springer.com/chapter/10.1007/978-3-031-40498-6_9; https://huggingface.co/NYTK/PULI-GPTrio,,,,6700000000.0,6.7B,5.8e+21,,,"8 A100s for three months

8 * 312 trillion * 24 * 3600 * 90 * 0.3 (utilization assumption) = 5.8e21",,"Mix of Hungarian, English, and Chinese text",230590476190.4762,"adding up column in Table 2.
41.5 billion Hungarian words * assumed 1 token/word +
61.9 billion English words * 4 tokens / 3 words +
98.7 billion Chinese character * assumed 1 token/character +
33GB of github documents * 1 token / 4.2 bytes * 1e9 bytes/GB =
around 230.6 billion tokens

might be slightly off because it's counting non-Chinese tokens in the Chinese data, rather than non-Chinese words, but close.",,2200.0,3 months,NVIDIA A100,,,"In recent years, the growth in size of Transformer-based language models has accelerated significantly. Global technology companies are training larger and larger models that require enormous resources and training data. With these experiments, they aim to demonstrate that sufficiently large models with abundant training data can solve any natural language processing task even without fine-tuning. It may not be feasible to compete directly in this race, but there is an opportunity to conduct experiments in the direction of larger models in their shadow. Our aim is to train large language models for Hungarian. According to the knowledge transfer researches, a language model can adapt valuable knowledge from other languages. Furthermore, in order for the model to be able to solve translation tasks, it also needs multilingual knowledge. In our research, we trained a Hungarian monolingual and a Hungarian-English-Chinese trilingual 6.7 billion parameter GPT language model with more than 1TB text data. In our experiments, we also fine-tuned our model with the prompts provided by the Stanford Alpaca dataset. Thus, employing this methodology, an instruct GPT was built, which, as far as we know, is the first multilingual large language model in this region that can follow instructions.",,Open weights (non-commercial),,Confident,2025-02-14 21:16:30+00:00,Hungary,,,,,,,,,
ShapeMol,Biology,Ohio State University,,"Ziqi Chen, Bo Peng, Srinivasan Parthasarathy, Xia Ning
",2023-08-23,Shape-conditioned 3D Molecule Generation via Equivariant Diffusion Models,https://arxiv.org/abs/2308.11890,6.0,,,,,2.59999999999998e+19,,,"1. Hardware: 1x Tesla V100 PCIe 32GB (1.30×10¹⁴ FLOP/s)
2. Training duration: directly provided - 140 hours total (80h Shape Encoder + 60h Diffusion Model) = 504,000 seconds
3. Utilization: 40%
4. Calculation: 1.30×10¹⁴ FLOP/s × 1 GPU × 504,000s × 0.4 = 2.60×10¹⁹ FLOPs",,,1600000.9999999993,"Step-by-step summary:
1. Training dataset: 1,593,653 molecules
2. Training steps calculation: 900,000 steps × 32 batch size = 28,800,000 molecule instances
3. Epochs calculation: 28,800,000 / 1,593,653 ≈ 18.1 epochs
4. Final data points (unique molecules from first epoch): 1,593,653

Final estimate: 1.6e6 data points",,,,,,,"Ligand-based drug design aims to identify novel drug candidates of similar shapes with known active molecules. In this paper, we formulated an in silico shape-conditioned molecule generation problem to generate 3D molecule structures conditioned on the shape of a given molecule. To address this problem, we developed a translation- and rotation-equivariant shape-guided generative model ShapeMol. ShapeMol consists of an equivariant shape encoder that maps molecular surface shapes into latent embeddings, and an equivariant diffusion model that generates 3D molecules based on these embeddings. Experimental results show that ShapeMol can generate novel, diverse, drug-like molecules that retain 3D molecular shapes similar to the given shape condition. These results demonstrate the potential of ShapeMol in designing drug candidates of desired 3D shapes binding to protein target pockets.",,,,Unverified,2025-02-14 21:16:57+00:00,United States of America,,,,,,,,,
IDEFICS-80B,"Multimodal,Language,Vision",Hugging Face,Industry,"Hugo Laurencon, Daniel van Strien, Stas Bekman, Leo Tronchon, Lucile Saulnier, Thomas Wang, Siddharth Karamcheti, Amanpreet Singh, Giada Pistilli, Yacine Jernite, Victor Sanh",2023-08-22,Introducing IDEFICS: An Open Reproduction of State-of-the-Art Visual Language Model,https://huggingface.co/blog/idefics,,,,80000000000.0,IDEFICS... comes in two variants—the base version and the instructed version. Each variant is available at the 9 billion and 80 billion parameter sizes.,1.1593580544e+23,,,"flops = 512 * 312e12 * 28*24*3600 * 0.3 = 1.159e23
(num gpus) * (peak perforemence) * (time in seconds) * (assumed utilization rate)

""The IDEFICS models were trained on an AWS SageMaker cluster with 8x80GB A100 GPUs nodes and EFA network.
    IDEFICS-80B took ~28 days of training on 64 nodes (512 GPUs).""

https://huggingface.co/HuggingFaceM4/idefics-80b-instruct 

trained on 150B text tokens + images

6ND = 6*734000000000*80*10^9 = 3.5232e+23

","Wikipedia,Public Multimodal Dataset (PMD),LAION,OBELICS","IDEFICS was trained on a mixture of openly available datasets: Wikipedia, Public Multimodal Dataset, and LAION, as well as a new 115B token dataset called OBELICS that we created. OBELICS consists of 141 million interleaved image-text documents scraped from the web and contains 353 million images.",734000000000.0,"IDEFICS was trained on a mixture of openly available datasets: Wikipedia, Public Multimodal Dataset, and LAION, as well as a new 115B token dataset called OBELICS that we created. OBELICS consists of 141 million interleaved image-text documents scraped from the web and contains 353 million images.

See https://huggingface.co/HuggingFaceM4/idefics-80b-instruct
149.6B tokens and 1.582B images in total.

Effective Batch Size (# of tokens)	3.67M
Max Training Steps	200K

3.67*10^6*200000 = 734000000000 tokens = 734B",,672.0,"""IDEFICS-80b pretraining

Hardware Type: 512 NVIDIA A100 GPUs
Hours used: 672 hours (28 days)
Cloud Provider: AWS
Compute Region: US-West 2 (288g CO2eq/kWh)
Carbon Emitted: 39,498 kg of CO2eq""",NVIDIA A100,512.0,,"We are excited to release IDEFICS (Image-aware Decoder Enhanced à la Flamingo with Interleaved Cross-attentionS), an open-access visual language model. IDEFICS is based on Flamingo, a state-of-the-art visual language model initially developed by DeepMind, which has not been released publicly. Similarly to GPT-4, the model accepts arbitrary sequences of image and text inputs and produces text outputs.",,Open weights (non-commercial),,Confident,2025-01-10 16:31:02+00:00,"Multinational,United States of America","LLaMA-65B,CLIP ViT-H/14 - LAION-2B",,,AWS,,,3670000.0,,True
IDEFICS-9B,"Multimodal,Language,Vision",Hugging Face,Industry,"Hugo Laurencon, Daniel van Strien, Stas Bekman, Leo Tronchon, Lucile Saulnier, Thomas Wang, Siddharth Karamcheti, Amanpreet Singh, Giada Pistilli, Yacine Jernite, Victor Sanh",2023-08-22,Introducing IDEFICS: An Open Reproduction of State-of-the-Art Visual Language Model,https://huggingface.co/blog/idefics,,,,9000000000.0,9B,,,,,"OBELICS,Wikipedia,LAION,Public Multimodal Dataset (PMD)","OBELICS	Unstructured Multimodal Web Documents	114.9B text tokens	353M images 	1 epoch

Wikipedia	Unstructured Multimodal Web Documents	3.192B text tokens 39M images	3 epochs

LAION	Image-Text Pairs	29.9B text tokens 1.120B images	1 epoch

PMD	Image-Text Pairs	1.6B	text tokens 70M images	3 epochs",262000000000.0,"Sequence Length	1024
Effective Batch Size (# of tokens)	1.31M
Max Training Steps	200K

1.31*10^6*200000 = 262000000000 = 262B tokens",,350.0,"""IDEFICS-9b pretraining

Hardware Type: 128 NVIDIA A100 GPUs
Hours used: 350 hours
Cloud Provider: AWS
Compute Region: US-West 2 (288g CO2eq/kWh)
Carbon Emitted: 5,160 kg of CO2eq""",NVIDIA A100,128.0,,"IDEFICS (Image-aware Decoder Enhanced à la Flamingo with Interleaved Cross-attentionS) is an open-access reproduction of Flamingo, a closed-source visual language model developed by Deepmind. Like GPT-4, the multimodal model accepts arbitrary sequences of image and text inputs and produces text outputs. IDEFICS is built solely on publicly available data and models.

The model can answer questions about images, describe visual contents, create stories grounded on multiple images, or simply behave as a pure language model without visual inputs.

IDEFICS is on par with the original closed-source model on various image-text benchmarks, including visual question answering (open-ended and multiple choice), image captioning, and image classification when evaluated with in-context few-shot learning. It comes into two variants: a large 80 billion parameters version and a 9 billion parameters version.",,Open weights (non-commercial),,Confident,2025-01-03 20:00:05+00:00,"Multinational,United States of America","CLIP ViT-H/14 - LAION-2B,LLaMA-7B",1.4614222e+22,"6ND = 6*262000000000*9*10^9 = 1.4148e+22

Hardware Type: 128 NVIDIA A100 GPUs
Hours used: 350 hours
Cloud Provider: AWS
Compute Region: US-West 2 (288g CO2eq/kWh)
Carbon Emitted: 5,160 kg of CO2eq

128*350*3600*312000000000000*0.3 = 1.5095808e+22

sqrt(1.4148e+22*1.5095808e+22) = 1.4614222e+22",AWS,,,,,
Dou Bao,Language,ByteDance,Industry,,2023-08-18,,https://pandaily.com/bytedance-launches-its-first-large-scale-ai-conversation-product-dou-bao/,,,,,,,,,,,,,,,,,,,,"The first AI conversational app “Dou Bao” and its web version have recently been launched, with the download channel for Android already open. The “Dou Bao” is the internal codename “Grace” AI project by ByteDance, and currently has functions such as text-based conversation and image-based conversation.",,Hosted access (no API),,Unknown,2024-12-08 19:55:23+00:00,China,,,,,,,,,
KwaiYii 13B,Language,Kuaishou Technology,Industry,,2023-08-16,"""KwaiYii"" large-scale language model (KwaiYii)",https://github.com/kwai/KwaiYii,,,"""The KwaiYii-13B-Base pre-training model has excellent general technical base capabilities and has achieved State-Of-The-Art effect under the same model size on most authoritative Chinese/English Benchmarks. For example, the KwaiYii-13B-Base pre-trained model is currently at the leading level of the same model size on MMLU, CMMLU, C-Eval, HumanEval and other benchmarks.""",13000000000.0,13B,,,,,,,,,,,,,,,"""KwaiYii"" is a series of large-scale language models (LLM) independently developed by the Kuaishou AI team from scratch. It currently includes models with multiple parameter sizes and covers pre-training models. (KwaiYii-Base), dialogue model (KwaiYii-Chat). Here we introduce the 13B scale series model KwaiYii-13B.""",,Unreleased,,Likely,2024-11-10 23:00:43+00:00,China,,,,,,,,,
VARCO LLM 2.0 base,Language,NCSOFT,Industry,,2023-08-16,VARCO LLM 2.0 is NCSOFT's large language model that can be applied to the development of natural language processing-based AI services.,"https://ncsoft.github.io/ncresearch/varco-llm-details/
https://aws.amazon.com/marketplace/pp/prodview-d7amr4yxpibew?sr=0-3&ref_=beagle&applicationId=AWSMPContessa",,,,13000000000.0,,1.248e+23,,,=1600000000000*6*13000000000=1.248×10^23,,"""Our LLM is trained with datasets that are either publicly available for pretraining, collected from the Internet or internally constructed,” Jehee Lee, CRO of NCSOFT, told Engadget via email.",1600000000000.0,https://ncsoft.github.io/ncresearch/varco-llm-details/,,,,,,,"VARCO LLM 2.0 is NCSOFT's large language model that can be applied to the development of various natural language processing-based AI services such as text generation, question answering, chatbots, summarization, and information extraction. NCSOFT's VARCO LLM 2.0 was developed with our own technology, including data construction, pre-training, instruction tuning and alignment tuning. We evaluated VARCO LLM 2.0 on various NLP tasks and its performance has significantly improved compared to VARCO LLM 1.0, and it boasts the highest performance among other Korean LLMs of similar sizes. In particular, it has been trained to be used in high-level natural language processing applications such as creative writing, summarization, question and answering, chatbots and translation, and shows high performance in related quantitative indicators. For inquiries regarding further performance improvement or collaboration for service applications, please contact us by email (varco_llm@ncsoft.com).

Korean Text Generation : VARCO LLM 2.0 is optimized for Korean natural language generation applications. In particular, it provides more natural and creative responses in understanding user instructions and generating text.",,API access,,Likely,2025-02-14 21:17:02+00:00,Korea (Republic of),,,,,,,,,
DeciCoder-1B,Language,Deci AI,Industry,DeciAI Research Team,2023-08-15, Model Card for DeciCoder-1b,https://huggingface.co/Deci/DeciCoder-1b,,,,1100000000.0,"1.1B, per model card https://huggingface.co/Deci/DeciCoder-1b",2.9e+21,,,446b * 1.1b * 6 = 2.9e21,StarCoder,"""DeciCoder was trained on StarCoder Training Dataset, filtered for Python, Java, and Javascript code""",446000000000.0,Total Tokens: 446B ,,,,,,,"DeciCoder 1B is a 1 billion parameter decoder-only code completion model trained on the Python, Java, and Javascript subsets of Starcoder Training Dataset. The model uses Grouped Query Attention and has a context window of 2048 tokens. It was trained using a Fill-in-the-Middle training objective. The model's architecture was generated by Deci's proprietary Neural Architecture Search-based technology, AutoNAC.",,Open weights (unrestricted),,Confident,2025-02-14 21:17:15+00:00,Israel,,,,,,,,,
Spark 2.0,,,,,2023-08-15,iFlytek unveils updated LLM SparkDesk V2.0 and new product iFlyCode 1.0,https://technode.com/2023/08/16/iflytek-unveils-updated-llm-sparkdesk-v2-0-and-new-product-iflycode-1-0/,,,,,,,,,Huawei Ascend,,,,,,,,,,,"During the event, iFlytek’s chairman Liu Qingfeng demonstrated the upgraded coding capabilities and multimodal features of the SparkDesk V2.0 model.",,,,Unverified,,,,,,,,,,,
Platypus-70B,Language,Boston University,Academia,"Ariel N. Lee, Cole J. Hunter, Nataniel Ruiz",2023-08-14,"Platypus: Quick, Cheap, and Powerful Refinement of LLMs","https://arxiv.org/abs/2308.07317, https://platypus-llm.github.io/",117.0,,"SOTA for open-source but not in general (per Table 3)

""As per the Hugging Face Open LLM Leaderboard data dated 8/10/23 (Table 3), our Platypus2-70Binstruct variant has outperformed its competitors, securing the top position with an average score of 73.13""",70000000000.0,fine-tuned from LLaMa 2-70B,,,,,,"Platypus is fine-tuned Llama 2, so starts with whatever dataset was used to train Llama 2. Then they fine-tuned using Open-Platypus:

""Open-Platypus, a small-scale dataset that consists of a curated sub-selection of public text datasets. The dataset is focused on improving LLMs’ STEM and logic knowledge, and is made up of 11 open-source datasets. It is comprised mainly of human-designed questions, with only 10% of questions generated by an LLM. """,,,,,see finetune compute,NVIDIA A100,,,"We present Platypus, a family of fine-tuned and merged Large Language Models (LLMs) that achieves the strongest performance and currently stands at first place in HuggingFace's Open LLM Leaderboard as of the release date of this work. In this work we describe (1) our curated dataset Open-Platypus, that is a subset of other open datasets and which we release to the public (2) our process of fine-tuning and merging LoRA modules in order to conserve the strong prior of pretrained LLMs, while bringing specific domain knowledge to the surface (3) our efforts in checking for test data leaks and contamination in the training data, which can inform future research. Specifically, the Platypus family achieves strong performance in quantitative LLM metrics across model sizes, topping the global Open LLM leaderboard while using just a fraction of the fine-tuning data and overall compute that are required for other state-of-the-art fine-tuned LLMs. In particular, a 13B Platypus model can be trained on a single A100 GPU using 25k questions in 5 hours. This is a testament of the quality of our Open-Platypus dataset, and opens opportunities for more improvements in the field. Project page: this https URL",,Open weights (non-commercial),,Confident,2024-11-01 14:05:35+00:00,United States of America,Llama 2-70B,3.954e+19,"22 hours on 4 A100 GPUs (""our 70B model using 4 A100s 80GB for 22 hours."")

If FP16, this was around 312 TFLOPS * 88 hours * 40% = 3.954*10^19 FLOP

It would be double this if they used INT8.",,,,,,
Code Llama-34B,Language,Meta AI,Industry,"Baptiste Rozière, Jonas Gehring, Fabian Gloeckle, Sten Sootla, Itai Gat, Ellen Tan, Yossef (Yossi) Adi, Jingyu Liu, Tal Remez, Jérémy Rapin, Artyom Kozhevnikov, Ivan Evtimov, Joanna Bitton, Manish Bhatt, Cristian Canton Ferrer, Aaron Grattafiori, Wenhan Xiong, Alexandre Defossez, Jade Copet, Faisal Azhar, Hugo Touvron, Gabriel Synnaeve, Louis Martin, Nicolas Usunier, Thomas Scialom",2023-08-14,Code Llama: Open Foundation Models for Code,"https://ai.meta.com/research/publications/code-llama-open-foundation-models-for-code/
https://arxiv.org/abs/2308.12950",1297.0,,"SOTA for open models: ""Moreover, our largest model,
with its 34B parameters, is significantly larger than previous open-source models – GPT-NeoX-20B (Black
et al., 2022) and StarCoder with 15.5B parameters – which allows it to achieve state-of-the-art performances
on HumanEval, MBPP and MultiPL-E among open-source models""",34000000000.0,34B,5.3e+23,,,"1.22e23 finetune compute, or ~5.3e23 including Llama-2 34B base compute. See finetune compute notes for calculation.
",Unspecified unreleased,"""As shown in Table 1, Code Llama is trained predominantly on a near-deduplicated dataset of publicly available code. We also source 8% of our samples data from natural language datasets related to
code. This dataset contains many discussions about code and code snippets included in natural language questions or answers. To help the model retain natural language understanding skills, we also sample a small proportion of our batches from a natural language dataset""",600000000000.0,"Llama 2 used 2T tokens, and ""We train Code Llama on 500B additional tokens and Code Llama - Python further on 100B tokens""

2T + 500B + 100B = 2600000000000",,,,NVIDIA A100 SXM4 80 GB,,,"We release Code Llama, a family of large language models for code based on Llama 2 providing state-of-the-art performance among open models, infilling capabilities, support for large input contexts, and zero-shot instruction following ability for programming tasks. We provide multiple flavors to cover a wide range of applications: foundation models (Code Llama), Python specializations (Code Llama - Python), and instruction-following models (Code Llama - Instruct) with 7B, 13B and 34B parameters each. All models are trained on sequences of 16k tokens and show improvements on inputs with up to 100k tokens. 7B and 13B Code Llama and Code Llama - Instruct variants support infilling based on surrounding content. Code Llama reaches state-of-the-art performance among open models on several code benchmarks, with scores of up to 53% and 55% on HumanEval and MBPP, respectively. Notably, Code Llama - Python 7B outperforms Llama 2 70B on HumanEval and MBPP, and all our models outperform every other publicly available model on MultiPL-E. We release Code Llama under a permissive license that allows for both research and commercial use.",,Open weights (restricted use),,Confident,2024-11-25 20:29:31+00:00,United States of America,Llama 2-34B,1.22e+23,"Training the nine Code Llama models took 400k A100-hours across all the models, per model card. It's nine models because there are three base models at 7B, 13B, 34B, and then Instruct and Python models across all three sizes. I'll calculate for Code Llama Python-34B since it's the most trained.

Code Llama-base is trained from Llama 2 with 500B tokens: ""We train Code Llama on 500B tokens during the initial phase, starting from the 7B, 13B, and 34B versions of Llama 2""

Code Llama-Python required an additional 100B tokens in fine-tuning: ""We train Code Llama on 500B additional tokens and Code Llama - Python further on 100B tokens.""
Code Llama-Instruct is fine-tuned on 5B tokens: ""For Code Llama - Instruct, we train with a batch size of 524,288 tokens and on approx. 5B tokens in total.""

34B * (500B+100B) * 6 = 1.22e23

Using the hardware method, we get 400,000 * 3600 * 312 trillion * 0.3 = 1.32e23 for the whole family. Using 34/(34+13+7) as the proportion of compute used for the 34B model, we get 0.63 * 1.32e23 = 8.5e22. (this is rounding down instruct tuning to 0).

Token*params estimate is probably better; seems like evidence of utilization > 0.3.",,,,4000000.0,"Llama 2 pretraining used 4M batches. I believe the sentence below refers to the training from Llama 2 -> Code Llama-base. 

""We use a batch size of 4M tokens which are presented as sequences of 4,096 tokens each.""

Subsequent fine-tuning batch sizes are 500k-1M. 

""For Code Llama - Instruct, we train with a batch size of 524,288 tokens and on approx. 5B tokens in total... For long context fine-tuning (LCFT)... the batch size is set to 2M tokens for model sizes 7B and 13B and to 1M tokens for model size 34B, respectively. Training lasts for 10,000 gradient steps by default."" ",
Japanese-LM-3.6B,Language,LINE Corporation,Industry,"Shun Kiyono, Sho Takase, Toshinori Sato",2023-08-14,japanese-large-lm-3.6b,"https://engineering.linecorp.com/ja/blog/3.6-billion-parameter-japanese-language-model, https://huggingface.co/line-corporation/japanese-large-lm-3.6b",,,,3600000000.0,3.6B,,,,"1.7B model was trained on 4000 A100-hours:

""Regarding the time required to build this model, for example, the 1.7B model is converted to A100 80GB and takes about 4000 GPU hours""

4000 * 3600 * 312 teraFLOPS * 0.3 =1.35e21

speculative, the 3.6B model may be about 2x that, but not clear it was trained on the same number of epochs

Using C=6ND, C = 6 * 3.6e9 * 650GB * 111e6 word/GB / 1 word/token. 1.6e21 FLOP.

If we assume 2 epochs, 3.2e21 FLOP. Certainly <1e23 FLOP.
",,"""Our training corpus consists of the Japanese portions of publicly available corpus such as C4, CC-100, and Oscar. We also incorporated the Web texts crawled by in-house system. The total size of our training corpus is about 650 GB.""

https://huggingface.co/line-corporation/japanese-large-lm-3.6b",72000000000.0,"650GB per huggingface

our guide says 111M Japanese words per GB, which would be ~72B words

https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.ieihc08p8dn0",,,,NVIDIA A100,,,"(google translated)

In this article, we will introduce the 3.6 Billion (3.6 Billion) and 1.7 Billion (1.7 Billion) parameters that we trained and published in Japanese. While introducing the language models (hereinafter referred to as the 3.6B model and 1.7B model, respectively), we will share the know-how on language model construction that we have gained along the way.",,Open weights (unrestricted),,Likely,2024-09-05 18:08:31+00:00,Japan,,,,,,,,,
Code Llama-7B,Language,Meta AI,Industry,"Baptiste Rozière, Jonas Gehring, Fabian Gloeckle, Sten Sootla, Itai Gat, Ellen Tan, Yossef (Yossi) Adi, Jingyu Liu, Tal Remez, Jérémy Rapin, Artyom Kozhevnikov, Ivan Evtimov, Joanna Bitton, Manish Bhatt, Cristian Canton Ferrer, Aaron Grattafiori, Wenhan Xiong, Alexandre Defossez, Jade Copet, Faisal Azhar, Hugo Touvron, Gabriel Synnaeve, Louis Martin, Nicolas Usunier, Thomas Scialom",2023-08-14,Code Llama: Open Foundation Models for Code,"https://ai.meta.com/research/publications/code-llama-open-foundation-models-for-code/
https://arxiv.org/abs/2308.12950",1297.0,,,7000000000.0,7B,1.1e+23,,,"2.5e22 finetune compute + 8.4e22 base compute for Llama 2-7B, for ~1.1e23 compute overall

Table 26: ""In aggregate, training all 12 Code Llama models required 1400K GPU hours of computation on hardware of type A100-80GB""
Suggests all versions took a combined 4.7e23 FLOPs:
3.12e14 * 1400000 * 3600 * 0.3 = 4.7e23

Assuming this refers to the finetune compute only, agrees with our finetune estimate if compute is proportional to parameter count:
7 / (7+13+34+70) = 0.056
0.056 * 4.7e23 = 2.65e22
",Unspecified unreleased,"""As shown in Table 1, Code Llama is trained predominantly on a near-deduplicated dataset of
publicly available code. We also source 8% of our samples data from natural language datasets related to
code. This dataset contains many discussions about code and code snippets included in natural language
questions or answers. To help the model retain natural language understanding skills, we also sample a small
proportion of our batches from a natural language dataset""",600000000000.0,"Llama 2 used 2T tokens, and ""We train Code Llama on 500B additional tokens and Code Llama - Python further on 100B tokens""

2T + 500B + 100B = 2600000000000",,,,NVIDIA A100 SXM4 80 GB,,,"We release Code Llama, a family of large language models for code based on Llama 2 providing state-of-the-art performance among open models, infilling capabilities, support for large input contexts, and zero-shot instruction following ability for programming tasks. We provide multiple flavors to cover a wide range of applications: foundation models (Code Llama), Python specializations (Code Llama - Python), and instruction-following models (Code Llama - Instruct) with 7B, 13B and 34B parameters each. All models are trained on sequences of 16k tokens and show improvements on inputs with up to 100k tokens. 7B and 13B Code Llama and Code Llama - Instruct variants support infilling based on surrounding content. Code Llama reaches state-of-the-art performance among open models on several code benchmarks, with scores of up to 53% and 55% on HumanEval and MBPP, respectively. Notably, Code Llama - Python 7B outperforms Llama 2 70B on HumanEval and MBPP, and all our models outperform every other publicly available model on MultiPL-E. We release Code Llama under a permissive license that allows for both research and commercial use.",,Open weights (restricted use),,Confident,2024-11-25 20:29:31+00:00,United States of America,Llama 2-7B,2.5e+22,"Code Llama-base is trained from Llama 2 with 500B tokens: ""We train Code Llama on 500B tokens during the initial phase, starting from the 7B, 13B, and 34B versions of Llama 2""

Code Llama-Python required an additional 100B tokens in fine-tuning: ""We train Code Llama on 500B additional tokens and Code Llama - Python further on 100B tokens.""
Code Llama-Instruct is fine-tuned on 5B tokens: ""For Code Llama - Instruct, we train with a batch size of 524,288 tokens and on approx. 5B tokens in total.""

7B * (500B+100B) * 6 = 2.5e22

Table 26: ""In aggregate, training all 12 Code Llama models required 1400K GPU hours of computation on hardware of type A100-80GB""
Suggests all versions took a combined 4.7e23 FLOPs:
3.12e14 * 1400000 * 3600 * 0.3 = 4.7e23

Assuming this refers to the finetune compute only, agrees with our finetune estimate if compute is proportional to parameter count:
7 / (7+13+34+70) = 0.056
0.056 * 4.7e23 = 2.65e22
",,,,4000000.0,,
Code Llama-13B,Language,Meta AI,Industry,"Baptiste Rozière, Jonas Gehring, Fabian Gloeckle, Sten Sootla, Itai Gat, Ellen Tan, Yossef (Yossi) Adi, Jingyu Liu, Tal Remez, Jérémy Rapin, Artyom Kozhevnikov, Ivan Evtimov, Joanna Bitton, Manish Bhatt, Cristian Canton Ferrer, Aaron Grattafiori, Wenhan Xiong, Alexandre Defossez, Jade Copet, Faisal Azhar, Hugo Touvron, Gabriel Synnaeve, Louis Martin, Nicolas Usunier, Thomas Scialom",2023-08-14,Code Llama: Open Foundation Models for Code,"https://ai.meta.com/research/publications/code-llama-open-foundation-models-for-code/
https://arxiv.org/abs/2308.12950",,,,13000000000.0,13B,,,,,Unspecified unreleased,,600000000000.0,"""We train Code Llama on 500B additional tokens and Code Llama - Python further on 100B tokens""",,,,NVIDIA A100 SXM4 80 GB,,,"We release Code Llama, a family of large language models for code based on Llama 2 providing state-of-the-art performance among open models, infilling capabilities, support for large input contexts, and zero-shot instruction following ability for programming tasks. We provide multiple flavors to cover a wide range of applications: foundation models (Code Llama), Python specializations (Code Llama - Python), and instruction-following models (Code Llama - Instruct) with 7B, 13B and 34B parameters each. All models are trained on sequences of 16k tokens and show improvements on inputs with up to 100k tokens. 7B and 13B Code Llama and Code Llama - Instruct variants support infilling based on surrounding content. Code Llama reaches state-of-the-art performance among open models on several code benchmarks, with scores of up to 53% and 55% on HumanEval and MBPP, respectively. Notably, Code Llama - Python 7B outperforms Llama 2 70B on HumanEval and MBPP, and all our models outperform every other publicly available model on MultiPL-E. We release Code Llama under a permissive license that allows for both research and commercial use.",,Open weights (restricted use),,Confident,2024-12-02 15:26:26+00:00,United States of America,Llama 2-13B,4.68e+22,600000000000*13*10^9*6 = 4.68e+22,,,,4000000.0,,
Japanese StableLM Base Alpha 7B,Language,Stability AI,Industry,"Meng Lee, Fujiki Nakamura, Makoto Shing, Paul McCann, Takuya Akiba, Naoki Orii",2023-08-10,"Japanese StableLM, Marking Entry into International Language Model  Market",https://stability.ai/news/stability-ai-new-jplm-japanese-language-model-stablelm,,,"best open-source Japanese LM: ""It stands as the top-performing publicly available Japanese language model, according to a benchmark suite against four sets of other Japanese LMs.""",7000000000.0,7B,3.15e+22,,,"7b params, 750b tokens
7b * 750b * 6 = 3.15e22",,Japanese language sources + RedPajama,750000000000.0,750B tokens,,,,,,,"Japanese StableLM is a 7 billion-parameter general-purpose language model. It stands as the top-performing publicly available Japanese language model, according to a benchmark suite against four sets of other Japanese LMs.

Japanese StableLM Base Alpha 7B will be released under the commercially available Apache License 2.0. Japanese StableLM Instruct Alpha 7B is a model created for research purposes and is released exclusively for research use. For details, please refer to the Hugging Face Hub page.",,Open weights (unrestricted),,Confident,2024-10-26 16:37:53+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Baichuan2-53B,Language,Baichuan,Industry,,2023-08-09,Chinese AI startup Baichuan rolls out third LLM in four months,https://technode.com/2023/08/09/chinese-ai-startup-baichuan-rolls-out-third-llm-in-four-months/,,,,53000000000.0,,8.268e+23,,,"Given that it was announced at a similar time to the other Baichuan2 models, this assumes that the dataset size is the same at 2.6T tokens while the parameter count was scaled up. This would be consistent with many other model releases, such as Meta's Llama models.
53b * 2.6t * 6 = 8.268e23
",,,,,,,,,,,"On Tuesday, four-month-old AI startup Baichuan Intelligent Technology unveiled its first closed-source model equipped with 53 billion parameters. Following the Chinese company’s rapid release of two open-source large language models since its founding in April, the new model demonstrates the firm’s fast pace in delivering pre-trained models for larger parameters. The freshly introduced model, Baichuan-53B, is mainly for corporate clients and focused on text generation. A ChatGPT-like chat service built on the model entered internal testing on the same day the model was launched, its official website shows, with plans for the firm to publicly launch APIs and associated components next month.",,,,Likely,2025-02-14 21:17:38+00:00,China,,,,,,,,,
Claude Instant,Language,Anthropic,Industry,,2023-08-09,Releasing Claude Instant 1.2,https://www.anthropic.com/news/releasing-claude-instant-1-2,,,"Possibly widely used, seems to only be available via API and not Anthropic's chat interface. 
Used by one company for customer service: https://www.anthropic.com/news/prompt-engineering-for-business-performance",,"speculatively, Anthropic charges 1/10 as much for Claude Instant as Claude 2, so it may have around 1/10 the parameters (Claude 2 parameters are not public info)

https://cdn.sanity.io/files/4zrzovbb/website/90df03aed08b794ab03c5a7bf28b2ad9cf26cf3c.pdf",,,,,Unspecified unreleased,,,,,,,,,,"Businesses working with Claude can now access our latest version of Claude Instant, version 1.2, available through our API. Claude Instant is our faster, lower-priced yet still very capable model, which can handle a range of tasks including casual dialogue, text analysis, summarization, and document comprehension.

Claude Instant 1.2 incorporates the strengths of our latest model Claude 2 in real-world use cases and shows significant gains in key areas like math, coding, reasoning, and safety. It generates longer, more structured responses and follows formatting instructions better. Instant 1.2 also shows improvements in quote extraction, multilingual capabilities, and question answering.",,API access,,Unknown,2024-12-22 21:47:09+00:00,United States of America,,,,,,,,,
CALM,Robotics,"NVIDIA,Technion - Israel Institute of Technology","Industry,Academia","Chen Tessler, Yoni Kasten, Yunrong Guo, Shie Mannor, Gal Chechik, Xue Bin Peng",2023-08-06,CALM: Conditional Adversarial Latent Models for Directable Virtual Characters,https://research.nvidia.com/labs/par/calm/,9.0,,,,,,,,The total pre-training of the networks involved 5 billion environment steps. The low-level policy operates at 30Hz while the high-level policy operates at 6Hz.,,"160 diverse motion clips totaling 30 minutes, from a motion capture dataset. These include motions like walking, running, sword strikes, etc.",,,,,,NVIDIA A100,,Reinforcement learning,"In this work, we present Conditional Adversarial Latent Models (CALM),
an approach for generating diverse and directable behaviors for user-controlled
interactive virtual characters. Using imitation learning, CALM learns a representation of movement that captures the complexity and diversity of human
motion, and enables direct control over character movements. The approach
jointly learns a control policy and a motion encoder that reconstructs key
characteristics of a given motion without merely replicating it. The results
show that CALM learns a semantic motion representation, enabling control
over the generated motions and style-conditioning for higher-level task training. Once trained, the character can be controlled using intuitive interfaces,
akin to those found in video games.",,,,Unknown,2024-09-16 17:03:35+00:00,"United States of America,Israel",,,,,,,,,
SS-pLM,Biology,"Nostrum Biodiscovery,Barcelona Supercomputing Center,Institucio Catalana de Recerca i Estudis Avancçats","Government,Research collective","Yaiza Serrano, Sergi Roda, Victor Guallar, Alexis Molina",2023-08-06,Efficient and accurate sequence generation with small-scale protein language models,https://www.biorxiv.org/content/10.1101/2023.08.04.551626.abstract,3.0,,,14800000.0,From Table 3,2.0700000000000025e+19,,,"1. Hardware setup: 4x NVIDIA A30 GPUs (1.50×10¹⁴ FLOP/s per GPU in FP16)
2. Training duration: 1 day (86,400 seconds) - directly provided
3. Utilization rate: 40%
4. Calculation: 4 GPUs × 1.50×10¹⁴ FLOP/s × 86,400s × 0.40 = 2.07×10¹⁹ FLOPs",,,525000001.0000008,Total Datapoints = 1.75 × 10⁶ sequences × 300 tokens/sequence = 5.25 × 10⁸ tokens,,,,,,,"Large Language Models (LLMs) have demonstrated exceptional capabilities in understanding contextual relationships, outperforming traditional methodologies in downstream tasks such as text generation and sentence classification. This success has been mirrored in the realm of protein language models (pLMs), where proteins are encoded as text via their amino acid sequences. However, the training of pLMs, which involves tens to hundreds of millions of sequences and hundreds of millions to billions of parameters, poses a significant computational challenge.

In this study, we introduce a Small-Scale Protein Language Model (SS-pLM), a more accessible approach that requires training on merely millions of representative sequences, reducing the number of trainable parameters to 14.8M. This model significantly reduces the computational load, thereby democratizing the use of foundational models in protein studies. We demonstrate that the performance of our model, when fine-tuned to a specific set of sequences for generation, is comparable to that of larger, more computationally demanding pLM.",,,,Unverified,2025-02-14 21:18:15+00:00,"Spain,Spain,Spain",,,,,,,,,
StableLM-Base-Alpha-7B,Language,Stability AI,Industry,,2023-08-05,,https://huggingface.co/stabilityai/stablelm-base-alpha-7b-v2,,,,6890209280.0,,4.5e+22,,,"""StableLM-Base-Alpha-7B-v2 is pre-trained using a multi-stage context length extension schedule following similar work (Nijkamp et al. 2023); first pre-training at a context length of 2048 for 1 trillion tokens, then fine-tuning at a context length of 4096 for another 100B tokens""

6890209280 params * 1.1 trillion tokens * 6 = 4.5e22

alternatively: ""StableLM-Base-Alpha-7B-v2 was trained on the Stability AI cluster - occupying 384 NVIDIA A100 40GB GPUs across AWS P4d instances. Training took approximately 16.33 days to complete across both stages.""

312 teraflops * 384 * 16.33 * 24 * 3600 * 0.3 = 5.07e22","RefinedWeb,RedPajama-Data,The Pile","""The first pre-training stage relies on 1 trillion tokens sourced from a mix of the public Falcon RefinedWeb extract (Penedo et al., 2023), RedPajama-Data (Together Computer 2023, The Pile (Gao et al., 2020), and internal datasets with web text sampled at a rate of 71%.

In the second stage, we include the StarCoder (Li et al., 2023) dataset and down sample web text to 55% while increasing sampling proportions of naturally long text examples in the aforementioned sources.""",750000000000.0,1 trillion tokens,1.0,392.0,16.33 days,NVIDIA A100 SXM4 40 GB,,,"StableLM-Base-Alpha-7B-v2 is a 7 billion parameter decoder-only language model pre-trained on diverse English datasets. This model is the successor to the first StableLM-Base-Alpha-7B model, addressing previous shortcomings through the use of improved data sources and mixture ratios.",,Open weights (unrestricted),,Confident,2024-10-26 16:38:01+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
GGNN,Biology,"Westlake University,Tsinghua University,Toyota Technological Institute at Chicago","Academia,Academia,Academia","Fang Wu, Lirong Wu, Dragomir Radev, Jinbo Xu and Stan Z. Li",2023-08-05,Integration of pre-trained protein language models into geometric deep learning networks,https://www.nature.com/articles/s42003-023-05133-1,19.0,SOTA improvement,"""In this work, we integrate the knowledge learned by well-trained protein language models into several state-of-the-art geometric networks and evaluate a variety of protein representation learning benchmarks, including protein-protein interface prediction, model quality assessment, protein-protein rigid-body docking, and binding affinity prediction. Our findings show an overall improvement of 20% over baselines.""",,"ESM-2 650M is used as the main PLM, they run ablations with versions up to 3B. Unclear how many parameters are are in the geometric graph neural network module.",7.56e+21,,,"ESM-2 650M is very likely the majority of FLOPs, since they only used 2 A100s (ESM-2 650M used 512 V100s for 8 days). As such I'm reporting the compute from ESM-2 650M here only.",,,,,,,,NVIDIA A100 SXM4 80 GB,2.0,,,,,,Confident,2025-02-19 18:50:40+00:00,"China,China,United States of America",ESM2-650M,,,,,,,,
Weblab-10B,Language,Matsuo Lab,, Takeshi Kojima,2023-08-04, weblab-10b,https://huggingface.co/matsuo-lab/weblab-10b,,,,10000000000.0,,3.6e+22,,,"6ND = 10B*600B * 6 = 3.6e22"" The model was trained on around 600B tokens from a mixture of the following corpora.""

See also: https://weblab.t.u-tokyo.ac.jp/en/100%E5%84%84%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%BA%E3%83%BB%E6%97%A5%E8%8B%B12%E3%83%B6%E5%9B%BD%E8%AA%9E%E5%AF%BE%E5%BF%9C%E3%81%AE%E5%A4%A7%E8%A6%8F%E6%A8%A1/","The Pile,Japanese C4","""The model was trained on around 600B tokens from a mixture of the following corpora.
    Japanese C4
    The Pile
""",256131000000.0,"Japanese C4 is 821 GB; The Pile is 825 GB.
There are ~111 million tokens per GB for Japanese text and ~200M for English.
(821 * 111M) + (825 * 200) = 256,131,000,000 tokens

Model saw 600B tokens, so ~ 2.34 epochs
",2.34,,,,,Self-supervised learning,,,Open weights (non-commercial),,Confident,2025-02-14 21:18:32+00:00,Japan,,,,,,,,,
YuLan-Chat-2 (13B),Language,Renmin University of China,Academia,,2023-08-02,YuLan-Chat: An Open-Source Bilingual Chatbot,https://github.com/RUC-GSAI/YuLan-Chat,,,"""[Aug. 18, 2023] Our YuLan-Chat-2-13B achieves the 5th position of OpenCompass benchmark!""",13000000000.0,,,,,,,,,,,,,,,,"YuLan-Chat models are chat-based large language models, which are developed by the researchers in GSAI, Renmin University of China (YuLan, which represents Yulan Magnolia, is the campus flower of Renmin University of China). The newest version is developed by continually-pretraining and instruction-tuning LLaMA-2 with high-quality English and Chinese data. The model has the following technical characteristics:
Due to continued pre-training on high-quality Chinese-English bilingual data, the language ability of the model has been improved.
To well support Chinese and longer inputs and outputs, we expand the original vocabulary with Chinese words and extend the maximum length of LLaMA-2. It can support 8k context now.
To well activate the bilingual instruction following capacity, we construct high-quality bilingual instructions, and perform multi-stage instruction-tuning.",,,,Confident,2024-09-05 18:08:31+00:00,China,LLaMA-13B,,"""Due to continued pre-training on high-quality Chinese-English bilingual data, the language ability of the model has been improved.""

Token count not stated",,,,,,
OpenFlamingo,Image generation,"University of Washington,Stanford University,Allen Institute for AI,Hebrew University of Jerusalem,Columbia University,Google DeepMind,University of California Santa Barbara (UCSB),Research Center Juelich","Academia,Academia,Research collective,Academia,Academia,Industry,Academia","Anas Awadalla, Irena Gao, Josh Gardner, Jack Hessel, Yusuf Hanafy, Wanrong Zhu, Kalyani Marathe, Yonatan Bitton, Samir Gadre, Shiori Sagawa, Jenia Jitsev, Simon Kornblith, Pang Wei Koh, Gabriel Ilharco, Mitchell Wortsman, Ludwig Schmidt",2023-08-02,OpenFlamingo: An Open-Source Framework for Training Large Autoregressive Vision-Language Models,https://arxiv.org/abs/2308.01390,,,,9000000000.0,"""We introduce OpenFlamingo, a family of autoregressive vision-language models ranging from 3B to 9B parameters.""",,,,9B model is trained using 64 A100-80GBs in 16bf. Length of training not stated. Might be possible to calculate training compute using operations counting method.,"LAION-2B,MMC4 / Multimodal C4",,17400000000.0,"""OpenFlamingo models were trained for 60M interleaved (MMC4) examples1 and 120M LAION-2B examples.""
Table 2 and Figure 4 provide details on the length of each example. MMC4 has median of 2 images and 256 text tokens per sample, while LAION-2B has 1 and 17, respectively.

Suggests a total of around 240M images and 17.4B text tokens. Prediction task is next (text) token prediction; images are only used for conditioning.",,,,NVIDIA A100 SXM4 80 GB,64.0,,"We introduce OpenFlamingo, a family of autoregressive vision-language models ranging from 3B to 9B parameters. OpenFlamingo is an ongoing effort to produce an open-source replication of DeepMind's Flamingo models. On seven vision-language datasets, OpenFlamingo models average between 80 - 89% of corresponding Flamingo performance. This technical report describes our models, training data, hyperparameters, and evaluation suite. We share our models and code at this https URL.",,Open weights (unrestricted),,Confident,2025-01-17 20:09:27+00:00,"United States of America,United States of America,United States of America,Israel,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America",,,,,,,,,
JIANG,Language,K.D. Feddersen (KDF),Industry,"Qinhua Duan, Wenchao Gu, Yujia Chen, Wenxin Mao, Zewen Tian, Hui Cao",2023-08-01,JIANG: Chinese Open Foundation Language Model,https://arxiv.org/abs/2308.00624,0.0,,,,They show a chart with different 400M models they trained to refine the design. Main model probably has more but they don't specify.,4.03e+22,,,"""The training was conducted using 96 A100 80G GPUs, and the entire process took approximately 52 days.""

312 teraflop/s * 96 * 52 * 24 * 3600 * 0.3 = 4e22",,"""The model is trained on a large quantity of textual data including both English and Chinese and use a standard optimizer.""

Mostly from Chinese internet, and The Pile and GitHub.",467000000000.0,"467B tokens (inferred from Table 1).

It's a mix of Chinese and English text, I'll use our standard 1:1 token:words ratio for Chinese.",,1200.0,52 days,NVIDIA A100 SXM4 80 GB,96.0,,"With the advancements in large language model technology, it has showcased capabilities that come close to those of human beings across various tasks. This achievement has garnered significant interest from companies and scientific research institutions, leading to substantial investments in the research and development of these models. While numerous large models have emerged during this period, the majority of them have been trained primarily on English data. Although they exhibit decent performance in other languages, such as Chinese, their potential remains limited due to factors like vocabulary design and training corpus. Consequently, their ability to fully express their capabilities in Chinese falls short. To address this issue, we introduce the model named JIANG (Chinese pinyin of ginger) specifically designed for the Chinese language. We have gathered a substantial amount of Chinese corpus to train the model and have also optimized its structure. The extensive experimental results demonstrate the excellent performance of our model.",,Open weights (unrestricted),,Confident,2025-02-14 21:18:40+00:00,China,,,,,,,6000000.0,"""During the training process, we employed a large batch size of 6 million tokens to enhance the model’s stability""",
Vicuna-7B-v1.5,Language,"Large Model Systems Organization,University of California (UC) Berkeley","Academia,Academia",,2023-08-01,Vicuna Model Card,https://huggingface.co/lmsys/vicuna-7b-v1.5,,,,7000000000.0,,,1.554e+19,,"6*7*10^9*370*10^6 = 1.554e+19

unsure about amount of epochs ->  lower bound, Likely confidence",Vicuna ShareGPT Dataset,,370000000.0,"""The training data is around 125K conversations collected from ShareGPT.com.""""
370M tokens (Table 14)

https://arxiv.org/pdf/2306.05685""",,,,,,,"Vicuna v1.5 is fine-tuned from Llama 2 with supervised instruction fine-tuning. The training data is around 125K conversations collected from ShareGPT.com. See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.
https://arxiv.org/abs/2306.05685",,Open weights (restricted use),,Likely,2024-11-24 22:36:47+00:00,"United States of America,United States of America",Llama 2-7B,,,,,,,,
Vicuna-13B-v1.5,Language,"Large Model Systems Organization,University of California (UC) Berkeley","Academia,Academia",,2023-08-01,Vicuna Model Card,https://huggingface.co/lmsys/vicuna-13b-v1.5,,,,13000000000.0,,,2.886e+19,,"6*13*10^9*370*10^6 = 2.886e+19

unsure about amount of epochs ->  lower bound, Likely confidence",Vicuna ShareGPT Dataset,,370000000.0,"""The training data is around 125K conversations collected from ShareGPT.com.""""
370M tokens (Table 14)

https://arxiv.org/pdf/2306.05685""",,,,,,,"Vicuna v1.5 is fine-tuned from Llama 2 with supervised instruction fine-tuning. The training data is around 125K conversations collected from ShareGPT.com. See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.
https://arxiv.org/abs/2306.05685",,Open weights (restricted use),,Likely,2024-11-24 22:36:59+00:00,"United States of America,United States of America",Llama 2-13B,,,,,,,,
bilingual-gpt-neox-4b,Language,rinna,Industry,"Tianyu Zhao, Toshiaki Wakatsuki, Akio Kaga, Koh Mitsuda, Kei Sawada",2023-07-31,Release of Pre-Trained Models for the Japanese Language,"https://huggingface.co/rinna/bilingual-gpt-neox-4b

https://arxiv.org/abs/2404.01657",,,,3800000000.0,3.8 billion,1.2e+22,,,3.8 billion params * 524b tokens * 6 = 1.2e22,"Japanese CC-100,Japanese C4,The Pile,RedPajama",,,,,,,,,,This repository provides an English-Japanese bilingual GPT-NeoX model of 3.8 billion parameters.,,Open weights (unrestricted),,Likely,2025-02-14 21:18:45+00:00,Japan,,,,,,,,,
RT-2,Robotics,Google DeepMind,Industry,"Anthony Brohan, Noah Brown, Justice Carbajal, Yevgen Chebotar, Xi Chen, Krzysztof Choromanski, Tianli Ding, Danny Driess, Avinava Dubey, Chelsea Finn, Pete Florence, Chuyuan Fu, Montse Gonzalez Arenas, Keerthana Gopalakrishnan, Kehang Han, Karol Hausman, Alexander Herzog, Jasmine Hsu, Brian Ichter, Alex Irpan, Nikhil Joshi, Ryan Julian, Dmitry Kalashnikov, Yuheng Kuang, Isabel Leal, Lisa Lee, Tsang-Wei Edward Lee, Sergey Levine, Yao Lu, Henryk Michalewski, Igor Mordatch, Karl Pertsch, Kanishka Rao, Krista Reymann, Michael Ryoo, Grecia Salazar, Pannag Sanketi, Pierre Sermanet, Jaspiar Singh, Anikait Singh, Radu Soricut, Huong Tran, Vincent Vanhoucke, Quan Vuong, Ayzaan Wahid, Stefan Welker, Paul Wohlhart, Jialin Wu, Fei Xia, Ted Xiao, Peng Xu, Sichun Xu, Tianhe Yu, Brianna Zitkovich",2023-07-28,RT-2: Vision-Language-Action Models Transfer Web Knowledge to Robotic Control,https://arxiv.org/abs/2307.15818,691.0,SOTA improvement,"""We compare our method to multiple state-of-the-art baselines that challenge different aspects of our method. All of the baselines use the exact same robotic data... Here, on average, both instantiations of RT-2 perform similarly, resulting in ∼2x improvement over the next two baselines, RT-1 and MOO, and ∼6x better than the other baselines""",55000000000.0,"""We train two specific instantiations of RT-2 that leverage pre-trained VLMs: (1) RT-2-PaLI-X is built from 5B and 55B PaLI-X (Chen et al., 2023a), and (2) RT-2-PaLM-E is built from 12B PaLM-E (Driess et al., 2023).""

55B and 12B have similar overall performance",,,,"""""For RT-2-PaLI-X-55B, we use learning rate 1e-3 and batch size 2048 and co-fine-tune the model for 80K gradient steps""
Sequence length not stated",RT-1,"""The vision-language datasets are based on the dataset mixtures from Chen et al. (2023b) and Driess et al. (2023). The bulk of this data consists of the WebLI dataset, which is around 10B image-text pairs across 109 languages, filtered to the top 10% scoring cross-modal similarity examples to give
1B training examples""
""The robotics dataset is based on the dataset from Brohan et al. (2022).""

Chen et al and Driess et al are the original Pali-X and Palm-E papers.  image-text web data

Brohan et al is the RT-1 paper",,,,,,,,,"We study how vision-language models trained on Internet-scale data can be incorporated directly into end-to-end robotic control to boost generalization and enable emergent semantic reasoning. Our goal is to enable a single end-to-end trained model to both learn to map robot observations to actions and enjoy the benefits of large-scale pretraining on language and vision-language data from the web. To this end, we propose to co-fine-tune state-of-the-art vision-language models on both robotic trajectory data and Internet-scale vision-language tasks, such as visual question answering. In contrast to other approaches, we propose a simple, general recipe to achieve this goal: in order to fit both natural language responses and robotic actions into the same format, we express the actions as text tokens and incorporate them directly into the training set of the model in the same way as natural language tokens. We refer to such category of models as vision-language-action models (VLA) and instantiate an example of such a model, which we call RT-2. Our extensive evaluation (6k evaluation trials) shows that our approach leads to performant robotic policies and enables RT-2 to obtain a range of emergent capabilities from Internet-scale training. This includes significantly improved generalization to novel objects, the ability to interpret commands not present in the robot training data (such as placing an object onto a particular number or icon), and the ability to perform rudimentary reasoning in response to user commands (such as picking up the smallest or largest object, or the one closest to another object). We further show that incorporating chain of thought reasoning allows RT-2 to perform multi-stage semantic reasoning, for example figuring out which object to pick up for use as an improvised hammer (a rock), or which type of drink is best suited for someone who is tired (an energy drink).",,,,Confident,2024-11-01 14:05:35+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",PaLI-X,,"""For RT-2-PaLI-X-55B, we use learning rate 1e-3 and batch size 2048 and co-fine-tune the model for 80K gradient steps""

",,,,,,True
Zi Yue,Language,NetEase,Industry,,2023-07-28,NetEase Youdao launches first large model in education,https://www.chinadaily.com.cn/a/202307/28/WS64c3226ea31035260b8190a4.html,,,"""Zhou Feng, CEO of NetEase Youdao, told China Daily that, in terms of translation ability, Zi Yue has ""already surpassed ChatGPT in an all-around way"" and is better than most major smart translators in the market.

""The biggest opportunity brought by the large model is individualized teaching and studying, which offers students personalized analysis and tutoring while guiding them in exploring answers on their own, just like human teachers"", Zhou said.""",,,,,,,,,,,,,,,,,"As Open AI's ChatGPT takes the tech world by storm, Chinese educational technology firm NetEase Youdao launched its large model, along with up to six applications, on Thursday, which marked the birth of one of China's first large models in the education sector.",,,,Unknown,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Zi Yue 2.0,Language,NetEase,Industry,,2023-07-28,"NetEase Youdao Upgrades 'Ziyue' Foundation Model to 2.0 Ver, Encompassing More Subjects & Teaching Areas",https://m.aastocks.com/en/usq/news/comment.aspx?source=AAFN&id=NOW.1317044&catg=1,,,,,,,,,,,,,,,,,,,,"Chinese media reported that Youdao (DAO.US)     has released the 2.0 upgrade for its Ziyue educational foundation model. Youdao also launched Youdao Speed Reading (literal translation of ""有道速讀""), new-generation virtual personality verbal language trainer, AI home tutors, and Youdao-branded new-generation intelligent hardware applications.

It is reported that Ziyue 2.0 has been upgraded in the knowledge question and answering ability within the education scene, with it expanding to more subjects and teaching areas. The amount of educational data has been largely expanded, the model's context window has been upgraded to 16,000 tokens, and new Agent and retrieval enhancement capabilities have been added.",,,,Unknown,2024-09-05 18:08:31+00:00,China,,,,,,,,,
BELLE-Llama2-13B-chat-0.4M,Language,KE Holdings Inc. (“Beike”),Industry,,2023-07-27,,https://huggingface.co/BELLE-2/BELLE-Llama2-13B-chat-0.4M,,,,13000000000.0,,,,,,,,,,,,,,,,"This model is obtained by fine-tuning the complete parameters using 0.4M Chinese instruction data on the original Llama2-13B-chat. We firmly believe that the original Llama2-chat exhibits commendable performance post Supervised Fine-Tuning (SFT) and Reinforcement Learning with Human Feedback (RLHF). Our pursuit continues to be the further enhancement of this model using Chinese instructional data for fine-tuning, with an aspiration to facilitate stable and high-quality Chinese language outputs.",,Open weights (non-commercial),,Confident,2024-11-27 19:40:51+00:00,China,Llama 2-13B,,,,,,,,
Xinyi Video 1.0,,,,,2023-07-27,"新壹科技亮出视频垂直大模型，支持多模态，24小时训练一个数字人
",https://www.sohu.com/a/706739123_115978,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
AudioLM,Audio,Google,Industry,"Zalán Borsos, Raphaël Marinier, Damien Vincent, Eugene Kharitonov, Olivier Pietquin, Matt Sharifi, Dominik Roblek, Olivier Teboul, David Grangier, Marco Tagliasacchi, Neil Zeghidour",2023-07-26,AudioLM: a Language Modeling Approach to Audio Generation,https://arxiv.org/abs/2209.03143,446.0,SOTA improvement,"Compared to other systems without text supervision, AudioLM achieves the highest
sWUGGY scores across both splits. Similarly, it also attains the
highest score in the sBLIMP metric, improving by 8% relative
over the previous state-of-the-art (CPC-BERT [59]).",1500000000.0,"""We use identical decoder-only Transformers in
all stages, with 12 layers, 16 attention heads, embedding
dimension of 1024, feed-forward layer dimension of 4096
and dropout of 0.1, together with T5-style relative positional
embeddings [38], resulting in a model parameter size of
0.3B per stage.""

Three stages (figure 2), and 300M per stage. Plus 600M parameters for w2v-BERT XL, so 1.5B total",3.9e+18,,,"""We train each stage on 16 TPUv4s with batch size of 256 for 1M steps.""

That's for the 900M-param transformers

If there's 256 passes in each batch, then using 6ND that's 900m * 256m * 6 = 1.3e18. sanity check: 16 tpu4s is 4.4e15 FLOP/s. 1.3e18 FLOP / 4.4e15 FLOP/s is 295 seconds. adjusting for utilization it would be ~1000 seconds or 15 minutes? probably too short, so 1.3e18 seems too low.

upd there are 3 stages -> 1.3e18*3 = 3.9e+18 (Speculative due to reasoning above)",LibriLight,,820800000.0,"60k hours of English speech
13680*60000 = 820800000 words

https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.sxcem9l5k3ce",,,,Google TPU v4,,Self-supervised learning,"We introduce AudioLM, a framework for high-quality audio generation with long-term consistency. AudioLM maps the input audio to a sequence of discrete tokens and casts audio generation as a language modeling task in this representation space. We show how existing audio tokenizers provide different trade-offs between reconstruction quality and long-term structure, and we propose a hybrid tokenization scheme to achieve both objectives. Namely, we leverage the discretized activations of a masked language model pre-trained on audio to capture long-term structure and the discrete codes produced by a neural audio codec to achieve high-quality synthesis. By training on large corpora of raw audio waveforms, AudioLM learns to generate natural and coherent continuations given short prompts. When trained on speech, and without any transcript or annotation, AudioLM generates syntactically and semantically plausible speech continuations while also maintaining speaker identity and prosody for unseen speakers. Furthermore, we demonstrate how our approach extends beyond speech by generating coherent piano music continuations, despite being trained without any symbolic representation of music.",,,,Speculative,2025-02-14 21:19:11+00:00,United States of America,,,,,,,,,True
CharacterGLM,,,,,2023-07-25,"AI大模型怎么“走心”？聆心智能CharacterGLM交卷！六边形能力加持
",https://zhidx.com/p/388605.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
RFdiffusion,Biology,"University of Washington,Columbia University,Ecole Normale Supèrieure,University of Cambridge,Massachusetts Institute of Technology (MIT),Seoul National University","Academia,Academia,Academia,Academia,Academia,Academia","Joseph L. Watson, David Juergens, Nathaniel R. Bennett, Brian L. Trippe, Jason Yim, Helen E. Eisenach, Woody Ahern, Andrew J. Borst, Robert J. Ragotte, Lukas F. Milles, Basile I. M. Wicky, Nikita Hanikel, Samuel J. Pellock, Alexis Courbet, William Sheffler, Jue Wang, Preetham Venkatesh, Isaac Sappington, Susana Vázquez Torres, Anna Lauko, Valentin De Bortoli, Emile Mathieu, Sergey Ovchinnikov, Regina Barzilay, Tommi S. Jaakkola, Frank DiMaio, Minkyung Baek, David Baker",2023-07-23,De novo design of protein structure and function with RFdiffusion,https://www.nature.com/articles/s41586-023-06415-8,,,,,,,,,,"PDB (Protein Data Bank), AlphaFold database (AFDB)","""We generate training inputs by noising structures sampled from the Protein Data Bank (PDB) for up to 200 steps""

""RF was trained on a mixture of datasets including 1) monomer/homo-oligomer structures in the PDB, 2) hetero-oligomer structures in the PDB (date cutoff August 2nd, 2021), 3) AlphaFold2 structural models having plDDT > 0.758, and 4) negative protein-protein interaction examples generated by random pairing. The training examples were sampled from each database with a ratio of 2:1:4:1.""",2293760000.0,"Table 3 (Supplementary materials):

Initial Training:

crop size 256
25600 examples per epoch
200 epochs

Fine tuning:

crop size 384
25600 examples per epoch
100 epochs

256*25600*200+384*25600*100 = 2293760000 tokens ~ 2.3B tokens",,672.0,"""RoseTTAFold was trained for 4 weeks on 64 V100 GPUs on
Microsoft Azure.""

4*7*24=672 hours",NVIDIA V100,64.0,,"There has been considerable recent progress in designing new proteins using deep-learning methods1,2,3,4,5,6,7,8,9. Despite this progress, a general deep-learning framework for protein design that enables solution of a wide range of design challenges, including de novo binder design and design of higher-order symmetric architectures, has yet to be described. Diffusion models10,11 have had considerable success in image and language generative modelling but limited success when applied to protein modelling, probably due to the complexity of protein backbone geometry and sequence–structure relationships. Here we show that by fine-tuning the RoseTTAFold structure prediction network on protein structure denoising tasks, we obtain a generative model of protein backbones that achieves outstanding performance on unconditional and topology-constrained protein monomer design, protein binder design, symmetric oligomer design, enzyme active site scaffolding and symmetric motif scaffolding for therapeutic and metal-binding protein design. We demonstrate the power and generality of the method, called RoseTTAFold diffusion (RFdiffusion), by experimentally characterizing the structures and functions of hundreds of designed symmetric assemblies, metal-binding proteins and protein binders. The accuracy of RFdiffusion is confirmed by the cryogenic electron microscopy structure of a designed binder in complex with influenza haemagglutinin that is nearly identical to the design model. In a manner analogous to networks that produce images from user-specified inputs, RFdiffusion enables the design of diverse functional proteins from simple molecular specifications.",,Open weights (unrestricted),,Confident,2025-02-17 14:45:24+00:00,"United States of America,United States of America,France,United Kingdom of Great Britain and Northern Ireland,United States of America,Korea (Republic of)",RoseTTAFold All-Atom (RFAA),5.80608e+21,125000000000000*64*672*3600*0.3=5.80608e+21,,,,,,
YAYI-13B-Llama2,,,,,2023-07-22,wenge-research,https://github.com/wenge-research/YAYI,,,,13000000000.0,,,,,,,,,,,,,,,,"The Yayi model is fine-tuned on millions of high-quality domain data manually constructed. The training data covers five major fields, including media publicity, public opinion analysis, public safety, financial risk control, and urban governance, and hundreds of natural language instruction tasks. In the iterative process from pre-training initialization weights to domain models, we gradually enhanced the basic Chinese capabilities and domain analysis capabilities of the Yayi model, and added multi-round dialogue and some plug-in capabilities. ",,,,Unverified,,,,,,,,,,,
YAYI-7B-Llama2,,,,,2023-07-22,wenge-research,https://github.com/wenge-research/YAYI,,,,7000000000.0,,,,,,,,,,,,,,,,"The Yayi model is fine-tuned on millions of high-quality domain data manually constructed. The training data covers five major fields, including media publicity, public opinion analysis, public safety, financial risk control, and urban governance, and hundreds of natural language instruction tasks. In the iterative process from pre-training initialization weights to domain models, we gradually enhanced the basic Chinese capabilities and domain analysis capabilities of the Yayi model, and added multi-round dialogue and some plug-in capabilities. ",,,,Unverified,,,,,,,,,,,
Stable Beluga 1,Language,Stability AI,Industry,,2023-07-21,"Meet Stable Beluga 1 and Stable Beluga 2, Our Large and Mighty Instruction Fine-Tuned Language Models",https://huggingface.co/stabilityai/StableBeluga1-Delta,,,"#4 on Open LLM leaderboard (in July, it's much lower now):

""These Stable Beluga results were evaluated by Stability AI researchers and independently reproduced by Hugging Face on July 21st, 2023, and published in their leaderboard.

As of July 27th, 2023, Stable Beluga 2 is the very best model (#1) on the leaderboard, and Stable Beluga 1 is #4""",65200000000.0,65.2B,,,,,,,,,,,,,,,"Stability AI and its CarperAI lab proudly announce Stable Beluga 1 and its successor Stable Beluga 2 (formerly codenamed FreeWilly), two powerful new, open access, Large Language Models (LLMs). Both models demonstrate exceptional reasoning ability across varied benchmarks. Stable Beluga 1 leverages the original LLaMA 65B foundation model and was carefully fine-tuned with a new synthetically-generated dataset using Supervised Fine-Tune (SFT) in standard Alpaca format. Similarly, Stable Beluga 2 leverages the LLaMA 2 70B foundation model to achieve industry-leading performance.",,Open weights (non-commercial),,Confident,2024-09-05 18:08:31+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",LLaMA-65B,,"Fine-tuned on a 600k dataset. Not sure how many epochs. https://stability.ai/news/stable-beluga-large-instruction-fine-tuned-models

""The training for the Stable Beluga models was directly inspired by the methodology pioneered by Microsoft in its paper: ""Orca: Progressive Learning from Complex Explanation Traces of GPT-4.” While our data generation process is similar, we differ in our data sources. Our variant of the dataset, containing 600,000 data points (roughly 10% of the dataset size the original Orca paper used)...""",,,,,,
Stable Beluga 2,Language,Stability AI,Industry,,2023-07-20,"Meet Stable Beluga 1 and Stable Beluga 2, Our Large and Mighty Instruction Fine-Tuned Language Models","https://stability.ai/news/stable-beluga-large-instruction-fine-tuned-models, https://huggingface.co/stabilityai/StableBeluga2",,,"#1 on Open LLM leaderboard (in July, it's much lower now):

""These Stable Beluga results were evaluated by Stability AI researchers and independently reproduced by Hugging Face on July 21st, 2023, and published in their leaderboard.

As of July 27th, 2023, Stable Beluga 2 is the very best model (#1) on the leaderboard, and Stable Beluga 1 is #4""",70000000000.0,fine-tuned from Llama 2-70B,,,,,Stable Beluga Instruction Dataset,"""The training for the Stable Beluga models was directly inspired by the methodology pioneered by Microsoft in its paper: ""Orca: Progressive Learning from Complex Explanation Traces of GPT-4.” While our data generation process is similar, we differ in our data sources.

Our variant of the dataset, containing 600,000 data points (roughly 10% of the dataset size the original Orca paper used), was created synthetically using high-quality instructions from the following datasets created by Enrico Shippole:

COT Submix Original

NIV2 Submix Original

FLAN 2021 Submix Original

T0 Submix Original""",,,,,,,,,"Stability AI and its CarperAI lab proudly announce Stable Beluga 1 and its successor Stable Beluga 2 (formerly codenamed FreeWilly), two powerful new, open access, Large Language Models (LLMs). Both models demonstrate exceptional reasoning ability across varied benchmarks. Stable Beluga 1 leverages the original LLaMA 65B foundation model and was carefully fine-tuned with a new synthetically-generated dataset using Supervised Fine-Tune (SFT) in standard Alpaca format. Similarly, Stable Beluga 2 leverages the LLaMA 2 70B foundation model to achieve industry-leading performance.",,Open weights (non-commercial),,Likely,2024-09-05 18:08:31+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",Llama 2-70B,,"Fine-tuned on a 600k dataset. Not sure how many epochs. https://stability.ai/news/stable-beluga-large-instruction-fine-tuned-models

""The training for the Stable Beluga models was directly inspired by the methodology pioneered by Microsoft in its paper: ""Orca: Progressive Learning from Complex Explanation Traces of GPT-4.” While our data generation process is similar, we differ in our data sources. Our variant of the dataset, containing 600,000 data points (roughly 10% of the dataset size the original Orca paper used)...""",,,,,,
EXAONE 2.0,"Multimodal,Image generation,Language,Biology,Vision",LG AI Research,Industry,,2023-07-19,LG AI Research Develops Foundation Model Using Amazon SageMaker,https://aws.amazon.com/solutions/case-studies/lg-ai-research-case-study/,,,,300000000000.0,300 billion,,1.08045e+24,,,Unspecified unreleased,"From KoreaTimes (https://www.koreatimes.co.kr/www/tech/2023/12/129_355258.html)

""EXAONE 2.0 studied about 45 million specialized documents and 350 million images, including patents and papers secured through partnerships.

Considering that much of the existing expertise data is in English, EXAONE 2.0 is developed as a bilingual model that can understand and answer both in Korean and English at the same time. It also learns over four times more data than the previous model.""",,,,,,,,,,,Unreleased,,Speculative,2025-01-27 15:45:35+00:00,Korea (Republic of),,,,,,,,,
Llama 2-70B,Language,Meta AI,Industry,"Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, Dan Bikel, Lukas Blecher, Cristian Canton Ferrer, Moya Chen, Guillem Cucurull, David Esiobu, Jude Fernandes, Jeremy Fu, Wenyin Fu, Brian Fuller, Cynthia Gao, Vedanuj Goswami, Naman Goyal, Anthony Hartshorn, Saghar Hosseini, Rui Hou, Hakan Inan, Marcin Kardas, Viktor Kerkez, Madian Khabsa, Isabel Kloumann, Artem Korenev, Punit Singh Koura, Marie-Anne Lachaux, Thibaut Lavril, Jenya Lee, Diana Liskovich, Yinghai Lu, Yuning Mao, Xavier Martinet, Todor Mihaylov, Pushkar Mishra, Igor Molybog, Yixin Nie, Andrew Poulton, Jeremy Reizenstein, Rashi Rungta, Kalyan Saladi, Alan Schelten, Ruan Silva, Eric Michael Smith, Ranjan Subramanian, Xiaoqing Ellen Tan, Binh Tang, Ross Taylor, Adina Williams, Jian Xiang Kuan, Puxin Xu, Zheng Yan, Iliyan Zarov, Yuchen Zhang, Angela Fan, Melanie Kambadur, Sharan Narang, Aurelien Rodriguez, Robert Stojnic, Sergey Edunov, Thomas Scialom
",2023-07-18,Llama 2: Open Foundation and Fine-Tuned Chat Models,"https://ai.meta.com/research/publications/llama-2-open-foundation-and-fine-tuned-chat-models/
https://arxiv.org/abs/2307.09288",8056.0,"Historical significance,Significant use,Highly cited,Training cost",Model has been open-sourced and frequently downloaded. The paper claims that Llama 2 is the current best open-source chat model as of its release date.,70000000000.0,"Llama has been released in 7B, 13B, 34B, and 70B variants.",8.1e+23,,,"""Pretraining utilized a cumulative 3.3M GPU hours of computation on hardware of type A100-80GB"" of which 1720320 GPU hours were used to train the 70B model.

311.84 BF16 TFLOP/s * 1720320 hours * 0.40 utilization = 7.725e+23 FLOP.

Alternatively: the model was trained for 1 epoch on 2 trillion tokens and has 70B parameters. C = 6ND = 6*70B*2T = 8.4e+23 FLOP.",Llama 2 dataset,"2 trillion tokens of publicly available text, with no text from Meta's products.
""Our training corpus includes a new mix of data from publicly available sources, which does not include data from Meta’s products or services. We made an effort to remove data from certain sites known to contain a high volume of personal information about private individuals. We trained on 2 trillion tokens of data as this provides a good performance–cost trade-off, up-sampling the most factual sources in an effort to increase knowledge and dampen hallucinations.""",1500000000000.0,2 trillion tokens ~= 1.5 trillion words,1.0,1728.0,"Model was trained from January 2023 to July 2023, which is six months. However, the training run duration did not take up this whole period. According to a Meta employee interviewed by Epoch, Llama 2 34B and 70B were trained on different clusters, with overlapping training periods. Based on an estimate of 1000 GPUs, it would have taken 72 days.",NVIDIA A100 SXM4 80 GB,1000.0,Supervised,"In this work, we develop and release Llama 2, a collection of pretrained and fine-tuned large language models (LLMs) ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama 2-Chat, are optimized for dialogue use cases. Our models outperform open-source chat models on most benchmarks we tested, and based on our human evaluations for helpfulness and safety, may be a suitable substitute for closedsource models. We provide a detailed description of our approach to fine-tuning and safety improvements of Llama 2-Chat in order to enable the community to build on our work and contribute to the responsible development of LLMs.",,Open weights (restricted use),0.4191975017,Confident,2025-02-03 21:32:36+00:00,United States of America,,,,,Meta’s Research Super Cluster,,4000000.0,,
Llama 2-7B,Language,Meta AI,Industry,"Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, Dan Bikel, Lukas Blecher, Cristian Canton Ferrer, Moya Chen, Guillem Cucurull, David Esiobu, Jude Fernandes, Jeremy Fu, Wenyin Fu, Brian Fuller, Cynthia Gao, Vedanuj Goswami, Naman Goyal, Anthony Hartshorn, Saghar Hosseini, Rui Hou, Hakan Inan, Marcin Kardas, Viktor Kerkez, Madian Khabsa, Isabel Kloumann, Artem Korenev, Punit Singh Koura, Marie-Anne Lachaux, Thibaut Lavril, Jenya Lee, Diana Liskovich, Yinghai Lu, Yuning Mao, Xavier Martinet, Todor Mihaylov, Pushkar Mishra, Igor Molybog, Yixin Nie, Andrew Poulton, Jeremy Reizenstein, Rashi Rungta, Kalyan Saladi, Alan Schelten, Ruan Silva, Eric Michael Smith, Ranjan Subramanian, Xiaoqing Ellen Tan, Binh Tang, Ross Taylor, Adina Williams, Jian Xiang Kuan, Puxin Xu, Zheng Yan, Iliyan Zarov, Yuchen Zhang, Angela Fan, Melanie Kambadur, Sharan Narang, Aurelien Rodriguez, Robert Stojnic, Sergey Edunov, Thomas Scialom
",2023-07-18,Llama 2: Open Foundation and Fine-Tuned Chat Models,https://ai.meta.com/research/publications/llama-2-open-foundation-and-fine-tuned-chat-models/,8056.0,"Historical significance,Significant use,Highly cited",Model has been open-sourced and frequently downloaded. The paper claims that Llama 2 is the current best open-source chat model as of its release date.,70000000000.0,"Llama has been released in 7B, 13B, and 70B variants.",8.4e+22,,,"Trained on 2 trillion tokens per Table 1. 

C = 6ND = 6*7B*2T = 8.4e+22 FLOP.

Also, 7B model was trained on 184320 GPU-hours

312 trillion * 184320 * 3600 * 0.3 = 6.21e22",Llama 2 dataset,"2 trillion tokens of publicly available text, with no text from Meta's products.
""Our training corpus includes a new mix of data from publicly available sources, which does not include data from Meta’s products or services. We made an effort to remove data from certain sites known to contain a high volume of personal information about private individuals. We trained on 2 trillion tokens of data as this
provides a good performance–cost trade-off, up-sampling the most factual sources in an effort to increase knowledge and dampen hallucinations.""",1500000000000.0,2 trillion tokens ~= 1.5T words,1.0,,,NVIDIA A100 SXM4 80 GB,,Supervised,"In this work, we develop and release Llama 2, a collection of pretrained and fine-tuned large language models (LLMs) ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama 2-Chat, are optimized for dialogue use cases. Our models outperform open-source chat models on most benchmarks we tested, and based on our human evaluations for helpfulness and safety, may be a suitable substitute for closedsource models. We provide a detailed description of our approach to fine-tuning and safety improvements of Llama 2-Chat in order to enable the community to build on our work and contribute to the responsible development of LLMs.",,Open weights (restricted use),,Confident,2025-02-03 22:02:03+00:00,United States of America,,,,,Meta’s Research Super Cluster,,4000000.0,,
RetNet,Language,"Microsoft Research,Tsinghua University","Industry,Academia","Yutao Sun, Li Dong, Shaohan Huang, Shuming Ma, Yuqing Xia, Jilong Xue, Jianyong Wang, Furu Wei",2023-07-17,Retentive Network: A Successor to Transformer for Large Language Models,https://arxiv.org/abs/2307.08621,203.0,,,6700000000.0,"Table 2

They later mention testing the memory and throughput of a 13B-parameter model, but it doesn't sound like they trained it long enough to test its perplexity.",4.02e+21,,,"C = 6ND = 6 * 6.7 billion * 100 billion
""We train the models with 512 AMD MI200 GPUs.""

Another rough method: Table 4 shows throughput is 8642.2 words per second during training on an 8xA100 setup, with batch size of 8192. This suggests 2543.1 hours to go through the full 100B tokens ~=  75B words.
(8 * 3.12e14) * (2543.1 * 3600) * (0.3) = 6.9e21 FLOPs

(low confidence in this as actual training setup used different hardware and much larger batch size, but same OOM is encouraging)",,"""The training corpus is a curated compilation of The Pile, C4, and The Stack""",100000000000.0,,,,,,,,"In this work, we propose Retentive Network (RetNet) as a foundation architecture for large language models, simultaneously achieving training parallelism, low-cost inference, and good performance. We theoretically derive the connection between recurrence and attention. Then we propose the retention mechanism for sequence modeling, which supports three computation paradigms, i.e., parallel, recurrent, and chunkwise recurrent. Specifically, the parallel representation allows for training parallelism. The recurrent representation enables low-cost O(1) inference, which improves decoding throughput, latency, and GPU memory without sacrificing performance. The chunkwise recurrent representation facilitates efficient long-sequence modeling with linear complexity, where each chunk is encoded parallelly while recurrently summarizing the chunks. Experimental results on language modeling show that RetNet achieves favorable scaling results, parallel training, low-cost deployment, and efficient inference. The intriguing properties make RetNet a strong successor to Transformer for large language models.",,Unreleased,,Confident,2025-02-14 21:19:34+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,China",,,,,,,4000000.0,4M,
BaiLing,Multimodal,Ant Group,Industry,,2023-07-15,,https://www.antgroup.com/en/technology/new-tech-Technology-Antfocuses-Tabcomnent-detail/20241028001,,,,,,,,,,Unspecified unreleased,,,,,,,,,,"Ant Group’s BaiLing foundation model has made significant advancements in computing power, security, and knowledge processing. It has established a computing cluster with tens of thousands of heterogeneous accelerator cards, integrated security capabilities ranging from detection to defense, and the ability to process trillions of tokens.",,Unreleased,,Unknown,2024-12-02 17:18:11+00:00,China,,,,,,,,,
CryoChains,Biology,"University of California Santa Barbara (UCSB),Stanford University","Academia,Academia","Bongjin Koo, Julien Martel, Ariana Peck, Axel Levy, Frédéric Poitevin, Nina Miolane",2023-07-15,CryoChains: Heterogeneous Reconstruction of Molecular Assembly of Semi-flexible Chains from Cryo-EM Images,https://arxiv.org/abs/2306.07274,,,,,,,,,,,,,,,,,,,,"Cryogenic electron microscopy (cryo-EM) has transformed structural biology by allowing to reconstruct 3D biomolecular structures up to near-atomic resolution. However, the 3D reconstruction process remains challenging, as the 3D structures may exhibit substantial shape variations, while the 2D image acquisition suffers from a low signal-to-noise ratio, requiring to acquire very large datasets that are time-consuming to process. Current reconstruction methods are precise but computationally expensive, or faster but lack a physically-plausible model of large molecular shape variations. To fill this gap, we propose CryoChains that encodes large deformations of biomolecules via rigid body transformation of their chains, while representing their finer shape variations with the normal mode analysis framework of biophysics. Our synthetic data experiments on the human GABA\textsubscript{B} and heat shock protein show that CryoChains gives a biophysically-grounded quantification of the heterogeneous conformations of biomolecules, while reconstructing their 3D molecular structures at an improved resolution compared to the current fastest, interpretable deep learning method.",,,,Unverified,2025-01-12 05:30:40+00:00,"United States of America,United States of America",,,,,,,,,
ChatRhino,Language,JD.com,Industry,,2023-07-13,JD.com Introduces ChatRhino: Empowering Industry Innovations with an Advanced Large Language Model,https://jdcorporateblog.com/jd-com-introduces-chatrhino-empowering-industry-innovations-with-an-advanced-large-language-model/,,,,100000000000.0,"""ChatRhino sets a new benchmark as a 100-billion-parameter model"", could be substantially rounded",,,,,,"Mix of general and supply chain data: ""By combining 70% generalized data with 30% native intelligent supply chain data, JD’s latest AI model offers targeted solutions for real industry challenges across sectors such as retail, logistics, finance, health, and city""",,,,,,,,,"JD.com today unveiled its ChatRhino (Yanxi in Chinese) large language model (LLM) on its 2023 JDDiscovery tech summit, tailored to serve various industries. By combining 70% generalized data with 30% native intelligent supply chain data, JD’s latest AI model offers targeted solutions for real industry challenges across sectors such as retail, logistics, finance, health, and city. Building upon the success of the billion-parameter model K-PLUG launched in 2021 and the 10-billion-parameter model Vega introduced in 2022, JD’s ChatRhino sets a new benchmark as a 100-billion-parameter model.",,,,Confident,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Uni-RNA-L8,Biology,DP Technology,Industry,"Xi Wang, Ruichu Gu, Zhiyuan Chen, Yongge Li, Xiaohong Ji, Guolin Ke, Han Wen",2023-07-12,UNI-RNA: UNIVERSAL PRE-TRAINED MODELS REVOLUTIONIZE RNA RESEARCH,https://www.biorxiv.org/content/10.1101/2023.07.11.548588v1.abstract,20.0,,,25000000.0,Table 8: Model architecture parameters of different Uni-RNA models,,,,"""We trained our proposed network on 128 A100""",,,100000000.0,Table 8: Model architecture parameters of different Uni-RNA models,,,,,,,"RNA molecules play a crucial role as intermediaries in diverse biological processes. Attaining a profound understanding of their function can substantially enhance our comprehension of life’s activities and facilitate drug development for numerous diseases. The advent of high-throughput sequencing technologies makes vast amounts of RNA sequence data accessible, which contains invaluable information and knowledge. However, deriving insights for further application from such an immense volume of data poses a significant challenge. Fortunately, recent advancements in pre-trained models have surfaced as a revolutionary solution for addressing such challenges owing to their exceptional ability to automatically mine and extract hidden knowledge from massive datasets. Inspired by the past successes, we developed a novel context-aware deep learning model named Uni-RNA that performs pre-training on the largest dataset of RNA sequences at the unprecedented scale to date. During this process, our model autonomously unraveled the obscured evolutionary and structural information embedded within the RNA sequences. As a result, through fine-tuning, our model achieved the state-of-the-art (SOTA) performances in a spectrum of downstream tasks, including both structural and functional predictions. Overall, Uni-RNA established a new research paradigm empowered by the large pre-trained model in the field of RNA, enabling the community to unlock the power of AI at a whole new level to significantly expedite the pace of research and foster groundbreaking discoveries.",,Unreleased,,Unverified,2024-11-12 14:17:02+00:00,China,,,,,,,,,
Med-PaLM,"Medicine,Language","Google Research,National Library of Medicine,DeepMind","Industry,Government,Industry","Karan Singhal, Shekoofeh Azizi, Tao Tu, S. Sara Mahdavi, Jason Wei, Hyung Won Chung, Nathan Scales, Ajay Tanwani, Heather Cole-Lewis, Stephen Pfohl, Perry Payne, Martin Seneviratne, Paul Gamble, Chris Kelly, Abubakr Babiker, Nathanael Schärli, Aakanksha Chowdhery, Philip Mansfield, Dina Demner-Fushman, Blaise Agüera y Arcas, Dale Webster, Greg S. Corrado, Yossi Matias, Katherine Chou, Juraj Gottweis, Nenad Tomasev, Yun Liu, Alvin Rajkomar, Joelle Barral, Christopher Semturs, Alan Karthikesalingam & Vivek Natarajan",2023-07-12,Large language models encode clinical knowledge,https://www.nature.com/articles/s41586-023-06291-2,,,,540000000000.0,"""We performed instruction prompt tuning on Flan-PaLM 540B with a soft prompt length of 100 to produce Med-PaLM. We froze the rest of the model, and used an embedding dimension of 18432 as in PaLM [1], which resulted in 1.84M trainable parameters.""
(from supplementary materials)",,,,,MultiMedQA,"Primary Dataset: Med-PaLM was trained using MultiMedQA, a composite benchmark comprising seven datasets, which span medical examinations, research, and consumer medical questions. It includes:
MedQA
MedMCQA
PubMedQA
MMLU (clinical topics)
HealthSearchQA
LiveQA
MedicationQA",,"from supplementary materials ""We used a batch size of 32 across all runs and ran training for 200 steps.""
they also mention average question length of 25 words, but I am not sure if that applies to all datapoints

MedMCQA (https://proceedings.mlr.press/v174/pal22a/pal22a.pdf, Table 2) has on average 12.77+ 2.69+67.52 = 82.98 tokens per datapoint
",,,,,,,"Large language models (LLMs) have demonstrated impressive capabilities, but the bar for clinical applications is high. Attempts to assess the clinical knowledge of models typically rely on automated evaluations based on limited benchmarks. Here, to address these limitations, we present MultiMedQA, a benchmark combining six existing medical question answering datasets spanning professional medicine, research and consumer queries and a new dataset of medical questions searched online, HealthSearchQA. We propose a human evaluation framework for model answers along multiple axes including factuality, comprehension, reasoning, possible harm and bias. In addition, we evaluate Pathways Language Model1 (PaLM, a 540-billion parameter LLM) and its instruction-tuned variant, Flan-PaLM2 on MultiMedQA. Using a combination of prompting strategies, Flan-PaLM achieves state-of-the-art accuracy on every MultiMedQA multiple-choice dataset (MedQA3, MedMCQA4, PubMedQA5 and Measuring Massive Multitask Language Understanding (MMLU) clinical topics6), including 67.6% accuracy on MedQA (US Medical Licensing Exam-style questions), surpassing the prior state of the art by more than 17%. However, human evaluation reveals key gaps. To resolve this, we introduce instruction prompt tuning, a parameter-efficient approach for aligning LLMs to new domains using a few exemplars. The resulting model, Med-PaLM, performs encouragingly, but remains inferior to clinicians. We show that comprehension, knowledge recall and reasoning improve with model scale and instruction prompt tuning, suggesting the potential utility of LLMs in medicine. Our human evaluations reveal limitations of today’s models, reinforcing the importance of both evaluation frameworks and method development in creating safe, helpful LLMs for clinical applications.",,Unreleased,,Confident,2024-10-28 16:59:20+00:00,"Multinational,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland",Flan-PaLM 540B,,,,,,,,
Uni-RNA-L-24,Biology,DP Technology,Industry,"Xi Wang, Ruichu Gu, Zhiyuan Chen, Yongge Li, Xiaohong Ji, Guolin Ke, Han Wen",2023-07-12,Uni-RNA: Universal Pre-Trained Models Revolutionize RNA Research,https://www.biorxiv.org/content/10.1101/2023.07.11.548588v1.abstract,20.0,,,400000000.0,Table 8: Model architecture parameters of different Uni-RNA models,,,,"""We trained our proposed network on 128 A100""",,,500000000.0,Table 8: Model architecture parameters of different Uni-RNA models,,,,,,,"RNA molecules play a crucial role as intermediaries in diverse biological processes. Attaining a profound understanding of their function can substantially enhance our comprehension of life’s activities and facilitate drug development for numerous diseases. The advent of high-throughput sequencing technologies makes vast amounts of RNA sequence data accessible, which contains invaluable information and knowledge. However, deriving insights for further application from such an immense volume of data poses a significant challenge. Fortunately, recent advancements in pre-trained models have surfaced as a revolutionary solution for addressing such challenges owing to their exceptional ability to automatically mine and extract hidden knowledge from massive datasets. Inspired by the past successes, we developed a novel context-aware deep learning model named Uni-RNA that performs pre-training on the largest dataset of RNA sequences at the unprecedented scale to date. During this process, our model autonomously unraveled the obscured evolutionary and structural information embedded within the RNA sequences. As a result, through fine-tuning, our model achieved the state-of-the-art (SOTA) performances in a spectrum of downstream tasks, including both structural and functional predictions. Overall, Uni-RNA established a new research paradigm empowered by the large pre-trained model in the field of RNA, enabling the community to unlock the power of AI at a whole new level to significantly expedite the pace of research and foster groundbreaking discoveries.",,,,Unverified,2024-11-29 15:13:13+00:00,China,,,,,,,,,
Uni-RNA-L12,Biology,DP Technology,Industry,"Xi Wang, Ruichu Gu, Zhiyuan Chen, Yongge Li, Xiaohong Ji, Guolin Ke, Han Wen",2023-07-12,UNI-RNA: UNIVERSAL PRE-TRAINED MODELS REVOLUTIONIZE RNA RESEARCH,https://www.biorxiv.org/content/10.1101/2023.07.11.548588v1.abstract,20.0,,,85000000.0,Table 8: Model architecture parameters of different Uni-RNA models,,,,"""We trained our proposed network on 128 A100""",,,100000000.0,Table 8: Model architecture parameters of different Uni-RNA models,,,,,,,"RNA molecules play a crucial role as intermediaries in diverse biological processes. Attaining a profound understanding of their function can substantially enhance our comprehension of life’s activities and facilitate drug development for numerous diseases. The advent of high-throughput sequencing technologies makes vast amounts of RNA sequence data accessible, which contains invaluable information and knowledge. However, deriving insights for further application from such an immense volume of data poses a significant challenge. Fortunately, recent advancements in pre-trained models have surfaced as a revolutionary solution for addressing such challenges owing to their exceptional ability to automatically mine and extract hidden knowledge from massive datasets. Inspired by the past successes, we developed a novel context-aware deep learning model named Uni-RNA that performs pre-training on the largest dataset of RNA sequences at the unprecedented scale to date. During this process, our model autonomously unraveled the obscured evolutionary and structural information embedded within the RNA sequences. As a result, through fine-tuning, our model achieved the state-of-the-art (SOTA) performances in a spectrum of downstream tasks, including both structural and functional predictions. Overall, Uni-RNA established a new research paradigm empowered by the large pre-trained model in the field of RNA, enabling the community to unlock the power of AI at a whole new level to significantly expedite the pace of research and foster groundbreaking discoveries.",,,,Unverified,2024-11-12 14:16:57+00:00,China,,,,,,,,,
Uni-RNA-L16,Biology,DP Technology,Industry,"Xi Wang, Ruichu Gu, Zhiyuan Chen, Yongge Li, Xiaohong Ji, Guolin Ke, Han Wen",2023-07-12,UNI-RNA: UNIVERSAL PRE-TRAINED MODELS REVOLUTIONIZE RNA RESEARCH,https://www.biorxiv.org/content/10.1101/2023.07.11.548588v1.abstract,20.0,,,169000000.0,Table 8: Model architecture parameters of different Uni-RNA models,,,,"""We trained our proposed network on 128 A100""",,,500000000.0,Table 8: Model architecture parameters of different Uni-RNA models,,,,,,,"RNA molecules play a crucial role as intermediaries in diverse biological processes. Attaining a profound understanding of their function can substantially enhance our comprehension of life’s activities and facilitate drug development for numerous diseases. The advent of high-throughput sequencing technologies makes vast amounts of RNA sequence data accessible, which contains invaluable information and knowledge. However, deriving insights for further application from such an immense volume of data poses a significant challenge. Fortunately, recent advancements in pre-trained models have surfaced as a revolutionary solution for addressing such challenges owing to their exceptional ability to automatically mine and extract hidden knowledge from massive datasets. Inspired by the past successes, we developed a novel context-aware deep learning model named Uni-RNA that performs pre-training on the largest dataset of RNA sequences at the unprecedented scale to date. During this process, our model autonomously unraveled the obscured evolutionary and structural information embedded within the RNA sequences. As a result, through fine-tuning, our model achieved the state-of-the-art (SOTA) performances in a spectrum of downstream tasks, including both structural and functional predictions. Overall, Uni-RNA established a new research paradigm empowered by the large pre-trained model in the field of RNA, enabling the community to unlock the power of AI at a whole new level to significantly expedite the pace of research and foster groundbreaking discoveries.",,,,Unverified,2024-11-12 14:17:12+00:00,China,,,,,,,,,
Claude 2,Language,Anthropic,Industry,,2023-07-11,,"https://www.anthropic.com/index/claude-2, https://www-files.anthropic.com/production/images/Model-Card-Claude-2.pdf",,Historical significance,,,,3.866e+24,,1.22e+26,https://colab.research.google.com/drive/1MdPuhS4Emaf23VXYZ-ooExDW-5GXZkw0#scrollTo=Ds0Q5X8aMnOY,Unspecified unreleased,"From model card: ""Claude models are trained on a proprietary mix of publicly available information from the Internet, datasets
that we license from third party businesses, and data that our users affirmatively share or that crowd workers provide. Some of the human feedback data used to finetune Claude was made public [12] alongside our RLHF [2] and red-teaming [4] research.
Claude 2’s training data cuts off in early 2023, and roughly 10 percent of the data included was non-English.""",,,,,,,,,,,API access,,Speculative,2025-02-19 18:51:24+00:00,United States of America,,,,,,,,,True
Emu (BAAI),"Vision,Multimodal,Language","Beijing Academy of Artificial Intelligence / BAAI,Tsinghua University,Peking University","Academia,Academia,Academia","Quan Sun, Qiying Yu, Yufeng Cui, Fan Zhang, Xiaosong Zhang, Yueze Wang, Hongcheng Gao, Jingjing Liu, Tiejun Huang, Xinlong Wang",2023-07-11,Generative Pretraining in Multimodality,https://arxiv.org/abs/2307.05222,,,,14000000000.0,"""The total number of parameters of Emu is 14B and is trained end-to-end.""",2.70000000001e+21,,,"""We train the model on 128 NVIDIA 80G-A100 GPUs for 10k steps with around 82M samples (150B tokens in total), and the pretraining takes approximately 2 days.""
https://www.wolframalpha.com/input?i=128*312+TFLOPS+*+2+days+*+0.4","LAION-2B,WebVid-10M,LAION-COCO,BLIP,YT-Storyboard-1B",,,,,48.0,"""We train the model on 128 NVIDIA 80G-A100 GPUs for 10k steps with around 82M samples (150B tokens in total), and the pretraining takes approximately 2 days.""",NVIDIA A100 SXM4 80 GB,128.0,,"We present Emu, a Transformer-based multimodal foundation model, which can seamlessly generate images and texts in multimodal context. This omnivore model can take in any single-modality or multimodal data input indiscriminately (e.g., interleaved image, text and video) through a one-model-for-all autoregressive training process. First, visual signals are encoded into embeddings, and together with text tokens form an interleaved input sequence. Emu is then end-to-end trained with a unified objective of classifying the next text token or regressing the next visual embedding in the multimodal sequence. This versatile multimodality empowers the exploration of diverse pretraining data sources at scale, such as videos with interleaved frames and text, webpages with interleaved images and text, as well as web-scale image-text pairs and video-text pairs. Emu can serve as a generalist multimodal interface for both image-to-text and text-to-image tasks, and supports in-context image and text generation. Across a broad range of zero-shot/few-shot tasks including image captioning, visual question answering, video question answering and text-to-image generation, Emu demonstrates superb performance compared to state-of-the-art large multimodal models. Extended capabilities such as multimodal assistants via instruction tuning are also demonstrated with impressive performance.",,,,Confident,2025-02-14 21:19:56+00:00,"China,China,China",,,,,,,,,
Baichuan 1-13B,,Baichuan,Industry,,2023-07-11,"Baichuan-13B
",https://github.com/baichuan-inc/Baichuan-13B/blob/main/README_EN.md,,,,13264901120.0,,9.36e+22,,,13b * 1.2t * 6 = 9.36e22,,,1400000000000.0,,,,,,,,"Baichuan-13B is an open-source, commercially available large-scale language model developed by Baichuan Intelligent Technology following Baichuan-7B, containing 13 billion parameters. It achieves the best results of the same size on both authoritative Chinese and English benchmarks. This release includes two versions: pre-training (Baichuan-13B-Base) and alignment (Baichuan-13B-Chat).",,,,Unverified,2025-02-14 21:19:38+00:00,China,,,,,,,,,
TeleChat,Language,China Telecom,Industry,,2023-07-07,,https://m.thepaper.cn/baijiahao_23766944,,,"""In addition, TeleChat-E, the educational version of the large model based on TeleChat, ranks seventh on C-Eval, the global comprehensive examination evaluation list for large models. The top few include well-known large models such as GP4 and ChatGPT""",,,,,,,,"(Google translated from https://m.thepaper.cn/baijiahao_23766944) ""TeleChat uses a large amount of high-quality Chinese and English corpus for pre-training, and uses tens of millions of question and answer data for fine-tuning""",,,,,,,,,"(Google translated) At China Telecom's ""Computing and Network Integration·Sunac Future"" sub-forum, China Telecom Digital Intelligence Technology Branch (hereinafter referred to as: Telecom Zhike) officially released China Telecom's large language model TeleChat and demonstrated the large model empowering data Products in three directions: middle platform, intelligent customer service and intelligent government affairs.",,,,Unknown,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Pangu 3.0,"Multimodal,Language,Image generation,Vision",Huawei,Industry,,2023-07-07,"Reshaping Industries with AI: Huawei Cloud Launches Pangu Models 3.0 and Ascend AI Cloud Services
",https://www.huaweicloud.com/intl/en-us/news/20230707180809498.html,,,,100000000000.0,"100B? I think the five foundation models are all included in the same system, instead of being five different variants of Pangu, but that's not very clear. I think that's implied by ""All of these capability sets will be made available to customers and partners, and will be consistent regardless of the model size"". 

https://www.huaweicloud.com/intl/en-us/news/20230707180809498.html 
""Huawei Cloud Pangu models were designed to focus on the practical needs of specific industry scenarios. The newly-launched Pangu Models 3.0 use a ""5+N+X"" three-layer architecture.

The L0 layer consists of five foundation models: NLP, CV, multimodal, prediction, and scientific computing, which provide general skills to power an endless possibility of industry-specific applications. Pangu Models 3.0 are available in different sizes: 10 billion parameters, 38 billion parameters, 71 billion parameters, and 100 billion parameters, meeting diverse customer needs and different standards on latency and response times. Brand-new capability sets are also provided, such as knowledge-based Q&A, copywriting, and code generation for the Pangu NLP model; and image generation and understanding for the Pangu multimodal model. All of these capability sets will be made available to customers and partners, and will be consistent regardless of the model size (number of parameters).

The L1 layer consists of N industry-tailored models. Huawei Cloud can provide customers with industry models it has trained on open industry datasets, including Pangu models for government, finance, manufacturing, mining, and meteorology. Alternatively, customers can train their own models using their own datasets based on Huawei's L0 or L1 Pangu models.

The L2 layer provides pre-trained models for specific industry scenarios and tasks, such as intelligent government hotline, intelligent branch assistant, lead compound screening, conveyor belt foreign object detection, and typhoon trajectory prediction. These models can be quickly deployed off-the-shelf.""

",,,,,,,,,,,,,,,"Huawei Cloud Pangu models were designed to focus on the practical needs of specific industry scenarios. The newly-launched Pangu Models 3.0 use a ""5+N+X"" three-layer architecture.

The L0 layer consists of five foundation models: NLP, CV, multimodal, prediction, and scientific computing, which provide general skills to power an endless possibility of industry-specific applications. Pangu Models 3.0 are available in different sizes: 10 billion parameters, 38 billion parameters, 71 billion parameters, and 100 billion parameters, meeting diverse customer needs and different standards on latency and response times. Brand-new capability sets are also provided, such as knowledge-based Q&A, copywriting, and code generation for the Pangu NLP model; and image generation and understanding for the Pangu multimodal model. All of these capability sets will be made available to customers and partners, and will be consistent regardless of the model size (number of parameters).",,API access,,Likely,2025-01-13 22:11:36+00:00,China,,,,,,,,,
InternLM,Language,"Shanghai AI Lab,SenseTime","Academia,Industry",,2023-07-06,,https://internlm.org/,,SOTA improvement,"(from Google-translated page) ""In addition to using academic datasets to evaluate InternLM, we also use human examinations to assess its capabilities. InternLM can achieve good scores on examination benchmarks such as MMLU, AGIEval, C-Eval, and GAOKAO-bench that cover different languages and subjects, scoring higher than ChatGPT on multiple benchmarks""",100000000000.0,Pre-training a bilingual 100B Foundation model on data with over a trillion tokens,6.000001e+23,,,6 * 100b * 1t = 6e23,,,1000000000.0,"""Pre-training a bilingual 100B Foundation model on data with over a trillion tokens""",,,Training performance for the open-source InternLM-7B: https://github.com/InternLM/InternLM/blob/main/doc/en/train_performance.md,NVIDIA A100 SXM4 80 GB,,,"Pre-training a bilingual 100B Foundation model on data with over a trillion tokens, the model exhibits excellent performance in scenarios such as Chinese, English, and coding due to the appropriate data ratio. Based on the foundation model, the application of high-quality human annotated dialogue data combined with RLHF technology enables the InternLM large language model to respond to complex commands during human interaction, while also demonstrating responses in line with human morality and values.",,,,Confident,2025-02-07 18:54:07+00:00,"China,Hong Kong,China",,,,,,,,,True
CodeGen2.5,Language,Salesforce,Industry,"Erik Nijkamp, Hiroaki Hayashi, Yingbo Zhou, Caiming Xiong",2023-07-06,"CodeGen2.5: Small, but mighty",https://blog.salesforceairesearch.com/codegen25/,,,,7000000000.0,7B,5.9e+22,,,"7B parameters, trained on 1.4T tokens

7 billion * 1.4 trillion * 6 = 5.9e22",StarCoderData,,300000000000.0,"""an epoch constitutes about 300B tokens""",4.66,,,,,,"The family of Salesforce CodeGen models is growing with CodeGen2.5 – a small, but mighty model! While there has been a recent trend of large language models (LLM) of increasing size, we show that a small model can obtain surprisingly good performance, when being trained well.  

The key contributions towards productization of these models are:

Releasing CodeGen2.5 LLM with state-of-the-art on HumanEval for 7B parameters.
CodeGen2.5 with 7B is on par with >15B code-generation models (CodeGen1-16B, CodeGen2-16B, StarCoder-15B), less than half the size.
Featuring robust infill sampling, that is, the model can “read” text of both the left and right hand size of the current position.
Optimized for fast sampling under Flash attention for optimized serving and local deployment on personal machines.
Permissively licensed in Apache 2.0.",,Open weights (unrestricted),,Confident,2025-02-14 21:20:00+00:00,United States of America,,,,,,,,,
xTrimoPGLM -100B,Biology,"Tsinghua University,BioMap Research","Academia,Industry","Bo Chen, Xingyi Cheng, Yangli-ao Geng, Shen Li, Xin Zeng, Boyan Wang, Jing Gong, Chiming Liu, Aohan Zeng, Yuxiao Dong, Jie Tang, Le Song",2023-07-06,xTrimoPGLM: Unified 100B-Scale Pre-trained Transformer for Deciphering the Language of Protein,https://www.biorxiv.org/content/10.1101/2023.07.05.547496v4,65.0,"SOTA improvement,Training cost","""Our extensive experiments reveal that xTrimoPGLM significantly outperforms other advanced baselines in diverse protein understanding tasks (13 out of 15 tasks across four categories)""",100000000000.0,"Abstract: ""training xTrimoPGLM at an unprecedented scale of 100 billion
parameters and 1 trillion training tokens""",6.2e+23,,,"""xTrimoPGLM-100B is trained on a cluster of 96 DGX-A100 GPU (8×40G) servers in FP16 precision from January 18 to June 30, 2023. During this time, xTrimoPGLM-100B has consumed 1 trillion tokens from the dataset consisting of Uniref90 and ColAbFoldDB. As of the current date, xTrimoPGLM-100B continues its pre-training process to pass through as many tokens as possible""

6 * 100 billion params * 1T tokens = 6e23

8*96 * 312 trillion * 163 days * 24 * 3600 * 0.3 ~= 1e24

directly given in the paper (Table 9, or Table 4 in new version): 6.2E+23 ",UniRef50,,,~24M protein sequences,,3912.0,163 days,NVIDIA A100 SXM4 40 GB,768.0,Self-supervised learning,"Protein language models have shown remarkable success in learning biological information from protein sequences. However, most existing models are limited by either autoencoding or autoregressive pre-training objectives, which makes them struggle to handle protein understanding and generation tasks concurrently. This paper proposes a unified protein language model, xTrimoPGLM, to address these two types of tasks simultaneously through an innovative pre-training framework. Our key technical contribution is an exploration of the compatibility and the potential for joint optimization of the two types of objectives, which has led to a strategy for training xTrimoPGLM at an unprecedented scale of 100 billion parameters and 1 trillion training tokens. Our extensive experiments reveal that xTrimoPGLM significantly outperforms other advanced baselines in diverse protein understanding tasks (13 out of 15 tasks across four categories) and generates novel protein sequences which are structurally similar to natural ones. Furthermore, using the same xTrimoPGLM framework, we train an antibody-specific model (xTrimoPGLM-Ab) using 1 billion parameters. This model set a new record in predicting antibody naturalness and structures, both essential to the field of antibody-based drug design, and demonstrated a significantly faster inference speed than AlphaFold2. These results highlight the substantial capability and versatility of xTrimoPGLM in understanding and generating protein sequences.",,Unreleased,,Confident,2025-02-14 21:20:19+00:00,"China,China",,,,,,,2097152.0,"""We employ batches of 2,048 sequences, each 1,024 tokens in length""",
NEC LLM 13B,Language,NEC Laboratories,Industry,,2023-07-06,NEC、130億パラメータで世界トップクラスの日本語性能を有する軽量なLLMを開発,https://jpn.nec.com/press/202307/20230706_02.html,,,,13000000000.0,13B,,,,"""NEC's LLM relieved this time was also trained using 512 GPUs installed on NEC's AI supercomputer""
from https://jpn.nec.com/rd/technologies/202308/index.html",,,,,,,,,512.0,,,,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Pangu-Weather,Earth science,Huawei,Industry,"Kaifeng Bi, Lingxi Xie, Hengheng Zhang, Xin Chen, Xiaotao Gu, Qi Tian",2023-07-05,Accurate medium-range global weather forecasting with 3D neural networks,"https://www.nature.com/articles/s41586-023-06185-3, https://www.huaweicloud.com/intl/en-us/news/20230707180809498.html,
https://www.huawei.com/en/news/2023/7/pangu-ai-model-nature-publish",197.0,SOTA improvement,"""In meteorology, the Pangu Meteorology Model (or Pangu-Weather) is the first AI model to have surpassed state-of-the-art numerical weather prediction (NWP) methods in terms of accuracy. The prediction speed is also several orders of magnitude faster. In the past, predicting the trajectory of a typhoon over 10 days took 4 to 5 hours of simulation on a high-performance cluster of 3,000 servers. Now, the Pangu model can do it in 10 seconds on a single GPU of a single server, and with more accurate results.""

https://www.huaweicloud.com/intl/en-us/news/20230707180809498.html",256000000.0,"4*64 million = 256M params

""We trained four deep networks with lead times (the time difference
between input and output) at 1 h, 3 h, 6 h and 24 h, respectively... 

This modification increases the number of bias parameters by a factor of 527, with each 3D deep network containing approximately 64 million parameters.""",3.98e+22,,,"""Each of the four deep networks was trained for 100 epochs, and
each of them takes approximately 16 days on a cluster of 192 NVIDIA
Tesla-V100 GPUs.""

192 * 4 * 16 * 24 * 3600 * 125 teraflops * 0.3 utilization = 3.98e22",ERA5,"""We used a single point in time for both input and output. The time resolution
of the ERA5 data is 1 h; in the training subset (1979–2017), there were
as many as 341,880 time points, the amount of training data in one
epoch""",,"""We used a single point in time for both input and output. The time resolution
of the ERA5 data is 1 h; in the training subset (1979–2017), there were
as many as 341,880 time points, the amount of training data in one
epoch... We fed all included weather variables, including 13 layers of upper-air
variables and the surface variables""

341,880 is the number of hours in ~40 years. But there's lots of data for each hour.",100.0,1536.0,"4*16 = 64 days
""Each of the four deep networks was trained for 100 epochs, andeach of them takes approximately 16 days on a cluster of 192 NVIDIA Tesla-V100 GPUs.""
",NVIDIA V100,192.0,,"Weather forecasting is important for science and society. At present, the most accurate forecast system is the numerical weather prediction (NWP) method, which represents atmospheric states as discretized grids and numerically solves partial diferential equations that describe the transition between those states1 . However, this procedure is computationally expensive. Recently, artifcial-intelligence-based methods2 have shown potential in accelerating weather forecasting by orders of magnitude, but the forecast accuracy is still signifcantly lower than that of NWP methods. Here we introduce an artifcial-intelligence-based method for accurate, medium-range global weather forecasting. We show that three-dimensional deep networks equipped with
Earth-specifc priors are efective at dealing with complex patterns in weather data, and that a hierarchical temporal aggregation strategy reduces accumulation errors in medium-range forecasting. Trained on 39 years of global data, our program, Pangu-Weather, obtains stronger deterministic forecast results on reanalysis data in all tested variables when compared with the world’s best NWP system, the operational integrated forecasting system of the European Centre for Medium-Range Weather Forecasts (ECMWF)3
. Our method also works well with extreme weather forecasts and ensemble forecasts. When initialized with reanalysis data, the accuracy of tracking
tropical cyclones is also higher than that of ECMWF-HRES.",,Open weights (non-commercial),,Confident,2025-02-14 21:20:35+00:00,China,,,"Possibly based on Pangu 3? Pangu-Weather is mentioned in the Pangu 3 announcement. But the architecture description doesn't seem to resemble Pangu 3. So it seems like Pangu-Weather is one of the higher-level models that can be attached to Pangu 3. 

https://www.huaweicloud.com/intl/en-us/news/20230707180809498.html 
",,,,,,
LongNet,Language,"Microsoft,Xi’an Jiaotong University","Industry,Academia","Jiayu Ding, Shuming Ma, Li Dong, Xingxing Zhang, Shaohan Huang, Wenhui Wang, Nanning Zheng, Furu Wei
",2023-07-05,"LongNet: Scaling Transformers to 1,000,000,000 Tokens",https://arxiv.org/abs/2307.02486,112.0,,Very long sequence length (1b),2700000000.0,2.7B,4.86e+21,,,"2.7B params * 300B tokens * 6 = 4.86e21

Note: not sure if there are very long sequences in the training data that would affect this calculation. Per paper, complexity of their attention mechanism scales linearly with sequence length.",The Stack,"2.7B model uses 300B tokens from The Stack, others only use 40B.",300000000000.0,"2.7B model uses 300B tokens from The Stack, others only use 40B.",1.0,,,,,,"Scaling sequence length has become a critical demand in the era of large language models. However, existing methods struggle with either computational complexity or model expressivity, rendering the maximum sequence length restricted. To address this issue, we introduce LongNet, a Transformer variant that can scale sequence length to more than 1 billion tokens, without sacrificing the performance on shorter sequences. Specifically, we propose dilated attention, which expands the attentive field exponentially as the distance grows. LongNet has significant advantages: 1) it has a linear computation complexity and a logarithm dependency between any two tokens in a sequence; 2) it can be served as a distributed trainer for extremely long sequences; 3) its dilated attention is a drop-in replacement for standard attention, which can be seamlessly integrated with the existing Transformer-based optimization. Experiments results demonstrate that LongNet yields strong performance on both long-sequence modeling and general language tasks. Our work opens up new possibilities for modeling very long sequences, e.g., treating a whole corpus or even the entire Internet as a sequence.",,,,Confident,2025-02-14 21:20:29+00:00,"United States of America,China",,,,,,,,,
Stable Diffusion XL (SDXL),Image generation,Stability AI,Industry,"Dustin Podell, Zion English, Kyle Lacey, Andreas Blattmann, Tim Dockhorn, Jonas Müller, Joe Penna, Robin Rombach",2023-07-04,SDXL: Improving Latent Diffusion Models for High-Resolution Image Synthesis,https://arxiv.org/abs/2307.01952,1165.0,Significant use,Looks like this is now the main/flagship Stable Diffusion model,3400000000.0,"""...result in a model size of 2.6B parameters in the UNet, see Tab. 1. The text encoders have a total size of 817M parameters.""",,,,,Unspecified unreleased,,,,,,,,,,"We present SDXL, a latent diffusion model for text-to-image synthesis. Compared to previous versions of Stable Diffusion, SDXL leverages a three times larger UNet backbone: The increase of model parameters is mainly due to more attention blocks and a larger cross-attention context as SDXL uses a second text encoder. We design multiple novel conditioning schemes and train SDXL on multiple aspect ratios. We also introduce a refinement model which is used to improve the visual fidelity of samples generated by SDXL using a post-hoc image-to-image technique. We demonstrate that SDXL shows drastically improved performance compared the previous versions of Stable Diffusion and achieves results competitive with those of black-box state-of-the-art image generators. In the spirit of promoting open research and fostering transparency in large model training and evaluation, we provide access to code and model weights at this https URL",,,,Speculative,2025-02-03 16:49:20+00:00,"Multinational,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Multilingual-E5-large,Language,Microsoft,Industry,"Liang Wang, Nan Yang, Xiaolong Huang, Linjun Yang, Rangan Majumder, Furu Wei",2023-06-30,Multilingual E5 Text Embeddings: A Technical Report,"https://arxiv.org/abs/2402.05672
https://huggingface.co/intfloat/multilingual-e5-large",,,,560000000.0,560M from https://huggingface.co/intfloat/multilingual-e5-large,3.370752e+18,,,"6ND = 6*560000000*(1000000000+1600000*2 epochs) = 3.370752e+18

confidence 'likely"" because pre-training epochs are unknown","mC4,Wikipedia,Stack Exchange,xP3,CC-News",table 2 - multiple data,1000160000.0,"Pre-training: Table 1 around 1B text pairs in different languages
Fine-tuning: 1.6M 

total: 1000000000+160000 = 1000160000 text pairs ",,,,,,,"This technical report presents the training methodology and evaluation results of the open-source multilingual E5 text embedding models, released in mid-2023. Three embedding models of different sizes (small / base / large) are provided, offering a balance between the inference efficiency and embedding quality. The training procedure adheres to the English E5 model recipe, involving contrastive pre-training on 1 billion multilingual text pairs, followed by fine-tuning on a combination of labeled datasets. Additionally, we introduce a new instruction-tuned embedding model, whose performance is on par with state-of-the-art, English-only models of similar sizes. Information regarding the model release can be found at https://github.com/microsoft/unilm/tree/master/e5 ",,Open weights (unrestricted),,Likely,2025-02-14 21:20:40+00:00,United States of America,,,,,,,,,
Honghu Graphic,"Multimodal,Vision,Image generation",China Unicom,Industry,,2023-06-28,,https://medium.com/@sdatokens/china-unicom-released-a-graphic-model-that-can-realize-with-text-pictures-video-clips-llm-ai-d50afd965a5b,,,,2000000000.0,"""The model now has 800 million training parameters and 2 billion training parameters in two versions, which can fulfill functions such as text-to-picture and picture-to-picture, said staff members of the company."" https://www.chinadaily.com.cn/a/202309/02/WS64f2715aa310d2dce4bb3865.html",,,,,,,,,,,,,,,"From https://www.chinadaily.com.cn/a/202309/02/WS64f2715aa310d2dce4bb3865.html:

""Among them, China Unicom is showcasing the Honghu Graphic Grand Model 1.0, its first large model for operators' value-added business.

The model now has 800 million training parameters and 2 billion training parameters in two versions, which can fulfill functions such as text-to-picture and picture-to-picture, said staff members of the company.""",,,,Likely,2024-09-05 18:08:31+00:00,China,,,,,,,,,
ERNIE 3.5,Language,Baidu,Industry,,2023-06-27,Introducing ERNIE 3.5: Baidu’s Knowledge-Enhanced Foundation Model Takes a Giant Leap Forward,http://research.baidu.com/Blog/index-view?id=185,,SOTA improvement,SOTA scores on AGIEval and MMLU. See article in China Science Daily: https://mp.weixin.qq.com/s/QVdkmofRSTgjQ7UOFX7s1g,,,,,,,,,,,,,,,,,,,,,Unknown,2025-01-10 16:31:02+00:00,China,,,,,,,,,
HyenaDNA,Biology,"Stanford University,Harvard University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),University of Montreal / Université de Montréal","Academia,Academia,Academia,Academia","Eric Nguyen, Michael Poli, Marjan Faizi, Armin W. Thomas, Callum Birch Sykes, Michael Wornow, Aman Patel, Clayton Rabideau, Stefano Massaroli, Yoshua Bengio, Stefano Ermon, Stephen A. Baccus, Christopher Ré",2023-06-27,HyenaDNA: Long-Range Genomic Sequence Modeling at Single Nucleotide Resolution,https://arxiv.org/abs/2306.15794,123.0,SOTA improvement,"""On fine-tuned benchmarks from the Nucleotide Transformer, HyenaDNA reaches state-of-the-art (SotA) on 12 of 18 datasets using a model with orders of magnitude less parameters and pretraining data.1 On the GenomicBenchmarks, HyenaDNA surpasses SotA on 7 of 8 datasets on average by +10 accuracy points, and by as much as +20 accuracy points on enhancer identification.""",6600000.0,"Table A.1 shows details, largest experiment is on far right.",1.811e+21,,,"8 Nvidia A100 (80GB) GPUs, ~4 weeks
(4 * 7 * 24 * 3600) seconds * (8 * 3.12e14) FLOP/sec * 0.3 (utilization) = 1.811e21",Human Reference Genome (GRCh38/hg38),"""For pretraining, we use a single human reference genome [...] For the test set, we use chromosomes 14 and X, exclusively"" 
Human genome is ~3.2B nucleotide pairs, 14 and X are ~101M and 154M respectively.",2945000000.0,"Human genome is ~3.2B nucleotide pairs, 14 and X are ~101M and 154M respectively. Largest run sees 2T tokens, which implies ~679 epochs.",679.117147708,672.0,"""For example, the largest model with context length 1M was trained on 2T tokens over 4 weeks.""",NVIDIA A100,8.0,,"Genomic (DNA) sequences encode an enormous amount of information for gene regulation and protein synthesis. Similar to natural language models, researchers have proposed foundation models in genomics to learn generalizable features from unlabeled genome data that can then be fine-tuned for downstream tasks such as identifying regulatory elements. Due to the quadratic scaling of attention, previous Transformer-based genomic models have used 512 to 4k tokens as context (<0.001% of the human genome), significantly limiting the modeling of long-range interactions in DNA. In addition, these methods rely on tokenizers or fixed k-mers to aggregate meaningful DNA units, losing single nucleotide resolution where subtle genetic variations can completely alter protein function via single nucleotide polymorphisms (SNPs). Recently, Hyena, a large language model based on implicit convolutions was shown to match attention in quality while allowing longer context lengths and lower time complexity. Leveraging Hyena's new long-range capabilities, we present HyenaDNA, a genomic foundation model pretrained on the human reference genome with context lengths of up to 1 million tokens at the single nucleotide-level - an up to 500x increase over previous dense attention-based models. HyenaDNA scales sub-quadratically in sequence length (training up to 160x faster than Transformer), uses single nucleotide tokens, and has full global context at each layer. We explore what longer context enables - including the first use of in-context learning in genomics. On fine-tuned benchmarks from the Nucleotide Transformer, HyenaDNA reaches state-of-the-art (SotA) on 12 of 18 datasets using a model with orders of magnitude less parameters and pretraining data. On the GenomicBenchmarks, HyenaDNA surpasses SotA on 7 of 8 datasets on average by +10 accuracy points.",,,,Confident,2025-02-14 21:20:45+00:00,"United States of America,United States of America,Canada,Canada",,,,,,,64000000.0,"Table A.1 indicates largest model saw sequence length of 1M, and that batch sizes range from 64-1024. In section 3.2: ""Our sequence length schedule starts at L1 = 64, then doubles the window at each stage while keeping the global batch size constant."" I assume smallest batch size was used for largest sequence length.",
RWKV-4 World (7B),Language,RWKV Foundation,Research collective,,2023-06-26,RWKV-4 World,https://huggingface.co/BlinkDL/rwkv-4-world,,,,7393000000.0,"7B
Table 2 https://arxiv.org/pdf/2305.13048",,,,,"The Pile,RedPajama,OSCAR,Wikipedia","""RWKV-4 trained on 100+ world languages (70% English, 15% multilang, 15% code).

World = Some_Pile + Some_RedPajama + Some_OSCAR + All_Wikipedia + All_ChatGPT_Data_I_can_find""",,,,,,,,,"Model Description
RWKV-4 trained on 100+ world languages (70% English, 15% multilang, 15% code).

World = Some_Pile + Some_RedPajama + Some_OSCAR + All_Wikipedia + All_ChatGPT_Data_I_can_find

XXXtuned = finetune of World on MC4, OSCAR, wiki, etc.",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,Multinational,,,,,,,,,
Kosmos-2,"Language,Vision",Microsoft,Industry,"Zhiliang Peng, Wenhui Wang, Li Dong, Yaru Hao, Shaohan Huang, Shuming Ma, Furu Wei",2023-06-26,Kosmos-2: Grounding Multimodal Large Language Models to the World,https://arxiv.org/abs/2306.14824,492.0,,,1600000000.0,1.6B,4.5500354284e+20,,,"""We train the model on 256 V100 GPUs and the training takes approximately one day to complete""
""We train KOSMOS-2 for 60k steps, equivalent to around 25 billion tokens""

GPU-time method
(256) * (1.3e14) * (24 * 3600) * (0.3) = 8.626176e20
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

Parameter-data method
6ND = 6*25B*1.6B = 2.4e20

Used geometric mean of two estimates.",,"""We train the model on newly added grounded image-text pairs, monomodal text
corpora, image-caption pairs, and interleaved image-text data. Our training process involves a
batch size of 419K tokens, consisting of 185K tokens from text corpora, 215K tokens from original
and grounded image-caption pairs, and 19K tokens from interleaved data. We train KOSMOS-2
for 60k steps, equivalent to around 25 billion tokens""",,"text and images
 ""We train KOSMOS-2 for 60k steps, equivalent to around 25 billion tokens""
""We train the model on newly added grounded image-text pairs, monomodal text
corpora, image-caption pairs, and interleaved image-text data. Our training process involves a
batch size of 419K tokens, consisting of 185K tokens from text corpora, 215K tokens from original
and grounded image-caption pairs, and 19K tokens from interleaved data. We train KOSMOS-2
for 60k steps, equivalent to around 25 billion tokens""
",,24.0,""" We train the model on 256 V100 GPUs and the training takes approximately one day to complete""",NVIDIA V100,256.0,Self-supervised learning,"We introduce Kosmos-2, a Multimodal Large Language Model (MLLM), enabling new capabilities of perceiving object descriptions (e.g., bounding boxes) and grounding text to the visual world. Specifically, we represent refer expressions as links in Markdown, i.e., ``[text span](bounding boxes)', where object descriptions are sequences of location tokens. Together with multimodal corpora, we construct large-scale data of grounded image-text pairs (called GrIT) to train the model. In addition to the existing capabilities of MLLMs (e.g., perceiving general modalities, following instructions, and performing in-context learning), Kosmos-2 integrates the grounding capability into downstream applications. We evaluate Kosmos-2 on a wide range of tasks, including (i) multimodal grounding, such as referring expression comprehension, and phrase grounding, (ii) multimodal referring, such as referring expression generation, (iii) perception-language tasks, and (iv) language understanding and generation. This work lays out the foundation for the development of Embodiment AI and sheds light on the big convergence of language, multimodal perception, action, and world modeling, which is a key step toward artificial general intelligence. Code and pretrained models are available at this https://github.com/microsoft/unilm/tree/master/kosmos-2",,Open weights (unrestricted),,Likely,2025-02-14 21:20:55+00:00,United States of America,,,,,,,,,
Llama-2-Chinese 13B,Language,FlagAlpha,Research collective,,2023-06-25,,https://github.com/FlagAlpha/Llama2-Chinese,,,,13000000000.0,,,,,,,"Several Chinese datasets:

https://github.com/FlagAlpha/Llama2-Chinese#-%E4%B8%AD%E6%96%87%E6%95%B0%E6%8D%AE",,,,,,,,,"Welcome to the Llama Chinese community! We are an advanced technical community focusing on the optimization and upper-level construction of the Llama model in Chinese. *Based on large-scale Chinese data, the Chinese capabilities of the Llama2 model are continuously iteratively upgraded starting from pre-training* . We warmly welcome developers and researchers who are passionate about large model LLM to join us.",,Open weights (unrestricted),,Likely,2024-09-16 17:01:31+00:00,China,Llama 2-13B,,They did both additional pre-training in Chinese (token count not stated) and LoRA fine-tuning.,,,,,,
Inflection-1,Language,Inflection AI,Industry,,2023-06-23,Inflection-1 technical memo,https://inflection.ai/assets/Inflection-1.pdf,,,"""Inflection-1 outperforms models trained with at most the same amount of compute as PaLM-540B on MMLU and the other benchmarks in Table 1.""",,,1.0001e+24,,2.4999999999999997e+24,"<= 2.5e24

They define two ""compute classes"", one for models with more compute than PaLM 540B, i.e. GPT-4 and PaLM 2, and one for models with as much compute or less, i.e. GPT-3.5, Chinchilla, LLaMA, and Inflection-1.

PaLM 540B required 2.5e24 FLOP to train (confirmed by Google)",,"""Inflection-1 was trained using thousands of NVIDIA H100 GPUs on a very large dataset.""",,,,,,NVIDIA H100 SXM5 80GB,,,"Large language models (LLMs) based on the Transformer architecture have been shown to possess a range of advanced capabilities in language generation and understanding. These capabilities have paved the way for deployment of LLMs in products like OpenAI’s Chat-GPT and Google’s Bard. At Inflection AI, our mission is to create personal AIs for everyone, and in May 2023 we released Pi (pi.ai) – an LLM-based personal AI which is designed to be empathetic, useful, and safe. In this work we introduce the foundation model powering Pi, dubbed Inflection-1, and evaluate its performance characteristics across a variety of benchmarks.",,Hosted access (no API),,Speculative,2025-02-19 18:51:42+00:00,United States of America,,,,,,,,,True
MPT-30B,Language,MosaicML,Industry,,2023-06-22,,https://huggingface.co/mosaicml/mpt-30b,,,,30000000000.0,30B,1.8900000000001e+23,,,"According to their blog post,
""MPT-30B FLOPs ~= 6 * 30e9 [params] * 1.05e12 [tokens] = 1.89e23 FLOPs""","mC4,C4,RedPajama,The Stack",https://www.databricks.com/sites/default/files/inline-images/open-source-foundations-models-1.png,1050000000000.0,"~4T tokens across sources, but only trained on 1.05T of these",1.0,278.4,30B: 512x H100-80gb for 11.6 days,NVIDIA H100 SXM5 80GB,512.0,,"MPT-30B is a decoder-style transformer pretrained from scratch on 1T tokens of English text and code. This model was trained by MosaicML.

MPT-30B is part of the family of Mosaic Pretrained Transformer (MPT) models, which use a modified transformer architecture optimized for efficient training and inference.

MPT-30B comes with special features that differentiate it from other LLMs, including an 8k token context window (which can be further extended via finetuning; see MPT-7B-StoryWriter), support for context-length extrapolation via ALiBi, and efficient inference + training via FlashAttention. It also has strong coding abilities thanks to its pretraining mix. MPT models can also be served efficiently with both standard HuggingFace pipelines and NVIDIA's FasterTransformer. The size of MPT-30B was also specifically chosen to make it easy to deploy on a single GPU—either 1xA100-80GB in 16-bit precision or 1xA100-40GB in 8-bit precision.",,Open weights (unrestricted),0.372,Confident,2025-01-19 23:31:50+00:00,United States of America,,,,Databricks,,,4096000.0,"last two batch sizes were 3,456,000 and 4,096,000, but 4,096,000 only used for last 5% of training

""To build 8k support into MPT-30B efficiently, we first pre-trained on 1T tokens using sequences that were 2k tokens long, and then trained for an additional 50B tokens using sequences that were 8k tokens long...

The model was trained in three stages using the MosaicML Platform: (i) First it was trained on 440 A100-40GBs with a batch size of 1760. (ii) Then, on 216 A100-40GBs with a batch size of 1728. (iii) Training was completed on 256 H100-80GBs with a batch size of 512 with 8k context length and 50B tokens""


",
Vicuna-33B-v1.3,Language,"Large Model Systems Organization,University of California (UC) Berkeley","Academia,Academia",,2023-06-22,Vicuna Model Card,https://huggingface.co/lmsys/vicuna-33b-v1.3,,,,33000000000.0,,,8.658e+19,,lower bound from Vicuna-13B-v1.3 estimation,Vicuna ShareGPT Dataset,,370000000.0,"""The training data is around 125K conversations collected from ShareGPT.com.""
370M tokens (Table 14)

https://arxiv.org/pdf/2306.05685",,,,,,,"Vicuna v1.3 is fine-tuned from LLaMA with supervised instruction fine-tuning. The training data is around 125K conversations collected from ShareGPT.com. See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.",,Open weights (restricted use),,Confident,2024-11-24 22:34:22+00:00,"United States of America,United States of America",LLaMA-33B,,,,,,,,
Vicuna-13B-v1.3,Language,"Large Model Systems Organization,University of California (UC) Berkeley","Academia,Academia",,2023-06-22,Vicuna Model Card,https://huggingface.co/lmsys/vicuna-13b-v1.3,,,,13000000000.0,,,,,,Vicuna ShareGPT Dataset,,370000000.0,"""The training data is around 125K conversations collected from ShareGPT.com.""""
370M tokens (Table 14)

https://arxiv.org/pdf/2306.05685""",3.0,,""" The training is done with 8x A100 GPUs. The longest single training run takes around 2 days.""",NVIDIA A100,8.0,,"Vicuna v1.3 is fine-tuned from LLaMA with supervised instruction fine-tuning. The training data is around 125K conversations collected from ShareGPT.com. See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.
https://arxiv.org/abs/2306.05685",,Open weights (restricted use),,Confident,2024-12-02 15:20:12+00:00,"United States of America,United States of America",LLaMA-13B,8.658e+19,6*13*10^9*370*10^6*3 = 8.658e+19,,,,,,
Vicuna-7B-v1.3,Language,"Large Model Systems Organization,University of California (UC) Berkeley","Academia,Academia",,2023-06-22,Vicuna Model Card,https://huggingface.co/lmsys/vicuna-7b-v1.3,,,,7000000000.0,,,,,,Vicuna ShareGPT Dataset,,370000000.0,"""The training data is around 125K conversations collected from ShareGPT.com.""""
370M tokens (Table 14)

https://arxiv.org/pdf/2306.05685""",3.0,48.0,""" The training is done with 8x A100 GPUs. The longest single training run takes around 2 days.""",NVIDIA A100,8.0,,"Vicuna v1.3 is fine-tuned from LLaMA with supervised instruction fine-tuning. The training data is around 125K conversations collected from ShareGPT.com. See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.
https://arxiv.org/abs/2306.05685",,Open weights (restricted use),,Confident,2024-12-02 15:20:09+00:00,"United States of America,United States of America",LLaMA-7B,4.662e+19,"6*7*10^9*370*10^6*3 = 4.662e+19

312000000000000*8*48*3600*0.3 = 1.2939264e+20

""The longest single training run takes around 2 days."" -> it is likely to be slightly less than 48 hours",,,,,,
RoboCat,Robotics,"Google DeepMind,Google","Industry,Industry","Konstantinos Bousmalis, Giulia Vezzani, Dushyant Rao, Coline Devin, Alex X. Lee, Maria Bauza, Todor Davchev, Yuxiang Zhou, Agrim Gupta, Akhil Raju, Antoine Laurens, Claudio Fantacci, Valentin Dalibard, Martina Zambelli, Murilo Martins, Rugile Pevceviciute, Michiel Blokzijl, Misha Denil, Nathan Batchelor, Thomas Lampe, Emilio Parisotto, Konrad Żołna, Scott Reed, Sergio Gómez Colmenarejo, Jon Scholz, Abbas Abdolmaleki, Oliver Groth, Jean-Baptiste Regli, Oleg Sushkov, Tom Rothörl, José Enrique Chen, Yusuf Aytar, Dave Barker, Joy Ortiz, Martin Riedmiller, Jost Tobias Springenberg, Raia Hadsell, Francesco Nori, Nicolas Heess",2023-06-20,RoboCat: A Self-Improving Foundation Agent for Robotic Manipulation,https://arxiv.org/abs/2306.11706,33.0,SOTA improvement,,1180000000.0,"""Most of the experimental results are based on models with a 1.18B-parameter decoder-only transformer (Vaswani et al., 2017) with 24 layers, an embedding size of 2048, and a post-attention feedforward hidden size of 8196."" page 8",,,,,,"""We use a diverse and large number of datasets for training RoboCat. These include data from agent experience, human demonstrations and self-generated data, on both simulated and real-world robot environments. See Section 3.4 for details on our datasets.""",,,,,,,,,"The ability to leverage heterogeneous robotic experience from different robots and tasks to quickly master novel skills and embodiments has the potential to transform robot learning. Inspired by recent advances in foundation models for vision and language, we propose a foundation agent for robotic manipulation. This agent, named RoboCat, is a visual goal-conditioned decision transformer capable of consuming multi-embodiment action-labelled visual experience. This data spans a large repertoire of motor control skills from simulated and real robotic arms with varying sets of observations and actions. With RoboCat, we demonstrate the ability to generalise to new tasks and robots, both zero-shot as well as through adaptation using only 100--1000 examples for the target task. We also show how a trained model itself can be used to generate data for subsequent training iterations, thus providing a basic building block for an autonomous improvement loop. We investigate the agent's capabilities, with large-scale evaluations both in simulation and on three different real robot embodiments. We find that as we grow and diversify its training data, RoboCat not only shows signs of cross-task transfer, but also becomes more efficient at adapting to new tasks.",,,,Speculative,2024-11-01 14:05:35+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America",,,,,,,,,
WizardCoder-15.5B,Language,Microsoft,Industry,"Can Xu, Qingfeng Sun, Kai Zheng, Xiubo Geng, Pu Zhao, Jiazhan Feng, Chongyang Tao, Daxin Jiang",2023-06-14,WizardCoder: Empowering Code Large Language Models with Evol-Instruct,https://arxiv.org/abs/2306.08568,449.0,,"""It surpasses all other open-source Code LLMs by a substantial margin. Moreover, our model even outperforms the largest closed LLMs, Anthropic’s Claude and Google’s Bard, on HumanEval and HumanEval+.""

however, worse than GPT-4 and GPT-3.5 (as noted in Figure 1) ",15500000000.0,15.5B,1.12e+23,,,1.12e23 base compute (StarCoder estimate) + 1.95e19 finetune compute (see below) ~= 1.12e23,,"synthetic code data:

""To construct the training dataset, we initialized it with the 20K
 instruction-following dataset called Code Alpaca5. We iteratively employ the Evol-Instruct technique on this dataset consisting of 20,000 samples to produce evolved data""",,"""The evolved dataset consists of approximately 78k samples""

Not sure how big the samples are.",,,,,,,"Code Large Language Models (Code LLMs), such as StarCoder, have demonstrated exceptional performance in code-related tasks. However, most existing
models are solely pre-trained on extensive raw code data without instruction finetuning. In this paper, we introduce WizardCoder, which empowers Code LLMs
with complex instruction fine-tuning, by adapting the Evol-Instruct method to
the domain of code. Through comprehensive experiments on four prominent
code generation benchmarks, namely HumanEval, HumanEval+, MBPP, and DS1000, we unveil the exceptional capabilities of our model. It surpasses all other
open-source Code LLMs by a substantial margin. Moreover, our model even
outperforms the largest closed LLMs, Anthropic’s Claude and Google’s Bard, on
HumanEval and HumanEval+. Our code, model weights, and data are public at
https://github.com/nlpxucan/WizardLM.",,Open weights (restricted use),,Likely,2025-02-14 21:21:21+00:00,United States of America,StarCoder,1.95035136e+19,"""The StarCoder [11] serves as our basic foundation model. The evolved dataset consists of approximately 78k samples. To fine-tune the basic models, we employ specific configurations, including a
batch size of 512, a sequence length of 2048, 200 fine-tuning steps, 30 warmup steps, a learning rate
of 2e-5, a Cosine learning rate scheduler, and fp16 mixed precision.""

512*2048*200 = 209,715,200 training tokens

209715200 * 15.5B * 6 = 1.95e19",,,,,,
BELLE-LLaMA-7B-2M-enc ,Language,KE Holdings Inc. (“Beike”),Industry,,2023-06-12,,https://huggingface.co/BelleGroup/BELLE-LLaMA-7B-2M-enc,,,,7000000000.0,,,,,,Stanford-Alpaca,,2000000.0,"I am not sure if they report tokens, words, or documents",3.0,,,,,,"BELLE-LLAMA-7B-2M-enc is based on LLAMA 7B and finetuned with 2M Chinese data combined with 50,000 pieces of English data from the open source Stanford-Alpaca, resulting in good Chinese instruction understanding and response generation capabilities.

The code of Chinese data generation and other detailed information can be found in our Github project repository: https://github.com/LianjiaTech/BELLE.",,Open weights (non-commercial),,Confident,2024-11-27 20:26:42+00:00,China,LLaMA-7B,,,,,,,,
BELLE-LLaMA-13B-2M-enc,Language,KE Holdings Inc. (“Beike”),Industry,,2023-06-12,,https://huggingface.co/BelleGroup/BELLE-LLaMA-13B-2M-enc,,,,13000000000.0,,,,,,Stanford-Alpaca,,2000000.0,"I am not sure if they report tokens, words, or documents",3.0,,,,,,"BELLE-LLAMA-13B-2M-enc is based on LLAMA 13B and finetuned with 2M Chinese data combined with 50,000 pieces of English data from the open source Stanford-Alpaca, resulting in good Chinese instruction understanding and response generation capabilities.

The code of Chinese data generation and other detailed information can be found in our Github project repository: https://github.com/LianjiaTech/BELLE.",,Open weights (non-commercial),,Confident,2024-11-27 20:26:43+00:00,China,LLaMA-13B,,,,,,,,
Wu Dao Aquila-7B,Language,Beijing Academy of Artificial Intelligence / BAAI,Academia,,2023-06-10,,"https://spectrum.ieee.org/china-chatgpt-wu-dao

https://huggingface.co/BAAI/Aquila-7B

https://github.com/FlagAI-Open/FlagAI/blob/master/examples/Aquila/README_en.md",,,,7000000000.0,,,,,,,,,,,,,NVIDIA A100,,,"Who said all large-language models (LLMs) necessarily need to be large? In China’s case, LLMs are currently downsizing in their size and number of parameters. According to sources, this is because the country is now focusing on enabling Chinese startups and smaller entities to build their own generative AI applications. As part of this downscaling trend, in June the Beijing Academy of Artificial Intelligence (BAAI) introduced Wu Dao 3.0, a series of open-source LLMs.

Based on interviews with high-ranking, anonymous sources involved in the project, IEEE Spectrum can report that Wu Dao 3.0 builds on the academy’s work with Wu Dao 2.0, a sparse, multimodal generative AI model—as has been widely reported about version 2.0—with 1.75 trillion parameters. Although there is no single set of parameters for Wu Dao 3.0 (it’s a range of models with a variety of parameter counts) all are well below the 1.75 trillion high-water mark that version 2.0 set.",,Open weights (restricted use),,Confident,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Wu Dao Aquila-33B,Language,Beijing Academy of Artificial Intelligence / BAAI,Academia,,2023-06-10,,"https://spectrum.ieee.org/china-chatgpt-wu-dao

https://huggingface.co/BAAI/Aquila-7B",,,,33000000000.0,33B for largest model: https://huggingface.co/BAAI/Aquila-7B,,,,,,,,,,,,NVIDIA A100,,,"Who said all large-language models (LLMs) necessarily need to be large? In China’s case, LLMs are currently downsizing in their size and number of parameters. According to sources, this is because the country is now focusing on enabling Chinese startups and smaller entities to build their own generative AI applications. As part of this downscaling trend, in June the Beijing Academy of Artificial Intelligence (BAAI) introduced Wu Dao 3.0, a series of open-source LLMs.

Based on interviews with high-ranking, anonymous sources involved in the project, IEEE Spectrum can report that Wu Dao 3.0 builds on the academy’s work with Wu Dao 2.0, a sparse, multimodal generative AI model—as has been widely reported about version 2.0—with 1.75 trillion parameters. Although there is no single set of parameters for Wu Dao 3.0 (it’s a range of models with a variety of parameter counts) all are well below the 1.75 trillion high-water mark that version 2.0 set.",,Unreleased,,Confident,2024-09-05 18:08:31+00:00,China,,,,,,,,,
PoET,Biology,OpenProtein.ai,Industry,"Timothy F. Truong Jr, Tristan Bepler",2023-06-09,PoET: A generative model of protein families as sequences-of-sequences,https://arxiv.org/abs/2306.06156,18.0,,,,,2.30000000000002e+20,,,"1. Hardware setup: 7x NVIDIA A100 GPUs, 3.12e14 FLOP/s per GPU
2. Training duration: 3 days = 259,200 seconds (directly provided)
3. Utilization rate: 40% (default assumption)
4. Calculation: 3.12e14 FLOP/s × 7 GPUs × 259,200s × 0.4 = 2.3e20 FLOPs",,,87580000000.99959,"29,000,000 sets * 10 sequences/set = 290,000,000 sequences
Tokens per sequence = 300 amino acids + 2 tokens = 302 tokens
Total tokens = 290,000,000 sequences * 302 tokens/sequence = 87,580,000,000
Final result: 8.758 × 10¹⁰ datapoints",,,,,,,"Generative protein language models are a natural way to design new proteins with desired functions. However, current models are either difficult to direct to produce a protein from a specific family of interest, or must be trained on a large multiple sequence alignment (MSA) from the specific family of interest, making them unable to benefit from transfer learning across families. To address this, we propose Protein Evolutionary Transformer (PoET), an autoregressive generative model of whole protein families that learns to generate sets of related proteins as sequences-of-sequences across tens of millions of natural protein sequence clusters. PoET can be used as a retrieval-augmented language model to generate and score arbitrary modifications conditioned on any protein family of interest, and can extrapolate from short context lengths to generalize well even for small families. This is enabled by a unique Transformer layer; we model tokens sequentially within sequences while attending between sequences order invariantly, allowing PoET to scale to context lengths beyond those used during training. In extensive experiments on deep mutational scanning datasets, we show that PoET outperforms existing protein language models and evolutionary sequence models for variant function prediction across proteins of all MSA depths. We also demonstrate PoET's ability to controllably generate new protein sequences.",,,,Unverified,2025-02-14 21:21:29+00:00,Singapore,,,,,,,,,
SYNTERACT,Biology,University of Delaware,Academia,"Logan Hallee, Jason P. Gleghorn",2023-06-09,Protein-Protein Interaction Prediction is Achievable with Large Language Models,https://www.biorxiv.org/content/10.1101/2023.06.07.544109v1.abstract,,,,,,,,,,,,180000001.00000024,"353,976 pairs × 500 avg amino acids = 176,988,000 tokens ≈ 1.8 × 10⁸ tokens

{pairs calculation: 179,018 + 3,958 + 170,000 = 353,976}",,,,,,,"Predicting protein-protein interactions (PPIs) is vital for elucidating fundamental biology, designing peptide therapeutics, and for high-throughput protein annotation. This is particularly relevant in the current biotechnology landscape characterized by the proliferation of protein generative models, which necessitate a high-throughput and generalized PPI predictor for proteins regardless of conventional motifs or known biological functions. Our work addresses this need and provides strong evidence of the utility and reliability of protein language models (pLMs) in learning the PPI objective. We demonstrated that with the use of a sizable balanced dataset, pLMs achieve state-of-the-art performance metrics in PPI prediction on diverse proteins. To generate a dataset that allows for the approximation of these conditions, we implemented a novel synthetic data generation scheme to augment BIOGRID and Negatome datasets. The enhancement of these datasets was then used to fine-tune ProtBERT for PPI prediction to develop a model that we call SYNTERACT (SYNThetic data-driven protein-protein intERACtion Transformer). Our results are compelling, demonstrating 92% accuracy on validated positive and negative interacting pairs derived from 50 different organisms, all of which were excluded from the training phase. In addition to the high metrics, secondary analysis revealed that our synthetic negative data was able to successfully mimic actual negative samples, further reinforcing the integrity of synthetic data additions to PPI datasets. Another notable discovery was the ease in which previously existing PPI datasets could be predicted with simplistic features, calling into question if they can actually inform PPI prediction. We find that the subcellular compartment bias inherent to the compilation of these datasets is learnable with deep learning methods and demonstrate that our approach is not burdened by this disadvantage.",,,,Unverified,2025-01-30 05:04:39+00:00,United States of America,ProtBERT-BFD,,,,,,70.0,,
MusicGen,Audio,Meta AI,Industry,"Jade Copet, Felix Kreuk, Itai Gat, Tal Remez, David Kant, Gabriel Synnaeve, Yossi Adi, Alexandre Défossez",2023-06-08,Simple and Controllable Music Generation,https://arxiv.org/abs/2306.05284,240.0,SOTA improvement,"""We conduct extensive empirical evaluation, considering both automatic and human studies, showing the proposed approach is superior to the evaluated baselines on a standard text-to-music benchmark""",3359000000.0,"""We train autoregressive transformer models at different sizes: 300M, 1.5B, 3.3B parameters""

Uses EnCodec 32kHz (HF version has 59M params) for audio tokenization.",,,,"We train the 300M, 1.5B and 3.3B parameter models, using respectively 32, 64 and 96 GPUs, with mixed precision.

Unclear how many epochs used so FLOP calculation is not feasible.",ShutterStock and Pond5 music data collections,"""We use 20K hours of licensed music to train MUSICGEN. Specifically, we rely on an internal dataset of 10K high-quality music tracks, and on the ShutterStock and Pond5 music data collections with respectively 25K and 365K instrument-only music tracks. All datasets consist of full-length music sampled at 32 kHz with metadata composed of a textual description and additional information such as the genre, BPM, and tags.""",,"""We train on 30-second audio crops sampled at random from the full track... We use 20K hours of licensed music""

20000 hours * 60 min/hour * 2 inputs/min = 2400000 input sequences

EnCodec is run at 32kHz but after convolutions has a frame rate of 50 Hz, suggesting 2400000 * 30s * 50/s = 3,600,000,000 audio tokens.

Not confident enough in this calculation to add to database.",,,,,,,"We tackle the task of conditional music generation. We introduce MusicGen, a single Language Model (LM) that operates over several streams of compressed discrete music representation, i.e., tokens. Unlike prior work, MusicGen is comprised of a single-stage transformer LM together with efficient token interleaving patterns, which eliminates the need for cascading several models, e.g., hierarchically or upsampling. Following this approach, we demonstrate how MusicGen can generate high-quality samples, while being conditioned on textual description or melodic features, allowing better controls over the generated output. We conduct extensive empirical evaluation, considering both automatic and human studies, showing the proposed approach is superior to the evaluated baselines on a standard text-to-music benchmark. Through ablation studies, we shed light over the importance of each of the components comprising MusicGen. Music samples, code, and models are available at this https URL.",,,,Likely,2024-11-01 14:05:36+00:00,United States of America,,,,,,,,,True
PolySphere-1,Language,AI inside,Industry,AI Inside,2023-06-08,"AI inside Establishes “XResearch” for R&D and Social Implementation of Generative AI and LLM, Providing the Alpha Version of a 14 Billion-Parameter Japanese LLM Service","https://inside.ai/en/news/2023/06/08/aiinside-xresearch/
https://inside.ai/en/news/2023/06/29/polysphere-token/",,,,14000000000.0,"14B from https://inside.ai/en/news/2023/06/08/aiinside-xresearch/
",,,,,,,,,,,,,,,,,,,Likely,2024-09-05 18:08:31+00:00,Japan,,,,,,,,,
RedPajama-INCITE-7B-Base,Language,Together,Industry,,2023-06-06,,https://huggingface.co/togethercomputer/RedPajama-INCITE-7B-Base,,,"one of the fine-tuned versions is Pareto SOTA for open source. wouldn't consider it SOTA overall. ""RedPajama-INCITE-7B-Instruct is the highest scoring open model on HELM benchmarks, making it ideal for a wide range of tasks. It outperforms LLaMA-7B and state-of-the-art open models such as Falcon-7B (Base and Instruct) and MPT-7B (Base and Instruct) on HELM by 2-9 points.""",6900000000.0,6.9b,4.1e+22,,,"Trained over 1.001 trillion tokens.
6.9b * 1 trillion * 6 = 4.1e22

",RedPajama (1T),https://huggingface.co/datasets/togethercomputer/RedPajama-Data-1T,1001000000000.0,"Authors collected 1.2 trillion token dataset, but only trained on 1.001T of them.",1.0,,,NVIDIA V100,3072.0,,"We trained 3B and 7B models on the Summit supercomputer, in collaboration with AAI CERC lab at Université de Montréal, EleutherAI & LAION for compute time on Summit within the INCITE program award ""Scalable Foundation Models for Transferable Generalist AI”.

Today we are excited to release the v1 versions of the RedPajama-INCITE family of models, including instruct-tuned and chat versions under the Apache 2.0 license.",,Open weights (unrestricted),,Confident,2025-02-14 21:21:41+00:00,United States of America,,,,,,,4000000.0,"""global batch size 4M tokens""",
LTM-1,Language,Magic,Industry,,2023-06-06,"LTM-1: an LLM with a 5,000,000 token context window",https://magic.dev/blog/ltm-1,,SOTA improvement,Very long context window - 5M tokens,,,,,,"Must be below 1e23 FLOP, as it's trained with a single A100.",,,,,,,,,,,"Magic’s LTM-1 enables 50x larger context windows than transformers
Magic's trained a Large Language Model (LLM) that’s able to take in the gigantic amounts of context when generating suggestions. For our coding assistant, this means Magic can now see your entire repository of code.",,,,Unknown,2024-10-14 23:02:54+00:00,United States of America,,,,,,,,,
GELU for CIFAR-10,Vision,"University of California (UC) Berkeley,Toyota Technological Institute at Chicago","Academia,Academia","Dan Hendrycks, Kevin Gimpel",2023-06-06,Gaussian Error Linear Units (GELUs),https://arxiv.org/abs/1606.08415,,,,9888.0,https://docs.google.com/spreadsheets/d/1rnsk2ysbAra1UfQWD9TFDki-0T9OmKqBdd7fw6O7QWE/edit?usp=sharing,741600000000.0,,,6ND = 6*9888*50000*250=741600000000,CIFAR-10,,50000.0,50K - traning examples in MNIST datset,250.0,,,NVIDIA GeForce GTX TITAN X,,,"We propose the Gaussian Error Linear Unit (GELU), a high-performing neural network activation function. The GELU activation function is xΦ(x), where Φ(x) the standard Gaussian cumulative distribution function. The GELU nonlinearity weights inputs by their value, rather than gates inputs by their sign as in ReLUs (x1x>0). We perform an empirical evaluation of the GELU nonlinearity against the ReLU and ELU activations and find performance improvements across all considered computer vision, natural language processing, and speech tasks.",,,,Speculative,2025-02-14 21:21:35+00:00,"United States of America,United States of America",,,,,,,,,
life2vec,Medicine,"Technical University of Denmark,University of Copenhagen","Academia,Academia","Germans Savcisens, Tina Eliassi-Rad, Lars Kai Hansen, Laust Mortensen, Lau Lilleholt, Anna Rogers, Ingo Zettler, Sune Lehmann",2023-06-05,Using Sequences of Life-events to Predict Human Lives,https://arxiv.org/abs/2306.03009,,,,8400000.0,Appendix B: 8.4m,163905134400000.0,,,"=6*3252086*8400000=1.639051344 × 10^14

I am not sure about datasize thus Speculative confidence level","Labour Market Account (AMRUN),National Patient Registry (LPR)","We work with the Labour Market Account (AMRUN) [11] and the National Patient Registry (LPR) datasets [13, 40]. Within the Labour Market Account dataset are event data for every resident of Denmark. For Danish residents who have been in contact with secondary of health care services,
primarily hospitals, the events are accounted in the National Patient Registry. We limit ourselves to data recorded in the period from 2008 until the end of 2015. Datasets are pseudonymized prior to our work by de-identifying addresses, Central Person Register numbers (CPRs), and names. Data is
stored within Statistics Denmark, and all access/use of data is logged.",3252086.0,The total number of residents in the filtered dataset is 3 252 086.,,,,,,,"Over the past decade, machine learning has revolutionized computers' ability to analyze text through flexible computational models. Due to their structural similarity to written language, transformer-based architectures have also shown promise as tools to make sense of a range of multi-variate sequences from protein-structures, music, electronic health records to weather-forecasts. We can also represent human lives in a way that shares this structural similarity to language. From one perspective, lives are simply sequences of events: People are born, visit the pediatrician, start school, move to a new location, get married, and so on. Here, we exploit this similarity to adapt innovations from natural language processing to examine the evolution and predictability of human lives based on detailed event sequences. We do this by drawing on arguably the most comprehensive registry data in existence, available for an entire nation of more than six million individuals across decades. Our data include information about life-events related to health, education, occupation, income, address, and working hours, recorded with day-to-day resolution. We create embeddings of life-events in a single vector space showing that this embedding space is robust and highly structured. Our models allow us to predict diverse outcomes ranging from early mortality to personality nuances, outperforming state-of-the-art models by a wide margin. Using methods for interpreting deep learning models, we probe the algorithm to understand the factors that enable our predictions. Our framework allows researchers to identify new potential mechanisms that impact life outcomes and associated possibilities for personalized interventions.",,Unreleased,,Speculative,2025-02-14 21:21:48+00:00,"Denmark,Denmark",,,,,,,,,
Polyglot-Ko-12.8B,Language,EleutherAI,Research collective,"Hyunwoong Ko, Kichang Yang, Minho Ryu, Taekyoon Choi, Seungmu Yang, Jiwung Hyun, Sungho Park, Kyubyong Park",2023-06-04,A Technical Report for Polyglot-Ko: Open-Source Large-Scale Korean Language Models,https://arxiv.org/abs/2306.02254; https://huggingface.co/EleutherAI/polyglot-ko-12.8b,22.0,,,12898631680.0,,1.28e+22,,,"trained for 167 billion tokens

167b * 12.8b * 6 = 1.28e22",,"""We collaborated with TUNiB to collect a largescale Korean language dataset for our research. The dataset, totaling 1.2TB, was meticulously gathered through our collaborative efforts. Subsequently, we performed preprocessing on this dataset, resulting in 863GB of text data that served as the foundation for our analysis and model training.""",96000000000.0,"863 GB of Korean language data after processing

~111m Korean words per GB, so ~95,793,000,000 or ~96B words.
~1 token per korean word.

https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.ieihc08p8dn0",,,,NVIDIA A100,256.0,,"Polyglot is a pioneering project aimed at enhancing the non-English language performance of multilingual language models. Despite the availability of various multilingual models such as mBERT (Devlin et al., 2019), XGLM (Lin et al., 2022), and BLOOM (Scao et al., 2022), researchers and developers often resort to building monolingual models in their respective languages due to the dissatisfaction with the current multilingual models non-English language capabilities. Addressing this gap, we seek to develop advanced multilingual language models that offer improved performance in non-English languages. In this paper, we introduce the Polyglot Korean models, which represent a specific focus rather than being multilingual in nature. In collaboration with TUNiB, our team collected 1.2TB of Korean data meticulously curated for our research journey. We made a deliberate decision to prioritize the development of Korean models before venturing into multilingual models. This choice was motivated by multiple factors: firstly, the Korean models facilitated performance comparisons with existing multilingual models; and finally, they catered to the specific needs of Korean companies and researchers. This paper presents our work in developing the Polyglot Korean models, which propose some steps towards addressing the non-English language performance gap in multilingual language models.",,Open weights (unrestricted),,Confident,2025-02-14 21:21:55+00:00,"Multinational,United States of America",,,,,,,554817.0,"from HuggingFace: ""Polyglot-Ko-12.8B was trained for 167 billion tokens over 301,000 steps on 256 A100 GPUs with the GPT-NeoX framework.""

from the paper: ""The overall batch size was maintained through the use of gradient accumulation steps (GAS). The model was trained for a total of 301,000 steps.""

GAS is a technique to train larger batches if you have limited memory. I don't think this text says anything in particular about whether the batch sizes changed over the course of training? 167B / 301k = 554,817",
YaYi-7B,,,,,2023-06-03,wenge-research,https://github.com/wenge-research/YAYI,,,,7000000000.0,,,,,,,,,,,,,,,,"The Yayi model is fine-tuned on millions of high-quality domain data manually constructed. The training data covers five major fields, including media publicity, public opinion analysis, public safety, financial risk control, and urban governance, and hundreds of natural language instruction tasks. In the iterative process from pre-training initialization weights to domain models, we gradually enhanced the basic Chinese capabilities and domain analysis capabilities of the Yayi model, and added multi-round dialogue and some plug-in capabilities. ",,,,Unverified,,,,,,,,,,,
Baichuan1-7B,,Baichuan,Industry,,2023-06-01,Baichuan-7B,https://huggingface.co/baichuan-inc/Baichuan-7B,,,,7000559616.0,,5.04e+22,,,7b * 1.2t * 6 = 5.04e22,,,1200000000000.0,,,,,NVIDIA A800,1024.0,,"Baichuan-7B is an open-source large-scale pre-trained model developed by Baichuan Intelligent Technology. Based on the Transformer architecture, it is a model with 7 billion parameters trained on approximately 1.2 trillion tokens. It supports both Chinese and English, with a context window length of 4096. It achieves the best performance of its size on standard Chinese and English authoritative benchmarks (C-EVAL/MMLU).",,,0.5772,Unverified,2025-02-14 21:21:58+00:00,China,,,,,,,,,
MASSA,Biology,"Guangdong-Hong Kong-Macao Joint Laboratory of Human-Machine Intelligence-Synergy Systems,Shenzhen Institute of Advanced Technology,Chinese Academy of Sciences","Research collective,Academia","Fan Hu, Yishen Hu, Weihong Zhang, Huazhen Huang, Yi Pan, Peng Yin",2023-05-30,A Multimodal Protein Representation Framework for Quantifying Transferability Across Biochemical Downstream Tasks,https://onlinelibrary.wiley.com/doi/full/10.1002/advs.202301223,11.0,,,,,,,,,,,300000000.99999946,"Total Datapoints = Number of Proteins × Average Protein Length
1,000,000 × 300 = 3.0e8 datapoints",,,,,,,"Proteins are the building blocks of life, carrying out fundamental functions in biology. In computational biology, an effective protein representation facilitates many important biological quantifications. Most existing protein representation methods are derived from self-supervised language models designed for text analysis. Proteins, however, are more than linear sequences of amino acids. Here, a multimodal deep learning framework for incorporating ≈1 million protein sequence, structure, and functional annotation (MASSA) is proposed. A multitask learning process with five specific pretraining objectives is presented to extract a fine-grained protein-domain feature. Through pretraining, multimodal protein representation achieves state-of-the-art performance in specific downstream tasks such as protein properties (stability and fluorescence), protein‒protein interactions (shs27k/shs148k/string/skempi), and protein‒ligand interactions (kinase, DUD-E), while achieving competitive results in secondary structure and remote homology tasks. Moreover, a novel optimal-transport-based metric with rich geometry awareness is introduced to quantify the dynamic transferability from the pretrained representation to the related downstream tasks, which provides a panoramic view of the step-by-step learning process. The pairwise distances between these downstream tasks are also calculated, and a strong correlation between the inter-task feature space distributions and adaptability is observed.",,,,Unverified,2025-01-30 05:04:26+00:00,"China,China,China",,,,,,,,,
EGNN,Biology,InstaDeep,Industry,"Sebastien Boyer, Sam Money-Kyrle, Oliver Bent",2023-05-30,"Predicting protein stability changes under  
multiple amino acid substitutions using equivariant graph neural networks",https://arxiv.org/abs/2305.19801,4.0,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-10 23:31:42+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
PaLI-X,"Multimodal,Language,Vision,Video",Google Research,Industry,"Xi Chen, Josip Djolonga, Piotr Padlewski, Basil Mustafa, Soravit Changpinyo, Jialin Wu, Carlos Riquelme Ruiz, Sebastian Goodman, Xiao Wang, Yi Tay, Siamak Shakeri, Mostafa Dehghani, Daniel Salz, Mario Lucic, Michael Tschannen, Arsha Nagrani, Hexiang Hu, Mandar Joshi, Bo Pang, Ceslee Montgomery, Paulina Pietrzyk, Marvin Ritter, AJ Piergiovanni, Matthias Minderer, Filip Pavetic, Austin Waters, Gang Li, Ibrahim Alabdulmohsin, Lucas Beyer, Julien Amelot, Kenton Lee, Andreas Peter Steiner, Yang Li, Daniel Keysers, Anurag Arnab, Yuanzhong Xu, Keran Rong, Alexander Kolesnikov, Mojtaba Seyedhosseini, Anelia Angelova, Xiaohua Zhai, Neil Houlsby, Radu Soricut",2023-05-29,PaLI-X: On Scaling up a Multilingual Vision and Language Model,https://arxiv.org/abs/2305.18565,155.0,SOTA improvement,"""PaLI-X advances the state-of-the-art on most vision-and-language benchmarks considered (25+ of them).""",55000000000.0,55B (table 1),,,,,WebLI,"""The main pretraining data for our model is based on WebLI [5], consisting of roughly one billion images with alt-texts from the web and OCR annotations (using the GCP Vision API), covering over 100 languages. In addition to WebLI ⟨image, text⟩ pairs, we introduce here Episodic WebLI data, where each episode corresponds to a set of such pairs. We aim to have each episode contain loosely related images (i.e., they are clustered according to their URL field), so as to encourage attention among examples in an “episode”. We find this new dataset (with 75M episodes and around 400M images in total) important for developing the few-shot capabilities of the model.""",1400000000.0,"1 billion images with alt texts in WebLI, 400m images in Episodic WebLI data",,,,,,,"We present the training recipe and results of scaling up PaLI-X, a multilingual vision and language model, both in terms of size of the components and the breadth of its training task mixture. Our model achieves new levels of performance on a wide-range of varied and complex tasks, including multiple image-based captioning and question-answering tasks, image-based document understanding and few-shot (in-context) learning, as well as object detection, video question answering, and video captioning. PaLI-X advances the state-of-the-art on most vision-and-language benchmarks considered (25+ of them). Finally, we observe emerging capabilities, such as complex counting and multilingual object detection, tasks that are not explicitly in the training mix.",,,,Likely,2024-11-01 14:05:36+00:00,"Multinational,United States of America",UL2,,,,,,,,
30B-Lazarus,Language,Caldera AI,Research collective,,2023-05-27,,https://huggingface.co/CalderaAI/30B-Lazarus,,,,30000000000.0,,,,,,,,,,,,,,,,"This model is the result of an experimental use of LoRAs on language models and model merges that are not the base HuggingFace-format LLaMA model they were intended for. The desired outcome is to additively apply desired features without paradoxically watering down a model's effective behavior.

Potential limitations - LoRAs applied on top of each other may intercompete.

Subjective results - very promising. Further experimental tests and objective tests are required.

Instruct and Setup Suggestions:

Alpaca instruct is primary, Vicuna instruct format may work. If using KoboldAI or Text-Generation-WebUI, recommend switching between Godlike and Storywriter presets and adjusting output length + instructions in memory. Other presets as well as custom settings can yield highly different results, especially Temperature. If poking it with a stick doesn't work try poking harder.",,Open weights (non-commercial),,Unverified,2024-09-16 16:58:27+00:00,,,,,,,,,,
HuatuoGPT,Language,"Shenzhen Research Institue of Big Data,Chinese University of Hong Kong (CUHK)","Academia,Academia","Hongbo Zhang, Junying Chen, Feng Jiang, Fei Yu, Zhihong Chen, Jianquan Li, Guiming Chen, Xiangbo Wu, Zhiyi Zhang, Qingying Xiao, Xiang Wan, Benyou Wang, Haizhou Li",2023-05-24,"HuatuoGPT, towards Taming Language Model to Be a Doctor",https://arxiv.org/abs/2305.15075,,,,13000000000.0,HuatuoGPT-13B is trained on Ziya-LLaMA-13B-Pretrain-v1,,,,,HuatuoGPT-sft-data-v1,"To leverage the best of both distilled data (from ChatGPT) and real-world data (from Doctors), we firstly fine-tune HuatuoGPT using four types of data:
Distilled Instructions from ChatGPT	61,400
Real-world Instructions from Doctors	69,768
Distilled Conversations from ChatGPT	68,888
Real-world Conversations with Doctors	25,986 
(scale is undefined)",55611000.0,"167000000 (mln of  Mandarin Chinese words per GB) *0.333 GB = 55611000

The dataset weoght at HuggingFace: https://huggingface.co/datasets/FreedomIntelligence/HuatuoGPT-sft-data-v1/blob/main/HuatuoGPT_sft_data_v1.jsonl",,,,,,,"In this paper, we present HuatuoGPT, a large language model (LLM) for medical consultation. The core recipe of HuatuoGPT is to leverage both \textit{distilled data from ChatGPT} and \textit{real-world data from doctors} in the supervised fine-tuned stage. The responses of ChatGPT are usually detailed, well-presented and informative while it cannot perform like a doctor in many aspects, e.g. for integrative diagnosis. We argue that real-world data from doctors would be complementary to distilled data in the sense the former could tame a distilled language model to perform like doctors. To better leverage the strengths of both data, we train a reward model to align the language model with the merits that both data bring, following an RLAIF (reinforced learning from AI feedback) fashion. To evaluate and benchmark the models, we propose a comprehensive evaluation scheme (including automatic and manual metrics). Experimental results demonstrate that HuatuoGPT achieves state-of-the-art results in performing medical consultation among open-source LLMs in GPT-4 evaluation, human evaluation, and medical benchmark datasets. It is worth noting that by using additional real-world data and RLAIF, the distilled language model (i.e., HuatuoGPT) outperforms its teacher model ChatGPT in most cases. Our code, data, and models are publicly available at \url{this https URL}. The online demo is available at \url{this https URL}.",,Open weights (unrestricted),,Speculative,2024-12-02 15:25:10+00:00,"China,Hong Kong,China",LLaMA-13B,4.337658e+18,55611000*13000000000*6,,,,,,
Shanhai,,,,,2023-05-24,山海大模型/山海大模型基础介绍,https://ai.unisound.com/doc/unigpt/Algorithm.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Goat-7B,Language,National University of Singapore,Academia,"Tiedong Liu, Bryan Kian Hsiang Low",2023-05-23,Goat: Fine-tuned LLaMA Outperforms GPT-4 on Arithmetic Tasks,https://arxiv.org/abs/2305.14201,64.0,SOTA improvement,"""We introduce Goat, a fine-tuned LLaMA model that significantly outperforms GPT-4 on a range of arithmetic tasks. Fine-tuned on a synthetically generated dataset, Goat achieves state-ofthe-art performance on BIG-bench arithmetic sub-task.""",7000000000.0,7B,,,,2.78e+22 for base LLaMA-7B,,"Model was fine-tuned from LLaMA-7B.

Fine-tuning dataset is a synthetic math dataset:

""We generate the dataset synthetically using a Python script. The dataset consists of around 1 million question-answer pairs. The answer contains
the proposed CoT as well as the final numerical output. The numbers are randomly generated, hence
ensuring a very low probability of instances being
duplicated, although small numbers may be sampled multiple times. We sample from log space to
ensure the numbers are equally likely to be sampled
from different orders of magnitude, which is similar to the sampling method used by Lee and Kim
(2023). The details of the dataset are presented in
Appendix F.""",,Fine-tune dataset had 1 million question-answer pairs. likely ~10 tokens per pair?,1.0,,,NVIDIA A10 PCIe,,,"We introduce Goat, a fine-tuned LLaMA model that significantly outperforms GPT-4 on a range of arithmetic tasks. Fine-tuned on a synthetically generated dataset, Goat achieves state-of-the-art performance on BIG-bench arithmetic sub-task. In particular, the zero-shot Goat-7B matches or even surpasses the accuracy achieved by the few-shot PaLM-540B. Surprisingly, Goat can achieve near-perfect accuracy on large-number addition and subtraction through supervised fine-tuning only, which is almost impossible with previous pretrained language models, such as Bloom, OPT, GPT-NeoX, etc. We attribute Goat's exceptional performance to LLaMA's consistent tokenization of numbers. To tackle more challenging tasks like large-number multiplication and division, we propose an approach that classifies tasks based on their learnability, and subsequently decomposes unlearnable tasks, such as multi-digit multiplication and division, into a series of learnable tasks by leveraging basic arithmetic principles. We thoroughly examine the performance of our model, offering a comprehensive evaluation of the effectiveness of our proposed decomposition steps. Additionally, Goat-7B can be easily trained using LoRA on a 24GB VRAM GPU, facilitating reproducibility for other researchers. We release our model, dataset, and the Python script for dataset generation.",,Open weights (non-commercial),,Speculative,2024-11-01 14:05:35+00:00,Singapore,LLaMA-7B,2.02e+18,"""Goat-7B can be easily fine-tuned using LoRA on a 24GB VRAM GPU... In particular, the fine-tuning process for a specific arithmetic sub-task, such as 8-digit addition using 100K instances, takes only approximately 1.5 hours on an A10 GPU to achieve near-perfect accuracy""

Info isn't very complete - no timeframe specified for the VRAM GPU, I'm not sure how many tokens are in the fine-tune dataset and they use LoRA. Maybe it's 15 A10-hours total (1M total instances)? But safe to assume it's a small fraction of Llama's pretrain compute.

125 trillion (A10 FLOPs) * 15 * 3600 * 0.3 = 2.02e18",,,,,,
Guanaco-65B,Language,University of Washington,Academia,"Tim Dettmers, Artidoro Pagnoni, Ari Holtzman, Luke Zettlemoyer",2023-05-23,QLoRA: Efficient Finetuning of Quantized LLMs,https://arxiv.org/abs/2305.14314; https://github.com/artidoro/qlora,1578.0,,"""Our best model family, which we name Guanaco, outperforms
all previous openly released models on the Vicuna benchmark, reaching 99.3%
of the performance level of ChatGPT while only requiring 24 hours of finetuning
on a single GPU""",65000000000.0,"from Llama-65B 
(also 33B, 13B, 7B variants)",5.5e+23,,,"Fine-tune of Llama-65B, which appears to have been trained on a ""professional grade GPU"" with 48GB VRAM (likely A6000) for 24 hours.

Fine-tune compute is negligible compared to pretraining (5.5e23 for Llama-65b)",,Fine-tuned on instruction datasets such as GLUE and Super-NaturalInstructions,,,,24.0,24 hours,,,,"We present QLoRA, an efficient finetuning approach that reduces memory usage enough to finetune a 65B parameter model on a single 48GB GPU while preserving full 16-bit finetuning task performance. QLoRA backpropagates gradients through a frozen, 4-bit quantized pretrained language model into Low Rank Adapters~(LoRA). Our best model family, which we name Guanaco, outperforms all previous openly released models on the Vicuna benchmark, reaching 99.3% of the performance level of ChatGPT while only requiring 24 hours of finetuning on a single GPU. QLoRA introduces a number of innovations to save memory without sacrificing performance: (a) 4-bit NormalFloat (NF4), a new data type that is information theoretically optimal for normally distributed weights (b) double quantization to reduce the average memory footprint by quantizing the quantization constants, and (c) paged optimziers to manage memory spikes. We use QLoRA to finetune more than 1,000 models, providing a detailed analysis of instruction following and chatbot performance across 8 instruction datasets, multiple model types (LLaMA, T5), and model scales that would be infeasible to run with regular finetuning (e.g. 33B and 65B parameter models). Our results show that QLoRA finetuning on a small high-quality dataset leads to state-of-the-art results, even when using smaller models than the previous SoTA. We provide a detailed analysis of chatbot performance based on both human and GPT-4 evaluations showing that GPT-4 evaluations are a cheap and reasonable alternative to human evaluation. Furthermore, we find that current chatbot benchmarks are not trustworthy to accurately evaluate the performance levels of chatbots. A lemon-picked analysis demonstrates where Guanaco fails compared to ChatGPT. We release all of our models and code, including CUDA kernels for 4-bit training.",,Open weights (non-commercial),,Confident,2025-02-14 21:22:14+00:00,United States of America,LLaMA-65B,8e+18,"""using a single professional GPU over 24 hours we achieve 99.3% with our largest model""

no model specified, but if it's an A100, 312 tflop/s * 24 * 3600 * 0.3 utilization = 8e18",,,,,,
BiomedGPT (182M),"Language,Vision,Medicine","Lehigh University,University of Georgia,Samsung Research America,Harvard Medical School,University of Pennsylvania","Academia,Academia,Industry,Academia,Academia","Kai Zhang, Rong Zhou, Eashan Adhikarla, Zhiling Yan, Yixin Liu, Jun Yu, Zhengliang Liu, Xun Chen, Brian D. Davison, Hui Ren, Jing Huang, Chen Chen, Yuyin Zhou, Sunyang Fu, Wei Liu, Tianming Liu, Xiang Li, Yong Chen, Lifang He, James Zou, Quanzheng Li, Hongfang Liu, Lichao Sun",2023-05-23,BiomedGPT: A Generalist Vision-Language Foundation Model for Diverse Biomedical Tasks,https://arxiv.org/abs/2305.17100,,,,182000000.0,,,,,"""For pre-training, we used ten 24-GB NVIDIA A5000 GPUs configured for multi-GPU training using DistributedDataParallel (DDP)""",,,,"""BiomedGPT, we curated a large-scale pre-training corpus comprising 592,567 images, approximately 183 million text sentences, 46,408 object-label pairs, and 271,804 image-text pairs """,,,,NVIDIA RTX A5000,10.0,,"Traditional biomedical artificial intelligence (AI) models, designed for specific tasks or modalities, often exhibit limited flexibility in real-world deployment and struggle to utilize holistic information. Generalist AI holds the potential to address these limitations due to its versatility in interpreting different data types and generating tailored outputs for diverse needs. However, existing biomedical generalist AI solutions are typically heavyweight and closed source to researchers, practitioners, and patients. Here, we propose BiomedGPT, the first open-source and lightweight vision-language foundation model, designed as a generalist capable of performing various biomedical tasks. BiomedGPT achieved state-of-the-art results in 16 out of 25 experiments while maintaining a computing-friendly model scale. We also conducted human evaluations to assess the capabilities of BiomedGPT in radiology visual question answering, report generation, and summarization. BiomedGPT exhibits robust prediction ability with a low error rate of 3.8% in question answering, satisfactory performance with an error rate of 8.3% in writing complex radiology reports, and competitive summarization ability with a nearly equivalent preference score to human experts. Our method demonstrates that effective training with diverse data can lead to more practical biomedical AI for improving diagnosis and workflow efficiency.",,,,Confident,2024-09-24 01:36:05+00:00,"United States of America,United States of America,United States of America,United States of America,United States of America",,,,,,,,,
RWKV-4 14B,Language,RWKV Foundation,Research collective,"Bo Peng, Eric Alcaide, Quentin Anthony, Alon Albalak, Samuel Arcadinho, Huanqi Cao, Xin Cheng, Michael Chung, Matteo Grella, Kranthi Kiran GV, Xuzheng He, Haowen Hou, Przemyslaw Kazienko, Jan Kocon, Jiaming Kong, Bartlomiej Koptyra, Hayden Lau, Krishna Sri Ipsit Mantri, Ferdinand Mom, Atsushi Saito, Xiangru Tang, Bolun Wang, Johan S. Wind, Stansilaw Wozniak, Ruichong Zhang, Zhenyuan Zhang, Qihang Zhao, Peng Zhou, Jian Zhu, Rui-Jie Zhu",2023-05-22,RWKV: Reinventing RNNs for the Transformer Era,https://arxiv.org/abs/2305.13048,356.0,,,14000000000.0,14b,2.78e+22,,,"from HuggingFace page: https://huggingface.co/BlinkDL/rwkv-4-pile-14b

trained for 330B tokens
14 billion * 330 billion * 6 = 2.78e22

paper notes that a forward pass is almost exactly 2x parameters (within 2%): ""Alternative approximations for FLOPs include doubling the parameters which yields similar results within 2% for 14B and a 30% discrepancy for 169M variant."" and that 6*params*tokens is a good approximation because it's not a transformer: ""FLOPs is for a forward pass for one token. It was calculated as 6(V D + 13D2L), which is the
twice (add and multiply) the number of parameters
in linear layers. The backwards pass FLOPs can be
approximated as twice that of the forward pass. So
the total is 6(V D + 13D2L) per token for training
(3x fw FLOPs). It is noteworthy that FLOPs are
independent of the context length, unlike regular
transformers""",The Pile,,330000000000.0,,,,,NVIDIA A100 SXM4 80 GB,,,"Transformers have revolutionized almost all natural language processing (NLP) tasks but suffer from memory and computational complexity that scales quadratically with sequence length. In contrast, recurrent neural networks (RNNs) exhibit linear scaling in memory and computational requirements but struggle to match the same performance as Transformers due to limitations in parallelization and scalability. We propose a novel model architecture, Receptance Weighted Key Value (RWKV), that combines the efficient parallelizable training of Transformers with the efficient inference of RNNs. Our approach leverages a linear attention mechanism and allows us to formulate the model as either a Transformer or an RNN, which parallelizes computations during training and maintains constant computational and memory complexity during inference, leading to the first non-transformer architecture to be scaled to tens of billions of parameters. Our experiments reveal that RWKV performs on par with similarly sized Transformers, suggesting that future work can leverage this architecture to create more efficient models. This work presents a significant step towards reconciling the trade-offs between computational efficiency and model performance in sequence processing tasks.",,,,Confident,2024-11-25 19:57:15+00:00,Multinational,,,,,,,262144.0,"262144 (or 131072?)
""To train the models mentioned, we... switch batch size dynamically between 128 or 256 sequences, each of 1024 tokens""",
MMS-1B,Speech,Meta AI,Industry,"Vineel Pratap, Andros Tjandra, Bowen Shi, Paden Tomasello, Arun Babu, Sayani Kundu, Ali Elkahky, Zhaoheng Ni, Apoorv Vyas, Maryam Fazel-Zarandi, Alexei Baevski, Yossi Adi, Xiaohui Zhang, Wei-Ning Hsu, Alexis Conneau, Michael Auli",2023-05-22,"Scaling Speech Technology to 1,000+ Languages","https://arxiv.org/abs/2305.13516
https://huggingface.co/facebook/mms-1b-all",231.0,,,1000000000.0,https://huggingface.co/facebook/mms-1b-all/tree/main,,,,"from page 13 ""all models were
pre-trained for a total of one million updates on A100 GPUs with 80GB of memory. The MMS (0.3B)
model was trained with an effective batch size of 2.3 hours of data across 48 GPUs and the MMS
(1B) model was trained with an effective batch size of 3.5 hours on 64 GPUs""
","Common Voice,LibriSpeech","from page 13 ""Data. The pre-training data covers about 491K hours in 1,406 languages. This data is drawn from
six training corpora with different characteristics, including the corpora used in XLS-R [Babu et al.,
2022]:
• MMS-lab-U: 1,362 languages comprising 55K hours (§3.1).
• Multilingual Librispech (MLS): 8 European languages of read books totaling 50K
hours [Pratap et al., 2020c]
• CommonVoice (CV): 89 languages totaling 8.8 hours of read Wikipedia text; we use v9.0 of
the corpus [Ardila et al., 2020])
• VoxLingua-107 (VL): 107 languages totaling 5.3K hours of YouTube content [Valk and
Alumäe, 2020]
• BABEL (BBL): 17 African and Asian languages totaling about 1K hours of conversational
telephone data [Gales et al., 2014]
• VoxPopuli (VP): 371K hours of unlabeled speech data in 23 languages derived from Euro-
pean Parliament event recordings [Wang et al., 2021]""",7856000000.0,"491K hours in mono 16 kHz = 7,856,000,000 samples",7.13,,,NVIDIA A100 SXM4 80 GB,64.0,,"Expanding the language coverage of speech technology has the potential to improve access to information for many more people. However, current speech technology is restricted to about one hundred languages which is a small fraction of the over 7,000 languages spoken around the world. The Massively Multilingual Speech (MMS) project increases the number of supported languages by 10-40x, depending on the task. The main ingredients are a new dataset based on readings of publicly available religious texts and effectively leveraging self-supervised learning. We built pre-trained wav2vec 2.0 models covering 1,406 languages, a single multilingual automatic speech recognition model for 1,107 languages, speech synthesis models for the same number of languages, as well as a language identification model for 4,017 languages. Experiments show that our multilingual speech recognition model more than halves the word error rate of Whisper on 54 languages of the FLEURS benchmark while being trained on a small fraction of the labeled data. ",,Open weights (non-commercial),,Confident,2024-11-01 14:05:35+00:00,United States of America,,,,,,,,,
CodeT5+,Language,Salesforce,Industry,"Yue Wang, Hung Le, Akhilesh Deepak Gotmare, Nghi D.Q. Bui, Junnan Li, Steven C.H. Hoi",2023-05-20,CodeT5+: Open Code Large Language Models for Code Understanding and Generation,https://arxiv.org/abs/2305.07922,326.0,SOTA improvement,"""We extensively evaluate CodeT5+ on over 20 code-related benchmarks in different settings, including zero-shot, finetuning, and instruction-tuning. We observe state-of-the-art (SoTA) model performance on various code-related tasks, such as code generation and completion, math programming, and text-to-code retrieval tasks""",16000000000.0,"""We implemented a family of CodeT5+ models, with model sizes ranging from 220M to 16B""",,,,,,"""We enlarge the pretraining dataset of CodeSearchNet [Husain et al., 2019] with the recently released GitHub Code dataset""",,"""We use the CodeT5 tokenizer to tokenize the multilingual dataset, resulting in 51.5B tokens""",10.8,,,NVIDIA A100,,,"""Large language models (LLMs) pretrained on vast source code have achieved prominent progress in code intelligence. However, existing code LLMs have two main limitations in terms of architecture and pretraining tasks. First, they often adopt a specific architecture (encoder-only or decoder-only) or rely on a unified encoder-decoder network for different downstream tasks. The former paradigm is limited by inflexibility in applications while in the latter, the model is treated as a single system for all tasks, leading to suboptimal performance on a subset of tasks. Secondly, they often employ a limited set of pretraining objectives which might not be relevant to some downstream tasks and hence result in substantial performance degrade. To address these limitations, we propose ``CodeT5+'', a family of encoder-decoder LLMs for code in which component modules can be flexibly combined to suit a wide range of downstream code tasks. Such flexibility is enabled by our proposed mixture of pretraining objectives to mitigate the pretrain-finetune discrepancy. These objectives cover span denoising, contrastive learning, text-code matching, and causal LM pretraining tasks, on both unimodal and bimodal multilingual code corpora. Furthermore, we propose to initialize CodeT5+ with frozen off-the-shelf LLMs without training from scratch to efficiently scale up our models, and explore instruction-tuning to align with natural language instructions. We extensively evaluate CodeT5+ on over 20 code-related benchmarks in different settings, including zero-shot, finetuning, and instruction-tuning. We observe state-of-the-art (SoTA) model performance on various code-related tasks, such as code generation and completion, math programming, and text-to-code retrieval tasks. Particularly, our instruction-tuned CodeT5+ 16B achieves new SoTA results on HumanEval code generation task against other open code LLMs.""",,Open weights (unrestricted),,,2024-11-01 14:05:35+00:00,United States of America,,,,,,,,,
XuanYuan 2.0,Language,Du Xiaoman,Industry,"Xuanyu Zhang, Qing Yang, Dongliang Xu",2023-05-19,XuanYuan 2.0: A Large Chinese Financial Chat Model with Hundreds of Billions Parameters,"https://arxiv.org/abs/2305.12002, https://huggingface.co/Duxiaoman-DI/XuanYuan-176B",64.0,,,176200000000.0,176.2B,,,,Fine-tuned from BLOOM-176B. More details in fine-tuning column,,"Fine-tuned on mix of financial data and general data, including instruction data (figure 1)",366000000000.0,Table 2,,,,NVIDIA A100 SXM4 80 GB,,,"In recent years, pre-trained language models have undergone rapid development with the emergence of large-scale models. However, there is a lack of open-sourced chat models specifically designed for the Chinese language, especially in the field of Chinese finance, at the scale of hundreds of billions. To address this gap, we introduce XuanYuan 2.0, the largest Chinese chat model to date, built upon the BLOOM-176B architecture. Additionally, we propose a novel training method called hybrid-tuning to mitigate catastrophic forgetting. By combining general-domain with domain-specific knowledge and integrating the stages of pre-training and fine-tuning, XuanYuan 2.0 is capable of providing accurate and contextually appropriate responses in the Chinese financial domain.",,Open weights (restricted use),,Confident,2024-11-01 14:05:35+00:00,China,BLOOM-176B,1.37e+22,"13B tokens for fine-tuning, per table 2

176B * 13B * 6 = 1.37e22",,,,,,
ONE-PEACE,"Multimodal,Vision,Speech,Language","Alibaba,Huazhong University of Science and Technology","Industry,Academia","Peng Wang, Shijie Wang, Junyang Lin, Shuai Bai, Xiaohuan Zhou, Jingren Zhou, Xinggang Wang, Chang Zhou",2023-05-18,ONE-PEACE: Exploring One General Representation Model Toward Unlimited Modalities,https://arxiv.org/abs/2305.11172v1,76.0,SOTA improvement,""" ONEPEACE achieves leading results in both uni-modal and multi-modal tasks, including image classification (89.8%
accuracy on ImageNet w/o privately labeled data), semantic segmentation (63.0% mIoU on ADE20K), audio-text
retrieval (outperforming previous SOTAs on AudioCaps and Clotho by a large margin), audio classification (91.8%
zero-shot accuracy on ESC-50, 69.7% accuracy on FSD50K, 59.6% accuracy on VGGSound w/o visual information),
audio question answering (86.2% accuracy on AVQA w/o visual information), image-text retrieval (84.1% I2T R@1
on MSCOCO and 97.6% I2T R@1 on Flickr30K w/o intermediate finetuning and ranking), and visual grounding
(89.26%/83.23%/89.27% scores on RefCOCO/+/g test sets).""",4000000000.0,"""we propose ONE-PEACE, a model with 4B parameters""",1.8e+20,,,"4 billion params * 7.5 billion data * 6 = 1.8e20.

see training dataset size notes. this estimate required some more assumptions than usual.","LAION-2B,LAION-Audio-630K","""For image-text pairs, we use LAION-2B... For audio-text pairs, we mainly use the environmental sound datasets processed by [76].""

looks like there's additional fine-tuning data as well",1600000000.0,"""After these steps, we retain about 1.5 billion image-text pairs""
...
""We also perform simple cleaning on the data, which involves removing samples with text lengths less than 3 or greater than
512, as well as texts containing non-English or emoji characters. Ultimately, we obtain about 2.4 million audio-text pairs, with a total duration of around 8,000 hours""

8000 hours = 480,000 minutes = ~109,440,000 words at 228 wpm

https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.3pbt0hfgv7pq

Trained on 10 epochs for audio. For text, they train on ""200K steps with a batch size of 32768"" = 6,533,600,000
Adding together, they train on ~ 7.5b data points on a dataset of 1.6b, for ~4.7 epochs on average.",4.7,,,,,,"In this work, we explore a scalable way for building a general representation model toward unlimited modalities. We release ONE-PEACE, a highly extensible model with 4B parameters that can seamlessly align and integrate representations across vision, audio, and language modalities. The architecture of ONE-PEACE comprises modality adapters, shared self-attention layers, and modality FFNs. This design allows for the easy extension of new modalities by adding adapters and FFNs, while also enabling multi-modal fusion through self-attention layers. To pretrain ONE-PEACE, we develop two modality-agnostic pretraining tasks, cross-modal aligning contrast and intra-modal denoising contrast, which align the semantic space of different modalities and capture fine-grained details within modalities concurrently. With the scaling-friendly architecture and pretraining tasks, ONE-PEACE has the potential to expand to unlimited modalities. Without using any vision or language pretrained model for initialization, ONE-PEACE achieves leading results on a wide range of uni-modal and multi-modal tasks, including image classification (ImageNet), semantic segmentation (ADE20K), audio-text retrieval (AudioCaps, Clotho), audio classification (ESC-50, FSD50K, VGGSound), audio question answering (AVQA), image-text retrieval (MSCOCO, Flickr30K), and visual grounding (RefCOCO/+/g). Code is available at this https URL.",,Open weights (unrestricted),,Speculative,2025-02-07 01:08:16+00:00,"China,China",,,,,,,,,
LIMA,Language,Meta AI,Industry,"Chunting Zhou, Pengfei Liu, Puxin Xu, Srini Iyer, Jiao Sun, Yuning Mao, Xuezhe Ma, Avia Efrat, Ping Yu, Lili Yu, Susan Zhang, Gargi Ghosh, Mike Lewis, Luke Zettlemoyer, Omer Levy",2023-05-18,LIMA: Less Is More for Alignment,https://arxiv.org/abs/2305.11206,,,,65000000000.0,same as base model LLaMa 65B,,,,,"Stack Exchange,wikiHow,Pushshift Reddit","
",750000.0,"The total amount of training data is roughly 750,000 tokens, split over exactly 1,000 sequences.",15.0,,,,,,"Large language models are trained in two stages: (1) unsupervised pretraining from raw text, to learn general-purpose representations, and (2) large scale instruction tuning and reinforcement learning, to better align to end tasks and user preferences. We measure the relative importance of these two stages by training LIMA, a 65B parameter LLaMa language model fine-tuned with the standard supervised loss on only 1,000 carefully curated prompts and responses, without any reinforcement learning or human preference modeling. LIMA demonstrates remarkably strong performance, learning to follow specific response formats from only a handful of examples in the training data, including complex queries that range from planning trip itineraries to speculating about alternate history. Moreover, the model tends to generalize well to unseen tasks that did not appear in the training data. In a controlled human study, responses from LIMA are either equivalent or strictly preferred to GPT-4 in 43% of cases; this statistic is as high as 58% when compared to Bard and 65% versus DaVinci003, which was trained with human feedback. Taken together, these results strongly suggest that almost all knowledge in large language models is learned during pretraining, and only limited instruction tuning data is necessary to teach models to produce high quality output.",,,,Unverified,2024-12-02 15:24:21+00:00,United States of America,LLaMA-65B,2.925e+17,6*750000*65000000000 = 292500000000000000,,,,,,
Tianhe Tianyuan,,National Supercomputer Center in Tianjin,Government,,2023-05-18,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2024-12-02 06:54:51+00:00,China,,,,,,,,,
CoEdiT-xxl,Language,"University of Minnesota,Grammarly","Academia,Industry","Vipul Raheja, Dhruv Kumar, Ryan Koo, Dongyeop Kang",2023-05-17,CoEdIT: Text Editing by Task-Specific Instruction Tuning,"https://arxiv.org/abs/2305.09857, https://huggingface.co/grammarly/coedit-large",37.0,SOTA improvement,"""We achieve state-of-the-art performance on multiple text editing tasks: grammatical error correction, text simplification, sentence fusion, iterative text editing, and three stylistic editing
tasks (formality style transfer, neutralization,
and paraphrasing).""",11000000000.0,11B,,,,finetuned from Flan-T5,,"82k pairs of editing examples:

""we fine-tune a pre-trained
sequence-to-sequence model on a parallel corpus
of instruction-based 82K input-output pairs. The
inputs and outputs are sourced from publicly available corpora for different text editing tasks""

""Our dataset creation is based on the ITERATER+
dataset proposed by Kim et al. (2022) who combined datasets from various text editing tasks (See
Table 1). Their work, in turn, is based on Du et al (2022b), who categorized each edit into MEANINGCHANGED or NON-MEANING-CHANGED.""",3000000.0,"82k pairs of sentences. Roughly 20 words per sentence based on examples but mean length could be higher due to outliers.
40*82k = ~3,000,000",5.0,,,NVIDIA A100,,,"We introduce COEDIT, a state-of-the-art text editing system for writing assistance. COEDIT takes instructions from the user specifying the attributes of the desired text, such as ""Make the sentence simpler"" or ""Write it in a more neutral style,"" and outputs the edited text. We present a large language model fine-tuned on a diverse collection of task-specific instructions for text editing (a total of 82K instructions). Our model (1) achieves state-of-the-art performance on various text editing benchmarks, (2) is competitive with publicly available largestsized LLMs trained on instructions while being ∼60x smaller, (3) is capable of generalizing to unseen edit instructions, and (4) exhibits abilities to generalize to composite instructions containing different combinations of edit actions. Through extensive qualitative and quantitative analysis, we show that writers prefer the edits suggested by COEDIT, relative to other stateof-the-art text editing models1.",,Open weights (non-commercial),,Likely,2024-11-01 14:05:18+00:00,"United States of America,United States of America",Flan-T5 11B,1e+18,"""We fine-tune different versions of pre-trained FLANT5 (Chung et al., 2022a) models on the COEDIT dataset. Specifically, we use FLANT5-L (770M parameters), FLANT5-XL (3B parameters), FLANT5-XXL (11B parameters) models.""

""Each model is trained for 5 epochs with early stopping. All models were fine-tuned on A100 GPUs using Deepspeed""

6 * 5 epochs * 3 million words (rough estimate) * 11 billion = 9.9e17 ~= 1e18

",,,,,,
WeLM,Language,WeChat AI,Industry,"Hui Su, Xiao Zhou, Houjin Yu, Xiaoyu Shen, Yuwen Chen, Zilin Zhu, Yang Yu, Jie Zhou",2023-05-16,WeLM: A Well-Read Pre-trained Language Model for Chinese,https://arxiv.org/abs/2209.10372 ,21.0,,,10000000000.0,"""WeLM is trained with 10B parameters”",2.484338688e+22,,,"""The largest model is trained on 128 A100-SXM4-40GB GPUs in about 24 days”, ""All models are trained with FP16 mixed precision.""
3.12e14 * 128 * 24 * 24 * 3600 * 0.3 = 2.48e22
(FLOP/GPU-s) * (GPU) * (days) * (h/day) * (sec/h) * (utilization assumption)",,,262000000000.0,"from the paper ""After all the above filtering process, our corpus contains 262B tokens”",,576.0,"""The largest model is trained on 128 A100-SXM4-40GB GPUs in about 24 days”, ",NVIDIA A100 SXM4 40 GB,128.0,Unsupervised,"Large Language Models pre-trained with self-supervised learning have demonstrated impressive zero-shot generalization capabilities on a wide spectrum of tasks. In this work, we present WeLM: a well-read pre-trained language model for Chinese that is able to seamlessly perform different types of tasks with zero or few-shot demonstrations. WeLM is trained with 10B parameters by ""reading"" a curated high-quality corpus covering a wide range of topics. We show that WeLM is equipped with broad knowledge on various domains and languages. On 18 monolingual (Chinese) tasks, WeLM can significantly outperform existing pre-trained models with similar sizes and match the performance of models up to 25 times larger. WeLM also exhibits strong capabilities in multi-lingual and code-switching understanding, outperforming existing multilingual language models pre-trained on 30 languages. Furthermore, We collected human-written prompts for a large set of supervised datasets in Chinese and fine-tuned WeLM with multi-prompted training. The resulting model can attain strong generalization on unseen types of tasks and outperform the unsupervised WeLM in zero-shot learning. Finally, we demonstrate that WeLM has basic skills at explaining and calibrating the decisions from itself, which can be promising directions for future research. Our models can be applied from this https://welm.weixin.qq.com/docs/api/",,,,Confident,2025-02-14 21:22:20+00:00,China,,,,,,,,,
Med-PaLM 2,"Medicine,Language","Google Research,DeepMind","Industry,Industry","Karan Singhal, Tao Tu, Juraj Gottweis, Rory Sayres, Ellery Wulczyn, Le Hou, Kevin Clark, Stephen Pfohl, Heather Cole-Lewis, Darlene Neal, Mike Schaekermann, Amy Wang, Mohamed Amin, Sami Lachgar, Philip Mansfield, Sushant Prakash, Bradley Green, Ewa Dominowska, Blaise Aguera y Arcas, Nenad Tomasev, Yun Liu, Renee Wong, Christopher Semturs, S. Sara Mahdavi, Joelle Barral, Dale Webster, Greg S. Corrado, Yossi Matias, Shekoofeh Azizi, Alan Karthikesalingam, Vivek Natarajan",2023-05-16,Towards Expert-Level Medical Question Answering with Large Language Models,https://arxiv.org/abs/2305.09617,,,,340000000000.0,from PaLM 2,,,,,MultiMedQA,"We applied instruction finetuning to the base LLM following the protocol used by Chung et al. [21]. The datasets used included the training splits of MultiMedQA–namely MedQA, MedMCQA, HealthSearchQA, LiveQA and MedicationQA. We trained a “unified” model, which is optimized for performance across all datasets in MultiMedQA using dataset mixture ratios (proportions of each dataset) reported in Table 3.",,"Dataset Count Mixture ratio
MedQA 10,178 37.5%
MedMCQA 182,822 37.5%
LiveQA 10 3.9%
MedicationQA 9 3.5%
HealthSearchQA 45 17.6%

MedMCQA (https://proceedings.mlr.press/v174/pal22a/pal22a.pdf, Table 2) has on average 12.77+ 2.69+67.52 = 82.98 tokens per datapoint",,,,,,,"Recent artificial intelligence (AI) systems have reached milestones in ""grand challenges"" ranging from Go to protein-folding. The capability to retrieve medical knowledge, reason over it, and answer medical questions comparably to physicians has long been viewed as one such grand challenge.
Large language models (LLMs) have catalyzed significant progress in medical question answering; Med-PaLM was the first model to exceed a ""passing"" score in US Medical Licensing Examination (USMLE) style questions with a score of 67.2% on the MedQA dataset. However, this and other prior work suggested significant room for improvement, especially when models' answers were compared to clinicians' answers. Here we present Med-PaLM 2, which bridges these gaps by leveraging a combination of base LLM improvements (PaLM 2), medical domain finetuning, and prompting strategies including a novel ensemble refinement approach.
Med-PaLM 2 scored up to 86.5% on the MedQA dataset, improving upon Med-PaLM by over 19% and setting a new state-of-the-art. We also observed performance approaching or exceeding state-of-the-art across MedMCQA, PubMedQA, and MMLU clinical topics datasets.
We performed detailed human evaluations on long-form questions along multiple axes relevant to clinical applications. In pairwise comparative ranking of 1066 consumer medical questions, physicians preferred Med-PaLM 2 answers to those produced by physicians on eight of nine axes pertaining to clinical utility (p < 0.001). We also observed significant improvements compared to Med-PaLM on every evaluation axis (p < 0.001) on newly introduced datasets of 240 long-form ""adversarial"" questions to probe LLM limitations.
While further studies are necessary to validate the efficacy of these models in real-world settings, these results highlight rapid progress towards physician-level performance in medical question answering.",,Unreleased,,Unverified,2024-10-28 16:59:54+00:00,"Multinational,United States of America,United Kingdom of Great Britain and Northern Ireland",PaLM 2,,,,,,,,
OpenCALM,Language,CyberAgent,Industry,Ryosuke Ishigami,2023-05-15,OpenCALM-7B,https://huggingface.co/cyberagent/open-calm-7b,,,,7000000000.0,7B,8.95104e+19,,,6*2131200000*7000000000=8.95104e+19,"Wikipedia (ja),Japanese CC-100",,2131200000.0,"Wikipedia ja:
size of en wikipedia: 20.28 GB (https://huggingface.co/datasets/wikipedia_
size of japanese wikipedia: 20.28 GB / 6,825,683 english articles  * 1,416,129 japanese articles = 4.2 GB
wikipedia statistics: https://meta.wikimedia.org/wiki/List_of_Wikipedias
111M japanese words per GB * 4.2 GB = 466200000 words

CommonCrawl ja:
here they mention using cc100
cc-100 has 15G of japanese -> 1665000000 words
https://huggingface.co/datasets/cc100


1665000000+466200000=2131200000 (confidence - speculative because we don't know what subset they used)",,,,,,,"OpenCALM is a suite of decoder-only language models pre-trained on Japanese datasets, developed by CyberAgent, Inc.",,Open weights (unrestricted),,Speculative,2025-02-14 21:22:24+00:00,Japan,,,"They say ""Library: GPT-NeoX"". could mean it's fine-tuned from GPT-NeoX, or just that it uses the same architecture or something? ",,,,,,
A.X (Adot) 39B,"Language,Speech",SK Telecom,Industry,,2023-05-15,,"https://a.sktelecom.com/
https://m.ddaily.co.kr/page/view/2023092614585090151",,,,39000000000.0,,,1.3500000001e+18,,,,,,,,,,,,,,,Hosted access (no API),,Unverified,2024-09-06 15:29:53+00:00,Korea (Republic of),,,,,,,,,
LMRec,"Language,Recommendation","NAVER,Naver AI Lab","Industry,Industry","Kyuyong Shin, Hanock Kwak, Wonjae Kim, Jisu Jeong, Seungjae Jung, Kyung-Min Kim, Jung-Woo Ha, Sang-Woo Lee",2023-05-13,Pivotal Role of Language Modeling in Recommender Systems: Enriching Task-specific and Task-agnostic Representation Learning,https://arxiv.org/abs/2212.03760,,,,210000000.0,210 million (Figure 4),1.9782e+18,,,210000000*1570000000*6=1.9782e+18,Amazon Review Data,"We use three in-house datasets in order to assess our approach on various applications and add three public datasets that are predominantly evaluated in recommendation communities. The in-house datasets are built from
services of an online booking service (OBS), an online travel agency (OTA), and e-commerce platmform (ECOMM). For public datasets, we select two
categories “Industrial and Scientific” (Scientific) and “Prime Pantry” (Pantry) from Amazon review datatsets (Ni et al., 2019) which are two completely
different service domains.",1570000000.0,"Table 3
 1222700000 (in-house dataset) + 347300000 (piblic) = 1,570,000,000 tokens",,,,,,,"Recent studies have proposed unified user modeling frameworks that leverage user behavior data from various applications. Many of them benefit from utilizing users' behavior sequences as plain texts, representing rich information in any domain or system without losing generality. Hence, a question arises: Can language modeling for user history corpus help improve recommender systems? While its versatile usability has been widely investigated in many domains, its applications to recommender systems still remain underexplored. We show that language modeling applied directly to task-specific user histories achieves excellent results on diverse recommendation tasks. Also, leveraging additional task-agnostic user histories delivers significant performance benefits. We further demonstrate that our approach can provide promising transfer learning capabilities for a broad spectrum of real-world recommender systems, even on unseen domains and services.",,,,Likely,2025-02-14 21:22:29+00:00,"Korea (Republic of),Korea (Republic of)",,,,,,,1024.0,table 9,
InstructBLIP,"Multimodal,Language,Vision","Salesforce Research,Hong Kong University of Science and Technology,Nanyang Technological University","Industry,Academia,Academia","Wenliang Dai, Junnan Li, Dongxu Li, Anthony Meng Huat Tiong, Junqi Zhao, Weisheng Wang, Boyang Li, Pascale Fung, Steven Hoi",2023-05-11,InstructBLIP: Towards General-purpose Vision-Language Models with Instruction Tuning,https://arxiv.org/abs/2305.06500,1343.0,SOTA improvement,from abstract - SOTA on ScienceQA,13000000000.0,13B form 2.6,1.94e+20,,,"""All models are trained utilizing 16 Nvidia A100 (40G) GPUs and are completed within 1.5 days.""
16 * 3.12e14 * 1.5 * 24 * 3600 * 0.3 = 1.94e20","COCO,Web CapFilt,NoCaps,Flickr30K Entities,TextCaps,VQAv2,VizWiz,GQA,OKVQA,ScienceQA,OCR-VQA,TextVQA,LLaVA-Instruct-150k","COCO Caption, Web CapFilt, NoCaps, Flickr30K, TextCaps, VQAv2, VizWiz, GQA, Visual Spatial Reasoning, IconQA, OKVQA, A-OKVQA, ScienceQA, Visual Dialog, OCR-VQA, TextVQA, HatefulMemes, LLaVA-Instruct-150K, MSVD-QA, MSRVTT-QA, iVQA",,"""All models are instruction-tuned with a maximum of 60K steps""

""We employ a batch size of 192, 128, and 64 for the 3B, 7B, and 11/13B models, respectively. """,,36.0,"""All models are trained utilizing 16 Nvidia A100 (40G) GPUs and are completed within 1.5 days.""",NVIDIA A100 SXM4 40 GB,16.0,,"Large-scale pre-training and instruction tuning have been successful at creating general-purpose language models with broad competence. However, building general-purpose vision-language models is challenging due to the rich input distributions and task diversity resulting from the additional visual input. Although vision-language pretraining has been widely studied, vision-language instruction tuning remains under-explored. In this paper, we conduct a systematic and comprehensive study on vision-language instruction tuning based on the pretrained BLIP-2 models. We gather 26 publicly available datasets, covering a wide variety of tasks and capabilities, and transform them into instruction tuning format. Additionally, we introduce an instruction-aware Query Transformer, which extracts informative features tailored to the given instruction. Trained on 13 held-in datasets, InstructBLIP attains state-of-the-art zero-shot performance across all 13 held-out datasets, substantially outperforming BLIP-2 and larger Flamingo models. Our models also lead to state-of-the-art performance when finetuned on individual downstream tasks (e.g., 90.7% accuracy on ScienceQA questions with image contexts). Furthermore, we qualitatively demonstrate the advantages of InstructBLIP over concurrent multimodal models. All InstructBLIP models are open-sourced at this https URL. ",,Open weights (non-commercial),,Confident,2025-02-14 21:22:35+00:00,"United States of America,Hong Kong,China,Singapore",Vicuna-13B v0,1.9408896e+20,"flops = (16) * (312 * 10**12) * (1.5* 24 * 3600) * (0.3) = 1.9e20
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

""All models are trained utilizing 16 Nvidia A100 (40G) GPUs and are completed within 1.5 days.""",,,,,,
ESM-GearNet,Biology,"Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),University of Montreal / Université de Montréal,IBM Research,HEC Montreal,CIFAR AI Research","Academia,Academia,Industry,Academia,Research collective","Zuobai Zhang, Chuanrui Wang, Minghao Xu, Vijil Chenthamarakshan, Aurélie Lozano, Payel Das, Jian Tang",2023-05-11,A Systematic Study of Joint Representation Learning on Protein Sequences and Structures,https://arxiv.org/abs/2303.06275,17.0,,,,,,,,,,,110000000.99999984,"Calculating unique tokens seen in first epoch:
Number of Proteins: 365,000
Average Residues per Protein: 300
Total Datapoints = 365,000 × 300 = 109,500,000 ≈ 1.1 × 10^8 tokens",,,,,,,"Learning effective protein representations is critical in a variety of tasks in biology such as predicting protein functions. Recent sequence representation learning methods based on Protein Language Models (PLMs) excel in sequence-based tasks, but their direct adaptation to tasks involving protein structures remains a challenge. In contrast, structure-based methods leverage 3D structural information with graph neural networks and geometric pre-training methods show potential in function prediction tasks, but still suffers from the limited number of available structures. To bridge this gap, our study undertakes a comprehensive exploration of joint protein representation learning by integrating a state-of-the-art PLM (ESM-2) with distinct structure encoders (GVP, GearNet, CDConv). We introduce three representation fusion strategies and explore different pre-training techniques. Our method achieves significant improvements over existing sequence- and structure-based methods, setting new state-of-the-art for function annotation. This study underscores several important design choices for fusing protein sequence and structure information. Our implementation is available at this https URL.",,,,Unverified,2025-01-30 05:04:15+00:00,"Canada,Canada,United States of America,Multinational,Canada,Canada",,,,,,,,,
PaLM 2,Language,Google,Industry,"Andrew M. Dai, David R. So, Dmitry Lepikhin, Jonathan H. Clark, Maxim Krikun, Melvin Johnson, Nan Du, Rohan Anil, Siamak Shakeri, Xavier Garcia, Yanping Huang, Yi Tay, Yong Cheng, Yonghui Wu, Yuanzhong Xu, Yujing Zhang, Zachary Nado, Bryan Richter, Alex Polozov, Andrew Nystrom, Fangxiaoyu Feng, Hanzhao Lin, Jacob Austin, Jacob Devlin, Kefan Xiao, Orhan Firat, Parker Riley, Steven Zheng, Yuhuai Wu, Zhongtao Liu, Jiahui Yu, Guy Gur-Ari, Weikang Zhou, Sneha Kudugunta, Sunipa Dev, Frederick Liu, Gustavo Hernandez Abrego, Kelvin Xu, Abe Ittycheriah, Daniel Sohn, John Nham, Le Hou, Siyuan Qiao, Pidong Wang, Zirui Wang, Laurent El Shafey, Hyeontaek Lim, Marcello Maggioni, Michael Isard, Paul Barham, Qiao Zhang, Tao Wang, Yash Katariya, Aurko Roy, Benjamin Lee, Brennan Saeta, Ce Zheng, Hadi Hashemi, Junwhan Ahn, Rajkumar Samuel, Steven Hand, Zhifeng Chen, Kiran Vodrahalli, Aakanksha Chowdhery, Ethan Dyer, Emanuel Taropa, Vlad Feinberg, James Bradbury, Reiner Pope, Wei Li, YaGuang Li, Eric Chu, Jeffrey Hui, Joshua Howland, Vlad Fienber, Aroma Mahendru, Michele Catasta, Vedant Misra, Kevin Robinson, Maysam Moussalem, Sebastian Ruder, Erica Moreira, Eric Ni, Paige Bailey, Lucas Gonzalez, Alexandre Passos, Slav Petrov, Gaurav Mishra, Mark Omernick, Ambrose Slone, Andrea Hu, Colin Cherry, Denny Zhou, Jan Botha, John Wieting, Joshua Maynez, Kathleen Kenealy, Kevin Brooks, Linting Xue, Markus Freitag, Martin Polacek, Pengcheng Yin, Sebastian Gehrmann, Xuezhi Wang, Kathy Meier-Hellstern, Christopher A. Choquette-Choo, Daniel Smilkov, Emily Reif, Alicia Parrish, Alex Castro Ros, Clément Crepy, Dasha Valter, Jeremy Hurwitz, Katherine Lee, Mark Díaz, Marie Pellat, Matthew Jagielski, Renee Shelby, Shachi Dave",2023-05-10,PaLM 2 Technical Report,https://arxiv.org/abs/2305.10403,950.0,"SOTA improvement,Training cost",,340000000000.0,"Model Architecture: ""PaLM-2 is a new state-of-the-art language model. We have small, medium, and large variants that use stacked layers based on the Transformer architecture, with varying parameters depending on model size. Further details of model size and architecture are withheld from external publication.""
However, the parameter count was leaked to CNBC: https://www.cnbc.com/2023/05/16/googles-palm-2-uses-nearly-five-times-more-text-data-than-predecessor.html",7.34e+24,,7.34e+24,"Compute Requirements ""Not reported.""
Paper suggests heuristic of  C=6ND. Based on 340B parameters and 3.6T tokens, training compute would be around 7.3*10^24 FLOP.",,"""The PaLM 2 pre-training corpus is composed of a diverse set of sources: web documents, books, code, mathematics, and conversational data. The pre-training corpus is significantly larger than the corpus used to train PaLM (Chowdhery et al., 2022). PaLM 2 is trained on a dataset that includes a higher percentage of non-English data than previous large language models, which is beneficial for multilingual tasks"" (page 9)",2700000000000.0,"""The pre-training corpus is significantly larger than the corpus used to train PaLM"" so greater than 6e+11. According to the leaked documents viewed by CNBC, the corpus was 3.6 trillion tokens or around 2.7*10^12 words.

https://www.cnbc.com/2023/05/16/googles-palm-2-uses-nearly-five-times-more-text-data-than-predecessor.html",,,,Google TPU v4,,,"We introduce PaLM 2, a new state-of-the-art language model that has better multilingual and reasoning capabilities and is more compute-efficient than its predecessor PaLM (Chowdhery et al., 2022). PaLM 2 is a Transformer-based model trained using a mixture of objectives similar to UL2 (Tay et al., 2023). Through extensive evaluations on English and multilingual language, and reasoning tasks, we demonstrate that PaLM 2 has significantly improved quality on downstream tasks across different model sizes, while simultaneously exhibiting faster and more efficient inference compared to PaLM. This improved efficiency enables broader deployment while also allowing the model to respond faster, for a more natural pace of interaction. PaLM 2 demonstrates robust reasoning capabilities exemplified by large improvements over PaLM on BIG-Bench and other reasoning tasks. PaLM 2 exhibits stable performance on a suite of responsible AI evaluations, and enables inference-time control over toxicity without additional overhead or impact on other capabilities. Overall, PaLM 2 achieves state-of-the-art performance across a diverse set of tasks and capabilities.",,API access,,Likely,2025-01-30 02:09:15+00:00,United States of America,,,,,,,,,True
StarCoder,Language,"Hugging Face,ServiceNow,Northeastern University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),Carnegie Mellon University (CMU),Johns Hopkins University,Leipzig University,ScaDS.AI,Queen Mary University of London,Roblox,Sea AI Lab,Technion - Israel Institute of Technology,Monash University,CSIRO,Data61,McGill University,Saama,University of British Columbia (UBC),Massachusetts Institute of Technology (MIT),Technical University of Munich,IBM,University of Vermont,UnfoldML,SAP,University of Notre Dame,Columbia University,New York University (NYU),University of Allahabad,Discover Dollar,Toloka,Telefonica,Stanford University,Weizmann Institute of Science,Alan Turing Institute,Wellesley College,EleutherAI,Forschungszentrum Julich","Industry,Industry,Academia,Academia,Academia,Academia,Academia,Academia,Industry,Academia,Academia,Government,Government,Academia,Academia,Academia,Academia,Industry,Academia,Industry,Academia,Academia,Academia,Academia,Industry,Industry,Industry,Academia,Academia,Government,Academia,Research collective,Government","Raymond Li, Loubna Ben Allal, Yangtian Zi, Niklas Muennighoff, Denis Kocetkov, Chenghao Mou, Marc Marone, Christopher Akiki, Jia Li, Jenny Chim, Qian Liu, Evgenii Zheltonozhskii, Terry Yue Zhuo, Thomas Wang, Olivier Dehaene, Mishig Davaadorj, Joel Lamy-Poirier, João Monteiro, Oleh Shliazhko, Nicolas Gontier, Nicholas Meade, Armel Zebaze, Ming-Ho Yee, Logesh Kumar Umapathi, Jian Zhu, Benjamin Lipkin, Muhtasham Oblokulov, Zhiruo Wang, Rudra Murthy, Jason Stillerman, Siva Sankalp Patel, Dmitry Abulkhanov, Marco Zocca, Manan Dey, Zhihan Zhang, Nour Fahmy, Urvashi Bhattacharyya, Wenhao Yu, Swayam Singh, Sasha Luccioni, Paulo Villegas, Maxim Kunakov, Fedor Zhdanov, Manuel Romero, Tony Lee, Nadav Timor, Jennifer Ding, Claire Schlesinger, Hailey Schoelkopf, Jan Ebert, Tri Dao, Mayank Mishra, Alex Gu, Jennifer Robinson, Carolyn Jane Anderson, Brendan Dolan-Gavitt, Danish Contractor, Siva Reddy, Daniel Fried, Dzmitry Bahdanau, Yacine Jernite, Carlos Muñoz Ferrandis, Sean Hughes, Thomas Wolf, Arjun Guha, Leandro von Werra, Harm de Vries",2023-05-09,StarCoder: may the source be with you!,https://arxiv.org/abs/2305.06161,512.0,SOTA improvement,"""We perform the most comprehensive evaluation of Code LLMs to date and show that StarCoderBase outperforms every open Code LLM that supports multiple programming languages and matches or outperforms the OpenAI code-cushman-001 model. Furthermore, StarCoder outperforms every model that is fine-tuned on Python""",15500000000.0,"""We trained a 15.5B parameter model""",8.46e+22,,,"FLOP reported here, 8.46e22
https://huggingface.co/bigcode/starcoder


""We trained our model on a GPU cluster with 512 A100 80 GB GPUs... Based on the total number of GPU hours that training took (320,256) and an average power usage of 280W per GPU... The fine-tuned model adds 3.5% of training time""

320256 * 312 tFLOP/s * 3600 * 1.035 * 0.3 (utilization assumption) = 1.12e23",The Stack,"""StarCoderBase is trained on 1 trillion tokens sourced from The Stack (Kocetkov et al., 2022), a large collection of permissively licensed GitHub repositories with inspection tools and an opt-out process""",1000000000000.0,"""StarCoderBase is trained on 1 trillion tokens sourced from The Stack""",1.0,625.5,"625.5 hours = 320256 /512
512 GPUs from ""We trained our model on a GPU cluster with 512 A100 80 GB GPUs ""

320256 GPU hours from ""Based on the total number of GPU hours that training took (320,256)""
citations from sections 5.6 and 5.7",NVIDIA A100 SXM4 80 GB,512.0,,"""The BigCode community, an open-scientific collaboration working on the responsible development of Large Language Models for Code (Code LLMs), introduces StarCoder and StarCoderBase: 15.5B parameter models with 8K context length, infilling capabilities and fast large-batch inference enabled by multi-query attention. StarCoderBase is trained on 1 trillion tokens sourced from The Stack, a large collection of permissively licensed GitHub repositories with inspection tools and an opt-out process. We fine-tuned StarCoderBase on 35B Python tokens, resulting in the creation of StarCoder. We perform the most comprehensive evaluation of Code LLMs to date and show that StarCoderBase outperforms every open Code LLM that supports multiple programming languages and matches or outperforms the OpenAI code-cushman-001 model. Furthermore, StarCoder outperforms every model that is fine-tuned on Python, can be prompted to achieve 40\% pass@1 on HumanEval, and still retains its performance on other programming languages. We take several important steps towards a safe open-access model release, including an improved PII redaction pipeline and a novel attribution tracing tool, and make the StarCoder models publicly available under a more commercially viable version of the Open Responsible AI Model license.""",,Open weights (restricted use),0.2272360999,Confident,2025-02-14 21:23:06+00:00,"Multinational,United States of America,United States of America,United States of America,Canada,United States of America,United States of America,Germany,Germany,United Kingdom of Great Britain and Northern Ireland,United States of America,Singapore,Israel,Australia,Australia,Australia,Canada,United States of America,Canada,United States of America,Germany,United States of America,United States of America,Sweden,Multinational,Germany,United States of America,United States of America,United States of America,India,India,Multinational,Spain,United States of America,Israel,United Kingdom of Great Britain and Northern Ireland,United States of America,Multinational,United States of America,Germany",,,,,,,4000000.0,"""The model was trained for 250k iterations, with a batch size of 4M tokens, for a total of one trillion tokens.""",True
ImageBind,"Multimodal,Vision,Audio,Language,Image generation,Speech",Meta AI,Industry,"Rohit Girdhar, Alaaeldin El-Nouby, Zhuang Liu, Mannat Singh, Kalyan Vasudev Alwala, Armand Joulin, Ishan Misra",2023-05-09,IMAGEBIND: One Embedding Space To Bind Them All,"https://arxiv.org/abs/2305.05665, https://github.com/facebookresearch/ImageBind",607.0,SOTA improvement,"""we set a new state-of-the-art on emergent zero-shot recognition tasks across modalities, outperforming specialist supervised models""",932000000.0,used ViT-Huge 630M as an image/video encoder and OpenCLIP-302m as text encoder,,,,,"SUN RGB-D,LLVIP,Ego4D,AudioSet",""" For the naturally available paired data, we use
the (video, audio) pairs from the Audioset dataset [19], (image, depth) pairs from the SUN RGB-D dataset [69], (image, thermal) pairs from the LLVIP dataset [32] and (video,
IMU) pairs from the Ego4D dataset [23].""",,,64.0,,,"NVIDIA V100,NVIDIA A100",,,"We present ImageBind, an approach to learn a joint embedding across six different modalities - images, text, audio, depth, thermal, and IMU data. We show that all combinations of paired data are not necessary to train such a joint embedding, and only image-paired data is sufficient to bind the modalities together. ImageBind can leverage recent large scale vision-language models, and extends their zero-shot capabilities to new modalities just by using their natural pairing with images. It enables novel emergent applications 'out-of-the-box' including cross-modal retrieval, composing modalities with arithmetic, cross-modal detection and generation. The emergent capabilities improve with the strength of the image encoder and we set a new state-of-the-art on emergent zero-shot recognition tasks across modalities, outperforming specialist supervised models. Finally, we show strong few-shot recognition results outperforming prior work, and that ImageBind serves as a new way to evaluate vision models for visual and non-visual tasks.",,Open weights (non-commercial),,Likely,2025-02-03 17:13:56+00:00,United States of America,ViT-Huge/14,,,,,,,,
Spark,,,,,2023-05-06,"iFlytek unveils large language model, claims it outperforms ChatGPT
",https://technode.com/2023/05/08/iflytek-unveils-large-language-model-claims-it-outperforms-chatgpt/,,,,,,,,,Huawei Ascend,,,,,,,,,,,"On May 6, Chinese voice recognition software company iFlytek unveiled its own artificial intelligence language model called SparkDesk, with the aim of challenging ChatGPT in education and enterprise uses. iFlytek chairman Liu Qingfeng claimed that SparkDesk is expected to surpass the current level of ChatGPT in Chinese understanding and match the OpenAI chatbot’s capabilities in English by October.",,,,Unverified,,,,,,,,,,,
MPT-7B,Language,MosaicML,Industry,MosaicML NLP Team,2023-05-05,"""Introducing MPT-7B: A New Standard for Open-Source, Commercially Usable LLMs""",https://www.mosaicml.com/blog/mpt-7b,,,,7000000000.0,,4.2e+22,,,"""As shown in Table 3, nearly all of the training budget was spent on the base MPT-7B model, which took ~9.5 days to train on 440xA100-40GB GPUs, and cost ~$200k. The finetuned models took much less compute and were much cheaper – ranging between a few hundred and few thousand dollars each.""","mC4,C4,RedPajama (1T),The Stack","""The model was trained for 1T tokens (with batch size 1760 and sequence length 2048). It was trained on the following data mix:
...""

https://huggingface.co/mosaicml/mpt-7b",,,1.0,228.0,"Table 3
https://www.databricks.com/sites/default/files/inline-images/mpt-commercially-usable-llms-img-8.jpg",NVIDIA A100 SXM4 40 GB,440.0,,,MPT-7B,Open weights (unrestricted),0.3727,,2025-01-19 23:31:47+00:00,United States of America,,,,,,,,,
Otter,"Multimodal,Language,Vision",Nanyang Technological University,Academia,"Bo Li, Yuanhan Zhang, Liangyu Chen, Jinghao Wang, Jingkang Yang, Ziwei Liu",2023-05-05,Otter: A Multi-Modal Model with In-Context Instruction Tuning,https://arxiv.org/abs/2305.03726,437.0,,,1300000000.0,1.3B from section 3.2:  'This results in approximately 1.3 billion trainable parameters for the Otter model.',,,,rather low as only 4 RTX 3090 were used.,,custom,,,,,,NVIDIA GeForce RTX 3090,4.0,,"Large language models (LLMs) have demonstrated significant universal capabilities as few/zero-shot learners in various tasks due to their pre-training on vast amounts of text data, as exemplified by GPT-3, which boosted to InstrctGPT and ChatGPT, effectively following natural language instructions to accomplish real-world tasks. In this paper, we propose to introduce instruction tuning into multi-modal models, motivated by the Flamingo model's upstream interleaved format pretraining dataset. We adopt a similar approach to construct our MultI-Modal In-Context Instruction Tuning (MIMIC-IT) dataset. We then introduce Otter, a multi-modal model based on OpenFlamingo (open-sourced version of DeepMind's Flamingo), trained on MIMIC-IT and showcasing improved instruction-following ability and in-context learning. We also optimize OpenFlamingo's implementation for researchers, democratizing the required training resources from 1× A100 GPU to 4× RTX-3090 GPUs, and integrate both OpenFlamingo and Otter into Huggingface Transformers for more researchers to incorporate the models into their customized training and inference pipelines. ",,Open weights (unrestricted),,Likely,2024-11-01 14:05:17+00:00,Singapore,,,,,,,,,
CodeGen2,Language,Salesforce,Industry,"Erik Nijkamp, Hiroaki Hayashi, Caiming Xiong, Silvio Savarese, Yingbo Zhou",2023-05-03,CodeGen2: Lessons for Training LLMs on Programming and Natural Languages,https://arxiv.org/abs/2305.02309,132.0,,,16000000000.0,16B for largest CodeGen2 model,,,,,Stack v1.1,"""We examine our recipe on four model sizes: 1B, 3.7B, 7B, and 16B, and
refer to them as CodeGen2.
1 For training a subset of the Stack v1.1 (Kocetkov et al., 2022), filtered
with a stronger permissive license guideline, is used""",,,,,,,,,"Large language models (LLMs) have demonstrated remarkable abilities in representation learning for program synthesis and understanding tasks. The quality of the learned representations appears to be dictated by the neural scaling laws as a function of the number of model parameters and observations, while imposing upper bounds on the model performance by the amount of available data and compute, which is costly.
In this study, we attempt to render the training of LLMs for program synthesis more efficient by unifying four key components: (1) model architectures, (2) learning methods, (3) infill sampling, and, (4) data distributions. Specifically, for the model architecture, we attempt to unify encoder and decoder-based models into a single prefix-LM. For learning methods, (i) causal language modeling, (ii) span corruption, (iii) infilling are unified into a simple learning algorithm. For infill sampling, we explore the claim of a ""free lunch"" hypothesis. For data distributions, the effect of a mixture distribution and multi-epoch training of programming and natural languages on model performance is explored.
We conduct a comprehensive series of empirical experiments on 1B LLMs, for which failures and successes of this exploration are distilled into five lessons. We will provide a final recipe for training and release CodeGen2 models in size 1B, 3.7B, 7B, and, 16B parameters, along with the training framework as open-source: this https URL.",,Open weights (unrestricted),,Confident,2024-11-01 14:05:18+00:00,United States of America,,,,,,,,,
Perfusion,Image generation,"NVIDIA,Tel Aviv University,Bar-Ilan University","Industry,Academia,Academia","Yoad Tewel, Rinon Gal, Gal Chechik, Yuval Atzmon",2023-05-02,Key-Locked Rank One Editing for Text-to-Image Personalization,https://arxiv.org/abs/2305.01644,128.0,,Pareto frontier performance but not SOTA,,,,,,"Must be <1e23 FLOP, it's trained with a single A100.",,,,,,,,NVIDIA A100,,,"Text-to-image models (T2I) offer a new level of flexibility by allowing users to guide the creative process through natural language. However, personalizing these models to align with user-provided visual concepts remains a challenging problem. The task of T2I personalization poses multiple hard challenges, such as maintaining high visual fidelity while allowing creative control, combining multiple personalized concepts in a single image, and keeping a small model size. We present Perfusion, a T2I personalization method that addresses these challenges using dynamic rank-1 updates to the underlying T2I model. Perfusion avoids overfitting by introducing a new mechanism that ""locks"" new concepts' cross-attention Keys to their superordinate category. Additionally, we develop a gated rank-1 approach that enables us to control the influence of a learned concept during inference time and to combine multiple concepts. This allows runtime-efficient balancing of visual-fidelity and textual-alignment with a single 100KB trained model, which is five orders of magnitude smaller than the current state of the art. Moreover, it can span different operating points across the Pareto front without additional training. Finally, we show that Perfusion outperforms strong baselines in both qualitative and quantitative terms. Importantly, key-locking leads to novel results compared to traditional approaches, allowing to portray personalized object interactions in unprecedented ways, even in one-shot settings.",,Unreleased,,Unknown,2024-11-01 14:05:18+00:00,"United States of America,Israel,Israel",,,,,,,,,
OpenLLaMA-13B,Language,OpenLM Research,Research collective,"Xinyang Geng, Hao Liu",2023-05-01,OpenLLaMA: An Open Reproduction of LLaMA,https://github.com/openlm-research/open_llama,,,,13000000000.0,13B,7.8e+22,,,13b * 1T * 6 = 7.8e22,RedPajama,RedPajama 1T: https://huggingface.co/datasets/togethercomputer/RedPajama-Data-1T,1000000000000.0,"1T tokens, or ~750B words",1.0,,,Google TPU v4,,,"TL;DR: we are releasing our public preview of OpenLLaMA, a permissively licensed open source reproduction of Meta AI’s LLaMA. We are releasing a series of 3B, 7B and 13B models trained on different data mixtures. Our model weights can serve as the drop in replacement of LLaMA in existing implementations.

In this repo, we present a permissively licensed open source reproduction of Meta AI's LLaMA large language model. We are releasing a series of 3B, 7B and 13B models trained on 1T tokens. We provide PyTorch and JAX weights of pre-trained OpenLLaMA models, as well as evaluation results and comparison against the original LLaMA models. The v2 model is better than the old v1 model trained on a different data mixture.",,Open weights (unrestricted),,Confident,2024-11-25 18:45:51+00:00,United States of America,,,,,,,,,
Wutong,,,,,2023-05-01,"「装备大模型化」落地破圈！AI技术的一次自证与他证
",https://news.qq.com/rain/a/20241022A077IC00,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
MosaicML Diffusion,Image generation,Databricks,Industry,"Mihir Patel, Erica Ji Yuen, Cory Stephenson, Landan Seguin",2023-04-28,Training Stable Diffusion from Scratch for <$50k with MosaicML,"https://www.databricks.com/blog/stable-diffusion-2
https://www.databricks.com/blog/diffusion
https://github.com/mosaicml/diffusion",,,Included due to high degree of transparency in training process,1289952427.0,"Manually loaded model with following code snippet:

from diffusers import DiffusionPipeline, DPMSolverMultistepScheduler
import torch

repo_id = ""stabilityai/stable-diffusion-2""
pipe = DiffusionPipeline.from_pretrained(repo_id, torch_dtype=torch.float16, revision=""fp16"")

n_params_vae = sum(p.numel() for p in pipe.components['vae'].parameters())
n_params_text_encoder = sum(p.numel() for p in pipe.components['text_encoder'].parameters())
n_params_unet = sum(p.numel() for p in pipe.components['unet'].parameters())
n_params = n_params_vae + n_params_text_encoder + n_params_unet

print(f""Total number of parameters: {n_params}"")",1.07085888e+22,,,"23,835 A100-hours * 3.12e14 FLOP/GPU-sec * 3600 sec/hour * 0.4 (assumed utilization) = 1.07e22

""Both phases of training ran on 128 NVIDIA A100 GPUs. The first training phase was run for 550k iterations in 1.6 days while the second phase was run for 850k iterations in 4.9 days, for a total of 20,051 A100 hours for training. In addition to the training time, we pre-computed the latents for the VAE and CLIP model to reduce training time and cost when making multiple passes over the dataset. Pre-computing the latents required an additional 3,784 A100 hours, resulting in 23,835 A100 hours in total""

Uses automatic mixed precision, which uses half precision (fp16) in most layers, but fp32 in a few numerically unstable layers like normalization and softmax. Unlike original stable diffusion 2, used half precision LayerNorm and GroupNorm layers.",LAION,"We trained on a subset of LAION-5B that includes samples with English-only captions and an aesthetic score of 4.5+. For the first phase of training, we used all images with resolution >=256x256, amounting to 790 million image-caption samples. For the second phase of training, we only used images with resolution >=512x512, amounting to 300 million image-caption samples.",790000000.0,"For the first phase of training, we used all images with resolution >=256x256, amounting to 790 million image-caption samples. For the second phase of training, we only used images with resolution >=512x512, amounting to 300 million image-caption samples.

Note that second phase data is a strict subset of first stage.",1.3797,186.0,"""Both phases of training ran on 128 NVIDIA A100 GPUs. The first training phase was run for 550k iterations in 1.6 days while the second phase was run for 850k iterations in 4.9 days, for a total of 20,051 A100 hours for training. In addition to the training time, we pre-computed the latents for the VAE and CLIP model to reduce training time and cost when making multiple passes over the dataset. Pre-computing the latents required an additional 3,784 A100 hours, resulting in 23,835 A100 hours in total""
Assuming pre-computation used all 128 A100s, that would have taken 30 hours. Total time: (1.6 + 4.9)*24 + 30 = 186 hours",NVIDIA A100,128.0,Self-supervised learning,"We've replicated Stable Diffusion 2 for less than $50k, and we've open-sourced the training code so you can too! This is a 3x cost reduction from our last blog post and an 8x reduction from the original Stable Diffusion 2, making training large-scale diffusion models from scratch more accessible than ever before.",,Unreleased,,Confident,2025-02-14 21:23:28+00:00,United States of America,,,,,,,,,
Shishuo,,,,,2023-04-27,"4Paradigm joins AI race with enterprise-level platform
",https://global.chinadaily.com.cn/a/202304/27/WS644a601ea310b6054fad0390.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Agile Soccer Robot,Robotics,Google DeepMind,Industry,"Tuomas Haarnoja, Ben Moran, Guy Lever, Sandy H. Huang, Dhruva Tirumala, Markus Wulfmeier, Jan Humplik, Saran Tunyasuvunakool, Noah Y. Siegel, Roland Hafner, Michael Bloesch, Kristian Hartikainen, Arunkumar Byravan, Leonard Hasenclever, Yuval Tassa, Fereshteh Sadeghi, Nathan Batchelor, Federico Casarini, Stefano Saliceti, Charles Game, Neil Sreendra, Kushal Patel, Marlon Gwira, Andrea Huber, Nicole Hurley, Francesco Nori, Raia Hadsell, Nicolas Heess",2023-04-26,Learning Agile Soccer Skills for a Bipedal Robot with Deep Reinforcement Learning,https://arxiv.org/abs/2304.13653,82.0,SOTA improvement,"Likely the best bipedal soccer AI, since it's DeepMind, and related work section just discusses results involving specific soccer skills and quadruped robots:

""Whether bipedal or quadrupedal, navigation represents only a fraction of animal and human capabilities. Motivated by this observation, there is a growing interest in whole body control, i.e. tasks in which the whole body is used in flexible ways to interact with the environment. Examples include climbing (Rudin et al., 2022a), getting-up from the ground (Ma et al., 2023), catching objects (Ma et al., 2023), and mobile manipulation with legs (Cheng et al., 2023). Recently, reinforcement learning has been applied to learn simple soccer skills, including goalkeeping (Huang et al., 2022), ball manipulation on diverse terrains (Bohez et al., 2022; Ji et al., 2023), and shooting (Ji et al.,
2022). These works focus on a narrower set of skills than the 1v1 soccer game, and the quadrupedal platform is inherently more stable and therefore presents an easier learning challenge.""",,,,,,,,self-play training in simulation,,""". The get-up teacher learns to get up relatively quickly and trained in total for approximately 2.4 · 10^8 environment steps,
equivalent to approximately 70 days of simulation time, or 14 hours of wall-clock time. The soccer
teacher was trained for 2 · 10^9 environment steps, which took 158 hours of training, equivalent to
approximately 580 days of simulated match""",,240.0,"14+158+68 hours:
""Training the get-up and soccer teachers took 14 and 158 hours (6.5 days), respectively, and distillation and self-play
took 68 hours (see Appendix B for details)""",,,Reinforcement learning,"We investigate whether Deep Reinforcement Learning (Deep RL) is able to synthesize sophisticated and safe movement skills for a low-cost, miniature humanoid robot that can be composed into complex behavioral strategies in dynamic environments. We used Deep RL to train a humanoid robot with 20 actuated joints to play a simplified one-versus-one (1v1) soccer game. We first trained individual skills in isolation and then composed those skills end-to-end in a self-play setting. The resulting policy exhibits robust and dynamic movement skills such as rapid fall recovery, walking, turning, kicking and more; and transitions between them in a smooth, stable, and efficient manner - well beyond what is intuitively expected from the robot. The agents also developed a basic strategic understanding of the game, and learned, for instance, to anticipate ball movements and to block opponent shots. The full range of behaviors emerged from a small set of simple rewards. Our agents were trained in simulation and transferred to real robots zero-shot. We found that a combination of sufficiently high-frequency control, targeted dynamics randomization, and perturbations during training in simulation enabled good-quality transfer, despite significant unmodeled effects and variations across robot instances. Although the robots are inherently fragile, minor hardware modifications together with basic regularization of the behavior during training led the robots to learn safe and effective movements while still performing in a dynamic and agile way. Indeed, even though the agents were optimized for scoring, in experiments they walked 156% faster, took 63% less time to get up, and kicked 24% faster than a scripted baseline, while efficiently combining the skills to achieve the longer term objectives. Examples of the emergent behaviors and full 1v1 matches are available on the supplementary website.",,Unreleased,,Unknown,2024-11-01 14:05:19+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
WizardLM-7B,Language,"Microsoft,Peking University","Industry,Academia","Can Xu, Qingfeng Sun, Kai Zheng, Xiubo Geng, Pu Zhao, Jiazhan Feng, Chongyang Tao, Daxin Jiang",2023-04-24,WizardLM: Empowering Large Language Models to Follow Complex Instructions,https://arxiv.org/abs/2304.12244,727.0,,"""Labelers prefer WizardLM outputs over outputs from ChatGPT under complex test instructions. On Evol-Instruct testset, WizardLM performs worse than ChatGPT, with a win
rate 12.8% lower than ChatGPT (28.0% vs. 40.8%). However, in the high-difficulty section
of Evol-Instruct test set (difficulty level ≥ 8), our WizardLM even outperforms ChatGPT,
with a win rate 7.9% larger than ChatGPT (42.9% vs. 35.0%), that is human annotators even
prefer the output of our model than ChatGPT on those hard questions""

^ note that this is about GPT-3.5",6700000000.0,This is Llama-7b's parameter count,4.02e+22,,,"""We use pre-trained LLaMA 7B [4] to initialize our model. We adopt Adam optimizer as an initial learning rate of 2 ×10−5, a maximum number of tokens 2048, and the batch size is 8 for each GPU. We train our model on 8 V100 GPUs with Deepspeed Zero-3 for 70 hours on 3 epochs""

Llama-7b was ~4e22. 8*70 V100-hours is ~2e20, so fine-tuning was <1% of base training.",,"Fine-tuning dataset is made of LLM-generated instructions: ""In this work, we introduce Evol-Instruct, a novel method using LLMs instead of humans to automatically mass-produce open-domain instructions of various difficulty levels, to improve the performance of LLMs""",,,,70.0,,NVIDIA V100,8.0,,"Training large language models (LLMs) with open-domain instruction following data brings colossal success. However, manually creating such instruction data is very time-consuming and labor-intensive. Moreover, humans may struggle to produce high-complexity instructions. In this paper, we show an avenue for creating large amounts of instruction data with varying levels of complexity using LLM instead of humans. Starting with an initial set of instructions, we use our proposed Evol-Instruct to rewrite them step by step into more complex instructions. Then, we mix all generated instruction data to fine-tune LLaMA. We call the resulting model WizardLM. Human evaluations on a complexity-balanced test bed and Vicuna's testset show that instructions from Evol-Instruct are superior to human-created ones. By analyzing the human evaluation results of the high complexity part, we demonstrate that outputs from our WizardLM are preferred to outputs from OpenAI ChatGPT. In GPT-4 automatic evaluation, WizardLM achieves more than 90\% capacity of ChatGPT on 17 out of 29 skills. Even though WizardLM still lags behind ChatGPT in some aspects, our findings suggest that fine-tuning with AI-evolved instructions is a promising direction for enhancing LLMs. Our code and data are public at this https URL",,Open weights (non-commercial),,Confident,2025-02-17 20:41:30+00:00,"United States of America,China",LLaMA-7B,,,,,,,,
Falcon-7B,Language,Technology Innovation Institute,Government,,2023-04-24,Falcon-7B ,https://huggingface.co/tiiuae/falcon-7b,,,,7000000000.0,7B,6.3e+22,,,"6ND = 6 * 7B * 1.5T = 6.3e22
""Falcon-7B is a 7B parameters causal decoder-only model built by TII and trained on 1,500B tokens of RefinedWeb enhanced with curated corpora. It is made available under the Apache 2.0 license.""

Table 1 from https://arxiv.org/pdf/2311.16867 Falcon paper

730 petaflop-days * 1e15 * 24 * 3600 = 6.3072e+22 FLOPs",RefinedWeb,"""Falcon-7B is a 7B parameters causal decoder-only model built by TII and trained on 1,500B tokens of RefinedWeb enhanced with curated corpora. It is made available under the Apache 2.0 license.""",1500000000000.0,"1125000000000.0 words  assuming 0.75 words per token (1.5T tokens)
""Falcon-7B is a 7B parameters causal decoder-only model built by TII and trained on 1,500B tokens of RefinedWeb enhanced with curated corpora. It is made available under the Apache 2.0 license.""",,,"compute divided by flops per seconds
 6.3e22 / 3.e16 = 2100000.0 seconds = 583 hours = 24 days
compute (from other note) = 6.3e22
flops per seconds = (num gpu) * (peak flops) * (assumed utilization rate) = 
384*312e12*0.3 = 3.6e16",NVIDIA A100 SXM4 40 GB,384.0,,,,Open weights (unrestricted),,Confident,2025-02-14 21:23:41+00:00,United Arab Emirates,,,,,,,,,
WizardLM 70B,Language,"Microsoft,Peking University","Industry,Academia","Can Xu, Qingfeng Sun, Kai Zheng, Xiubo Geng, Pu Zhao, Jiazhan Feng, Chongyang Tao, Daxin Jiang",2023-04-24,WizardLM: Empowering Large Language Models to Follow Complex Instructions,"https://huggingface.co/WizardLM/WizardLM-70B-V1.0
https://arxiv.org/abs/2304.12244",727.0,,,70000000000.0,70B,,,,,,"""Fine-tuning dataset is made of LLM-generated instructions: ""In this work, we introduce Evol-Instruct, a novel method using LLMs instead of humans to automatically mass-produce open-domain instructions of various difficulty levels, to improve the performance of LLMs""",,,,,,,,,"Training large language models (LLMs) with open-domain instruction following data brings colossal success. However, manually creating such instruction data is very time-consuming and labor-intensive. Moreover, humans may struggle to produce high-complexity instructions. In this paper, we show an avenue for creating large amounts of instruction data with varying levels of complexity using LLM instead of humans. Starting with an initial set of instructions, we use our proposed Evol-Instruct to rewrite them step by step into more complex instructions. Then, we mix all generated instruction data to fine-tune LLaMA. We call the resulting model WizardLM. Human evaluations on a complexity-balanced test bed and Vicuna's testset show that instructions from Evol-Instruct are superior to human-created ones. By analyzing the human evaluation results of the high complexity part, we demonstrate that outputs from our WizardLM are preferred to outputs from OpenAI ChatGPT. In GPT-4 automatic evaluation, WizardLM achieves more than 90\% capacity of ChatGPT on 17 out of 29 skills. Even though WizardLM still lags behind ChatGPT in some aspects, our findings suggest that fine-tuning with AI-evolved instructions is a promising direction for enhancing LLMs. Our code and data are public at https://github.com/nlpxucan/WizardLM",,Open weights (restricted use),,Confident,2024-11-01 14:05:17+00:00,"United States of America,China",Llama 2-70B,,,,,,,,
ruGPT-3.5 13B,Language,Sber,"Industry,Government",,2023-04-24,ruGPT-3.5 13B,https://huggingface.co/ai-forever/ruGPT-3.5-13B,,,,13000000000.0,,1.0699776e+23,,,"""Model was trained using Deepspeed and Megatron libraries, on 300B tokens dataset for 3 epochs, around 45 days on 512 V100. After that model was finetuned 1 epoch with sequence length 2048 around 20 days on 200 GPU A100 on additional data""

512 GPUs * 125000000000000 FLOPs/s [peak] * 45 days * 24 hours * 3600 s * 0.3 + 200 GPUs * 312000000000000 FLOPs/s [peak for fp16] * 20 days * 24 hours * 3600 s * 0.3 = 1.0699776e+23

they probably used fp16 as in their similar project: https://habr.com/ru/companies/sberdevices/articles/780334/

6ND = 6*13B*300B*3 = 70200*10^18 = 7*10^24",,,300000000000.0,,3.0,1080.0,,"NVIDIA A100,NVIDIA Tesla V100 SXM2",512.0,,,,Open weights (unrestricted),,Confident,2025-02-14 21:24:13+00:00,Russia,,,,,,,,,
AlphaLink,Biology,"Technische Universitat Berlin,Research Cluster of Excellence,University of Edinburgh","Research collective,Academia","Kolja Stahl, Andrea Graziadei, Therese Dau, Oliver Brock, Juri Rappsilber",2023-04-20,Protein structure prediction with in-cell photo-crosslinking mass spectrometry and deep learning,https://www.nature.com/articles/s41587-023-01704-z,,,,93000000.0,"""To avoid training OpenFold from scratch, we start with the AlphaFold2 2.0 (https://github.com/deepmind/alphafold/releases/tag/v2.0.0) weights provided by Deepmind""",,,,,trRosetta,"""We train for five epochs on five GPUs, which takes roughly 5 days.""",13000.0,"refine the network on 13,000 proteins from the trRosetta38 training set with simulated photo-AA crosslinking data.",5.0,120.0,"""We train for five epochs on five GPUs, which takes roughly 5 days.""",,5.0,,"While AlphaFold2 can predict accurate protein structures from the primary sequence, challenges remain for proteins that undergo conformational changes or for which few homologous sequences are known. Here we introduce AlphaLink, a modified version of the AlphaFold2 algorithm that incorporates experimental distance restraint information into its network architecture. By employing sparse experimental contacts as anchor points, AlphaLink improves on the performance of AlphaFold2 in predicting challenging targets. We confirm this experimentally by using the noncanonical amino acid photo-leucine to obtain information on residueresidue contacts inside cells by crosslinking mass spectrometry. The program can predict distinct conformations of proteins on the basis of the distance restraints provided, demonstrating the value of experimental data in driving protein structure prediction. The noise-tolerant framework for integrating data in protein structure prediction presented here opens a path to accurate characterization of protein structures from in-cell data.",,,,Unverified,2024-12-23 02:50:47+00:00,"Germany,Germany,United Kingdom of Great Britain and Northern Ireland",AlphaFold 2,,,,,,,,
MOSS-Moon-003,Language,Fudan University,Academia,,2023-04-19,,https://huggingface.co/fnlp/moss-moon-003-base,,,,16000000000.0,16B,6.67e+22,,,"6.67e22 including pre-training for CodeGen:

""The base language model of MOSS-003, which was initialized with CodeGen and further pre-trained on 100B Chinese tokens and 20B English tokens. The model has seen 700B tokens during pre-training and consumed ~6.67x10^22 FLOPs in total.""
",,"""The base language model of MOSS was pre-trained on ~700B English, Chinese, and code tokens, including the PILE, BigQuery, BigPython, and our private Chinese corpus. The base model was then fine-tuned on multi-turn plugin-augmented conversational data""",700000000000.0,Ignoring tokens from fine-tuning; very likely small relative to pre-training data.,,,,,,,"MOSS is an open-sourced plugin-augmented conversational language model. moss-moon models have 16B parameters, allowing users to perform inference on a single A100 GPU or 2 NVIDIA 3090 GPUs with FP16 precision, and on a single NVIDIA 3090 GPU with INT-4/8 precision. The base language model of MOSS was pre-trained on ~700B English, Chinese, and code tokens, including the PILE, BigQuery, BigPython, and our private Chinese corpus. The base model was then fine-tuned on multi-turn plugin-augmented conversational data. Finally, we performed preference-aware training to further improve the model.",,Open weights (unrestricted),,Confident,2025-02-14 21:25:03+00:00,China,CodeGen-Mono 16.1B,1.14e+22,"""The base language model of MOSS-003, which was initialized with CodeGen and further pre-trained on 100B Chinese tokens and 20B English tokens. The model has seen 700B tokens during pre-training and consumed ~6.67x10^22 FLOPs in total.""


Using the proportion of tokens for fine-tuning against total tokens, we have:
6.67e22 * 120/(120+700) = 9.7e21.

However, the 6.67e22 might be *just* pre-training (this phrasing isn't clear). so that would be
6.67e22 * (120/700) = 1.14e22

alternatively, 16b * 120b * 6 = 1.15e22

I'll go with 1.14e22 but all these numbers are very close",,,,,,
Claude 1.3,Language,Anthropic,Industry,,2023-04-18,,https://twitter.com/AnthropicAI/status/1648353600350060545?lang=en,,,100k context window may have been SOTA at the time.,,,,,,,Unspecified unreleased,,,,,,,,,,,,,,Unknown,2024-12-16 18:57:59+00:00,United States of America,,,,,,,,,
LLaVA,"Multimodal,Vision,Language","University of Wisconsin Madison,Microsoft Research,Columbia University","Academia,Industry,Academia","Haotian Liu, Chunyuan Li, Qingyang Wu, Yong Jae Lee",2023-04-17,Visual Instruction Tuning,https://arxiv.org/abs/2304.08485,2482.0,SOTA improvement,"When fine-tuned on Science QA, the synergy of LLaVA and GPT-4 achieves a new state-of-the-art accuracy of 92.53%.",13000000000.0,13B,7.8049e+22,,,"8 * 3.12e14 * (18 * 3600) * 0.3 = 4.9e19
num gpus * peak flops * time *assumed utilization rate 
""We train all models with 8× A100s. Pretraining on CC-595K completes within 4 hours. Finetuning on Instruct-158K completes within 10 hours. Finetuning on ScienceQA completes within 4 hours."" so 18 hours of time in total.

However, they use Vicuna as their LLM backbone, which used 7.8e22 FLOPs in training. Total FLOPs are then 4.9e19 + 7.8e22 = 7.8049e22",Conceptual Captions (CC3M),"""We pre-train our model on the filtered CC-595K subset for 1 epoch with a learning rate of 2e-3 and a batch size of 128, and fine-tune on the proposed LLaVA-Instruct-158K dataset """,,"595K + 158K = 753K image text pairs
""This results in around 595K image-text pairs""
""We collect 158K unique language-image instruction-following samples in total, including 58K in conversations, 23K in detailed description, and 77k in complex reasoning, respectively. """,,10.0,"""We train all models with 8× A100s. Pretraining on CC-595K completes within 4 hours. Finetuning on Instruct-158K completes within 10 hours. Finetuning on ScienceQA completes within 4 hours.""",NVIDIA A100,8.0,,"Instruction tuning large language models (LLMs) using machine-generated instruction-following data has improved zero-shot capabilities on new tasks, but the idea is less explored in the multimodal field. In this paper, we present the first attempt to use language-only GPT-4 to generate multimodal language-image instruction-following data. By instruction tuning on such generated data, we introduce LLaVA: Large Language and Vision Assistant, an end-to-end trained large multimodal model that connects a vision encoder and LLM for general-purpose visual and language understanding.Our early experiments show that LLaVA demonstrates impressive multimodel chat abilities, sometimes exhibiting the behaviors of multimodal GPT-4 on unseen images/instructions, and yields a 85.1% relative score compared with GPT-4 on a synthetic multimodal instruction-following dataset. When fine-tuned on Science QA, the synergy of LLaVA and GPT-4 achieves a new state-of-the-art accuracy of 92.53%. We make GPT-4 generated visual instruction tuning data, our model and code base publicly available. ",,Open weights (unrestricted),,Confident,2025-02-11 22:04:16+00:00,"United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,United States of America",Vicuna-13B v0,4.9e+19,"8 * 3.12e14 * (18 * 3600) * 0.3 = 4.9e19
num gpus * peak flops * time *assumed utilization rate 
""We train all models with 8× A100s. Pretraining on CC-595K completes within 4 hours. Finetuning on Instruct-158K completes within 10 hours. Finetuning on ScienceQA completes within 4 hours."" so 18 hours of time in total.",,,,,,
BELLE-LLaMA-EXT-7B,Language,KE Holdings Inc. (“Beike”),Industry,"Yunjie Ji, Yan Gong, Yong Deng, Yiping Peng, Qiang Niu, Baochang Ma, Xiangang Li",2023-04-16,Towards Better Instruction Following Language Models for Chinese: Investigating the Impact of Training Data and Evaluation,https://arxiv.org/abs/2304.07854,,,,7000000000.0,,,,,,"Stanford-Alpaca,Vicuna ShareGPT Dataset,Belle-3.5","Alpaca-3.5-en(Taori et al., 2023), which is released by Stanford Alpaca and consists of 52K instruction-following samples. These samples are
generated by text-davinci-003.

Alpaca-3.5-zh(Cui and Yang, 2023), which is the translated Chinese version of alpaca-3.5-en.

Alpaca-4-en, Alpaca-4-zh(Peng et al., 2023), which are released by LLaMA-GPT4, both containing 52K instruction -following samples. These
samples are generated by GPT-4. To obtain alpaca-4-zh, Peng et al. (2023) first used ChatGPT to translate 52K instructions into Chinese then asked GPT-4 to answer them in Chinese.

ShareGPT(ShareGPT, 2023), which are usershared conversations with ChatGPT, consisting of 8.3K samples. We conduct three steps of data
cleaning (Chiang et al., 2023). Only English and Chinese conversations are kept. Besides, conversations are divided into smaller segments with a
maximum length of 2048 tokens. Finally, we derive 120,009 conversations.

Belle-3.5, which is our own dataset, consisting of instruction-following samples and multiturn conversations. This dataset contains 500,000
samples that are filtered out from 2.3M raw data with the cleaning method mentioned in section 3. To simplify dataset names while conducting experiments under different data settings, we define two functions for identifying the language of the given dataset. zh(d) means the Chinese version of d and en(d) means the English one.
",3400000000.0,"""LLaMA-EXT, which is obtained by extending
the vocabulary of the vanilla LLaMA and further
pre-train on 3.4B Chinese words in which only
word embeddings are updated.""

for Chinese language we assume 1 word ~ 1 token

Batch size 32
Max length 2048
training steps are not reported",3.0,,4.284e+20/312000000000000 FLOPs * 8 * 3600 * 0.3 ~ 159 hours ~ 6.6 days,NVIDIA A100 SXM4 80 GB,8.0,,"Recently, significant public efforts have been directed towards developing low-cost models with capabilities akin to ChatGPT, thereby fostering the growth of open-source conversational models. However, there remains a scarcity of comprehensive and in-depth evaluations of these models' performance. In this study, we examine the influence of training data factors, including quantity, quality, and linguistic distribution, on model performance. Our analysis is grounded in several publicly accessible, high-quality instruction datasets, as well as our own Chinese multi-turn conversations. We assess various models using a evaluation set of 1,000 samples, encompassing nine real-world scenarios. Our goal is to supplement manual evaluations with quantitative analyses, offering valuable insights for the continued advancement of open-source chat models. Furthermore, to enhance the performance and training and inference efficiency of models in the Chinese domain, we extend the vocabulary of LLaMA - the model with the closest open-source performance to proprietary language models like GPT-3 - and conduct secondary pre-training on 3.4B Chinese words. We make our model, data, as well as code publicly available.",,Open weights (non-commercial),,Confident,2024-12-02 15:22:11+00:00,China,LLaMA-7B,4.284e+20,"""We conduct experiments on 8 A100 GPUs, each has 80G memory.""

6ND = 6*7*10^9*3.4*10^9*3 = 4.284e+20",,,,,,
Suno Bark Model,"Speech,Audio",Suno,Industry,,2023-04-15,,"https://github.com/suno-ai/bark
https://huggingface.co/suno/bark",,,,300000000.0,,,,,,,,,,,,,,,,"Bark is a transformer-based text-to-audio model created by Suno. Bark can generate highly realistic, multilingual speech as well as other audio - including music, background noise and simple sound effects. The model can also produce nonverbal communications like laughing, sighing and crying. To support the research community, we are providing access to pretrained model checkpoints, which are ready for inference and available for commercial use.",,Open weights (unrestricted),,Confident,2024-11-06 23:55:53+00:00,United States of America,,,,,,,,,
DINOv2,Vision,"Facebook AI Research,INRIA","Industry,Academia","Maxime Oquab, Timothée Darcet, Théo Moutakanni, Huy Vo, Marc Szafraniec, Vasil Khalidov, Pierre Fernandez, Daniel Haziza, Francisco Massa, Alaaeldin El-Nouby, Mahmoud Assran, Nicolas Ballas, Wojciech Galuba, Russell Howes, Po-Yao Huang, Shang-Wen Li, Ishan Misra, Michael Rabbat, Vasu Sharma, Gabriel Synnaeve, Hu Xu, Hervé Jegou, Julien Mairal, Patrick Labatut, Armand Joulin, Piotr Bojanowski",2023-04-14,DINOv2: Learning Robust Visual Features without Supervision,https://arxiv.org/abs/2304.07193,1697.0,SOTA improvement,"""Our family of models drastically improves over
the previous state of the art in self-supervised learning and reaches performance comparable with weakly-
supervised features.""
",1140000000.0,1.14B from https://huggingface.co/facebook/dinov2-giant,7.41851136e+21,,,"table 14

22016 * 3600 * 312 * 10 ** 12 * 3/10 = 7.41851136e+21
gpu hours in seconds * flops of A100 * assumed utilization  rate",,new dataset  - named LVD142M Table 15,142000000.0,new dataset  - named LVD142M Table 15,,,,NVIDIA A100 SXM4 40 GB,,Self-supervised learning,"The recent breakthroughs in natural language processing for model pretraining on large quantities of data have opened the way for similar foundation models in computer vision. These models could greatly simplify the use of images in any system by producing all-purpose visual features, i.e., features that work across image distributions and tasks without finetuning. This work shows that existing pretraining methods, especially self-supervised methods, can produce such features if trained on enough curated data from diverse sources. We revisit existing approaches and combine different techniques to scale our pretraining in terms of data and model size. Most of the technical contributions aim at accelerating and stabilizing the training at scale. In terms of data, we propose an automatic pipeline to build a dedicated, diverse, and curated image dataset instead of uncurated data, as typically done in the self-supervised literature. In terms of models, we train a ViT model (Dosovitskiy et al., 2020) with 1B parameters and distill it into a series of smaller models that surpass the best available all-purpose features, OpenCLIP (Ilharco et al., 2021) on most of the benchmarks at image and pixel levels. ",,Open weights (unrestricted),,Confident,2025-02-07 17:19:31+00:00,"United States of America,France",,,,,,,,,
HuaTuo,,,,"Haochun Wang, Chi Liu, , Nuwa Xi, Zewen Qiang, Sendong Zhao, Bing Qin, Ting Liu",2023-04-14,"HuaTuo (华驼): Tuning LLaMA Model with Chinese Medical Knowledge
",https://arxiv.org/pdf/2304.06975,185.0,,,,,,,,,,,,,,,,,,,"Large Language Models (LLMs), such as the LLaMA model, have demonstrated their effectiveness in various general-domain natural language processing (NLP) tasks. Nevertheless, LLMs have not yet performed optimally in biomedical domain tasks due to the need for medical expertise in the responses. In response to this challenge, we propose HuaTuo (华 驼), a LLaMA-based model that has been supervised-fine-tuned with generated QA (Question-Answer) instances. The experimental results demonstrate that HuaTuo generates responses that possess more reliable medical knowledge",,,,Unverified,,,,,,,,,,,
Anthropic LM 52B,Language,Anthropic,Industry,"Yuntao Bai, Andy Jones, Kamal Ndousse, Amanda Askell, Anna Chen, Nova DasSarma, Dawn Drain, Stanislav Fort, Deep Ganguli, Tom Henighan, Nicholas Joseph, Saurav Kadavath, Jackson Kernion, Tom Conerly, Sheer El-Showk, Nelson Elhage, Zac Hatfield-Dodds, Danny Hernandez, Tristan Hume, Scott Johnston, Shauna Kravec, Liane Lovitt, Neel Nanda, Catherine Olsson, Dario Amodei, Tom Brown, Jack Clark, Sam McCandlish, Chris Olah, Ben Mann, Jared Kaplan",2023-04-12,Training a Helpful and Harmless Assistant with Reinforcement Learning from Human Feedback,https://arxiv.org/abs/2204.05862,1695.0,,,52000000000.0,,,,,,,"The 52B preference model was trained on a mixture of helpfulness and harmlessness (red teaming) datasets collected by Anthropic using crowdworkers conversing with language models in a feedback interface.
The helpfulness dataset contains around 44k comparisons and the harmlessness dataset contains around 42k comparisons. The data consists of multi-turn dialogues where crowdworkers choose the more helpful or more harmful response at each turn.
The model was trained using a technique called preference model pretraining on additional datasets before finetuning on Anthropic's human feedback data.",,,,,,,,Reinforcement learning,"We apply preference modeling and reinforcement learning from human feedback (RLHF) to finetune language models to act as helpful and harmless assistants. We find this alignment training improves performance on almost all NLP evaluations, and is fully compatible with training for specialized skills such as python coding and summarization. We explore an iterated online mode of training, where preference models and RL policies are updated on a weekly cadence with fresh human feedback data, efficiently improving our datasets and models. Finally, we investigate the robustness of RLHF training, and identify a roughly linear relation between the RL reward and the square root of the KL divergence between the policy and its initialization. Alongside our main results, we perform peripheral analyses on calibration, competing objectives, and the use of OOD detection, compare our models with human writers, and provide samples from our models using prompts appearing in recent related work.",,Unreleased,,Confident,2024-11-01 14:05:18+00:00,United States of America,,,,,,,,,
Dolly 2.0-12b,Language,Databricks,Industry,"Mike Conover, Matt Hayes, Ankit Mathur, Jianwei Xie, Jun Wan, Sam Shah, Ali Ghodsi, Patrick Wendell, Matei Zaharia, Reynold Xin",2023-04-12,Free Dolly: Introducing the World's First Truly Open Instruction-Tuned LLM,https://www.databricks.com/blog/2023/04/12/dolly-first-open-commercially-viable-instruction-tuned-llm,,,,12000000000.0,,,,,,databricks-dolly-15k,Fine-tuned on instruction dataset with 15k examples.,3493333.0,(13.1 MB * 200M english words in GB / 1000) *4/3 = 3493333 tokens,,,,,,,"Dolly 2.0 is a 12B parameter language model based on the EleutherAI pythia model family and fine-tuned exclusively on a new, high-quality human generated instruction following dataset, crowdsourced among Databricks employees.

We are open-sourcing the entirety of Dolly 2.0, including the training code, the dataset, and the model weights, all suitable for commercial use. This means that any organization can create, own, and customize powerful LLMs that can talk to people, without paying for API access or sharing data with third parties.",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,United States of America,Pythia-12b,251519980000000.0,"Trained on 15k question-answer examples (so fine-tune compute is probably minor)
6ND=6*12000000*3493333=2.5151998e+14",,,,,,
Incoder-6.7B,Language,"Facebook AI Research,University of Washington,University of California (UC) Berkeley,Carnegie Mellon University (CMU),Toyota Technological Institute at Chicago","Industry,Academia,Academia,Academia,Academia","Daniel Fried, Armen Aghajanyan, Jessy Lin, Sida Wang, Eric Wallace, Freda Shi, Ruiqi Zhong, Wen-tau Yih, Luke Zettlemoyer, Mike Lewis",2023-04-09,InCoder: A Generative Model for Code Infilling and Synthesis,https://arxiv.org/abs/2204.05999,515.0,SOTA improvement,"""Zero-shot infilling with bidirectional context substantially outperforms approaches based on left-to-right-only models, and on several tasks
obtains performance comparable to state-of-the-art models fine-tuned on the tasks""",6700000000.0,6.7B,3.00001e+21,,,"per table 5, required 3 zettaflop (3e21) to train.

also, ""INCODER-6.7B was trained on 248 V100 GPUs for 24 days""

hardware method: 125 trillion * 248 * 24 * 24 * 3600 * 0.3 = 2e22. suggests their utilization was quite low, or 24 days was just calendar time.
",,"Code from GitHub and StackOverflow

""To train our models, we collect a corpus of (1) public code with permissive, non-copyleft, opensource licenses from GitHub and GitLab and (2) StackOverflow questions, answers, and comments.
Our primary focus in this paper is on the Python language, but we also include code files from
28 total languages and StackOverflow content from all available languages.""",,"216 GB: ""Our final pre-training corpus contains a total of 159 GB of code, 52 GB of it
in Python, and a total of 57 GB of content from StackOverflow""",1.0,576.0,24,NVIDIA V100,,,"Code is seldom written in a single left-to-right pass and is instead repeatedly edited and refined. We introduce InCoder, a unified generative model that can perform program synthesis (via left-to-right generation) as well as editing (via infilling). InCoder is trained to generate code files from a large corpus of permissively licensed code, where regions of code have been randomly masked and moved to the end of each file, allowing code infilling with bidirectional context. Our model is the first generative model that is able to directly perform zero-shot code infilling, which we evaluate on challenging tasks such as type inference, comment generation, and variable re-naming. We find that the ability to condition on bidirectional context substantially improves performance on these tasks, while still performing comparably on standard program synthesis benchmarks in comparison to left-to-right only models pretrained at similar scale. The InCoder models and code are publicly released. this https URL",,Open weights (non-commercial),,Confident,2025-02-14 21:25:45+00:00,"United States of America,United States of America,United States of America,United States of America,United States of America",,,,,,,,,
gLM,Biology,Harvard University,Academia,"Yunha Hwang, Andre L. Cornman, Sergey Ovchinnikov, Peter R. Girguis",2023-04-08,Deep learning of genomic contexts predicts protein co-regulation and function,"https://www.biorxiv.org/content/10.1101/2023.04.07.536042v1.full
https://github.com/y-hwang/gLM",,,,1000000000.0,"""Our model consists of ~1B parameters which is at least a magnitude smaller  compared to state-of-the-art pLMs.""",2.26437e+20,,,"""The training stage takes several weeks on four NVIDIA A100 GPUs.""

Assumption: 3 weeks, 40% utilization rate, 78 TFLOP peak rate

Estimate: (3*7*24*3600) s * 78e12 FLOP/s *4 GPU * 0.4 = 2.3e20",MGnify,"""seven million metagenomic contig fragments consisting of 15 to 30 genes from the MGnify database""",30800000.999999985,"Number of datapoints = 30.8 × 10^6

Calculations:
30.8 × 10^6 = 30,800,000 unique datapoints/tokens in first epoch",,,,NVIDIA A100,,,"Deciphering the relationship between a gene and its genomic context is fundamental to understanding and engineering biological systems. Machine learning has shown promise in learning latent relationships underlying the sequence-structure-function paradigm from massive protein sequence datasets. However, to date, limited attempts have been made in extending this continuum to include higher order genomic context information. Evolutionary processes dictate the specificity of genomic contexts in which a gene is found across phylogenetic distances, and these emergent genomic patterns can be leveraged to uncover functional relationships between gene products. Here, we trained a genomic language model (gLM) on millions of metagenomic scaffolds to learn the latent functional and regulatory relationships between genes. gLM learns contextualized protein embeddings that capture the genomic context as well as the protein sequence itself, and appears to encode biologically meaningful and functionally relevant information (e.g. phylogeny, enzymatic function). Our analysis of the attention patterns demonstrates that gLM is learning co-regulated functional modules (i.e. operons). Our findings illustrate that gLM’s unsupervised deep learning of the metagenomic corpus is an effective approach to encode functional semantics and regulatory syntax of genes in their genomic contexts, providing a promising avenue for uncovering complex relationships between  genes in a genomic region.",,Open weights (non-commercial),,Likely,2025-02-14 21:25:53+00:00,United States of America,ESM2-650M,,,,,,,,
DiffDock-PP,Biology,"Technical University of Munich,Massachusetts Institute of Technology (MIT)","Academia,Academia","Mohamed Amine Ketata, Cedrik Laue, Ruslan Mammadov, Hannes Stärk, Menghua Wu, Gabriele Corso, Céline Marquet, Regina Barzilay, Tommi S. Jaakkola",2023-04-08,DiffDock-PP: Rigid Protein-Protein Docking with Diffusion Models,https://arxiv.org/abs/2304.03889,38.0,,,,,,,,,,,42827.00000000001,"42,826 datapoints = 42,826 binary protein complexes
Final result = 4.2826e4",,,,,,,"Understanding how proteins structurally interact is crucial to modern biology, with applications in drug discovery and protein design. Recent machine learning methods have formulated protein-small molecule docking as a generative problem with significant performance boosts over both traditional and deep learning baselines. In this work, we propose a similar approach for rigid protein-protein docking: DiffDock-PP is a diffusion generative model that learns to translate and rotate unbound protein structures into their bound conformations. We achieve state-of-the-art performance on DIPS with a median C-RMSD of 4.85, outperforming all considered baselines. Additionally, DiffDock-PP is faster than all search-based methods and generates reliable confidence estimates for its predictions. Our code is publicly available at $\texttt{this https URL}$",,,,Unverified,2025-01-30 05:05:08+00:00,"Germany,United States of America",,,,,,,,,
EvoMIL,Biology,"University of Glasgow,Cancer Research UK Beatson Institute",Academia,"Dan Liu, Francesca Young, David L Robertson, Ke Yuan",2023-04-08,Prediction of virus-host association using protein language models and multiple instance learning,https://www.biorxiv.org/content/10.1101/2023.04.07.536023v1,2.0,,,,,,,,,,,,,,,,,,,"Predicting virus-host association is essential to understand how viruses interact with host species, and discovering new therapeutics for viral diseases across humans and animals. Currently, the host of the majority of viruses is unknown. Here, we introduce EvoMIL, a deep learning method that predicts virus-host association at the species level from viral sequence only. The method combines a pre-trained large protein language model and attention-based multiple instance learning to allow protein-orientated predictions. Our results show that protein embeddings capture stronger predictive signals than traditional handcrafted features, including amino acids and DNA k-mers, and physio-chemical properties. EvoMIL binary classifiers achieve AUC values of over 0.95 for all prokaryotic and nearly 0.8 for almost all eukaryotic hosts. In multi-host prediction tasks, EvoMIL achieved median performance improvements of 8.6% in prokaryotic hosts and 1.8% in eukaryotic hosts. Furthermore, EvoMIL estimates the importance of single proteins in the prediction and maps them to an embedding landscape of all viral proteins, where proteins with similar functions are distinctly clustered together.

Author summary Being able to predict which viruses can infect which hosts, and identifying the specific proteins that are involved in these interactions, is crucial for understanding viral diseases and developing more effective treatments. Traditional methods for predicting these interactions rely on handcrafted common features among proteins, overlooking the importance of single proteins. We have developed a new method that combines a protein language model and multiple instance learning to allow host prediction directly from protein sequences, without the need to extract handcrafted features. This method significantly improved multiple host association accuracy and revealed the key proteins involved in virus-host interactions.",,,,Unverified,2025-01-12 05:14:14+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Cerebras-GPT-13B,Language,Cerebras Systems,Industry,"Nolan Dey, Gurpreet Gosal, Zhiming (Charles)Chen, Hemant Khachane, William Marshall, Ribhu Pathria, Marvin Tom, Joel Hestness",2023-04-06,Cerebras-GPT: Open Compute-Optimal Language Models Trained on the Cerebras Wafer-Scale Cluster,https://arxiv.org/abs/2304.03208,84.0,,,13000000000.0,13 billion,2.3e+22,,,"2.3e22, per table 2",The Pile,,278000000000.0,"371B tokens, or 278B words",0.69,,,Cerebras CS-2,,,"We study recent research advances that improve large language models through efficient pre-training and scaling, and open datasets and tools. We combine these advances to introduce Cerebras-GPT, a family of open compute-optimal language models scaled from 111M to 13B parameters. We train Cerebras-GPT models on the Eleuther Pile dataset following DeepMind Chinchilla scaling rules for efficient pre-training (highest accuracy for a given compute budget). We characterize the predictable power-law scaling and compare Cerebras-GPT with other publicly-available models to show all Cerebras-GPT models have state-of-the-art training efficiency on both pre-training and downstream objectives. We describe our learnings including how Maximal Update Parameterization (μP) can further improve large model scaling, improving accuracy and hyperparameter predictability at scale. We release our pre-trained models and code, making this paper the first open and reproducible work comparing compute-optimal model scaling to models trained on fixed dataset sizes. Cerebras-GPT models are available on HuggingFace: this https URL.",,,,Confident,2025-02-14 21:25:58+00:00,Multinational,,,,,,,2210000.0,"""For the 13B parameter model, we train with a batch size of 720 sequences of length 2048 tokens for the first 84B tokens. At that point, we observed the gap between validation and train loss growing, indicating that the gradient noise was growing, so we increased the batch size to 1080 sequences for the rest of training.""

batch sizes ramp from 1.47M to 2.21M",
Segment Anything Model,Vision,Meta AI,Industry,"Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alexander C. Berg, Wan-Yen Lo, Piotr Dollár, Ross Girshick",2023-04-05,Segment Anything,https://arxiv.org/abs/2304.02643,4323.0,Highly cited,,636000000.0,"From Facebook website: https://segment-anything.com/
""How big is the model? The image encoder has 632M parameters.
The prompt encoder and mask decoder have 4M parameters.""",7.8e+21,,,"""SAM was trained on 256 A100 GPUS for 68 hours. We acknowledge the environmental impact and cost of training
large scale models. The environmental impact of training the released SAM model is approximately 6963 kWh""

68*256 A100-hours = 
17408 hours * 3600 * 312 trillion * 0.4 (utilization assumption for image models)
= 7.82e21

max A100 power is 400W. 6,963,000 watt-hours / 400 watts = 17407.5 hours (so they probably just calculated backwards from power rating, and this doesn't give any info on utilization)",Segment Anything 1B,"""Dataset (§5). Our final dataset, SA-1B, includes more than
1B masks from 11M licensed and privacy-preserving images (see Fig. 2). SA-1B, collected fully automatically using the final stage of our data engine, has 400× more masks
than any existing segmentation dataset [66, 44, 117, 60],
and as we verify extensively, the masks are of high quality
and diversity. Beyond its use in training SAM to be robust
and general, we hope SA-1B becomes a valuable resource
for research aiming to build new foundation models.""",1100000000.0,"""SA-1B contains 11M diverse, high-resolution, licensed, and privacy protecting images and 1.1B high-quality segmentation masks.""
segmentation mask is a map that identifies segments in an image",2.0,68.0,"""SAM was trained on 256 A100 GPUS for 68 hours""",NVIDIA A100,256.0,Supervised,"We introduce the Segment Anything (SA) project: a new task, model, and dataset for image segmentation. Using our efficient model in a data collection loop, we built the largest segmentation dataset to date (by far), with over 1 billion masks on 11M licensed and privacy respecting images. The model is designed and trained to be promptable, so it can transfer zero-shot to new image distributions and tasks. We evaluate its capabilities on numerous tasks and find that its zero-shot performance is impressive -- often competitive with or even superior to prior fully supervised results. We are releasing the Segment Anything Model (SAM) and corresponding dataset (SA-1B) of 1B masks and 11M images at this https URL to foster research into foundation models for computer vision.",,Open weights (unrestricted),,Confident,2025-02-14 21:26:08+00:00,United States of America,ViT-Huge/14,7.8e+21,see Training Compute notes,,,,,,
BELLE-7B-2M,Language,KE Holdings Inc. (“Beike”),Industry,,2023-04-05,,https://huggingface.co/BelleGroup/BELLE-7B-2M,,,,7000000000.0,,,,,,Stanford-Alpaca,,,"2M examples
Batch size	64",3.0,,,,,,"BELLE is based on Bloomz-7b1-mt and finetuned with 2M Chinese data combined with 50,000 pieces of English data from the open source Stanford-Alpaca, resulting in good Chinese instruction understanding and response generation capabilities.

The code of Chinese data generation and other detailed information can be found in our Github project repository: https://github.com/LianjiaTech/BELLE.

We trained models using datasets of different sizes (200,000, 600,000, 1,000,000, and 2,000,000 samples) for instruction learning, and we obtained different model versions as shown below:",,Open weights (unrestricted),,Confident,2024-11-27 19:42:26+00:00,China,BLOOM-7.1B,,,,,,,,
Pythia-12b,Language,"EleutherAI,Booz Allen Hamilton, McLean,University of Cambridge,Indraprastha Institute of Information Technology
Delhi,Stability AI,datasaur.ai,University of Amsterdam","Research collective,Industry,Academia,Academia,Industry,Industry,Academia","Stella Biderman, Hailey Schoelkopf, Quentin Anthony, Herbie Bradley, Kyle O'Brien, Eric Hallahan, Mohammad Aflah Khan, Shivanshu Purohit, USVSN Sai Prashanth, Edward Raff, Aviya Skowron, Lintang Sutawika, Oskar van der Wal",2023-04-03,Pythia: A Suite for Analyzing Large Language Models Across Training and Scaling,https://arxiv.org/abs/2304.01373,891.0,,,12000000000.0,See Table 1 for non-embedding parameters,2.1590000000001e+22,,,https://www.wolframalpha.com/input?i=6+FLOP+*+12+billion+*+299892736000,The Pile,,299892736000.0,"""We train all models for 299,892,736,000 ≈ 300B tokens""",1.0,,,NVIDIA A100 SXM4 40 GB,256.0,,"How do large language models (LLMs) develop and evolve over the course of training? How do these patterns change as models scale? To answer these questions, we introduce \textit{Pythia}, a suite of 16 LLMs all trained on public data seen in the exact same order and ranging in size from 70M to 12B parameters. We provide public access to 154 checkpoints for each one of the 16 models, alongside tools to download and reconstruct their exact training dataloaders for further study. We intend \textit{Pythia} to facilitate research in many areas, and we present several case studies including novel results in memorization, term frequency effects on few-shot performance, and reducing gender bias. We demonstrate that this highly controlled setup can be used to yield novel insights toward LLMs and their training dynamics. Trained models, analysis code, training code, and training data can be found at",Pythia-12b,Open weights (unrestricted),0.2659,Confident,2025-02-14 21:26:32+00:00,"Multinational,United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,India,Multinational,United Kingdom of Great Britain and Northern Ireland,United States of America,Netherlands",,,,Amazon Web Services,AWS US East,,2097152.0,"""The most notable divergence from standard training procedures is that we use a much larger batch size than what is standard for training small language models... we use a batch size of 1024 samples with a sequence length of 2048 (2,097,152 tokens) for all models""",
MahLool,Biology,University of Rochester,Academia,"Mehrad Ansari, Andrew D. White",2023-04-03,"Serverless Prediction of Peptide Properties with Recurrent Neural
Networks",https://pubs.acs.org/doi/full/10.1021/acs.jcim.2c01317,0.0,,,,,,,,,,,8990000.999999994,"DATA TOKENS = 44,954 sequences * 200 amino acids/sequence = 8,990,800 tokens
FINAL = 8,990,800 (8.99e6) unique tokens seen in first epoch

Key calculations:
- Total sequences: 9,316 + 18,453 + 17,185 = 44,954
- Total tokens: 44,954 * 200 = 8,990,800",,,,,,,"We present three deep learning sequence-based prediction models for peptide properties including hemolysis, solubility, and resistance to nonspecific interactions that achieve comparable results to the state-of-the-art models. Our sequence-based solubility predictor, MahLooL, outperforms the current state-of-the-art methods for short peptides. These models are implemented as a static website without the use of a dedicated server or cloud computing. Web-based models like this allow for accessible and effective reproducibility. Most existing approaches rely on third-party servers that typically require upkeep and maintenance. Our predictive models do not require servers, require no installation of dependencies, and work across a range of devices. The specific architecture is bidirectional recurrent neural networks. This serverless approach is a demonstration of edge machine learning that removes the dependence on cloud providers. The code and models are accessible at https://github.com/ur-whitelab/peptide-dashboard.",,,,Unverified,2025-01-30 05:04:05+00:00,United States of America,,,,,,,,,
STEPS,Biology,"McGill University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),Baidu Research - Silicon Valley AI Lab,Baidu,Boston Consulting Group X","Academia,Academia,Industry,Industry,Industry","Can (Sam) Chen, Jingbo Zhou, Fan Wang, Xue Liu, Dejing Dou",2023-04-01,Structure-aware protein self-supervised learning,https://academic.oup.com/bioinformatics/article/39/4/btad189/7117544,53.0,,,,,,,,,,,12000000.99999999,"40,000 proteins × 300 residues/protein = 12,000,000 residues
Total Unique Data Points = 12,000,000",,,,,,,"Motivation
Protein representation learning methods have shown great potential to many downstream tasks in biological applications. A few recent studies have demonstrated that the self-supervised learning is a promising solution to addressing insufficient labels of proteins, which is a major obstacle to effective protein representation learning. However, existing protein representation learning is usually pretrained on protein sequences without considering the important protein structural information.

Results
In this work, we propose a novel structure-aware protein self-supervised learning method to effectively capture structural information of proteins. In particular, a graph neural network model is pretrained to preserve the protein structural information with self-supervised tasks from a pairwise residue distance perspective and a dihedral angle perspective, respectively. Furthermore, we propose to leverage the available protein language model pretrained on protein sequences to enhance the self-supervised learning. Specifically, we identify the relation between the sequential information in the protein language model and the structural information in the specially designed graph neural network model via a novel pseudo bi-level optimization scheme. We conduct experiments on three downstream tasks: the binary classification into membrane/non-membrane proteins, the location classification into 10 cellular compartments, and the enzyme-catalyzed reaction classification into 384 EC numbers, and these experiments verify the effectiveness of our proposed method.",,,,Unverified,2025-01-30 05:04:31+00:00,"Canada,Canada,United States of America,China,United States of America",,,,,,,,,
Yiye Qingzhou,,,,,2023-04-01,"36氪首发 | 专注企业级大模型落地，「识因智能」完成数千万元首轮融资
",https://36kr.com/p/3062982772761984,,,,540000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Vicuna-13B v0,Language,"Large Model Systems Organization,University of California (UC) Berkeley","Academia,Academia","Wei-Lin Chiang, Zhuohan Li, Zi Lin, Ying Sheng, Zhanghao Wu, Hao Zhang, Lianmin Zheng, Siyuan Zhuang, Yonghao Zhuang, Joseph E. Gonzalez, Ion Stoica, Eric P. Xing",2023-03-30,Vicuna: An Open-Source Chatbot Impressing GPT-4 with 90%* ChatGPT Quality,"https://lmsys.org/blog/2023-03-30-vicuna/

https://github.com/lm-sys/FastChat/blob/main/docs/vicuna_weights_version.md",,,,13000000000.0,,,1.61616e+19,,"Fine-tuning cost $300, so training compute is ~entirely based on underlying Llama-13B weights, which took 7.8e22 FLOPs

6*13*10^9*207200000 = 1.61616e+19
unsure about amount of epochs ->  lower bound, Likely confidence",Vicuna ShareGPT Dataset,,207200000.0,"70K conversations from ShareGPT.com, a website where users can share their ChatGPT conversations.

they later published a paper with more data (125k convesations = 370M tokens) https://arxiv.org/abs/2306.05685

70*370/125 = 207.2M",,,,NVIDIA A100,8.0,,"We introduce Vicuna-13B, an open-source chatbot trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT. Preliminary evaluation using GPT-4 as a judge shows Vicuna-13B achieves more than 90%* quality of OpenAI ChatGPT and Google Bard while outperforming other models like LLaMA and Stanford Alpaca in more than 90%* of cases. The cost of training Vicuna-13B is around $300. The code and weights, along with an online demo, are publicly available for non-commercial use.",,Open weights (restricted use),,Likely,2025-01-10 16:31:02+00:00,"United States of America,United States of America",LLaMA-13B,,,,,,,,
BloombergGPT,Language,"Bloomberg,Johns Hopkins University","Industry,Academia","Shijie Wu, Ozan Irsoy, Steven Lu, Vadim Dabravolski, Mark Dredze, Sebastian Gehrmann, Prabhanjan Kambadur, David Rosenberg, Gideon Mann",2023-03-30,BloombergGPT: A Large Language Model for Finance,https://arxiv.org/abs/2303.17564,556.0,SOTA improvement,"""We validate BloombergGPT on standard LLM benchmarks, open financial benchmarks, and a suite of internal benchmarks that most accurately reflect our intended usage. Our mixed dataset training leads to a model that outperforms existing models on financial tasks by significant margins without sacrificing performance on general LLM benchmarks.""",50558868480.0,,2.36e+23,,,"2.36e23 per Table 4

(using our usual hardware method, 512 A100s over 53 days would be 512 * 312 teraFLOP/s * 53 * 24 * 3600 * 0.3 = 2.19e23)",,"""To train BloombergGPT, we construct “FinPile”, a comprehensive dataset consisting of a range of English financial documents including news, filings, press releases, web-scraped financial documents, and social media drawn from the Bloomberg archives. These documents have been acquired through our business process over the past two decades. We augment FinPile with public data widely used to train LLMs. The result is a training corpus that is roughly half domain-specific text and half general-purpose text.""",532000000000.0,"708.9 billion tokens. At 0.75 English words per token, that's 532B words",0.8,1270.0,"""~53 days""",NVIDIA A100,512.0,Self-supervised learning,"The use of NLP in the realm of financial technology is broad and complex, with applications ranging from sentiment analysis and named entity recognition to question answering. Large Language Models (LLMs) have been shown to be effective on a variety of tasks; however, no LLM specialized for the financial domain has been reported in literature. In this work, we present BloombergGPT, a 50 billion parameter language model that is trained on a wide range of financial data. We construct a 363 billion token dataset based on Bloomberg's extensive data sources, perhaps the largest domain-specific dataset yet, augmented with 345 billion tokens from general purpose datasets. We validate BloombergGPT on standard LLM benchmarks, open financial benchmarks, and a suite of internal benchmarks that most accurately reflect our intended usage. Our mixed dataset training leads to a model that outperforms existing models on financial tasks by significant margins without sacrificing performance on general LLM benchmarks. Additionally, we explain our modeling choices, training process, and evaluation methodology. We release Training Chronicles (Appendix C) detailing our experience in training BloombergGPT.",,Unreleased,0.327,Confident,2025-02-14 21:27:05+00:00,"United States of America,United States of America",,,,,,,4200000.0,"""in the first 7,200 steps, we use a batch size of 1,024 (2.1M tokens), then switch to a batch size of 2,048 (4.2M tokens) for the remainder of training.""",True
Vicuna-7B v0,Language,"Large Model Systems Organization,University of California (UC) Berkeley","Academia,Academia","Wei-Lin Chiang, Zhuohan Li, Zi Lin, Ying Sheng, Zhanghao Wu, Hao Zhang, Lianmin Zheng, Siyuan Zhuang, Yonghao Zhuang, Joseph E. Gonzalez, Ion Stoica, Eric P. Xing",2023-03-30,Vicuna: An Open-Source Chatbot Impressing GPT-4 with 90%* ChatGPT Quality,"https://lmsys.org/blog/2023-03-30-vicuna/

https://github.com/lm-sys/FastChat/blob/main/docs/vicuna_weights_version.md",,,,7000000000.0,,,8.7024e+18,,"Fine-tuning cost $140, so unlikely to have contributed significantly. Model is fine-tuned from Llama-7B, which used 4.02e+22

6*7*10^9*207200000 = 8.7024e+18
unsure about amount of epochs -> lower bound, Likely confidence",Vicuna ShareGPT Dataset,,207200000.0,"70K conversations from ShareGPT.com, a website where users can share their ChatGPT conversations.

they later published a paper with more data (125k convesations = 370M tokens) https://arxiv.org/abs/2306.05685

70*370/125 = 207.2M",,,,NVIDIA A100,8.0,,,,Open weights (restricted use),,Likely,2024-11-24 22:27:27+00:00,"United States of America,United States of America",LLaMA-7B,,,,,,,,
VideoMAE V2,Video,"Nanjing University,Shenzhen Institute of Advanced Technology,Shanghai AI Lab","Academia,Academia","Limin Wang, Bingkun Huang, Zhiyu Zhao, Zhan Tong, Yinan He, Yi Wang, Yali Wang, Yu Qiao",2023-03-29,VideoMAE V2: Scaling Video Masked Autoencoders with Dual Masking,https://arxiv.org/abs/2303.16727v2,222.0,SOTA improvement,"""Finally, we successfully train a video ViT model with a
billion parameters, which achieves a new state-of-the-art
performance on the datasets of Kinetics (90.0% on K400
and 89.9% on K600) and Something-Something (68.7% on
V1 and 77.0% on V2).""",1000000000.0,1B,9.7e+21,,,"finetuned on ViT-g (smaller than ViT-G with 1B params)

""It takes more than two weeks to pre-train a ViT-g model with VideoMAE
on 64 A100 GPUs""

64 * 312 trillion * 2 * 7 * 24 * 3600 * 0.4 (utilization assumption) = 9.7e21",,"""To well support the billion-level ViT model pretraining, we build two large-scale video datasets for our proposed progressive training. For self-supervised pre-training of VideoMAE V2, we build a million-level unlabeled video
dataset by collecting clips from multiple resources such
as Movie, Youtube, Instagram, General Webs, and manual recordings from scripts, and the dataset is termed as
UnlabeledHybrid""",,"1.35 million video clips. Not sure about average length (34 seconds, but that's only reported for Instagram portion).

""In total, there are around 1.35M clips in our mixed dataset and
this is the largest dataset ever used for video masked autoencoding.",1200.0,336.0,2 weeks,NVIDIA A100 SXM4 80 GB,64.0,Self-supervised learning,"Scale is the primary factor for building a powerful foundation model that could well generalize to a variety of downstream tasks. However, it is still challenging to train video foundation models with billions of parameters. This paper shows that video masked autoencoder (VideoMAE) is a scalable and general self-supervised pre-trainer for building video foundation models. We scale the VideoMAE in both model and data with a core design. Specifically, we present a dual masking strategy for efficient pre-training, with an encoder operating on a subset of video tokens and a decoder processing another subset of video tokens. Although VideoMAE is very efficient due to high masking ratio in encoder, masking decoder can still further reduce the overall computational cost. This enables the efficient pre-training of billion-level models in video. We also use a progressive training paradigm that involves an initial pre-training on a diverse multi-sourced unlabeled dataset, followed by a post-pre-training on a mixed labeled dataset. Finally, we successfully train a video ViT model with a billion parameters, which achieves a new state-of-the-art performance on the datasets of Kinetics (90.0% on K400 and 89.9% on K600) and Something-Something (68.7% on V1 and 77.0% on V2). In addition, we extensively verify the pre-trained video ViT models on a variety of downstream tasks, demonstrating its effectiveness as a general video representation learner. The code and model is available at \url{this https URL}.",,Open weights (unrestricted),,Confident,2025-02-14 21:27:18+00:00,"China,China,China",ViT-G/14,9.7e+21,"finetuned on ViT-g (smaller than ViT-G with 1B params)

""It takes more than two weeks to pre-train a ViT-g model with VideoMAE
on 64 A100 GPUs""

64 * 312 trillion * 2 * 7 * 24 * 3600 * 0.4 (utilization assumption) = 9.7e21
",,,,,,
ERNIE-ViLG 2.0,Image generation,"Baidu,Wuhan University of Science and Technology","Industry,Academia","Zhida Feng, Zhenyu Zhang, Xintong Yu, Yewei Fang, Lanxin Li, Xuyi Chen, Yuxiang Lu, Jiaxiang Liu, Weichong Yin, Shikun Feng, Yu Sun, Li Chen, Hao Tian, Hua Wu, Haifeng Wang",2023-03-28,ERNIE-ViLG 2.0: Improving Text-to-Image Diffusion Model with Knowledge-Enhanced Mixture-of-Denoising-Experts,https://arxiv.org/abs/2210.15257,,,,24000000000.0,"""we train ERNIEViLG 2.0 and scale up the model size to 24B parameters.""",4.658135e+22,,,312000000000000*432*3600*320*0.3 = 4.658135e+22,"LAION-400M,Unspecified unreleased",,170000000.0,"""The training data consists of 170M image-text pairs, including publicly available English datasets like LAION [28] and a series of internal Chinese datasets. The image autoencoder is trained on the same set. For images with English captions, we translate them with Baidu Translate API3 to get the Chinese version.""",,432.0,"""We train ERNIE-ViLG 2.0 on 320 Tesla A100 GPUs for 18 days.""

18*24=432",NVIDIA A100,320.0,,"Recent progress in diffusion models has revolutionized the popular technology of text-to-image generation. While existing approaches could produce photorealistic high-resolution images with text conditions, there are still several open problems to be solved, which limits the further improvement of image fidelity and text relevancy. In this paper, we propose ERNIE-ViLG 2.0, a large-scale Chinese text-to-image diffusion model, to progressively upgrade the quality of generated images by: (1) incorporating fine-grained textual and visual knowledge of key elements in the scene, and (2) utilizing different denoising experts at different denoising stages. With the proposed mechanisms, ERNIE-ViLG 2.0 not only achieves a new state-of-the-art on MS-COCO with zero-shot FID score of 6.75, but also significantly outperforms recent models in terms of image fidelity and image-text alignment, with side-by-side human evaluation on the bilingual prompt set ViLG-300.",,API access,,Confident,2024-11-11 00:09:03+00:00,"China,China",,,,,,,,,
SigLIP,Vision,Google DeepMind,Industry,"Xiaohua Zhai, Basil Mustafa, Alexander Kolesnikov, Lucas Beyer",2023-03-27,Sigmoid Loss for Language Image Pre-Training,https://arxiv.org/abs/2303.15343,,,,400000000.0,Table 3,4.9467301e+21,,,"Operation Counting: 
6ND = 6*400*10^6*6705000000000 = 1.6092e+22

Hardware:
275000000000000*32*120*3600*0.4 = 1.52064e+21

geometric mean (1.6092e+22, 1.52064e+21) = 4.9467301e+21",WebLI,"""We pre-train SigLIP models on the WebLI dataset""",6705000000000.0,"""B/16 ViT for image embeddings and B-sized transformer for text embeddings. The input images are resized to 224×224 resolution.""

""SigLIP performs best at batch size 32 k [image-text pairs]"" 

729 patches (table 3)

""a maximum of 16 text tokens are kept""

9B examples * (16 text tokens + 729 image tokens) = 6.705e+12 total training tokens",,120.0,5 days = 120 hours,Google TPU v4,32.0,,"We propose a simple pairwise Sigmoid loss for Language-Image Pre-training (SigLIP). Unlike standard contrastive learning with softmax normalization, the sigmoid loss operates solely on image-text pairs and does not require a global view of the pairwise similarities for normalization. The sigmoid loss simultaneously allows further scaling up the batch size, while also performing better at smaller batch sizes. Combined with Locked-image Tuning, with only four TPUv4 chips, we train a SigLiT model that achieves 84.5% ImageNet zero-shot accuracy in two days. The disentanglement of the batch size from the loss further allows us to study the impact of examples vs pairs and negative to positive ratio. Finally, we push the batch size to the extreme, up to one million, and find that the benefits of growing batch size quickly diminish, with a more reasonable batch size of 32k being sufficient. We release our models at this https URL and hope our research motivates further explorations in improving the quality and efficiency of language-image pre-training.",,Open weights (unrestricted),,Confident,2025-01-03 17:38:06+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
SigLiT,Vision,Google DeepMind,Industry,"Xiaohua Zhai, Basil Mustafa, Alexander Kolesnikov, Lucas Beyer",2023-03-27,Sigmoid Loss for Language Image Pre-Training,https://arxiv.org/abs/2303.15343,,,,,,7.6032e+19,,,275000000000000*48*4*3600*0.4 = 7.6032e+19,,"""With a ViT-g/14 [58] model as the vision tower and a Large text tower, we can train at 20 k [image-text pairs] batch size on four chips for 107 k steps in under two days.""",,,,48.0,2 days = 48 hours,Google TPU v4,4.0,,"We propose a simple pairwise Sigmoid loss for Language-Image Pre-training (SigLIP). Unlike standard contrastive learning with softmax normalization, the sigmoid loss operates solely on image-text pairs and does not require a global view of the pairwise similarities for normalization. The sigmoid loss simultaneously allows further scaling up the batch size, while also performing better at smaller batch sizes. Combined with Locked-image Tuning, with only four TPUv4 chips, we train a SigLiT model that achieves 84.5% ImageNet zero-shot accuracy in two days. The disentanglement of the batch size from the loss further allows us to study the impact of examples vs pairs and negative to positive ratio. Finally, we push the batch size to the extreme, up to one million, and find that the benefits of growing batch size quickly diminish, with a more reasonable batch size of 32k being sufficient. We release our models at this https URL and hope our research motivates further explorations in improving the quality and efficiency of language-image pre-training.",,Open weights (unrestricted),,Confident,2024-11-07 03:18:35+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
EVA-CLIP (EVA-02-CLIP-E/14+)																											,Vision,"Beijing Academy of Artificial Intelligence / BAAI,Huazhong University of Science and Technology","Academia,Academia","Quan Sun, Yuxin Fang, Ledell Wu, Xinlong Wang, Yue Cao",2023-03-27,EVA-CLIP: Improved Training Techniques for CLIP at Scale,https://arxiv.org/abs/2303.15389	,,,,5000000000.0,"5b (table 1(a))

image parameters: 4.4B 
text parameters: 695M",3.456e+22,,,6*5*10^9*2304000000000/2 = 3.456e+22,LAION-2B,,2304000000000.0,"from table 1(a):
9B samples seen 
image size 224^2
batch size: 144k samples 

9*10^9*(224/14)^2 = 2.304e+12 image tokens 
50% of patches are random;y masked (to account for it when estimating compute)",,,,NVIDIA RTX A1000,144.0,,"Contrastive language-image pre-training, CLIP for short, has gained increasing attention for its potential in various scenarios. In this paper, we propose EVA-CLIP, a series of models that significantly improve the efficiency and effectiveness of CLIP training. Our approach incorporates new techniques for representation learning, optimization, and augmentation, enabling EVA-CLIP to achieve superior performance compared to previous CLIP models with the same number of parameters but significantly smaller training costs. Notably, our largest 5.0B-parameter EVA-02-CLIP-E/14+ with only 9 billion seen samples achieves 82.0 zero-shot top-1 accuracy on ImageNet-1K val. A smaller EVA-02-CLIP-L/14+ with only 430 million parameters and 6 billion seen samples achieves 80.4 zero-shot top-1 accuracy on ImageNet-1K val. To facilitate open access and open research, we release the complete suite of EVA-CLIP to the community at this https URL.",,Open weights (unrestricted),,Confident,2024-12-16 17:37:27+00:00,"China,China",,,,,,,144000.0,,
SigLIP,Vision,Google DeepMind,Industry,"Xiaohua Zhai, Basil Mustafa, Alexander Kolesnikov, Lucas Beyer",2023-03-27,Sigmoid Loss for Language Image Pre-Training,https://arxiv.org/abs/2303.15343,,,,6300000000.0,"Estimated from compute estimate / 6 / approximate datapoint count
1.14e21/6/30000000000 = 6.3B params",1.140000000001e+21,,,"From Table 1: 5 days of training on 32 TPUv4. Assuming 30% utilization, 16-bit precision. ",WebLI,"""We pre-train SigLIP models on the WebLI dataset [13], using only English image and text pairs.""",30000000000.0,"From ""Pali: A jointly-scaled multilingual language-image model"", ""To train PaLI-17B, we build a new high-volume image-and-language dataset WebLI, which consists of 10 billion images and tens of billions of image-text pairs.""",,120.0,Table 1: 5 days,Google TPU v4,32.0,,"We propose a simple pairwise Sigmoid loss for Language-Image Pre-training (SigLIP). Unlike standard contrastive learning with softmax normalization, the sigmoid loss operates solely on image-text pairs and does not require a global view of the pairwise similarities for normalization. The sigmoid loss simultaneously allows further scaling up the batch size, while also performing better at smaller batch sizes. Combined with Locked-image Tuning, with only four TPUv4 chips, we train a SigLiT model that achieves 84.5% ImageNet zero-shot accuracy in two days. The disentanglement of the batch size from the loss further allows us to study the impact of examples vs pairs and negative to positive ratio. Finally, we push the batch size to the extreme, up to one million, and find that the benefits of growing batch size quickly diminish, with a more reasonable batch size of 32k being sufficient. We release our models at this https URL and hope our research motivates further explorations in improving the quality and efficiency of language-image pre-training.",,,,Likely,2025-02-18 19:21:03+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,32000.0,From Table 1: SigLit and SigLIP results,
CPM-Bee,,"Tsinghua University,Beijing Academy of Artificial Intelligence / BAAI,ModelBest,OpenBMB (Open Lab for Big Model Base)","Academia,Academia,Industry",,2023-03-24,,https://github.com/OpenBMB/CPM-Bee,,,,10000000000.0,"""CPM-Bee 10B large model training will launch on October 13, 2022, with monthly model releases.""",6.012e+21,,,6*10e9*1.002e11 = 6.012e21,,,100200000000.0,"Planned to use 600GB of clean data.

600GB * 167M tokens/GB = 1.002e+11 tokens

https://github.com/OpenBMB/CPM-Live/blob/master/plans/CPM-Bee%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92%E4%B9%A6.md",,,,,,,,,,,Unverified,2025-02-14 21:27:28+00:00,"China,China,China,China",,,,,,,,,
Lightweight Fine-tuning a Pretrained Protein Language Model for Protein Secondary,Biology,Henan University,Academia,"Wei Yang, Chun Liu, Zheng Li",2023-03-23,Lightweight Fine-tuning a Pretrained Protein Language Model for Protein Secondary Structure Prediction,https://www.biorxiv.org/content/10.1101/2023.03.22.530066v1.abstract,,,,,,6.050000000000008e+18,,,"1. Hardware setup: 1x NVIDIA GeForce RTX 3090 Ti (1.60 x 10^14 FP16 FLOP/s)

2. Training duration: Directly provided - 2,200 seconds/epoch × 43 epochs = 94,600 seconds

3. Utilization rate: 40%

4. Final calculation: 1.60 × 10^14 FLOP/s × 94,600 seconds × 0.4 = 6.05 × 10^18 FLOPs",,,10000000.999999996,"25,792 training chains × 400 residues = 10,316,800 tokens ≈ 1.0e7",,,,,,,"Pretrained large-scale protein language models, such as ESM-1b and ProtTrans, are becoming the fundamental infrastructure for various protein-related biological modeling tasks. Existing works use mainly pretrained protein language models in feature extraction. However, the knowledge contained in the embedding features directly extracted from a pretrained model is task-agnostic. To obtain task-specific feature representations, a reasonable approach is to fine-tune a pretrained model based on labeled datasets from downstream tasks. To this end, we investigate the fine-tuning of a given pretrained protein language model for protein secondary structure prediction tasks. Specifically, we propose a novel end-to-end protein secondary structure prediction framework involving the lightweight fine-tuning of a pretrained model. The framework first introduces a few new parameters for each transformer block in the pretrained model, then updates only the newly introduced parameters, and then keeps the original pretrained parameters fixed during training. Extensive experiments on seven test sets, namely, CASP12, CASP13, CASP14, CB433, CB634, TEST2016, and TEST2018, show that the proposed framework outperforms existing predictors and achieves new state-of-the-art prediction performance. Furthermore, we also experimentally demonstrate that lightweight fine-tuning significantly outperforms full model fine-tuning and feature extraction in enabling models to predict secondary structures. Further analysis indicates that only a few top transformer blocks need to introduce new parameters, while skipping many lower transformer blocks has little impact on the prediction accuracy of secondary structures.",,,,Unverified,2025-02-14 21:27:38+00:00,China,,,,,,,,,
Sparse Wide GPT-3 Small,Language,Cerebras Systems,Industry,"Shreyas Saxena, Vithursan Thangarasa, Abhay Gupta, Sean Lie",2023-03-21,Sparse Iso-FLOP Transformations for Maximizing Training Efficiency,https://arxiv.org/abs/2303.11525,3.0,,,1300000000.0,,8.84e+19,,,,,,,,110.0,,,,,,"Recent research has focused on weight sparsity in deep neural network training to reduce FLOPs, aiming for improved efficiency (test accuracy w.r.t training FLOPs). However, sparse weight training often compromises accuracy, requiring extended training schedules to attain the accuracy of dense models. In contrast, our approach, Sparse Iso-FLOP Transformations (Sparse-IFT), uses sparsity to improve accuracy while maintaining dense model FLOPs. Using a single hyperparameter (i.e., the sparsity level), Sparse-IFTs efficiently replace dense layers, expanding the search space for optimal sparse masks. In addition, dynamic sparse training (DST) with Sparse-IFT models effectively navigate this larger sparse mask-weight space, which is evidenced by a spectral analysis using Ramanujan graph properties. Our study reveals a robust correlation among mask topology, weights, and final performance. Notably, without adjusting any training hyperparameters, replacing dense layers with Sparse-IFT yields significant improvements, such as a +3.5% boost for ResNet-18 on ImageNet and +0.9% for GPT-3 Small on the Open LLM leaderboard. To the best of our knowledge, this is the first work to demonstrate the use of sparsity for improving the accuracy of dense models through a set of simple-to-use sparse transformations. Code is available at: this https URL.",Sparse Wide GPT-3 Small,Unreleased,,,2024-11-01 14:05:19+00:00,Multinational,,,,,,,,,
LightOn Mini,Language,LightOn,Industry,,2023-03-21,LightOn's Large Language Model of 40 billion parameters: MINI,https://www.lighton.ai/blog/lighton-s-blog-4/lighton-s-large-language-model-of-40-billion-parameters-mini-19,,,,40000000000.0,"""Boasting an impressive 40 billion parameters, Mini is a formidable addition to the growing array of language models available in the market today.""",2.4e+23,,,6ND aproximation: 6*40B*1T = 2.4e23,,"""The amount of data in Mini corpus is 1 trillion tokens. We mainly used data from the public web to pre-train our model, with strong filtering, toxicity reduction, and deduplication to ensure that only high-quality data is retained.""",1000000000000.0,"""The amount of data in Mini corpus is 1 trillion tokens. We mainly used data from the public web to pre-train our model, with strong filtering, toxicity reduction, and deduplication to ensure that only high-quality data is retained.""  assuming 0.75 words per token - 750000000000.0 words",,,,,,Self-supervised learning,,,Hosted access (no API),,Confident,2025-02-14 21:27:33+00:00,France,,,,,,,,,
Firefly,Image generation,Adobe,Industry,,2023-03-21,"Adobe Unveils Firefly, a Family of new Creative Generative AI",https://news.adobe.com/news/news-details/2023/Adobe-Unveils-Firefly-a-Family-of-new-Creative-Generative-AI/default.aspx,,Significant use,"Integrated into Photoshop. Users generate >200m images within a few months of release:

https://venturebeat.com/ai/adobe-stock-creators-arent-happy-with-firefly-the-companys-commercially-safe-gen-ai-tool/

As of October 2024, users have generated 13B images since March 2023. Paid users get 100 generations per month (and can continue at a slower rate after that). Assuming an average of 100 monthly generations per user, that's around 6.7M monthly average users across 19.5 months.",,,,,,,Adobe Stock,"""The current Firefly generative AI model is trained on a dataset of licensed content, such as Adobe Stock, and public domain content where copyright has expired.""

https://www.adobe.com/products/firefly.html",,,,,,,,,"Today, Adobe (Nasdaq:ADBE) introduced Adobe Firefly, a new family of creative generative AI models, first focused on the generation of images and text effects. Adobe Firefly will bring even more precision, power, speed and ease directly into Creative Cloud, Document Cloud, Experience Cloud and Adobe Express workflows where content is created and modified. Adobe Firefly will be part of a series of new Adobe Sensei generative AI services across Adobe’s clouds.",,,,Unknown,2025-02-03 17:15:20+00:00,United States of America,,,,,,,,,
Gen-2,Video,Runway,Industry,Gen-2 authors,2023-03-20,,https://research.runwayml.com/gen2,,SOTA improvement,"Website claims SOTA improvement over Stable Diffusion and Text2Live, paper forthcoming",,,,,,,,,,,,,,,,,,,,,Unknown,2025-01-10 16:31:02+00:00,United States of America,,,,,,,,,
PanGu-Σ,Language,Huawei Noah's Ark Lab,Industry,"Xiaozhe Ren, Pingyi Zhou, Xinfan Meng, Xinjing Huang, Yadao Wang, Weichao Wang, Pengfei Li, Xiaoda Zhang, Alexander Podolskiy, Grigory Arshinov, Andrey Bout, Irina Piontkovskaya, Jiansheng Wei, Xin Jiang, Teng Su, Qun Liu, Jun Yao",2023-03-20,PanGu-Σ: Towards Trillion Parameter Language Model with Sparse Heterogeneous Computing,https://arxiv.org/abs/2303.10845,48.0,SOTA improvement,"""Our experimental findings show that PanGu-{\Sigma} provides state-of-the-art performance in zero-shot learning of various Chinese NLP downstream tasks.""",1085000000000.0,"""In this work, we present PanGu-Σ , a large language model with sparse architecture containing 1.085 trillion parameters.""",4.67e+23,,,"It has sparse architecture, so we can't use C=6ND.
""We develop PanGu-Σ model under the framework of MindSpore and train it on a cluster with only 512 Ascend 910 AI Accelerators with 329 billion tokens over 100 days.""
100 days * 512 processors * 320 teraFLOPS/processor * 33% utilization = 4.67e+23 FLOP
https://www.wolframalpha.com/input?i=100+days+*+512+*+320+terahertz+*+0.33",,"""329B tokens in more than 40 natural and programming languages""",246750000000.0,329B tokens ~= 247B words,1.836,2400.0,"We develop PanGu-Σ model under the framework of MindSpore 5
and train it on a cluster with only 512 Ascend 910 AI Accelerators [28] with 329 billion tokens over 100 days.",Huawei Ascend 910,512.0,Self-supervised learning,"The scaling of large language models has greatly improved natural language understanding, generation, and reasoning. In this work, we develop a system that trained a trillion-parameter language model on a cluster of Ascend 910 AI processors and MindSpore framework, and present the language model with 1.085T parameters named PanGu-{\Sigma}. With parameter inherent from PanGu-{\alpha}, we extend the dense Transformer model to sparse one with Random Routed Experts (RRE), and efficiently train the model over 329B tokens by using Expert Computation and Storage Separation(ECSS). This resulted in a 6.3x increase in training throughput through heterogeneous computing. Our experimental findings show that PanGu-{\Sigma} provides state-of-the-art performance in zero-shot learning of various Chinese NLP downstream tasks. Moreover, it demonstrates strong abilities when fine-tuned in application data of open-domain dialogue, question answering, machine translation and code generation.",,Unreleased,,Confident,2025-02-27 15:37:56+00:00,China,,,,,,,524288.0,"""We train PanGu-Σ with global batch size of 512 with sequence length of 1024 for each sample""",
GPT-4,"Multimodal,Language,Vision,Image generation",OpenAI,Industry,"OpenAI, Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Florencia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, Red Avila, Igor Babuschkin, Suchir Balaji, Valerie Balcom, Paul Baltescu, Haiming Bao, Mohammad Bavarian, Jeff Belgum, Irwan Bello, Jake Berdine, Gabriel Bernadett-Shapiro, Christopher Berner, Lenny Bogdonoff, Oleg Boiko, Madelaine Boyd, Anna-Luisa Brakman, Greg Brockman, Tim Brooks, Miles Brundage, Kevin Button, Trevor Cai, Rosie Campbell, Andrew Cann, Brittany Carey, Chelsea Carlson, Rory Carmichael, Brooke Chan, Che Chang, Fotis Chantzis, Derek Chen, Sully Chen, Ruby Chen, Jason Chen, Mark Chen, Ben Chess, Chester Cho, Casey Chu, Hyung Won Chung, Dave Cummings, Jeremiah Currier, Yunxing Dai, Cory Decareaux, Thomas Degry, Noah Deutsch, Damien Deville, Arka Dhar, David Dohan, Steve Dowling, Sheila Dunning, Adrien Ecoffet, Atty Eleti, Tyna Eloundou, David Farhi, Liam Fedus, Niko Felix, Simón Posada Fishman, Juston Forte, Isabella Fulford, Leo Gao, Elie Georges, Christian Gibson, Vik Goel, Tarun Gogineni, Gabriel Goh, Rapha Gontijo-Lopes, Jonathan Gordon, Morgan Grafstein, Scott Gray, Ryan Greene, Joshua Gross, Shixiang Shane Gu, Yufei Guo, Chris Hallacy, Jesse Han, Jeff Harris, Yuchen He, Mike Heaton, Johannes Heidecke, Chris Hesse, Alan Hickey, Wade Hickey, Peter Hoeschele, Brandon Houghton, Kenny Hsu, Shengli Hu, Xin Hu, Joost Huizinga, Shantanu Jain, Shawn Jain et al. (181 additional authors not shown)",2023-03-15,GPT-4 Technical Report,https://arxiv.org/abs/2303.08774,8281.0,"Highly cited,SOTA improvement,Training cost","See the paper, p.1: ""On a suite of traditional NLP benchmarks, GPT-4 outperforms both previous large language models and most state-of-the-art systems (which often have benchmark-specific training or hand-engineering).""",,,2.1e+25,,,"90% CI: 8.2E+24 to 4.4E+25

NOTE: this is a rough estimate based on public information, much less information than most other systems in the database.

Calculation and confidence intervals here: https://colab.research.google.com/drive/1O99z9b1I5O66bT78r9ScslE_nOj5irN9?usp=sharing",Unspecified unreleased,,4900000000000.0,"Speculative. Reported secondhand by online sources such as Semianalysis, but not verified by OpenAI. If total number of tokens seen was 13T, text was repeated for 2 epochs, and text was the majority of tokens, then dataset size roughly is 13T*0.75/2 = 4.9T words.

Note this examines only the text dataset, since GPT-4 was first and foremost a language model. However, the vision component had its own vision dataset, which we believe accounted for a much smaller part of the compute budget.",2.0,2280.0,(Speculative) SemiAnalysis conjectures that GPT-4 training took 90-100 days with utilization of 32-36%.,NVIDIA A100 SXM4 40 GB,25000.0,Self-supervised learning,"We report the development of GPT-4, a large-scale, multimodal model which can accept image and text inputs and produce text outputs. While less capable than humans in many real-world scenarios, GPT-4 exhibits human-level performance on various professional and academic benchmarks, including passing a simulated bar exam with a score around the top 10% of test takers. GPT-4 is a Transformer-based model pre-trained to predict the next token in a document. The post-training alignment process results in improved performance on measures of factuality and adherence to desired behavior. A core component of this project was developing infrastructure and optimization methods that behave predictably across a wide range of scales. This allowed us to accurately predict some aspects of GPT-4's performance based on models trained with no more than 1/1,000th the compute of GPT-4.",,API access,0.34,Speculative,2025-02-19 18:52:34+00:00,United States of America,,,,,,,,,True
Falcon-40B,Language,Technology Innovation Institute,Government,,2023-03-15,Abu Dhabi-based Technology Innovation Institute Introduces Falcon LLM: Foundational Large Language Model (LLM) outperforms GPT-3 with 40 Billion Parameters,https://arxiv.org/abs/2311.16867; https://www.tii.ae/news/abu-dhabi-based-technology-innovation-institute-introduces-falcon-llm-foundational-large,0.0,Historical significance,,40000000000.0,Model comes in 7B and 40B variants.,2.4e+23,,,"C = 6ND = 6 * 40B * 1000B = 2.4e+23 FLOP (assuming one epoch)

Table 1 from https://arxiv.org/pdf/2311.16867 Falcon paper

2,800 petaflop-days * 1e15 * 24 * 3600 = 2.4192e+23 FLOPs",RefinedWeb,"Falcon-40B was trained on 1,000B tokens of RefinedWeb, a high-quality filtered and deduplicated web dataset which we enhanced with curated corpora. Significant components from our curated copora were inspired by The Pile (Gao et al., 2020).",1000000000000.0,1000B tokens ~= 750B words,,1440.0,"""Falcon-40B was trained on AWS SageMaker, on 384 A100 40GB GPUs in P4d instances.""
""Training started in December 2022 and took two months.""",NVIDIA A100,384.0,,,,Open weights (unrestricted),0.3864,Confident,2025-02-14 21:27:58+00:00,United Arab Emirates,,,,,,,2359296.0,"Batch size 1152 (presumably sequences) per Table 16. Warmed up using smaller batches for first 100B tokens.

""All Falcon models are pretrained with a 2,048 sequence length""

https://arxiv.org/pdf/2311.16867.pdf
",True
LEP-AD,Biology,"King Abdullah University of Science and Technology (KAUST),Karolinska Institute","Academia,Academia","Anuj Daga, Sumeer Ahmad Khan, David Gomez Cabrero, Robert Hoehndorf, Narsis A. Kiani, Jesper Tegner",2023-03-15,LEP-AD: Language Embedding of Proteins and Attention to Drugs predicts Drug Target Interactions,https://www.biorxiv.org/content/10.1101/2023.03.14.532563v1.full.pdf,1.0,SOTA improvement,"""We report new best-in-class state-of-the-art results compared
to competing methods such as SimBoost, DeepCPI, Attention-DTA, GraphDTA,
and more using multiple datasets, including Davis, KIBA, DTC, Metz, ToxCast,
and STITCH. Finally, we find that a pre-trained model with embedding of proteins
(the LED-AD) outperforms a model using an explicit alpha-fold 3D representation of proteins (e.g., LEP-AD supervised by Alphafold)""",3007381000.0,"Uses ESM-2 3B. Table 2 gives details on the non-ESM layers. The GCN appears to have about 3.31M parameters and the linear layers should have 771k and 3.3M, respectively. So total is ~3.007B",,,,No indication of the training used here. ESM-2 3B used 3e22.,,Table 1,1244420.0,"Largest dataset appears to be STITCH, at 1244420 drug-target pairs.",,,,,,,"Predicting drug-target interactions is a tremendous challenge for drug development and lead optimization. Recent advances include training algorithms to learn drug-target interactions from data and molecular simulations. Here we utilize Evolutionary Scale Modeling (ESM-2) models to establish a Transformer protein language model for drug-target interaction predictions. Our architecture, LEPAD, combines pre-trained ESM-2 and Transformer-GCN models predicting binding affinity values. We report new best-in-class state-of-the-art results compared to competing methods such as SimBoost, DeepCPI, Attention-DTA, GraphDTA, and more using multiple datasets, including Davis, KIBA, DTC, Metz, ToxCast, and STITCH. Finally, we find that a pre-trained model with embedding of proteins (the LED-AD) outperforms a model using an explicit alpha-fold 3D representation of proteins (e.g., LEP-AD supervised by Alphafold). The LEP-AD model
scales favorably in performance with the size of training data. Code available at https://github.com/adaga06/LEP-AD",,Unreleased,,Confident,2024-10-21 15:22:55+00:00,"Saudi Arabia,Sweden",ESM2-3B,,,,,,,,
Claude,Language,Anthropic,Industry,,2023-03-14,Introducing Claude,https://www.anthropic.com/index/introducing-claude,,"Historical significance,SOTA improvement",,,,,,,,Unspecified unreleased,,,,,,,,,Reinforcement learning,"Claude is a next-generation AI assistant based on Anthropic’s research into training helpful, honest, and harmless AI systems. Accessible through chat interface and API in our developer console, Claude is capable of a wide variety of conversational and text processing tasks while maintaining a high degree of reliability and predictability.",,,,Unknown,2025-01-10 16:31:02+00:00,United States of America,,,,,,,,,True
Alpaca,Language,Stanford University,Academia,"Rohan Taori, Ishaan Gulrajani, Tianyi Zhang, Yann Dubois, Xuechen Li, Carlos Guestrin, Percy Liang, Tatsunori B. Hashimoto",2023-03-13,"Alpaca: A Strong, Replicable Instruction-Following Model",https://crfm.stanford.edu/2023/03/13/alpaca.html,,,,7000000000.0,7b,,,,,Stanford-Alpaca,"""We train the Alpaca model on 52K instruction-following demonstrations generated in the style of self-instruct using text-davinci-003""",,,,3.0,"""For our initial run, fine-tuning a 7B LLaMA model took 3 hours on 8 80GB A100s, which costs less than $100 on most cloud compute providers.""",NVIDIA A100 SXM4 80 GB,8.0,,"We introduce Alpaca 7B, a model fine-tuned from the LLaMA 7B model on 52K instruction-following demonstrations. On our preliminary evaluation of single-turn instruction following, Alpaca behaves qualitatively similarly to OpenAI’s text-davinci-003, while being surprisingly small and easy/cheap to reproduce (<600$). Checkout our code release on GitHub.
Update: The public demo is now disabled. The original goal of releasing a demo was to disseminate our research in an accessible way. We feel that we have mostly achieved this goal, and given the hosting costs and the inadequacies of our content filters, we decided to bring down the demo.",,Open weights (non-commercial),,Confident,2024-12-02 15:22:11+00:00,United States of America,LLaMA-7B,8.08704e+18,312000000000000*8*3*3600*0.3 = 8.08704e+18,,,,,,
VALL-E X,Speech,Microsoft,Industry,"Ziqiang Zhang, Long Zhou, Chengyi Wang, Sanyuan Chen, Yu Wu, Shujie Liu, Zhuo Chen, Yanqing Liu, Huaming Wang, Jinyu Li, Lei He, Sheng Zhao, Furu Wei",2023-03-07,Speak Foreign Languages with Your Own Voice: Cross-Lingual Neural Codec Language Modeling,https://arxiv.org/abs/2303.03926,131.0,,,700000000.0,"""For the cross-lingual codec language models, φMAR and φMNAR are both 12-layer Transformer decoders with an attention dimension of 1024 and the FFN dimension of 4096.""

These are two parts of the model.

According to Ben's script, that's 353M parameters, or ~700M for both
(https://github.com/bencottier/ml-parameter-count/blob/main/parameter_count.py)",1.2e+21,,,""" The batch sizes of speech and phonemes on each GPU are 1,400,000 (87.5 seconds) and 3,000, respectively. The maximum learning
rate is 5e-4 with warm-up steps of 32,000. The model is pre-trained on 32 V100 GPUs for 400K step""

6CN:
6 * (1.4M + 3000) * 353M * 400k = 1.2e21

(2 OOM larger than our estimate for VALL-E, and would take ~46 days on the V100 cluster at 30% utilization. Seems perhaps a bit high?)","LibriLight,WenetSpeech","""Our VALL-E X is trained using bilingual speech-transcription (ASR) data. The Chinese ASR data are from WenetSpeech [Zhang et al., 2022a] containing 10,000+ hours of multi-domain labeled speech. The English ASR data are from LibriLight [Kahn et al., 2020] containing about 60,000 hours of unlabeled speech, whose speech data are collected from audiobooks. We train a Kaldi4 ASR model on the labeled Librispeech [Panayotov et al., 2015] dataset to generate the pseudo transcripts for the unlabeled LibriLight speech. To train the speech recognition & translation model for S2ST, we also use additional MT and ST data. The MT data are from AI Challenger , OpenSubtitles2018 and WMT2020, which contain about 13M, 10M, and 50M sentence pairs in conversion, drama, and news domains, respectively.""",151200000000.0,"70k hours, encoded by an 8 layer EnCodec, where each layer generates 75 encodings per second of 24 kHz audio.

70k hr * 3600 sec/hr * 75/sec = 18.9B audio encodings per layer

φMAR is trained to autoregressively predict the each subsequent token in the first layer of encodings. φMNAR is trained to predict the remaining acoustic embedding layers after being shown both the first layer of the current input and the full set of embeddings from a previous sentence.

Based on this, the total number of acoustic codes used in training appears to be 8 * 18.9B = 151,200,000,000",,,,NVIDIA V100,,,"We propose a cross-lingual neural codec language model, VALL-E X, for cross-lingual speech synthesis. Specifically, we extend VALL-E and train a multi-lingual conditional codec language model to predict the acoustic token sequences of the target language speech by using both the source language speech and the target language text as prompts. VALL-E X inherits strong in-context learning capabilities and can be applied for zero-shot cross-lingual text-to-speech synthesis and zero-shot speech-to-speech translation tasks. Experimental results show that it can generate high-quality speech in the target language via just one speech utterance in the source language as a prompt while preserving the unseen speaker's voice, emotion, and acoustic environment. Moreover, VALL-E X effectively alleviates the foreign accent problems, which can be controlled by a language ID. Audio samples are available at \url{this https URL}.",,Unreleased,,Likely,2025-02-14 21:28:29+00:00,United States of America,,,,,,,,,
PaLM-E,"Robotics,Vision,Language","Google,TU Berlin","Industry,Academia","Danny Driess, Fei Xia, Mehdi S. M. Sajjadi, Corey Lynch, Aakanksha Chowdhery, Brian Ichter, Ayzaan Wahid, Jonathan Tompson, Quan Vuong, Tianhe Yu, Wenlong Huang, Yevgen Chebotar, Pierre Sermanet, Daniel Duckworth, Sergey Levine, Vincent Vanhoucke, Karol Hausman, Marc Toussaint, Klaus Greff, Andy Zeng, Igor Mordatch, Pete Florence",2023-03-06,PaLM-E: An Embodied Multimodal Language Model,https://arxiv.org/abs/2303.03378,1192.0,SOTA improvement,"""Our largest model, PaLM-E-562B with 562B parameters, in addition to being trained on robotics tasks, is a visual-language generalist
with state-of-the-art performance on OK-VQA, and retains
generalist language capabilities with increasing scale.""",562000000000.0,562B,,,,"Based on Palm-540B and ViT-22B and then trained on robotics data.

",,"""Our three robot environments (Fig. 1) include a Task and Motion Planning (TAMP) domain where a robot has to manipulate (grasp and stack) objects, a table-top pushing environment, and a mobile manipulation domain. In each domain, PaLM-E is trained on expert data from that domain. In many cases, this is a sparse amount of data per task. The TAMP tasks involve large combinatorics over possible plans, and many decision sequences are infeasible. PaLM-E has to generate plans that consist of multiple steps, with complicated decision boundaries. The multi-object tabletop pushing environment is taken from the publicly available Language-Table dataset (Lynch et al., 2022) and is challenging since it includes several objects, large cardinality of language, and complex pushing dynamics""",,,,,,,,,"Large language models excel at a wide range of complex tasks. However, enabling general inference in the real world, e.g., for robotics problems, raises the challenge of grounding. We propose embodied language models to directly incorporate real-world continuous sensor modalities into language models and thereby establish the link between words and percepts. Input to our embodied language model are multi-modal sentences that interleave visual, continuous state estimation, and textual input encodings. We train these encodings end-to-end, in conjunction with a pre-trained large language model, for multiple embodied tasks including sequential robotic manipulation planning, visual question answering, and captioning. Our evaluations show that PaLM-E, a single large embodied multimodal model, can address a variety of embodied reasoning tasks, from a variety of observation modalities, on multiple embodiments, and further, exhibits positive transfer: the model benefits from diverse joint training across internet-scale language, vision, and visual-language domains. Our largest model, PaLM-E-562B with 562B parameters, in addition to being trained on robotics tasks, is a visual-language generalist with state-of-the-art performance on OK-VQA, and retains generalist language capabilities with increasing scale.",,,,Likely,2024-11-01 14:05:18+00:00,"United States of America,Germany",PaLM (540B),,"Based on Palm-540B and ViT 22B. No compute details given.

""We scale PaLM-E up to 562B parameters, integrating the 540B PaLM (Chowdhery et al., 2022) LLM and the 22B Vision Transformer (ViT) (Dehghani et al., 2023) into, to our knowledge, the largest vision-language model currently reported.""",,,,,,True
AudioGen,Audio,"Meta AI,Hebrew University of Jerusalem","Industry,Academia","Felix Kreuk, Gabriel Synnaeve, Adam Polyak, Uriel Singer, Alexandre Défossez, Jade Copet, Devi Parikh, Yaniv Taigman, Yossi Adi",2023-03-05,AudioGen: Textually Guided Audio Generation,https://arxiv.org/abs/2209.15352,229.0,SOTA improvement,"""We propose a state-of-the-art auto-regressive audio generation model conditioned on textual descriptions or audio prompts, as evaluated with objective and subjective (human
listeners) scores.""",1000000000.0,"""We trained two sets of ALMs, one with 285M parameters (base) and the other with 1B parameters (large).""",9.5e+21,,,"""the large model was trained on 128 A100 GPUs for 200k steps (∼1 week)""
A100s are 312 teraflop/s
128 * 312 trillion * 7 * 24 * 3600 * 0.3 (utilization assumption) = 7.2e21

Text encoding uses T5-Large, which used 2.3e21 FLOP in pre-training per Flan paper: https://arxiv.org/abs/2210.11416 ","AudioSet,AudioCaps","""We use a set of several datasets: AudioSet (Gemmeke et al., 2017), BBC sound effects,
AudioCaps (Kim et al., 2019), Clotho v2 (Drossos et al., 2020), VGG-Sound (Chen et al., 2020),
FSD50K (Fonseca et al., 2021), Free To Use Sounds 2
, Sonniss Game Effects 3
, WeSoundEffects 4
,
Paramount Motion - Odeon Cinematic Sound Effects 5
. All audio files were sampled at 16kHz.
For textual descriptions we use two types of annotations. The first one is multi-label annotations,
available for the datasets: AudioSet, VGG-Sound, FSD50K, Sinniss Game Effects, WeSoundEffects, Paramount Motion - Odeon Cinematic Sound Effects.""",230400000000.0,"""Overall we are left with ∼4k hours for training data.""
mix of speech and other sounds

Training the audio autoencoder uses reconstruction loss on sequence of raw audio samples. Audio files are in 16kHz, so
16k * 4k * 3600 = 230.4B samples

Audio language modelling operates on tokens; ""each second of audio is represented by 500 tokens"". 
4k * 3600 * 500 = 7.2B tokens",,168.0,1 week,NVIDIA A100,,,"We tackle the problem of generating audio samples conditioned on descriptive text captions. In this work, we propose AaudioGen, an auto-regressive generative model that generates audio samples conditioned on text inputs. AudioGen operates on a learnt discrete audio representation. The task of text-to-audio generation poses multiple challenges. Due to the way audio travels through a medium, differentiating ``objects'' can be a difficult task (e.g., separating multiple people simultaneously speaking). This is further complicated by real-world recording conditions (e.g., background noise, reverberation, etc.). Scarce text annotations impose another constraint, limiting the ability to scale models. Finally, modeling high-fidelity audio requires encoding audio at high sampling rate, leading to extremely long sequences. To alleviate the aforementioned challenges we propose an augmentation technique that mixes different audio samples, driving the model to internally learn to separate multiple sources. We curated 10 datasets containing different types of audio and text annotations to handle the scarcity of text-audio data points. For faster inference, we explore the use of multi-stream modeling, allowing the use of shorter sequences while maintaining a similar bitrate and perceptual quality. We apply classifier-free guidance to improve adherence to text. Comparing to the evaluated baselines, AudioGen outperforms over both objective and subjective metrics. Finally, we explore the ability of the proposed method to generate audio continuation conditionally and unconditionally. Samples: this https URL",,Open weights (non-commercial),,Likely,2025-02-14 21:30:01+00:00,"United States of America,Israel",,,,,,,,,True
Flan UL2,Language,Google Brain,Industry,"Yi Tay, Mostafa Dehghani, Vinh Q. Tran, Xavier Garcia, Jason Wei, Xuezhi Wang, Hyung Won Chung, Siamak Shakeri, Dara Bahri, Tal Schuster, Huaixiu Steven Zheng, Denny Zhou, Neil Houlsby, Donald Metzler",2023-03-03,A New Open Source Flan 20B with UL2,"https://www.yitay.net/blog/flan-ul2-20b, https://arxiv.org/abs/2205.05131",253.0,,"""We compare Flan-UL2 20B with other models in the Flan series. We report relative improvements over Flan-T5-XXL. Generally, Flan-UL2 outperforms Flan-T5 XXL on all four setups with an overall decent performance lift of +3.2% relative improvement""",19500000000.0,19.5B per https://www.yitay.net/blog/flan-ul2-20b,,,,,"C4,Flan",UL2 was pre-trained on C4. Flan UL2 is then instruction-tuned using the Flan dataset,,,,,,,,,"Flan-UL2 is an encoder decoder model based on the T5 architecture. It uses the same configuration as the UL2 model released earlier last year. It was fine tuned using the ""Flan"" prompt tuning and dataset collection.",,Open weights (unrestricted),,Confident,2024-11-01 14:05:18+00:00,United States of America,UL2,,"From paper (https://arxiv.org/pdf/2205.05131.pdf), they say that ""we opt to train UL2 for another 100K steps"" with Flan instruction tuning. Not sure what the batch size is here though. In other parts of the paper they use batch sizes of 128 or 1024.

Either way, small compared to pre-training compute.",,,,,,
DiT-XL/2,Image generation,"New York University (NYU),University of California (UC) Berkeley","Academia,Academia","William Peebles, Saining Xie",2023-03-02,Scalable Diffusion Models with Transformers,https://arxiv.org/abs/2212.09748,960.0,SOTA improvement,"""our largest DiT-XL/2 models outperform all prior diffusion models on the classconditional ImageNet 512×512 and 256×256 benchmarks,
achieving a state-of-the-art FID of 2.27 on the latter.""",675000000.0,675M,6e+20,,,"~6e20, based on eyeballing Figure 9. It's between 1e11 and 1e12 gigaflop (1 gigaflop = 1e9 flop), and about 80% of the way towards 1e12 on a log scale. 10^0.8 is about 6. 

3M iterations with a batch size of 256.

""Compute. We implement all models in JAX [1] and train
them using TPU-v3 pods. DiT-XL/2, our most computeintensive model, trains at roughly 5.7 iterations/second on a
TPU v3-256 pod with a global batch size of 256""
256*123000000000000 FLOPs/s * 800000 training steps / 5.7 iterations/second * 0.3 = 1.3258105e+21",ImageNet,,,didn't state which ImageNet set,,,,Google TPU v3,,,"We explore a new class of diffusion models based on the transformer architecture. We train latent diffusion models of images, replacing the commonly-used U-Net backbone with a transformer that operates on latent patches. We analyze the scalability of our Diffusion Transformers (DiTs) through the lens of forward pass complexity as measured by Gflops. We find that DiTs with higher Gflops -- through increased transformer depth/width or increased number of input tokens -- consistently have lower FID. In addition to possessing good scalability properties, our largest DiT-XL/2 models outperform all prior diffusion models on the class-conditional ImageNet 512x512 and 256x256 benchmarks, achieving a state-of-the-art FID of 2.27 on the latter.",,,,Confident,2025-02-19 18:53:54+00:00,"United States of America,United States of America",Stable Diffusion (LDM-KL-8-G),,,,,,,,
Cohere Command,Language,Cohere,Industry,,2023-03-01,"World-class AI, at your command",https://cohere.com/models/command,,,,52000000000.0,"52B for larger version

https://aws.amazon.com/bedrock/cohere-command-embed/

Cohere Command has had a few different sizes over time and is continuously updated, but there's been a 52B version since at least March 2023: https://twitter.com/percyliang/status/1638236921754443776",,,,,,,,,,,"https://docs.cohere.com/docs/environmental-impact

2696.16 kg carbon for base-light and 6689.76 kg carbon for embed-english. Nothing listed for the large model. 

It's possible to back out GPU-hours using this calculator, though it varies by region and Cohere doesn't specify the region.

https://mlco2.github.io/impact/",Google TPU v4,,,,,API access,,Speculative,2024-09-05 18:08:31+00:00,Canada,,,,,,,,,True
Palmyra Large 20B,Language,Writer,Industry,Sam Julien / Writer,2023-03-01,,https://huggingface.co/Writer/palmyra-large,,,,20000000000.0,20B parameters for Palmyra Large. There is also a 43B version called Palmyra X according to HELM.,9.6e+22,,,"""Palmyra-Large is a 20B parameters causal decoder-only model built by Writer and trained on +800B tokens of Palmyra-Index-Data enhanced with curated corpora.""

I'm not sure if the 800B is how many tokens the model was trained on, or the size of the dataset. But the dataset linked on HuggingFace has 1T tokens, so 800B as tokens trained is more likely.

20B*800B*6 = 9.6e22",Palmyra dataset,"Writer's custom dataset, English text",750000000000.0,"1 trillion tokens, or 750B words: https://huggingface.co/datasets/Writer/palmyra-data-index",0.8,,,,,,"Palmyra Large was primarily pre-trained with English text. Note that there is still a trace amount of non-English data present within the training corpus that was accessed through CommonCrawl. A causal language modeling (CLM) objective was utilized during the process of the model's pretraining. Similar to GPT-3, Palmyra Large is a member of the same family of models that only contain a decoder. As a result, it was pre-trained utilizing the objective of self-supervised causal language modeling.",,Open weights (unrestricted),,Speculative,2025-01-06 20:28:01+00:00,United States of America,,,,,,,,,
Jurassic-2 Jumbo,Language,AI21 Labs,Industry,,2023-03-01,Announcing Jurassic-2 and Task-Specific APIs,https://www.ai21.com/blog/introducing-j2,,,,178000000000.0,Source is https://crfm.stanford.edu/helm/latest/#/leaderboard as viewed on 2023-12-06,,,,,,,,,,,,,,,"Announcing the launch of Jurassic-2, the latest generation of AI21 Studio’s foundation models, a game-changer in the field of AI, with top-tier quality and new capabilities. And that's not all - we're also releasing our task-specific APIs, with plug-and-play reading and writing capabilities that outperform competitors.",,,,,2024-09-05 18:08:31+00:00,Israel,,,,,,,,,
gpt-sw3-40b,Language,AI Sweden,,AI Sweden,2023-03-01,gpt-sw3-40b,https://huggingface.co/AI-Sweden-Models/gpt-sw3-40b,,,,40000000000.0,40B,7.68e+22,,,"aproximation 6ND = 6*320E9*40e9 = 7.68e22
""GPT-SW3 has been trained on a dataset containing 320B tokens in Swedish, Norwegian, Danish, Icelandic, English, and programming code.""","The Pile,Common Crawl,mC4,Wikipedia", https://huggingface.co/AI-Sweden-Models/gpt-sw3-40b#composition,,"320B tokens
""GPT-SW3 has been trained on a dataset containing 320B tokens in Swedish, Norwegian, Danish, Icelandic, English, and programming code.""""",,,,,,Self-supervised learning,,,Open weights (restricted use),,Confident,2025-02-14 21:30:17+00:00,Sweden,,,,,,,,,
MengziGPT-General-7B,,,,,2023-03-01,"澜舟科技通过生成式人工智能备案并重磅发布新版孟子GPT-金融模型和孟子GPT-Code模型
",https://hub.baai.ac.cn/view/33895,,,,7000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
CodeGen-Mono 16.1B,Language,Salesforce,Industry,"Erik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu, Huan Wang, Yingbo Zhou, Silvio Savarese, Caiming Xiong",2023-02-27,CodeGen: An Open Large Language Model for Code with Multi-Turn Program Synthesis,https://arxiv.org/abs/2203.13474,764.0,,"Not as good as code-davinci-001 or code-davinci-002, per Table 1",16100000000.0,16.1B parameters,,,,,"The Pile,Big Query,BigPython","""The family of CODEGEN models is trained sequentially on three datasets: The Pile, BigQuery, and BigPython.""",568200000000.0,Table 5,4.18,,,Google TPU v4,,,"""Program synthesis strives to generate a computer program as a solution to a given problem specification, expressed with input-output examples or natural language descriptions. The prevalence of large language models advances the state-of-the-art for program synthesis, though limited training resources and data impede open access to such models. To democratize this, we train and release a family of large language models up to 16.1B parameters, called CODEGEN, on natural language and programming language data, and open source the training library JAXFORMER. We show the utility of the trained model by demonstrating that it is competitive with the previous state-of-the-art on zero-shot Python code generation on HumanEval. We further investigate the multi-step paradigm for program synthesis, where a single program is factorized into multiple prompts specifying subproblems. To this end, we construct an open benchmark, Multi-Turn Programming Benchmark (MTPB), consisting of 115 diverse problem sets that are factorized into multi-turn prompts. Our analysis on MTPB shows that the same intent provided to CODEGEN in multi-turn fashion significantly improves program synthesis over that provided as a single turn. We make the training library JAXFORMER and model checkpoints available as open source contribution: this https URL.""",,Open weights (unrestricted),,Likely,2024-11-01 14:05:18+00:00,United States of America,,,,,,,,,
MsPBRsP,Biology,Zhengzhou University,Academia,"Yuguang Li,  Shuai Lu, Xiaofei Nan, Shoutao Zhang, Qinglei Zhou",2023-02-27,MsPBRsP: Multi-scale Protein Binding Residues Prediction Using Language Model,https://www.biorxiv.org/content/10.1101/2023.02.26.528265v1.abstract,,,,,,2.700000000000003e+18,,,"1. Hardware setup: 1x NVIDIA RTX2080 GPU (2.01e+13 FP16 FLOP/s)

2. Training duration: Estimated 93.75 hours (337,500 seconds)
   Calculation: 5 folds × 5 runs × 30 epochs × 7.5 minutes/epoch = 93.75 hours

3. Utilization rate: 40%

4. Final calculation:
   2.01e+13 FLOP/s × 1 GPU × 337,500 seconds × 0.4 = 2.7e+18 FLOPs",,,1860000.9999999984,"Total Residues: 2,068,793
Training Set (90%): 0.9 × 2,068,793 = 1,861,913 residues
Final Data Amount: 1.86M residues",,,,,,,"Accurate prediction of protein binding residues (PBRs) from sequence is important for the understanding of cellular activity and helpful for the design of novel drug. However, experimental methods are time-consuming and expensive. In recent years, a lot of computational predictors based on machine learning and deep learning models are proposed to reduce such consumption. But those methods often use MSA tools such as PSI-BLAST or NetSurfP to generate some statistical features and enter them into predictive models as necessary supplementary input. The input generation process normally takes long time, and there is no standard to specify which and how many statistic results should be provided to a prediction model. In addition, prediction of PBRs relies on residue local context, but the most appropriate scale is undetermined. Most works pre-selected certain residue features as input and a scale size based on expertise for certain type of PBRs. In this study, we propose a general tool-free end-to-end framework that can be applied to all types of PBRs, Multi-scale Protein Binding Residues Prediction using language model (MsPBRsP). We adopt a pre-trained language model ProtTrans to save the large consumption caused by MSA tools, and use protein sequence alone as input to our model. To ease scale size uncertainty, we construct multi-size windows in attention layer and multi-size kernels in convolutional layer. We test our framework on various benchmark datasets including PBRs from protein-protein, protein-nucleotide, protein-small ligand, heterodimer, homodimer and antibody-antigen interactions. Compared with existing state-of-the-art methods, MsPBRsP achieves superior performance with less running time and higher prediction rates on every PBRs prediction task. Specifically, we boost F1 score by 27.1% and AUPRC score by 7.6% on NSP448 dataset and decrease running time from over 10 minutes to under 0.1s on average. The source code and datasets are available at https://github.com/biolushuai/MsPBRsP-for-multiple-PBRs-prediction.",,,,Unverified,2025-02-14 21:30:50+00:00,China,,,,,,,,,
LLaMA-65B,Language,Meta AI,Industry,"Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timothée Lacroix, Baptiste Rozière, Naman Goyal, Eric Hambro, Faisal Azhar, Aurelien Rodriguez, Armand Joulin, Edouard Grave, Guillaume Lample",2023-02-24,LLaMA: Open and Efficient Foundation Language Models,https://arxiv.org/abs/2302.13971,8872.0,"Historical significance,Highly cited",Widely-used foundation model that has been adapted for others such as Alpaca.,65200000000.0,"Model card, table 1: https://github.com/facebookresearch/llama/blob/53011c3d7946dadb8274a4c5c7586ab54edf792d/MODEL_CARD.md",5.5e+23,,,"1.4e12 tokens * 6.52e10 parameters * 6 FLOP/token/parameter = 5.5e23 FLOP

Compared to 2048 A100 GPUs each with 311.84 TFLOPS maximum performance for 21 days, this implies 47% utilization.
https://www.wolframalpha.com/input?i=5.5*10%5E23+FLOP+%2F+%282048+*+311.84+teraFLOPS+*+21+days%29","CCNet,GitHub,Wikipedia,books,arXiv,Stack Exchange","The model was trained using the following source of data: CCNet [67%], C4 [15%], GitHub [4.5%], Wikipedia [4.5%], Books [4.5%], ArXiv [2.5%], Stack Exchange[2%]. The Wikipedia and Books domains include data in the following languages: bg, ca, cs, da, de, en, es, fr, hr, hu, it, nl, pl, pt, ro, ru, sl, sr, sv, uk. See the paper for more details about the training set and corresponding preprocessing.",1340000000000.0,"Table 1 indicates that 1.4T tokens involved sampling sub-datasets at more or less than one epoch. Correcting for this:

(1.1 epoch * 3.3TB) + (1.06 epoch * 0.783TB) + ... = 1.4T tokens
5.24 epoch-TBs = 1.4T tokens
5.24 epoch-TB * 1000 GB/TB * 200M token/GB = 1.4T tokens
1.05T epoch*token = 1.4T tokens
1 epoch = 1.34T tokens
",1.09,500.0,"""When training a 65B-parameter model, our code processes around 380 tokens/sec/GPU on 2048 A100 GPU with 80GB of RAM. This means that training over our dataset containing 1.4T tokens takes approximately 21 days.""",NVIDIA A100,2048.0,Supervised,"We introduce LLaMA, a collection of foundation language models ranging from 7B to 65B parameters. We train our models on trillions of tokens, and show that it is possible to train state-of-the-art models using publicly available datasets exclusively, without resorting to proprietary and inaccessible datasets. In particular, LLaMA-13B outperforms GPT-3 (175B) on most benchmarks, and LLaMA-65B is competitive with the best models, Chinchilla-70B and PaLM-540B. We release all our models to the research community.",LLaMA-65B,Open weights (non-commercial),0.4746,Confident,2025-02-14 21:38:37+00:00,United States of America,,,,,,,4000000.0,,True
Hyena-3-slim,Language,"Stanford University,University of Montreal / Université de Montréal,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms)","Academia,Academia,Academia","Michael Poli, Stefano Massaroli, Eric Nguyen, Daniel Y. Fu, Tri Dao, Stephen Baccus, Yoshua Bengio, Stefano Ermon, Christopher Ré",2023-02-21,Hyena Hierarchy: Towards Larger Convolutional Language Models,https://arxiv.org/abs/2302.10866,212.0,,,125000000.0,,,,,,"WikiText-103,The Pile","""Next, we verify the scaling of Hyena on autoregressive language modeling. We evaluate the perplexity on
WikiText103 (Table 4.3) and The Pile (Table 4.4).""",,,,,,,,,"Recent advances in deep learning have relied heavily on the use of large Transformers due to their ability to learn at scale. However, the core building block of Transformers, the attention operator, exhibits quadratic cost in sequence length, limiting the amount of context accessible. Existing subquadratic methods based on low-rank and sparse approximations need to be combined with dense attention layers to match Transformers, indicating a gap in capability. In this work, we propose Hyena, a subquadratic drop-in replacement for attention constructed by interleaving implicitly parametrized long convolutions and data-controlled gating. In recall and reasoning tasks on sequences of thousands to hundreds of thousands of tokens, Hyena improves accuracy by more than 50 points over operators relying on state-spaces and other implicit and explicit methods, matching attention-based models. We set a new state-of-the-art for dense-attention-free architectures on language modeling in standard datasets (WikiText103 and The Pile), reaching Transformer quality with a 20% reduction in training compute required at sequence length 2K. Hyena operators are twice as fast as highly optimized attention at sequence length 8K, and 100x faster at sequence length 64K.",Hyena-3-slim,Unreleased,,,2024-11-01 14:05:17+00:00,"United States of America,Canada,Canada",,,,,,,,,
E-SPA,Language,"University of Oxford,DeepMind","Academia,Industry","Bobby He, James Martens, Guodong Zhang, Aleksandar Botev, Andrew Brock, Samuel L Smith, Yee Whye Teh",2023-02-20,Deep Transformers without Shortcuts: Modifying Self-attention for Faithful Signal Propagation,https://arxiv.org/abs/2302.10322,25.0,,,243000000.00000003,,,,,,WikiText-103,,,,,,,,,,"Skip connections and normalisation layers form two standard architectural components that are ubiquitous for the training of Deep Neural Networks (DNNs), but whose precise roles are poorly understood. Recent approaches such as Deep Kernel Shaping have made progress towards reducing our reliance on them, using insights from wide NN kernel theory to improve signal propagation in vanilla DNNs (which we define as networks without skips or normalisation). However, these approaches are incompatible with the self-attention layers present in transformers, whose kernels are intrinsically more complicated to analyse and control. And so the question remains: is it possible to train deep vanilla transformers? We answer this question in the affirmative by designing several approaches that use combinations of parameter initialisations, bias matrices and location-dependent rescaling to achieve faithful signal propagation in vanilla transformers. Our methods address various intricacies specific to signal propagation in transformers, including the interaction with positional encoding and causal masking. In experiments on WikiText-103 and C4, our approaches enable deep transformers without normalisation to train at speeds matching their standard counterparts, and deep vanilla transformers to reach the same performance as standard ones after about 5 times more iterations.",E-SPA,Unreleased,,,2024-11-01 14:05:19+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Anthropic LM 175B,Language,Anthropic,Industry,"Deep Ganguli, Amanda Askell, Nicholas Schiefer, Thomas I. Liao, Kamilė Lukošiūtė, Anna Chen, Anna Goldie, Azalia Mirhoseini, Catherine Olsson, Danny Hernandez, Dawn Drain, Dustin Li, Eli Tran-Johnson, Ethan Perez, Jackson Kernion, Jamie Kerr, Jared Mueller, Joshua Landau, Kamal Ndousse, Karina Nguyen, Liane Lovitt, Michael Sellitto, Nelson Elhage, Noemi Mercado, Nova DasSarma, Oliver Rausch, Robert Lasenby, Robin Larson, Sam Ringer, Sandipan Kundu, Saurav Kadavath, Scott Johnston, Shauna Kravec, Sheer El Showk, Tamera Lanham, Timothy Telleen-Lawton, Tom Henighan, Tristan Hume, Yuntao Bai, Zac Hatfield-Dodds, Ben Mann, Dario Amodei, Nicholas Joseph, Sam McCandlish, Tom Brown, Christopher Olah, Jack Clark, Samuel R. Bowman, Jared Kaplan",2023-02-15,The Capacity for Moral Self-Correction in Large Language Models,https://arxiv.org/abs/2302.07459,132.0,,,175000000000.0,175B,,,,,,,,,,,,,,Reinforcement learning,"We test the hypothesis that language models trained with reinforcement learning from human feedback (RLHF) have the capability to ""morally self-correct"" -- to avoid producing harmful outputs -- if instructed to do so. We find strong evidence in support of this hypothesis across three different experiments, each of which reveal different facets of moral self-correction. We find that the capability for moral self-correction emerges at 22B model parameters, and typically improves with increasing model size and RLHF training. We believe that at this level of scale, language models obtain two capabilities that they can use for moral self-correction: (1) they can follow instructions and (2) they can learn complex normative concepts of harm like stereotyping, bias, and discrimination. As such, they can follow instructions to avoid certain kinds of morally harmful outputs. We believe our results are cause for cautious optimism regarding the ability to train language models to abide by ethical principles.",,Unreleased,,Confident,2024-11-01 14:05:19+00:00,United States of America,,,,,,,,,
BASIC-L + Lion,Vision,"Google,University of California Los Angeles (UCLA)","Industry,Academia","Xiangning Chen, Chen Liang, Da Huang, Esteban Real, Kaiyuan Wang, Yao Liu, Hieu Pham, Xuanyi Dong, Thang Luong, Cho-Jui Hsieh, Yifeng Lu, Quoc V. Le",2023-02-13,Symbolic Discovery of Optimization Algorithms,https://arxiv.org/abs/2302.06675v4,239.0,SOTA improvement,"""On vision-language contrastive learning, we achieve 88.3% zero-shot and 91.1% fine-tuning accuracy on ImageNet, surpassing the previous best results by 2% and 0.1%, respectively""",3070000000.0,parameter count of original BASIC-L,,,,"This model is BASIC-L retrained with a different optimizer, Lion. Lion seems more compute-efficient, so we should expect compute to be less than BASIC-L.",,,,,,,,,,,"We present a method to formulate algorithm discovery as program search, and apply it to discover optimization algorithms for deep neural network training. We leverage efficient search techniques to explore an infinite and sparse program space. To bridge the large generalization gap between proxy and target tasks, we also introduce program selection and simplification strategies. Our method discovers a simple and effective optimization algorithm, Lion (EvoLved Sign Momentum). It is more memory-efficient than Adam as it only keeps track of the momentum. Different from adaptive optimizers, its update has the same magnitude for each parameter calculated through the sign operation. We compare Lion with widely used optimizers, such as Adam and Adafactor, for training a variety of models on different tasks. On image classification, Lion boosts the accuracy of ViT by up to 2% on ImageNet and saves up to 5x the pre-training compute on JFT. On vision-language contrastive learning, we achieve 88.3% zero-shot and 91.1% fine-tuning accuracy on ImageNet, surpassing the previous best results by 2% and 0.1%, respectively. On diffusion models, Lion outperforms Adam by achieving a better FID score and reducing the training compute by up to 2.3x. For autoregressive, masked language modeling, and fine-tuning, Lion exhibits a similar or better performance compared to Adam. Our analysis of Lion reveals that its performance gain grows with the training batch size. It also requires a smaller learning rate than Adam due to the larger norm of the update produced by the sign function. Additionally, we examine the limitations of Lion and identify scenarios where its improvements are small or not statistically significant. Lion is also successfully deployed in production systems such as Google search ads CTR model.",,,,Confident,2024-11-01 14:05:18+00:00,"United States of America,United States of America",,,,,,,,,
ViT-22B,Vision,Google,Industry,"Mostafa Dehghani, Josip Djolonga, Basil Mustafa, Piotr Padlewski, Jonathan Heek, Justin Gilmer, Andreas Steiner, Mathilde Caron, Robert Geirhos, Ibrahim Alabdulmohsin, Rodolphe Jenatton, Lucas Beyer, Michael Tschannen, Anurag Arnab, Xiao Wang, Carlos Riquelme, Matthias Minderer, Joan Puigcerver, Utku Evci, Manoj Kumar, Sjoerd van Steenkiste, Gamaleldin F. Elsayed, Aravindh Mahendran, Fisher Yu, Avital Oliver, Fantine Huot, Jasmijn Bastings, Mark Patrick Collier, Alexey Gritsenko, Vighnesh Birodkar, Cristina Vasconcelos, Yi Tay, Thomas Mensink, Alexander Kolesnikov, Filip Pavetić, Dustin Tran, Thomas Kipf, Mario Lučić, Xiaohua Zhai, Daniel Keysers, Jeremiah Harmsen, Neil Houlsby",2023-02-10,Scaling Vision Transformers to 22 Billion Parameters,https://arxiv.org/abs/2302.05442v1,428.0,SOTA improvement,"""The largest
ViT-22B sets the new SOTA on the challenging ObjectNet test set""",21743000000.0,"21.743B, Table 1",1.93248e+23,,,"""ViT-22B was trained using 256 visual tokens per image, where each token represents a 14 × 14 patch extracted from 224 × 224 sized images. ViT-22B is trained for 177k steps with batch size of 65k: approximately 3 epochs""

""ViT-22B was trained on 1024 TPU V4 chips for 177K steps""

""Using these techniques, ViT-22B processes 1.15k tokens per second per core during training (forward and backward pass) on TPUv4 [...] ViT-22B’s model flops utilization (MFU) is 54.9%""

256 * 177k * 65k = 2.945T tokens

So training time is 2.945T tokens / (1.15k * 2 * 1024) tokens/s = 1.25M seconds = 347.4 hours

So 1024 TPUv4 chips for 1.25M seconds at 54.9% MFU:
1024 * 2.75e14 * 1.25M * 0.549 = 1.93248e23",JFT-4B,"""Dataset. ViT-22B is trained on a version of JFT (Sun et al., 2017), extended to around 4B images (Zhai et al.,
2022a). These images have been semi-automatically annotated with a class-hierarchy of 30k labels""",4000000000.0,"""Dataset. ViT-22B is trained on a version of JFT (Sun et al., 2017), extended to around 4B images (Zhai et al.,
2022a). These images have been semi-automatically annotated with a class-hierarchy of 30k labels""",2.9,347.4,"""Using these techniques, ViT-22B processes 1.15k tokens per second per core during training (forward and backward pass)""
From model card we know they trained with 1024 TPUv4 chips, and there are 2 cores per chip. Total number of tokens was 177K steps * 65k images/step * 256 tokens/image = 2.945T tokens

So training time is 2.945T tokens / (1.15k * 2 * 1024) tokens/s = 1.25M seconds = 347.4 hours",Google TPU v4,1024.0,,"The scaling of Transformers has driven breakthrough capabilities for language models. At present, the largest large language models (LLMs) contain upwards of 100B parameters. Vision Transformers (ViT) have introduced the same architecture to image and video modelling, but these have not yet been successfully scaled to nearly the same degree; the largest dense ViT contains 4B parameters (Chen et al., 2022). We present a recipe for highly efficient and stable training of a 22B-parameter ViT (ViT-22B) and perform a wide variety of experiments on the resulting model. When evaluated on downstream tasks (often with a lightweight linear model on frozen features), ViT-22B demonstrates increasing performance with scale. We further observe other interesting benefits of scale, including an improved tradeoff between fairness and performance, state-of-the-art alignment to human visual perception in terms of shape/texture bias, and improved robustness. ViT-22B demonstrates the potential for ""LLM-like"" scaling in vision, and provides key steps towards getting there.",,Unreleased,0.549,Confident,2025-02-14 21:39:30+00:00,United States of America,,,,,,,,,
ProteinDT,"Biology,Language","University of California (UC) Berkeley,California Institute of Technology,University of Toronto,University of Wisconsin Madison,Texas A&M,NVIDIA,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms)","Academia,Academia,Academia,Academia,Academia,Industry,Academia","Shengchao Liu, Yanjing Li, Zhuoxinran Li, Anthony Gitter, Yutao Zhu, Jiarui Lu, Zhao Xu, Weili Nie, Arvind Ramanathan, Chaowei Xiao, Jian Tang, Hongyu Guo, and Anima Anandkumar",2023-02-09,A Text-guided Protein Design Framework,https://arxiv.org/abs/2302.04611,,SOTA improvement,"""Compared to six state-of-the-art protein sequence representation methods, ProteinDT can obtain consistently superior performance on four of six benchmark tasks.""",,,,,,,UniProtKB,They extract a subset of 441K protein-text pairs,197000000.9999998,"Total amino acids: 197,000,000 residues

Final calculation: 1.97 × 10⁸ datapoints

Value = 197,000,000 = 1.97e8",,,,,,,"Current AI-assisted protein design mainly utilizes protein sequential and structural information. Meanwhile, there exists tremendous knowledge curated by humans in the text format describing proteins’ high-level functionalities. Yet, whether the incorporation of such text data can help protein design tasks has not been explored. To bridge this gap, we propose ProteinDT, a multi-modal framework that leverages textual descriptions for protein design. ProteinDT consists of three subsequent steps: ProteinCLAP which aligns the representation of two modalities, a facilitator that generates the protein representation from the text modality, and a decoder that creates the protein sequences from the representation. To train ProteinDT, we construct a large dataset, SwissProtCLAP, with 441K text and protein pairs. We quantitatively verify the effectiveness of ProteinDT on three challenging tasks: (1) over 90% accuracy for text-guided protein generation; (2) best hit ratio on 10 zero-shot text-guided protein editing tasks; (3) superior performance on four out of six protein property prediction benchmarks.",,Unreleased,,Unknown,2025-01-30 05:04:10+00:00,"United States of America,United States of America,Canada,United States of America,United States of America,United States of America,Canada",SciBERT,,,,,,,,
Gen-1,Video,Runway,Industry,"Patrick Esser, Johnathan Chiu, Parmida Atighehchian, Jonathan Granskog, Anastasis Germanidis",2023-02-06,Structure and Content-Guided Video Synthesis with Diffusion Models,https://arxiv.org/abs/2302.03011,377.0,SOTA improvement,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:05:18+00:00,United States of America,,,,,,,,,
ProteinSGM,Biology,University of Toronto,Academia,"Jin Sub Lee, Jisun Kim, Philip M. Kim",2023-02-04,ProteinSGM: Score-based generative modeling for de novo protein design,https://www.biorxiv.org/content/10.1101/2022.07.13.499967v2.abstract,,,,,,7.5e+18,,,"""The model is trained with a single NVIDIA V100 GPU using a batch size of 8 and learning rate 1×10−4 for 2 million iterations, which consumes approximately 7 days."" Assume FP16 precision and 40% utilization. ",,,14001.000000000004,"Total Proteins: 14,987
Training Set = 14,987 × 0.95 = 14,238
Final Estimate = 1.4 × 10^4 datapoints",,,,NVIDIA V100,1.0,,"The generation of de novo protein structures with predefined function and properties remains a challenging problem in protein design. Diffusion models, a novel state-of-the-art class of generative models, have recently shown astounding empirical performance in image synthesis. Here we use image-based representations of protein structure to develop ProteinSGM, a score-based diffusion model that produces realistic de novo proteins and can inpaint plausible backbones and domains into structures of predefined length. With unconditional generation, we show that ProteinSGM can generate native-like protein structures, surpassing the performance of previously reported generative models. We experimentally validate some de novo designs and observe strong structural consistency with generated backbones. Finally, we apply conditional generation to de novo protein design by formulating it as an image inpainting problem, allowing precise and modular design of protein structure.",,,,Unverified,2025-02-14 21:38:49+00:00,Canada,,,,,,,,,
CD-GraB (WT103),Language,Cornell University,Academia,"A. Feder Cooper, Wentao Guo, Khiem Pham, Tiancheng Yuan, Charlie F. Ruan, Yucheng Lu, Christopher De Sa",2023-02-02,CD-GraB: Coordinating Distributed Example Orders for Provably Accelerated Training,https://arxiv.org/abs/2302.00845,4.0,,,6846080.0,They provide the model initialization code in Appendix D. Running it  gives the parameter count.,,,,,WikiText-103,,,,30.0,,,,,,"Recent research on online Gradient Balancing (GraB) has revealed that there exist permutation-based example orderings for SGD that are guaranteed to outperform random reshuffling (RR). Whereas RR arbitrarily permutes training examples, GraB leverages stale gradients from prior epochs to order examples -- achieving a provably faster convergence rate than RR. However, GraB is limited by design: while it demonstrates an impressive ability to scale-up training on centralized data, it does not naturally extend to modern distributed ML workloads. We therefore propose Coordinated Distributed GraB (CD-GraB), which uses insights from prior work on kernel thinning to translate the benefits of provably faster permutation-based example ordering to distributed settings. With negligible overhead, CD-GraB exhibits a linear speedup in convergence rate over centralized GraB and outperforms distributed RR on a variety of benchmark tasks.",CD-GraB (WT103),Unreleased,,,2024-09-16 15:16:24+00:00,United States of America,,,,,,,,,
Chemistry42,Biology,Insilico Medicine AI,Industry,"Yan A. Ivanenkov, Daniil Polykovskiy, Dmitry Bezrukov, Bogdan Zagribelnyy, Vladimir Aladinskiy, Petrina Kamya, Alex Aliper, Feng Ren, Alex Zhavoronkov",2023-02-02,Chemistry42: An AI-Driven Platform for Molecular Design and Optimization,https://pubs.acs.org/doi/full/10.1021/acs.jcim.2c01191,,,,,,,,,,,,,,,,,,,,"Chemistry42 is a software platform for de novo small molecule design and optimization that integrates Artificial Intelligence (AI) techniques with computational and medicinal chemistry methodologies. Chemistry42 efficiently generates novel molecular structures with optimized properties validated in both in vitro and in vivo studies and is available through licensing or collaboration. Chemistry42 is the core component of Insilico Medicine’s Pharma.ai drug discovery suite. Pharma.ai also includes PandaOmics for target discovery and multiomics data analysis, and inClinico�a data-driven multimodal forecast of a clinical trial’s probability of success (PoS). In this paper, we demonstrate how the platform can be used to efficiently find novel molecular structures against DDR1 and CDK20",,,,Unverified,2024-11-23 21:22:33+00:00,"Hong Kong,China",,,,,,,,,
UniPi,"Multimodal,Video,Robotics,Vision","Google DeepMind,Massachusetts Institute of Technology (MIT),University of California (UC) Berkeley,Georgia Institute of Technology,University of Alberta","Industry,Academia,Academia,Academia,Academia","Yilun Du, Mengjiao Yang, Bo Dai, Hanjun Dai, Ofir Nachum, Joshua B. Tenenbaum, Dale Schuurmans, Pieter Abbeel",2023-01-31,Learning Universal Policies via Text-Guided Video Generation,https://arxiv.org/abs/2302.00111,146.0,,,,"Appears to be a composite model, not sure about the total parameter count.

""We use T5-XXL [22] to process input prompts which consists of 4.6 billion parameters. For combinatorial and multi-task generalization experiments on simulated robotic manipulation, we train a first-frame conditioned video diffusion models on 10x48x64 videos (skipping every 8 frames) with 1.7B parameters and a temporal super resolution of 20x48x64 (skipping every 4 frames) with 1.7B parameters. The resolution of the videos are chosen so that the objects being manipulated (e.g., blocks being moved around) are clearly visible in the video. For the real world video results, we finetune the 16x40x24 (1.7B), 32x40x24 (1.7B), 32x80x48 (1.4B), and 32x320x192 (1.2B) temporal
super resolution models pretrained on the data used by [19].""",,,,"UniPi was trained on 256 TPUv4 for an unknown duration, which could just about be >10^23 if the training time was 3 months and utilization was 33%. On balance, probably training compute is below 1e23 FLOP.","LAION-400M,Unspecified unreleased","""Our training data consists of an internet-scale pretraining dataset and a smaller real-world robotic dataset. The pretraining dataset uses the same data as [19], which consists of 14 million video-text pairs, 60 million image-text pairs, and the publicly available LAION-400M image-text dataset. The robotic dataset is adopted from the Bridge dataset [29] with 7.2k video-text pairs, where we use the task IDs as texts. We partition the 7.2k video-text pairs into train (80%) and test (20%) splits. We pretrain UniPi on the pretraining dataset followed by finetuning on the train split of the Bridge data.""",,,,,,Google TPU v4,,,"A goal of artificial intelligence is to construct an agent that can solve a wide variety of tasks. Recent progress in text-guided image synthesis has yielded models with an impressive ability to generate complex novel images, exhibiting combinatorial generalization across domains. Motivated by this success, we investigate whether such tools can be used to construct more general-purpose agents. Specifically, we cast the sequential decision making problem as a text-conditioned video generation problem, where, given a text-encoded specification of a desired goal, a planner synthesizes a set of future frames depicting its planned actions in the future, after which control actions are extracted from the generated video. By leveraging text as the underlying goal specification, we are able to naturally and combinatorially generalize to novel goals. The proposed policy-as-video formulation can further represent environments with different state and action spaces in a unified space of images, which, for example, enables learning and generalization across a variety of robot manipulation tasks. Finally, by leveraging pretrained language embeddings and widely available videos from the internet, the approach enables knowledge transfer through predicting highly realistic video plans for real robots.",,Open weights (unrestricted),,Unknown,2024-11-01 14:05:19+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America,United States of America,United States of America,Canada",,,,,,,,,
Flan T5-XXL + BLIP-2,"Multimodal,Language,Vision",Salesforce Research,Industry,"Junnan Li, Dongxu Li, Silvio Savarese, Steven Hoi",2023-01-30,BLIP-2: Bootstrapping Language-Image Pre-training with Frozen Image Encoders and Large Language Models,"https://arxiv.org/abs/2301.12597, https://huggingface.co/Salesforce/blip2-flan-t5-xl",2880.0,Highly cited,,12100000000.0,"12.1B, per Table 2. 

only 108M trainable params (i.e. params trained during the BLIP process)",,,,"fine-tuned from Flan-T5 XXL (11B) and ViT-g

fine-tuning compute:

""using a single 16-A100(40G) machine, our largest model with
ViT-g and FlanT5-XXL requires less than 6 days for the first
stage and less than 3 days for the second stage.""

16 * 9 days * 24 * 3600 * 312 teraflops * 0.3 ~= 1.2e21","COCO,LAION-400M","""We use the same pre-training dataset as BLIP with 129M images in total, including COCO (Lin
et al., 2014), Visual Genome (Krishna et al., 2017), CC3M (Sharma et al., 2018), CC12M (Changpinyo et al.,
2021), SBU (Ordonez et al., 2011), and 115M images from the LAION400M dataset""",,"""We use the same pre-training dataset as BLIP with 129M images in total""",,200.0,"""less than 6 days for the first
stage and less than 3 days for the second stage""
9*24 is 216, rounding down a bit is 200 hours",NVIDIA A100 SXM4 40 GB,,,"The cost of vision-and-language pre-training has become increasingly prohibitive due to end-to-end training of large-scale models. This paper proposes BLIP-2, a generic and efficient pre-training strategy that bootstraps vision-language pre-training from off-the-shelf frozen pre-trained image encoders and frozen large language models. BLIP-2 bridges the modality gap with a lightweight Querying Transformer, which is pre-trained in two stages. The first stage bootstraps vision-language representation learning from a frozen image encoder. The second stage bootstraps vision-to-language generative learning from a frozen language model. BLIP-2 achieves state-of-the-art performance on various vision-language tasks, despite having significantly fewer trainable parameters than existing methods. For example, our model outperforms Flamingo80B by 8.7% on zero-shot VQAv2 with 54x fewer trainable parameters. We also demonstrate the model's emerging capabilities of zero-shot image-to-text generation that can follow natural language instructions.",,Open weights (unrestricted),,Confident,2025-02-03 17:19:48+00:00,United States of America,Flan-T5 11B,1.2e+21,"ViT-g is the other base model.

""using a single 16-A100(40G) machine, our largest model with
ViT-g and FlanT5-XXL requires less than 6 days for the first
stage and less than 3 days for the second stage.""

16 * 9 days * 24 * 3600 * 312 teraflops * 0.3 ~= 1.2e21",,,,,,
BLIP-2 (Q-Former),"Vision,Language",Salesforce Research,Industry,"Junnan Li, Dongxu Li, Silvio Savarese, Steven Hoi",2023-01-30,BLIP-2: Bootstrapping Language-Image Pre-training with Frozen Image Encoders and Large Language Models,https://arxiv.org/abs/2301.12597,2880.0,SOTA improvement,"""BLIP-2 achieves state-of-the-art performance on various vision-language tasks""",1480000000.0,"Q-Former has 188M params. The BLIP-2 system overall has ""54x fewer trainable parameters"" than Flamingo80B.",1.20000000001e+21,,,https://www.wolframalpha.com/input?i=312+teraFLOPS+*+16+*+200+hours+*+0.33,"COCO,LAION-400M,Conceptual Captions (CC3M),Conceptual Captions 12M (CC12M),VisualGenome,SBU","""We use the same pre-training dataset as
BLIP with 129M images in total, including COCO (Lin
et al., 2014), Visual Genome (Krishna et al., 2017),
CC3M (Sharma et al., 2018), CC12M (Changpinyo et al.,
2021), SBU (Ordonez et al., 2011), and 115M images from
the LAION400M dataset (Schuhmann et al., 2021).""",,,,200.0,"""For example, using
a single 16-A100(40G) machine, our largest model with
ViT-g and FlanT5-XXL requires less than 6 days for the first
stage and less than 3 days for the second stage.""
9 days = 216 hours",NVIDIA A100 SXM4 40 GB,16.0,,"The cost of vision-and-language pre-training has become increasingly prohibitive due to end-to-end training of large-scale models. This paper proposes BLIP-2, a generic and efficient pre-training strategy that bootstraps vision-language pre-training from off-the-shelf frozen pre-trained image encoders and frozen large language models. BLIP-2 bridges the modality gap with a lightweight Querying Transformer, which is pre-trained in two stages. The first stage bootstraps vision-language representation learning from a frozen image encoder. The second stage bootstraps vision-to-language generative learning from a frozen language model. BLIP-2 achieves state-of-the-art performance on various vision-language tasks, despite having significantly fewer trainable parameters than existing methods. For example, our model outperforms Flamingo80B by 8.7% on zero-shot VQAv2 with 54x fewer trainable parameters. We also demonstrate the model's emerging capabilities of zero-shot image-to-text generation that can follow natural language instructions.",,Open weights (unrestricted),,Confident,2025-02-14 21:41:26+00:00,United States of America,,,,,,,,,
KeAP,Biology,"The University of Hong Kong,ByteDance,JancsiTech,OPPO HealthLab","Academia,Industry,Industry,Industry","Hong-Yu Zhou, Yunxiang Fu, Zhicheng Zhang, Cheng Bian, Yizhou Yu",2023-01-30,Protein Representation Learning via Knowledge Enhanced Primary Structure Modeling,https://arxiv.org/abs/2301.13154,6.0,,,,,,,,,,,180000001.00000024,"600,000 proteins × 300 amino acids per protein = 1.8 × 10⁸ datapoints",,,,,,,"Protein representation learning has primarily benefited from the remarkable development of language models (LMs). Accordingly, pre-trained protein models also suffer from a problem in LMs: a lack of factual knowledge. The recent solution models the relationships between protein and associated knowledge terms as the knowledge encoding objective. However, it fails to explore the relationships at a more granular level, i.e., the token level. To mitigate this, we propose Knowledge-exploited Auto-encoder for Protein (KeAP), which performs token-level knowledge graph exploration for protein representation learning. In practice, non-masked amino acids iteratively query the associated knowledge tokens to extract and integrate helpful information for restoring masked amino acids via attention. We show that KeAP can consistently outperform the previous counterpart on 9 representative downstream applications, sometimes surpassing it by large margins. These results suggest that KeAP provides an alternative yet effective way to perform knowledge enhanced protein representation learning.",,,,Unverified,2025-01-30 05:04:16+00:00,"Hong Kong,China,China,China,China",,,,,,,,,
Genie (bio),Biology,Colombia University,Academia,"Yeqing Lin, Mohammed AlQuraishi",2023-01-29,"Generating Novel, Designable, and Diverse Protein Structures by Equivariantly Diffusing Oriented Residue Clouds",https://arxiv.org/abs/2301.12485,,,,4100000.0,"""RFDiffusion also contains around 14 times more parameters than Genie (59.8M versus 4.1M).""",2.0000000000000005e+21,,,"1. Hardware setup:
- Base Model: 2x NVIDIA A100 (3.12e14 FLOP/s per GPU)
- Genie-SCOPe: 12x NVIDIA A100 (3.12e14 FLOP/s per GPU)
- Genie-SwissProt: 6x NVIDIA A6000 (3.87e13 FLOP/s per GPU)

2. Training duration (directly provided):
- Base Model: 9 days (777,600 seconds)
- Genie-SCOPe: 14 days (1,209,600 seconds)
- Genie-SwissProt: 8 days (691,200 seconds)

3. Utilization rate: 40%

4. Calculations:
Base: 3.12e14 × 2 × 777,600 × 0.4 = 1.94e20 FLOPs
SCOPe: 3.12e14 × 12 × 1,209,600 × 0.4 = 1.81e21 FLOPs
SwissProt: 3.87e13 × 6 × 691,200 × 0.4 = 6.41e19 FLOPs
Total = 2.06e21 FLOPs ≈ 2.0e21 FLOPs",,,40000001.00000003,"SCOPe Dataset: 8,766 domains × 200 residues = 1,753,200 residues
AlphaFold-SwissProt: 195,214 proteins × 200 residues = 39,042,800 residues
Total: 1,753,200 + 39,042,800 = 40,796,000 residues ≈ 4.08 × 10⁷",,,"""We train Genie for 50,000 epochs (~9 days). For ",,,,"Proteins power a vast array of functional processes in living cells. The capability to create new proteins with designed structures and functions would thus enable the engineering of cellular behavior and development of protein-based therapeutics and materials. Structure-based protein design aims to find structures that are designable (can be realized by a protein sequence), novel (have dissimilar geometry from natural proteins), and diverse (span a wide range of geometries). While advances in protein structure prediction have made it possible to predict structures of novel protein sequences, the combinatorially large space of sequences and structures limits the practicality of search-based methods. Generative models provide a compelling alternative, by implicitly learning the low-dimensional structure of complex data distributions. Here, we leverage recent advances in denoising diffusion probabilistic models and equivariant neural networks to develop Genie, a generative model of protein structures that performs discrete-time diffusion using a cloud of oriented reference frames in 3D space. Through in silico evaluations, we demonstrate that Genie generates protein backbones that are more designable, novel, and diverse than existing models. This indicates that Genie is capturing key aspects of the distribution of protein structure space and facilitates protein design with high success rates. Code for generating new proteins and training new versions of Genie is available at https://github. com/aqlaboratory/genie",,,,Unverified,2025-02-14 21:41:37+00:00,United States of America,,,,,,,,,
RESP AI,Biology,University of California San Diego,Academia,"Jonathan Parkinson, Ryan Hard, Wei Wang",2023-01-28,The RESP AI model accelerates the identification of tight-binding antibodies,https://www.nature.com/articles/s41467-023-36028-8#Sec28,,,,,,,,,,,"The raw sequence read data generated for this study has been uploaded
to the Sequence Read Archive (SRA) database under accession
code PRJNA813220. The antibody sequence data used to train the
autoencoder used in this study are available in the cAbRep database
[https://cab-rep.c2b2.columbia.edu/]. The construction of the cAbRep
database is described in Guo et al.",792000000.0,"""The end result of this process was thus a library of roughly 6 million sequences, half of which are human B-cell receptors and the other half of which are not. The autoencoder model is thus trained both to encode an input sequence and to embed information about typical features observed in true antibody sequences. The autoencoder was implemented using the
PyTorch library in Python 3.6.9 and trained on the full 6 million
sequence dataset until convergence.""

sequence length: 132 (amino acids)

6000000*132=792000000 tokens",8.0,,,,,,"High-affinity antibodies are often identified through directed evolution, which may require many iterations of mutagenesis and selection to find an optimal candidate. Deep learning techniques hold the potential to accelerate this process but the existing methods cannot provide the confidence interval or uncertainty needed to assess the reliability of the predictions. Here we present a pipeline called RESP for efficient identification of high affinity antibodies. We develop a learned representation trained on over 3 million human B-cell receptor sequences to encode antibody sequences. We then develop a variational Bayesian neural network to perform ordinal regression on a set of the directed evolution sequences binned by off-rate and quantify their likelihood to be tight binders against an antigen. Importantly, this model can assess sequences not present in the directed evolution library and thus greatly expand the search space to uncover the best sequences for experimental evaluation. We demonstrate the power of this pipeline by achieving a 17-fold improvement in the KD of the PD-L1 antibody Atezolizumab and this success illustrates the potential of RESP in facilitating general antibody development.",,Open weights (unrestricted),,Confident,2024-10-21 15:22:55+00:00,United States of America,,,,,,,,,
Protst,Biology,"Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),University of Montreal / Université de Montréal,Intel Labs,HEC Montreal,CIFAR AI Research","Academia,Academia,Industry,Academia,Research collective","Minghao Xu, Xinyu Yuan, Santiago Miret, Jian Tang",2023-01-28,ProtST: Multi-Modality Learning of Protein Sequences and Biomedical Texts,https://proceedings.mlr.press/v202/xu23t/xu23t.pdf,64.0,,,,,1.400000000000012e+19,,,"1. Hardware setup: 4x NVIDIA Tesla V100 GPUs (1.30 x 10^14 FLOP/s per GPU)

2. Training duration: 69,131 seconds (≈19.2 hours) - estimated from 20 epochs, 553,052 samples, batch size 16, assuming 0.1s per step

3. Utilization rate: 40%

4. Final calculation:
1.30 x 10^14 FLOP/s × 4 GPUs × 69,131s × 0.4 = 1.44 x 10^19 FLOPs",,,276500001.00000006,"Total Datapoints = (553,052 pairs × 450 residues/pair) + (553,052 pairs × 50 tokens/pair)
= 248,873,400 + 27,652,600
= 276,526,000 (2.765e+8)",,,,,,,"Current protein language models (PLMs) learn
protein representations mainly based on their sequences, thereby well capturing co-evolutionary
information, but they are unable to explicitly acquire protein functions, which is the end goal
of protein representation learning. Fortunately,
for many proteins, their textual property descriptions are available, where their various functions
are also described. Motivated by this fact, we
first build the ProtDescribe dataset to augment
protein sequences with text descriptions of their
functions and other important properties. Based
on this dataset, we propose the ProtST framework to enhance Protein Sequence pre-training
and understanding by biomedical Texts. During pre-training, we design three types of tasks,
i.e., unimodal mask prediction, multimodal representation alignment and multimodal mask prediction, to enhance a PLM with protein property information with different granularities and,
at the same time, preserve the PLM’s original
representation power. On downstream tasks,
ProtST enables both supervised learning and zeroshot prediction. We verify the superiority of
ProtST-induced PLMs over previous ones on diverse representation learning benchmarks. Under the zero-shot setting, we show the effectiveness of ProtST on zero-shot protein classification,
and ProtST also enables functional protein retrieval from a large-scale database without any
function annotation. Source code and model
weights are available at https://github.
com/DeepGraphLearning/ProtST.",,,,Unverified,2025-02-14 21:41:45+00:00,"Canada,Canada,Multinational,United States of America,Canada,Canada",,,,,,,,,
DDPM-IP (CelebA),Image generation,Utrecht University,Academia,"Mang Ning, Enver Sangineto, Angelo Porrello, Simone Calderara, Rita Cucchiara",2023-01-27,Input Perturbation Reduces Exposure Bias in Diffusion Models,https://arxiv.org/abs/2301.11706v3,39.0,SOTA improvement,"""For instance, on CelebA 64×64, we achieve a new state-of-theart FID score of 1.27, while saving 37.5% of the training time""",295000000.0,"295M for CelebA model, per Table 9",3.5e+20,,,"""We use Pytorch 1.8 (Paszke et al., 2019) and trained all the models on different NVIDIA Tesla V100s (16G memory). In
more detail, we use 2 GPUs to train the models on CIFAR10 for 2 days, and 4 GPUs to train the models on ImageNet 32×32
for 34 days. For LSUN tower 64×64, CelebA 64×64 and FFHQ 128×128, we used 16 GPUs to train the models for 3 days,
5 days and 4 days, respectively""

5*16 V100-days for CelebA.

5 * 16 * 24 * 3600 * 125 teraflops * 0.4 ~= 3.5e20",CelebA,,203000.0,,681.0,120.0,5 days,NVIDIA V100,,,"Denoising Diffusion Probabilistic Models have shown an impressive generation quality, although their long sampling chain leads to high computational costs. In this paper, we observe that a long sampling chain also leads to an error accumulation phenomenon, which is similar to the exposure bias problem in autoregressive text generation. Specifically, we note that there is a discrepancy between training and testing, since the former is conditioned on the ground truth samples, while the latter is conditioned on the previously generated results. To alleviate this problem, we propose a very simple but effective training regularization, consisting in perturbing the ground truth samples to simulate the inference time prediction errors. We empirically show that, without affecting the recall and precision, the proposed input perturbation leads to a significant improvement in the sample quality while reducing both the training and the inference times. For instance, on CelebA 64×64, we achieve a new state-of-the-art FID score of 1.27, while saving 37.5% of the training time. The code is publicly available at this https URL",,,,Likely,2025-02-14 21:41:52+00:00,Netherlands,,,,,,,,,
MusicLM,Audio,Google,Industry,"Andrea Agostinelli, Timo I. Denk, Zalán Borsos, Jesse Engel, Mauro Verzetti, Antoine Caillon, Qingqing Huang, Aren Jansen, Adam Roberts, Marco Tagliasacchi, Matt Sharifi, Neil Zeghidour, Christian Frank",2023-01-26,MusicLM: Generating Music From Text,https://arxiv.org/abs/2301.11325,329.0,SOTA improvement,"""We demonstrate that our method outperforms baselines on MusicCaps, a hand-curated, high-quality
dataset of 5.5k music-text pairs prepared by musicians.""",860000000.0,"""We use decoder-only Transformers for modeling the semantic stage and the acoustic stages of AudioLM. The models
share the same architecture, composed of 24 layers, 16 attention heads, an embedding dimension of 1024, feed-forward
layers of dimensionality 4096, dropout of 0.1, and relative
positional embeddings (Raffel et al., 2020), resulting in
430M parameters per stage.""

""stage"" seems to mean semantic + acoustic, so 860M total",,,,,Free Music Archive,"""We train SoundStream and w2v-BERT on the Free Music
Archive (FMA) dataset (Defferrard et al., 2017), whereas
the tokenizers and the autoregressive models for the semantic and acoustic modeling stages are trained on a dataset containing five million audio clips, amounting to 280k hours of
music at 24 kHz. Each of the stages is trained with multiple passes over the training data""",,>280k hours,,,,,,,"We introduce MusicLM, a model generating high-fidelity music from text descriptions such as ""a calming violin melody backed by a distorted guitar riff"". MusicLM casts the process of conditional music generation as a hierarchical sequence-to-sequence modeling task, and it generates music at 24 kHz that remains consistent over several minutes. Our experiments show that MusicLM outperforms previous systems both in audio quality and adherence to the text description. Moreover, we demonstrate that MusicLM can be conditioned on both text and a melody in that it can transform whistled and hummed melodies according to the style described in a text caption. To support future research, we publicly release MusicCaps, a dataset composed of 5.5k music-text pairs, with rich text descriptions provided by human experts.",,,,Confident,2024-11-01 14:05:18+00:00,United States of America,W2v-BERT,,also MuLan and SoundStream,,,,,,True
MoLFormer-XL,Biology,IBM,Industry,"Jerret Ross, Brian Belgodere, Vijil Chenthamarakshan, Inkit Padhi, Youssef Mroueh, Payel Das",2023-01-25,An AI foundation model that learns the grammar of molecules,"https://research.ibm.com/blog/molecular-transformer-discovery
https://www.nature.com/articles/s42256-022-00580-7",,,,,,4.509e+20,,,125000000000000*(208*16+1*12)*3600*0.3 = 4.509e+20,"PubChem,ZINC 15",,49236000000.0,"""MoLFormer-XL has been pretrained on 1.1 billion molecules represented as machine-readable strings of text.""

15K steps

""PubChem+ZINC (>1 billion data points) datasets""

mean token amount (table 4 from supplementary materials): 44.76

44.76*1.1*10^9 = 49236000000 tokens",4.0,208.0,"""Together, both techniques raised our per-GPU processing costs from 50 molecules to 1,600 molecules, allowing us to get away with 16 GPUs instead of 1,000. By eliminating hundreds of unnecessary GPUs, we consumed 61 times less energy and still had a trained model in five days. ""

""Our pretraining task consists of training on the full dataset to 4 epochs. Training a single epoch of just PubChem on a single NVIDIA
V100 GPU would take approximately 60 hours. Utilizing Distributed Data Parallel, pre-training on the full PubChem dataset
alone took approx. 22 hours on 16 NVIDIA V100 GPUs this averages to about 5.5 hours per epoch. The speed up achieved by parallelizing training to 16 GPUs gave us a factor of 10.9. Pre-training for 4 epochs on the combined PubChem+ZINC datasets took approx 208 hours on a 16 NVIDIA V100 GPUs which averages to about 52 hours of compute for a single epoch. All
fine-tunning tasks were able to be performed on single GPUs (either V100 or A100) and completed in approx. 12 hours.""",NVIDIA V100,16.0,,"Large pretrained models are fast becoming AI’s Swiss Army knife. Once limited to summarizing text and translating languages, they can now write code, compose music, and answer obscure questions at length.

Now there’s a new skill to add to their repertoire: the ability to infer the shapes and properties of molecules to predict how they might behave and to propose entirely new ones.

Most molecular models need estimates or measurements of a molecule’s 3D shape to accurately predict many of its properties. Chemists can extract this information through simulations or lab experiments, but it’s an imperfect, expensive process that can take months to years. Perhaps unsurprisingly, we have detailed structures for only a few million molecules out of the trillions upon trillions potentially out there.

But now, there could be a way to eliminate this bottleneck in the discovery process with the help of AI. Introducing MoLFormer-XL, the latest addition to the MoLFormer family of foundation models for molecular discovery. MoLFormer-XL has been pretrained on 1.1 billion molecules represented as machine-readable strings of text. From these simple and accessible chemical representations, it turns out that a transformer can extract enough information to infer a molecule’s form and function.",,Open weights (unrestricted),,Confident,2024-10-28 19:43:13+00:00,United States of America,,,,,,,,,
Moxiaoxian,,,,,2023-01-25,"新一批国产大模型通过备案，多家垂直领域厂商入列
",https://stcn.com/article/detail/1106222.html,,,,3500000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
"Pinshang
",,,,,2023-01-25,"新一批国产大模型通过备案，多家垂直领域厂商入列
",https://stcn.com/article/detail/1106222.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
GPT-2+Active-SGD (WT 103),Language,University of Montreal / Université de Montréal,Academia,"Davood Wadi, Marc Fredette, Sylvain Senecal",2023-01-24,Read the Signs Towards Invariance to Gradient Descent’s Hyperparameter Initialization,https://arxiv.org/abs/2301.10133,0.0,,,124000000.0,,3.1e+17,,,,WikiText-103,,,,200.0,,,,,,"We propose ActiveLR, an optimization meta algorithm that localizes the learning rate, α, and adapts them at each epoch according to whether the gradient at each epoch changes sign or not. This sign-conscious algorithm is aware of whether from the previous step to the current one the update of each parameter has been too large or too small and adjusts the α accordingly. We implement the Active version (ours) of widely used and recently published gradient descent optimizers, namely SGD with momentum, AdamW, RAdam, and AdaBelief. Our experiments on ImageNet, CIFAR-10, WikiText-103, WikiText-2, and PASCAL VOC using different model architectures, such as ResNet and Transformers, show an increase in generalizability and training set fit, and decrease in training time for the Active variants of the tested optimizers. The results also show robustness of the Active variant of these optimizers to different values of the initial learning rate. Furthermore, the detrimental effects of using large mini-batch sizes are mitigated. ActiveLR, thus, alleviates the need for hyper-parameter search for two of the most commonly tuned hyper-parameters that require heavy time and computational costs to pick. We encourage AI researchers and practitioners to use the Active variant of their optimizer of choice for faster training, better generalizability, and reducing carbon footprint of training deep neural networks.",GPT-2+Active-SGD,Unreleased,,,2024-09-16 15:13:01+00:00,Canada,,,,,,,,,
Adaptive Agent,Games,DeepMind,Industry,"Adaptive Agent Team, Jakob Bauer, Kate Baumli, Satinder Baveja, Feryal Behbahani, Avishkar Bhoopchand, Nathalie Bradley-Schmieg, Michael Chang, Natalie Clay, Adrian Collister, Vibhavari Dasagi, Lucy Gonzalez, Karol Gregor, Edward Hughes, Sheleem Kashem, Maria Loks-Thompson, Hannah Openshaw, Jack Parker-Holder, Shreya Pathak, Nicolas Perez-Nieves, Nemanja Rakicevic, Tim Rocktäschel, Yannick Schroecker, Jakub Sygnowski, Karl Tuyls, Sarah York, Alexander Zacherl, Lei Zhang",2023-01-18,Human-Timescale Adaptation in an Open-Ended Task Space,https://arxiv.org/abs/2301.07608,89.0,,,533000000.0,Table D.9,2.8e+21,,,"""AdA was implemented using JAX (Bradbury et al., 2018) and the DeepMind JAX Ecosystem (Babuschkin et al., 2020) and trained on 64 Google TPUv3 devices. The wall-clock time for training this version of AdA from scratch was approximately 5 weeks: 1 week to train the teacher, and 4 weeks to train AdA""

64 * 123 teraflop/s * 35 days * 24 * 3600 * 0.4 = 9.5e21

This might be for all single-agent experiments in the paper, or just for the 76M model in Table D.1, I'm not sure.

In Table E.2, the 533M-param model takes 2e20 FLOP to go through 5B learner steps, and was trained on 70B steps in total (Table 1). That would be 2.8e21 for 70B steps. That might be an underestimate because there are also teacher(?) steps.",,"RL in XLand 2.0 task space, ""an environment supporting procedural generation of diverse 3D worlds and
multi-player games""",,,,840.0,5 weeks. Possible that this is for multiple models,Google TPU v3,,Reinforcement learning,"Foundation models have shown impressive adaptation and scalability in supervised and self-supervised learning problems, but so far these successes have not fully translated to reinforcement learning (RL). In this work, we demonstrate that training an RL agent at scale leads to a general in-context learning algorithm that can adapt to open-ended novel embodied 3D problems as quickly as humans. In a vast space of held-out environment dynamics, our adaptive agent (AdA) displays on-the-fly hypothesis-driven exploration, efficient exploitation of acquired knowledge, and can successfully be prompted with first-person demonstrations. Adaptation emerges from three ingredients: (1) meta-reinforcement learning across a vast, smooth and diverse task distribution, (2) a policy parameterised as a large-scale attention-based memory architecture, and (3) an effective automated curriculum that prioritises tasks at the frontier of an agent's capabilities. We demonstrate characteristic scaling laws with respect to network size, memory length, and richness of the training task distribution. We believe our results lay the foundation for increasingly general and adaptive RL agents that perform well across ever-larger open-ended domains.",,,,Speculative,2025-02-14 21:42:22+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Ankh_large,Biology,"Technical University of Munich,Columbia University","Academia,Academia","Ahmed Elnaggar, Hazem Essam, Wafaa Salah-Eldin, Walid Moustafa, Mohamed Elkerdawy, Charlotte Rochereau, Burkhard Rost",2023-01-16,Ankh: Optimized Protein Language Model Unlocks General-Purpose Modelling,https://arxiv.org/abs/2301.06568,59.0,SOTA improvement,"""On average, Ankh improved the PLM SOTA performance by 4.8%""",1900000000.0,"Figure 1 indicates 1.15B parameters, but both the huggingface model and a replication (https://huggingface.co/ElnaggarLab/ankh-large and https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1.full.pdf) indicate 1.9B parameters.
Notebook for counting params: https://colab.research.google.com/drive/1EGI5_vDl4pOBUukJexMHQR16BFKJe4a5?usp=sharing",6.5e+21,,,"Table 9 from here: https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1.full.pdf

Can also be manually estimated based on the details in Table 11 and 4.6.1 Exp 4. 14B residues * 68 epochs = 952B tokens seen in forward passes. However, only 20% of tokens are masked as individual targets; other tokens in consecutive spans are collapsed into single-token targets to reduce computations. For masking rate of 20%, the average sequence will have 36% as many targets as input tokens under this strategy. This is the relevant number of backward passes:
(2 * 952B * 19B) + (4 * 952B * 0.36 * 19B) = 6.22e22

36% figure verified here: https://colab.research.google.com/drive/1ETsmp_KRMK8kIRA5kdfcO9QiPK28cBQ6?usp=sharing ",UniRef50,"""We build upon the same results by pre-training our baseline on UniRef50.""",14000000000.0,"Pretrained over UniRef50; 45M proteins and 14B amino acids, per Table 2

952B tokens from Table 9 at:
https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1
(This is total tokens over multiple epochs)",68.0,,,Google TPU v4,64.0,,"As opposed to scaling-up protein language models (PLMs), we seek improving performance via protein-specific optimization. Although the proportionality between the language model size and the richness of its learned representations is validated, we prioritize accessibility and pursue a path of data-efficient, cost-reduced, and knowledge-guided optimization. Through over twenty experiments ranging from masking, architecture, and pre-training data, we derive insights from protein-specific experimentation into building a model that interprets the language of life, optimally. We present Ankh, the first general-purpose PLM trained on Google’s TPU-v4 surpassing the state-of-the-art performance with fewer parameters (<10% for pre-training, <7% for inference, and <30% for the embedding dimension). We provide a representative range of structure and function benchmarks where Ankh excels. We further provide a protein variant generation analysis on High-N and One-N input data scales where Ankh succeeds in learning protein evolutionary conservation-mutation trends and introducing functional diversity while retaining key structural-functional characteristics. We dedicate our work to promoting accessibility to research innovation via attainable resources.",,Open weights (non-commercial),,Confident,2025-02-19 19:09:33+00:00,"Germany,United States of America",,,,,,,524288.0,Table 11,
Nucleotide Transformer,Biology,"NVIDIA,Technical University of Munich","Industry,Academia","Hugo Dalla-Torre, Liam Gonzalez, Javier Mendoza Revilla, Nicolas Lopez Carranza, Adam Henryk Grzywaczewski, Francesco Oteri, Christian Dallago, Evan Trop, Hassan Sirelkhatim, Guillaume Richard, Marcin Skwark, Karim Beguir,
Marie Lopez, Thomas Pierrot",2023-01-15,"The Nucleotide Transformer: Building and Evaluating Robust
Foundation Models for Human Genomics",https://www.biorxiv.org/content/10.1101/2023.01.11.523679v1.full.pdf,22.0,SOTA improvement,"""We show that the representations alone match or outperform specialized
methods on 11 of 18 prediction tasks, and up to 15 after fine-tuning.""",2500000000.0,"""We built four distinct foundation language models of different sizes, ranging from 500M up to 2.5B parameters""",8.08e+21,,,"""Training the largest parameter model required a total of 128 GPUs across 16 compute nodes for 28 days""

In repo, they default to jnp.float32, but recommend fp16 or bp16 for activations in the docstring. JAX defaults to TF32 so they should be utilizing tensor cores.

Assuming 1.56e14 FLOP/s for 32-bit calculations and 0.3 utilization rate

Estimate: 1.56e14 FLOP/s * 128 GPUs * 28 days * 24 h/day * 3600 s/h * 0.3 utilization rate = 1.45e22

Or, with 6ND:
""the model processed a total of 300B tokens during training""
6 * 300B * 2.5B = 4.5e21

Geometric mean: sqrt(1.45e22 * 4.5e21) = 8.08e21","Human Reference Genome (GRCh38/hg38),1000 Genomes Project","""pre-trained them on three different datasets encompassing the Human
reference genome, a collection of 3,200 diverse human genomes, and 850 genomes from several species""
",300000000000.0,"Largest dataset is the 1000 Genome dataset, with 3202 genomes for a total of 20.5 trillion nucleotides. However, for each dataset training was run until the model saw 300B tokens.",1.0,672.0,"""Training the largest parameter model required a total of 128 GPUs across 16 compute nodes for 28 days""",NVIDIA A100,128.0,Self-supervised learning,"Closing the gap between measurable genetic information and observable traits is a longstanding challenge in genomics. Yet, the prediction of molecular phenotypes from DNA sequences alone remains limited and inaccurate, often driven by the scarcity of annotated data and the inability to transfer learnings between prediction tasks. Here, we present an extensive study of foundation models pre-trained on DNA sequences, named the Nucleotide Transformer, integrating information from 3,202 diverse human genomes, as well as 850 genomes from a wide range of species, including model and non-model organisms. These transformer models yield transferable, context-specific representations of nucleotide sequences, which allow for accurate molecular phenotype prediction even in low-data settings. We show that the representations alone match or outperform specialized methods on 11 of 18 prediction tasks, and up to 15 after fine-tuning. Despite no supervision, the transformer models learnt to focus attention on key genomic elements, including those that regulate gene expression, such as enhancers. Lastly, we demonstrate that utilizing model representations alone can improve the prioritization of functional genetic variants. The training and application of foundational models in genomics explored in this study provide a widely applicable stepping stone to bridge the gap of accurate molecular phenotype prediction from DNA sequence alone.
",,,,Likely,2025-02-14 21:51:20+00:00,"United States of America,Germany",,9.35e+17,"""All fine-tuning runs were performed on a single node with eight A100 GPUs. [...] On average, a fine-tuning run lasted 20 minutes for the 500M parameter models, and 50 minutes for the 2.5B parameter models.""

Estimate: 78e12 FLOP/s * 8 GPUs * 50 min * 60 seconds * 0.5 utilization rate = 9.36e17",,,,,,
SantaCoder,Language,"Hugging Face,ServiceNow,Massachusetts Institute of Technology (MIT),Wellesley College,Saama,EleutherAI,Huawei Noah's Ark Lab,Carnegie Mellon University (CMU)","Industry,Industry,Academia,Academia,Research collective,Industry,Academia","Loubna Ben Allal, Raymond Li, Denis Kocetkov, Chenghao Mou, Christopher Akiki, Carlos Munoz Ferrandis, Niklas Muennighoff, Mayank Mishra, Alex Gu, Manan Dey, Logesh Kumar Umapathi, Carolyn Jane Anderson, Yangtian Zi, Joel Lamy Poirier, Hailey Schoelkopf, Sergey Troshin, Dmitry Abulkhanov, Manuel Romero, Michael Lappert, Francesco De Toni, Bernardo García del Río, Qian Liu, Shamik Bose, Urvashi Bhattacharyya, Terry Yue Zhuo, Ian Yu, Paulo Villegas, Marco Zocca, Sourab Mangrulkar, David Lansky, Huu Nguyen, Danish Contractor, Luis Villa, Jia Li, Dzmitry Bahdanau, Yacine Jernite, Sean Hughes, Daniel Fried, Arjun Guha, Harm de Vries, Leandro von Werra",2023-01-09,SantaCoder: don't reach for the stars!,https://arxiv.org/abs/2301.03988,163.0,,"""Our best model outperforms previous open-source multilingual code generation models (InCoder-6.7B and CodeGen-Multi-2.7B) in both left-to-right generation and infilling on the Java, JavaScript, and Python portions of MultiPL-E, despite being a substantially smaller model""",1100000000.0,1.1B,2.1e+21,,,Each training run takes 3.1 days to complete on 96 Tesla V100 GPUs for a total of 1.05 × 10^21 FLOPs. The final model described in Section 6.2 uses twice the amount of compute.,The Stack v1.1,"""The base training dataset for the experiments in this paper contains 268 GB of Python, Java and JavaScript files from The Stack v1.1 (Kocetkov et al., 2022) after removing data from optout requests, near-deduplication, PII-redaction (see Section 4)""",,268 GB,,150.0,"Their initial training runs took 3.1 days. The final training run was run for twice as many iterations with ""all other hyper-parameters the same"" and used twice as much compute as this. So likely 6 days or ~150 hours, but they don't explicitly say whether they used the same hardware.",NVIDIA V100,,,"The BigCode project is an open-scientific collaboration working on the responsible development of large language models for code. This tech report describes the progress of the collaboration until December 2022, outlining the current state of the Personally Identifiable Information (PII) redaction pipeline, the experiments conducted to de-risk the model architecture, and the experiments investigating better preprocessing methods for the training data. We train 1.1B parameter models on the Java, JavaScript, and Python subsets of The Stack and evaluate them on the MultiPL-E text-to-code benchmark. We find that more aggressive filtering of near-duplicates can further boost performance and, surprisingly, that selecting files from repositories with 5+ GitHub stars deteriorates performance significantly. Our best model outperforms previous open-source multilingual code generation models (InCoder-6.7B and CodeGen-Multi-2.7B) in both left-to-right generation and infilling on the Java, JavaScript, and Python portions of MultiPL-E, despite being a substantially smaller model. All models are released under an OpenRAIL license at this https URL.",,Open weights (restricted use),,Confident,2025-02-14 21:51:28+00:00,"Multinational,United States of America,United States of America,United States of America,United States of America,United States of America,Multinational,United States of America,China,United States of America",,,,,,,,,True
VALL-E,"Audio,Speech",Microsoft,Industry,"Chengyi Wang, Sanyuan Chen, Yu Wu, Ziqiang Zhang, Long Zhou, Shujie Liu, Zhuo Chen, Yanqing Liu, Huaming Wang, Jinyu Li, Lei He, Sheng Zhao, Furu Wei",2023-01-05,Neural Codec Language Models are Zero-Shot Text to Speech Synthesizers,https://arxiv.org/abs/2301.02111,471.0,SOTA improvement,"""VALL-E significantly outperforms
the state-of-the-art zero-shot TTS system [Casanova et al., 2022b] in terms of speech naturalness and
speaker similarity, with +0.12 comparative mean option score (CMOS) and +0.93 similarity mean
option score (SMOS) improvement on LibriSpeech""",353000000.0,"""Both the AR model and the NAR model have the same transformer architecture with 12
layers, 16 attention heads, an embedding dimension of 1024, a feed-forward layer dimension of 4096, and a dropout of 0.1""

Ben's script says that's 353M parameters, using n_block 12, d_model 1024, d_ff 4096, encoder only False

https://github.com/bencottier/ml-parameter-count/blob/main/parameter_count.py",1.01e+19,,,"""The models are trained using 16 NVIDIA TESLA V100 32GB GPUs with a batch size of 6k acoustic
tokens per GPU for 800k steps""

353M * 800k * 6k * 6 = 1.01e19

16 V100s is 2080 teraFLOP or 2e15 FLOP so 1e19 would take 1.5 hours at 100% utilization or ~5 hours at 30%. Is that plausible?",LibriLight,"""60K hours of English speech with over 7000 unique speakers.""",820800000.0,"60k hours
~13,680 words/hour * 60,000 = 820800000 words
https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.3pbt0hfgv7pq",,,,NVIDIA V100,,Supervised,"We introduce a language modeling approach for text to speech synthesis (TTS). Specifically, we train a neural codec language model (called Vall-E) using discrete codes derived from an off-the-shelf neural audio codec model, and regard TTS as a conditional language modeling task rather than continuous signal regression as in previous work. During the pre-training stage, we scale up the TTS training data to 60K hours of English speech which is hundreds of times larger than existing systems. Vall-E emerges in-context learning capabilities and can be used to synthesize high-quality personalized speech with only a 3-second enrolled recording of an unseen speaker as an acoustic prompt. Experiment results show that Vall-E significantly outperforms the state-of-the-art zero-shot TTS system in terms of speech naturalness and speaker similarity. In addition, we find Vall-E could preserve the speaker's emotion and acoustic environment of the acoustic prompt in synthesis. See this https URL for demos of our work.",,Unreleased,,Speculative,2025-02-14 21:51:47+00:00,United States of America,,,,,,,,,True
SparseOPT-175B,Language,"Institute of Science and Technology Austria (ISTA),Neural Magic","Academia,Industry","Elias Frantar, Dan Alistarh",2023-01-02,SparseGPT: Massive Language Models Can Be Accurately Pruned in One-Shot,https://arxiv.org/abs/2301.00774,406.0,,,87500000000.0,,1.58e+23,,,,,this is a distillation of OPT; see OPT dataset,,,1.67,,,,,,"We show for the first time that large-scale generative pretrained transformer (GPT) family models can be pruned to at least 50% sparsity in one-shot, without any retraining, at minimal loss of accuracy. This is achieved via a new pruning method called SparseGPT, specifically designed to work efficiently and accurately on massive GPT-family models. We can execute SparseGPT on the largest available open-source models, OPT-175B and BLOOM-176B, in under 4.5 hours, and can reach 60% unstructured sparsity with negligible increase in perplexity: remarkably, more than 100 billion weights from these models can be ignored at inference time. SparseGPT generalizes to semi-structured (2:4 and 4:8) patterns, and is compatible with weight quantization approaches. The code is available at: this https URL.",SparseOPT-175B,Unreleased,,,2024-11-01 14:05:19+00:00,"Austria,United States of America",OPT-175B,,,,,,,,
DNA Fine-Tuned Language Model (DFLM),Biology,Tongji University,Academia,"Ying He , Qinhu Zhang , Siguo Wang , Zhanheng Chen , Zhen Cui ,
Zhen-Hao Guo, and De-Shuang Huang",2023-01-02,Predicting the Sequence Specificities of DNA-Binding Proteins by DNA Fine-Tuned Language Model With Decaying Learning Rates,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9751352,4.0,,,,,3.5e+18,,,"""The pre-training of Human genome language model is
resource-intensive (about 7-10 days on 2 NVIDIA TITAN X GPU).""

Assuming FP32 and 30% utilization

Estimate: (10*24*3600) s * 6.7e12 FLOP/s * 2 * 0.3 = 3.5e18",Human Reference Genome (GRCh38/hg38),"""DFLM mainly used two types of data sets, the unlabeled large-scale Genome Reference Consortium Human Build 38(GRCh38/hg38) [1] and about 500 labeled ChIP-seq data set [2]. The unlabeled large-scale genome data set hg38 was used to train a general Human Genome language model. The ChIP-seq data sets were used to train the DBP fine-tuning language model and classification model.""",,,,,,NVIDIA TITAN Xp,,,"DNA-binding proteins (DBPs) play vital roles in the regulation of biological systems. Although there are already many deep learning methods for predicting the sequence specificities of DBPs, they face two challenges as follows. Classic deep learning methods for DBPs prediction usually fail to capture the dependencies between genomic sequences since their commonly used one-hot codes are mutually orthogonal. Besides, these methods usually perform poorly when samples are inadequate. To address these two challenges, we developed a novel language model for mining DBPs using human genomic data and ChIP-seq datasets with decaying learning rates, named DNA Fine-tuned Language Model (DFLM). It can capture the dependencies between genome sequences based on the context of human genomic data and then fine-tune the features of DBPs tasks using different ChIP-seq datasets. First, we compared DFLM with the existing widely used methods on 69 datasets and we achieved excellent performance. Moreover, we conducted comparative experiments on complex DBPs and small datasets. The results show that DFLM still achieved a significant improvement. Finally, through visualization analysis of one-hot encoding and DFLM, we found that one-hot encoding completely cut off the dependencies of DNA sequences themselves, while DFLM using language models can well represent the dependency of DNA sequences. Source code are available at: https://github.com/Deep-Bioinfo/DFLM",,Unreleased,,Confident,2025-02-14 21:51:59+00:00,China,,,,,,,,,
AI Resume,,,,,2023-01-01,“AI 改简历”获备案审批，智联招聘将全场景应用“大模型”？,https://www.163.com/news/article/IPUPCUV000019UD6.html,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Nanbei Pavilion,,,,,2023-01-01,"BOSS直聘携大模型走进北航课堂，校企联合助力AI时代创新人才培养
",https://www.careersciencelab.com/ser-detail?id=56,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Hybrid H3-2.7B,Language,"Stanford University,University at Buffalo","Academia,Academia","Daniel Y. Fu, Tri Dao, Khaled K. Saab, Armin W. Thomas, Atri Rudra, Christopher Ré",2022-12-28,Hungry Hungry Hippos: Towards Language Modeling with State Space Models,https://arxiv.org/abs/2212.14052,271.0,SOTA improvement,Results table shows SOTA performance for some benchmarks,2700000000.0,,8.49e+20,,,,,,,,509.02,,,,,,"State space models (SSMs) have demonstrated state-of-the-art sequence modeling performance in some modalities, but underperform attention in language modeling. Moreover, despite scaling nearly linearly in sequence length instead of quadratically, SSMs are still slower than Transformers due to poor hardware utilization. In this paper, we make progress on understanding the expressivity gap between SSMs and attention in language modeling, and on reducing the hardware barrier between SSMs and attention. First, we use synthetic language modeling tasks to understand the gap between SSMs and attention. We find that existing SSMs struggle with two capabilities: recalling earlier tokens in the sequence and comparing tokens across the sequence. To understand the impact on language modeling, we propose a new SSM layer, H3, that is explicitly designed for these abilities. H3 matches attention on the synthetic languages and comes within 0.4 PPL of Transformers on OpenWebText. Furthermore, a hybrid 125M-parameter H3-attention model that retains two attention layers surprisingly outperforms Transformers on OpenWebText by 1.0 PPL. Next, to improve the efficiency of training SSMs on modern hardware, we propose FlashConv. FlashConv uses a fused block FFT algorithm to improve efficiency on sequences up to 8K, and introduces a novel state passing algorithm that exploits the recurrent properties of SSMs to scale to longer sequences. FlashConv yields 2× speedup on the long-range arena benchmark and allows hybrid language models to generate text 2.4× faster than Transformers. Using FlashConv, we scale hybrid H3-attention language models up to 2.7B parameters on the Pile and find promising initial results, achieving lower perplexity than Transformers and outperforming Transformers in zero- and few-shot learning on a majority of tasks in the SuperGLUE benchmark.",Hybrid H3-2.7B,Open weights (unrestricted),,,2024-11-01 14:04:56+00:00,"United States of America,United States of America",,,,,,,,,
OPT-IML (175B),Language,Meta AI,Industry,"Srinivasan Iyer, Xi Victoria Lin, Ramakanth Pasunuru, Todor Mihaylov, Daniel Simig, Ping Yu, Kurt Shuster, Tianlu Wang, Qing Liu, Punit Singh Koura, Xian Li, Brian O'Horo, Gabriel Pereyra, Jeff Wang, Christopher Dewan, Asli Celikyilmaz, Luke Zettlemoyer, Ves Stoyanov",2022-12-22,OPT-IML: Scaling Language Model Instruction Meta Learning through the Lens of Generalization,https://arxiv.org/abs/2212.12017,236.0,,,175000000000.0,,4.3e+23,,,"fine-tuned from OPT-175B (4.3e23) with an estimate 2.1e21 FLOP for fine-tuning. 
""During fine-tuning, our models saw approximately 2 billion tokens, which is only 0.6% of the pre-training budget of OPT""",OPT-IML Bench,"(fine-tuning dataset) ""To this end, we create OPT-IML Bench: a large benchmark for Instruction MetaLearning (IML) of 2000 NLP tasks consolidated into task categories from 8 existing benchmarks""",2000000000.0,"""During fine-tuning, our models saw approximately 2 billion tokens, which is only 0.6% of the pre-training budget of OPT""",,72.0,Table 3,NVIDIA A100,128.0,,"Recent work has shown that fine-tuning large pre-trained language models on a collection of tasks described via instructions, a.k.a. instruction-tuning, improves their zero and few-shot generalization to unseen tasks. However, there is a limited understanding of the performance trade-offs of different decisions made during the instruction-tuning process. These decisions include the scale and diversity of the instruction-tuning benchmark, different task sampling strategies, fine-tuning with and without demonstrations, training using specialized datasets for reasoning and dialogue, and finally, the fine-tuning objectives themselves. In this paper, we characterize the effect of instruction-tuning decisions on downstream task performance when scaling both model and benchmark sizes. To this end, we create OPT-IML Bench: a large benchmark for Instruction Meta-Learning (IML) of 2000 NLP tasks consolidated into task categories from 8 existing benchmarks, and prepare an evaluation framework to measure three types of model generalizations: to tasks from fully held-out categories, to held-out tasks from seen categories, and to held-out instances from seen tasks. Through the lens of this framework, we first present insights about instruction-tuning decisions as applied to OPT-30B and further exploit these insights to train OPT-IML 30B and 175B, which are instruction-tuned versions of OPT. OPT-IML demonstrates all three generalization abilities at both scales on four different evaluation benchmarks with diverse tasks and input formats -- PromptSource, FLAN, Super-NaturalInstructions, and UnifiedSKG. Not only does it significantly outperform OPT on all benchmarks but is also highly competitive with existing models fine-tuned on each specific benchmark. We release OPT-IML at both scales, together with the OPT-IML Bench evaluation framework.",,Open weights (non-commercial),,Likely,2025-02-14 21:52:20+00:00,United States of America,OPT-175B,2.1e+21,"""We fine-tune all 30B models on 64 40GB A100s, and 175B models on 128 40GB A100s"", no timeframe specified

fine-tuned on 2B tokens. 2B * 175B * 6 = 2.1e21

",,,,125.0,Table 3,
CaLM,Biology,University of Oxford,Academia,"Carlos Outeiral, Charlotte M. Deane",2022-12-19,Codon language embeddings provide strong signals for protein engineering,https://www.biorxiv.org/content/10.1101/2022.12.15.519894v1.full.pdf,8.0,SOTA improvement,"""We show that large language models trained on codons, instead of amino acid sequences, provide high-quality representations that outperform comparable state-of-the-art models across a variety of tasks. In some tasks, like species recognition, prediction of protein and transcript abundance, or melting point estimation, we show that a language model trained on codons outperforms every other published protein language model, including some that contain over 50 times more parameters"" [Abstract]",86000000.0,"""We trained a large language model with 86M parameters""",2.9e+19,,,"""4 NVIDIA Quadro RTX4000 GPUs for 40 days""

Calculation assuming FP32, utilization 30%:
= (40 * 24 * 3600) s * 7.1e12 FLOP/s * 0.3 * 4 GPU = 2.999808e+19

alternative calculation:
""Gradients were accumulated to an effective batch size of 1,000 examples, or approximately 256,000 tokens. ""
""(66,000 gradient steps, 14 full epochs)""

256000*66000*14*86000000*6=1.220567e+20",European Nucleotide Archive (ENA),"""The training set was constructed from the European Nucleotide Archive [39], with significant preprocessing to limit redundancy and save computational cost.""",2304000000.0,"""a dataset of 9M non-redundant and diverse cDNA sequences identified from whole-genome sequencing""

""Gradients were accumulated to an effective batch size of 1,000 examples, or approximately 256,000 tokens. ""

9000000*256000/1000=2304000000 tokens",14.0,960.0,"""The model reported in this work was trained on 4 NVIDIA Quadro
RTX4000 GPUs for 40 days (66,000 gradient steps, 14 full epochs)""",NVIDIA Quadro RTX 4000,4.0,,"Protein representations from deep language models have yielded state-of-the-art performance across many tasks in computational protein engineering. In recent years, progress has primarily focused on parameter count, with recent models’ capacities surpassing the size of the very datasets they were trained on. Here, we propose an alternative direction. We show that large language models trained on codons, instead of amino acid sequences, provide high-quality representations that outperform comparable state-of-the-art models across a variety of tasks.
In some tasks, like species recognition, prediction of protein and transcript abundance, or melting point estimation, we show that a language model trained on codons outperforms every other published protein language model, including some that contain over 50 times more parameters. These results suggest that, in addition to commonly studied scale and model complexity, the information content of biological data provides an orthogonal direction to improve the power of machine learning in biology.",,,,Likely,2025-02-14 21:52:35+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
text-embedding-ada-002,Language,OpenAI,Industry,,2022-12-15,New and improved embedding model,https://openai.com/index/new-and-improved-embedding-model/,,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
RT-1,Robotics,Google,Industry,"Anthony Brohan, Noah Brown, Justice Carbajal, Yevgen Chebotar, Joseph Dabis, Chelsea Finn, Keerthana Gopalakrishnan, Karol Hausman, Alex Herzog, Jasmine Hsu, Julian Ibarz, Brian Ichter, Alex Irpan, Tomas Jackson, Sally Jesmonth, Nikhil J Joshi, Ryan Julian, Dmitry Kalashnikov, Yuheng Kuang, Isabel Leal, Kuang-Huei Lee, Sergey Levine, Yao Lu, Utsav Malla, Deeksha Manjunath, Igor Mordatch, Ofir Nachum, Carolina Parada, Jodilyn Peralta, Emily Perez, Karl Pertsch, Jornell Quiambao, Kanishka Rao, Michael Ryoo, Grecia Salazar, Pannag Sanketi, Kevin Sayed, Jaspiar Singh, Sumedh Sontakke, Austin Stone, Clayton Tan, Huong Tran, Vincent Vanhoucke, Steve Vega, Quan Vuong, Fei Xia, Ted Xiao, Peng Xu, Sichun Xu, Tianhe Yu, Brianna Zitkovich",2022-12-13,RT-1: Robotics Transformer for Real-World Control at Scale,https://arxiv.org/abs/2212.06817,678.0,SOTA improvement,"""Across each category, we find that RT-1 outperforms the prior
models significantly. On seen tasks, RT-1 is able to perform 97% of the more than 200 instructions successfully, which is 25% more than BC-Z and 32% more than Gato. On unseen tasks, RT-1
shows it is capable of generalizing to novel instructions, performing 76% of the never-before-seen
instructions, 24% more than the next best baseline""",35000000.0,"""we also limit the size of the model compared to
the original publication, which was 1.2B parameters (resulting in on robot inference time of 1.9s),
to be of similar size to RT-1 (37M parameters for Gato vs. 35M for RT-1""

16M params for image tokenizer, 19M for the transformer",,,,,RT-1,"""We utilize a dataset that we gathered over the course of 17 months with a fleet of 13 robots, containing
∼130k episodes and over 700 tasks""

Episode is an example of robot following instructions",,,,,,,,Reinforcement learning,"By transferring knowledge from large, diverse, task-agnostic datasets, modern machine learning models can solve specific downstream tasks either zero-shot or with small task-specific datasets to a high level of performance. While this capability has been demonstrated in other fields such as computer vision, natural language processing or speech recognition, it remains to be shown in robotics, where the generalization capabilities of the models are particularly critical due to the difficulty of collecting real-world robotic data. We argue that one of the keys to the success of such general robotic models lies with open-ended task-agnostic training, combined with high-capacity architectures that can absorb all of the diverse, robotic data. In this paper, we present a model class, dubbed Robotics Transformer, that exhibits promising scalable model properties. We verify our conclusions in a study of different model classes and their ability to generalize as a function of the data size, model size, and data diversity based on a large-scale data collection on real robots performing real-world tasks. The project's website and videos can be found at this http URL",,Open weights (unrestricted),,Confident,2024-11-01 14:04:56+00:00,United States of America,,,,,,,,,
XiaoAI 6.0,,,,,2022-12-11,"小爱同学 6.0 正式发布：本地 AI 引擎全新升级，小米 13 / Pro 系列率先体验小爱建议

",https://www.ithome.com/0/660/360.htm,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
TranceptEve,Biology,"University of Oxford,Harvard Medical School","Academia,Academia","Pascal Notin, Lood Van Niekerk, Aaron W Kollasch, Daniel Ritter, Yarin Gal, Debora S. Marks",2022-12-10,TranceptEVE: Combining Family-specific and Family-agnostic Models of Protein Sequences for Improved Fitness Prediction,https://www.biorxiv.org/content/10.1101/2022.12.07.519495v1,,SOTA improvement,"""Besides its broader application scope, it achieves state-of- the-art performance for mutation effects prediction, both in terms of correlation with experimental assays and with clinical annotations from ClinVar.""",,,,,,,ProteinGym,,,,,,,,,,"Modeling the fitness landscape of protein sequences has historically relied on training models on family-specific sets of homologous sequences called Multiple Sequence Alignments. Many proteins are however difficult to align or have shallow alignments which limits the potential scope of alignment-based methods. Not subject to these limitations, large protein language models trained on non-aligned sequences across protein families have achieved increasingly high predictive performance – but have not yet fully bridged the gap with their alignment-based counterparts. In this work, we introduce TranceptEVE – a hybrid method between family-specific and family-agnostic models that seeks to build on the relative strengths from each approach. Our method gracefully adapts to the depth of the alignment, fully relying on its autoregressive transformer when dealing with shallow alignments and leaning more heavily on the family-specifc models for proteins with deeper alignments. Besides its broader application scope, it achieves state-of-the-art performance for mutation effects prediction, both in terms of correlation with experimental assays and with clinical annotations from ClinVar.",,,,Unknown,2024-10-21 15:22:55+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America",Tranception,,,,,,,,
Transformer-XL + FWL,Language,Google Research,Industry,"Kevin Clark, Kelvin Guu, Ming-Wei Chang, Panupong Pasupat, Geoffrey Hinton, Mohammad Norouzi",2022-12-05,Meta-Learning Fast Weight Language Models,https://arxiv.org/abs/2212.02475,8.0,,,257000000.0,"""For Transformer-XL,
we use the large model (257M parameters).""",,,,,WikiText-103,original Transformer-XL also trained on WikiText-103,103000000.0,,,,,,,,"Dynamic evaluation of language models (LMs) adapts model parameters at test time using gradient information from previous tokens and substantially improves LM performance. However, it requires over 3x more compute than standard inference. We present Fast Weight Layers (FWLs), a neural component that provides the benefits of dynamic evaluation much more efficiently by expressing gradient updates as linear attention. A key improvement over dynamic evaluation is that FWLs can also be applied at training time so the model learns to make good use of gradient updates. FWLs can easily be added on top of existing transformer models, require relatively little extra compute or memory to run, and significantly improve language modeling perplexity.",TransformerXL + FWL,Unreleased,,,2024-09-05 18:08:31+00:00,"Multinational,United States of America",,,"finetuned from TransformerXL. 

""To reduce the training cost, we add the FWLs on top of the publicly released pre-trained Transformer-XL model
and then fine-tune for 20K steps rather than training it from scratch.""",,,TransformerXL + FWL,,,
Whisper v2,Speech,OpenAI,Industry,"Alec Radford, Jong Wook Kim, Tao Xu, Greg Brockman, Christine McLeavey, Ilya Sutskever",2022-12-05,Robust Speech Recognition via Large-Scale Weak Supervision,"https://huggingface.co/openai/whisper-large-v2

https://arxiv.org/abs/2212.04356",2240.0,,,1550000000.0,1550M,1.1e+23,,,"""Compared to the Whisper large model, the large-v2 model is trained for 2.5x more epochs with added regularization for improved performance.""

We (roughly) estimated Whisper v1 as 4.65e22. 2.5x that is 1.16e23 or ~1.1e23",Unspecified unreleased,"""The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages.""",9302400000.0,"""When scaled to 680,000 hours of multilingual and multitask
supervision, the resulting models generalize well
to standard benchmarks and are often competitive
with prior fully supervised results but in a zeroshot transfer setting without the need for any finetuning.""


13,680 words/h (estimate) * 680,000h = 9,302,400,000 words",7.5,,,,,Self-supervised learning,"Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains without the need for fine-tuning.

Whisper was proposed in the paper Robust Speech Recognition via Large-Scale Weak Supervision by Alec Radford et al. from OpenAI. The original code repository can be found here.

Compared to the Whisper large model, the large-v2 model is trained for 2.5x more epochs with added regularization for improved performance.",,Open weights (unrestricted),,Likely,2025-02-19 18:54:01+00:00,United States of America,,,,,,,1024.0,Table 18,
Vega v2,Language,"Wuhan University,JD Explore Academy,Shanghai AI Lab,Nanyang Technological University,The University of Sydney,Washington University in St Louis,Chongqing University of Posts and Telecommunications","Academia,Academia,Academia","Qihuang Zhong, Liang Ding, Yibing Zhan, Yu Qiao, Yonggang Wen, Li Shen, Juhua Liu, Baosheng Yu, Bo Du, Yixin Chen, Xinbo Gao, Chunyan Miao, Xiaoou Tang, Dacheng Tao",2022-12-04,Toward Efficient Language Model Pretraining and Downstream Adaptation via Self-Evolution: A Case Study on SuperGLUE,https://arxiv.org/pdf/2212.01853,39.0,SOTA improvement,Highest score at SuperGLUE leaderboard version 2.0 in terms of RTE (Recognizing Textual Entailment-Accuracy),6000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 12:57:37+00:00,"China,China,Singapore",,,,,,,,,
Transformer + GFM,Language,Nanjing University,Academia,"Hao Yu, Jianxin Wu",2022-12-01,"""Compressing Transformers: Features Are Low-Rank, but Weights Are Not""",https://cs.nju.edu.cn/wujx/paper/AAAI2023_AFM.pdf,,,,185000000.0,,8.039999999999999e+18,,,,WikiText-103,"""We also evaluate our approach in the WikiText-103 (Merity et al. 2017) dataset. WikiText-103 is composed of shuffled Wikipedia articles where the context carries across sentences.""",,,,,,,,,"Transformer and its variants achieve excellent results in various computer vision and natural language processing tasks, but high computational costs and reliance on large training datasets restrict their deployment in resource-constrained settings. Low-rank approximation of model weights has been
effective in compressing CNN models, but its application to transformers has been less explored and is less effective. Existing methods require the complete dataset to finetune compressed models, which are both time-consuming and data-hungry. This paper reveals that the features (i.e., activations) are low-rank, but model weights are surprisingly not
low-rank. Hence, AAFM is proposed, which adaptively determines the compressed model structure and locally compresses each linear layer’s output features rather than the model weights. A second stage, GFM, optimizes the entire compressed network holistically. Both AAFM and GFM only
use few training samples without labels, that is, they are fewshot, nsupervised, fast and effective. For example, with only 2K images without labels, 33% of the parameters are removed in DeiT-B with 18.8% relative throughput increase, but only a 0.23% accuracy loss for ImageNet recognition. The proposed
methods are successfully applied to the language modeling task in NLP, too. Besides, the few-shot compressed models generalize well in downstream tasks.",Transformer + GFM,Unreleased,,,2025-01-10 16:31:02+00:00,China,,,,,,,,,
ZymCTRL,Biology,"Basecamp Research,Friedrich-Alexander-Universität,University of Girona","Academia,Academia","Geraldene Munsamy, Sebastian Lindner, Philipp Lorenz, Noelia Ferruz",2022-12-01,ZymCTRL: a conditional language model for the controllable generation of artificial enzymes,https://www.mlsb.io/papers_2022/ZymCTRL_a_conditional_language_model_for_the_controllable_generation_of_artificial_enzymes.pdf,11.0,,,738000000.0,"""ZymCTRL contains 36 layers totalling 738M parameters""",5.05e+21,,,"""We trained for 179,000 steps on 48 NVIDIA A100s 80GB for about 15,000 GPU hours""

15000  * 3600 * 312 teraFLOPS * 0.3 (utilization assumption) = 5.05e21",BRENDA,"""ZymCTRL was trained on the BRENDA database, a dataset of 37M enzyme sequences classified according to their enzymatic class""",13033458285.12,"36,276,604 sequences after filtering, and training uses 90% of these. From figure 6, average sequence is 399.2 amino acids long.
36,276,604 * 0.9 * 399.2 = 13.0B amino acids",8.0,,,NVIDIA A100,,,"The design of custom-tailored proteins has the potential to provide novel and
groundbreaking solutions in many fields, including molecular medicine or environmental sciences. Among protein classes, enzymes are particularly attractive because their complex active sites can accelerate chemical transformations by several orders of magnitude. Since enzymes are biodegradable nanoscopic materials, they hold an unmatched promise as sustainable, large-scale industrial catalysts. Motivated by the enormous success of language models in designing novel yet nature-like proteins, we hypothesised that an enzyme-specific language model could provide new opportunities to design purpose-built artificial enzymes. Here, we describe ZymCTRL, a conditional language model trained on the BRENDA database of enzymes, which generates enzymes of a specific enzymatic class upon a user prompt. ZymCTRL generates artificial enzymes distant from natural ones while their intended functionality matches predictions from orthogonal methods. We release the model to the community.",,,,Confident,2024-12-02 18:23:34+00:00,"United Kingdom of Great Britain and Northern Ireland,Germany,Spain",,,,,,,,,
DeepNash,Games,DeepMind,Industry,"Julien Perolat, Bart de Vylder, Daniel Hennes, Eugene Tarassov, Florian Strub, Vincent de Boer, Paul Muller, Jerome T. Connor, Neil Burch, Thomas Anthony, Stephen McAleer, Romuald Elie, Sarah H. Cen, Zhe Wang, Audrunas Gruslys, Aleksandra Malysheva, Mina Khan, Sherjil Ozair, Finbarr Timbers, Toby Pohlen, Tom Eccles, Mark Rowland, Marc Lanctot, Jean-Baptiste Lespiau, Bilal Piot, Shayegan Omidshafiei, Edward Lockhart, Laurent Sifre, Nathalie Beauguerlange, Remi Munos, David Silver, Satinder Singh, Demis Hassabis, Karl Tuyls",2022-12-01,Mastering the game of Stratego with model-free multiagent reinforcement learning,https://www.science.org/stoken/author-tokens/ST-887/full,147.0,SOTA improvement,"DeepNash beat existing state-of-the-art AI methods in Stratego and achieved a year-to-date (2022) and all-time top-three ranking on the Gravon games platform, competing with human expert players.",,,,,,"""The final agent was trained using 768 MXU’s (matrix multiplication unit) for Learners and
256 MXU’s for Actors (using 256 TPU’s in total).""
Some more details in Table S1 (in supplementary materials)",,,,"768 * 7.21M trajectories? (Table S1)

768 * 7.21M = 5,537,280,000

https://www.science.org/doi/suppl/10.1126/science.add4679/suppl_file/science.add4679_sm.pdf",,,,,,Reinforcement learning,"We introduce DeepNash, an autonomous agent that plays the imperfect information game Stratego at a human expert level. Stratego is one of the few iconic board games that artificial intelligence (AI) has not yet mastered. It is a game characterized by a twin challenge: It requires long-term strategic thinking as in chess, but it also requires dealing with imperfect information as in poker. The technique underpinning DeepNash uses a game-theoretic, model-free deep reinforcement learning method, without search, that learns to master Stratego through self-play from scratch. DeepNash beat existing state-of-the-art AI methods in Stratego and achieved a year-to-date (2022) and all-time top-three ranking on the Gravon games platform, competing with human expert players.",,,,Unknown,2024-11-01 14:04:57+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
GPT-3.5 Turbo,Language,OpenAI,Industry,"John Schulman, Barret Zoph, Christina Kim, Jacob Hilton, Jacob Menick, Jiayi Weng, Juan Felipe Ceron Uribe, Liam Fedus, Luke Metz, Michael Pokorny, Rapha Gontijo Lopes, Shengjia Zhao, Arun Vijayvergiya, Eric Sigler, Adam Perelman, Chelsea Voss, Mike Heaton, Joel Parish, Dave Cummings, Rajeev Nayak, Valerie Balcom, David Schnurr, Tomer Kaftan, Chris Hallacy, Nicholas Turley, Noah Deutsch, Vik Goel, Jonathan Ward, Aris Konstantinidis, Wojciech Zaremba, Long Ouyang, Leonard Bogdonoff, Joshua Gross, David Medina, Sarah Yoo, Teddy Lee, Ryan Lowe, Dan Mossing, Joost Huizinga, Roger Jiang, Carroll Wainwright, Diogo Almeida, Steph Lin, Marvin Zhang, Kai Xiao, Katarina Slama, Steven Bills, Alex Gray, Jan Leike, Jakub Pachocki, Phil Tillet, Shantanu Jain, Greg Brockman, Nick Ryder, Alex Paino, Qiming Yuan, Clemens Winter, Ben Wang, Mo Bavarian, Igor Babuschkin, Szymon Sidor, Ingmar Kanitscheider, Mikhail Pavlov, Matthias Plappert, Nik Tezak, Heewoo Jun, William Zhuk, Vitchyr Pong, Lukasz Kaiser, Jerry Tworek, Andrew Carr, Lilian Weng, Sandhini Agarwal, Karl Cobbe, Vineet Kosaraju, Alethea Power, Stanislas Polu, Jesse Han, Raul Puri, Shawn Jain, Benjamin Chess, Christian Gibson, Oleg Boiko, Emy Parparita, Amin Tootoonchian, Kyle Kosic, Christopher Hesse",2022-11-30,"A fast, inexpensive model for simple tasks",https://platform.openai.com/docs/models,,"Historical significance,Significant use","https://www.reuters.com/technology/chatgpt-sets-record-fastest-growing-user-base-analyst-note-2023-02-01/

was the default free model in ChatGPT, so likely one of the most popular models in existence",20000000000.0,20B parameters according to Table 1 in Microsoft's CODEFUSION paper: https://arxiv.org/pdf/2310.17680.pdf,,,,,Unspecified unreleased,,,,,,,,,,,,API access,,Speculative,2025-02-03 19:59:46+00:00,United States of America,,,,Azure AI,,,,,
ALM 1.0,Language,Beijing Academy of Artificial Intelligence / BAAI,Academia,,2022-11-28,ALM 1.0,https://github.com/FlagAI-Open/FlagAI/blob/master/examples/ALM/README.md,,SOTA improvement,SOTA results on Arabic-language benchmark ALUE.,335000000.0,335M parameters: https://github.com/FlagAI-Open/FlagAI/blob/master/examples/ALM/README.md,,,,,ArabicText 2022,"""ALM-1.0 uses the largest open-source Arabic text dataset ArabicText 2022. You can check ArabicText 2022 for more information.""",,,,,,,,,,,,,Speculative,2025-01-10 16:31:02+00:00,China,,,,,,,,,
GPT-3.5,Language,OpenAI,Industry,,2022-11-28,,https://platform.openai.com/docs/models/gpt-3-5,,"Historical significance,Significant use,SOTA improvement,Training cost",,,"Parameter count may be 175B based on OpenAI's statements that text-davinci-003 is in the GPT-3.5 series of models. It was also stated to be 175B in the Microsoft CODEFUSION paper, but the paper was reportedly retracted because the authors did not know the parameter count.",2.578e+24,,9.899999999999999e+24,https://colab.research.google.com/drive/1QSxa8YCWjEBQU7mrXLhw6TP1VX5oqgdW#scrollTo=Gt6Z6oZ26clI,,,,,,,,NVIDIA A100 SXM4 40 GB,,Reinforcement learning,,,API access,,Speculative,2025-02-19 18:54:45+00:00,United States of America,,,,,,,,,
DiT-XL/2 + Discriminator Guidance,Image generation,"Korea Advanced Institute of Science and Technology (KAIST),NAVER","Academia,Industry","Dongjun Kim, Yeongmin Kim, Se Jung Kwon, Wanmo Kang, Il-Chul Moon",2022-11-28,Refining Generative Process with Discriminator Guidance in Score-based Diffusion Models,https://arxiv.org/abs/2211.17091v4,68.0,SOTA improvement,"""Using our algorithm, we achive state-of-the-art results on ImageNet 256x256 with FID 1.83 and recall 0.64, similar to the validation data's FID (1.68) and recall (0.66)""",,,,,,"This is a finetune of DiT-XL/2, so its compute won't be much higher.",,,,,10.0,,,NVIDIA A100,,,"The proposed method, Discriminator Guidance, aims to improve sample generation of pre-trained diffusion models. The approach introduces a discriminator that gives explicit supervision to a denoising sample path whether it is realistic or not. Unlike GANs, our approach does not require joint training of score and discriminator networks. Instead, we train the discriminator after score training, making discriminator training stable and fast to converge. In sample generation, we add an auxiliary term to the pre-trained score to deceive the discriminator. This term corrects the model score to the data score at the optimal discriminator, which implies that the discriminator helps better score estimation in a complementary way. Using our algorithm, we achive state-of-the-art results on ImageNet 256x256 with FID 1.83 and recall 0.64, similar to the validation data's FID (1.68) and recall (0.66). We release the code at this https URL.",,,,Unknown,2025-01-21 01:27:10+00:00,"Korea (Republic of),Korea (Republic of)",DiT-XL/2,,,,,,,,
Discriminator Guidance,Image generation,"Korea Advanced Institute of Science and Technology (KAIST),NAVER","Academia,Industry","Dongjun Kim, Yeongmin Kim, Se Jung Kwon, Wanmo Kang, Il-Chul Moon",2022-11-28,Refining Generative Process with Discriminator Guidance in Score-based Diffusion Models,https://arxiv.org/abs/2211.17091v4,68.0,SOTA improvement,"""Using our algorithm, we achive state-of-the-art results on ImageNet 256x256 with FID 1.83 and recall 0.64, similar to the validation data's FID (1.68) and recall (0.66).""
https://paperswithcode.com/paper/refining-generative-process-with",,,2.1570000001e+20,,,481 hours * 312 TFLOPS (A100) * 40% utilization,,,,,10.0,481.0,Table 6,NVIDIA A100 PCIe,,,"The proposed method, Discriminator Guidance, aims to improve sample generation of pre-trained diffusion models. The approach introduces a discriminator that gives explicit supervision to a denoising sample path whether it is realistic or not. Unlike GANs, our approach does not require joint training of score and discriminator networks. Instead, we train the discriminator after score training, making discriminator training stable and fast to converge. In sample generation, we add an auxiliary term to the pre-trained score to deceive the discriminator. This term corrects the model score to the data score at the optimal discriminator, which implies that the discriminator helps better score estimation in a complementary way. Using our algorithm, we achive state-of-the-art results on ImageNet 256x256 with FID 1.83 and recall 0.64, similar to the validation data's FID (1.68) and recall (0.66).",,Open weights (non-commercial),,Confident,2025-02-14 21:52:46+00:00,"Korea (Republic of),Korea (Republic of)",,,,,,,,,
CICERO,Games,Meta AI,Industry,"Anton Bakhtin, Noam Brown, Emily Dinan, Gabriele Farina, Colin Flaherty, Daniel Fried, Andrew Goff, Jonathan Gray, Hengyuan Hu, Athul Paul Jacob, Mojtaba Komeili, Karthik Konath, Minae Kwon, Adam Lerer, Mike Lewis, Alexander H. Miller, Sasha Mitts, Adithya Renduchintala, Stephen Roller, Dirk Rowe, Weiyan Shi, Joe Spisak, Alexander Wei, David Wu, Hugh Zhang, Markus Zijlstra",2022-11-22,Human-level play in the game of Diplomacy by combining language models with strategic reasoning,https://www.science.org/doi/10.1126/science.ade9097,274.0,SOTA improvement,"""We introduce Cicero, the first AI agent to achieve human-level performance in Diplomacy""",,"""We took R2C2 (22) as our base model – a 2.7B parameter Transformer-based (23) encoder-decoder model pre-trained on text from the Internet using a BART de-noising objective (24).""",,,,,WebDiplomacy,,,"""We obtained a dataset of 125,261 games of Diplomacy played online at webDiplomacy.net. Of these, 40,408 games contained dialogue, with a total of 12,901,662 messages exchanged between players. Player accounts were de-identified and automated redaction of personally identifiable information (PII) was performed by webDiplomacy. We refer to this dataset hereafter as WebDiplomacy .""",,,,,,,,,Open weights (non-commercial),,Unknown,2024-11-01 14:04:57+00:00,United States of America,,,,,,,,,
CLUE,Recommendation,"Naver Clova,Naver AI Lab","Industry,Industry","Kyuyong Shin, Hanock Kwak, Su Young Kim, Max Nihlen Ramstrom, Jisu Jeong, Jung-Woo Ha, Kyung-Min Kim",2022-11-22,Scaling Law for Recommendation Models: Towards General-purpose User Representations,https://arxiv.org/abs/2111.11294,,,,160000000.0,160m,3.456e+18,,,"using grpah reader on Figure 2 b for the upper right point: 
0.04 PF-days * 10^15 FLOPS/s* 3600s*24h=3456000000000000000

counting operations: =160000000.00*50743870312*6=4.871411549952 × 10^19

""The computation (PF-days) is calculated as 6 × # of parameters × batch size × # of training steps × sequence length divided by one PF-day = 8.64 × 10^19. We train all models for 100,000 steps.""

",,,50743870312.0,"Pre-training:
We construct a sufficiently large-scale dataset with more
than 50B (50741643225) behavior tokens collected over 2 years from search
engine and e-commerce platform.
Number of behavior tokens 50,741,643,225 (Appendix 1)
Downstream:
Books: We collect 1,298,489 review logs of 100,000 unique
users and 504,572 unique books.
Clothing: We collect 928,598 review logs of 100,000 unique
users and 314,943 unique clothing, shoes, and jewelry.

50741643225+1298489+928598=50743870312",8.0,168.0,"We shuffle the dataset at every epoch and train the model for
8 epochs, where the transfer performance begins to plateau.
The total training time takes 7 days on 64 V100 GPUs. 

",NVIDIA V100,64.0,,"Recent advancement of large-scale pretrained models such as BERT, GPT-3, CLIP, and Gopher, has shown astonishing achievements across various task domains. Unlike vision recognition and language models, studies on general-purpose user representation at scale still remain underexplored. Here we explore the possibility of general-purpose user representation learning by training a universal user encoder at large scales. We demonstrate that the scaling law is present in user representation learning areas, where the training error scales as a power-law with the amount of computation. Our Contrastive Learning User Encoder (CLUE), optimizes task-agnostic objectives, and the resulting user embeddings stretch our expectation of what is possible to do in various downstream tasks. CLUE also shows great transferability to other domains and companies, as performances on an online experiment shows significant improvements in Click-Through-Rate (CTR). Furthermore, we also investigate how the model performance is influenced by the scale factors, such as training data size, model capacity, sequence length, and batch size. Finally, we discuss the broader impacts of CLUE in general.",,,,Likely,2025-02-17 19:58:00+00:00,"Korea (Republic of),Korea (Republic of)",,,,,,,256.0,"CLUE is trained with 160M parameters, sequence length (128), and batch size (256).",
scFormer,Biology,"University of Toronto,Vector Institute,University Health Network,Microsoft Research","Academia,Academia,Industry","Haotian Cui, Chloe Wang, Hassaan Maan, Nan Duan, Bo Wang",2022-11-22,scFormer: A Universal Representation Learning Approach for Single-Cell Data Using Transformers,https://www.biorxiv.org/content/10.1101/2022.11.20.517285v1.abstract,3.0,,,,,,,,,,,1040000001.000002,"Datapoint calculation breakdown:

Cortex: 3,005 × 19,972 = 60,099,860
PBMC 8K: 7,982 × 3,346 = 26,707,772
Spleen 17K: 17,001 × 13,553 = 230,414,553
Immune Human: 33,506 × 12,303 = 412,878,918
Pancreas: 16,382 × 19,093 = 312,934,046

Total: 60,099,860 + 26,707,772 + 230,414,553 + 412,878,918 + 312,934,046 = 1.04 × 10⁹",30.0,,,,,,,,,,Unverified,2025-01-30 05:04:28+00:00,"Canada,Canada,Canada,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
AR-LDM,Image generation,"Alibaba,University of Waterloo,Vector Institute","Industry,Academia,Academia","Xichen Pan, Pengda Qin, Yuhong Li, Hui Xue, Wenhu Chen",2022-11-20,Synthesizing Coherent Story with Auto-Regressive Latent Diffusion Models,https://arxiv.org/abs/2211.10950,51.0,SOTA improvement,"The first latent diffusion model for coherent visual story synthesizing.
""Quantitative results show that AR-LDM achieves SoTA FID scores on PororoSV, FlintstonesSV, and the newly introduced challenging dataset VIST containing natural images""",1500000000.0,Table 1,5.1e+20,,,8 NVIDIA A100 GPUs for 8 days,,,,"PororoSV, FlintstonesSV and VIST. All storytelling datasets, sizes would be possible to look up.",50.0,194.0,8 NVIDIA A100 GPUs for 8 days,NVIDIA A100,,,"Conditioned diffusion models have demonstrated state-of-the-art text-to-image synthesis capacity. Recently, most works focus on synthesizing independent images; While for real-world applications, it is common and necessary to generate a series of coherent images for story-stelling. In this work, we mainly focus on story visualization and continuation tasks and propose AR-LDM, a latent diffusion model auto-regressively conditioned on history captions and generated images. Moreover, AR-LDM can generalize to new characters through adaptation. To our best knowledge, this is the first work successfully leveraging diffusion models for coherent visual story synthesizing. Quantitative results show that AR-LDM achieves SoTA FID scores on PororoSV, FlintstonesSV, and the newly introduced challenging dataset VIST containing natural images. Large-scale human evaluations show that AR-LDM has superior performance in terms of quality, relevance, and consistency.",,Unreleased,,Confident,2025-02-07 01:08:21+00:00,"China,Canada,Canada",Stable Diffusion (LDM-KL-8-G),,,,,,,,
Fusion in Encoder,Language,Samsung,Industry,"Akhil Kedia, Mohd Abbas Zaidi, Haejun Lee",2022-11-18,FiE: Building a Global Probability Space by Leveraging Early Fusion in Encoder for Open-Domain Question Answering,https://arxiv.org/abs/2211.10147,8.0,SOTA improvement,"""Using our proposed method, we outperform the current state-of-the-art method by 2.5 Exact Match score on the Natural Question dataset while using only 25% of parameters and 35% of the latency during inference, and 4.4 Exact Match on WebQuestions dataset""",330000000.0,330M,1.3e+20,,,"""The experiments were run on 8x80GB Nvidia A100s with 800GB RAM and 4x32-core CPUs, and each experiment took around 1 day for NQ and 2 days for TriviaQA with large models. Inference was run on the same system, and took 2 minutes.""

2 days * 24 * 3600 * 8 * 312 teraflop/s * 0.3 utilization = 1.3e20",TriviaQA,,,79k per table 11 (probably number of question-answer pairs),,48.0,2 days,NVIDIA A100 SXM4 80 GB,,,"Generative models have recently started to outperform extractive models in Open Domain Question Answering, largely by leveraging their decoder to attend over multiple encoded passages and combining their information. However, generative models tend to be larger than extractive models due to the need for a decoder, run slower during inference due to auto-regressive decoder beam search, and their generated output often suffers from hallucinations. We propose to extend transformer encoders with the ability to fuse information from multiple passages, using global representation to provide cross-sample attention over all tokens across samples. Furthermore, we propose an alternative answer span probability calculation to better aggregate answer scores in the global space of all samples. Using our proposed method, we outperform the current state-of-the-art method by 2.5 Exact Match score on the Natural Question dataset while using only 25% of parameters and 35% of the latency during inference, and 4.4 Exact Match on WebQuestions dataset. When coupled with synthetic data augmentation, we outperform larger models on the TriviaQA dataset as well. The latency and parameter savings of our method make it particularly attractive for open-domain question answering, as these models are often compute-intensive.",,,,Likely,2025-02-14 21:53:14+00:00,Korea (Republic of),,,,,,,,,
Galactica,"Language,Biology",Meta AI,Industry,"Ross Taylor, Marcin Kardas, Guillem Cucurull, Thomas Scialom, Anthony Hartshorn, Elvis Saravia, Andrew Poulton, Viktor Kerkez, Robert Stojnic",2022-11-16,Galactica: A Large Language Model for Science,https://arxiv.org/abs/2211.09085,599.0,SOTA improvement,"""We outperform existing models on a range of scientific tasks. On technical knowledge probes such as LaTeX equations, Galactica outperforms the latest GPT-3 by 68.2% versus 49.0%. Galactica also performs well on reasoning, outperforming Chinchilla on mathematical MMLU by 41.3% to 35.7%, and PaLM 540B on MATH""",120000000000.0,"""The largest 120B model we train runs on a single NVIDIA A100 node""",3.24e+23,,,"Authors state the model is trained on 450b tokens. Using 6 FLOP/token/parameter, this is 6*120b*450b = 3.24e23",Galactica Corpus,"""Our corpus consists of 106 billion tokens from papers, reference material, encyclopedias and other scientific sources. We combine natural language sources, such as papers and textbooks, and natural sequences, such as protein sequences and chemical formulae. We process LATEX where we can capture it, and also include academic code to capture computational science""",106000000000.0,"""Total dataset size = 106 billion tokens""",4.0,,,NVIDIA A100 SXM4 80 GB,128.0,Self-supervised learning,"Information overload is a major obstacle to scientific progress. The explosive growth in scientific literature and data has made it ever harder to discover useful insights in a large mass of information. Today scientific knowledge is accessed through search engines, but they are unable to organize scientific knowledge alone. In this paper we introduce Galactica: a large language model that can store, combine and reason about scientific knowledge. We train on a large scientific corpus of papers, reference material, knowledge bases and many other sources. We outperform existing models on a range of scientific tasks. On technical knowledge probes such as LaTeX equations, Galactica outperforms the latest GPT-3 by 68.2% versus 49.0%. Galactica also performs well on reasoning, outperforming Chinchilla on mathematical MMLU by 41.3% to 35.7%, and PaLM 540B on MATH with a score of 20.4% versus 8.8%. It also sets a new state-of-the-art on downstream tasks such as PubMedQA and MedMCQA dev of 77.6% and 52.9%. And despite not being trained on a general corpus, Galactica outperforms BLOOM and OPT-175B on BIG-bench. We believe these results demonstrate the potential for language models as a new interface for science. We open source the model for the benefit of the scientific community.",,Open weights (non-commercial),,Likely,2025-02-14 21:53:19+00:00,United States of America,,,,,,,2000000.0,"Table 1: batch size 2M, warmup 1.1B (out of 450B tokens)",True
Luminous Sparse,Language,"Aleph Alpha,Graphcore","Industry,Industry",,2022-11-16,,https://www.graphcore.ai/posts/graphcore-and-aleph-alpha-demonstrate-80-sparsified-ai-model,,,,2600000000.0,,,,,,,,,,,,,,,,"Graphcore and our partner Aleph Alpha are unveiling a significant advance in AI compute efficiency, with the sparsification of a 13bn parameter model down to just 2.6bn parameters.

The advanced technique, which removes around 80% of the model’s weights while retaining most of its capabilities, utilizes the IPU’s support for point sparse matrix multiplications - a characteristic of its made-for-AI architecture.",,Hosted access (no API),,Confident,2024-09-16 00:20:05+00:00,"Germany,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
EVA-01,Vision,"Beijing Academy of Artificial Intelligence / BAAI,Huazhong University of Science and Technology,Zhejiang University,Beijing Institute of Technology","Academia,Academia,Academia,Academia","Yuxin Fang, Wen Wang, Binhui Xie, Quan Sun, Ledell Wu, Xinggang Wang, Tiejun Huang, Xinlong Wang, Yue Cao",2022-11-14,EVA: Exploring the Limits of Masked Visual Representation Learning at Scale,https://arxiv.org/abs/2211.07636,509.0,SOTA improvement,"from abstract 'Via this pretext task, we can efficiently scale up EVA to one billion parameters, and sets new records on a broad range of representative vision downstream tasks, such as image recognition, video action recognition, object detection, instance segmentation and semantic segmentation without heavy supervised training.'",1011000000.0,1011M from table 3,1.501e+22,,,"flops = (128) * (3.12e14) * (14.5 * 24 * 3600) * (0.3) = 1.501e22
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

from Table 3, time and num gpus, GPU model is on page 4 (A100), precision is fp16 and likely utilizes tensor cores","ImageNet21k,COCO,Conceptual Captions 12M (CC12M),Conceptual Captions (CC3M)","from table 3 : ImageNet-21K, CC12M, CC3M, Object365, COCO, ADE",29600000.0,from table 3: 29.6M images,150.0,348.0,from Table 3 14.5 days = 348 hours,NVIDIA A100 SXM4 40 GB,128.0,Self-supervised learning,"We launch EVA, a vision-centric foundation model to explore the limits of visual representation at scale using only publicly accessible data. EVA is a vanilla ViT pre-trained to reconstruct the masked out image-text aligned vision features conditioned on visible image patches. Via this pretext task, we can efficiently scale up EVA to one billion parameters, and sets new records on a broad range of representative vision downstream tasks, such as image recognition, video action recognition, object detection, instance segmentation and semantic segmentation without heavy supervised training. Moreover, we observe quantitative changes in scaling EVA result in qualitative changes in transfer learning performance that are not present in other models. For instance, EVA takes a great leap in the challenging large vocabulary instance segmentation task: our model achieves almost the same state-of-the-art performance on LVISv1.0 dataset with over a thousand categories and COCO dataset with only eighty categories. Beyond a pure vision encoder, EVA can also serve as a vision-centric, multi-modal pivot to connect images and text. We find initializing the vision tower of a giant CLIP from EVA can greatly stabilize the training and outperform the training from scratch counterpart with much fewer samples and less compute, providing a new direction for scaling up and accelerating the costly training of multi-modal foundation models. To facilitate future research, we release all the code and billion-scale model.",,Open weights (unrestricted),,Confident,2025-02-14 21:53:24+00:00,"China,China,China,China",,,,,,,,,
AltCLIP_M9,"Multimodal,Language,Vision",Beijing Academy of Artificial Intelligence / BAAI,Academia,"Zhongzhi Chen, Guang Liu, Bo-Wen Zhang, Fulong Ye, Qinghong Yang, Ledell Wu",2022-11-12,AltCLIP: Altering the Language Encoder in CLIP for Extended Language Capabilities,https://arxiv.org/abs/2211.06679,63.0,SOTA improvement,"""We set new state-of-the-art performances on a bunch of tasks including ImageNet-CN, Flicker30kCN, COCO-CN and XTD""",,,,,,,"Conceptual Captions (CC3M),LAION-400M,TSL2019,OPUS,WuDao Corpora,LAION-2B",,,,10.0,,,,,,"In this work, we present a conceptually simple and effective method to train a strong bilingual/multilingual multimodal representation model. Starting from the pre-trained multimodal representation model CLIP released by OpenAI, we altered its text encoder with a pre-trained multilingual text encoder XLM-R, and aligned both languages and image representations by a two-stage training schema consisting of teacher learning and contrastive learning. We validate our method through evaluations of a wide range of tasks. We set new state-of-the-art performances on a bunch of tasks including ImageNet-CN, Flicker30k-CN, COCO-CN and XTD. Further, we obtain very close performances with CLIP on almost all tasks, suggesting that one can simply alter the text encoder in CLIP for extended capabilities such as multilingual understanding. Our models and code are available at this https URL.",,Open weights (unrestricted),,Unknown,2024-11-01 14:04:56+00:00,China,CLIP (ViT L/14@336px),,,,,,,,
Innovative Drug-like Molecule Generation from,Biology,"University of Pittsburgh,Carnegie Mellon University (CMU)","Academia,Academia","Haotian Zhang, Linxiaoyi Wan",2022-11-12,Innovative Drug-like Molecule Generation from Flow-based Generative Model,https://arxiv.org/abs/2211.06566,,,,,,,,,,,,1000000.9999999997,"Total data points = 50,000 binding structures × 20 atoms/ligand = 1,000,000 data points
[Final estimate: 1.0e6]",,,,,,,"To design a drug given a biological molecule by using deep learning methods, there are many successful models published recently. People commonly used generative models to design new molecules given certain protein. LiGAN was regarded as the baseline of deep learning model which was developed on convolutional neural networks. Recently, GraphBP showed its ability to predict innovative ""real"" chemicals that the binding affinity outperformed with traditional molecular docking methods by using a flow-based generative model with a graph neural network and multilayer perception. However, all those methods regarded proteins as rigid bodies and only include a very small part of proteins related to binding. However, the dynamics of proteins are essential for drug binding. Based on GraphBP, we proposed to generate more solid work derived from protein data bank. The results will be evaluated by validity and binding affinity by using a computational chemistry algorithm.",,,,Unverified,2025-01-30 05:04:24+00:00,"United States of America,United States of America",,,,,,,,,
InternImage,Vision,"Shanghai AI Lab,Tsinghua University,Nanjing University,SenseTime,Chinese University of Hong Kong (CUHK)","Academia,Academia,Academia,Industry,Academia","Wenhai Wang, Jifeng Dai, Zhe Chen, Zhenhang Huang, Zhiqi Li, Xizhou Zhu, Xiaowei Hu, Tong Lu, Lewei Lu, Hongsheng Li, Xiaogang Wang, Yu Qiao",2022-11-10,InternImage: Exploring Large-Scale Vision Foundation Models with Deformable Convolutions,https://arxiv.org/abs/2211.05778,463.0,SOTA improvement,"""InternImage-H achieved a new record 65.4 mAP on COCO test-dev and 62.9 mIoU on ADE20K, outperforming current leading CNNs and ViTs""",1080000000.0,"1.08B, table 1",2.408e+21,,,"InternImage-H is pre-trained on a 427 million joint dataset of public Laion-400M [61], YFCC-15M [62], and CC12M [63] for 30 epochs, and then fine-tuned the model on ImageNet-1K for 20 epochs. ImageNet-1K has 1,281,167 images.

Table 2 says InternImage-H uses 188 GFLOP per forward pass at 224 resolution, and 1478 GFLOP at 640

Table 7 indicates training InternImage-H was done at a scale of ""224/640"" so presumably there was pretraining at 224x224 resolution and then some fine-tuning at 640x640. It's not clear how much training was done at each resolution, but typically this is a small fraction of total training (e.g. Noisy Student finds it sufficient to train for 350 epochs at smaller resolution, and then fine-tune at the higher resolution for 1.5 epochs). We'll ignore the additional FLOPs from high resolution training.

Total training FLOPs:
188e9 FLOP/image * (427M images * 30 epochs) + (1.281M images * 20 epochs) * 3 (additional FLOPs for backward pass) = 2.408e21","LAION-400M,Conceptual Captions 12M (CC12M),ImageNet-1k","""To further explore the capability of our model and match the large-scale private data used in previous methods [16, 20, 59], we adopt M3I
Pre-training [60], a unified pre-training approach available
for both unlabeled and weakly-labeled data, to pre-train
InternImage-H on a 427 million joint dataset of public
Laion-400M [61], YFCC-15M [62], and CC12M [63] for
30 epochs, and then we fine-tune the model on ImageNet1K for 20 epochs.""",427000000.0,,30.0,,,,,,"Compared to the great progress of large-scale vision transformers (ViTs) in recent years, large-scale models based on convolutional neural networks (CNNs) are still in an early state. This work presents a new large-scale CNN-based foundation model, termed InternImage, which can obtain the gain from increasing parameters and training data like ViTs. Different from the recent CNNs that focus on large dense kernels, InternImage takes deformable convolution as the core operator, so that our model not only has the large effective receptive field required for downstream tasks such as detection and segmentation, but also has the adaptive spatial aggregation conditioned by input and task information. As a result, the proposed InternImage reduces the strict inductive bias of traditional CNNs and makes it possible to learn stronger and more robust patterns with large-scale parameters from massive data like ViTs. The effectiveness of our model is proven on challenging benchmarks including ImageNet, COCO, and ADE20K. It is worth mentioning that InternImage-H achieved a new record 65.4 mAP on COCO test-dev and 62.9 mIoU on ADE20K, outperforming current leading CNNs and ViTs. The code will be released at this https URL.",,Open weights (unrestricted),,Confident,2025-02-14 21:53:38+00:00,"China,China,China,Hong Kong,China,Hong Kong,China",,,,,,,,,
Mogrifier RLSTM (WT2),Language,DeepMind,Industry,Gábor Melis,2022-11-03,Circling Back to Recurrent Models of Language,https://arxiv.org/abs/2211.01848,0.0,SOTA improvement,"""On top of these improvements, the RLSTM
outperformed the LSTM by a small margin, and we established a new state of the art on both datasets""",35000000.0,Table 1,1.4e+17,,,6ND = 6*35000000*2666667*250 = 1.4000002e+17,WikiText-2,,,,250.0,,,,,,"Just because some purely recurrent models suffer from being hard to optimize and inefficient on today's hardware, they are not necessarily bad models of language. We demonstrate this by the extent to which these models can still be improved by a combination of a slightly better recurrent cell, architecture, objective, as well as optimization. In the process, we establish a new state of the art for language modelling on small datasets and on Enwik8 with dynamic evaluation.",Mogrifier RLSTM (WT2),Unreleased,,Confident,2025-02-14 21:53:48+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
BLOOMZ-176B,Language,Hugging Face,Industry,"Niklas Muennighoff, Thomas Wang, Lintang Sutawika, Adam Roberts, Stella Biderman, Teven Le Scao, M Saiful Bari, Sheng Shen, Zheng-Xin Yong, Hailey Schoelkopf, Xiangru Tang, Dragomir Radev, Alham Fikri Aji, Khalid Almubarak, Samuel Albanie, Zaid Alyafeai, Albert Webson, Edward Raff, Colin Raffel",2022-11-03,Crosslingual Generalization through Multitask Finetuning,"https://arxiv.org/abs/2211.01786, https://huggingface.co/bigscience/bloomz",242.0,SOTA improvement,"""Finetuning on multilingual tasks with English prompts further improves performance on English and non-English tasks leading to various state-of-the-art zero-shot results.""

Table 1",176000000000.0,176B,,,,"fine-tuned from BLOOM-176B

1.37e22 fine-tune compute",xP3,"""In addition, we introduce xP3, a composite of supervised datasets in 46 languages with English and machine-translated prompts. 

https://huggingface.co/datasets/bigscience/xP3",20000000000.0,"per https://huggingface.co/datasets/bigscience/xP3, 94,941,936 KB or 94GB 

if approx 200M words per GB, that's ~20B words (rougher estimate because it's multilingual)

https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.ieihc08p8dn0",,,,,,,"Multitask prompted finetuning (MTF) has been shown to help large language models generalize to new tasks in a zero-shot setting, but so far explorations of MTF have focused on English data and models. We apply MTF to the pretrained multilingual BLOOM and mT5 model families to produce finetuned variants called BLOOMZ and mT0. We find finetuning large multilingual language models on English tasks with English prompts allows for task generalization to non-English languages that appear only in the pretraining corpus. Finetuning on multilingual tasks with English prompts further improves performance on English and non-English tasks leading to various state-of-the-art zero-shot results. We also investigate finetuning on multilingual tasks with prompts that have been machine-translated from English to match the language of each dataset. We find training on these machine-translated prompts leads to better performance on human-written prompts in the respective languages. Surprisingly, we find models are capable of zero-shot generalization to tasks in languages they have never intentionally seen. We conjecture that the models are learning higher-level capabilities that are both task- and language-agnostic. In addition, we introduce xP3, a composite of supervised datasets in 46 languages with English and machine-translated prompts. Our code, datasets and models are freely available at this https URL.",,Open weights (unrestricted),,Likely,2024-09-11 16:49:23+00:00,"Multinational,United States of America",BLOOM-176B,1.3728e+22,"""We use publicly available pretrained BLOOM models ranging from 560 million to 176 billion parameters. BLOOM models are large decoder-only language models pretrained for around 350 billion tokens with an architecture similar to GPT-3
(Brown et al., 2020). We finetune the models for an additional 13 billion tokens with loss only being
computed on target tokens.""

13B * 176B * 6",,,,,,
mT0-13B,Language,"Hugging Face,BigScience","Industry,Research collective","Niklas Muennighoff, Thomas Wang, Lintang Sutawika, Adam Roberts, Stella Biderman, Teven Le Scao, M Saiful Bari, Sheng Shen, Zheng-Xin Yong, Hailey Schoelkopf, Xiangru Tang, Dragomir Radev, Alham Fikri Aji, Khalid Almubarak, Samuel Albanie, Zaid Alyafeai, Albert Webson, Edward Raff, Colin Raffel",2022-11-03,Crosslingual Generalization through Multitask Finetuning,https://arxiv.org/abs/2211.01786,242.0,SOTA improvement,"""Finetuning on multilingual tasks with English prompts further improves performance on English and non-English tasks leading to various state-of-the-art zero-shot results.""

Table 1",13000000000.0,13B,,,,"fine-tuned from mT5

1.37e22 fine-tune compute",xP3,"""In addition, we introduce xP3, a composite of supervised datasets in 46 languages with English and machine-translated prompts. 

https://huggingface.co/datasets/bigscience/xP3",20000000000.0,"per https://huggingface.co/datasets/bigscience/xP3, 94,941,936 KB or 94GB 

if approx 200M words per GB, that's ~20B words (rougher estimate because it's multilingual)

https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.ieihc08p8dn0",,,,,,,"Multitask prompted finetuning (MTF) has been shown to help large language models generalize to new tasks in a zero-shot setting, but so far explorations of MTF have focused on English data and models. We apply MTF to the pretrained multilingual BLOOM and mT5 model families to produce finetuned variants called BLOOMZ and mT0. We find finetuning large multilingual language models on English tasks with English prompts allows for task generalization to non-English languages that appear only in the pretraining corpus. Finetuning on multilingual tasks with English prompts further improves performance on English and non-English tasks leading to various state-of-the-art zero-shot results. We also investigate finetuning on multilingual tasks with prompts that have been machine-translated from English to match the language of each dataset. We find training on these machine-translated prompts leads to better performance on human-written prompts in the respective languages. Surprisingly, we find models are capable of zero-shot generalization to tasks in languages they have never intentionally seen. We conjecture that the models are learning higher-level capabilities that are both task- and language-agnostic. In addition, we introduce xP3, a composite of supervised datasets in 46 languages with English and machine-translated prompts. Our code, datasets and models are freely available at this https URL.",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,"Multinational,United States of America,Multinational,France",mT5-XXL,1.01e+21,"""We finetune the models for an additional 13 billion tokens with loss only being computed on target tokens...
For finetuning mT5, we follow the same procedure as described above for BLOOM, except that inputs are fed into the encoder and thus are not space-separated from targets.""

13B * 13B * 6 = 1.01e21",,,mT0-13B,,,
eDiff-I,Image generation,NVIDIA,Industry,"Yogesh Balaji, Seungjun Nah, Xun Huang, Arash Vahdat, Jiaming Song, Qinsheng Zhang, Karsten Kreis, Miika Aittala, Timo Aila, Samuli Laine, Bryan Catanzaro, Tero Karras, Ming-Yu Liu",2022-11-02,eDiff-I: Text-to-Image Diffusion Models with an Ensemble of Expert Denoisers,https://arxiv.org/abs/2211.01324,669.0,SOTA improvement,"SOTA zero-shot FID on COCO 2014, Table 1

May be significantly used, via Nvidia Picasso: https://www.nvidia.com/en-us/gpu-cloud/picasso/",9100000000.0,"9.1B for config D, Table 1",5.46e+19,,,"6ND = 6*9100000000*1000000000=5.46e+19 (likely, might change because of several epochs / dataset division)

""The base model was trained using 256 NVIDIA A100 GPUs, while the two super-resolution models were trained with 128 NVIDIA A100 GPUs each"" 
no info on duration",Unspecified unreleased,"""We use a collection of public and proprietary datasets to train our model. To ensure high-quality training data, we apply heavy filtering using a pretrained CLIP model to measure the image-text alignment score as well as an aesthetic scorer to rank the image quality""",1000000000.0,"""The final dataset to train our model contains about one billion text-image pairs""",,,,NVIDIA A100,,,"Large-scale diffusion-based generative models have led to breakthroughs in text-conditioned high-resolution image synthesis. Starting from random noise, such text-to-image diffusion models gradually synthesize images in an iterative fashion while conditioning on text prompts. We find that their synthesis behavior qualitatively changes throughout this process: Early in sampling, generation strongly relies on the text prompt to generate text-aligned content, while later, the text conditioning is almost entirely ignored. This suggests that sharing model parameters throughout the entire generation process may not be ideal. Therefore, in contrast to existing works, we propose to train an ensemble of text-to-image diffusion models specialized for different synthesis stages. To maintain training efficiency, we initially train a single model, which is then split into specialized models that are trained for the specific stages of the iterative generation process. Our ensemble of diffusion models, called eDiff-I, results in improved text alignment while maintaining the same inference computation cost and preserving high visual quality, outperforming previous large-scale text-to-image diffusion models on the standard benchmark. In addition, we train our model to exploit a variety of embeddings for conditioning, including the T5 text, CLIP text, and CLIP image embeddings. We show that these different embeddings lead to different behaviors. Notably, the CLIP image embedding allows an intuitive way of transferring the style of a reference image to the target text-to-image output. Lastly, we show a technique that enables eDiff-I's ""paint-with-words"" capability. A user can select the word in the input text and paint it in a canvas to control the output, which is very handy for crafting the desired image in mind. The project page is available at this https URL",,API access,,Likely,2025-02-14 21:53:59+00:00,United States of America,,,,,,,,,
GearNet,Biology,"Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),University of Montreal / Université de Montréal,University of Cambridge,IBM Research,HEC Montreal,CIFAR AI Research","Academia,Academia,Academia,Industry,Academia,Research collective","Zuobai Zhang, Minghao Xu, Arian Jamasb, Vijil Chenthamarakshan, Aurélie Lozano, Payel Das, Jian Tang",2022-11-01,Protein Representation Learning by Geometric Structure Pretraining,https://arxiv.org/abs/2203.06125,177.0,,,,,,,,,,,240000001.00000027,"805,000 proteins × 300 residues/protein = 241,500,000 datapoints (2.415 × 10^8)
Breakdown:
1. Initial protein count: 365,000 + 440,000 = 805,000
2. Final calculation: 805,000 × 300 = 241,500,000",,,,,,,"Learning effective protein representations is critical in a variety of tasks in biology such as predicting protein function or structure. Existing approaches usually pretrain protein language models on a large number of unlabeled amino acid sequences and then finetune the models with some labeled data in downstream tasks. Despite the effectiveness of sequence-based approaches, the power of pretraining on known protein structures, which are available in smaller numbers only, has not been explored for protein property prediction, though protein structures are known to be determinants of protein function. In this paper, we propose to pretrain protein representations according to their 3D structures. We first present a simple yet effective encoder to learn the geometric features of a protein. We pretrain the protein graph encoder by leveraging multiview contrastive learning and different self-prediction tasks. Experimental results on both function prediction and fold classification tasks show that our proposed pretraining methods outperform or are on par with the state-of-the-art sequence-based methods, while using much less pretraining data. Our implementation is available at this https URL.",,,,Unverified,2025-01-30 05:04:53+00:00,"Canada,Canada,United Kingdom of Great Britain and Northern Ireland,United States of America,Multinational,Canada,Canada",,,,,,,,,
Taiyi-Stable Diffusion,Image generation,IDEA CCNL,Academia,"Jiaxing Zhang, Ruyi Gan, Junjie Wang, Yuxiang Zhang, Lin Zhang, Ping Yang, Xinyu Gao, Ziwei Wu, Xiaoqun Dong, Junqing He, Jianheng Zhuo, Qi Yang, Yongfeng Huang, Xiayu Li, Yanghan Wu, Junyu Lu, Xinyu Zhu, Weifeng Chen, Ting Han, Kunhao Pan, Rui Wang, Hao Wang, Xiaojun Wu, Zhongshen Zeng, Chongpei Chen",2022-10-31,Fengshenbang 1.0: Being the Foundation of Chinese Cognitive Intelligence,https://arxiv.org/abs/2209.02970,87.0,,"The first open-source, Chinese version of Stable Diffusion. Possibly historically significant.",1000000000.0,,5.1e+22,,,"Fine-tuning: 32 NVIDIA A100 GPUs for 100 hours
32 * 312e12 * 30% * 100 * 60 * 60 = 1.078272e+21 FLOP

Base model: Stable Diffusion, 5e+22 FLOP",Wukong,"We use Noah-Wukong(100M) 和 Zero(23M) as our dataset, and take the image and text pairs with CLIP Score (based on IDEA-CCNL/Taiyi-CLIP-RoBERTa-102M-ViT-L-Chinese) greater than 0.2 as our Training set.",20000000.0,"""trained on 20M filtered Chinese image-text pairs""",,100.0,32 NVIDIA A100 GPUs for 100 hours,NVIDIA A100,32.0,,"Nowadays, foundation models become one of fundamental infrastructures in artificial intelligence, paving ways to the general intelligence. However, the reality presents two urgent challenges: existing foundation models are dominated by the English-language community; users are often given limited resources and thus cannot always use foundation models. To support the development of the Chinese-language community, we introduce an open-source project, called Fengshenbang, which leads by the research center for Cognitive Computing and Natural Language (CCNL). Our project has comprehensive capabilities, including large pre-trained models, user-friendly APIs, benchmarks, datasets, and others. We wrap all these in three sub-projects: the Fengshenbang Model, the Fengshen Framework, and the Fengshen Benchmark. An open-source roadmap, Fengshenbang, aims to re-evaluate the open-source community of Chinese pre-trained large-scale models, prompting the development of the entire Chinese large-scale model community. We also want to build a user-centered open-source ecosystem to allow individuals to access the desired models to match their computing resources. Furthermore, we invite companies, colleges, and research institutions to collaborate with us to build the large-scale open-source model-based ecosystem. We hope that this project will be the foundation of Chinese cognitive intelligence.",,Open weights (restricted use),,Confident,2025-02-14 18:51:28+00:00,China,Stable Diffusion (LDM-KL-8-G),,,,,,,,
Transformer-XL + PowerSGD + L-Greco,Language,"Institute of Science and Technology Austria (ISTA),Neural Magic","Academia,Industry","Mohammadreza Alimohammadi, Ilia Markov, Elias Frantar, Dan Alistarh",2022-10-31,L-GreCo: An Efficient and General Framework for Layerwise-Adaptive Gradient Compression,https://arxiv.org/abs/2210.17357,4.0,,,,,4.14e+17,,,,WikiText-103,,,,,,,,,,"Data-parallel distributed training of deep neural networks (DNN) has gained very widespread adoption, but can still experience communication bottlenecks. To address this issue, entire families of compression mechanisms have been developed, including quantization, sparsification, and low-rank approximation, some of which are seeing significant practical adoption. Despite this progress, almost all known compression schemes apply compression uniformly across DNN layers, although layers are heterogeneous in terms of parameter count and their impact on model accuracy. In this work, we provide a general framework for adapting the degree of compression across the model's layers dynamically during training, improving the overall compression, while leading to substantial speedups, without sacrificing accuracy. Our framework, called L-GreCo, is based on an adaptive algorithm, which automatically picks the optimal compression parameters for model layers guaranteeing the best compression ratio while satisfying an error constraint. Extensive experiments over image classification and language modeling tasks shows that L-GreCo is effective across all existing families of compression methods, and achieves up to 2.5× training speedup and up to 5× compression improvement over efficient implementations of existing approaches, while recovering full accuracy. Moreover, L-GreCo is complementary to existing adaptive algorithms, improving their compression ratio by 50% and practical throughput by 66%.",Transformer-XL + PowerSGD + L-Greco,Unreleased,,,2024-10-01 00:37:10+00:00,"Austria,United States of America",,,,,,TransformerXL + PowerSGD + L-Greco,,,
retrieval-quality-kNN-LMs,Language,University of Massachusetts Amherst,Academia,"Andrew Drozdov, Shufan Wang, Razieh Rahimi, Andrew McCallum, Hamed Zamani, Mohit Iyyer",2022-10-28,"You can’t pick your neighbors, or can you? When and how to rely on retrieval in the kNN-LM",https://arxiv.org/abs/2210.15859,15.0,,,247000000.00000003,,,,,,WikiText-103,,,,,,,,,,"Retrieval-enhanced language models (LMs), which condition their predictions on text retrieved from large external datastores, have recently shown significant perplexity improvements compared to standard LMs. One such approach, the kNN-LM, interpolates any existing LM's predictions with the output of a k-nearest neighbors model and requires no additional training. In this paper, we explore the importance of lexical and semantic matching in the context of items retrieved by kNN-LM. We find two trends: (1) the presence of large overlapping n-grams between the datastore and evaluation set plays an important factor in strong performance, even when the datastore is derived from the training data; and (2) the kNN-LM is most beneficial when retrieved items have high semantic similarity with the query. Based on our analysis, we define a new formulation of the kNN-LM that uses retrieval quality to assign the interpolation coefficient. We empirically measure the effectiveness of our approach on two English language modeling datasets, Wikitext-103 and PG-19. Our re-formulation of the kNN-LM is beneficial in both cases, and leads to nearly 4% improvement in perplexity on the Wikitext-103 test set.",retrieval-quality-kNN-LMs,Unreleased,,,2024-11-01 14:04:57+00:00,United States of America,Base LM + kNN LM + Continuous Cache,,"""Wikitext-103 The data is split 103M/217K/245K
tokens for training, validation, and test. We use the
pretrained model from Khandelwal et al. (2020),
and associated 267K word-level vocab.""",,,,,,
ADP-FAIRSEQ+NGRAMRES,Language,"Tsinghua University,Chinese University of Hong Kong (CUHK),Nara Institute of Science and Technology","Academia,Academia,Academia","Huayang Li, Deng Cai, Jin Xu, Taro Watanabe",2022-10-26,N-gram Is Back: Residual Learning of Neural Text Generation with n-gram Language Model,https://arxiv.org/abs/2210.14431,1.0,,,247000000.00000003,Table 2,,,,,WikiText-103,,,,,,,,,,"N-gram language models (LM) have been largely superseded by neural LMs as the latter exhibits better performance. However, we find that n-gram models can achieve satisfactory performance on a large proportion of testing cases, indicating they have already captured abundant knowledge of the language with relatively low computational cost. With this observation, we propose to learn a neural LM that fits the residual between an n-gram LM and the real-data distribution. The combination of n-gram and neural LMs not only allows the neural part to focus on the deeper understanding of language but also provides a flexible way to customize an LM by switching the underlying n-gram model without changing the neural model. Experimental results on three typical language tasks (i.e., language modeling, machine translation, and summarization) demonstrate that our approach attains additional performance gains over popular standalone neural models consistently. We also show that our approach allows for effective domain adaptation by simply switching to a domain-specific n-gram model, without any extra training. Our code is released at this https URL.",ADP-FAIRSEQ+NGRAMRES,Unreleased,,,2024-09-05 18:08:31+00:00,"China,Hong Kong,China,Japan",,,,,,ADP-FAIRSEQ+NGRAMRES,,,
MIF-ST,Biology,"Microsoft Research,OpenBioML,University of Chicago","Industry,Research collective,Academia","Kevin K Yang, Niccolò Zanichelli, Hugh Yeh",2022-10-26,Masked inverse folding with sequence transfer for protein representation learning,https://academic.oup.com/peds/article-abstract/doi/10.1093/protein/gzad015/7330543?redirectedFrom=fulltext#no-access-message,61.0,,,,,2.50000000000002e+22,,,"1. Hardware setup: 200x NVIDIA V100 GPUs with 1.30×10^14 FLOP/s per GPU

2. Training duration: Estimated 4 weeks based on ""multiple weeks"" phrase
(4 weeks × 7 days × 24 hours × 3600 seconds = 2,419,200 seconds)

3. Utilization rate: 40%

4. Calculation:
1.30×10^14 FLOP/s × 200 GPUs × 2.4192×10^6 seconds × 0.4 = 2.5×10^22 FLOP",,,12600000000.99998,"42M × 300 = 42,000,000 × 300 = 12,600,000,000 = 1.26e10 datapoints",,,,,,,"Self-supervised pretraining on protein sequences has led to state-of-the art performance on protein function and fitness prediction. However, sequence-only methods ignore the rich information contained in experimental and predicted protein structures. Meanwhile, inverse folding methods reconstruct a protein’s amino-acid sequence given its structure, but do not take advantage of sequences that do not have known structures. In this study, we train a masked inverse folding protein masked language model parameterized as a structured graph neural network. During pretraining, this model learns to reconstruct corrupted sequences conditioned on the backbone structure. We then show that using the outputs from a pretrained sequence-only protein masked language model as input to the inverse folding model further improves pretraining perplexity. We evaluate both of these models on downstream protein engineering tasks and analyze the effect of using information from experimental or predicted structures on performance.",,,,Unverified,2025-02-14 21:54:05+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United States of America",,,,,,,,,
Verbatim Memory Transformer (182M),Language,"Johns Hopkins University,New York University (NYU)","Academia,Academia","Kristijan Armeni, Christopher Honey, Tal Linzen",2022-10-24,Characterizing Verbatim Short-Term Memory in Neural Language Models,https://arxiv.org/abs/2210.13569,3.0,,,182000000.0,Table 3,,,,,WikiText-103,,102000000.0,102M tokens Table 3,,,,,,,"When a language model is trained to predict natural language sequences, its prediction at each moment depends on a representation of prior context. What kind of information about the prior context can language models retrieve? We tested whether language models could retrieve the exact words that occurred previously in a text. In our paradigm, language models (transformers and an LSTM) processed English text in which a list of nouns occurred twice. We operationalized retrieval as the reduction in surprisal from the first to the second list. We found that the transformers retrieved both the identity and ordering of nouns from the first list. Further, the transformers' retrieval was markedly enhanced when they were trained on a larger corpus and with greater model depth. Lastly, their ability to index prior tokens was dependent on learned attention patterns. In contrast, the LSTM exhibited less precise retrieval, which was limited to list-initial tokens and to short intervening texts. The LSTM's retrieval was not sensitive to the order of nouns and it improved when the list was semantically coherent. We conclude that transformers implemented something akin to a working memory system that could flexibly retrieve individual token representations across arbitrary delays; conversely, the LSTM maintained a coarser and more rapidly-decaying semantic gist of prior tokens, weighted toward the earliest items.",Characterizing Verbatim Short-Term Memory in Neural Language Models (182M),Unreleased,,,2024-09-16 00:13:09+00:00,"United States of America,United States of America",,,,,,,,,
EnCodec,Audio,Meta AI,Industry,"Alexandre Défossez, Jade Copet, Gabriel Synnaeve, Yossi Adi",2022-10-24,High Fidelity Neural Audio Compression,"https://arxiv.org/abs/2210.13438, ",440.0,SOTA improvement,""" Finally, our best model, EnCodec, reaches state-of-the-art scores for speech and for
music at 1.5, 3, 6, 12 kbps at 24 kHz, and at 6, 12, and 24 kbps for 48 kHz with stereo channels.""",,,,,,"""We train all models for 300 epochs, with one epoch being 2,000 updates with the Adam optimizer with a batch size of 64 examples of 1 second each, a learning rate of 3 · 10−4 , β1 = 0.5, and β2 = 0.9. All the models are traind using 8 A100 GPUs""","DNS,Common Voice,AudioSet,FSD50K,Jamendo","""We train EnCodec on 24 kHz monophonic across diverse domains, namely: speech, noisy speech, music and
general audio while we train the fullband stereo EnCodec on only 48 kHz music. For speech, we use the clean speech segments from DNS Challenge 4 (Dubey et al., 2022) and the Common Voice dataset (Ardila et al., 2019).
For general audio, we use on AudioSet (Gemmeke et al., 2017) together with FSD50K (Fonseca et al., 2021).
For music, we rely on the Jamendo dataset (Bogdanov et al., 2019) for training and evaluation and we further
evaluate our models on music using a proprietary music dataset.""",,"~17k hours total, per Table A.1",300.0,,,NVIDIA A100,,,"We introduce a state-of-the-art real-time, high-fidelity, audio codec leveraging neural networks. It consists in a streaming encoder-decoder architecture with quantized latent space trained in an end-to-end fashion. We simplify and speed-up the training by using a single multiscale spectrogram adversary that efficiently reduces artifacts and produce high-quality samples. We introduce a novel loss balancer mechanism to stabilize training: the weight of a loss now defines the fraction of the overall gradient it should represent, thus decoupling the choice of this hyper-parameter from the typical scale of the loss. Finally, we study how lightweight Transformer models can be used to further compress the obtained representation by up to 40%, while staying faster than real time. We provide a detailed description of the key design choices of the proposed model including: training objective, architectural changes and a study of various perceptual loss functions. We present an extensive subjective evaluation (MUSHRA tests) together with an ablation study for a range of bandwidths and audio domains, including speech, noisy-reverberant speech, and music. Our approach is superior to the baselines methods across all evaluated settings, considering both 24 kHz monophonic and 48 kHz stereophonic audio. Code and models are available at this http URL.",,Open weights (non-commercial),,Unknown,2024-11-01 14:04:56+00:00,United States of America,,,,,,,,,
Tk-Instruct,Language,"University of Washington,Arizona State University,Allen Institute for AI","Academia,Academia,Research collective","Yizhong Wang, Swaroop Mishra, Pegah Alipoormolabashi, Yeganeh Kordi, Amirreza Mirzaei, Anjana Arunkumar, Arjun Ashok, Arut Selvan Dhanasekaran, Atharva Naik, David Stap, Eshaan Pathak, Giannis Karamanolakis, Haizhi Gary Lai, Ishan Purohit, Ishani Mondal, Jacob Anderson, Kirby Kuznia, Krima Doshi, Maitreya Patel, Kuntal Kumar Pal, Mehrad Moradshahi, Mihir Parmar, Mirali Purohit, Neeraj Varshney, Phani Rohitha Kaza, Pulkit Verma, Ravsehaj Singh Puri, Rushang Karia, Shailaja Keyur Sampat, Savan Doshi, Siddhartha Mishra, Sujan Reddy, Sumanta Patro, Tanay Dixit, Xudong Shen, Chitta Baral, Yejin Choi, Noah A. Smith, Hannaneh Hajishirzi, Daniel Khashabi",2022-10-24,Super-NaturalInstructions: Generalization via Declarative Instructions on 1600+ NLP Tasks,https://arxiv.org/abs/2204.07705,,,,11000000000.0,11B,,,,,Super-natural Instructions,,5120091465.6,"56.6 words*1616 tasks + (1,048,576 tokens per batch/1,024 examples per batch)*5M instances = 5120091465.6

In total, the dataset includes 1616 tasks
and 5M instances. On average, each instruction is
paired with 2.8 positive and 2.4 negative examples.
The average definition length is 56.6 in words.",,20.0,"1000 steps * 1024 examples = 10^6 examples per 4 hours
5M instances -> 20 hours of total training time
""These experiments are run on Google V3-256 TPUs using a batch size of 1,048,576 tokens (1,024 examples), a constant learning rate of 1e-5 and a total of 1000 steps. Each training run takes 4 hours to complete.""",Google TPU v3,,,"How well can NLP models generalize to a variety of unseen tasks when provided with task instructions? To address this question, we first introduce Super-NaturalInstructions, a benchmark of 1,616 diverse NLP tasks and their expert-written instructions. Our collection covers 76 distinct task types, including but not limited to classification, extraction, infilling, sequence tagging, text rewriting, and text composition. This large and diverse collection of tasks enables rigorous benchmarking of cross-task generalization under instructions -- training models to follow instructions on a subset of tasks and evaluating them on the remaining unseen ones. Furthermore, we build Tk-Instruct, a transformer model trained to follow a variety of in-context instructions (plain language task definitions or k-shot examples). Our experiments show that Tk-Instruct outperforms existing instruction-following models such as InstructGPT by over 9% on our benchmark despite being an order of magnitude smaller. We further analyze generalization as a function of various scaling parameters, such as the number of observed tasks, the number of instances per task, and model sizes. We hope our dataset and model facilitate future progress towards more general-purpose NLP models.",,Open weights (unrestricted),,Speculative,2024-12-02 15:24:18+00:00,"United States of America,United States of America,United States of America",T5-11B,3.379260367296e+20,=5120091466*11B*6=3.379 × 10^20,,,,1048576.0,"batch size of 1,048,576 tokens (1,024 examples)",
DiffSBDD,Biology,"Ecole Polytechnique F´ed´erale de Lausanne (EPFL),University of Cambridge,Cornell University,Chinese Academy of Mathematics and System Science,University of Rome,Microsoft Research,University of Oxford,AITHYRA Institute","Academia,Academia,Academia,Academia,Academia,Industry,Academia,Research collective","Arne Schneuing, Charles Harris, Yuanqi Du, Kieran Didi, Arian Jamasb, Ilia Igashov, Weitao Du, Carla Gomes, Tom Blundell, Pietro Lio, Max Welling, Michael Bronstein, Bruno Correia",2022-10-24,Structure-based Drug Design with Equivariant Diffusion Models,https://arxiv.org/abs/2210.13695,141.0,,,,,1.600000000000001e+20,,,"1. Hardware setup:
- Binding MOAD: 1-2x NVIDIA Tesla V100 (3.27e13 FLOP/s per GPU)
- CrossDocked: 1x NVIDIA A100 (7.80e13 FLOP/s)

2. Training duration (directly provided):
- Binding MOAD runs: 25h, 38h, 115h, 147h
- CrossDocked runs: 60h, 80h, 480h, 600h

3. Utilization rate: 40%

4. Final calculation:
Sum of eight training runs:
(3.27e13 × 1 × 25h × 3600 × 0.4) +
(3.27e13 × 1 × 38h × 3600 × 0.4) +
(6.54e13 × 115h × 3600 × 0.4) +
(6.54e13 × 147h × 3600 × 0.4) +
(7.80e13 × 60h × 3600 × 0.4) +
(7.80e13 × 80h × 3600 × 0.4) +
(7.80e13 × 480h × 3600 × 0.4) +
(7.80e13 × 600h × 3600 × 0.4)
= 1.6e20 FLOPs",,,40344.99999999997,"Original: 40,344 datapoints
Calculation: 1 epoch × 40,344 unique protein-ligand pairs = 40,344
Final: 40,344 protein-ligand pairs",,,,,,,"Structure-based drug design (SBDD) aims to design small-molecule ligands that bind with high affinity and specificity to pre-determined protein targets. Generative SBDD methods leverage structural data of drugs in complex with their protein targets to propose new drug candidates. These approaches typically place one atom at a time in an autoregressive fashion using the binding pocket as well as previously added ligand atoms as context in each step. Recently a surge of diffusion generative models has entered this domain which hold promise to capture the statistical properties of natural ligands more faithfully. However, most existing methods focus exclusively on bottom-up de novo design of compounds or tackle other drug development challenges with task-specific models. The latter requires curation of suitable datasets, careful engineering of the models and retraining from scratch for each task. Here we show how a single pre-trained diffusion model can be applied to a broader range of problems, such as off-the-shelf property optimization, explicit negative design, and partial molecular design with inpainting. We formulate SBDD as a 3D-conditional generation problem and present DiffSBDD, an SE(3)-equivariant diffusion model that generates novel ligands conditioned on protein pockets. Our in silico experiments demonstrate that DiffSBDD captures the statistics of the ground truth data effectively. Furthermore, we show how additional constraints can be used to improve the generated drug candidates according to a variety of computational metrics. These results support the assumption that diffusion models represent the complex distribution of structural data more accurately than previous methods, and are able to incorporate additional design objectives and constraints changing nothing but the sampling strategy.",,,,Unverified,2025-02-14 21:54:15+00:00,"Switzerland,United Kingdom of Great Britain and Northern Ireland,United States of America,China,Italy,United States of America,United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland,Austria",,,,,,,,,
U-PaLM (540B),Language,Google,Industry,"Yi Tay, Jason Wei, Hyung Won Chung, Vinh Q. Tran, David R. So, Siamak Shakeri, Xavier Garcia, Huaixiu Steven Zheng, Jinfeng Rao, Aakanksha Chowdhery, Denny Zhou, Donald Metzler, Slav Petrov, Neil Houlsby, Quoc V. Le, Mostafa Dehghani",2022-10-20,Transcending Scaling Laws with 0.1% Extra Compute,https://arxiv.org/abs/2210.11399,61.0,SOTA improvement,"""We show that U-PaLM 540B outperforms PaLM 540B on 21 out of 26 tasks. Given that PaLM is
the SOTA language model on these tasks, this makes U-PaLM the new state-of-the-art on these tasks.""

performance improvement equivalent to 2x training efficiency: ""Impressively, at 540B scale, we show an approximately 2x computational savings rate where U-PaLM achieves the same performance as the final PaLM 540B model at around half its computational budget """,540000000000.0,,2.53e+24,,,"""The total number of extra tokens we train on for the 540B
model is approximately 1.3 Billion which constitutes 0.16% extra computation... Training an U-PaLM 540B model only consumes 512 TPUv4 chips and finishes in about 5 days which is considered to be lightweight.""

original PaLM was 2.527e+24. adding 0.16% is ~2.53e24",,"""To keep things consistent, we train this model with the same data mixture as PaLM and do not rely on additional sources of data (labeled or unlabeled).""",,,,120.0,5 days,Google TPU v4,512.0,,"Scaling language models improves performance but comes with significant computational costs. This paper proposes UL2R, a method that substantially improves existing language models and their scaling curves with a relatively tiny amount of extra compute. The key idea is to continue training a state-of-the-art large language model (e.g., PaLM) on a few more steps with UL2's mixture-of-denoiser objective. We show that, with almost negligible extra computational costs and no new sources of data, we are able to substantially improve the scaling properties of large language models on downstream metrics. In this paper, we continue training PaLM with UL2R, introducing a new set of models at 8B, 62B, and 540B scale which we call U-PaLM. Impressively, at 540B scale, we show an approximately 2x computational savings rate where U-PaLM achieves the same performance as the final PaLM 540B model at around half its computational budget (i.e., saving ∼4.4 million TPUv4 hours). We further show that this improved scaling curve leads to 'emergent abilities' on challenging BIG-Bench tasks -- for instance, U-PaLM does much better than PaLM on some tasks or demonstrates better quality at much smaller scale (62B as opposed to 540B). Overall, we show that U-PaLM outperforms PaLM on many few-shot setups, i.e., English NLP tasks (e.g., commonsense reasoning, question answering), reasoning tasks with chain-of-thought (e.g., GSM8K), multilingual tasks (MGSM, TydiQA), MMLU and challenging BIG-Bench tasks. Finally, we provide qualitative examples showing the new capabilities of U-PaLM for single and multi-span infilling.",,Unreleased,,Confident,2025-02-19 19:02:41+00:00,United States of America,PaLM (540B),4e+21,"""The total number of extra tokens we train on for the 540B
model is approximately 1.3 Billion which constitutes 0.16% extra computation... Training an U-PaLM 540B model only consumes 512 TPUv4 chips and finishes in about 5 days which is considered to be lightweight.""

PaLM was 2.5e24
0.16% of that is 4e21",,,,,,
LMSI-Palm,Language,"Google,University of Illinois Urbana-Champaign (UIUC)","Industry,Academia","Jiaxin Huang, Shixiang Shane Gu, Le Hou, Yuexin Wu, Xuezhi Wang, Hongkun Yu, Jiawei Han",2022-10-20,Large Language Models Can Self-Improve,https://arxiv.org/abs/2210.11610,417.0,SOTA improvement,"""We show that our approach improves the general reasoning ability of a 540B-parameter LLM (74.4%->82.1% on GSM8K, 78.2%->83.0% on DROP, 90.0%->94.4% on OpenBookQA, and 63.4%->67.9% on ANLI-A3) and achieves state-of-the-art-level performance, without any ground truth label.""",540000000000.0,540B,,,,"(fine-tuned from Palm-540B, which was 2.52e24)",GSM8K,Trained on chain-of-thought PaLM output from several datasets of questions that require reasoning. See section 4,,,,,,,,,"Large Language Models (LLMs) have achieved excellent performances in various tasks. However, fine-tuning an LLM requires extensive supervision. Human, on the other hand, may improve their reasoning abilities by self-thinking without external inputs. In this work, we demonstrate that an LLM is also capable of self-improving with only unlabeled datasets. We use a pre-trained LLM to generate ""high-confidence"" rationale-augmented answers for unlabeled questions using Chain-of-Thought prompting and self-consistency, and fine-tune the LLM using those self-generated solutions as target outputs. We show that our approach improves the general reasoning ability of a 540B-parameter LLM (74.4%->82.1% on GSM8K, 78.2%->83.0% on DROP, 90.0%->94.4% on OpenBookQA, and 63.4%->67.9% on ANLI-A3) and achieves state-of-the-art-level performance, without any ground truth label. We conduct ablation studies and show that fine-tuning on reasoning is critical for self-improvement.",,Unreleased,,Confident,2024-11-01 14:04:56+00:00,"United States of America,United States of America",PaLM (540B),,"""To reduce the training burden, we sample 5k examples from the non-football and football partition of the DROP dataset, and sample 5k examples from ANLI-A2 and ANLI-A3. For each dataset, we fine-tune the model for 10k steps with a learning rate of 5e−5
and a batch size of 32."" Not sure about sequence length",,,,,,
Flan-PaLM 540B,Language,Google,Industry,"Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus, Yunxuan Li, Xuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, Albert Webson, Shixiang Shane Gu, Zhuyun Dai, Mirac Suzgun, Xinyun Chen, Aakanksha Chowdhery, Alex Castro-Ros, Marie Pellat, Kevin Robinson, Dasha Valter, Sharan Narang, Gaurav Mishra, Adams Yu, Vincent Zhao, Yanping Huang, Andrew Dai, Hongkun Yu, Slav Petrov, Ed H. Chi, Jeff Dean, Jacob Devlin, Adam Roberts, Denny Zhou, Quoc V. Le, Jason Wei",2022-10-20,Scaling Instruction-Finetuned Language Models,https://arxiv.org/abs/2210.11416,2506.0,"Highly cited,SOTA improvement",">1k cites

""Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU.""",540000000000.0,540B,2.4999999999999997e+24,,,"0.2% greater than Palm 540B, which used 2.5e24",Flan,"Various instruction examples for many tasks:

""Our final set of finetuning tasks is sourced from a combination of tasks from FLAN, T0, Natural Instructions, along with some dialog, program synthesis, and chain-of-thought reasoning tasks, as described in Figure 2. We provide specific pointers and citations in Table 24. All data sources are publicly
available. We also remove all MMLU tasks from Natural Instructions to preserve its role as a broad benchmark of 57 held-out tasks for evaluation. In total, there are 1,836 tasks."" ",,,,37.0,"""we only use 0.2% of the pre-training compute to instruction-finetune Flan-PaLM 540B (approximately 512 v4 TPU chips for 37 hours)""",Google TPU v4,512.0,,"Finetuning language models on a collection of datasets phrased as instructions has been shown to improve model performance and generalization to unseen tasks. In this paper we explore instruction finetuning with a particular focus on (1) scaling the number of tasks, (2) scaling the model size, and (3) finetuning on chain-of-thought data. We find that instruction finetuning with the above aspects dramatically improves performance on a variety of model classes (PaLM, T5, U-PaLM), prompting setups (zero-shot, few-shot, CoT), and evaluation benchmarks (MMLU, BBH, TyDiQA, MGSM, open-ended generation). For instance, Flan-PaLM 540B instruction-finetuned on 1.8K tasks outperforms PALM 540B by a large margin (+9.4% on average). Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints, which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.",,Unreleased,0.3,Confident,2025-02-17 20:42:38+00:00,United States of America,PaLM (540B),5.6e+21,"5.6e21 per Table 2

""we only use 0.2% of the pre-training compute to instruction-finetune Flan-PaLM 540B (approximately 512 v4 TPU chips for 37 hours)""

512 * 37 * 3600 * 275 teraflops * 0.3 = 5.6e21 (so 30% utilization was correct)",,,,,,
Flan-T5 11B,Language,Google,Industry,"Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus, Yunxuan Li, Xuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, Albert Webson, Shixiang Shane Gu, Zhuyun Dai, Mirac Suzgun, Xinyun Chen, Aakanksha Chowdhery, Alex Castro-Ros, Marie Pellat, Kevin Robinson, Dasha Valter, Sharan Narang, Gaurav Mishra, Adams Yu, Vincent Zhao, Yanping Huang, Andrew Dai, Hongkun Yu, Slav Petrov, Ed H. Chi, Jeff Dean, Jacob Devlin, Adam Roberts, Denny Zhou, Quoc V. Le, Jason Wei",2022-10-20,Scaling Instruction-Finetuned Language Models,"https://arxiv.org/abs/2210.11416, https://huggingface.co/google/flan-t5-xxl",2506.0,Highly cited,,11000000000.0,11B,3.3e+22,,,"Table 2: 0.2% greater than T5 xxl, which used 3.3e22 FLOP",,"Various instruction examples for many tasks:

""Our final set of finetuning tasks is sourced from a combination of tasks from FLAN, T0, Natural Instructions, along with some dialog, program synthesis, and chain-of-thought reasoning tasks, as described in Figure 2. We provide specific pointers and citations in Table 24. All data sources are publicly
available. We also remove all MMLU tasks from Natural Instructions to preserve its role as a broad benchmark of 57 held-out tasks for evaluation. In total, there are 1,836 tasks."" ",100000000000.0,"""For T5 models without instruction finetuning, we use LM-adapted models, which were produced by training T5 on 100B additional tokens from C4 on a standard language modeling objective""",,,,Google TPU v4,,,"Finetuning language models on a collection of datasets phrased as instructions has been shown to improve model performance and generalization to unseen tasks. In this paper we explore instruction finetuning with a particular focus on (1) scaling the number of tasks, (2) scaling the model size, and (3) finetuning on chain-of-thought data. We find that instruction finetuning with the above aspects dramatically improves performance on a variety of model classes (PaLM, T5, U-PaLM), prompting setups (zero-shot, few-shot, CoT), and evaluation benchmarks (MMLU, BBH, TyDiQA, MGSM, open-ended generation). For instance, Flan-PaLM 540B instruction-finetuned on 1.8K tasks outperforms PALM 540B by a large margin (+9.4% on average). Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints, which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.",,Open weights (unrestricted),,Confident,2024-12-22 19:24:59+00:00,United States of America,T5-11B,7.6e+19,"7.6e19, per Table 2",,,,,,
GPT-2 + Progressive LRD,Language,"Huawei,Huawei Noah's Ark Lab","Industry,Industry","Habib Hajimolahoseini, Walid Ahmed, Mehdi Rezagholizadeh, Vahid Partovinia, Yang Liu",2022-10-12,Strategies for Applying Low Rank Decomposition to Transformer-Based Models,https://neurips2022-enlsp.github.io/papers/paper_33.pdf,,,,31000000.0,Table 2,6.2e+19,,,,,They compressed pre-trained GPT-2. Possibly without finetuning on additional data?,,,,,,,,,"Low rank decomposition decomposes each fully-connected layer of the transformer modules into two smaller layers using Singular Value Decomposition. The state-of-the-art techniques usually apply LRD in a single-shot, where all of the layers are decomposed simultaneously. In this paper, we propose and compare different strategies for applying low rank decomposition to compress pre-trained transformer based models. These strategies include: layer-by-layer and progressive decomposition. We observe that progressive low rank decomposition, in which the rank is decreased incrementally results in a higher accuracy after decomposition comparing to single-shot and layer-by-layer low rank decomposition. Furthermore, in contrast with many of state-of-the-art compression methods where intensive pre-training of the compressed model is necessary, we show that progressive LRD can provide promising performance by compressing the model in the fine-tuning stage.",Progressive LRD,Unreleased,,,2025-01-10 16:31:02+00:00,"China,China",GPT-2 (124M),,,,,Progressive LRD,,,
GenSLM,Biology,"University of Chicago,NVIDIA,Harvard University,Cerebras Systems,Technical University of Munich,California Institute of Technology","Academia,Industry,Academia,Industry,Academia,Academia","Maxim Zvyagin, Alexander Brace, Kyle Hippe, Yuntian Deng, Bin Zhang, Cindy Orozco Bohorquez, Austin Clyde, Bharat Kale, Danilo Perez-Rivera, Heng Ma, Carla M. Mann, Michael Irvin, J. Gregory Pauloski, Logan Ward, Valerie Hayot, Murali Emani, Sam Foreman, Zhen Xie, Diangen Lin, Maulik Shukla, Weili Nie, Josh Romero, Christian Dallago, Arash Vahdat, Chaowei Xiao, Thomas Gibbs, Ian Foster, James J. Davis, Michael E. Papka, Thomas Brettin, Rick Stevens, Anima Anandkumar, Venkatram Vishwanath, Arvind Ramanathan",2022-10-11,GenSLMs: Genome-scale language models reveal SARS-CoV-2 evolutionary dynamics,https://www.biorxiv.org/content/biorxiv/early/2022/10/11/2022.10.10.511571.full.pdf,58.0,SOTA improvement,"""Together, these capabilities go beyond state-of-the-art techniques
for global-scale whole genome surveillance of pandemic-causing
viruses and address a critical infrastructure need for the global
public health organization"" - SOTA improvement on very specific task",25000000000.0,See Table 3,1.42e+21,,,"See Table 3
Overall ZettaFlops 1.42","SARS-CoV-2 genome dataset,BV-BRC","SARS-CoV-2 genome datasets from multiple sources:

""we used >1.5 million high-quality BV-BRC SARSCoV-2 complete genome sequences""

""We also utilized a dataset collected by the Houston Methodist Hospital System - one of the largest single-institution collections of SARS-CoV-2 genome sequences in the United States. [...]  Sequences with >256 ambiguous characters were discarded, leaving 16,545 total sequences""

Prokaryotic gene sequence dataset from BV-BRC:
""To allow for better generalization and avoid overfitting of the models to the SARS-CoV-2 data, we used >110 million unique prokaryotic gene sequences from BV-BRC""",56000000001.00008,"110,000,000 sequences * 512 tokens/sequence = 56,320,000,000 tokens (5.6e10)",,,,,,,"Our work seeks to transform how new and emergent variants of pandemic causing viruses, specially SARS-CoV-2, are identified and classified. By adapting large language models (LLMs) for genomic data, we build genome-scale language models (GenSLMs) which can learn the evolutionary landscape of SARS-CoV-2 genomes. By pretraining on over 10 million prokaryotic gene sequences, and then finetuning a SARS-CoV-2 specific model on 1.5 million genomes, we show that GenSLM can accurately and rapidly identify variants of concern. Thus, to our knowledge, GenSLM represents one of the first whole genome scale foundation models which can generalize to other prediction tasks. We demonstrate the scaling of GenSLMs on both GPU-based supercomputers and AI-hardware accelerators, achieving over 1.54 zettaflops in training runs. We present initial scientific insights gleaned from examining GenSLMs in tracking the evolutionary dynamics of SARS-CoV-2, noting that its full potential on large biological data is yet to be realized.",,,,Confident,2025-02-14 21:54:47+00:00,"United States of America,United States of America,United States of America,Multinational,Germany,United States of America",,,,,,,,,True
Instruct-GPT + Mind's Eye,Language,"Google,Dartmouth College","Industry,Academia","Ruibo Liu, Jason Wei, Shixiang Shane Gu, Te-Yen Wu, Soroush Vosoughi, Claire Cui, Denny Zhou, Andrew M. Dai",2022-10-11,Mind's Eye: Grounded Language Model Reasoning through Simulation,https://arxiv.org/abs/2210.05359,65.0,,Best at their proposed Utopia benchmark (maybe a bit one-off?),176500000000.0,"Two models: a LM that converts the input to code for a physics simulator, and a foundation model (InstructGPT)

""the resulting models have 0.3B and 1.5B parameters (used as default)""

InstructGPT is 175B. 175B+1.5B = 176.5B",,,,"""Training of the JAX-based text-to-code LMs runs on TPU-v3 Pods. The learning rates we use for training 0.3B and 1.5B LMs on C4 are {3.0e-4, 1.8e-4}, which are switched to {1.8e-4, 0.5e-4} when fine-tuning on the text-code pairs. We use cosine annealing to control learning rate over time with fixed warm-up steps (3k).""","Utopia,C4","""We propose a new multi-task physics alignment dataset, UTOPIA, whose aim is to benchmark how well current LMs can understand and reason over some basic laws of physics (§2). The dataset contains 39 sub-tasks covering six common scenes that involve understanding basic principles of physics (e.g., conservation of momentum in elastic collisions), and all the ground-truth answers are automatically generated by a physics engine""

Also C4

""Besides fine-tuning on the dataset with text-code pairs, we also pre-train the model on the C4 dataset """,,,,,,Google TPU v3,,,"Successful and effective communication between humans and AI relies on a shared experience of the world. By training solely on written text, current language models (LMs) miss the grounded experience of humans in the real-world -- their failure to relate language to the physical world causes knowledge to be misrepresented and obvious mistakes in their reasoning. We present Mind's Eye, a paradigm to ground language model reasoning in the physical world. Given a physical reasoning question, we use a computational physics engine (DeepMind's MuJoCo) to simulate the possible outcomes, and then use the simulation results as part of the input, which enables language models to perform reasoning. Experiments on 39 tasks in a physics alignment benchmark demonstrate that Mind's Eye can improve reasoning ability by a large margin (27.9% zero-shot, and 46.0% few-shot absolute accuracy improvement on average). Smaller language models armed with Mind's Eye can obtain similar performance to models that are 100x larger. Finally, we confirm the robustness of Mind's Eye through ablation studies.",,,,Confident,2024-11-01 14:04:56+00:00,"United States of America,United States of America",InstructGPT 175B,,,,,,,,
Diplodocus,Games,"Meta AI,Massachusetts Institute of Technology (MIT)","Industry,Academia","Anton Bakhtin, David J Wu, Adam Lerer, Jonathan Gray, Athul Paul Jacob, Gabriele Farina, Alexander H Miller, Noam Brown",2022-10-11,Mastering the Game of No-Press Diplomacy via Human-Regularized Reinforcement Learning and Planning,https://arxiv.org/abs/2210.05492,33.0,SOTA improvement,"SOTA Improvement in no-press Diplomacy
""In a 200-game no-press Diplomacy tournament involving 62 human participants spanning skill levels from beginner to expert, two Diplodocus agents both achieved a higher average score than all other participants who played more than two games, and ranked first and third according to an Elo ratings model. """,,may be estimated from https://github.com/facebookresearch/diplomacy_cicero?tab=readme-ov-file,,,,,,"""we train the architecture described in Appendix F on a dataset of roughly 46000 online Diplomacy games provided by webdiplomacy.net.""
then self-play training",,"""we train the architecture described in Appendix F on a dataset of roughly 46000 online Diplomacy games provided by webdiplomacy.net.""
then self-play training",,,,,,,"No-press Diplomacy is a complex strategy game involving both cooperation and competition that has served as a benchmark for multi-agent AI research. While self-play reinforcement learning has resulted in numerous successes in purely adversarial games like chess, Go, and poker, self-play alone is insufficient for achieving optimal performance in domains involving cooperation with humans. We address this shortcoming by first introducing a planning algorithm we call DiL-piKL that regularizes a reward-maximizing policy toward a human imitation-learned policy. We prove that this is a no-regret learning algorithm under a modified utility function. We then show that DiL-piKL can be extended into a self-play reinforcement learning algorithm we call RL-DiL-piKL that provides a model of human play while simultaneously training an agent that responds well to this human model. We used RL-DiL-piKL to train an agent we name Diplodocus. In a 200-game no-press Diplomacy tournament involving 62 human participants spanning skill levels from beginner to expert, two Diplodocus agents both achieved a higher average score than all other participants who played more than two games, and ranked first and third according to an Elo ratings model.",,Open weights (non-commercial),,Unknown,2024-11-01 14:04:56+00:00,"United States of America,United States of America",,,,,,,,,
TPM-LVD,Language,University of California Los Angeles (UCLA),Academia,"Anji Liu, Honghua Zhang, Guy Van den Broeck",2022-10-10,Scaling up Probabilistic Circuits by Latent Variable Distillation,https://arxiv.org/abs/2210.04398,18.0,,,1120000000.0,,,,,,WikiText-2,,,,,,,,,,"Probabilistic Circuits (PCs) are a unified framework for tractable probabilistic models that support efficient computation of various probabilistic queries (e.g., marginal probabilities). One key challenge is to scale PCs to model large and high-dimensional real-world datasets: we observe that as the number of parameters in PCs increases, their performance immediately plateaus. This phenomenon suggests that the existing optimizers fail to exploit the full expressive power of large PCs. We propose to overcome such bottleneck by latent variable distillation: we leverage the less tractable but more expressive deep generative models to provide extra supervision over the latent variables of PCs. Specifically, we extract information from Transformer-based generative models to assign values to latent variables of PCs, providing guidance to PC optimizers. Experiments on both image and language modeling benchmarks (e.g., ImageNet and WikiText-2) show that latent variable distillation substantially boosts the performance of large PCs compared to their counterparts without latent variable distillation. In particular, on the image modeling benchmarks, PCs achieve competitive performance against some of the widely-used deep generative models, including variational autoencoders and flow-based models, opening up new avenues for tractable generative modeling.",TPM-LVD,Unreleased,,,2024-10-01 14:02:41+00:00,United States of America,,,,,,,,,
Decaying Fast Weights Transformer (WT-103),Language,Jenni,Industry,Huanru Henry Mao,2022-10-09,Fine-Tuning Pre-trained Transformers into Decaying Fast Weights,https://arxiv.org/abs/2210.04243,13.0,,,242000000.0,"""We fine-tune starting from the checkpoint provided by Baevski
and Auli (2019)8, which has 242M parameters""",7.9e+19,,,"Pre-trained model is Transformer (Adaptive Input Embeddings) which was 7.3e19. This is from 8 * 67 V100-hours. 

fine-tuning:

""Training was performed on a single NVIDIA A40 GPU for 35 hours""

35h, 1 GPU, 149.7e12, 30% = 5.7e18 FLOP""

5.7e18 + 7.3e19 is 7.9e19",WikiText-103,,,"""For both models, we trained with a batch size of 26 for 100,000 iterations. """,192.12,,,,,,"Autoregressive Transformers are strong language models but incur O(T) complexity during per-token generation due to the self-attention mechanism. Recent work proposes kernel-based methods to approximate causal self-attention by replacing it with recurrent formulations with various update rules and feature maps to achieve O(1) time and memory complexity. We explore these approaches and find that they are unnecessarily complex, and propose a simple alternative - decaying fast weights - that runs fast on GPU, outperforms prior methods, and retains 99% of attention's performance for GPT-2. We also show competitive performance on WikiText-103 against more complex attention substitutes.",Decaying Fast Weights Transformer,Unreleased,,,2025-02-14 21:56:32+00:00,Singapore,Transformer (Adaptive Input Embeddings) WT103,5.7e+18,"""Training was performed on a single NVIDIA A40 GPU for 35 hours""

35h, 1 GPU, 149.7e12, 30%
5.7e18 FLOP""",,,,,,
Phenaki,Video,"University College London (UCL),University of Michigan,Google Brain","Academia,Academia,Industry","Ruben Villegas, Mohammad Babaeizadeh, Pieter-Jan Kindermans, Hernan Moraldo, Han Zhang, Mohammad Taghi Saffar, Santiago Castro, Julius Kunze, Dumitru Erhan",2022-10-05,Phenaki: Variable Length Video Generation From Open Domain Textual Description,https://arxiv.org/abs/2210.02399,289.0,SOTA improvement,"""To the best of our knowledge, this is the first time a paper studies generating videos from time variable prompts""",1800000000.0,"Unless specified otherwise, we train a 1.8B parameter Phenaki model on a corpus of ∼15M textvideo pairs at 8 FPS mixed with ∼50M text-images plus ∼400M pairs of LAION-400M [41] (more
details in Appendix B.3). The model used in the visualisations in this paper was trained for 1 million
steps at a batch size of 512, which took less than 5 days. In this setup 80% of the training data came
from the video dataset and each image dataset contributed 10%.",,,,,"LAION-400M,Unspecified unreleased","Unless specified otherwise, we train a 1.8B parameter Phenaki model on a corpus of ∼15M textvideo pairs at 8 FPS mixed with ∼50M text-images plus ∼400M pairs of LAION-400M [41] (more details in Appendix B.3). The model used in the visualisations in this paper was trained for 1 million steps at a batch size of 512, which took less than 5 days. In this setup 80% of the training data came from the video dataset and each image dataset contributed 10%.",,"Unless specified otherwise, we train a 1.8B parameter Phenaki model on a corpus of ∼15M textvideo pairs at 8 FPS mixed with ∼50M text-images plus ∼400M pairs of LAION-400M [41] (more
details in Appendix B.3). The model used in the visualisations in this paper was trained for 1 million
steps at a batch size of 512, which took less than 5 days. In this setup 80% of the training data came
from the video dataset and each image dataset contributed 10%.",,,,,,Self-supervised learning,"We present Phenaki, a model capable of realistic video synthesis, given a sequence of textual prompts. Generating videos from text is particularly challenging due to the computational cost, limited quantities of high quality text-video data and variable length of videos. To address these issues, we introduce a new model for learning video representation which compresses the video to a small representation of discrete tokens. This tokenizer uses causal attention in time, which allows it to work with variable-length videos. To generate video tokens from text we are using a bidirectional masked transformer conditioned on pre-computed text tokens. The generated video tokens are subsequently de-tokenized to create the actual video. To address data issues, we demonstrate how joint training on a large corpus of image-text pairs as well as a smaller number of video-text examples can result in generalization beyond what is available in the video datasets. Compared to the previous video generation methods, Phenaki can generate arbitrary long videos conditioned on a sequence of prompts (i.e. time variable text or a story) in open domain. To the best of our knowledge, this is the first time a paper studies generating videos from time variable prompts. In addition, compared to the per-frame baselines, the proposed video encoder-decoder computes fewer tokens per video but results in better spatio-temporal consistency.",,,,,2024-11-01 14:04:56+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America,United States of America",,,,,,,,,True
Imagen Video,Video,Google Brain,Industry,"Jonathan Ho, William Chan, Chitwan Saharia, Jay Whang, Ruiqi Gao, Alexey Gritsenko, Diederik P. Kingma, Ben Poole, Mohammad Norouzi, David J. Fleet, Tim Salimans",2022-10-05,Imagen Video: High Definition Video Generation with Diffusion Models,https://arxiv.org/abs/2210.02303,1123.0,,,11600000000.0,"Figure 6 summarizes the entire cascading pipeline of Imagen Video. In total, we have 1 frozen text
encoder, 1 base video diffusion model, 3 SSR (spatial super-resolution), and 3 TSR (temporal superresolution) models – for a total of 7 video diffusion models, with a total of 11.6B diffusion model
parameters",,,,,"LAION-400M,Unspecified unreleased",,,"We train our models on a combination of an internal dataset consisting of 14 million video-text pairs and 60 million image-text pairs, and the publicly available LAION-400M image-text dataset.",,,,,,,"We present Imagen Video, a text-conditional video generation system based on a cascade of video diffusion models. Given a text prompt, Imagen Video generates high definition videos using a base video generation model and a sequence of interleaved spatial and temporal video super-resolution models. We describe how we scale up the system as a high definition text-to-video model including design decisions such as the choice of fully-convolutional temporal and spatial super-resolution models at certain resolutions, and the choice of the v-parameterization of diffusion models. In addition, we confirm and transfer findings from previous work on diffusion-based image generation to the video generation setting. Finally, we apply progressive distillation to our video models with classifier-free guidance for fast, high quality sampling. We find Imagen Video not only capable of generating videos of high fidelity, but also having a high degree of controllability and world knowledge, including the ability to generate diverse videos and text animations in various artistic styles and with 3D object understanding. See this https URL for samples.",,,,,2024-11-01 14:04:56+00:00,United States of America,,,,,,,,,
AlphaTensor,Other,DeepMind,Industry,"Alhussein Fawzi, Matej Balog, Aja Huang, Thomas Hubert, Bernardino Romera-Paredes, Mohammadamin Barekatain, Alexander Novikov, Francisco J. R. Ruiz, Julian Schrittwieser, Grzegorz Swirszcz, David Silver, Demis Hassabis & Pushmeet Kohli",2022-10-05,Discovering faster matrix multiplication algorithms with reinforcement learning,https://www.nature.com/articles/s41586-022-05172-4,,SOTA improvement,,,,1.43e+21,,,Compute: 0.3*64*123000000000000*7*24*60*60=1.42829568e+21,,,5000000.0,"""We create a dataset containing 5 million such tensor-factorization pairs.""",,168.0,"In practice, the procedure  takes a week to converge.",Google TPU v3,64.0,Supervised,"Improving the efficiency of algorithms for fundamental computations can have a widespread impact, as it can affect the overall speed of a large amount of computations. Matrix multiplication is one such primitive task, occurring in many systems—from neural networks to scientific computing routines. The automatic discovery of algorithms using machine learning offers the prospect of reaching beyond human intuition and outperforming the current best human-designed algorithms. However, automating the algorithm discovery procedure is intricate, as the space of possible algorithms is enormous. Here we report a deep reinforcement learning approach based on AlphaZero1 for discovering efficient and provably correct algorithms for the multiplication of arbitrary matrices. Our agent, AlphaTensor, is trained to play a single-player game where the objective is finding tensor decompositions within a finite factor space. AlphaTensor discovered algorithms that outperform the state-of-the-art complexity for many matrix sizes. Particularly relevant is the case of 4 × 4 matrices in a finite field, where AlphaTensor’s algorithm improves on Strassen’s two-level algorithm for the first time, to our knowledge, since its discovery 50 years ago2. We further showcase the flexibility of AlphaTensor through different use-cases: algorithms with state-of-the-art complexity for structured matrix multiplication and improved practical efficiency by optimizing matrix multiplication for runtime on specific hardware. Our results highlight AlphaTensor’s ability to accelerate the process of algorithmic discovery on a range of problems, and to optimize for different criteria.",,Unreleased,,Unverified,2025-02-14 21:56:40+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
VRNS-RNN-3-3-5,Language,University of Notre Dame,Academia,"Brian DuSell, David Chiang",2022-10-04,The Surprising Computational Power of Nondeterministic Stack RNNs,https://arxiv.org/abs/2210.01343,3.0,,,1500000.0,,,,,,Penn TreeBank,,,,140.0,,,,,,"Traditional recurrent neural networks (RNNs) have a fixed, finite number of memory cells. In theory (assuming bounded range and precision), this limits their formal language recognition power to regular languages, and in practice, RNNs have been shown to be unable to learn many context-free languages (CFLs). In order to expand the class of languages RNNs recognize, prior work has augmented RNNs with a nondeterministic stack data structure, putting them on par with pushdown automata and increasing their language recognition power to CFLs. Nondeterminism is needed for recognizing all CFLs (not just deterministic CFLs), but in this paper, we show that nondeterminism and the neural controller interact to produce two more unexpected abilities. First, the nondeterministic stack RNN can recognize not only CFLs, but also many non-context-free languages. Second, it can recognize languages with much larger alphabet sizes than one might expect given the size of its stack alphabet. Finally, to increase the information capacity in the stack and allow it to solve more complicated tasks with large alphabet sizes, we propose a new version of the nondeterministic stack that simulates stacks of vectors rather than discrete symbols. We demonstrate perplexity improvements with this new model on the Penn Treebank language modeling benchmark.",VRNS-RNN-3-3-5,Unreleased,,,2024-11-01 14:04:56+00:00,United States of America,,,,,,,,,
DiffDock,Biology,Massachusetts Institute of Technology (MIT),Academia,"Gabriele Corso, Hannes Stärk, Bowen Jing, Regina Barzilay, Tommi Jaakkola",2022-10-04,"DiffDock: Diffusion Steps, Twists, and Turns for Molecular Docking","https://arxiv.org/abs/2210.01776, https://docs.nvidia.com/bionemo-framework/latest/models/diffdock.html",313.0,SOTA improvement,"""DiffDock obtains a 38% top-1 success rate (RMSD<2A) on PDBBind, significantly outperforming the previous state-of-the-art of traditional docking (23%) and deep learning (20%) methods""",20240000.0,"""For determining the hyperparameters of DIFFDOCK’s score model, we trained
smaller models (3.97 million parameters) that fit into 48GB of GPU RAM before scaling it up to the final model (20.24 million parameters) that was trained on four 48GB GPUs""

There's a separate 4.77M ""confidence model"" that helps make predictions along with the score model",7.2e+19,,,"""We trained our final score model on four 48GB RTX A6000 GPUs for 850 epochs (around 18 days).""

4 * 38.7 teraflops * 18 days * 24 * 3600 * 0.3 = 7.2e19

https://www.techpowerup.com/gpu-specs/rtx-a6000.c3686",PDB (Protein Data Bank),"""We evaluate our method on the complexes from PDBBind [Liu et al., 2017], a large collection of protein-ligand structures collected from PDB [Berman et al., 2003], which was used with time-based splits to benchmark many previous works""
",17000.0,"""We employ the time-split of PDBBind proposed by Stark et al. [2022] with 17k complexes from 2018 or earlier for training/validation and 363 test structures from 2019 with no ligand overlap with the training complexes""",850.0,432.0,18 days,NVIDIA RTX A6000,,,"Predicting the binding structure of a small molecule ligand to a protein -- a task known as molecular docking -- is critical to drug design. Recent deep learning methods that treat docking as a regression problem have decreased runtime compared to traditional search-based methods but have yet to offer substantial improvements in accuracy. We instead frame molecular docking as a generative modeling problem and develop DiffDock, a diffusion generative model over the non-Euclidean manifold of ligand poses. To do so, we map this manifold to the product space of the degrees of freedom (translational, rotational, and torsional) involved in docking and develop an efficient diffusion process on this space. Empirically, DiffDock obtains a 38% top-1 success rate (RMSD<2A) on PDBBind, significantly outperforming the previous state-of-the-art of traditional docking (23%) and deep learning (20%) methods. Moreover, while previous methods are not able to dock on computationally folded structures (maximum accuracy 10.4%), DiffDock maintains significantly higher precision (21.7%). Finally, DiffDock has fast inference times and provides confidence estimates with high selective accuracy.",,Open weights (unrestricted),,Likely,2025-02-14 21:58:44+00:00,United States of America,,,,,,,,,
NMST+GPT-2,Language,New York University (NYU),Academia,"Eugene Choi, Cheolhyoung Lee, Kyunghyun Cho",2022-10-03,A Non-monotonic Self-terminating Language Model,https://arxiv.org/abs/2210.00660,0.0,,,124000000.0,,1.2e+20,,,,WikiText-103,,,,2.98,,,,,,"Recent large-scale neural autoregressive sequence models have shown impressive performances on a variety of natural language generation tasks. However, their generated sequences often exhibit degenerate properties such as non-termination, undesirable repetition, and premature termination, when generated with decoding algorithms such as greedy search, beam search, top-k sampling, and nucleus sampling. In this paper, we focus on the problem of non-terminating sequences resulting from an incomplete decoding algorithm. We first define an incomplete probable decoding algorithm which includes greedy search, top-k sampling, and nucleus sampling, beyond the incomplete decoding algorithm originally put forward by Welleck et al. (2020). We then propose a non-monotonic self-terminating language model, which significantly relaxes the constraint of monotonically increasing termination probability in the originally proposed self-terminating language model by Welleck et al. (2020), to address the issue of non-terminating sequences when using incomplete probable decoding algorithms. We prove that our proposed model prevents non-terminating sequences when using not only incomplete probable decoding algorithms but also beam search. We empirically validate our model on sequence completion tasks with various architectures.",NMST+GPT-2,Unreleased,,,2024-09-27 21:31:26+00:00,United States of America,GPT-2 (124M),,,,,NMST+GPT-2,,,
AminoBert,Biology,"Harvard Medical School,Nabla Bio,Columbia University","Academia,Industry,Academia","Ratul Chowdhury, Nazim Bouatta, Surojit Biswas, Christina Floristean, Anant Kharkar, Koushik Roy, Charlotte Rochereau, Gustaf Ahdritz, Joanna Zhang, George M. Church, Peter K. Sorger, Mohammed AlQuraishi",2022-10-03,Single-sequence protein structure prediction using a language model and deep learning,https://www.nature.com/articles/s41587-022-01432-w,343.0,,,,,,,,,,,78000000000.99994,"260,000,000 sequences × 300 tokens/sequence = 78,000,000,000 tokens (7.8 × 10¹⁰)",,,,,,,"AlphaFold2 and related computational systems predict protein structure using deep learning and co-evolutionary relationships
encoded in multiple sequence alignments (MSAs). Despite high prediction accuracy achieved by these systems, challenges remain
in (1) prediction of orphan and rapidly evolving proteins for which an MSA cannot be generated; (2) rapid exploration of designed
structures; and (3) understanding the rules governing spontaneous polypeptide folding in solution. Here we report development
of an end-to-end differentiable recurrent geometric network (RGN) that uses a protein language model (AminoBERT) to learn
latent structural information from unaligned proteins. A linked geometric module compactly represents Cα backbone geometry
in a translationally and rotationally invariant way. On average, RGN2 outperforms AlphaFold2 and RoseTTAFold on orphan proteins and classes of designed proteins while achieving up to a 106
-fold reduction in compute time. These findings demonstrate
the practical and theoretical strengths of protein language models relative to MSAs in structure prediction.",,,,Unverified,2025-01-30 05:04:53+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Make-A-Video,Video,Meta AI,Industry,"Uriel Singer, Adam Polyak, Thomas Hayes, Xi Yin, Jie An, Songyang Zhang, Qiyuan Hu, Harry Yang, Oron Ashual, Oran Gafni, Devi Parikh, Sonal Gupta, Yaniv Taigman",2022-09-29,Make-A-Video: Text-to-Video Generation without Text-Video Data,https://arxiv.org/abs/2209.14792,962.0,SOTA improvement,,,,,,,,"LAION,WebVid-10M,HD-VILA-100M",,,,,,,,,Self-supervised learning,"We propose Make-A-Video -- an approach for directly translating the tremendous recent progress in Text-to-Image (T2I) generation to Text-to-Video (T2V). Our intuition is simple: learn what the world looks like and how it is described from paired text-image data, and learn how the world moves from unsupervised video footage. Make-A-Video has three advantages: (1) it accelerates training of the T2V model (it does not need to learn visual and multimodal representations from scratch), (2) it does not require paired text-video data, and (3) the generated videos inherit the vastness (diversity in aesthetic, fantastical depictions, etc.) of today's image generation models. We design a simple yet effective way to build on T2I models with novel and effective spatial-temporal modules. First, we decompose the full temporal U-Net and attention tensors and approximate them in space and time. Second, we design a spatial temporal pipeline to generate high resolution and frame rate videos with a video decoder, interpolation model and two super resolution models that can enable various applications besides T2V. In all aspects, spatial and temporal resolution, faithfulness to text, and quality, Make-A-Video sets the new state-of-the-art in text-to-video generation, as determined by both qualitative and quantitative measures.",,,,Unknown,2024-11-01 14:04:56+00:00,United States of America,,,,,,,,,True
Sparrow,Language,DeepMind,Industry,"Amelia Glaese, Nat McAleese, Maja Trębacz, John Aslanides, Vlad Firoiu, Timo Ewalds, Maribeth Rauh, Laura Weidinger, Martin Chadwick, Phoebe Thacker, Lucy Campbell-Gillingham, Jonathan Uesato, Po-Sen Huang, Ramona Comanescu, Fan Yang, Abigail See, Sumanth Dathathri, Rory Greig, Charlie Chen, Doug Fritz, Jaume Sanchez Elias, Richard Green, Soňa Mokrá, Nicholas Fernando, Boxi Wu, Rachel Foley, Susannah Young, Iason Gabriel, William Isaac, John Mellor, Demis Hassabis, Koray Kavukcuoglu, Lisa Anne Hendricks, Geoffrey Irving",2022-09-28,Improving alignment of dialogue agents via targeted human judgements,https://arxiv.org/abs/2209.14375,437.0,,,70000000000.0,70B,,,,,,,,,,,,,,,"We present Sparrow, an information-seeking dialogue agent trained to be more helpful, correct, and harmless compared to prompted language model baselines. We use reinforcement learning from human feedback to train our models with two new additions to help human raters judge agent behaviour. First, to make our agent more helpful and harmless, we break down the requirements for good dialogue into natural language rules the agent should follow, and ask raters about each rule separately. We demonstrate that this breakdown enables us to collect more targeted human judgements of agent behaviour and allows for more efficient rule-conditional reward models. Second, our agent provides evidence from sources supporting factual claims when collecting preference judgements over model statements. For factual questions, evidence provided by Sparrow supports the sampled response 78% of the time. Sparrow is preferred more often than baselines while being more resilient to adversarial probing by humans, violating our rules only 8% of the time when probed. Finally, we conduct extensive analyses showing that though our model learns to follow our rules it can exhibit distributional biases.",,,,Confident,2024-11-01 14:04:56+00:00,United Kingdom of Great Britain and Northern Ireland,Chinchilla,,"Few clues from paper. Not clear how much fine-tuning data in total. Also they freeze some layers during fine-tuning:

""In all cases when fine-tuning, we freeze the bottom 64 transformer layers of Chinchilla, and
only fine-tune the final 16 layers; this allows sharing of the frozen layers between the rule model,
preference models, and the base LM/policy when reranking and during reinforcement learning
training, resulting in a reduced memory footprint (fig. 8).""",,,,,,True
"CPM-Ant
",,"Tsinghua University,Beijing Academy of Artificial Intelligence / BAAI,ModelBest,OpenBMB (Open Lab for Big Model Base)","Academia,Academia,Industry",,2022-09-22,,https://github.com/OpenBMB/CPM-Live/tree/cpm-ant/cpm-live#model-checkpoints,,,,10000000000.0,"""CPM-Ant is an open-source Chinese pre-trained language model (PLM) with 10B parameters.""",2.004e+21,,,6*10e9*3.34e10 = 2.004e21,,,33400000000.0,"Final log: https://github.com/OpenBMB/CPM-Live/blob/cpm-ant/logs/2022-09-22.md

“Completed Data: ≈ 1,145.16GB”

But plans for CPM-Bee suggest that this was counting raw data, and only 200GB of clean data was used for training: https://github.com/OpenBMB/CPM-Live/blob/master/plans/CPM-Bee%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92%E4%B9%A6.md

200 * 167M ~= 33.4B tokens",,1632.0,"""The training of CPM-Ant lasts 68 days""",,,,,,,,Unverified,2025-02-14 21:58:53+00:00,"China,China,China,China",,,,,,,,,
Whisper,Speech,OpenAI,Industry,"Alec Radford, Jong Wook Kim, Tao Xu, Greg Brockman, Christine McLeavey, Ilya Sutskever",2022-09-21,Robust Speech Recognition via Large-Scale Weak Supervision,"https://cdn.openai.com/papers/whisper.pdf

https://arxiv.org/abs/2212.04356",2240.0,SOTA improvement,,1550000000.0,Table 1,4.2072663e+21,,,See figure 9,Unspecified unreleased,,9302400000.0,"""When scaled to 680,000 hours of multilingual and multitask
supervision, the resulting models generalize well
to standard benchmarks and are often competitive
with prior fully supervised results but in a zeroshot transfer setting without the need for any finetuning.""


13,680 words/h * 680,000h = 9,302,400,000 words",3.0,,,,,Self-supervised learning,"We study the capabilities of speech processing systems trained simply to predict large amounts of transcripts of audio on the internet. When scaled to 680,000 hours of multilingual and multitask supervision, the resulting models generalize well to standard benchmarks and are often competitive with prior fully supervised results but in a zeroshot transfer setting without the need for any finetuning. When compared to humans, the models approach their accuracy and robustness. We are releasing models and inference code to serve as a foundation for further work on robust speech processing.",,Open weights (unrestricted),,Likely,2025-02-14 21:58:59+00:00,United States of America,,,,,,,256.0,Table 17,True
DistilProtBert,Biology,Bar-Ilan University,Academia,"Yaron Geffen, Yanay Ofran, Ron Unger",2022-09-18,DistilProtBert: a distilled protein language model used to distinguish between real proteins and their randomly shuffled counterparts,https://academic.oup.com/bioinformatics/article/38/Supplement_2/ii95/6701995,23.0,,,230000000.0,"""we were able to reduce the number of DistilProtBert parameters by almost half, to 230 M""",1.9e+20,,,"""Pretraining was done on five v100 32-GB Nvidia GPUs from a DGX
cluster with a local batch size of 16 examples... The model was trained for three epochs using mixed precision and dynamic padding. Every epoch run took approximately 4 days, resulting in total pretraining time of 12 days""

5 * 125 teraFLOP/s * 12 * 24 * 3600 * 0.3 (assumed utilization) = 1.9e20",UniRef50,"""DistilProtBert was pretrained on 43 M sequences from UniRef50 with length ranging from 20 to 512 amino acids""",13000000001.000025,"43,000,000 sequences × 300 amino acids = 12,900,000,000 (1.29e10) data points

Calculation:
43,000,000 × 300 = 12,900,000,000",3.0,288.0,12 days,NVIDIA Tesla V100 DGXS 32 GB,,,"Recently, deep learning models, initially developed in the field of natural language processing (NLP), were applied successfully to analyze protein sequences. A major drawback of these models is their size in terms of the number of parameters needed to be fitted and the amount of computational resources they require. Recently, 'distilled' models using the concept of student and teacher networks have been widely used in NLP. Here, we adapted this concept to the problem of protein sequence analysis, by developing DistilProtBert, a distilled version of the successful ProtBert model. Implementing this approach, we reduced the size of the network and the running time by 50%, and the computational resources needed for pretraining by 98% relative to ProtBert model. Using two published tasks, we showed that the performance of the distilled model approaches that of the full model. We next tested the ability of DistilProtBert to distinguish between real and random protein sequences. The task is highly challenging if the composition is maintained on the level of singlet, doublet and triplet amino acids. Indeed, traditional machine-learning algorithms have difficulties with this task. Here, we show that DistilProtBert preforms very well on singlet, doublet and even triplet-shuffled versions of the human proteome, with AUC of 0.92, 0.91 and 0.87, respectively. Finally, we suggest that by examining the small number of false-positive classifications (i.e. shuffled sequences classified as proteins by DistilProtBert), we may be able to identify de novo potential natural-like proteins based on random shuffling of amino acid sequences.",,,,Confident,2025-02-14 21:59:57+00:00,Israel,,,,,,,,,
CPAC,Biology,Texas A&M,Academia,"Yuning You, Yang Shen",2022-09-18,Cross-modality and self-supervised protein embedding for compound–protein affinity and contact prediction,https://academic.oup.com/bioinformatics/article/38/Supplement_2/ii68/6702011,19.0,,,,,,,,,,,13400000001.000004,"Calculations:
60,137 × 1,000 = 6.0137 × 10⁷
12,798,671 × 1,000 = 1.2798671 × 10¹⁰
6.0137 × 10⁷ + 1.2798671 × 10¹⁰ = 1.3400678 × 10¹⁰

Final estimate: 1.34 × 10¹⁰ datapoints",,,,,,,"Motivation
Computational methods for compound–protein affinity and contact (CPAC) prediction aim at facilitating rational drug discovery by simultaneous prediction of the strength and the pattern of compound–protein interactions. Although the desired outputs are highly structure-dependent, the lack of protein structures often makes structure-free methods rely on protein sequence inputs alone. The scarcity of compound–protein pairs with affinity and contact labels further limits the accuracy and the generalizability of CPAC models.

Results
To overcome the aforementioned challenges of structure naivety and labeled-data scarcity, we introduce cross-modality and self-supervised learning, respectively, for structure-aware and task-relevant protein embedding. Specifically, protein data are available in both modalities of 1D amino-acid sequences and predicted 2D contact maps that are separately embedded with recurrent and graph neural networks, respectively, as well as jointly embedded with two cross-modality schemes. Furthermore, both protein modalities are pre-trained under various self-supervised learning strategies, by leveraging massive amount of unlabeled protein data. Our results indicate that individual protein modalities differ in their strengths of predicting affinities or contacts. Proper cross-modality protein embedding combined with self-supervised learning improves model generalizability when predicting both affinities and contacts for unseen proteins.",,,,Unverified,2025-01-30 05:04:51+00:00,United States of America,,,,,,,,,
CLIP ViT-H/14 - LAION-2B,Vision,LAION,Research collective,"Christoph Schuhmann, Romain Beaumont, Richard Vencu, Cade W Gordon, Ross Wightman, Mehdi Cherti, Theo Coombes, Aarush Katta, Clayton Mullis, Mitchell Wortsman, Patrick Schramowski, Srivatsa R Kundurthy, Katherine Crowson, Ludwig Schmidt, Robert Kaczmarczyk, Jenia Jitsev",2022-09-15, Model Card for CLIP ViT-H/14 - LAION-2B ,https://huggingface.co/laion/CLIP-ViT-H-14-laion2B-s32B-b79K,,,,986000000.0,986M params from https://huggingface.co/laion/CLIP-ViT-H-14-laion2B-s32B-b79K,7.8410000000001e+22,,,"""A CLIP ViT-H/14 model trained with the LAION-2B English subset of LAION-5B (https://laion.ai/blog/laion-5b/) using OpenCLIP (https://github.com/mlfoundations/open_clip).""
Per https://laion.ai/blog/large-openclip/ H/14 used 824 A100s, trained 42 samples per gpu-second, saw 32B samples
compute = 33% * 311.84 TFLOPS * (32 billion / 42) seconds = 7.841e22 FLOP",LAION-2B,"""A CLIP ViT-H/14 model trained with the LAION-2B English subset of LAION-5B (https://laion.ai/blog/laion-5b/) using OpenCLIP (https://github.com/mlfoundations/open_clip).""",2000000000.0,"2B size of LAION-2B
input is image text pair
""A CLIP ViT-H/14 model trained with the LAION-2B English subset of LAION-5B (https://laion.ai/blog/laion-5b/) using OpenCLIP (https://github.com/mlfoundations/open_clip).""",,,,,,,"Model Description
A CLIP ViT-H/14 model trained with the LAION-2B English subset of LAION-5B (https://laion.ai/blog/laion-5b/) using OpenCLIP (https://github.com/mlfoundations/open_clip).

Model training done by Romain Beaumont on the stability.ai cluster.

Uses
As per the original OpenAI CLIP model card, this model is intended as a research output for research communities. We hope that this model will enable researchers to better understand and explore zero-shot, arbitrary image classification. We also hope it can be used for interdisciplinary studies of the potential impact of such model.

The OpenAI CLIP paper includes a discussion of potential downstream impacts to provide an example for this sort of analysis. Additionally, the LAION-5B blog (https://laion.ai/blog/laion-5b/) and upcoming paper include additional discussion as it relates specifically to the training dataset.",,Open weights (unrestricted),,Confident,2025-02-14 22:00:09+00:00,"Multinational,Germany",,,,,,,,,
NeMO Megatron GPT 20B,Language,NVIDIA,Industry,,2022-09-15, NeMo Megatron-GPT 20B ,https://huggingface.co/nvidia/nemo-megatron-gpt-20B,,,,20000000000.0,20B,,,,"If trained for one epoch on the Pile, would be
6 * 20B * 220B = 2.64e22
No indication of actual number of tokens seen",The Pile,,341173367965.0,"Size of the pile is around 220B tokens:
825 GB * 200 words/GB * 4/3 token/word = 220B

as per figure 4 from https://arxiv.org/pdf/2204.06745
the Pile contains 341173367965 tokens

Possible they trained for less than one epoch.",,,,,,Self-supervised learning,"Megatron-GPT 20B is a transformer-based language model. GPT refers to a class of transformer decoder-only models similar to GPT-2 and 3 while 20B refers to the total trainable parameter count (20 Billion) [1, 2].",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
ProteinMPNN,Biology,,,"J. Dauparas, I. Anishchenko, N. Bennett, H. Bai, R. J. Ragotte, L. F. Milles, B. I. M. Wicky, A. Courbet, R. J. de Haas, N. Bethel, P. J. Y. Leung, T. F. Huddy, S. Pellock, D. Tischer, F. Chan, B. Koepnick, H. Nguyen, A. Kang, B. Sankaran, A. K. Bera, N. P. King, D. Baker",2022-09-15,Robust deep learning–based protein sequence design using ProteinMPNN,https://www.science.org/doi/full/10.1126/science.add2187,793.0,,,,,,,,,,,6000001.000000016,"19,700 proteins × 300 residues/protein = 5,910,000 residues ≈ 6.0 × 10⁶ datapoints",,,,,,,"While deep learning has revolutionized protein structure prediction, almost all experimentally characterized de novo protein designs have been generated using physically based approaches such as Rosetta. Here we describe a deep learning based protein sequence design method, ProteinMPNN, with outstanding performance in both in silico and experimental tests. The amino acid sequence at different positions can be coupled between single or multiple chains, enabling application to a wide range of current protein design challenges. On native protein backbones, ProteinMPNN has a sequence recovery of 52.4%, compared to 32.9% for Rosetta. Incorporation of noise during training improves sequence recovery on protein structure models, and produces sequences which more robustly encode their structures as assessed using structure prediction algorithms. We demonstrate the broad utility and high accuracy of ProteinMPNN using X-ray crystallography, cryoEM and functional studies by rescuing previously failed designs, made using Rosetta or AlphaFold, of protein monomers, cyclic homo-oligomers, tetrahedral nanoparticles, and target binding proteins.",,,,Unverified,2025-01-30 05:04:19+00:00,,,,,,,,,,
PaLI,"Language,Vision,Multimodal",Google,Industry,"Xi Chen, Xiao Wang, Soravit Changpinyo, AJ Piergiovanni, Piotr Padlewski, Daniel Salz, Sebastian Goodman, Adam Grycner, Basil Mustafa, Lucas Beyer, Alexander Kolesnikov, Joan Puigcerver, Nan Ding, Keran Rong, Hassan Akbari, Gaurav Mishra, Linting Xue, Ashish Thapliyal, James Bradbury, Weicheng Kuo, Mojtaba Seyedhosseini, Chao Jia, Burcu Karagol Ayan, Carlos Riquelme, Andreas Steiner, Anelia Angelova, Xiaohua Zhai, Neil Houlsby, Radu Soricut",2022-09-14,PaLI: A Jointly-Scaled Multilingual Language-Image Model,https://arxiv.org/abs/2209.06794v4,567.0,SOTA improvement,"""PaLI achieves state-of-the-art in multiple vision and language tasks
(such as captioning, visual question-answering, scene-text understanding)""",16900000000.0,"3.9b Image Encoder, 
14b Multimodal Encoder-Decoder",1.69e+23,,,"Pre-training the ViT component involved 1.1 million steps (they train over 1M steps but run the last 100k twice and then average the two resulting models). Batch size is 16384 and the inputs are 224x224. Table 8 indicates a forward pass with ViT-e/14 on a 224 image takes 1980 GFLOPs, so total training compute for the ViT-e/14 model is:
1980e9 * 16384 * 1.1 million * 3 (account for backward passes) = 1.07e23

In the ""overal model"" section, they then say: ""The largest model, PaLI-17B, is pretrained using 1,024 GCP-TPUv4 chips for 7 days"". It is then trained for another 3 days on 512 chips at higher resolution. 

I assume the stated TPUv4 training does not include the ViT pretraining, since it amounts to fewer FLOPs than we estimate above for the ViT.

275 teraFLOP/s * ((1024 * 7) + (512 * 3)) * 24 * 3600 * 0.3 (utilization assumption) = 6.2e22

Total: 1.07e23 + 6.2e22 = 1.69e23",WebLI,"""we introduce WebLI, a multilingual imagelanguage dataset built from images and texts available on the public web... Due to the abundance of multilingual content on the internet, the collection process for the WebLI dataset can be scaled to cover 10 billion images and 12 billion alt-texts. In addition to annotation with web text, we use publicly available automatic service to extract OCR annotations on all images, resulting in 29 billion image-OCR pairs. To balance quality and retain scale, we filter the dataset to the highest quality subset retaining only the top 10% scoring of the original WebLI image-text pairs (about 1B examples), which we use to train PaLI""",1600000000.0,"""During training, the model passes over 1.6B images, one epoch over the entire pretraining dataset""",1.0,240.0,10,Google TPU v4,1024.0,,"Effective scaling and a flexible task interface enable large language models to excel at many tasks. We present PaLI (Pathways Language and Image model), a model that extends this approach to the joint modeling of language and vision. PaLI generates text based on visual and textual inputs, and with this interface performs many vision, language, and multimodal tasks, in many languages. To train PaLI, we make use of large pre-trained encoder-decoder language models and Vision Transformers (ViTs). This allows us to capitalize on their existing capabilities and leverage the substantial cost of training them. We find that joint scaling of the vision and language components is important. Since existing Transformers for language are much larger than their vision counterparts, we train a large, 4-billion parameter ViT (ViT-e) to quantify the benefits from even larger-capacity vision models. To train PaLI, we create a large multilingual mix of pretraining tasks, based on a new image-text training set containing 10B images and texts in over 100 languages. PaLI achieves state-of-the-art in multiple vision and language tasks (such as captioning, visual question-answering, scene-text understanding), while retaining a simple, modular, and scalable design.",,Unreleased,,Likely,2024-12-09 20:42:03+00:00,United States of America,,,,,,,,,True
BEIT-3,"Multimodal,Vision,Language",Microsoft,Industry,Image as a Foreign Language: BEiT Pretraining for All Vision and Vision-Language Tasks,2022-08-22,Image as a Foreign Language: BEiT Pretraining for All Vision and Vision-Language Tasks,https://arxiv.org/abs/2208.10442,563.0,SOTA improvement,"from abstract: 'In this work, we introduce a general-purpose multimodal foundation model BEiT-3, which achieves state-of-the-art transfer performance on both vision and vision-language tasks.'",1900000000.0,1.9B from Table 2,7e+19,,,"from Table 11, 1M training steps with batch size 6144. 
From Table 2 we have that model have 1.9B parameters.
Model is VIT","ImageNet21k,COCO,English Wikipedia,BookCorpus (BooksCorpus, Toronto Book Corpus)",from Table 3,,"from Table 3
21M pairs image text,
14M images,160GB documents",,,,,,,"A big convergence of language, vision, and multimodal pretraining is emerging. In this work, we introduce a general-purpose multimodal foundation model BEiT-3, which achieves state-of-the-art transfer performance on both vision and vision-language tasks. Specifically, we advance the big convergence from three aspects: backbone architecture, pretraining task, and model scaling up. We introduce Multiway Transformers for general-purpose modeling, where the modular architecture enables both deep fusion and modality-specific encoding. Based on the shared backbone, we perform masked ""language"" modeling on images (Imglish), texts (English), and image-text pairs (""parallel sentences"") in a unified manner. Experimental results show that BEiT-3 obtains state-of-the-art performance on object detection (COCO), semantic segmentation (ADE20K), image classification (ImageNet), visual reasoning (NLVR2), visual question answering (VQAv2), image captioning (COCO), and cross-modal retrieval (Flickr30K, COCO). ",,Unreleased,,Likely,2025-02-17 15:54:59+00:00,United States of America,,,,,,,,,
PaLM-SayCan,Robotics,Google,Industry,"Michael Ahn, Anthony Brohan, Noah Brown, Yevgen Chebotar, Omar Cortes, Byron David, Chelsea Finn, Chuyuan Fu, Keerthana Gopalakrishnan, Karol Hausman, Alex Herzog, Daniel Ho, Jasmine Hsu, Julian Ibarz, Brian Ichter, Alex Irpan, Eric Jang, Rosario Jauregui Ruano, Kyle Jeffrey, Sally Jesmonth, Nikhil J Joshi, Ryan Julian, Dmitry Kalashnikov, Yuheng Kuang, Kuang-Huei Lee, Sergey Levine, Yao Lu, Linda Luu, Carolina Parada, Peter Pastor, Jornell Quiambao, Kanishka Rao, Jarek Rettinghouse, Diego Reyes, Pierre Sermanet, Nicolas Sievers, Clayton Tan, Alexander Toshev, Vincent Vanhoucke, Fei Xia, Ted Xiao, Peng Xu, Sichun Xu, Mengyuan Yan, Andy Zeng",2022-08-16,"Do As I Can, Not As I Say: Grounding Language in Robotic Affordances",https://arxiv.org/abs/2204.01691,1446.0,,,540000000000.0,"540B from PaLM-540B.

",,,,"""The RL model is trained using 16 TPUv3 chips and for about 100 hours, as well as a pool of 3000 CPU workers to collect episodes and another 3000 CPU workers to compute target Q-values.""

1600 hours * 3600 * 123 teraflops * 0.4 (assumed utilization) = 2.83e20

PaLM itself uses 2.5272e+24, so additional training is negligible.",,,,,,100.0,The RL model is trained using 16 TPUv3 chips and for about 100 hours,Google TPU v3,16.0,Reinforcement learning,"Large language models can encode a wealth of semantic knowledge about the world. Such knowledge could be extremely useful to robots aiming to act upon high-level, temporally extended instructions expressed in natural language. However, a significant weakness of language models is that they lack real-world experience, which makes it difficult to leverage them for decision making within a given embodiment. For example, asking a language model to describe how to clean a spill might result in a reasonable narrative, but it may not be applicable to a particular agent, such as a robot, that needs to perform this task in a particular environment. We propose to provide real-world grounding by means of pretrained skills, which are used to constrain the model to propose natural language actions that are both feasible and contextually appropriate. The robot can act as the language model's ""hands and eyes,"" while the language model supplies high-level semantic knowledge about the task. We show how low-level skills can be combined with large language models so that the language model provides high-level knowledge about the procedures for performing complex and temporally-extended instructions, while value functions associated with these skills provide the grounding necessary to connect this knowledge to a particular physical environment. We evaluate our method on a number of real-world robotic tasks, where we show the need for real-world grounding and that this approach is capable of completing long-horizon, abstract, natural language instructions on a mobile manipulator. The project's website and the video can be found at this https URL.",,,,Likely,2024-12-05 19:26:20+00:00,United States of America,PaLM (540B),2.83e+20,"I think PaLM-540B wasn't actually involved in training and the authors trained a separate RL model. 

""The RL model is trained using 16 TPUv3 chips and for about 100 hours, as well as a pool of 3000 CPU workers to collect episodes and another 3000 CPU workers to compute target Q-values.""

Ignoring CPU calculations:
1600 hours * 3600 * 123 teraflops * 0.4 (assumed utilization) = 2.83e20",,,,,,True
Luminous-supreme,Language,Aleph Alpha,Industry,,2022-08-15,Model Card Luminous,https://docs.aleph-alpha.com/docs/introduction/model-card/,,,,70000000000.0,"""~70B""",3.5461e+23,,,"""~839000h"" GPU-hours on A100s, per Environmental Impact section of model card.

312 trillion * 839000 * 3600 * 0.3 = 2.8e23

6ND = 6*70B*1069.30B = 4.49106e+23

sqrt(2.8e23*4.49106e+23) = 3.54612... × 10^23

reported here:
167TFLOPS
https://docs.aleph-alpha.com/docs/Deprecated%20Luminous/Deprecated-Luminous/model-card/",,"""The Luminous family has been trained on a dataset compiled of sources in English, German, French, Spanish and Italian...""

more details in model card 
https://docs.aleph-alpha.com/docs/introduction/model-card/",1069300000000.0,"from the table

Total Size:
2.77 + 0.79 + 0.18 + 0.07 + 0.06 + 0.02 = 3.89 TB
Tokens:
761.41B + 217.15B + 49.47B + 19.29B + 16.49B + 5.49B = 1069.30B tokens",,2016.0,Approximately 12 weeks = 2016 hours,"NVIDIA A100 SXM4 40 GB,NVIDIA A100 SXM4 80 GB",512.0,,"The Luminous series is a family of large language models. Large language models are powerful technological tools that can process and produce text. These capabilities emerge during model “training” where the model is exposed to significant amounts of human text data. Similar to a person who deliberately absorbs information while reading a whole library and half of the internet, large language models acquire structural understanding (and not necessarily also knowledge) of language and accumulated information about the world.

The Luminous family currently consists of three vanilla models, which differ in complexity and ability. They are, from the smallest to the largest, luminous-base, luminous-extended and luminous-supreme. All Luminous models are trained in the five most commonly spoken European languages: English, German, French, Italian and Spanish.",,API access,,Confident,2024-11-18 20:56:45+00:00,Germany,,,,,,,,,
Luminous-extended,Language,Aleph Alpha,Industry,,2022-08-15,,https://docs.aleph-alpha.com/docs/Deprecated%20Luminous/Deprecated-Luminous/model-card/,,,,30000000000.0,~30B (~42B with multi-modality),1.0019457e+23,,,"311840000000000*360000*3600*0.3 = 1.2124339e+23

6ND = 6*30*10^9*460000000000 = 8.28e+22

sqrt(8.28e+22*1.2124339e+23) = 1.0019457e+23",,"""""""The Luminous family has been trained on a dataset compiled of sources in English, German, French, Spanish and Italian...""""

more details in model card 
https://docs.aleph-alpha.com/docs/introduction/model-card/""",460000000000.0,"~460B tokens
230000 iterations",,1344.0,~ 8 weeks = 56*24 = 1344 hours,NVIDIA A100 SXM4 40 GB,512.0,,"Aleph Alpha luminous-extended is the second largest model which is faster and cheaper than Luminous-supreme. the model can perform information extraction, language simplification and has multi-capable image description capability. You can try Aleph Alpha models with predefined examples for free. Go to at the Jumpstart page on their site and click through the examples on Classification and Labelling, Generation, Information Extraction, Translation and Conversion and Multimodal. Aleph Alpha are based in Europe, which allows customers with sensitive data to process their information in compliance with European regulations for data protection and security on a sovereign, European computing infrastructure.",,API access,,Confident,2024-11-18 20:56:58+00:00,Germany,,,,,,,,,
Luminous-base,Language,Aleph Alpha,Industry,,2022-08-15,,https://docs.aleph-alpha.com/docs/Deprecated%20Luminous/Deprecated-Luminous/model-card/,,,,13000000000.0,~13B (~15B with multi-modality),3.1673782e+22,,,"311840000000000*95000*3600*0.3 = 3.1994784e+22

6ND = 6*13*10^9*402000000000 = 3.1356e+22

sqrt(3.1356e+22* 3.1994784e+22) = 3.1673782e+22",,"""""""The Luminous family has been trained on a dataset compiled of sources in English, German, French, Spanish and Italian...""""

more details in model card 
https://docs.aleph-alpha.com/docs/introduction/model-card/""",402000000000.0,"192000 iterations
~402B tokens",,1344.0,~ 8 weeks = 56*24 = 1344 hours,NVIDIA A100 SXM4 40 GB,128.0,,"Luminous-base is our smallest model. That makes it our fastest and cheapest model. Therefore, it is best used for use-cases where speed is important and costs should be low. This may include tasks like classification and labelling.",,API access,,Confident,2024-11-18 21:02:25+00:00,Germany,,,,,,,,,
PeTriBERT,Biology,"University of Montpellier,BionomeeX",Industry,"Baldwin Dumortier, Antoine Liutkus, Clément Carré, Gabriel Krouk",2022-08-13,PeTriBERT : Augmenting BERT with tridimensional encoding for inverse protein folding and design,https://www.biorxiv.org/content/10.1101/2022.08.10.503344v1.abstract,9.0,,,,,1e+20,,,"1. Hardware setup: 8x NVIDIA Tesla V100 SXM2 32GB GPUs (1.25 x 10^14 FLOP/s per GPU)

2. Training duration: 70 hours (directly provided) = 252,000 seconds

3. Utilization rate: 40%

4. Final calculation:
1.25 x 10^14 FLOP/s/GPU × 8 GPUs × 252,000 seconds × 0.4 = 1.0 x 10^20 FLOPs",,,297000001.0000001,"Training sequence data points = 290,000 proteins × 1,024 tokens/protein = 297,160,000 tokens (~2.97×10⁸)",,,,,,,"Protein is biology workhorse. Since the recent break-through of novel folding methods, the amount of available structural data is increasing, closing the gap between data-driven sequence-based and structure-based methods. In this work, we focus on the inverse folding problem that consists in predicting an amino-acid primary sequence from protein 3D structure. For this purpose, we introduce a simple Transformer model from Natural Language Processing augmented 3D-structural data. We call the resulting model PeTriBERT: Proteins embedded in tridimensional representation in a BERT model. We train this small 40-million parameters model on more than 350 000 proteins sequences retrieved from the newly available AlphaFoldDB database. Using PetriBert, we are able to in silico generate totally new proteins with a GFP-like structure. These 9 of 10 of these GFP structural homologues have no ressemblance when blasted on the whole entry proteome database. This shows that PetriBert indeed capture protein folding rules and become a valuable tool for de novo protein design.",,,,Unverified,2025-02-14 22:00:24+00:00,"France,France",,,,,,,,,
M3GNet,Materials science,University of California San Diego,Academia,"Chi Chen, Shyue Ping Ong",2022-08-11,A Universal Graph Deep Learning Interatomic Potential for the Periodic Table,https://arxiv.org/abs/2202.02450,,,,,,,,,,Materials Project,"""Utilizing the largely untapped dataset of more than 187,000 energies, 16,000,000 forces and
1,600,000 stresses from structural relaxations performed by the Materials Project since its
inception in 2011, we trained a universal material graph with three-body interactions neural
network (M3GNet) IAP for 89 elements of the periodic table with low energy, force, and stress errors.""",,,,,,,,,"Interatomic potentials (IAPs), which describe the potential energy surface of atoms, are a fundamental input for atomistic simulations. However, existing IAPs are either fitted to narrow chemistries or too inaccurate for general applications. Here, we report a universal IAP for materials based on graph neural networks with three-body interactions (M3GNet). The M3GNet IAP was trained on the massive database of structural relaxations performed by the Materials Project over the past 10 years and has broad applications in structural relaxation, dynamic simulations and property prediction of materials across diverse chemical spaces. About 1.8 million materials were identified from a screening of 31 million hypothetical crystal structures to be potentially stable against existing Materials Project crystals based on M3GNet energies. Of the top 2000 materials with the lowest energies above hull, 1578 were verified to be stable using DFT calculations. These results demonstrate a machine learning-accelerated pathway to the discovery of synthesizable materials with exceptional properties.",,Open weights (unrestricted),,Unknown,2025-01-06 17:36:12+00:00,United States of America,,,,,,,,,
BlenderBot 3,Language,"McGill University,Meta AI,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms)","Academia,Industry,Academia","Kurt Shuster, Jing Xu, Mojtaba Komeili, Da Ju, Eric Michael Smith, Stephen Roller, Megan Ung, Moya Chen, Kushal Arora, Joshua Lane, Morteza Behrooz, William Ngan, Spencer Poff, Naman Goyal, Arthur Szlam, Y-Lan Boureau, Melanie Kambadur, Jason Weston",2022-08-10,BlenderBot 3: a deployed conversational agent that continually learns to responsibly engage,"https://arxiv.org/abs/2208.03188, https://github.com/facebookresearch/ParlAI/blob/main/parlai/zoo/bb3/model_card.md

training code: https://parl.ai/projects/bb3/ ",218.0,SOTA improvement,"""Human evaluations show its superiority to existing open-domain dialogue agents, including its predecessors""",175000000000.0,,4.3e+23,,,(taken from OPT-175 base),BlenderBot 3 Data,"Fine-tuned from OPT-175B.

""The fine-tuning data for BB3 comprises roughly 4 million source/target examples spread across the various training modules. This corresponds to around 1.13B training tokens. When fine-tuning the OPT-based BB3 models, we additionally included 600k examples ( 170m tokens) of pre-training data to help with training stability. Table 16 and Table 17 enumerate the breakdown by module.""
",1300000000.0,,,,,NVIDIA A100 SXM4 40 GB,128.0,,"We present BlenderBot 3, a 175B parameter dialogue model capable of open-domain conversation with access to the internet and a long-term memory, and having been trained on a large number of user defined tasks. We release both the model weights and code, and have also deployed the model on a public web page to interact with organic users. This technical report describes how the model was built (architecture, model and training scheme), and details of its deployment, including safety mechanisms. Human evaluations show its superiority to existing open-domain dialogue agents, including its predecessors (Roller et al., 2021; Komeili et al., 2022). Finally, we detail our plan for continual learning using the data collected from deployment, which will also be publicly released. The goal of this research program is thus to enable the community to study ever-improving responsible agents that learn through interaction.",,Open weights (non-commercial),,Likely,2025-02-14 22:00:32+00:00,"Canada,United States of America,Canada",OPT-175B,1.5e+21,"""The 30B and 175B parameter BlenderBot 3 models were each trained for one epoch of the training data
on 64 (30B) or 128 (175B) x 40gb A100 GPUs; we found that the model (especially the 175B version)
overfit significantly when seeing the training data more than once. The 175B model was trained with
a batch size of 2^18 and the 30B model was trained with a batch size of 2^19, resulting in roughly 5600
updates and 2800 updates respectively.""

175b params * 5600 * 2^18 * 6 = 1.5e21
",,,,262144.0,"Note that this is batch size for fine-tuning. Blenderbot is based on OPT-175B which had batch size 2M.

""The 175B model was trained with a batch size of 2^18""
2^18 = 262144",
RNA-FM,Biology,"Chinese University of Hong Kong (CUHK),Fudan University,Shanghai AI Lab,Harbin Institute of Technology,University of Electronic Science and Technology of China,Massachusetts Institute of Technology (MIT),Harvard University,Shanghai Zelixir Biotech,CUHK Shenzhen Research Institute","Academia,Academia,Academia,Academia,Academia,Academia,Academia,Industry","Jiayang Chen, Zhihang Hu, Siqi Sun, Qingxiong Tan, Yixuan Wang, Qinze Yu, Licheng Zong, Liang Hong, Jin Xiao, Tao Shen, Irwin King, Yu Li",2022-08-08,Interpretable RNA Foundation Model from Unannotated Data for Highly Accurate RNA Structure and Function Predictions,https://arxiv.org/abs/2204.00300,78.0,,,,,2.59999999999998e+21,,,"1. Hardware setup: 8x NVIDIA A100 GPUs (3.12E14 FLOP/s per GPU)

2. Training duration: 30 days estimated (2,592,000 seconds)

3. Utilization rate: 40%

4. Calculation: 3.12E14 FLOP/s × 8 GPUs × 2,592,000 seconds × 0.4 = 2.59E21 FLOPs",,,23500000000.99996,"23 million sequences × 1024 tokens per sequence:
23,000,000 × 1,024 = 23 × 10⁶ × 1.024 × 10³ = 2.35 × 10¹⁰ tokens",,,,,,,"Non-coding RNA structure and function are essential to understanding various biological processes, such
as cell signaling, gene expression, and post-transcriptional regulations. These are all among the core problems
in the RNA field. With the rapid growth of sequencing technology, we have accumulated a massive amount
of unannotated RNA sequences. On the other hand, expensive experimental observatory results in only limited
numbers of annotated data and 3D structures. Hence, it is still challenging to design computational methods for
predicting their structures and functions. The lack of annotated data and systematic study causes inferior performance. To resolve the issue, we propose a novel RNA foundation model (RNA-FM) to take advantage of all
the 23 million non-coding RNA sequences through self-supervised learning. Within this approach, we discover
that the pre-trained RNA-FM could infer sequential and evolutionary information of non-coding RNAs without
using any labels. Furthermore, we demonstrate RNA-FM’s effectiveness by applying it to the downstream secondary/3D structure prediction, SARS-CoV-2 genome structure and evolution prediction, protein-RNA binding
preference modeling, and gene expression regulation modeling. The comprehensive experiments show that the
proposed method improves the RNA structural and functional modelling results significantly and consistently.
Despite only being trained with unlabelled data, RNA-FM can serve as the foundational model for the field.",,,,Unverified,2025-02-14 22:00:41+00:00,"Hong Kong,China,China,China,China,China,United States of America,United States of America,China,China",,,,,,,,,
FastSpeech 2,Speech,"Zhejiang University,Microsoft Research Asia","Academia,Industry","Yi Ren, Chenxu Hu, Xu Tan, Tao Qin, Sheng Zhao, Zhou Zhao, Tie-Yan Liu",2022-08-08,FastSpeech 2: Fast and High-Quality End-to-End Text to Speech,https://arxiv.org/abs/2006.04558,,,,27000000.0,27M,2.2977e+18,,,125000000000000*17.02*3600*0.3 = 2.2977e+18,LJSpeech,"LJSpeech contains 13,100 English audio clips (about 24 hours) and corresponding text transcripts. We split the dataset into three sets: 12,228 samples for training, 349 samples (with document title LJ003) for validation
and 523 samples (with document title LJ001 and LJ002) for testing.",,,,,"17.02 h (Table 2)

We train FastSpeech 2 on 1 NVIDIA V100 GPU, with batchsize of 48 sentences.",NVIDIA V100,1.0,,"Non-autoregressive text to speech (TTS) models such as FastSpeech can synthesize speech significantly faster than previous autoregressive models with comparable quality. The training of FastSpeech model relies on an autoregressive teacher model for duration prediction (to provide more information as input) and knowledge distillation (to simplify the data distribution in output), which can ease the one-to-many mapping problem (i.e., multiple speech variations correspond to the same text) in TTS. However, FastSpeech has several disadvantages: 1) the teacher-student distillation pipeline is complicated and time-consuming, 2) the duration extracted from the teacher model is not accurate enough, and the target mel-spectrograms distilled from teacher model suffer from information loss due to data simplification, both of which limit the voice quality. In this paper, we propose FastSpeech 2, which addresses the issues in FastSpeech and better solves the one-to-many mapping problem in TTS by 1) directly training the model with ground-truth target instead of the simplified output from teacher, and 2) introducing more variation information of speech (e.g., pitch, energy and more accurate duration) as conditional inputs. Specifically, we extract duration, pitch and energy from speech waveform and directly take them as conditional inputs in training and use predicted values in inference. We further design FastSpeech 2s, which is the first attempt to directly generate speech waveform from text in parallel, enjoying the benefit of fully end-to-end inference. Experimental results show that 1) FastSpeech 2 achieves a 3x training speed-up over FastSpeech, and FastSpeech 2s enjoys even faster inference speed; 2) FastSpeech 2 and 2s outperform FastSpeech in voice quality, and FastSpeech 2 can even surpass autoregressive models. Audio samples are available at this https URL.",,Unreleased,,Likely,2024-12-02 20:40:09+00:00,"China,China",,,,,,,,,
GLM-130B,Language,Tsinghua University,Academia,"Aohan Zeng, Xiao Liu, Zhengxiao Du, Zihan Wang, Hanyu Lai, Ming Ding, Zhuoyi Yang, Yifan Xu, Wendi Zheng, Xiao Xia, Weng Lam Tam, Zixuan Ma, Yufei Xue, Jidong Zhai, Wenguang Chen, Peng Zhang, Yuxiao Dong, Jie Tang",2022-08-04,GLM-130B: An Open Bilingual Pre-trained Model,https://keg.cs.tsinghua.edu.cn/glm-130b/posts/glm-130b/,989.0,SOTA improvement,"""GLM-130B achieves an accuracy of 80.2% on zero-shot LAMBADA (En), while 76.2% for GPT-3 175B and 77.9% for the SOTA offered by PaLM 540B.""",130000000000.0,Dense model,3.5490054945e+23,,,"""96 NVIDIA A100 (40G * 8) servers for 2 months""

312 TFLOPS/GPU * 96 servers * 8 GPU/server * 2 months * 32.5% utilization = 4.037e23

utilization rate - citation from the paper: ""we report hardware FLOPs utilization (HFU) of 43.3% and model FLOPs utilization (MFU) of 32.5% due to re-materialization.""

Aligns pretty well with 6ND:
6 * 400B * 130B = 3.12E23

Geometric mean: sqrt(4.037e23 * 3.12e23) = 3.549e23","The Pile,WuDao Corpora","""The pre-training data includes 1.2T Pile (train split) (Gao et al., 2020) English, 1.0T Chinese WudaoCorpora (Yuan et al., 2021), and 250G Chinese corpora (including online forums, encyclopedia, and
QA) we crawl from the web, which form a balanced composition of English and Chinese contents""",400000000000.0,"400B ""We completed the 400B-token training and evaluation of GLM-130B in July, and subsequently released the model and pre-training details in August 2022. ""  from https://arxiv.org/pdf/2406.12793

""As of July 3rd, 2022, GLM-130B has been trained on over 400 billion text tokens (200B each for Chinese and English)""",1.0,1440.0,"""During the 60-day access to the cluster, we manage to train GLM-130B for 400 billion tokens""
60 days * 24 = 1,440 hours",NVIDIA A100 SXM4 40 GB,768.0,,"GLM-130B (ICLR 2023) is an open bilingual (English & Chinese) bidirectional dense model with 130 billion parameters, pre-trained using the General Language Model (GLM) algorithm1. It is designed to support inference tasks with the 130B parameters on a single A100 (40G * 8) or V100 (32G * 8) server. As of July 3rd, 2022, GLM-130B has been trained on over 400 billion text tokens (200B each for Chinese and English) ",GLM-130B,Open weights (non-commercial),0.325,Confident,2025-02-14 22:00:53+00:00,China,,,,,,,8650752.0,,True
AlexaTM 20B,Language,Amazon,Industry,"Saleh Soltan, Shankar Ananthakrishnan, Jack FitzGerald, Rahul Gupta, Wael Hamza, Haidar Khan, Charith Peris, Stephen Rawls, Andy Rosenbaum, Anna Rumshisky, Chandana Satya Prakash, Mukund Sridhar, Fabian Triefenbach, Apurv Verma, Gokhan Tur, Prem Natarajan",2022-08-02,AlexaTM 20B: Few-Shot Learning Using a Large-Scale Multilingual Seq2Seq Model,https://arxiv.org/abs/2208.01448,73.0,SOTA improvement,The Abstract reports SOTA improvement on multiple benchmarks.,19750000000.0,See Table 1 on p.3 of the paper,2.04374016e+23,,,"Training throughput is reported as 154 TFLOP/s - see p.5 of the paper.
""We relied on an internal and optimized version of DeepSpeed that we have since open-sourced (Chiu & Zheng, 2022) to obtain training throughput of up to 154 TFLOPS/GPU on 16 AWS p4d.24xlarge compute instances.""

Accelerator compute days are reported as 15,360 days - see Table 17 on p.18 of the paper.","mC4,Wikipedia",,1319000000000.0,"See Table 2 on p.3 of the paper.

119B Wikipedia tokens + 1.2T mC4 tokens = 1319000000000 tokens",,2880.0,"See p.5 of the paper: ""We trained AlexaTM 20B for 120 days on 128 A100 GPUs...""",NVIDIA A100,128.0,,"In this work, we demonstrate that multilingual large-scale sequence-to-sequence (seq2seq) models, pre-trained on a mixture of denoising and Causal Language Modeling (CLM) tasks, are more efficient few-shot learners than decoder-only models on various tasks. In particular, we train a 20 billion parameter multilingual seq2seq model called Alexa Teacher Model (AlexaTM 20B) and show that it achieves state-of-the-art (SOTA) performance on 1-shot summarization tasks, outperforming a much larger 540B PaLM decoder model. AlexaTM 20B also achieves SOTA in 1-shot machine translation, especially for low-resource languages, across almost all language pairs supported by the model (Arabic, English, French, German, Hindi, Italian, Japanese, Marathi, Portuguese, Spanish, Tamil, and Telugu) on Flores-101 dataset. We also show in zero-shot setting, AlexaTM 20B outperforms GPT3 (175B) on SuperGLUE and SQuADv2 datasets and provides SOTA performance on multilingual tasks such as XNLI, XCOPA, Paws-X, and XWinograd. Overall, our results present a compelling case for seq2seq models as a powerful alternative to decoder-only models for Large-scale Language Model (LLM) training. ",,API access,0.4935,Confident,2025-02-17 15:55:19+00:00,United States of America,,,,Amazon Web Services,,,2000000.0,"""We trained AlexaTM 20B for 120 days on 128 A100 GPUs for the total of 500k updates with the accumulated batch size of 2 million tokens""",
ProtGPT2,Biology,University of Bayreuth,Academia,"Noelia Ferruz, Steffen Schmidt, Birte Höcker ",2022-07-27,ProtGPT2 is a deep unsupervised language model for protein design,https://www.nature.com/articles/s41467-022-32007-7,367.0,,,738000000.0,"""Here, we introduce ProtGPT2, an autoregressive Transformer model with 738 million parameters capable of generating de novo protein sequences in a high-throughput fashion.""",4.1e+21,,,"""The model trained on 128 NVIDIA A100s in 4 days""

128 * 4 * 24 * 3600 * 312 trillion FLOP/s * 0.3 = 4.1e21

5.3E+21 from Table 9 https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1",UniRef50,"""We took Uniref50 version 2021_04 as the dataset for training, containing 49,874,565 sequences""",,,,96.0,,NVIDIA A100,128.0,Unsupervised,"Protein design aims to build novel proteins customized for specific purposes, thereby holding the potential to tackle many environmental and biomedical problems. Recent progress in Transformer-based architectures has enabled the implementation of language models capable of generating text with human-like capabilities. Here, motivated by this success, we describe ProtGPT2, a language model trained on the protein space that generates de novo protein sequences following the principles of natural ones. The generated proteins display natural amino acid propensities, while disorder predictions indicate that 88% of ProtGPT2-generated proteins are globular, in line with natural sequences. Sensitive sequence searches in protein databases show that ProtGPT2 sequences are distantly related to natural ones, and similarity networks further demonstrate that ProtGPT2 is sampling unexplored regions of protein space. AlphaFold prediction of ProtGPT2-sequences yields well-folded non-idealized structures with embodiments and large loops and reveals topologies not captured in current structure databases. ProtGPT2 generates sequences in a matter of seconds and is freely available.",,Open weights (unrestricted),,Confident,2025-02-19 19:09:41+00:00,Germany,,,,,,,,,
GPT-NeoX-Japanese,Language,Abeja,Industry,"Shinya Otani, Takayoshi Makabe, Anuj Arora, Kyo Hattori ",2022-07-27,"This repository provides a 2.7B-parameter Japanese GPT-NeoX-based model. The model was trained by ABEJA, Inc","https://huggingface.co/abeja/gpt-neox-japanese-2.7b, https://tech-blog.abeja.asia/entry/abeja-gpt-project-202207",,,,2700000000.0,2.7B,,,,,"Japanese CC-100,Wikipedia (ja)","""The model was trained on Japanese CC-100, Japanese Wikipedia, and Japanese OSCAR.""",,,,,,,,,"https://huggingface.co/docs/transformers/model_doc/gpt_neox_japanese

We introduce GPT-NeoX-Japanese, which is an autoregressive language model for Japanese, trained on top of https://github.com/EleutherAI/gpt-neox. Japanese is a unique language with its large vocabulary and a combination of hiragana, katakana, and kanji writing scripts. To address this distinct structure of the Japanese language, we use a special sub-word tokenizer. We are very grateful to tanreinama for open-sourcing this incredibly helpful tokenizer. Following the recommendations from Google’s research on PaLM, we have removed bias parameters from transformer blocks, achieving better model performance. Please refer this article in detail.

Development of the model was led by Shinya Otani, Takayoshi Makabe, Anuj Arora, and Kyo Hattori from ABEJA, Inc.. For more information on this model-building activity, please refer here (ja).",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,Japan,GPT-NeoX-20B,,actually 2.7B,,,,,,
OmegaPLM,Biology,"Massachusetts Institute of Technology (MIT),Westlake University","Academia,Academia","Ruidong Wu, Fan Ding, Rui Wang, Rui Shen, Xiwen Zhang, Shitong Luo, Chenpeng Su, Zuofan Wu, Qi Xie, Bonnie Berger, Jianzhu Ma, Jian Peng",2022-07-22,High-resolution de novo structure prediction from primary sequence,https://www.biorxiv.org/content/10.1101/2022.07.21.500999v1,268.0,Historical significance,"""Here, we introduce OmegaFold, the first computational method to successfully predict high-resolution protein structure from a single primary sequence alone. Using a new combination of a protein language model that allows us to make predictions from single sequences and a geometry-inspired transformer model trained on protein structures, OmegaFold outperforms RoseTTAFold and achieves similar prediction accuracy to AlphaFold2 on recently released structures""",670000000.0,"""Our model contains 66 layers with around 670 million parameters without sharing parameters, which doubles the layer count of ESM-1b but roughly retains the parameter count.""",1.03514112e+22,,,"""OmegaPLM is implemented in PyTorch (44) and trained for 2,560 GPU Nvidia A100 80G days."" 
""Default precision format in Nvidia A100 GPUs is set to TensorFloat-32 for matrix operations.""

Assume 0.3 utilization for language model

Estimate: (2560 * 24 * 3600) s * 156e12 FLOP/s * 0.3 * = 1.04e22",UniRef50,"""After pretraining on sequences in UniRef50 (dated at 2021/04)""",8960000000.999996,"Number of sequences: 35 x 10^6
Sequence length: 512
Total data points: 35 x 10^6 x 512 = 1.792 x 10^10 tokens

First stage crop size: 256
First stage data points: 35 x 10^6 x 256 = 8.96 x 10^9 tokens

Additional structural data: ~110,000 sequences = 7.68 x 10^7 tokens

Final estimate: 8.96 x 10^9 tokens",,,"2,560 GPU Nvidia A100 80G days",NVIDIA A100 SXM4 80 GB,,,"Recent breakthroughs have used deep learning to exploit evolutionary information in multiple sequence alignments (MSAs) to accurately predict protein structures. However, MSAs of homologous proteins are not always available, such as with orphan proteins or fast-evolving proteins like antibodies, and a protein typically folds in a natural setting from its primary amino acid sequence into its three-dimensional structure, suggesting that evolutionary information and MSAs should not be necessary to predict a protein’s folded form. Here, we introduce OmegaFold, the first computational method to successfully predict high-resolution protein structure from a single primary sequence alone. Using a new combination of a protein language model that allows us to make predictions from single sequences and a geometry-inspired transformer model trained on protein structures, OmegaFold outperforms RoseTTAFold and achieves similar prediction accuracy to AlphaFold2 on recently released structures. OmegaFold enables accurate predictions on orphan proteins that do not belong to any functionally characterized protein family and antibodies that tend to have noisy MSAs due to fast evolution. Our study fills a much-encountered gap in structure prediction and brings us a step closer to understanding protein folding in nature.",,,,Confident,2025-02-17 15:55:43+00:00,"United States of America,China",,,,,,,2097152.0,"""[...] each batch contains 4,096 sequences and each sequence is padded or cropped to 512 residues"" 4096 * 512 = 2097152",
ESM2-15B,Biology,"Meta AI,New York University (NYU),Stanford University,Massachusetts Institute of Technology (MIT)","Industry,Academia,Academia,Academia","Zeming Lin, Halil Akin, Roshan Rao, Brian Hie, Zhongkai Zhu, Wenting Lu, Nikita Smetanin, Robert Verkuil, Ori Kabeli, Yaniv Shmueli, Allan dos Santos Costa, Maryam Fazel-Zarandi, Tom Sercu, Salvatore Candido, Alexander Rives",2022-07-21,Evolutionary-scale prediction of atomic-level protein structure with a language model,"https://www.science.org/doi/abs/10.1126/science.ade2574
https://www.biorxiv.org/content/10.1101/2022.07.20.500902v2",636.0,SOTA improvement,"""The resulting ESM-2 model family significantly outperforms previously state-of-the-art ESM-1b (a ∼650 million parameter model) at a comparable number of parameters, and on structure prediction benchmarks it also outperforms other recent protein language models""",15000000000.0,"""we train models up to 15B parameters""",7.35000000001e+22,,,"from xTrimoPGLM paper Table 9 (https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1): 5.1e22 FLOP

from Arb Research (https://arbresearch.com/files/gen_bio.pdf): ""ESM-2-15B: 270000 updates x 3.2M batch size x 15 B “connections” x 6. : 7.8e22 FLOP

from the paper's Supplementary Materials: 
""We trained each model over 512 NVIDIA V100 GPUs. ESM2 700M took 8 days to train. The 3B parameter LM took 30 days. The 15B model took 60 days.""
60 days x 512 V100s x an imputed 30% utilization"": 1e23 FLOP

Geometric mean: 7.35e22",UniRef50,"""UniRef50, September 2021 version, is used for the training of ESM models""",12000000000.0,"Section A.1.1:
""This allowed ESM-2 models to train on over 60M protein sequences.""

Average protein sequence is 200 tokens, per https://epoch.ai/blog/biological-sequence-models-in-the-context-of-the-ai-directives#fn:4 
60M * 200 = 12B tokens

Epochs: 15B model used 270k steps at 3.2M token batch size
270k * 3.2M / 12B = 72",72.0,1440.0,,NVIDIA V100,512.0,Unsupervised,"""Recent advances in machine learning have leveraged evolutionary information in multiple sequence alignments to predict protein structure. We demonstrate direct inference of full atomic-level protein structure from primary sequence using a large language model. As language models of protein sequences are scaled up to 15 billion parameters, an atomic-resolution picture of protein structure emerges in the learned representations. This results in an order-of-magnitude acceleration of high-resolution structure prediction, which enables large-scale structural characterization of metagenomic proteins. We apply this capability to construct the ESM Metagenomic Atlas by predicting structures for >617 million metagenomic protein sequences, including >225 million that are predicted with high confidence, which gives a view into the vast breadth and diversity of natural proteins.""",,Open weights (unrestricted),,Confident,2025-02-19 18:33:00+00:00,"United States of America,United States of America,United States of America,United States of America",,,,,,,,,
YuYan 11B,Language,"Hong Kong Baptist University,NetEase","Academia,Industry","Gongzheng Li, Yadong Xi, Jingzhen Ding, Duan Wang, Ziyang Luo, Rongsheng Zhang, Bai Liu, Changjie Fan, Xiaoxi Mao, Zeng Zhao",2022-07-15,Easy and Efficient Transformer: Scalable Inference Solution For Large NLP Model,https://arxiv.org/abs/2104.12470,8.0,,,11000000000.0,https://huggingface.co/FUXI/yuyan-11b,,,,,,,,,,,,"NVIDIA A100 PCIe,NVIDIA GeForce RTX 2080 Ti",,Self-supervised learning,"Recently, large-scale transformer-based models have been proven to be effective over various tasks across many domains. Nevertheless, applying them in industrial production requires tedious and heavy works to reduce inference costs. To fill such a gap, we introduce a scalable inference solution: Easy and Efficient Transformer (EET), including a series of transformer inference optimization at the algorithm and implementation levels. First, we design highly optimized kernels for long inputs and large hidden sizes. Second, we propose a flexible CUDA memory manager to reduce the memory footprint when deploying a large model. Compared with the state-of-the-art transformer inference library (Faster Transformer v4.0), EET can achieve an average of 1.40-4.20x speedup on the transformer decoder layer with an A100 GPU",,,,Confident,2024-09-09 18:46:38+00:00,"Hong Kong,China,China",,,,,,,,,
Transformer-XL + RMT,Language,"Moscow Institute of Physics and Technology,AIRI Artificial Intelligence Research Institute","Academia,Research collective","Aydar Bulatov, Yuri Kuratov, Mikhail S. Burtsev",2022-07-14,Recurrent Memory Transformer,https://arxiv.org/abs/2207.06881,85.0,,,247000000.00000003,,,,,,WikiText-103,,,,,,,,,,"Transformer-based models show their effectiveness across multiple domains and tasks. The self-attention allows to combine information from all sequence elements into context-aware representations. However, global and local information has to be stored mostly in the same element-wise representations. Moreover, the length of an input sequence is limited by quadratic computational complexity of self-attention.
In this work, we propose and study a memory-augmented segment-level recurrent Transformer (RMT). Memory allows to store and process local and global information as well as to pass information between segments of the long sequence with the help of recurrence.
We implement a memory mechanism with no changes to Transformer model by adding special memory tokens to the input or output sequence. Then the model is trained to control both memory operations and sequence representations processing.
Results of experiments show that RMT performs on par with the Transformer-XL on language modeling for smaller memory sizes and outperforms it for tasks that require longer sequence processing. We show that adding memory tokens to Tr-XL is able to improve its performance. This makes Recurrent Memory Transformer a promising architecture for applications that require learning of long-term dependencies and general purpose in memory processing, such as algorithmic tasks and reasoning.",Transformer-XL + RMT,Unreleased,,,2024-11-01 14:04:29+00:00,"Russia,Russia",Transformer-XL (257M),,,,,Transformer-XL + RMT,,,
Rita-XLarge,Biology,"LightOn,Harvard University,University of Oxford","Industry,Academia,Academia","Daniel Hesslow, Niccolo Zanichelli, Pascal Notin, Iacopo Poli, Debora Marks ",2022-07-14,RITA: a Study on Scaling Up Generative Protein Sequence Models,https://arxiv.org/abs/2205.05789,70.0,,,1200000000.0,"""with up to 1.2 billion parameters""",8.64e+20,,,"""The models were trained for a total training time of over 25 thousand Nvidia-V100 GPU hours""

125 teraFLOP/s (uncertain which V100 model, tensor performance varies from 112-130tFLOP/s) * 25000 * 3600 * 0.3 (utilization) = 3.4e+21"" <- the total compute for several models

For the biggest (XL) from Figure 1:
10 PF-days = 10*10^15*24*3600 FLOPs = 8.64e+20 FLOPs <- total compute just for the XL model","UniRef100,MGnify,Metaclust","""We focus on three different pre-training corpora: UniRef100 (The UniProt Consortium, 2020), MGnify (Mitchell et al., 2020) and Metaclust (Steinegger & Soding ¨ , 2018), each providing a sufficient amount of tokens for model pretraining without having to repeat the data.""",300000000001.0002,"150 billion amino acids × 2 (primary + reversed sequences) = 300 billion datapoints
Final estimate: 3.0e11 datapoints",,,,NVIDIA V100,,,"In this work we introduce RITA: a suite of autoregressive generative models for protein sequences, with up to 1.2 billion parameters, trained on over 280 million protein sequences belonging to the UniRef-100 database. Such generative models hold the promise of greatly accelerating protein design. We conduct the first systematic study of how capabilities evolve with model size for autoregressive transformers in the protein domain: we evaluate RITA models in next amino acid pre- diction, zero-shot fitness, and enzyme function prediction, showing benefits from increased scale. We release the RITA models openly, to the benefit of the research community.",,Open weights (unrestricted),,Confident,2025-02-17 15:57:49+00:00,"France,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Delphi,Language,"Allen Institute for AI,University of Washington","Research collective,Academia","Liwei Jiang, Jena D. Hwang, Chandra Bhagavatula, Ronan Le Bras, Jenny Liang, Jesse Dodge, Keisuke Sakaguchi, Maxwell Forbes, Jon Borchardt, Saadia Gabriel, Yulia Tsvetkov, Oren Etzioni, Maarten Sap, Regina Rini, Yejin Choi",2022-07-12,Can Machines Learn Morality? The Delphi Experiment,https://arxiv.org/abs/2110.07574,,,,11000000000.0,,,,,, Commonsense Norm Bank,"To teach Delphi, we compile a new dataset, COMMONSENSE NORM BANK (or NORM BANK in short), which contains 1.7 million examples of descriptive judgments on everyday situations.2 All of these examples are drawn from existing datasets to cover diverse aspects of social norms and ethics.
The relevant data sources for this paper include SOCIAL CHEMISTRY (Forbes et al., 2020) for social norms and commonsense moral judgments, the commonsense morality subsection of ETHICS (Hendrycks et al., 2021a) for additional moral judgments, MORAL STORIES (Emelin et al., 2021) for contextualized moral judgments in simple commonsense stories, and SOCIAL BIAS INFERENCE CORPUS (Sap et al., 2020) for unjust social biases such as racism and sexism",,Training on the proposed COMMONSENSE NORM BANK is carried out for 400k gradient updates,4.0,72.0,"We train Delphi using TPU v3-32 and evaluate it using TPU v3-8, with model parallelisms of 32 and 8 respectively, on Google Cloud Virtual Machines. Training Delphi on COMMONSENSE NORM BANK for 4 epochs takes approximately 72 hours.",Google TPU v3,,,"As AI systems become increasingly powerful and pervasive, there are growing concerns about machines' morality or a lack thereof. Yet, teaching morality to machines is a formidable task, as morality remains among the most intensely debated questions in humanity, let alone for AI. Existing AI systems deployed to millions of users, however, are already making decisions loaded with moral implications, which poses a seemingly impossible challenge: teaching machines moral sense, while humanity continues to grapple with it.
To explore this challenge, we introduce Delphi, an experimental framework based on deep neural networks trained directly to reason about descriptive ethical judgments, e.g., ""helping a friend"" is generally good, while ""helping a friend spread fake news"" is not. Empirical results shed novel insights on the promises and limits of machine ethics; Delphi demonstrates strong generalization capabilities in the face of novel ethical situations, while off-the-shelf neural network models exhibit markedly poor judgment including unjust biases, confirming the need for explicitly teaching machines moral sense.
Yet, Delphi is not perfect, exhibiting susceptibility to pervasive biases and inconsistencies. Despite that, we demonstrate positive use cases of imperfect Delphi, including using it as a component model within other imperfect AI systems. Importantly, we interpret the operationalization of Delphi in light of prominent ethical theories, which leads us to important future research questions.",,Hosted access (no API),,Speculative,2024-12-02 15:24:11+00:00,"United States of America,United States of America",Unicorn,1.6896e+18,=6*11B*400k gradient updates*16 (batch size)*4 epochs=1.6896 × 10^18,,,,16.0,,
BLOOM-176B,Language,"Hugging Face,BigScience","Industry,Research collective","Margaret Mitchell, Giada Pistilli, Yacine Jernite, Ezinwanne Ozoani, Marissa Gerchick, Nazneen Rajani, Sasha Luccioni, Irene Solaiman, Maraim Masoud, Somaieh Nikpoor, Carlos Muñoz Ferrandis, Stas Bekman, Christopher Akiki, Danish Contractor, David Lansky, Angelina McMillan-Major, Tristan Thrush, Suzana Ilić, Gérard Dupont, Shayne Longpre, Manan Dey, Stella Biderman, Douwe Kiela, Emi Baylor, Teven Le Scao, Aaron Gokaslan, Julien Launay, Niklas Muennighoff",2022-07-11,BLOOM: A 176B-Parameter Open-Access Multilingual Language Model,https://arxiv.org/abs/2211.05100,1984.0,"Historical significance,Highly cited","Was the largest open-source model at the time. 1000+ researchers, many from important orgs such as Microsoft and NVIDIA.

https://huggingface.co/bigscience/bloom",176247271424.0,"See ""Technical Specifications"" on Hugging Face:
https://huggingface.co/bigscience/bloom",3.65664e+23,,,"https://bigscience.huggingface.co/blog/bloom Blog post says 117 days.

384 A100 GPUs * 314 TFLOPS throughput per GPU * 117 days * 0.3 (utilization assumption) = 3.65664e23
https://www.wolframalpha.com/input?i=384+*+314+TFLOPS+*+117+days+*+0.3",BigScience ROOTS Corpus,"In total, 1.6 terabytes of pre-processed text was converted into 350 billion unique tokens as BLOOM's training datasets.
arXiv:2210.15424

""BLOOM was trained on the ROOTS corpus (Lauren¸con et al., 2022), a composite collection
of 498 Hugging Face datasets (Lhoest et al., 2021) amounting to 1.61 terabytes of text that
span 46 natural languages and 13 programming languages. A high-level overview of this
dataset can be seen in Figure 3, while a detailed itemized list of every language along with
its linguistic genus, family and macroarea is presented in Table 1""",379000000000.0,"Table 3.5 https://arxiv.org/pdf/2211.05100

366B (pretrain) + 13B (finetune) = 379B  tokens total ",1.0,2808.0,117 days * 24 hours/day,NVIDIA A100 SXM4 80 GB,384.0,Self-supervised learning,"Large language models (LLMs) have been shown to be able to perform new tasks based on a few demonstrations or natural language instructions. While these capabilities have led to widespread adoption, most LLMs are developed by resource-rich organizations and are frequently kept from the public. As a step towards democratizing this powerful technology, we present BLOOM, a 176B-parameter open-access language model designed and built thanks to a collaboration of hundreds of researchers. BLOOM is a decoder-only Transformer language model that was trained on the ROOTS corpus, a dataset comprising hundreds of sources in 46 natural and 13 programming languages (59 in total). We find that BLOOM achieves competitive performance on a wide variety of benchmarks, with stronger results after undergoing multitask prompted finetuning. To facilitate future research and applications using LLMs, we publicly release our models and code under the Responsible AI License.",,Open weights (restricted use),0.5,Confident,2025-02-17 15:57:56+00:00,"Multinational,United States of America,Multinational,France",,,,,,,4194304.0,Table 3. 2048*2048,True
NLLB,Language,Meta AI,Industry,"Marta R. Costa-jussà, James Cross, Onur Çelebi, Maha Elbayad, Kenneth Heafield, Kevin Heffernan, Elahe Kalbassi, Janice Lam, Daniel Licht, Jean Maillard, Anna Sun, Skyler Wang, Guillaume Wenzek, Al Youngblood, Bapi Akula, Loic Barrault, Gabriel Mejia Gonzalez, Prangthip Hansanti, John Hoffman, Semarley Jarrett, Kaushik Ram Sadagopan, Dirk Rowe, Shannon Spruit, Chau Tran, Pierre Andrews, Necip Fazil Ayan, Shruti Bhosale, Sergey Edunov, Angela Fan, Cynthia Gao, Vedanuj Goswami, Francisco (Paco) Guzmán, Philipp Koehn, Alexandre Mourachko, Christophe Ropers, Safiyyah Saleem, Holger Schwenk, Jeff Wang",2022-07-06,No Language Left Behind: Scaling Human-Centered Machine Translation,https://research.facebook.com/publications/no-language-left-behind/,924.0,SOTA improvement,"""Our model achieves an improvement of 44% BLEU relative to the previous state-of-the-art""",54500000000.0,"Section 8.2.4: ""The model has a total of 54.5B parameters
and FLOPs similar to that of a 3.3B dense model""",1.751113728e+22,,,"Section 8.8:
"" To train NLLB-200, a cumulative
of 51968 GPU hours of computation was performed on hardware of type A100-SXM-80GB""
See also Table 48

Section 8.2.4 states they use FP16

NVIDIA Datasheet states 312TFLOPS for FP16
https://www.nvidia.com/content/dam/en-zz/Solutions/Data-Center/a100/pdf/nvidia-a100-datasheet-nvidia-us-2188504-web.pdf

Assuming 0.3 utilization:

312e12*3600*51968*0.3

Also:
""Our final model is a Transformer
encoder-decoder model in which we replace the Feed Forward Network (FFN) layer in
every 4th Transformer block with a Sparsely Gated Mixture of Experts layer containing 128
experts. We use model dimension 2048, FFN dimension 8192, 16 attention heads, 24 encoder
layers and 24 decoder layers. We use Pre-LayerNorm (Xiong et al., 2020) as described in
Section 6.1.1. We share the embedding weights of the encoder input embedding, decoder
input embedding and decoder output embedding layers. We use an overall dropout of 0.3,
attention dropout 0.1 and EOM with peom=0.2. The model has a total of 54.5B parameters
and FLOPs similar to that of a 3.3B dense model.""",,,360000000000.0,"[WORDS]

Section 8.2.2: ""As we prepare to train on the final 202 language dataset comprising of over 18B sentence
pairs and 2440 language directions""

18B sentences * 20 words/sentence",,,,NVIDIA A100 SXM4 80 GB,,Self-supervised learning,"Driven by the goal of eradicating language barriers on a global scale, machine translation has solidified itself as a key focus of artificial intelligence research today. However, such efforts have coalesced around a small subset of languages, leaving behind the vast majority of mostly low-resource languages. What does it take to break the 200 language barrier while ensuring safe, high quality results, all while keeping ethical considerations in mind? In No Language Left Behind, we took on this challenge by first contextualizing the need for low-resource language translation support through exploratory interviews with native speakers. Then, we created datasets and models aimed at narrowing the performance gap between low and high-resource languages. More specifically, we developed a conditional compute model based on Sparsely Gated Mixture of Experts that is trained on data obtained with novel and effective data mining techniques tailored for low-resource languages. We propose multiple architectural and training improvements to counteract overfitting while training on thousands of tasks. Critically, we evaluated the performance of over 40,000 different translation directions using a human-translated benchmark, Flores-200, and combined human evaluation with a novel toxicity benchmark covering all languages in Flores-200 to assess translation safety. Our model achieves an improvement of 44% BLEU relative to the previous state-of-the-art, laying important groundwork towards realizing a universal translation system. Finally, we open source all contributions described in this work, accessible at https://github.com/facebookresearch/fairseq/tree/nllb.",,Open weights (unrestricted),,,2025-02-17 15:58:13+00:00,United States of America,,,,,,,1000000.0,"""We train the model for 300k steps using the 4 phase curriculum
described in Section 8.2.3. We use an effective batch size of 1M tokens per update.""",
BLOOM-7.1B,Language,"Hugging Face,BigScience","Industry,Research collective","Margaret Mitchell, Giada Pistilli, Yacine Jernite, Ezinwanne Ozoani, Marissa Gerchick, Nazneen Rajani, Sasha Luccioni, Irene Solaiman, Maraim Masoud, Somaieh Nikpoor, Carlos Muñoz Ferrandis, Stas Bekman, Christopher Akiki, Danish Contractor, David Lansky, Angelina McMillan-Major, Tristan Thrush, Suzana Ilić, Gérard Dupont, Shayne Longpre, Manan Dey, Stella Biderman, Douwe Kiela, Emi Baylor, Teven Le Scao, Aaron Gokaslan, Julien Launay, Niklas Muennighoff",2022-07-05,BigScience Language Open-science Open-access Multilingual (BLOOM) Language Model,https://huggingface.co/bigscience/bloom-7b1,404.0,,,7070000000.0,,1.48e+22,,,,BigScience ROOTS Corpus,,354000000000.0,"Table 3.5 https://arxiv.org/pdf/2211.05100

341B (pretrain) + 13B (finetune) = 354B  tokens total ",1.0,,,,,,,BLOOM-7.1B,Open weights (restricted use),,,2024-09-16 00:00:16+00:00,"Multinational,United States of America,Multinational,France",,,,,,,,,
CodeT5-large,Language,Salesforce,Industry,"Hung Le, Yue Wang, Akhilesh Deepak Gotmare, Silvio Savarese, Steven C.H. Hoi ",2022-07-05,CodeRL: Mastering Code Generation through Pretrained Models and Deep Reinforcement Learning,https://arxiv.org/abs/2207.01780,190.0,SOTA improvement,"""Our method not only achieves new SOTA results on the challenging APPS benchmark, but also shows strong zero-shot transfer capability with new SOTA results on the simpler MBPP benchmark.""",770000000.0,"""We pretrain a CodeT5-large model (770M) from scratch following T5-large’s architecture""",2.72e+21,,,"""We perform our experiments on a kubernetes with 16 A100-40G GPUs on Google Cloud Platform and the total pretraining duration is around 21 days""

16 * 312tFLOP/s * 21 * 24 * 3600 * 0.3 (utilization assumption) = 2.72e21",GitHub,"""We enlarge the Python pretraining dataset using the recently released
large-scale Github Code dataset5. We have compiled public, non-personal information from GitHub consisting of permissively licensed Python code (e.g. “mit”, “apache-2”, “bsd-3-clause”, “bsd-2- 126clause”, “cc0-1.0”, “unlicense”, “isc”). The resulting Python dataset (GCPY) has 10.5B tokens and is 10x larger than the CodeSearchNet (CSN) corpus [Husain et al., 2019] used in the original CodeT5 [Wang et al., 2021]""",10500000000.0,10.5b tokens,150.0,504.0,21 days,NVIDIA A100,,,"""Program synthesis or code generation aims to generate a program that satisfies a problem specification. Recent approaches using large-scale pretrained language models (LMs) have shown promising results, yet they have some critical limitations. In particular, they often follow a standard supervised fine-tuning procedure to train a code generation model only from the pairs of natural-language problem descriptions and ground-truth programs. Such paradigm largely ignores some important but potentially useful signals in the problem specification such as unit tests, which thus often results in poor performance when solving complex unseen coding tasks. To address the limitations, we propose ""CodeRL"", a new framework for program synthesis tasks through pretrained LMs and deep reinforcement learning (RL). Specifically, during training, we treat the code-generating LM as an actor network, and introduce a critic network that is trained to predict the functional correctness of generated programs and provide dense feedback signals to the actor. During inference, we introduce a new generation procedure with a critical sampling strategy that allows a model to automatically regenerate programs based on feedback from example unit tests and critic scores. For the model backbones, we extended the encoder-decoder architecture of CodeT5 with enhanced learning objectives, larger model sizes, and better pretraining data. Our method not only achieves new SOTA results on the challenging APPS benchmark, but also shows strong zero-shot transfer capability with new SOTA results on the simpler MBPP benchmark.""",,Open weights (unrestricted),,Likely,2025-02-17 15:58:19+00:00,United States of America,,,,,,,,,
Minerva (540B),Language,Google,Industry,"Aitor Lewkowycz, Anders Andreassen, David Dohan, Ethan Dyer, Henryk Michalewski, Vinay Ramasesh, Ambrose Slone, Cem Anil, Imanol Schlag, Theo Gutman-Solo, Yuhuai Wu, Behnam Neyshabur, Guy Gur-Ari, Vedant Misra",2022-06-29,Solving Quantitative Reasoning Problems with Language Models,https://arxiv.org/abs/2206.14858,585.0,SOTA improvement,,540350000000.0,"""To further our understanding of the impact of scale on few-shot learning, we trained a 540-billion parameter, densely activated, Transformer language model, which we call Pathways Language Model (PaLM).""

Our approach is to start with the PaLM pretrained decoder-only transformer language models Chowdhery et al. (2022), and further train (finetune) them on our mathematical dataset using an autoregressive objective.
Table 2 contains the main model and training hyperparameters.

See Table 2",2.7415e+24,,,"Minerva was fine-tuned from PaLM using the same hardware. Assume the same model FLOPs utilization rate for pre-training and fine-tuning.

PaLM pretraining time: 6144 TPU for 1200 hours + 3072 TPU for 336 hours = @8404992 TPU-hours
Minerva finetuning time: 1024 TPU for 696 hours = 712704 TPU-hours
So fine-tuning added 8.5% more compute.

Minerva total compute = PaLM pretraining compute * (712704+8404992)/(8404992) = 2.7415*10^24 FLOP
https://www.wolframalpha.com/input?i=%28712704%2B8404992%29%2F%288404992%29+*+2.5272*10%5E24

",arXiv,"PaLM, finetuned on arxiv",26000000000.0,"""Our models were trained on a dataset of 38.5B tokens"" + PaLM

upd 38.5B tokens - sie of the dataset, the model saw 26B tokens in 399k steps (see Table 2)",,696.0,,Google TPU v4,1024.0,Self-supervised learning,"Language models have achieved remarkable performance on a wide range of tasks that require natural language understanding. Nevertheless, state-of-the-art models have generally struggled with tasks that require quantitative reasoning, such as solving mathematics, science, and engineering problems at the college level. To help close this gap, we introduce Minerva, a large language model pretrained on general natural language data and further trained on technical content. The model achieves state-of-the-art performance on technical benchmarks without the use of external tools. We also evaluate our model on over two hundred undergraduate-level problems in physics, biology, chemistry, economics, and other sciences that require quantitative reasoning, and find that the model can correctly answer nearly a third of them.",,Unreleased,,,2025-02-17 20:43:14+00:00,United States of America,PaLM (540B),2.1429e+23,,,,,,,True
DALL-E mega,Image generation,Craiyon,Industry,"Dayma, Boris and Patil, Suraj and Cuenca, Pedro and Saifullah, Khalid and Abraham, Tanishq and Lê Khắc, Phúc and Melas, Luke and Ghosh, Ritobrata",2022-06-28,DALL·E Mega Model Card,"https://huggingface.co/dalle-mini/dalle-mega
https://github.com/borisdayma/dalle-mini",,,,,,2.285273088e+22,,,"flops = (128) * (1.23e14) * (1344 * 3600) * (0.3) = 2.3e22
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)
from https://huggingface.co/dalle-mini/dalle-mega#environmental-impact",,possible the same data as DALL-E mini,2000000000.0,possible the same data as DALL-E mini,,1344.0,from https://huggingface.co/dalle-mini/dalle-mega#environmental-impact,Google TPU v3,128.0,,"Model Description: This is a model that can be used to generate images based on text prompts. As the model developers wrote in the project report about DALL·E mini, “OpenAI had the first impressive model for generating images with DALL·E. DALL·E mini is an attempt at reproducing those results with an open-source model.”",,Open weights (unrestricted),,Confident,2025-02-17 16:00:43+00:00,United States of America,,,,,,,,,
ProGen2-xlarge,Biology,"Salesforce Research,Columbia University,Johns Hopkins University","Industry,Academia,Academia","Erik Nijkamp, Jeffrey Ruffolo, Eli N. Weinstein, Nikhil Naik, Ali Madani
",2022-06-27,ProGen2: Exploring the Boundaries of Protein Language Models,https://arxiv.org/abs/2206.13517,199.0,SOTA improvement,"""ProGen2 models show state-of-the-art performance in capturing the distribution of observed evolutionary sequences, generating novel viable sequences, and pre- dicting protein fitness without additional finetuning.""",6400000000.0,"""We introduce a suite of protein language models, named ProGen2, that are scaled up to 6.4B parameters""",1.35e+22,,,"Estimate 1:
""350,000 steps x 1m batch size x 6.4 B “connections” x 6"" - Arb Research (https://arbresearch.com/files/gen_bio.pdf)
Steps and batches from Table 1. 
FLOP estimate: 1.3e22

Table 9 from here: https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1.full.pdf
FLOP estimate: 1.4e22

Geometric mean = 1.35e22 FLOP","UniRef90,BFD30","""The standard PROGEN2 models are pretrained on a mixture of Uniref90 (Suzek et al., 2015) and BFD30 (Steinegger & Söding, 2018) databases""",350000000000.0,350B from Table 9 https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1,,,,Google TPU v3,,Self-supervised learning,"Attention-based models trained on protein sequences have demonstrated incredible success at classification and generation tasks relevant for artificial intelligence- driven protein design. However, we lack a sufficient understanding of how very large-scale models and data play a role in effective protein model development. We introduce a suite of protein language models, named ProGen2, that are scaled up to 6.4B parameters and trained on different sequence datasets drawn from over a billion proteins from genomic, metagenomic, and immune repertoire databases. ProGen2 models show state-of-the-art performance in capturing the distribution of observed evolutionary sequences, generating novel viable sequences, and predicting protein fitness without additional finetuning. As large model sizes and raw numbers of protein sequences continue to become more widely accessible, our results suggest that a growing emphasis needs to be placed on the data distribution provided to a protein sequence model. We release the ProGen2 models and code at https://github.com/salesforce/progen.",,Open weights (unrestricted),,Confident,2025-02-17 20:51:43+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
GPT-SW3,Language,"AI Sweden,RISE",Academia,"Ariel Ekgren, Amaru Cuba Gyllensten, Evangelia Gogoulou, Alice Heiman, Severine Verlinden, Joey Ohman, Fredrik Carlsson, Magnus Sahlgren",2022-06-25,Lessons Learned from GPT-SW3: Building the First Large-Scale Generative Language Model for Swedish,"http://www.lrec-conf.org/proceedings/lrec2022/pdf/2022.lrec-1.376.pdf
",16.0,,,3500000000.0,,1.3e+21,,,"From section 4: ""Training was performed on GPU resources from the Berzelius Superpod, which is currently the fastest super
computer in Sweden, equipped with 60 Nvidia DGX
A100 servers, each of which consists of 8 Nvidia A100
GPUs with 320 GB Total GPU memory. Our training
process took 2.5 days utilizing 16 of the DGX A100
servers (in total 128 GPUs).""

2.5*24*60**2 * 128 * 1.56E+14 * 0.3 = 1.3e21",,Novel Swedish 100GB corpus from news articles.,16700000000.0,"100GB Swedish corpus, assume Swedish has similar 167M words per GB as German.
100*167e6 = 1.67e10",,60.0,"""Our training process took 2.5 days utilizing 16 of the DGX A100 servers (in total 128 GPUs).""",NVIDIA A100,,Self-supervised learning,"Large-scale generative language models such as the GPT series (Radford and Narasimhan, 2018; Radford et al., 2019; Brown et al., 2020) have enjoyed considerable attention in recent years. This has been partly due to their unprecedented ability to generate coherent text, but also for their capacity for zero-shot performance - without any training examples, on a wide range of different tasks. A prerequisite for building such models is access to both large amounts of high-quality text data and powerful computational resources. This has proven to be a limiting factor for the development of large-scale models for languages other than English. With the goal of promoting the development of largescale generative models for other languages, we here present our work on developing and evaluating GPTSW3, a 3.5 billion parameter autoregressive language model, trained on a newly collected 100 GB Swedish corpus. To the best of our knowledge, this is the largest generative model for Swedish to date, and probably one of the bigger non-English models at the moment. In this paper, we collect the lessons learned by developing and evaluating this model, including challenges with data collection, training procedures, and validation activities.",,Open weights (restricted use),,,2025-02-17 16:01:00+00:00,"Sweden,Sweden",,,,,,,,,
CodeWhisperer,Language,Amazon,Industry,,2022-06-24,"Introducing Amazon CodeWhisperer, the ML-powered coding companion",https://aws.amazon.com/blogs/machine-learning/introducing-amazon-codewhisperer-the-ml-powered-coding-companion/,,,Possibly widely used; deployed on AWS,,,,,,,Unspecified unreleased,,,,,,,,,,"We are excited to announce Amazon CodeWhisperer, a machine learning (ML)-powered service that helps improve developer productivity by providing code recommendations based on developers’ natural comments and prior code. With CodeWhisperer, developers can simply write a comment that outlines a specific task in plain English, such as “upload a file to S3.” Based on this, CodeWhisperer automatically determines which cloud services and public libraries are best suited for the specified task, builds the specific code on the fly, and recommends the generated code snippets directly in the IDE.",,Hosted access (no API),,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
YaLM,Language,Yandex,Industry,"Mikhail Khrushchev, Ruslan Vasilev, Alexey Petrov, Nikolay Zinov",2022-06-23,Yandex Publishes YaLM 100B. It’s the Largest GPT-Like Neural Network in Open Source,https://medium.com/yandex/yandex-publishes-yalm-100b-its-the-largest-gpt-like-neural-network-in-open-source-d1df53d0e9a6,,,,100000000000.0,100B,2.2e+23,,,"""It took us 65 days to train the model on a pool of 800 A100 graphics cards and 1.7 TB of online texts, books, and countless other sources.""","The Pile,YaLM Russian Dataset","""25% The Pile — open English dataset by Eleuther AI team

75% Texts in Russian collected by our team (percentages of the whole dataset are given)""

https://github.com/yandex/YaLM-100B?tab=readme-ov-file",300000000000.0,"1.7TB of data 300B tokens – from github https://github.com/yandex/YaLM-100B
I've assumed that 1 token correspond to 1 word in russian language.",,1560.0,65 days,NVIDIA A100,800.0,Self-supervised learning,,,Open weights (unrestricted),,Likely,2025-02-17 16:02:50+00:00,Russia,,,,,,,,,True
Parti,Image generation,Google Research,Industry,"Jiahui Yu, Yuanzhong Xu, Jing Yu Koh, Thang Luong, Gunjan Baid, Zirui Wang, Vijay Vasudevan, Alexander Ku, Yinfei Yang, Burcu Karagol Ayan, Ben Hutchinson, Wei Han, Zarana Parekh, Xin Li, Han Zhang, Jason Baldridge, Yonghui Wu",2022-06-22,Scaling Autoregressive Models for Content-Rich Text-to-Image Generation,https://arxiv.org/abs/2206.10789v1,880.0,SOTA improvement,"""Second, we achieve consistent quality improvements by scaling the encoder-decoder Transformer model up to 20B parameters, with a new state-of-the-art zero-shot FID score of 7.23 and finetuned FID score of 3.22 on MS-COCO""",20000000000.0,"Abstract: ""we achieve consistent quality improvements
by scaling the encoder-decoder Transformer model up to 20B parameters""",3.962895376192635e+23,,,"Calculated from architecture. Does not take into account the encoding and decoding of text and images, only the transformer stack.

Table 1 shows for the 20B model
16 encoder layers
64 decoder layers
Dmodel = 4096
Dhidden = 16384
Num heads = 64

Just below table 1:
""We use a maximum length of text tokens of 128, and the length of image tokens are fixed to 1024""

I take the length of the sequence to be 100 for the encoder stack and 1024 for the decoder stack.

Section 3, Training: ""a total
of 450,000 steps and final ratio of 0.025. We use a global batch size of 8192 during training.""","LAION-400M,FIT400M,JFT-4B",,4800000000.0,,,,,Google TPU v4,,Self-supervised learning,"We present the Pathways Autoregressive Text-to-Image (Parti) model, which generates high-fidelity photorealistic images and supports content-rich synthesis involving complex compositions and world knowledge. Parti treats text-to-image generation as a sequence-to-sequence modeling problem, akin to machine translation, with sequences of image tokens as the target outputs rather than text tokens in another language. This strategy can naturally tap into the rich body of prior work on large language models, which have seen continued advances in capabilities and performance through scaling data and model sizes. Our approach is simple: First, Parti uses a Transformer-based image tokenizer, ViT-VQGAN, to encode images as sequences of discrete tokens. Second, we achieve consistent quality improvements by scaling the encoder-decoder Transformer model up to 20B parameters, with a new state-of-the-art zero-shot FID score of 7.23 and finetuned FID score of 3.22 on MS-COCO. Our detailed analysis on Localized Narratives as well as PartiPrompts (P2), a new holistic benchmark of over 1600 English prompts, demonstrate the effectiveness of Parti across a wide variety of categories and difficulty aspects. We also explore and highlight limitations of our models in order to define and exemplify key areas of focus for further improvements. See https://parti.research.google/ for high-resolution images.",,Unreleased,,,2025-02-17 19:56:42+00:00,"Multinational,United States of America",,,,,,,,,True
CodeGeeX,Language,"Zhipu AI,Tsinghua University","Industry,Academia",,2022-06-22,,https://github.com/THUDM/CodeGeeX,,,,13000000000.0,"""We introduce CodeGeeX, a large-scale multilingual code generation model with 13 billion parameters""",6.630000000001e+22,,,"Assume 1 epoch on 850B tokens.
C=6DN=6*850B*13B
https://www.wolframalpha.com/input?i=6+*+13+billion+*+850+billion",The Pile,"Mix of open and scraped data:

""Our training data contains two parts. The first part is from open-sourced code datasets, The Pile and CodeParrot. The Pile contains a subset of code corpus that collects public repositories with more than 100 stars from GitHub, from which we select codes in 23 popular programming languages. The second part is supplementary data directly scrapped from the public GitHub repositories that do not appear in previous datasets, including Python, Java and C++.""",850000000000.0,"As of June 22, 2022, CodeGeeX has been trained on more than 850 billion tokens",,156.1,"Assume 30% utilization on 1536 Ascend 910 calculating in FP16.
https://www.wolframalpha.com/input?i=6+*+13+billion+*+850+billion+FLOP+%2F+%280.30*1536*256+TFLOPS%29
If they used INT8 precision, the training time would be half of this.",Huawei Ascend 910,,Self-supervised learning,"We introduce CodeGeeX, a large-scale multilingual code generation model with 13 billion parameters, pre-trained on a large code corpus of more than 20 programming languages. As of June 22, 2022, CodeGeeX has been trained on more than 850 billion tokens on a cluster of 1,536 Ascend 910 AI Processors.",,Open weights (restricted use),,Confident,2025-02-27 15:38:01+00:00,"China,China",,,,,,,6291456.0,Table 3. 2048 * 3072,True
Unified-IO (XL),"Multimodal,Vision,Language","Allen Institute for AI,University of Washington","Research collective,Academia","Jiasen Lu, Christopher Clark, Rowan Zellers, Roozbeh Mottaghi, Aniruddha Kembhavi",2022-06-17,"Unified-IO: A Unified Model for Vision, Language, and Multi-Modal Tasks",https://arxiv.org/abs/2206.08916,324.0,,"Milestone in generality: ""Unified-IO is the first model capable of performing all 7 tasks on the GRIT benchmark and produces strong results across 16 diverse benchmarks like NYUv2-Depth, ImageNet, VQA2.0, OK-VQA, Swig, VizWizGround, BoolQ, and SciTail, with no task-specific fine-tuning""",2925000000.0,"2952M, Table 2",3.5e+21,,,"1M steps, batch size 1024. Sequence length may be 128-256:
""We use a maximum of 256 and 128 text tokens for inputs and outputs respectively, and a maximum
length of 576 (i.e. 24 × 24 patch encoding from a 384 × 384 image) for image inputs and 256 (i.e.
16 × 16 latent codes from a 256 × 256 image) for image outputs

6 * 1 million * 1024 * 128 * 2.9 billion = 2.3e21
6 * 1 million * 1024 * 256 * 2.9 billion = 4.6e21
average is 3.5e21

No hardware details.","Wikipedia,C4,ImageNet21k,Conceptual Captions 12M (CC12M),Conceptual Captions (CC3M),COCO","""we gather 95 vision, language, and multi-modal datasets from 62 publicly available data sources as targets for our model to learn during multi-task training""

Number of epochs= 1,000,000×1024 / 130,000,000 ≈ 7.88",,,7.88,,,Google TPU v4,,,"We propose UNIFIED-IO, a model that performs a large variety of AI tasks spanning classical computer vision tasks, including pose estimation, object detection, depth estimation and image generation, vision-and-language tasks such as region captioning and referring expression, to natural language processing tasks such as question answering and paraphrasing. Developing a single unified model for such a large variety of tasks poses unique challenges due to the heterogeneous inputs and outputs pertaining to each task, including RGB images, per-pixel maps, binary masks, bounding boxes, and language. We achieve this unification by homogenizing every supported input and output into a sequence of discrete vocabulary tokens. This common representation across all tasks allows us to train a single transformer-based architecture, jointly on over 90 diverse datasets in the vision and language fields. UNIFIED-IO is the first model capable of performing all 7 tasks on the GRIT benchmark and produces strong results across 16 diverse benchmarks like NYUv2-Depth, ImageNet, VQA2.0, OK-VQA, Swig, VizWizGround, BoolQ, and SciTail, with no task-specific fine-tuning. Code and demos for UNIFIED-IO are available at: unified-io.allenai.org",,Open weights (unrestricted),,Speculative,2025-01-03 20:52:33+00:00,"United States of America,United States of America",,,,,,,,,
CoCa,Vision,Google Research,Industry,"Jiahui Yu, Zirui Wang, Vijay Vasudevan, Legg Yeung, Mojtaba Seyedhosseini, Yonghui Wu",2022-06-14,CoCa: Contrastive Captioners are Image-Text Foundation Models,https://arxiv.org/abs/2205.01917v2,1056.0,SOTA improvement,"""Notably on ImageNet classification, CoCa obtains 86.3% zero-shot top-1 accuracy, 90.6% with a frozen encoder and learned classification head, and new state-of-the-art 91.0% top-1 accuracy on ImageNet with a finetuned encoder.""",2100000000.0,"""Our largest CoCa model (""CoCa"" in short) follows the ViT-giant setup in [21] with 1B-parameters in the image encoder and 2.1B-parameters altogether with the text decoder""",7.3e+22,,,"""Pretraining CoCa takes about 5 days on 2,048 CloudTPUv4 chips""

275 teraFLOP/s * 2048 * 5 * 24 * 3600 * 0.3 (assumed utilization) = 7.3e22","JFT-3B,ALIGN","""CoCa is pretrained from scratch in a single stage on both webscale alt-text data and annotated images by treating all labels simply as texts. We use the JFT-3B dataset [21] with label names as the paired texts, and the ALIGN dataset [13] with noisy alt-texts.""",4800000000.0,"JFT is 3 billion captioned images, ALIGN is 1.8 billion captioned images

""we use a batch size of 65,536 image-text pairs, where half of each batch comes from JFT and ALIGN, respectively. All models are trained on the
combined contrastive and captioning objectives in Eq.(4) for 500k steps, roughly corresponding to 5 epochs on JFT and 10 epochs on ALIGN.""

(5*3b+10*1.8b)/4.8b=6.875 epochs on average",6.875,120.0,5 days,Google TPU v4,2048.0,Self-supervised learning,"Exploring large-scale pretrained foundation models is of significant interest in computer vision because these models can be quickly transferred to many downstream tasks. This paper presents Contrastive Captioner (CoCa), a minimalist design to pretrain an image-text encoder-decoder foundation model jointly with contrastive loss and captioning loss, thereby subsuming model capabilities from contrastive approaches like CLIP and generative methods like SimVLM. In contrast to standard encoder-decoder transformers where all decoder layers attend to encoder outputs, CoCa omits cross-attention in the first half of decoder layers to encode unimodal text representations, and cascades the remaining decoder layers which cross-attend to the image encoder for multimodal image-text representations. We apply a contrastive loss between unimodal image and text embeddings, in addition to a captioning loss on the multimodal decoder outputs which predicts text tokens autoregressively. By sharing the same computational graph, the two training objectives are computed efficiently with minimal overhead. CoCa is pretrained end-to-end and from scratch on both web-scale alt-text data and annotated images by treating all labels simply as text, seamlessly unifying natural language supervision for representation learning. Empirically, CoCa achieves state-of-the-art performance with zero-shot transfer or minimal task-specific adaptation on a broad range of downstream tasks, spanning visual recognition (ImageNet, Kinetics-400/600/700, Moments-in-Time), crossmodal retrieval (MSCOCO, Flickr30K, MSR-VTT), multimodal understanding (VQA, SNLI-VE, NLVR2), and image captioning (MSCOCO, NoCaps). Notably on ImageNet classification, CoCa obtains 86.3% zero-shot top-1 accuracy, 90.6% with a frozen encoder and learned classification head, and new state-of-the-art 91.0% top-1 accuracy on ImageNet with a finetuned encoder.",,Unreleased,,Confident,2025-02-17 16:03:32+00:00,"Multinational,United States of America",,,,,,,,"65,536 image-text pairs",
MetaLM,"Multimodal,Language,Vision",Microsoft Research,Industry,"Yaru Hao, Haoyu Song, Li Dong, Shaohan Huang, Zewen Chi, Wenhui Wang, Shuming Ma, Furu Wei",2022-06-13,Language Models are General-Purpose Interfaces,https://arxiv.org/abs/2206.06336v1,90.0,SOTA improvement,"Abstract: ""Experimental results across various language-only and vision-language benchmarks show that our model outperforms or is competitive with specialized models on finetuning, zero-shot generalization, and few-shot learning.""",,,,,,,The Pile,,,,,,,,,Self-supervised learning,"Foundation models have received much attention due to their effectiveness across a broad range of downstream applications. Though there is a big convergence in terms of architecture, most pretrained models are typically still developed for specific tasks or modalities. In this work, we propose to use language models as a general-purpose interface to various foundation models. A collection of pretrained encoders perceive diverse modalities (such as vision, and language), and they dock with a language model that plays the role of a universal task layer. We propose a semi-causal language modeling objective to jointly pretrain the interface and the modular encoders. We subsume the advantages and capabilities from both causal and non-causal modeling, thereby combining the best of two worlds. Specifically, the proposed method not only inherits the capabilities of in-context learning and open-ended generation from causal language modeling, but also is conducive to finetuning because of the bidirectional encoders. More importantly, our approach seamlessly unlocks the combinations of the above capabilities, e.g., enabling in-context learning or instruction following with finetuned encoders. Experimental results across various language-only and vision-language benchmarks show that our model outperforms or is competitive with specialized models on finetuning, zero-shot generalization, and few-shot learning.",,,,Unknown,2024-11-01 14:04:29+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
EGRU (WT2),Language,"Ruhr University Bochum,Technische Universität Dresden,University of London","Academia,Academia,Academia","Anand Subramoney, Khaleelulla Khan Nazeer, Mark Schöne, Christian Mayr, David Kappel",2022-06-13,Efficient recurrent architectures through activity sparsity and sparse back-propagation through time,https://arxiv.org/abs/2206.06178v3,13.0,,SOTA for recurrent networks but not in general,74000000.0,"Table 3
",2.31e+18,,,,WikiText-2,,,,2500.0,,,,,,"Recurrent neural networks (RNNs) are well suited for solving sequence tasks in resource-constrained systems due to their expressivity and low computational requirements. However, there is still a need to bridge the gap between what RNNs are capable of in terms of efficiency and performance and real-world application requirements. The memory and computational requirements arising from propagating the activations of all the neurons at every time step to every connected neuron, together with the sequential dependence of activations, contribute to the inefficiency of training and using RNNs. We propose a solution inspired by biological neuron dynamics that makes the communication between RNN units sparse and discrete. This makes the backward pass with backpropagation through time (BPTT) computationally sparse and efficient as well. We base our model on the gated recurrent unit (GRU), extending it with units that emit discrete events for communication triggered by a threshold so that no information is communicated to other units in the absence of events. We show theoretically that the communication between units, and hence the computation required for both the forward and backward passes, scales with the number of events in the network. Our model achieves efficiency without compromising task performance, demonstrating competitive performance compared to state-of-the-art recurrent network models in real-world tasks, including language modeling. The dynamic activity sparsity mechanism also makes our model well suited for novel energy-efficient neuromorphic hardware. Code is available at this https URL.",EGRU (WT2),Unreleased,,,2024-10-01 14:02:12+00:00,"Germany,Germany,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
BIG-G 137B,Language,Google,Industry,"Aarohi Srivastava, Abhinav Rastogi, Abhishek Rao, Abu Awal Md Shoeb, Abubakar Abid, Adam Fisch, Adam R. Brown, Adam Santoro, Aditya Gupta, Adrià Garriga-Alonso, Agnieszka Kluska, Aitor Lewkowycz, Akshat Agarwal, Alethea Power, Alex Ray, Alex Warstadt, Alexander W. Kocurek, Ali Safaya, Ali Tazarv, Alice Xiang, Alicia Parrish, Allen Nie, Aman Hussain, Amanda Askell, Amanda Dsouza, Ambrose Slone, Ameet Rahane, Anantharaman S. Iyer, Anders Andreassen, Andrea Madotto, Andrea Santilli, Andreas Stuhlmüller, Andrew Dai, Andrew La, Andrew Lampinen, Andy Zou, Angela Jiang, Angelica Chen, Anh Vuong, Animesh Gupta, Anna Gottardi, Antonio Norelli, Anu Venkatesh, Arash Gholamidavoodi, Arfa Tabassum, Arul Menezes, Arun Kirubarajan, Asher Mullokandov, Ashish Sabharwal, Austin Herrick, Avia Efrat, Aykut Erdem, Ayla Karakaş, B. Ryan Roberts, Bao Sheng Loe, Barret Zoph, Bartłomiej Bojanowski, Batuhan Özyurt, Behnam Hedayatnia, Behnam Neyshabur, Benjamin Inden, Benno Stein, Berk Ekmekci, Bill Yuchen Lin, Blake Howald, Bryan Orinion, Cameron Diao, Cameron Dour, Catherine Stinson, Cedrick Argueta, César Ferri Ramírez, Chandan Singh, Charles Rathkopf, Chenlin Meng, Chitta Baral, Chiyu Wu, Chris Callison-Burch, Chris Waites, Christian Voigt, Christopher D. Manning, Christopher Potts, Cindy Ramirez, Clara E. Rivera, Clemencia Siro, Colin Raffel, Courtney Ashcraft, Cristina Garbacea, Damien Sileo, Dan Garrette, Dan Hendrycks, Dan Kilman, Dan Roth, Daniel Freeman, Daniel Khashabi, Daniel Levy, Daniel Moseguí González, Danielle Perszyk, Danny Hernandez, Danqi Chen, Daphne Ippolito et al. (351 additional authors not shown)",2022-06-09,Beyond the Imitation Game: Quantifying and extrapolating the capabilities of language models,https://arxiv.org/abs/2206.04615,1394.0,,,137000000000.0,"137B. Table App.1
",5.6e+23,,,"""BIG-G models were trained at Google. We use 13 dense decoder-only Transformer models (Vaswani
et al., 2017) with gated activation layers (Dauphin et al., 2017) and GELU activations based on the LaMDA
architectures (Thoppilan et al., 2022). These models were trained on a dataset consisting of a mixture of web
documents, code, dialog, and Wikipedia data, with approximately three billion documents tokenized to 2.8
trillion BPE tokens using a 32k-token SentencePiece vocabulary""

Appendix:

""We use a pre-training batch size of 262k tokens for all models...""

2.6M steps for 137B, per Table App.1. So trained on 2.6M * 262k = 681B tokens (~0.25 epochs)
681B * 137B * 6 = 5.6e23",GLaM dataset,"""These models were trained on a dataset consisting of a mixture of web
documents, code, dialog, and Wikipedia data, with approximately three billion documents tokenized to 2.8
trillion BPE tokens using a 32k-token SentencePiece vocabulary""",681000000000.0,"Full dataset is comprised of 2.8 trillion tokens, but calculation based on batch size and steps suggests model was trained on only 681 billion tokens.",1.0,,,,,,"Language models demonstrate both quantitative improvement and new qualitative capabilities with increasing scale. Despite their potentially transformative impact, these new capabilities are as yet poorly characterized. In order to inform future research, prepare for disruptive new model capabilities, and ameliorate socially harmful effects, it is vital that we understand the present and near-future capabilities and limitations of language models. To address this challenge, we introduce the Beyond the Imitation Game benchmark (BIG-bench). BIG-bench currently consists of 204 tasks, contributed by 450 authors across 132 institutions. Task topics are diverse, drawing problems from linguistics, childhood development, math, common-sense reasoning, biology, physics, social bias, software development, and beyond. BIG-bench focuses on tasks that are believed to be beyond the capabilities of current language models. We evaluate the behavior of OpenAI's GPT models, Google-internal dense transformer architectures, and Switch-style sparse transformers on BIG-bench, across model sizes spanning millions to hundreds of billions of parameters. In addition, a team of human expert raters performed all tasks in order to provide a strong baseline. Findings include: model performance and calibration both improve with scale, but are poor in absolute terms (and when compared with rater performance); performance is remarkably similar across model classes, though with benefits from sparsity; tasks that improve gradually and predictably commonly involve a large knowledge or memorization component, whereas tasks that exhibit ""breakthrough"" behavior at a critical scale often involve multiple steps or components, or brittle metrics; social bias typically increases with scale in settings with ambiguous context, but this can be improved with prompting.",,Unreleased,,Confident,2025-02-17 16:03:42+00:00,United States of America,,,,,,,262000.0,,
LiMoE,"Multimodal,Vision,Language",Google,Industry,"Basil Mustafa, Carlos Riquelme, Joan Puigcerver, Rodolphe Jenatton, Neil Houlsby",2022-06-06,Multimodal Contrastive Learning with LIMoE: the Language-Image Mixture of Experts,https://arxiv.org/abs/2206.02770,139.0,,"
",5600000000.0,"Section 1: ""We scale this up to a large 5.6B parameter LIMoE-H/14""",1.8e+22,,,"Section 3.2: ""The model contains 5.6B parameters in total, but only applies 675M parameters per token""

From Section A.3, ""batch size 21502 with resolution 288 and text sequence length16"". ""The model was trained for 700k steps pre-cooldown. There was one cooldown of length 125k steps
from the final step, and 3 of length 40k steps starting from step 650k"". Patch size 14 for images.

Assume C = 6*N*D. 
C = 6*675e6*21.5e3*1e6*(16+(288/14)**2)/2 = 1.8e22

This is broadly consistent with ViT-H/14's compute


upd Figure 11(c) suggests 1.4*10^4*10^9 FLOPS = 1.4*10^13 FLOPS",,,7600000000.0,"Section 3: ""Training data. By default, all models are trained on paired image-text data used in [16], consisting of 3.6B images and alt-texts scraped from the web. For large LIMoE-H/14 experiment, we also co-train with JFT-4B [17]. """,,,,,,,"Large sparsely-activated models have obtained excellent performance in multiple domains. However, such models are typically trained on a single modality at a time. We present the Language-Image MoE, LIMoE, a sparse mixture of experts model capable of multimodal learning. LIMoE accepts both images and text simultaneously, while being trained using a contrastive loss. MoEs are a natural fit for a multimodal backbone, since expert layers can learn an appropriate partitioning of modalities. However, new challenges arise; in particular, training stability and balanced expert utilization, for which we propose an entropy-based regularization scheme. Across multiple scales, we demonstrate remarkable performance improvement over dense models of equivalent computational cost. LIMoE-L/16 trained comparably to CLIP-L/14 achieves 78.6% zero-shot ImageNet accuracy (vs. 76.2%), and when further scaled to H/14 (with additional data) it achieves 84.1%, comparable to state-of-the-art methods which use larger custom per-modality backbones and pre-training schemes. We analyse the quantitative and qualitative behavior of LIMoE, and demonstrate phenomena such as differing treatment of the modalities and the organic emergence of modality-specific experts.",,,,,2025-02-17 16:04:07+00:00,United States of America,,,,,,,,,
DITTO,Language,"Tsinghua University,Apple,Westlake University,Chinese University of Hong Kong (CUHK)","Academia,Industry,Academia,Academia","Jin Xu, Xiaojiang Liu, Jianhao Yan, Deng Cai, Huayang Li, Jian Li",2022-06-06,Learning to Break the Loop: Analyzing and Mitigating Repetitions for Neural Text Generation,https://arxiv.org/abs/2206.02369,53.0,SOTA improvement,"Achieves SOTA on CNN/DailyMail by fine-tuning and improving on BART-large, which is SOTA",750000000.0,,1.1e+19,,,,WikiText-103,,,,7.16,,,,,,"While large-scale neural language models, such as GPT2 and BART, have achieved impressive results on various text generation tasks, they tend to get stuck in undesirable sentence-level loops with maximization-based decoding algorithms (\textit{e.g.}, greedy search). This phenomenon is counter-intuitive since there are few consecutive sentence-level repetitions in human corpora (e.g., 0.02\% in Wikitext-103). To investigate the underlying reasons for generating consecutive sentence-level repetitions, we study the relationship between the probabilities of the repetitive tokens and their previous repetitions in the context. Through our quantitative experiments, we find that 1) Language models have a preference to repeat the previous sentence; 2) The sentence-level repetitions have a \textit{self-reinforcement effect}: the more times a sentence is repeated in the context, the higher the probability of continuing to generate that sentence; 3) The sentences with higher initial probabilities usually have a stronger self-reinforcement effect. Motivated by our findings, we propose a simple and effective training method \textbf{DITTO} (Pseu\underline{D}o-Repet\underline{IT}ion Penaliza\underline{T}i\underline{O}n), where the model learns to penalize probabilities of sentence-level repetitions from pseudo repetitive data. Although our method is motivated by mitigating repetitions, experiments show that DITTO not only mitigates the repetition issue without sacrificing perplexity, but also achieves better generation quality. Extensive experiments on open-ended text generation (Wikitext-103) and text summarization (CNN/DailyMail) demonstrate the generality and effectiveness of our method.",DITTO,Unreleased,,,2024-11-01 14:04:28+00:00,"China,United States of America,China,Hong Kong,China",,,,,,,,,
Diffusion-GAN,Image generation,"UT Austin,Microsoft","Academia,Industry","Zhendong Wang, Huangjie Zheng, Pengcheng He, Weizhu Chen, Mingyuan Zhou",2022-06-05,Diffusion-GAN: Training GANs with Diffusion,https://arxiv.org/abs/2206.02262v4,164.0,SOTA improvement,"""We demonstrate the advantages of Diffusion-GAN over strong GAN
baselines on various datasets, showing that it can produce more realistic images with higher stability and data efficiency than state-of-the-art GANs.""",,,,,,"Must be <1e23 FLOP, all experiments were done with 4 or 8 V100s.","CIFAR-10,LSUN Bedroom,AFHQ,LSUN Church,STL-10,FFHQ","They experimented with the following datasets: ""CIFAR-10 (Krizhevsky, 2009), STL-10 (Coates et al., 2011), LSUN-Bedroom (Yu et al., 2015), LSUN-Church
(Yu et al., 2015), AFHQ(Cat/Dog/Wild) (Choi et al., 2020), and FFHQ (Karras et al., 2019)""",,,,,,NVIDIA V100,,,"Generative adversarial networks (GANs) are challenging to train stably, and a promising remedy of injecting instance noise into the discriminator input has not been very effective in practice. In this paper, we propose Diffusion-GAN, a novel GAN framework that leverages a forward diffusion chain to generate Gaussianmixture distributed instance noise. Diffusion-GAN consists of three components, including an adaptive diffusion process, a diffusion timestep-dependent discriminator, and a generator. Both the observed and generated data are diffused by the same adaptive diffusion process. At each diffusion timestep, there is a different noise-to-data ratio and the timestep-dependent discriminator learns to distinguish the diffused real data from the diffused generated data. The generator learns from the discriminator’s feedback by backpropagating through the forward diffusion chain, whose length is adaptively adjusted to balance the noise and data levels. We theoretically show that the discriminator’s timestep-dependent strategy gives consistent and helpful guidance to the generator, enabling it to match the true data distribution. We demonstrate the advantages of Diffusion-GAN over strong GAN baselines on various datasets, showing that it can produce more realistic images with higher stability and data efficiency than state-of-the-art GANs.",,,,Unknown,2025-01-17 20:09:49+00:00,"United States of America,United States of America",,,,,,,,,
B2T connection (16L),Language,"LINE Corporation,Tohoku University","Industry,Academia","Sho Takase, Shun Kiyono, Sosuke Kobayashi, Jun Suzuki",2022-06-01,On Layer Normalizations and Residual Connections in Transformers,https://arxiv.org/abs/2206.00330,7.0,,,247000000.00000003,,2.8e+19,,,"192*7 GPU (P100) hours per Table 6

19 TFLOP/s 

19 trillion * 192 * 7 * 3600 * 0.3 = 2.76e19
",WikiText-103,"""We used WikiText-103 (Merity et al., 2017), which consists of a large number of tokens. The training, validation, and test sets contain 103M, 0.2M,
and 0.2M tokens, respectively""

Table 6
updates: 50K
tokens/GPU: 1024

GPUs (Table 7): 192

50000*1024*192/103000000 = 95 epochs",103000000.0,,95.0,,,,,,"From the perspective of the layer normalization (LN) positions, the architectures of Transformers can be categorized into two types: Post-LN and Pre-LN. Recent Transformers tend to be Pre-LN because, in Post-LN with deep Transformers (e.g., those with ten or more layers), the training is often unstable, resulting in useless models. However, Post-LN has consistently achieved better performance than Pre-LN in relatively shallow Transformers (e.g., those with six or fewer layers). This study first investigates the reason for these discrepant observations empirically and theoretically and made the following discoveries: 1, the LN in Post-LN is the main source of the vanishing gradient problem that leads to unstable training, whereas Pre-LN prevents it, and 2, Post-LN tends to preserve larger gradient norms in higher layers during the back-propagation, which may lead to effective training. Exploiting the new findings, we propose a method that can provide both high stability and effective training by a simple modification of Post-LN. We conduct experiments on a wide range of text generation tasks. The experimental results demonstrate that our method outperforms Pre-LN, and enables stable training regardless of the shallow or deep layer settings. Our code is publicly available at this https URL.",B2T connection (16L),Open weights (unrestricted),,,2025-02-17 16:04:13+00:00,"Japan,Japan",,,,,,B2T connection (16L),,,
CRL,Biology,Ulm University,,"Pedro Hermosilla, Timo Ropinski",2022-05-31,Contrastive Representation Learning for 3D Protein Structures,https://arxiv.org/abs/2205.15675,42.0,,,,,,,,,,,,,,,,,,,"Learning from 3D protein structures has gained wide interest in protein modeling and structural bioinformatics. Unfortunately, the number of available structures is orders of magnitude lower than the training data sizes commonly used in computer vision and machine learning. Moreover, this number is reduced even further, when only annotated protein structures can be considered, making the training of existing models difficult and prone to over-fitting. To address this challenge, we introduce a new representation learning framework for 3D protein structures. Our framework uses unsupervised contrastive learning to learn meaningful representations of protein structures, making use of proteins from the Protein Data Bank. We show, how these representations can be used to solve a large variety of tasks, such as protein function prediction, protein fold classification, structural similarity prediction, and protein-ligand binding affinity prediction. Moreover, we show how fine-tuned networks, pre-trained with our algorithm, lead to significantly improved task performance, achieving new state-of-the-art results in many tasks.",,,,Unverified,2024-11-01 14:01:43+00:00,Germany,,,,,,,,,
CogVideo,"Multimodal,Video","Tsinghua University,Beijing Academy of Artificial Intelligence / BAAI","Academia,Academia","Wenyi Hong, Ming Ding, Wendi Zheng, Xinghan Liu, Jie Tang",2022-05-29,CogVideo: Large-scale Pretraining for Text-to-Video Generation via Transformers,https://arxiv.org/abs/2205.15868,356.0,Historical significance,The world's largest and first opensource large-scale pre-trained text-to-video model.,9400000000.0,,,,,,Unspecified unreleased,,5400000.0,"""trained on 5.4 million text-video pairs""",,,,,,,"Large-scale pretrained transformers have created milestones in text (GPT-3) and text-to-image (DALL-E and CogView) generation. Its application to video generation is still facing many challenges: The potential huge computation cost makes the training from scratch unaffordable; The scarcity and weak relevance of text-video datasets hinder the model understanding complex movement semantics. In this work, we present 9B-parameter transformer CogVideo, trained by inheriting a pretrained text-to-image model, CogView2. We also propose multi-frame-rate hierarchical training strategy to better align text and video clips. As (probably) the first open-source large-scale pretrained text-to-video model, CogVideo outperforms all publicly available models at a large margin in machine and human evaluations.",,Open weights (unrestricted),,Speculative,2024-12-02 16:18:58+00:00,"China,China",CogView2,3.0456e+19,"6ND = 6*9400000000*5400000=3.0456e+17

(number of epochs is unknown)",,,,,,True
Tranception,Biology,"University of Oxford,Harvard Medical School,Cohere","Academia,Academia,Industry","Pascal Notin, Mafalda Dias, Jonathan Frazer, Javier Marchena-Hurtado, Aidan Gomez, Debora S. Marks, Yarin Gal",2022-05-27,Tranception: protein fitness prediction with autoregressive transformers and inference-time retrieval,https://arxiv.org/abs/2205.13760,139.0,SOTA improvement,"""We introduce Tranception, a novel transformer architecture leveraging autoregressive predictions and retrieval of homologous sequences at inference to achieve state-of-the-art fitness prediction performance. Given its markedly higher performance on multiple mutants, robustness to shallow alignments and ability to score indels, our approach offers significant gain of scope over existing approaches.""",700000000.0,"""Our largest transformer model, Tranception L, has 700M parameters and is trained on UniRef100 (Suzek et al., 2014)""",7.24e+21,,,"Trained using 64 A100 GPUs for two weeks.
64 * 312 teraFLOP/s * 14 days * 24 hours/day * 3600 seconds/hour * 0.3 utilization (assumption)
= 7.24e21",UniRef100,"""We therefore train our final model (700M parameters) on UniRef100""",75000000001.00037,"Total tokens = Number of Sequences × Average Sequence Length
249,000,000 × 300 = 74,700,000,000 ≈ 7.5 × 10¹⁰ tokens",,336.0,2 weeks,NVIDIA A100,64.0,Self-supervised learning,"The ability to accurately model the fitness landscape of protein sequences is critical to a wide range of applications, from quantifying the effects of human variants on disease likelihood, to predicting immune-escape mutations in viruses and designing novel biotherapeutic proteins. Deep generative models of protein sequences trained on multiple sequence alignments have been the most successful approaches so far to address these tasks. The performance of these methods is however contingent on the availability of sufficiently deep and diverse alignments for reliable training. Their potential scope is thus limited by the fact many protein families are hard, if not impossible, to align. Large language models trained on massive quantities of non-aligned protein sequences from diverse families address these problems and show potential to eventually bridge the performance gap. We introduce Tranception, a novel transformer architecture leveraging autoregressive predictions and retrieval of homologous sequences at inference to achieve state-of-the-art fitness prediction performance. Given its markedly higher performance on multiple mutants, robustness to shallow alignments and ability to score indels, our approach offers significant gain of scope over existing approaches. To enable more rigorous model testing across a broader range of protein families, we develop ProteinGym -- an extensive set of multiplexed assays of variant effects, substantially increasing both the number and diversity of assays compared to existing benchmarks.",,Open weights (unrestricted),,Confident,2025-02-17 16:04:18+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America,Canada",,,,,,,,,
TRIMELMext (247M),Language,Princeton University,Academia,"Zexuan Zhong, Tao Lei, Danqi Chen",2022-05-25,Training Language Models with Memory Augmentation,https://arxiv.org/abs/2205.12674,115.0,,,247000000.00000003,,3.12e+19,,,,WikiText-103,,21086208000.0,"Table 9: 
73728 tokens per update * 286000 updates =21086208000 tokens",204.72,,,,,,"Recent work has improved language models (LMs) remarkably by equipping them with a non-parametric memory component. However, most existing approaches only introduce mem-ories at testing time or represent them using a separately trained encoder, resulting in suboptimal training of the language model. In this work, we present TRIME, a novel yet simple training approach designed for training LMs with memory augmentation. Our approach uses a training objective that directly takes in-batch examples as accessible memory. We also present new methods for memory construction and data batching, which are used for adapting to different sets of memories--local, long-term, and external memory--at testing time. We evaluate TRIME on multiple language modeling and machine translation benchmarks and show that it is able to achieve significant improvements across all the settings. Concretely, TRIME reduces the perplexity from 18.70 to 15.37 on WIKITEXT-103, by effectively leveraging a large memory set from the training corpus. Compared to standard LM training, TRIME adds negligible computational overhead and is compatible with different neural architectures, making it a versatile solution for training memory-augmented LMs.",TRIMELMext (247M),Open weights (non-commercial),,,2024-11-01 14:04:29+00:00,United States of America,,,,,,,,,
Imagen,Image generation,Google Brain,Industry,"Chitwan Saharia, William Chan, Saurabh Saxena, Lala Li, Jay Whang, Emily Denton, Seyed Kamyar Seyed Ghasemipour, Burcu Karagol Ayan, S. Sara Mahdavi, Rapha Gontijo Lopes, Tim Salimans, Jonathan Ho, David J Fleet, Mohammad Norouzi",2022-05-23,Photorealistic Text-to-Image Diffusion Models with Deep Language Understanding,https://arxiv.org/abs/2205.11487,4580.0,"Significant use,SOTA improvement,Highly cited",,7762000000.0,"2B 64x64 generation model, 600M 64->256 super-resolution model, 400M 256->1024 super-resolution model
Uses encodings from a frozen T5-XXL, which should be included in total parameter count. Loading the model directly, there are 4,762,310,656 parameters in the encoder.
2B + 4.762B + 600M + 400M = 7.762 billion",1.46e+22,,,"256 TPU v4 chips for 64x64, for 4 days
128 TPU v4 chips for 64->256, for 2 days
128 TPU v4 chips for 256->1024, for 2 days

256 TPUs * 275 teraFLOPS/TPU * 4 days + 2 * (128 TPUs * 275 teraFLOPS/TPU * 2 days) * 40% utilization = 1.46e+22 FLOP","LAION-400M,Unspecified unreleased",,860000000.0,"""We train on a combination of internal datasets, with ≈ 460M
image-text pairs, and the publicly available Laion dataset [61], with ≈ 400M image-text pairs.""",,96.0,4 days,Google TPU v4,256.0,Self-supervised learning,"We present Imagen, a text-to-image diffusion model with an unprecedented degree of photorealism and a deep level of language understanding. Imagen builds on the power of large transformer language models in understanding text and hinges on the strength of diffusion models in high-fidelity image generation. Our key discovery is that generic large language models (e.g. T5), pretrained on text-only corpora, are surprisingly effective at encoding text for image synthesis: increasing the size of the language model in Imagen boosts both sample fidelity and image-text alignment much more than increasing the size of the image diffusion model. Imagen achieves a new state-of-the-art FID score of 7.27 on the COCO dataset, without ever training on COCO, and human raters find Imagen samples to be on par with the COCO data itself in image-text alignment. To assess text-to-image models in greater depth, we introduce DrawBench, a comprehensive and challenging benchmark for text-to-image models. With DrawBench, we compare Imagen with recent methods including VQ-GAN+CLIP, Latent Diffusion Models, and DALL-E 2, and find that human raters prefer Imagen over other models in side-by-side comparisons, both in terms of sample quality and image-text alignment.",,API access,,Likely,2025-02-17 16:04:28+00:00,United States of America,,,,,,,,,True
improved U-Net for chest X-ray images segmentation,"Medicine,Vision","Henan University of Technology,Nanyang Central Hospital","Academia,Government","Wufeng Liu, Jiaxin Luo, Yan Yang, Wenlian Wang, Junkui Deng & Liang Yu ",2022-05-23,Automatic lung segmentation in chest X-ray images using improved U-Net,https://www.nature.com/articles/s41598-022-12743-y,,,,,,,,,,"NIH Chest X-ray Dataset,JSRT Dataset,Montgomery County (MC) Dataset","NIH Chest X-ray Dataset (sample of 2,785 manually labeled images)

JSRT Dataset (247 CXR images)

Montgomery County (MC) Dataset (138 CXR images)",,"""The batch size is set to 64. Max epochs are set to 70.""

""image size was adjusted to 256 * 256""",70.0,,,"NVIDIA GeForce RTX 3060,Intel Core i5-11600K",,,"The automatic segmentation of the lung region for chest X-ray (CXR) can help doctors diagnose many lung diseases. However, extreme lung shape changes and fuzzy lung regions caused by serious lung diseases may incorrectly make the automatic lung segmentation model. We improved the U-Net network by using the pre-training Efficientnet-b4 as the encoder and the Residual block and the LeakyReLU activation function in the decoder. The network can extract Lung field features efficiently and avoid the gradient instability caused by the multiplication effect in gradient backpropagation. Compared with the traditional U-Net model, our method improves about 2.5% dice coefficient and 6% Jaccard Index for the two benchmark lung segmentation datasets. Our model improves about 5% dice coefficient and 9% Jaccard Index for the private lung segmentation datasets compared with the traditional U-Net model. Comparative experiments show that our method can improve the accuracy of lung segmentation of CXR images and it has a lower standard deviation and good robustness.",,,,Unknown,2024-11-18 18:32:00+00:00,"China,China",,,,,,,,,
LSTM+GraB,Language,Cornell University,Academia,"Yucheng Lu, Wentao Guo, Christopher De Sa",2022-05-22,GraB: Finding Provably Better Data Permutations than Random Reshuffling,https://arxiv.org/abs/2205.10733,14.0,,,,,,,,Definitely <1e23 FLOP: all experiments used an NVIDIA GeForce RTX 2080 Ti GPU.,WikiText-2,""" (3) training LSTM on wikitext-2 [Merity et al., 2017]""
",,,50.0,,,,,,"Random reshuffling, which randomly permutes the dataset each epoch, is widely adopted in model training because it yields faster convergence than with-replacement sampling. Recent studies indicate greedily chosen data orderings can further speed up convergence empirically, at the cost of using more computation and memory. However, greedy ordering lacks theoretical justification and has limited utility due to its non-trivial memory and computation overhead. In this paper, we first formulate an example-ordering framework named herding and answer affirmatively that SGD with herding converges at the rate O(T−2/3) on smooth, non-convex objectives, faster than the O(n1/3T−2/3) obtained by random reshuffling, where n denotes the number of data points and T denotes the total number of iterations. To reduce the memory overhead, we leverage discrepancy minimization theory to propose an online Gradient Balancing algorithm (GraB) that enjoys the same rate as herding, while reducing the memory usage from O(nd) to just O(d) and computation from O(n2) to O(n), where d denotes the model dimension. We show empirically on applications including MNIST, CIFAR10, WikiText and GLUE that GraB can outperform random reshuffling in terms of both training and validation performance, and even outperform state-of-the-art greedy ordering while reducing memory usage over 100×.",LSTM+GraB,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
SimCSE,Language,"Princeton University,Tsinghua University","Academia,Academia","Tianyu Gao, Xingcheng Yao, Danqi Chen",2022-05-18,SimCSE: Simple Contrastive Learning of Sentence Embeddings,https://arxiv.org/abs/2104.08821,2795.0,"Highly cited,SOTA improvement",,,,,,,,,"""Training details. We start from pre-trained checkpoints of BERT (Devlin et al., 2019) (uncased) or RoBERTa (Liu et al., 2019) (cased) and take the [CLS] representation as the sentence embedding (see §6.3 for comparison between different pooling methods). We train unsupervised SimCSE on 106 randomly sampled sentences from English Wikipedia, and train supervised SimCSE on the combination of MNLI and SNLI datasets (314k). More training details can be found in Appendix A""",,,3.0,,,,,,"This paper presents SimCSE, a simple contrastive learning framework that greatly advances state-of-the-art sentence embeddings. We first describe an unsupervised approach, which takes an input sentence and predicts itself in a contrastive objective, with only standard dropout used as noise. This simple method works surprisingly well, performing on par with previous supervised counterparts. We find that dropout acts as minimal data augmentation, and removing it leads to a representation collapse. Then, we propose a supervised approach, which incorporates annotated pairs from natural language inference datasets into our contrastive learning framework by using ""entailment"" pairs as positives and ""contradiction"" pairs as hard negatives. We evaluate SimCSE on standard semantic textual similarity (STS) tasks, and our unsupervised and supervised models using BERT base achieve an average of 76.3% and 81.6% Spearman's correlation respectively, a 4.2% and 2.2% improvement compared to the previous best results. We also show -- both theoretically and empirically -- that the contrastive learning objective regularizes pre-trained embeddings' anisotropic space to be more uniform, and it better aligns positive pairs when supervised signals are available.",,,,Unknown,2024-11-01 14:04:28+00:00,"United States of America,China",RoBERTa Large,,,,,,,,
Gato,"Multimodal,Robotics,Games,Language",DeepMind,Industry,"Scott Reed, Konrad Żołna, Emilio Parisotto, Sergio Gómez Colmenarejo, Alexander Novikov, Gabriel Barth-Maron, Mai Giménez, Yury Sulsky, Jackie Kay, Jost Tobias Springenberg, Tom Eccles, Jake Bruce, Ali Razavi, Ashley Edwards, Nicolas Heess, Yutian Chen, Raia Hadsell, Oriol Vinyals, Mahyar Bordbar, Nando de Freitas",2022-05-12,A Generalist Agent,https://arxiv.org/abs/2205.06175,668.0,SOTA improvement,"SOTA at Meta-World MT50 tasks (96.6%) page 14, section 5.5",1180000000.0,"""This section focuses on in-simulation evaluation.
Figure 10 compares the full 1.18B parameter Gato"" p.10",4.02e+21,,,"256 (16x16x) TPUv3 chips x 123e12 FLOPS/chip x 4 days x 86400 seconds/day * 0.4 utilization = 4.35e21 FLOPs

Similar value by 6NC:
6 * 524288000000 * 1.18B = 3.71e21

Using geometric mean:
sqrt(4.35e21 * 3.71e21) = 4.02e21",,"Table 1 lists the datasets used. Note that actual training appears to have used fewer than the 1.5T control tokens + unspecified number of vision/language tokens: ""Training of the model is performed on a 16x16 TPU v3 slice for 1M steps with batch size 512 and token sequence length L = 1024, which takes about 4 days.""
1M * 512 * 1024 = 524,288,000,000 tokens in training",524288000000.0,,,96.0,4 days,Google TPU v3,256.0,,"Inspired by progress in large-scale language modeling, we apply a similar approach towards building a single generalist agent beyond the realm of text outputs. The agent, which we refer to as Gato, works as a multi-modal, multi-task, multi-embodiment generalist policy. The same network with the same weights can play Atari, caption images, chat, stack blocks with a real robot arm and much more, deciding based on its context whether to output text, joint torques, button presses, or other tokens. In this report we describe the model and the data, and document the current capabilities of Gato.",,Unreleased,,,2025-02-27 20:47:41+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,True
UL2,Language,"Google Research,Google Brain","Industry,Industry","Yi Tay, Mostafa Dehghani, Vinh Q. Tran, Xavier Garcia, Dara Bahri, Tal Schuster, Huaixiu Steven Zheng, Neil Houlsby, Donald Metzler",2022-05-10,Unifying Language Learning Paradigms,https://arxiv.org/abs/2205.05131v1,253.0,SOTA improvement,"""by scaling our model up to 20B parameters, we achieve SOTA
performance on 50 well-established supervised NLP tasks""",20000000000.0,Taken from Directory of LLMs,1.2e+23,,,"Trained on 1T tokens
20B * 1T * 6 = 1.2e23 

Second source: Section 5.1 says model was trained on 512 TPUv4 chips, and took slightly over 1 month
512 * 2.75e14 * 31 * 24 * 3600 * 0.3 = 1.13e23",C4,'The model is trained on a total of 1 trillion tokens on C4 (2 million steps).',1000000000000.0,1T tokens,,744.0,"around 31 days from 'Pre-training took approximately slight more than one month for about 1 trillion
tokens.' from section 5.1
so around 31*24 = 744
",Google TPU v4,512.0,,"Existing pre-trained models are generally geared towards a particular class of problems. To date, there seems to be still no consensus on what the right architecture and pre-training setup should be. This paper presents a unified framework for pre-training models that are universally effective across datasets and setups. We begin by disentangling architectural archetypes with pre-training objectives -- two concepts that are commonly conflated. Next, we present a generalized and unified perspective for self-supervision in NLP and show how different pre-training objectives can be cast as one another and how interpolating between different objectives can be effective. We then propose Mixture-of-Denoisers (MoD), a pre-training objective that combines diverse pre-training paradigms together. We furthermore introduce a notion of mode switching, wherein downstream fine-tuning is associated with specific pre-training schemes. We conduct extensive ablative experiments to compare multiple pre-training objectives and find that our method pushes the Pareto-frontier by outperforming T5 and/or GPT-like models across multiple diverse setups. Finally, by scaling our model up to 20B parameters, we achieve SOTA performance on 50 well-established supervised NLP tasks ranging from language generation (with automated and human evaluation), language understanding, text classification, question answering, commonsense reasoning, long text reasoning, structured knowledge grounding and information retrieval. Our model also achieve strong results at in-context learning, outperforming 175B GPT-3 on zero-shot SuperGLUE and tripling the performance of T5-XXL on one-shot summarization. We release Flax-based T5X model checkpoints for the 20B model at \url{this https URL}.",,Open weights (unrestricted),0.2992518703,Confident,2025-02-17 16:04:47+00:00,"Multinational,United States of America,United States of America",,,,,,,65536.0,"""We pre-train all models for 500K steps with a batch size of 128 and a sequence length of 512 inputs and 512 targets using the C4 corpus. The total approximate tokens seen during pre-training is approximately 32 billion tokens.""

500k*128*512 ~= 32B
128*512=65,536",True
ASE,Robotics,"NVIDIA,University of California (UC) Berkeley","Industry,Academia","Xue Bin Peng, Yunrong Guo, Lina Halper, Sergey Levine, Sanja Fidler",2022-05-05,ASE: Large-Scale Reusable Adversarial Skill Embeddings for Physically Simulated Characters,https://arxiv.org/abs/2205.01906,56.0,,,,,4.4928e+19,,,"Training was done using the Isaac Gym simulator on an NVIDIA V100 GPU. The model was trained on over 10 billion samples, which equates to 10 years of simulated experience time. Training took around 10 days on a single GPU.
1.3e14 * 10 * 24 * 3600 * 0.4 = 4.49e19",,"The model is trained on a dataset of 187 motion clips, about 30 minutes of human motion capture data, depicting locomotion and sword wielding motions.",,,,240.0,Training took around 10 days on a single GPU.,NVIDIA Tesla V100 PCIe 16 GB,,Reinforcement learning,"The incredible feats of athleticism demonstrated by humans are made possible in part by a vast repertoire of general-purpose motor skills, acquired through years of practice and experience. These skills not only enable humans to perform complex tasks, but also provide powerful priors for guiding their behaviors when learning new tasks. This is in stark contrast to what is common practice in physics-based character animation, where control policies are most typically trained from scratch for each task. In this work, we present a large-scale data-driven framework for learning versatile and reusable skill embeddings for physically simulated characters. Our approach combines techniques from adversarial imitation learning and unsupervised reinforcement learning to develop skill embeddings that produce life-like behaviors, while also providing an easy to control representation for use on new downstream tasks. Our models can be trained using large datasets of unstructured motion clips, without requiring any task-specific annotation or segmentation of the motion data. By leveraging a massively parallel GPU-based simulator, we are able to train skill embeddings using over a decade of simulated experiences, enabling our model to learn a rich and versatile repertoire of skills. We show that a single pre-trained model can be effectively applied to perform a diverse set of new tasks. Our system also allows users to specify tasks through simple reward functions, and the skill embedding then enables the character to automatically synthesize complex and naturalistic strategies in order to achieve the task objectives.",,,,Likely,2025-02-17 16:04:53+00:00,"United States of America,United States of America",,,,,,,,,
DeBERTaV3large + KEAR,Language,Microsoft,Industry,"Yichong Xu, Chenguang Zhu, Shuohang Wang, Siqi Sun, Hao Cheng, Xiaodong Liu, Jianfeng Gao, Pengcheng He, Michael Zeng, Xuedong Huang",2022-05-04,Human Parity on CommonsenseQA: Augmenting Self-Attention with External Attention,https://arxiv.org/abs/2112.03254v3,50.0,SOTA improvement,"""The proposed system, Knowledgeable External Attention for commonsense Reasoning (KEAR), reaches human parity on the open CommonsenseQA research benchmark with an accuracy of 89.4\% in comparison to the human accuracy of 88.9\%.""

SOTA per https://paperswithcode.com/sota/common-sense-reasoning-on-commonsenseqa",418000000.0,"DeBERTaV3-large had 418M params, per Table 2",,,,this is a fine-tuned version of DeBERTaV3-large,,"""We present details of the 17 datasets that we use for training data retrieval in Table 1. All the datasets are multiple-choice or classification datasets related to commonsense reasoning, and we include dataset details in the appendix.""",,,10.0,,,,,,"Most of today's AI systems focus on using self-attention mechanisms and transformer architectures on large amounts of diverse data to achieve impressive performance gains. In this paper, we propose to augment the transformer architecture with an external attention mechanism to bring external knowledge and context to bear. By integrating external information into the prediction process, we hope to reduce the need for ever-larger models and increase the democratization of AI systems. We find that the proposed external attention mechanism can significantly improve the performance of existing AI systems, allowing practitioners to easily customize foundation AI models to many diverse downstream applications. In particular, we focus on the task of Commonsense Reasoning, demonstrating that the proposed external attention mechanism can augment existing transformer models and significantly improve the model's reasoning capabilities. The proposed system, Knowledgeable External Attention for commonsense Reasoning (KEAR), reaches human parity on the open CommonsenseQA research benchmark with an accuracy of 89.4\% in comparison to the human accuracy of 88.9\%.",,,,Confident,2024-11-07 20:40:17+00:00,United States of America,DeBERTaV3large,,,,,,,,
Jurassic-X,Language,AI21 Labs,Industry,"Ehud Karpas, Omri Abend, Yonatan Belinkov, Barak Lenz, Opher Lieber, Nir Ratner, Yoav Shoham, Hofit Bata, Yoav Levine, Kevin Leyton-Brown, Dor Muhlgay, Noam Rozen, Erez Schwartz, Gal Shachaf, Shai Shalev-Shwartz, Amnon Shashua, Moshe Tenenholtz",2022-05-03,"MRKL Systems: A modular, neuro-symbolic architecture that combines large language models, external knowledge sources and discrete reasoning",https://www.ai21.com/blog/jurassic-x-crossing-the-neuro-symbolic-chasm-with-the-mrkl-system,58.0,,,7000000000.0,,,,,,,,,,,,,,,,"We present the next evolution in natural language processing – the Modular Reasoning, Knowledge and Language (MRKL, pronounced “miracle”) system – and Jurassic-X, AI21 Labs’ implementation of it. MRKL systems include one or more language models, and augment them with external knowledge sources as well as symbolic reasoning experts that can handle tasks that lie beyond the reach of neural models.",,,,,2024-11-01 14:04:29+00:00,Israel,Jurassic-1-Jumbo,,,,,,,,
OPT-175B,Language,Meta AI,Industry,"Susan Zhang∗ , Stephen Roller∗ , Naman Goyal∗ , Mikel Artetxe, Moya Chen, Shuohui Chen, Christopher Dewan, Mona Diab, Xian Li, Xi Victoria Lin, Todor Mihaylov, Myle Ott† , Sam Shleifer† , Kurt Shuster, Daniel Simig, Punit Singh Koura, Anjali Sridhar, Tianlu Wang, Luke Zettlemoyer",2022-05-02,OPT: Open Pre-trained Transformer Language Models,https://arxiv.org/abs/2205.01068,2932.0,"Significant use,Highly cited",https://ai.meta.com/blog/opt-175b-large-language-model-applications/,175000000000.0,"""In line with Meta AI’s commitment to open science, we are sharing Open Pretrained Transformer (OPT-175B), a language model with 175 billion parameters trained on publicly available data sets""",4.3e+23,,,"https://github.com/facebookresearch/metaseq/blob/main/projects/OPT/chronicles/final_update.md

""As of yesterday, at 12:46pm PST on January 6, our 175B model finally completed its training run on 300B tokens. This required ~4.30E+23 FLOPs of compute""","The Pile,BookCorpus (BooksCorpus, Toronto Book Corpus),CC-Stories,Pushshift Reddit","""The pre-training corpus contains a concatenation
of datasets used in RoBERTa (Liu et al., 2019b),
the Pile (Gao et al., 2021a), and PushShift.io Reddit (Baumgartner et al., 2020; Roller et al., 2021)""
...
""RoBERTa We included the BookCorpus (Zhu et al., 2015) and Stories (Trinh and Le, 2018) subsets of the RoBERTa corpus and utilized an updated version of CCNews, containing news stories crawled through September 28, 2021. This CCNews v2 corpus was preprocessed the same way as the original RoBERTa CCNews (Liu et al., 2019b).

The Pile We included a subset of the Pile (Gao et al., 2021a), including: CommonCrawl, DM Mathematics, Project Gutenberg, HackerNews, OpenSubtitles, OpenWebText2, USPTO and Wikipedia. Other subsets of the Pile were eliminated
...

PushShift.io Reddit We included a subset of the Pushshift.io corpus produced by Baumgartner et al. (2020) and previously used by Roller et al. (2021). To convert the conversational trees
into language-model-accessible documents, we extracted the longest chain of comments in each thread and discarded all other paths in the tree. This reduced the corpus by about 66%.",180000000000.0,"""The training data contains 180B tokens corresponding to 800 GB of data""

1 token ~ 0.75 words",1.6667,793.5,"4.3*10^23 FLOP / (147 TFLOPS) = 813000 A100-hours
https://www.wolframalpha.com/input?i=4.3*10%5E23+FLOP+%2F+%28147+TFLOPS%29

""As of yesterday, at 12:46pm PST on January 6, our 175B model finally completed its training run on 300B tokens. This required ~4.30E+23 FLOPs of compute, or roughly ~33 days of continuous training on 1024 80GB A100s (assuming no hardware issues, no numerical instabilities, etc.).""",NVIDIA A100 SXM4 80 GB,1024.0,Self-supervised learning,"Large language models, which are often trained for hundreds of thousands of compute days, have shown remarkable capabilities for zero- and few-shot learning. Given their computational cost, these models are difficult to replicate without significant capital. For the few that are available through APIs, no access is granted to the full model weights, making them difficult to study. We present Open Pre-trained Transformers (OPT), a suite of decoder-only pre-trained transformers ranging from 125M to 175B parameters, which we aim to fully and responsibly share with interested researchers. We show that OPT-175B is comparable to GPT-3,1 while requiring only 1/7th the carbon footprint to develop. We are also releasing our logbook detailing the infrastructure challenges we faced, along with code for experimenting with all of the released models",OPT-175B,Open weights (non-commercial),0.47115,Confident,2025-02-17 16:05:57+00:00,United States of America,,,,,,,2000000.0,Table 1,
Flamingo,"Multimodal,Vision,Language,Video",DeepMind,Industry,"Jean-Baptiste Alayrac, Jeff Donahue, Pauline Luc, Antoine Miech, Iain Barr, Yana Hasson, Karel Lenc, Arthur Mensch, Katie Millican, Malcolm Reynolds, Roman Ring, Eliza Rutherford, Serkan Cabi, Tengda Han, Zhitao Gong, Sina Samangooei, Marianne Monteiro, Jacob Menick, Sebastian Borgeaud, Andrew Brock, Aida Nematzadeh, Sahand Sharifzadeh, Mikolaj Binkowski, Ricardo Barreira, Oriol Vinyals, Andrew Zisserman, Karen Simonyan",2022-04-29,Flamingo: a Visual Language Model for Few-Shot Learning,https://arxiv.org/abs/2204.14198,2473.0,"Highly cited,SOTA improvement","""For tasks lying anywhere on this spectrum, a single Flamingo model can achieve a new state of the art with few-shot learning, simply by prompting the model with task-specific examples. On numerous benchmarks, Flamingo outperforms models fine-tuned on thousands of times more task-specific data.""",80000000000.0,"""We obtain three models, Flamingo-3B, Flamingo-9B and Flamingo-80B""

"" The Flamingo-80B model builds on top of the frozen Chinchilla 70B language model [42]. Starting from the very first layer and before every seventh transformer blocks, we add a GATED XATTN-DENSE layer attending to the visual inputs; this accounts for 10B additional learned parameters. For simplicity, we refer to this model as simply Flamingo throughout the paper""",2.18972000000001e+23,,,"1536 TPU v4 chips for 15 days. Assuming 40% utilization:
C = 1536 TPU * 275*10^12 FLOP/s/TPU * 15 day * 86400 s/day * 0.40 = 2.2*10^23 FLOP

""All training and evaluation was performed on TPUv4 instances. The largest model containing 80 billion parameters is trained on QUSV chips for 15 days and sharded across 16 devices.""

""All trained parameters and optimizer accumulators are stored and updated in float32; all activations and gradients are computed in bfloat16 after downcasting of parameters from float32 to bfloat16""","MultiModal MassiveWeb,LTIP,VTP,ALIGN",,,"Flamingo was trained on a mixture of web-scraped datasets:
43M pages of text with interleaved images (MultiModal MassiveWeb dataset)
312M image-text pairs (LTIP dataset)
27M video-text pairs (VTP dataset)
1.8B image-alt text pairs (ALIGN dataset)

Training dataset size is at least 2.1 billion.",,360.0,1536 TPU v4 chips for 15 days,Google TPU v4,1536.0,Supervised,"Building models that can be rapidly adapted to novel tasks using only a handful of annotated examples is an open challenge for multimodal machine learning research. We introduce Flamingo, a family of Visual Language Models (VLM) with this ability. We propose key architectural innovations to: (i) bridge powerful pretrained vision-only and language-only models, (ii) handle sequences of arbitrarily interleaved visual and textual data, and (iii) seamlessly ingest images or videos as inputs. Thanks to their flexibility, Flamingo models can be trained on large-scale multimodal web corpora containing arbitrarily interleaved text and images, which is key to endow them with in-context few-shot learning capabilities. We perform a thorough evaluation of our models, exploring and measuring their ability to rapidly adapt to a variety of image and video tasks. These include open-ended tasks such as visual question-answering, where the model is prompted with a question which it has to answer; captioning tasks, which evaluate the ability to describe a scene or an event; and close-ended tasks such as multiple-choice visual question-answering. For tasks lying anywhere on this spectrum, a single Flamingo model can achieve a new state of the art with few-shot learning, simply by prompting the model with task-specific examples. On numerous benchmarks, Flamingo outperforms models fine-tuned on thousands of times more task-specific data.",,Unreleased,,Confident,2025-02-17 16:06:06+00:00,United Kingdom of Great Britain and Northern Ireland,Chinchilla,,,,,,,,True
CogView2,Image generation,"Tsinghua University,Beijing Academy of Artificial Intelligence / BAAI","Academia,Academia","Ming Ding, Wendi Zheng, Wenyi Hong, Jie Tang",2022-04-28,CogView2: Faster and Better Text-to-Image Generation via Hierarchical Transformers,https://arxiv.org/abs/2204.14217,,,,6000000000.0,"The backbone of our pretrained CogLM is a Transformer with Sandwich LayerNorm [3]. The model has 6 billion parameters (48 layers, hidden size 3072, 48 attention heads)",,,,Presumably used more than original CogView,,,,,,,,,,,"The development of the transformer-based text-to-image models are impeded by its slow generation and complexity for high-resolution images. In this work, we put forward a solution based on hierarchical transformers and local parallel auto-regressive generation. We pretrain a 6B-parameter transformer with a simple and flexible self-supervised task, Cross-modal general language model (CogLM), and finetune it for fast super-resolution. The new text-to-image system, CogView2, shows very competitive generation compared to concurrent state-of-the-art DALL-E-2, and naturally supports interactive text-guided editing on images.",,,,Unverified,2024-09-05 18:08:31+00:00,"China,China",,,,,,,,,
GraphBP,Biology,"Texas A&M,Fujitsu","Academia,Industry","Meng Liu, Youzhi Luo, Kanji Uchino, Koji Maruhashi, Shuiwang Ji",2022-04-19,Generating 3D Molecules for Target Protein Binding,https://arxiv.org/abs/2204.09410,109.0,,,,,,,,,,,15000001.000000004,"500,000 complexes × 30 atoms/complex = 15,000,000 total data points (1.5e7)",,,,,,,,,,,Unverified,2025-01-30 05:04:38+00:00,"United States of America,Japan",,,,,,,,,
LaMemo,Language,"Tsinghua University,NetEase,Oppo Mobile Telecommunications","Academia,Industry,Industry","Haozhe Ji, Rongsheng Zhang, Zhenyu Yang, Zhipeng Hu, Minlie Huang",2022-04-15,LaMemo: Language Modeling with Look-Ahead Memory,https://arxiv.org/abs/2204.07341,2.0,,,151000000.0,Table 1,,,,,WikiText-103,,,,79.53,,,,,,"Although Transformers with fully connected self-attentions are powerful to model long-term dependencies, they are struggling to scale to long texts with thousands of words in language modeling. One of the solutions is to equip the model with a recurrence memory. However, existing approaches directly reuse hidden states from the previous segment that encodes contexts in a uni-directional way. As a result, this prohibits the memory to dynamically interact with the current context that provides up-to-date information for token prediction. To remedy this issue, we propose Look-Ahead Memory (LaMemo) that enhances the recurrence memory by incrementally attending to the right-side tokens, and interpolating with the old memory states to maintain long-term information in the history. LaMemo embraces bi-directional attention and segment recurrence with an additional computation overhead only linearly proportional to the memory length. Experiments on widely used language modeling benchmarks demonstrate its superiority over the baselines equipped with different types of memory.",LaMemo,Open weights (unrestricted),,,2024-09-05 18:08:31+00:00,"China,China,China",,,,,,LaMemo,,,
Sparse all-MLP,Language,Meta AI,Industry,"Ping Yu, Mikel Artexte, Myle Ott, Sam Shleifer, Hongyu Gong, Ves Stoyanov, Xian Li",2022-04-14,Efficient Language Modeling with Sparse all-MLP,https://arxiv.org/abs/2203.06850,11.0,SOTA improvement,"Abstract:
""Our model also outperforms
the RoBERTa-Large model on several English tasks of the GLUE benchmark by 0.3% on average while handling 99 more languages.""",9410000000.0,"Table 2: ""In Section 4.4, we run our large model (9.41B parameters)""",6.0770304e+19,,,"112 hours on 32 V100 GPUs
assumed 0.33 util rate
32*112*60*60*0.3*1.57E+13
","RoBERTa dataset,CC100",,100000000000.0,100B tokens (Table 2) so 75B words.,,112.0,,,,Self-supervised learning,"All-MLP architectures have attracted increasing interest as an alternative to attention-based models. In NLP, recent work like gMLP shows that all-MLPs can match Transformers in language modeling, but still lag behind in downstream tasks. In this work, we analyze the limitations of MLPs in expressiveness, and propose sparsely activated MLPs with mixture-of-experts (MoEs) in both feature and input (token) dimensions. Such sparse all-MLPs significantly increase model capacity and expressiveness while keeping the compute constant. We address critical challenges in incorporating conditional computation with two routing strategies. The proposed sparse all-MLP improves language modeling perplexity and obtains up to 2× improvement in training efficiency compared to both Transformer-based MoEs (GShard, Switch Transformer, Base Layers and HASH Layers) as well as dense Transformers and all-MLPs. Finally, we evaluate its zero-shot in-context learning performance on six downstream tasks, and find that it surpasses Transformer-based MoEs and dense Transformers.",,Unreleased,,,2025-02-17 16:06:13+00:00,United States of America,,,,,,,,,
Stable Diffusion (LDM-KL-8-G),Image generation,"Runway,Ludwig Maximilian University","Industry,Academia","Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, Björn Ommer",2022-04-13,High-Resolution Image Synthesis with Latent Diffusion Models,https://arxiv.org/abs/2112.10752,10764.0,"Significant use,Highly cited",,1450000000.0,See Table 2,5e+22,,,"""I get 5e22 FLOP. 150k hours on A100 [1] gives 150*10^3 hours * 3600 seconds/hour * 3.12E+14 peak performance of A100 * 0.33 utilisation = 5e22  FLOP""

[1] https://twitter.com/EMostaque/status/1563870674111832066",LAION-400M,"Depends on the specific task; see sec 4

""we train a 1.45B parameter
KL-regularized LDM conditioned on language prompts on
LAION-400M""",400000000.0,,,585.9375,"total chip-hours divided by number of GPUs
150k/256",NVIDIA A100,256.0,Self-supervised learning,"By decomposing the image formation process into a sequential application of denoising autoencoders, diffusion models (DMs) achieve state-of-the-art synthesis results on image data and beyond. Additionally, their formulation allows for a guiding mechanism to control the image generation process without retraining. However, since these models typically operate directly in pixel space, optimization of powerful DMs often consumes hundreds of GPU days and inference is expensive due to sequential evaluations. To enable DM training on limited computational resources while retaining their quality and flexibility, we apply them in the latent space of powerful pretrained autoencoders. In contrast to previous work, training diffusion models on such a representation allows for the first time to reach a near-optimal point between complexity reduction and detail preservation, greatly boosting visual fidelity. By introducing cross-attention layers into the model architecture, we turn diffusion models into powerful and flexible generators for general conditioning inputs such as text or bounding boxes and high-resolution synthesis becomes possible in a convolutional manner. Our latent diffusion models (LDMs) achieve a new state of the art for image inpainting and highly competitive performance on various tasks, including unconditional image generation, semantic scene synthesis, and super-resolution, while significantly reducing computational requirements compared to pixel-based DMs. Code is available at this https URL .",,Open weights (restricted use),,,2024-11-08 15:03:16+00:00,"United States of America,Germany",,,,,,,,,
STT Conformer-Transducer XL,Speech,NVIDIA,Industry,,2022-04-12,,https://catalog.ngc.nvidia.com/orgs/nvidia/teams/nemo/models/stt_en_conformer_transducer_xlarge,,,"SOTA for open-source speech recognition, per OpenAI's Whisper paper: https://cdn.openai.com/papers/whisper.pdf",600000000.0,600M,,,,,"NeMo ASRSET,LibriSpeech,Fisher,Switchboard,VoxPopuli","""All the models in this collection are trained on a composite dataset (NeMo ASRSET) comprising of several thousand hours of English speech:

Librispeech 960 hours of English speech
Fisher Corpus
...""",,"Tens of millions of words, at ~12k words/hour (~200 words per minute)",,,,,,,,,Open weights (unrestricted),,Likely,2024-09-30 18:54:26+00:00,United States of America,,,,,,,,,
VLM-4,Language,LightOn,Industry,,2022-04-12,"LightOn publicly launches Muse, an API to VLM-4 Large Language Models trained natively in five European Languages",https://web.archive.org/web/20220506095925/https://lighton.ai/blog/lighton-publicly-launches-muse-an-api-to-vlm-4-large-language-models-trained-natively-in-five-european-languages/,,,,,,,,,,,,,,,,,,,,,,API access,,Unverified,2024-09-09 19:36:04+00:00,France,,,,,,,,,
BERT-RBP,Biology,Waseda University,Academia,"Keisuke Yamada, Michiaki Hamada",2022-04-07,Prediction of RNA–protein interactions using a nucleotide language model,https://academic.oup.com/bioinformaticsadvances/article/2/1/vbac023/6564689,36.0,SOTA improvement,"""Our model outperformed state-of-the-art prediction models using the eCLIP-seq data of 154 RBPs"" [Abstract] - SOTA improvement on a very specific task",110000000.0,"Base model is BERT base (110M parameters), pre-trained on human reference genome (DNABert: https://academic.oup.com/bioinformatics/article/37/15/2112/6128680)",1.4e+20,,,"See DNABert entry:

""Since the pre-training of DNABERT model is resource-intensive (about 25 days on 8 NVIDIA 2080Ti GPUs)""

Assuming FP16 and 30% utilization

Calculation = (25 * 24 *3600) s * 2.7e13 FLOP/s per GPU * 8 GPUs * 0.3 utilization = 1.4e20 FLOP",RBPSuite,"See DNABert entry: ""We generated training data from human genome [...]"" [2.2.2 Pre-training]

""An eCLIP-seq dataset previously generated from the ENCODE3 database by Pan et al. (2020) was used. The original dataset consisted of 154 RBP sets with up to 60 000 positive RNA sequences that bind to the corresponding RBP and the same number of negative sequences."" [2.2 Data preparation]",78000001.00000003,"RBPs: 154
Sequences per RBP: 15,000
Total sequences = 154 × 15,000 = 2,310,000
Tokens per sequence = 34
Total tokens = 2,310,000 × 34 = 78,540,000
Final estimate: 7.8 × 10⁷ tokens",3.0,,,,,,"Motivation
The accumulation of sequencing data has enabled researchers to predict the interactions between RNA sequences and RNA-binding proteins (RBPs) using novel machine learning techniques. However, existing models are often difficult to interpret and require additional information to sequences. Bidirectional encoder representations from transformer (BERT) is a language-based deep learning model that is highly interpretable. Therefore, a model based on BERT architecture can potentially overcome such limitations.

Results
Here, we propose BERT-RBP as a model to predict RNA–RBP interactions by adapting the BERT architecture pretrained on a human reference genome. Our model outperformed state-of-the-art prediction models using the eCLIP-seq data of 154 RBPs. The detailed analysis further revealed that BERT-RBP could recognize both the transcript region type and RNA secondary structure only based on sequence information. Overall, the results provide insights into the fine-tuning mechanism of BERT in biological contexts and provide evidence of the applicability of the model to other RNA-related problems.",,Open weights (non-commercial),,Confident,2025-02-17 16:06:20+00:00,Japan,DNABERT,2.2e+16,"""The models were trained on four NVIDIA Tesla V100 GPUs (128
GB memory). The training of one RBP model using 19 200 samples
took <10 min.""

Calculation assuming FP16 and 30% utlization and NVIDIA Tesla V100 SMX2 model: 
10 min * 60 sec/min * 3.1e13 FLOP/s * 4 GPU * 0.3 utilization = 2.2e16",,,,,,
DALL·E 2,Image generation,OpenAI,Industry,"Aditya Ramesh, Prafulla Dhariwal, Alex Nichol, Casey Chu, Mark Chen",2022-04-06,Hierarchical Text-Conditional Image Generation with CLIP Latents,https://cdn.openai.com/papers/dall-e-2.pdf,5470.0,"Highly cited,SOTA improvement",,3500000000.0,"""Our decoder architecture is the 3.5 billion parameter GLIDE model""",,,,"Decoder architecture is similar to Imagen (1.46E+22), but trained on 1.6e9 datapoints (Table 3) rather than Imagen's 5.1e9 datapoints.

DALL-E 2 uses two models as priors. I estimate the prior model's FLOP as 6*N*D = 6 * 1e9 * 4096 * 1e6 = 2.5e19 FLOP. However, this seems low compared to CLIP.

So it may be possible to estimate DALL-E 2's compute by analogy to Imagen, but there is a lot of uncertainty and more research would be needed.","CLIP,DALL-E",,650000000.0,"""When training the encoder, we sample from the CLIP [39] and DALL-E [40] datasets (approximately 650M images in total) with equal probability""",,,,,,Self-supervised learning,"Contrastive models like CLIP have been shown to learn robust representations of images that capture both semantics and style. To leverage these representations for image generation, we propose a two-stage model: a prior that generates a CLIP image embedding given a text caption, and a decoder that generates an image conditioned on the image embedding. We show that explicitly generating image representations improves image diversity with minimal loss in photorealism and caption similarity. Our decoders conditioned on image representations can also produce variations of an image that preserve both its semantics and style, while varying the non-essential details absent from the image representation. Moreover, the joint embedding space of CLIP enables language-guided image manipulations in a zero-shot fashion. We use diffusion models for the decoder and experiment with both autoregressive and diffusion models for the prior, finding that the latter
are computationally more efficient and produce higher-quality samples.",,,,Confident,2024-11-01 14:04:29+00:00,United States of America,,,,,,,,,True
PaLM (540B),Language,Google Research,Industry,"Aakanksha Chowdhery, Sharan Narang, Jacob Devlin, Maarten Bosma, Gaurav Mishra, Adam Roberts, Paul Barham, Hyung Won Chung, Charles Sutton, Sebastian Gehrmann, Parker Schuh, Kensen Shi, Sasha Tsvyashchenko, Joshua Maynez, Abhishek Rao, Parker Barnes, Yi Tay, Noam Shazeer, Vinodkumar Prabhakaran, Emily Reif, Nan Du, Ben Hutchinson, Reiner Pope, James Bradbury, Jacob Austin, Michael Isard, Guy Gur-Ari, Pengcheng Yin, Toju Duke, Anselm Levskaya, Sanjay Ghemawat, Sunipa Dev,, Henryk Michalewski, Xavier Garcia, Vedant Misra, Kevin Robinson, Liam Fedus, Denny Zhou, Daphne Ippolito, David Luan, Hyeontaek Lim, Barret Zoph, Alexander Spiridonov, Ryan Sepassi, David Dohan, Shivani Agrawal, Mark Omernick, Andrew M. Dai, Thanumalayan Sankaranarayana Pillai, Marie Pellat, Aitor Lewkowycz, Erica Moreira, Rewon Child, Oleksandr Polozov, Katherine Lee, Zongwei Zhou, Xuezhi Wang, Brennan Saeta ,Mark Diaz, Orhan Firat, Michele Catasta, Jason Wei, Kathy Meier-Hellstern, Douglas Eck, Jeff Dean, Slav Petrov, Noah Fiedel",2022-04-04,PaLM: Scaling Language Modeling with Pathways,https://arxiv.org/abs/2204.02311,5064.0,"Highly cited,SOTA improvement,Training cost","Demonstrates continued benefits of scaling, as well as discontinuous improvements in performance",540350000000.0,"""To further our understanding of the impact of scale on few-shot learning, we trained a 540-billion parameter, densely activated, Transformer language model, which we call Pathways Language Model (PaLM).""",2.5272e+24,,,"See Table 20.

6144 TPUv4 for 1200 hours + 3072 TPUv4 for 336 hours.
Equivalent to 6144 TPUv4 for 1368 hours.

46.2% model FLOPs utilization

""The 540B-parameter PaLM model sustained a remarkable 57.8% of the peak hardware floating point performance over 50 days while training on TPU v4 supercomputers. "" https://cloud.google.com/blog/topics/systems/tpu-v4-enables-performance-energy-and-co2e-efficiency-gains","Wikipedia,GLaM dataset,LaMBDA dataset,GitHub",,585000000000.0,"""The PaLM pretraining dataset consists of a high-quality corpus of 780 billion tokens that represent a wide range of natural language use cases.""

1 token ~ 0.75 words",1.0,1536.0,"6144 TPUv4 for 1200 hours + 3072 TPUv4 for 336 hours.

Equivalent to 6144 TPUv4 for 1368 hours.",Google TPU v4,6144.0,Self-supervised learning,"Large language models have been shown to achieve remarkable performance across a variety of natural language tasks using few-shot learning, which drastically reduces the number of task-specific training examples needed to adapt the model to a particular application. To further our understanding of the impact of scale on few-shot learning, we trained a 540-billion parameter, densely activated, Transformer language model, which we call Pathways Language Model PaLM. We trained PaLM on 6144 TPU v4 chips using Pathways, a new ML system which enables highly efficient training across multiple TPU Pods. We demonstrate continued benefits of scaling by achieving state-of-the-art few-shot learning results on hundreds of language understanding and generation benchmarks. On a number of these tasks, PaLM 540B achieves breakthrough performance, outperforming the finetuned state-of-the-art on a suite of multi-step reasoning tasks, and outperforming average human performance on the recently released BIG-bench benchmark. A significant number of BIG-bench tasks showed discontinuous improvements from model scale, meaning that performance steeply increased as we scaled to our largest model. PaLM also has strong capabilities in multilingual tasks and source code generation, which we demonstrate on a wide array of benchmarks. We additionally provide a comprehensive analysis on bias and toxicity, and study the extent of training data memorization with respect to model scale. Finally, we discuss the ethical considerations related to large language models and discuss potential mitigation strategies.",,Unreleased,0.462,Confident,2025-02-17 19:55:40+00:00,"Multinational,United States of America",,,,,,,4000000.0,"""For the largest model, we use batch size 512 (1M tokens) until step 50k, then double it to 1024 (2M tokens) until step 115k, and finally double again it to 2048 (4M tokens) until training is complete at step 255k""",True
Monarch-GPT-2-Medium,Language,"Stanford University,University at Buffalo,University of Michigan","Academia,Academia,Academia","Tri Dao, Beidi Chen, Nimit Sohoni, Arjun Desai, Michael Poli, Jessica Grogan, Alexander Liu, Aniruddh Rao, Atri Rudra, Christopher Ré",2022-04-01,Monarch: Expressive Structured Matrices for Efficient and Accurate Training,https://arxiv.org/abs/2204.00595,71.0,,,165000000.0,table 2,4.36e+20,,,,WikiText-103,,,,110.0,,,,,,"Large neural networks excel in many domains, but they are expensive to train and fine-tune. A popular approach to reduce their compute or memory requirements is to replace dense weight matrices with structured ones (e.g., sparse, low-rank, Fourier transform). These methods have not seen widespread adoption (1) in end-to-end training due to unfavorable efficiency--quality tradeoffs, and (2) in dense-to-sparse fine-tuning due to lack of tractable algorithms to approximate a given dense weight matrix. To address these issues, we propose a class of matrices (Monarch) that is hardware-efficient (they are parameterized as products of two block-diagonal matrices for better hardware utilization) and expressive (they can represent many commonly used transforms). Surprisingly, the problem of approximating a dense weight matrix with a Monarch matrix, though nonconvex, has an analytical optimal solution. These properties of Monarch matrices unlock new ways to train and fine-tune sparse and dense models. We empirically validate that Monarch can achieve favorable accuracy-efficiency tradeoffs in several end-to-end sparse training applications: speeding up ViT and GPT-2 training on ImageNet classification and Wikitext-103 language modeling by 2x with comparable model quality, and reducing the error on PDE solving and MRI reconstruction tasks by 40%. In sparse-to-dense training, with a simple technique called ""reverse sparsification,"" Monarch matrices serve as a useful intermediate representation to speed up GPT-2 pretraining on OpenWebText by 2x without quality drop. The same technique brings 23% faster BERT pretraining than even the very optimized implementation from Nvidia that set the MLPerf 1.1 record. In dense-to-sparse fine-tuning, as a proof-of-concept, our Monarch approximation algorithm speeds up BERT fine-tuning on GLUE by 1.7x with comparable accuracy.",Monarch-GPT-2-Medium,Unreleased,,,2024-11-01 14:04:28+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
NoPos,Language,"Tel Aviv University,University of Washington,Intel Labs,Meta AI","Academia,Academia,Industry,Industry","Adi Haviv, Ori Ram, Ofir Press, Peter Izsak, Omer Levy",2022-03-30,Transformer Language Models without Positional Encodings Still Learn Positional Information,https://arxiv.org/abs/2203.16634,83.0,,,1300000000.0,,1.61e+20,,,,The Pile (NoPos subset),,,,199.92,,,,,,"Causal transformer language models (LMs), such as GPT-3, typically require some form of positional encoding, such as positional embeddings. However, we show that LMs without any explicit positional encoding are still competitive with standard models, and that this phenomenon is robust across different datasets, model sizes, and sequence lengths. Probing experiments reveal that such models acquire an implicit notion of absolute positions throughout the network, effectively compensating for the missing information. We conjecture that causal attention enables the model to infer the number of predecessors that each token can attend to, thereby approximating its absolute position. Our findings indicate that causal LMs might derive positional awareness not only from the explicit positioning mechanism, but also from the effects of the causal mask.",NoPos,Unreleased,,,2024-11-01 14:04:28+00:00,"Israel,United States of America,Multinational,United States of America,United States of America",,,,,,,256000.0,Table 5,
Chinchilla,Language,DeepMind,Industry,"Jordan Hoffmann, Sebastian Borgeaud, Arthur Mensch, Elena Buchatskaya, Trevor Cai, Eliza Rutherford, Diego de Las Casas, Lisa Anne Hendricks, Johannes Welbl, Aidan Clark, Tom Hennigan, Eric Noland, Katie Millican, George van den Driessche, Bogdan Damoc, Aurelia Guy, Simon Osindero, Karen Simonyan, Erich Elsen, Jack W. Rae, Oriol Vinyals, Laurent Sifre",2022-03-29,Training Compute-Optimal Large Language Models,https://arxiv.org/abs/2203.15556,1486.0,SOTA improvement,"Proposes new scaling law, with good empirical results",70000000000.0,"""We test this hypothesis by training a predicted compute-optimal model, \chinchilla, that uses the same compute budget as \gopher but with 70B parameters and 4× more more data. \chinchilla uniformly and significantly outperforms \Gopher (280B), GPT-3 (175B), Jurassic-1 (178B), and Megatron-Turing NLG (530B) on a large range of downstream evaluation tasks.""",5.76e+23,,,"""Both Chinchilla and Gopher have been trained for the same number of FLOPs but differ in the size of the model and the number of training tokens.""

We see the number of flops in table 3","MassiveWeb,C4","MassiveWeb, Books, C4, News, Github, Wikipedia (Table A1)",1050000000000.0,"Table 1 shows Chinchilla was training on 1.4 trillion tokens

1 token ~ 0.75 words",1.0,,,"Google TPU v4,Google TPU v3",,Self-supervised learning,"We investigate the optimal model size and number of tokens for training a transformer language model under a given compute budget. We find that current large language models are significantly undertrained, a consequence of the recent focus on scaling language models whilst keeping the amount of training data constant. By training over \nummodels language models ranging from 70 million to over 16 billion parameters on 5 to 500 billion tokens, we find that for compute-optimal training, the model size and the number of training tokens should be scaled equally: for every doubling of model size the number of training tokens should also be doubled. We test this hypothesis by training a predicted compute-optimal model, \chinchilla, that uses the same compute budget as \gopher but with 70B parameters and 4× more more data. \chinchilla uniformly and significantly outperforms \Gopher (280B), GPT-3 (175B), Jurassic-1 (178B), and Megatron-Turing NLG (530B) on a large range of downstream evaluation tasks. This also means that \chinchilla uses substantially less compute for fine-tuning and inference, greatly facilitating downstream usage. As a highlight, \chinchilla reaches a state-of-the-art average accuracy of 67.5\% on the MMLU benchmark, greater than a 7\% improvement over \gopher.",Chinchilla,Unreleased,,Confident,2025-02-17 16:06:49+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,3000000.0,"Table 1. ""1.5M → 3M""",True
BaGuaLu,"Multimodal,Language,Vision","Tsinghua University,Zhejiang Lab,Beijing Academy of Artificial Intelligence / BAAI,Alibaba","Academia,Academia,Industry","Zixuan Ma, Jiaao He, Jiezhong Qiu, Huanqi Cao, Yuanwei Wang, Zhenbo Sun, Liyan Zheng, Haojie Wang, Shizhi Tang, Tianyu Zheng, Junyang Lin, Guanyu Feng, Zeqiang Huang, Jie Gao, Aohan Zeng, Jianwei Zhang, Runxin Zhong, Tianhui Shi, Sha Liu, Weimin Zheng, Jie Tang, Hongxia Yang, Xin Liu, Jidong Zhai, Wenguang Chen",2022-03-28,BaGuaLu: Targeting Brain Scale Pretrained Models with over 37 Million Cores,https://dl.acm.org/doi/abs/10.1145/3503221.3508417,37.0,,,173900000000000.0,"Table 3, MoDa-174T has 173.9 trillion parameters",,,,"The 174T parameter system was not trained, the paper simply demonstrated they were able to train it for a few iterations.

Calculations below give some rough estimates of FLOP for full training.

From Table 5, sustained performance was 230 PFLOPS. Assuming they ran a 2-month training run, C=230e12*60**2*24*8=1.6e20 FLOP.

Using C=6ND with D=17.5B tokens and N=173.9T parameters, we get C=1.83e+25 FLOP. However, it's an MoE with 96e3 experts.

If we assume that scaling was perfect, then C=1.8e25/93e3=1.9e20 FLOP.

If we assume that they got similar utilisation to the Switch transformer, i.e. 0.10% of params active at a time, then C=1.8e25 * 0.001=1.8e22 FLOP.",M6-Corpus,"""The data are collected from different sources, including encyclopedias, ecommerce platforms, and other crawled web pages. The detailed statistics of the final processed dataset are reported in Table 4, where ""#Img"" refers to the number of distinct images, ""#Tok"" to the number of distinct tokens... after
the images transformed to features, the final product was a dataset of size 16 TB.""",13200000000.0,"17.5B tokens (in English, this is approximately 13.1B words, but the conversion may be different in Chinese) and 60.5M images.",,,,,,Self-supervised learning,"Large-scale pretrained AI models have shown state-of-the-art accuracy in a series of important applications. As the size of pretrained AI models grows dramatically each year in an effort to achieve higher accuracy, training such models requires massive computing and memory capabilities, which accelerates the convergence of AI and HPC. However, there are still gaps in deploying AI applications on HPC systems, which need application and system co-design based on specific hardware features.

To this end, this paper proposes BaGuaLu1, the first work targeting training brain scale models on an entire exascale supercomputer, the New Generation Sunway Supercomputer. By combining hardware-specific intra-node optimization and hybrid parallel strategies, BaGuaLu enables decent performance and scalability on unprecedentedly large models. The evaluation shows that BaGuaLu can train 14.5-trillion-parameter models with a performance of over 1 EFLOPS using mixed-precision and has the capability to train 174-trillion-parameter models, which rivals the number of synapses in a human brain.",,,,,2024-11-01 14:04:29+00:00,"China,China,China,China",,,,,,,,,
GraSR,Biology,"Shanghai Jiao Tong University,Ministry of Education of China","Academia,Government","Chunqiu Xia, Shi-Hao Feng, Ying Xia, Xiaoyong Pan, Hong-Bin Shen",2022-03-24,Fast protein structure comparison through effective representation learning with contrastive graph neural networks,https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1009986,25.0,,,,,3.8e+18,,,"1. Hardware setup: 2x TITAN Xp GPUs (1.10×10¹³ FLOP/s each)
2. Training duration: Estimated 5 days (432,000 seconds) based on ""several days"" mention
3. Utilization rate: 40%
4. Calculation: 2 GPUs × 1.10×10¹³ FLOP/s × 432,000s × 0.40 = 3.8×10¹⁸ FLOPs",,,263000.99999999977,"SCOPe v2.07 Dataset:
Total PDB Entries: 87,224
Total Domains: 276,231

Training Set Size = Total Domains - Cross-Validation Domains
Training Set Size = 276,231 - 13,265 = 262,966 domains",,,,,,,"Protein structure alignment algorithms are often time-consuming, resulting in challenges for large-scale protein structure similarity-based retrieval. There is an urgent need for more efficient structure comparison approaches as the number of protein structures increases rapidly. In this paper, we propose an effective graph-based protein structure representation learning method, GraSR, for fast and accurate structure comparison. In GraSR, a graph is constructed based on the intra-residue distance derived from the tertiary structure. Then, deep graph neural networks (GNNs) with a short-cut connection learn graph representations of the tertiary structures under a contrastive learning framework. To further improve GraSR, a novel dynamic training data partition strategy and length-scaling cosine distance are introduced. We objectively evaluate our method GraSR on SCOPe v2.07 and a new released independent test set from PDB database with a designed comprehensive performance metric. Compared with other state-of-the-art methods, GraSR achieves about 7%-10% improvement on two benchmark datasets. GraSR is also much faster than alignment-based methods. We dig into the model and observe that the superiority of GraSR is mainly brought by the learned discriminative residue-level and global descriptors. The web-server and source code of GraSR are freely available at www.csbio.sjtu.edu.cn/bioinf/GraSR/ for academic use.",,,,Unverified,2025-02-17 16:06:53+00:00,"China,China",,,,,,,,,
MemSizer (language modeling),Language,"Meta AI,Chinese University of Hong Kong (CUHK)","Industry,Academia","Yizhe Zhang, Deng Cai",2022-03-23,Linearizing Transformer with Key-Value Memory,https://arxiv.org/abs/2203.12644,6.0,,,357000000.0,,7.3e+18,,,,WikiText-103,,103000000.0,,,,,,,,"Efficient transformer variants with linear time complexity have been developed to mitigate the quadratic computational overhead of the vanilla transformer. Among them are low-rank projection methods such as Linformer and kernel-based Transformers. Despite their unique merits, they usually suffer from a performance drop comparing with the vanilla transformer on many sequence generation tasks, and often fail to obtain computation gain when the generation is short. We propose MemSizer, an approach towards closing the performance gap while improving the efficiency even with short generation. It projects the source sequences into lower dimension representations like Linformer, while enjoying efficient recurrent-style incremental computation similar to kernel-based transformers. This yields linear computation time and constant memory complexity at inference time. MemSizer also employs a lightweight multi-head mechanism which renders the computation as light as a single-head model. We demonstrate that MemSizer provides an improved balance between efficiency and accuracy over the vanilla transformer and other efficient transformer variants in three typical sequence generation tasks, including machine translation, abstractive text summarization, and language modeling.",MemSizer,Unreleased,,,2024-11-01 14:04:29+00:00,"United States of America,Hong Kong,China",,,,,,MemSizer,,,
"Segatron-XL large, M=384 + HCP",Language,"Microsoft Research,University of Waterloo","Industry,Academia","He Bai, Tong Wang, Alessandro Sordoni, Peng Shi",2022-03-21,Better Language Model with Hypernym Class Prediction,https://arxiv.org/abs/2203.10692,14.0,SOTA improvement,"""Empirically, this curriculum learning strategy consistently improves perplexity over various large, highly-performant state-of-the-art Transformer-based models on two datasets, WikiText-103 and ARXIV""",257000000.0,,2.65e+19,,,,,,,,167.02,,,,,,"Class-based language models (LMs) have been long devised to address context sparsity in n-gram LMs. In this study, we revisit this approach in the context of neural LMs. We hypothesize that class-based prediction leads to an implicit context aggregation for similar words and thus can improve generalization for rare words. We map words that have a common WordNet hypernym to the same class and train large neural LMs by gradually annealing from predicting the class to token prediction during training. Empirically, this curriculum learning strategy consistently improves perplexity over various large, highly-performant state-of-the-art Transformer-based models on two datasets, WikiText-103 and Arxiv. Our analysis shows that the performance improvement is achieved without sacrificing performance on rare words. Finally, we document other attempts that failed to yield empirical gains, and discuss future directions for the adoption of class-based LMs on a larger scale.","Segatron-XL large, M=384 + HCP",Unreleased,,,2024-11-01 14:04:09+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Canada",,,,,,,,,
Transformer Large + HCP,Language,"University of Waterloo,Microsoft Research","Academia,Industry","He Bai, Tong Wang, Alessandro Sordoni, Peng Shi",2022-03-21,Better Language Model with Hypernym Class Prediction,https://arxiv.org/abs/2203.10692,14.0,,other model in this paper has better performance,257000000.0,,6.06e+18,,,,WikiText-103,,,,38.18,,,,,,"Class-based language models (LMs) have been long devised to address context sparsity in n-gram LMs. In this study, we revisit this approach in the context of neural LMs. We hypothesize that class-based prediction leads to an implicit context aggregation for similar words and thus can improve generalization for rare words. We map words that have a common WordNet hypernym to the same class and train large neural LMs by gradually annealing from predicting the class to token prediction during training. Empirically, this curriculum learning strategy consistently improves perplexity over various large, highly-performant state-of-the-art Transformer-based models on two datasets, WikiText-103 and Arxiv. Our analysis shows that the performance improvement is achieved without sacrificing performance on rare words. Finally, we document other attempts that failed to yield empirical gains, and discuss future directions for the adoption of class-based LMs on a larger scale.",Transformer Large + HCP,Unreleased,,,2024-11-01 14:04:08+00:00,"Canada,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
ViT-G (model soup),Vision,"University of Washington,Columbia University,Google,Meta AI,Tel Aviv University","Academia,Academia,Industry,Industry,Academia","Mitchell Wortsman, Gabriel Ilharco, Samir Yitzhak Gadre, Rebecca Roelofs, Raphael Gontijo-Lopes, Ari S. Morcos, Hongseok Namkoong, Ali Farhadi, Yair Carmon, Simon Kornblith, Ludwig Schmidt",2022-03-10,Model soups: averaging weights of multiple fine-tuned models improves accuracy without increasing inference time,https://arxiv.org/abs/2203.05482v3,703.0,SOTA improvement,"""When fine-tuning large pre-trained models such as CLIP, ALIGN, and a ViT-G pre-trained on JFT, our soup recipe provides significant improvements over the best model in a hyperparameter sweep on ImageNet. The resulting ViT-G model, which attains 90.94% top-1 accuracy on ImageNet, achieved a new state of the art.""",1843000000.0,This is from the original ViT-G paper,3.4e+21,,,"This is a fine-tuned version of ViT-G, which required 3.4e21 to train per PCD/Akronomicon.

Fine-tuning compute is likely minor in comparision:
""Models are fine-tuned at a batch size of 512 for either 10,000 or 20,000 steps (approximately 4 or 8 epochs)... all models are fine-tuned at 518 × 518 resolution""
At 20k steps, we have (518^2) * 512 * 20k = 2.75e12 pixels seen in fine-tuning, compared to (224^2) * 32768 * 5M = 8.22e15 in pre-training.",,,,,8.0,,,,,,"The conventional recipe for maximizing model accuracy is to (1) train multiple models with various hyperparameters and (2) pick the individual model which performs best on a held-out validation set, discarding the remainder. In this paper, we revisit the second step of this procedure in the context of fine-tuning large pre-trained models, where fine-tuned models often appear to lie in a single low error basin. We show that averaging the weights of multiple models fine-tuned with different hyperparameter configurations often improves accuracy and robustness. Unlike a conventional ensemble, we may average many models without incurring any additional inference or memory costs -- we call the results ""model soups."" When fine-tuning large pre-trained models such as CLIP, ALIGN, and a ViT-G pre-trained on JFT, our soup recipe provides significant improvements over the best model in a hyperparameter sweep on ImageNet. The resulting ViT-G model, which attains 90.94% top-1 accuracy on ImageNet, achieved a new state of the art. Furthermore, we show that the model soup approach extends to multiple image classification and natural language processing tasks, improves out-of-distribution performance, and improves zero-shot performance on new downstream tasks. Finally, we analytically relate the performance similarity of weight-averaging and logit-ensembling to flatness of the loss and confidence of the predictions, and validate this relation empirically. Code is available at this https URL.",,Open weights (non-commercial),,Confident,2025-02-19 17:57:58+00:00,"United States of America,United States of America,United States of America,United States of America,Israel",,,,,,,,,
GPT3-6.7B + muP,Language,"Microsoft,OpenAI","Industry,Industry","Greg Yang, Edward J. Hu, Igor Babuschkin, Szymon Sidor, Xiaodong Liu, David Farhi, Nick Ryder, Jakub Pachocki, Weizhu Chen, Jianfeng Gao",2022-03-07,Tensor Programs V: Tuning Large Neural Networks via Zero-Shot Hyperparameter Transfer,https://arxiv.org/abs/2203.03466,120.0,,,6700000000.0,,1.28e+22,,,,,Figure 15,300000000000.0,,1.0,,,,,,"Hyperparameter (HP) tuning in deep learning is an expensive process, prohibitively so for neural networks (NNs) with billions of parameters. We show that, in the recently discovered Maximal Update Parametrization (muP), many optimal HPs remain stable even as model size changes. This leads to a new HP tuning paradigm we call muTransfer: parametrize the target model in muP, tune the HP indirectly on a smaller model, and zero-shot transfer them to the full-sized model, i.e., without directly tuning the latter at all. We verify muTransfer on Transformer and ResNet. For example, 1) by transferring pretraining HPs from a model of 13M parameters, we outperform published numbers of BERT-large (350M parameters), with a total tuning cost equivalent to pretraining BERT-large once; 2) by transferring from 40M parameters, we outperform published numbers of the 6.7B GPT-3 model, with tuning cost only 7% of total pretraining cost. A Pytorch implementation of our technique can be found at this http URL and installable via `pip install mup`.",GPT3-6.7B + muP,Unreleased,,,2024-11-01 14:03:33+00:00,"United States of America,United States of America",,,,,,GPT3-6.7B + muP,,,
MegaSyn,Medicine,Collaborations Pharmaceuticals,Industry,"Fabio Urbina, Filippa Lentzos, Cédric Invernizzi, Sean Ekins",2022-03-07,Dual Use of Artificial Intelligence-powered Drug Discovery,https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9544280/,148.0,Historical significance,"Notable example of an AI model having a potential dual use for bio/chemical weapons:

""To narrow the universe of molecules we chose to drive the generative model towards compounds like the nerve agent VX, one of the most toxic chemical warfare agents developed during the 20th century—a few salt-sized grains of VX, (6–10 mg)5, is sufficient to kill a person. Nerve agents such as Novichoks have also been in the headlines recently6.

In less than 6 hours after starting on our in-house server, our model generated forty thousand molecules that scored within our desired threshold. In the process, the AI designed not only VX, but many other known chemical warfare agents that we identified through visual confirmation with structures in public chemistry databases. Many new molecules were also designed that looked equally plausible. These new molecules were predicted to be more toxic based on the predicted LD50 in comparison to publicly known chemical warfare agents (Figure 1). This was unexpected as the datasets we used for training the AI did not include these nerve agents. The virtual molecules even occupied a region of molecular property space that was entirely separate to the many thousands of molecules in the organism-specific LD50 model, which is mainly made up of pesticides, environmental toxins, and drugs (Figure 1). By inverting the use of our machine learning models, we had transformed our innocuous generative model from a helpful tool of medicine to a generator of likely deadly molecules.""",,"model details here: https://chemrxiv.org/engage/chemrxiv/article-details/61551803d1fc335b7cf8fd45

""The variational autoencoder utilizes an encoder-decoder architecture to map chemical space into a latent vector 34. The encoder is composed of 3 LSTM layers of 512 units each followed by a linear layer of 64 units (the latent space).
Our decoder is comprised of 3 LSTM layers of 512 units each with dropout of 0.2 between
all layers""",,,,,ChEMBL,"https://chemrxiv.org/engage/chemrxiv/article-details/61551803d1fc335b7cf8fd45

""The initial model is trained on ChEMBL 28’s ~2 million compounds""",,,,,,,,,An international security conference explored how artificial intelligence (AI) technologies for drug discovery could be misused for de novo design of biochemical weapons. A thought experiment evolved into a computational proof.,,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
RQ-Transformer (3.8B params ImageNet dataset),"Vision,Image generation","Kakao,POSTECH","Industry,Academia","Doyup Lee, Chiheon Kim, Saehoon Kim, Minsu Cho, Wook-Shin Han",2022-03-03,Autoregressive Image Generation using Residual Quantization,https://arxiv.org/abs/2203.01941,189.0,,,3822000000.0,3822M from Table 5 - ImageNet rows,2.9113344e+20,,,"""We use eight NVIDIA A100 GPUs to train RQ-Transformer of 1.4B parameters, and four GPUs to train RQ-Transformers of other sizes. The training time is <9 days for LSUN-cat, LSUN-bedroom, <4.5 days for ImageNet, and CC-3M, and <1 day for LSUN-church and FFHQ. ""

Taken literally, suggests 3.8B model used fewer GPUs than 1.4B. This seems likely to be a typo, so I assume details are meant to be given for largest model (3.8B).

(8) * (3.12e14) * (4.5 * 24 * 3600) * (0.3) = 2.911e20
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)",ImageNet,"Table 5 
",1200000.0,size of ImageNet,50.0,108.0,"States 4.5 days for ImageNet for 1.4B model, but this is probably a typo. I expect these details were given for the largest model.

""We use eight NVIDIA A100 GPUs to train RQ-Transformer of 1.4B parameters, and four GPUs to trainRQ-Transformers of other sizes. The training time is <9 days for LSUN-cat, LSUN-bedroom, <4.5 days for ImageNet, and CC-3M, and <1 day for LSUN-church and FFHQ. """,NVIDIA A100,4.0,,"For autoregressive (AR) modeling of high-resolution images, vector quantization (VQ) represents an image as a sequence of discrete codes. A short sequence length is important for an AR model to reduce its computational costs to consider long-range interactions of codes. However, we postulate that previous VQ cannot shorten the code sequence and generate high-fidelity images together in terms of the rate-distortion trade-off. In this study, we propose the two-stage framework, which consists of Residual-Quantized VAE (RQ-VAE) and RQ-Transformer, to effectively generate high-resolution images. Given a fixed codebook size, RQ-VAE can precisely approximate a feature map of an image and represent the image as a stacked map of discrete codes. Then, RQ-Transformer learns to predict the quantized feature vector at the next position by predicting the next stack of codes. Thanks to the precise approximation of RQ-VAE, we can represent a 256×256 image as 8×8 resolution of the feature map, and RQ-Transformer can efficiently reduce the computational costs. Consequently, our framework outperforms the existing AR models on various benchmarks of unconditional and conditional image generation. Our approach also has a significantly faster sampling speed than previous AR models to generate high-quality images. ",,,,Likely,2025-02-17 16:09:28+00:00,"Korea (Republic of),Korea (Republic of)",,,,,,,,,
Statement Curriculum Learning,"Language,Mathematics",OpenAI,Industry,"Stanislas Polu, Jesse Michael Han, Kunhao Zheng, Mantas Baksys, Igor Babuschkin, Ilya Sutskever ",2022-03-02,Formal Mathematics Statement Curriculum Learning,https://arxiv.org/abs/2202.01344,92.0,SOTA improvement,"""by applying this expert iteration to a manually curated set
of problem statements, we achieve state-of-the-art on the miniF2F benchmark, automatically solving
multiple challenging problems drawn from high school olympiads.""",774000000.0,,,,,Probably below 1e23 FLOP given the small model size.,"Common Crawl,WebMath","300 billion tokens from Common Crawl
72 billion tokens (220 GB) of code from WebMath
25000 theorems from mathlib
327 math problems from competitions and textbooks

The model was also trained on its own self-generated proofs",275000000000.0,"Table on p12 gives WebMath dataset size in GB of code. Uncompressed code probably has a similar number of tokens per gigabyte as natural language text, on the order of 3e8 tokens per GB.",,,,,,,"We explore the use of expert iteration in the context of language modeling applied to formal mathematics. We show that at same compute budget, expert iteration, by which we mean proof search interleaved with learning, dramatically outperforms proof search only. We also observe that when applied to a collection of formal statements of sufficiently varied difficulty, expert iteration is capable of finding and solving a curriculum of increasingly difficult problems, without the need for associated ground-truth proofs. Finally, by applying this expert iteration to a manually curated set of problem statements, we achieve state-of-the-art on the miniF2F benchmark, automatically solving multiple challenging problems drawn from high school olympiads.",,,,,2024-11-01 14:04:08+00:00,United States of America,,,,,,,,,
DeepNet,Language,Microsoft Research,Industry,"Hongyu Wang, Shuming Ma, Li Dong, Shaohan Huang, Dongdong Zhang, Furu Wei",2022-03-01,"DeepNet: Scaling Transformers to 1,000 Layers",https://arxiv.org/abs/2203.00555,126.0,SOTA improvement,"""Remarkably, on a multilingual benchmark with 7,482 translation directions, our 200-layer model with 3.2B parameters significantly outperforms the 48-layer state-of-the-art model with 12B parameters by 5 BLEU points""",3200000000.0,"""Remarkably, on a multilingual benchmark with 7,482 translation directions, our 200-layer model with 3.2B parameters significantly outperforms the 48-layer state-of-the-art model with 12B parameters by 5 BLEU points, which indicates a promising scaling direction""

EDIT 05/05/2022: The 12B model was presented in an earlier paper. This paper presents a 3.2B model",,,,"They show results on par with the original Transformer, so probably less than 2.3e19 FLOP.","CCMatrix,OPUS",,12000000000.0,""" The final data consists of 102 languages, 1932 directions, and
12B sentence pairs.""",,,,,,,"In this paper, we propose a simple yet effective method to stabilize extremely deep Transformers. Specifically, we introduce a new normalization function (DeepNorm) to modify the residual connection in Transformer, accompanying with theoretically derived initialization. In-depth theoretical analysis shows that model updates can be bounded in a stable way. The proposed method combines the best of two worlds, i.e., good performance of Post-LN and stable training of Pre-LN, making DeepNorm a preferred alternative. We successfully scale Transformers up to 1,000 layers (i.e., 2,500 attention and feed-forward network sublayers) without difficulty, which is one order of magnitude deeper than previous deep Transformers. Remarkably, on a multilingual benchmark with 7,482 translation directions, our 200-layer model with 3.2B parameters significantly outperforms the 48-layer state-of-the-art model with 12B parameters by 5 BLEU points, which indicates a promising scaling direction.",,,,,2024-11-01 14:04:08+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
PolyCoder,Language,Carnegie Mellon University (CMU),Academia,"Frank F. Xu, Uri Alon, Graham Neubig, Vincent J. Hellendoorn",2022-02-26,A Systematic Evaluation of Large Language Models of Code,https://arxiv.org/abs/2202.13169,510.0,SOTA improvement,"""In the C programming language, PolyCoder outperforms
all models including Codex""",2700000000.0,2.7B for largest model,1.1e+21,,,"""We use GPT-NeoX toolkit 11 to
train the model efficiently in parallel with 8 Nvidia RTX 8000 GPUs on a single machine. The wall
time used to train the largest 2.7B model is about 6 weeks""

8 * 130 TFLOP/s * 6 * 7 * 24 * 3600 * 0.3 (utilization) ~= 1.1e21",,"Code scraped from GitHub. ""249GB of code across 12 programming languages on a single machine.""",,"249GB

They trained on 39B tokens per Table 3, but I'm not sure how many epochs that is. May be <1. ",,1000.0,6 weeks,NVIDIA Quadro RTX 8000,,,"Large language models (LMs) of code have recently shown tremendous promise in completing code and synthesizing code from natural language descriptions. However, the current state-of-the-art code LMs (e.g., Codex (Chen et al., 2021)) are not publicly available, leaving many questions about their model and data design decisions. We aim to fill in some of these blanks through a systematic evaluation of the largest existing models: Codex, GPT-J, GPT-Neo, GPT-NeoX-20B, and CodeParrot, across various programming languages. Although Codex itself is not open-source, we find that existing open-source models do achieve close results in some programming languages, although targeted mainly for natural language modeling. We further identify an important missing piece in the form of a large open-source model trained exclusively on a multi-lingual corpus of code. We release a new model, PolyCoder, with 2.7B parameters based on the GPT-2 architecture, which was trained on 249GB of code across 12 programming languages on a single machine. In the C programming language, PolyCoder outperforms all models including Codex. Our trained models are open-source and publicly available at this https URL, which enables future research and application in this area.",,,,Likely,2025-02-17 16:09:47+00:00,United States of America,,,,,,,,,True
ST-MoE,Language,"Google,Google Brain,Google Research","Industry,Industry,Industry","Barret Zoph, Irwan Bello, Sameer Kumar, Nan Du, Yanping Huang, Jeff Dean, Noam Shazeer, William Fedus",2022-02-17,ST-MoE: Designing Stable and Transferable Sparse Expert Models,https://arxiv.org/abs/2202.08906v2,117.0,SOTA improvement,"""ST-MoE-32B improves the current state-of-the-art on the test server submissions for both ARC Easy (92.7 → 94.8) and ARC Challenge (81.4 → 86.5).""",269000000000.0,269B. it's called ST-MoE-32B because it's equivalent to a 32B dense model.,2.9e+23,,,"The paper claims ""scaling a sparse model to 269B parameters, with a computational cost comparable to a 32B dense encoder-decoder"". If this is true for training cost, then 6*32e9*1.5e12 = 2.9e23",C4,"""The pre-training dataset used to train our Sparse 32B model is a mix of C4 (Raffel et al., 2019) and the dataset introduced in GLaM (Du et al., 2021).""",1500000000000.0,"""We pre-train for 1.5T tokens on a mixture of English-only C4 dataset (Raffel et al., 2019) and the dataset from GLaM (Du et al., 2021) summarized in Appendix E""
",0.84,,,,,,"Scale has opened new frontiers in natural language processing -- but at a high cost. In response, Mixture-of-Experts (MoE) and Switch Transformers have been proposed as an energy efficient path to even larger and more capable language models. But advancing the state-of-the-art across a broad set of natural language tasks has been hindered by training instabilities and uncertain quality during fine-tuning. Our work focuses on these issues and acts as a design guide. We conclude by scaling a sparse model to 269B parameters, with a computational cost comparable to a 32B dense encoder-decoder Transformer (Stable and Transferable Mixture-of-Experts or ST-MoE-32B). For the first time, a sparse model achieves state-of-the-art performance in transfer learning, across a diverse set of tasks including reasoning (SuperGLUE, ARC Easy, ARC Challenge), summarization (XSum, CNN-DM), closed book question answering (WebQA, Natural Questions), and adversarially constructed tasks (Winogrande, ANLI R3).",,Unreleased,,Likely,2025-02-17 16:10:29+00:00,"United States of America,United States of America,Multinational,United States of America",,,,,,,1000000.0,""" We use 1M tokens per batch""",
Midjourney V1,Image generation,Midjourney,Industry,,2022-02-15,,,,"Significant use,Historical significance","Significant historical usage and controversy as one of the first generative AI art models. For example:
https://www.nytimes.com/2022/09/02/technology/ai-artificial-intelligence-artists.html",,,,,,,Unspecified unreleased,,,,,,,,,,,,Hosted access (no API),,Unknown,2025-01-06 18:27:58+00:00,United States of America,,,,,,,,,
MuZero VP9,Video,DeepMind,Industry,"Amol Mandhane, Anton Zhernov, Maribeth Rauh, Chenjie Gu, Miaosen Wang, Flora Xue, Wendy Shang, Derek Pang, Rene Claus, Ching-Han Chiang, Cheng Chen, Jingning Han, Angie Chen, Daniel J. Mankowitz, Jackson Broshear, Julian Schrittwieser, Thomas Hubert, Oriol Vinyals, Timothy Mann",2022-02-14,MuZero with Self-competition for Rate Control in VP9 Video Compression,https://arxiv.org/abs/2202.06626,38.0,,,,,,,,"Definitely < 1e23 FLOP: ""All experiments in this paper are run using Google Cloud TPUs [Google, 2018]. The learner processes use two 3rd generation TPUs, and the actor processes use four 2nd generation TPUs for 15 hours.""",,,,,,,,,,,"Video streaming usage has seen a significant rise as entertainment, education, and business increasingly rely on online video. Optimizing video compression has the potential to increase access and quality of content to users, and reduce energy use and costs overall. In this paper, we present an application of the MuZero algorithm to the challenge of video compression. Specifically, we target the problem of learning a rate control policy to select the quantization parameters (QP) in the encoding process of libvpx, an open source VP9 video compression library widely used by popular video-on-demand (VOD) services. We treat this as a sequential decision making problem to maximize the video quality with an episodic constraint imposed by the target bitrate. Notably, we introduce a novel self-competition based reward mechanism to solve constrained RL with variable constraint satisfaction difficulty, which is challenging for existing constrained RL methods. We demonstrate that the MuZero-based rate control achieves an average 6.28% reduction in size of the compressed videos for the same delivered video quality level (measured as PSNR BD-rate) compared to libvpx's two-pass VBR rate control policy, while having better constraint satisfaction behavior.",,,,Unknown,2024-11-01 14:04:09+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
LaMDA,Language,Google,Industry,"Romal Thoppilan, Daniel De Freitas, Jamie Hall, Noam Shazeer, Apoorv Kulshreshtha, Heng-Tze Cheng, Alicia Jin, Taylor Bos, Leslie Baker, Yu Du, YaGuang Li, Hongrae Lee, Huaixiu Steven Zheng, Amin Ghafouri, Marcelo Menegali, Yanping Huang, Maxim Krikun, Dmitry Lepikhin, James Qin, Dehao Chen, Yuanzhong Xu, Zhifeng Chen, Adam Roberts, Maarten Bosma, Yanqi Zhou, Chung-Ching Chang, Igor Krivokon, Will Rusch, Marc Pickett, Kathleen Meier-Hellstern, Meredith Ringel Morris, Tulsee Doshi, Renelito Delos Santos, Toju Duke, Johnny Soraker, Ben Zevenbergen, Vinodkumar Prabhakaran, Mark Diaz, Ben Hutchinson, Kristen Olson, Alejandra Molina, Erin Hoffman-John, Josh Lee, Lora Aroyo, Ravi Rajakumar, Alena Butryna, Matthew Lamm, Viktoriya Kuzmina, Joe Fenton, Aaron Cohen, Rachel Bernstein, Ray Kurzweil, Blaise Aguera-Arcas, Claire Cui, Marian Croak, Ed Chi, Quoc Le",2022-02-10,LaMDA: Language Models for Dialog Applications,https://arxiv.org/abs/2201.08239,1375.0,Historical significance,,137000000000.0,"""LaMDA is a family of Transformer-based neural language models specialized for dialog, which have up to 137B parameters""",3.55e+23,,,"""The total FLOPS is 56.5% * 123 TFLOPS/s * 1024 chips * 57.7 days
= 3.55E+23""
From https://arxiv.org/pdf/2201.08239.pdf p.18
",Infiniset,"LaMDA's underlying dataset is called 'Infiniset', and besides the dialogue also involves common crawl, wikipedia, a mixture of english and non-english web documents, and data from programming-related sites (so LaMDA models can also dabble in code).",1560000000000.0,"""and are pre-trained on 1.56T words of public dialog data and web text""",,1385.0,57.7 days * 24,Google TPU v3,1024.0,Self-supervised learning,"We present LaMDA: Language Models for Dialog Applications. LaMDA is a family of Transformer-based neural language models specialized for dialog, which have up to 137B parameters and are pre-trained on 1.56T words of public dialog data and web text. While model scaling alone can improve quality, it shows less improvements on safety and factual grounding. We demonstrate that fine-tuning with annotated data and enabling the model to consult external knowledge sources can lead to significant improvements towards the two key challenges of safety and factual grounding. The first challenge, safety, involves ensuring that the model's responses are consistent with a set of human values, such as preventing harmful suggestions and unfair bias. We quantify safety using a metric based on an illustrative set of human values, and we find that filtering candidate responses using a LaMDA classifier fine-tuned with a small amount of crowdworker-annotated data offers a promising approach to improving model safety. The second challenge, factual grounding, involves enabling the model to consult external knowledge sources, such as an information retrieval system, a language translator, and a calculator. We quantify factuality using a groundedness metric, and we find that our approach enables the model to generate responses grounded in known sources, rather than responses that merely sound plausible. Finally, we explore the use of LaMDA in the domains of education and content recommendations, and analyze their helpfulness and role consistency.",,Unreleased,0.565,Confident,2025-02-17 16:10:35+00:00,United States of America,,,,,,,256000.0,"""All models were trained with 256K tokens per batch""",True
ProteinBERT,Biology,"Hebrew University of Jerusalem,Ben-Gurion University of the Negev,Deep Trading","Academia,Academia,Industry","Nadav Brandes, Dan Ofer, Yam Peleg, Nadav Rappoport, Michal Linial",2022-02-10,ProteinBERT: a universal deep-learning model of protein sequence and function,https://academic.oup.com/bioinformatics/article/38/8/2102/6502274,386.0,SOTA improvement,"""ProteinBERT obtains near state-of-the-art performance, and sometimes exceeds it, on multiple benchmarks covering diverse protein properties (including protein structure, post-translational modifications and biophysical attributes)""",16000000.0,"""Altogether, it includes ∼16M trainable parameters, making it substantially smaller than other protein language models""",6.5e+19,,,"""Pretraining speed on a single GPU (Nvidia Quadro RTX 5000) was 280 protein records per second. We trained the model for 28 days over ∼670M records""

28 * 24 * 3600 * 89 TFLOP/s * 0.3 (assumed utilization) = 6.5e19
https://www.wolframalpha.com/input?i=28+days+*+89+TFLOP%2Fs+*+0.3",UniRef90,,32000000001.0,"Number of proteins: 106,000,000
Average protein length: 300 amino acids

Total unique tokens = 106,000,000 × 300 = 31,800,000,000 ≈ 3.2e10 tokens",6.4,672.0,28 days,NVIDIA Quadro RTX 5000,1.0,Self-supervised learning,"Self-supervised deep language modeling has shown unprecedented success across natural language tasks, and has recently been repurposed to biological sequences. However, existing models and pretraining methods are designed and optimized for text analysis. We introduce ProteinBERT, a deep language model specifically designed for proteins. Our pretraining scheme combines language modeling with a novel task of Gene Ontology (GO) annotation prediction. We introduce novel architectural elements that make the model highly efficient and flexible to long sequences. The architecture of ProteinBERT consists of both local and global representations, allowing end-to-end processing of these types of inputs and outputs. ProteinBERT obtains near state-of-the-art performance, and sometimes exceeds it, on multiple benchmarks covering diverse protein properties (including protein structure, post-translational modifications and biophysical attributes), despite using a far smaller and faster model than competing deep-learning methods. Overall, ProteinBERT provides an efficient framework for rapidly training protein predictors, even with limited labeled data.",,,,Confident,2025-02-17 16:10:40+00:00,"Israel,United States of America,United States of America",,,,,,,26008.0,"Supplementary materials: ""During pretraining we used batch sizes of 128, 64 or 32 for episodes of 128, 512 or 1,024 tokens, respectively"" Since they seem to be used in equal parts, taking geometric mean: ((128*128)*(64*512)*(32*1024))**(1/3) = 26,008",
GPT-NeoX-20B,Language,EleutherAI,Research collective,"Sid Black, Stella Biderman, Eric Hallahan, Quentin Anthony, Leo Gao, Laurence Golding, Horace He, Connor Leahy, Kyle McDonell, Jason Phang, Michael Pieler, USVSN Sai Prashanth, Shivanshu Purohit, Laria Reynolds, Jonathan Tow, Ben Wang, Samuel Weinbach",2022-02-09,GPT-NeoX-20B: An Open-Source Autoregressive Language Model,https://arxiv.org/abs/2204.06745,688.0,Historical significance,,20000000000.0,,9.31627008e+22,,,Trained for 3 months on 96 A100s (according to correspondence with author). Let's say 0.4 utilization rate.,The Pile,,341173367965.0,"""In aggregate, the Pile consists of over 825GiB of raw text data""

Figure 4",1.4,2160.0,"see other notes
",NVIDIA A100 SXM4 40 GB,96.0,Self-supervised learning,"We introduce GPT-NeoX-20B, a 20 billion parameter autoregressive language model trained on the Pile, whose weights will be made freely and openly available to the public through a permissive license. It is, to the best of our knowledge, the largest dense autoregressive model that has publicly available weights at the time of submission. In this work, we describe \model{}'s architecture and training and evaluate its performance on a range of language-understanding, mathematics, and knowledge-based tasks. We find that GPT-NeoX-20B is a particularly powerful few-shot reasoner and gains far more in performance when evaluated five-shot than similarly sized GPT-3 and FairSeq models. We open-source the training and evaluation code, as well as the model weights, at this https URL.",GPT-NeoX-20B,Open weights (unrestricted),,,2025-02-17 16:10:49+00:00,"Multinational,United States of America",,,,,,,3150000.0,"""we opt to use the same batch size as OpenAI’s 175B model–approximately 3.15M tokens, or 1538 contexts of 2048 tokens each, and train for a total of 150,000 steps""",
RETRO-7B,Language,DeepMind,Industry,"Sebastian Borgeaud, Arthur Mensch, Jordan Hoffmann, Trevor Cai, Eliza Rutherford, Katie Millican, George van den Driessche, Jean-Baptiste Lespiau, Bogdan Damoc, Aidan Clark, Diego de Las Casas, Aurelia Guy, Jacob Menick, Roman Ring, Tom Hennigan, Saffron Huang, Loren Maggiore, Chris Jones, Albin Cassirer, Andy Brock, Michela Paganini, Geoffrey Irving, Oriol Vinyals, Simon Osindero,Karen Simonyan, Jack W. Rae‡, Erich Elsen‡ and Laurent Sifre",2022-02-07,Improving language models by retrieving from trillions of tokens,https://arxiv.org/abs/2112.04426,817.0,SOTA improvement,"""Our largest model obtains state-of-the-art results on a range of downstream evaluation
datasets including Wikitext103""",7500000000.0,"""Retro provides a constant gain for models ranging from 150M to 7B parameters, and Retro can be improved at evaluation time by increasing the database size and the number of retrieved neighbours. """,1.68e+22,,,C=6ND = 6 * 7e9 * 400e9 = 1.7e22 ,WikiText-103,,419430400000.0,"""we train for 419,430,400,000 training tokens"" ~= 315B words.",,,,,,Self-supervised learning,"We enhance auto-regressive language models by conditioning on document chunks retrieved from a large corpus, based on local similarity with preceding tokens. With a 2 trillion token database, our Retrieval-Enhanced Transformer (RETRO) obtains comparable performance to GPT-3 and Jurassic-1 on the Pile, despite using 25× fewer parameters. After fine-tuning, RETRO performance translates to downstream knowledge-intensive tasks such as question answering. RETRO combines a frozen Bert retriever, a differentiable encoder and a chunked cross-attention mechanism to predict tokens based on an order of magnitude more data than what is typically consumed during training. We typically train RETRO from scratch, yet can also rapidly RETROfit pre-trained transformers with retrieval and still achieve good performance. Our work opens up new avenues for improving language models through explicit memory at unprecedented scale.",RETRO-7B,Unreleased,,,2025-02-17 16:10:45+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
AlphaCode,Language,DeepMind,Industry,"Yujia Li, David Choi, Junyoung Chung, Nate Kushman, Julian Schrittwieser, Rémi Leblond, Tom Eccles, James Keeling, Felix Gimeno, Agustin Dal Lago, Thomas Hubert, Peter Choy, Cyprien de Masson d'Autume, Igor Babuschkin, Xinyun Chen, Po-Sen Huang, Johannes Welbl, Sven Gowal, Alexey Cherepanov, James Molloy, Daniel J. Mankowitz, Esme Sutherland Robson, Pushmeet Kohli, Nando de Freitas, Koray Kavukcuoglu, Oriol Vinyals",2022-02-02,Competition-Level Code Generation with AlphaCode,https://arxiv.org/abs/2203.07814,1013.0,SOTA improvement,,41100000000.0,41.1B. Table 3,1.63944e+23,,,"Figure 7 (a) shows a maximum training compute budget of approx 23000 TPU-days per model.
23000 days * 24 h/day * 3600 sec/h * 2.75e14 FLOP/s * 0.3 utilization = 1.64e23 FLOP","CodeContests,Unspecified unreleased","Looks like evaluation data is released but not pretraining data:

""We use large transformer language models to generate code, pre-training them
on selected GitHub code and fine-tuning on our curated set of competitive programming problems...
A core part of developing our system was ensuring that submissions are rigorously evaluated and
that evaluation problems are truly unseen during training, so difficult problems cannot be solved
by copying from the training set. Towards this goal, we release a new training and evaluation
competitive programming dataset, CodeContests""",,Appendix part A has answers for pretraining.,,147.2,"Figure 7 (a) shows that the models were trained for around 23000 TPU-days. We know they trained on TPUv4s, and in appendix D.1 they say they have 3750 TPUv4 and TPUv4i. Assuming they trained only on the 3750 TPUv4s, that suggests 23000 / 3750 = 6.13 days, or 147.2 hours.",Google TPU v4,3750.0,Self-supervised learning,"Programming is a powerful and ubiquitous problem-solving tool. Developing systems that can assist programmers or even generate programs independently could make programming more productive and
accessible, yet so far incorporating innovations in AI has proven challenging. Recent large-scale language models have demonstrated an impressive ability to generate code, and are now able to complete
simple programming tasks. However, these models still perform poorly when evaluated on more complex, unseen problems that require problem-solving skills beyond simply translating instructions into
code. For example, competitive programming problems which require an understanding of algorithms
and complex natural language remain extremely challenging. To address this gap, we introduce AlphaCode, a system for code generation that can create novel solutions to these problems that require deeper
reasoning. In simulated evaluations on recent programming competitions on the Codeforces platform,
AlphaCode achieved on average a ranking of top 54.3% in competitions with more than 5,000 participants. We found that three key components were critical to achieve good and reliable performance:
(1) an extensive and clean competitive programming dataset for training and evaluation, (2) large and
efficient-to-sample transformer-based architectures, and (3) large-scale model sampling to explore the
search space, followed by filtering based on program behavior to a small set of submissions.
",,Unreleased,,,2025-02-13 20:36:38+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,4718592.0,"2304 token sequences, 2048 batch size. 2304 * 2048 = 4718592

trained on 967B tokens and 205k steps. 967B/205k = 4717073, so seems they didn't do warmup",True
DARK,Biology,University College London (UCL),Academia,"Lewis Moffat, Shaun M. Kandathil, David T. Jones",2022-01-28,Design in the DARK: Learning Deep Generative Models for De Novo Protein Design,https://www.biorxiv.org/content/10.1101/2022.01.27.478087v1.full,25.0,,,,"""DARK3, uses a Transformer decoder with 12 layers, 12 heads, and a feedforward dimension of 768.""",9.7e+18,,,"""Rounding up to the nearest day, if we were to re-perform DARK from nothing to having a trained DARK3 it would take 12 days when parallelized across ten V100 GPUS. Of that time, model training constitutes just over 3 days and only requires 1 GPU""

3 * 24 * 3600 * 125 teraFLOP/s * 0.3 (utilization) = 9.7e18",,"Iteratively trained by generating synthetic data: ""To build this tool we develop a framework, called DARK, that trains the underlying generative model on an iteratively expanding set of synthetic sequences""",50000000.99999997,"500,000 sequences × 100 amino acids = 50,000,000 data points",,,,NVIDIA V100,,Unsupervised,"The design of novel protein sequences is providing paths towards the development of novel therapeutics and materials. At the forefront is the challenging field of de novo protein design, which looks to design protein sequences unlike those found in nature using general design methodologies. In this work, we develop a tool for de novo design, based on a deep generative sequence model, that rapidly samples novel protein sequences with diverse and ordered structures. To build this tool we develop a framework, called DARK, that trains the underlying generative model on an iteratively expanding set of synthetic sequences. The resulting model generalizes where models trained on natural sequences struggle and greatly improves on the efficiency of comparable sampling-based approaches. We further show how it can generate high quality candidates for de novo design problems and aid in the development of further novel design methods, in all, providing another step, amongst others, towards truly automated and intelligent protein design.",,,,Speculative,2025-02-17 16:10:55+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
InstructGPT 175B,Language,OpenAI,Industry,"Long Ouyang, Pamela Mishkin, Jeff Wu, Xu Jiang, Diogo Almeida, Carroll L. Wainwright,John Schulman Amanda Askell, Fraser Kelton Peter Welinder, Luke Miller Maddie Simens Paul Christiano,Ryan Lowe,Chong Zhang Jacob Hilton, Sandhini Agarwal Katarina Slama Alex Ray, Jan Leike",2022-01-27,Training language models to follow instructions with human feedback,https://arxiv.org/pdf/2203.02155,9228.0,"Historical significance,Highly cited",,175000000000.0,"""We train three model sizes (1.3B, 6B, and 175B parameters)""",3.19181e+23,,,"""training our 175B PPO-ptx model requires 60 petaflops/s-days, compared to 3,640 petaflops/s-days for GPT-3 (Brown et al., 2020)""

60/3640 = +1.65% to base model compute

base model was reported 3.14e+23 FLOP

3.14e+23 * 1.0165 = 319181000000000000000000",,,374000033207.0,"Table 6 - describes **number of prompts**

26584 + 6623 = 33207

This is added to GPT-3 dataset size.",,,,,,Self-supervised learning,"Making language models bigger does not inherently make them better at following a user’s intent. For example, large language models can generate outputs that are untruthful, toxic, or simply not helpful to the user. In other words, these models are not aligned with their users. In this paper, we show an avenue for aligning language models with user intent on a wide range of tasks by fine-tuning with human feedback. Starting with a set of labeler-written prompts and prompts submitted through the OpenAI API, we collect a dataset of labeler demonstrations of the desired model behavior, which we use to fine-tune GPT-3 using supervised learning. We then collect a dataset of rankings of model outputs, which we use to further fine-tune this supervised model using reinforcement learning from human feedback (RLHF). We call the resulting models InstructGPT. In human evaluations on our prompt distribution, outputs from the 1.3B parameter InstructGPT model are preferred to outputs from the 175B GPT-3, despite having 100x fewer parameters. Moreover, InstructGPT models show improvements in truthfulness and reductions in toxic output generation while having minimal performance regressions on public NLP datasets. Even though InstructGPT still makes simple mistakes, our results show that fine-tuning with human feedback is a promising direction for aligning language models with human intent.",,,,Confident,2024-12-30 19:52:37+00:00,United States of America,GPT-3 175B (davinci),5.181e+21,,,,,,,True
InstructGPT 6B,Language,OpenAI,Industry,"Long Ouyang, Pamela Mishkin, Jeff Wu, Xu Jiang, Diogo Almeida, Carroll L. Wainwright,John Schulman Amanda Askell, Fraser Kelton Peter Welinder, Luke Miller Maddie Simens Paul Christiano,Ryan Lowe,Chong Zhang Jacob Hilton, Sandhini Agarwal Katarina Slama Alex Ray, Jan Leike",2022-01-27,Training language models to follow instructions with human feedback,https://arxiv.org/pdf/2203.02155,9228.0,"Historical significance,Highly cited",,6000000000.0,"""We train three model sizes (1.3B, 6B, and 175B parameters)""",,,,,,,,,,,,,,Self-supervised learning,"Making language models bigger does not inherently make them better at following a user’s intent. For example, large language models can generate outputs that are untruthful, toxic, or simply not helpful to the user. In other words, these models are not aligned with their users. In this paper, we show an avenue for aligning language models with user intent on a wide range of tasks by fine-tuning with human feedback. Starting with a set of labeler-written prompts and prompts submitted through the OpenAI API, we collect a dataset of labeler demonstrations of the desired model behavior, which we use to fine-tune GPT-3 using supervised learning. We then collect a dataset of rankings of model outputs, which we use to further fine-tune this supervised model using reinforcement learning from human feedback (RLHF). We call the resulting models InstructGPT. In human evaluations on our prompt distribution, outputs from the 1.3B parameter InstructGPT model are preferred to outputs from the 175B GPT-3, despite having 100x fewer parameters. Moreover, InstructGPT models show improvements in truthfulness and reductions in toxic output generation while having minimal performance regressions on public NLP datasets. Even though InstructGPT still makes simple mistakes, our results show that fine-tuning with human feedback is a promising direction for aligning language models with human intent.",,,,Confident,2024-12-30 19:43:33+00:00,United States of America,GPT-3 6.7B,,,,,,,,True
InstructGPT 1.3B,Language,OpenAI,Industry,"Long Ouyang, Pamela Mishkin, Jeff Wu, Xu Jiang, Diogo Almeida, Carroll L. Wainwright,John Schulman Amanda Askell, Fraser Kelton Peter Welinder, Luke Miller Maddie Simens Paul Christiano,Ryan Lowe,Chong Zhang Jacob Hilton, Sandhini Agarwal Katarina Slama Alex Ray, Jan Leike",2022-01-27,Training language models to follow instructions with human feedback,https://arxiv.org/pdf/2203.02155,9228.0,"Historical significance,Highly cited",,1300000000.0,"""We train three model sizes (1.3B, 6B, and 175B parameters)""",,,,,,,,,,,,,,Self-supervised learning,"Making language models bigger does not inherently make them better at following a user’s intent. For example, large language models can generate outputs that are untruthful, toxic, or simply not helpful to the user. In other words, these models are not aligned with their users. In this paper, we show an avenue for aligning language models with user intent on a wide range of tasks by fine-tuning with human feedback. Starting with a set of labeler-written prompts and prompts submitted through the OpenAI API, we collect a dataset of labeler demonstrations of the desired model behavior, which we use to fine-tune GPT-3 using supervised learning. We then collect a dataset of rankings of model outputs, which we use to further fine-tune this supervised model using reinforcement learning from human feedback (RLHF). We call the resulting models InstructGPT. In human evaluations on our prompt distribution, outputs from the 1.3B parameter InstructGPT model are preferred to outputs from the 175B GPT-3, despite having 100x fewer parameters. Moreover, InstructGPT models show improvements in truthfulness and reductions in toxic output generation while having minimal performance regressions on public NLP datasets. Even though InstructGPT still makes simple mistakes, our results show that fine-tuning with human feedback is a promising direction for aligning language models with human intent.",,,,Confident,2024-12-30 19:54:32+00:00,United States of America,GPT-3 XL,,,,,,,,True
Primer,Language,Google Brain,Industry,"DavidR.So, WojciechMan ́ke, HanxiaoLiu, ZihangDai, NoamShazeer, QuocV.Le",2022-01-24,Primer: Searching for Efficient Transformers for Language Modeling,https://arxiv.org/abs/2109.08668,131.0,,,1900000000.0,"""For instance, in a 1.9B parameter configuration similar to GPT-3 XL, Primer uses 1/3 of the training compute to achieve the same one-shot performance as Transformer""",7.1e+21,,,"From the email they claim to have use 72K TPUv4 hours for training

Thus: 
72000 h * 0.1 * 275e12 FLOP/s 3600s/h = 7.1e21 FLOP",C4,,173284750600.0,"In GB - TODO convert to words

""Dataset size: 806.92 GiB""
https://www.tensorflow.org/datasets/catalog/c4

This was the largest dataset that the authors used 
""These benefits are robust and hold across model sizes (20M
to 1.9B parameters), across compute scales (10 to 105
accelerator hours), across datasets (LM1B,
C4, PG19 [22])""

802.92 GiB ~ 866.42 GB
1 GB ~ 200M words",,,,,,,"Large Transformer models have been central to recent advances in natural language processing. The training and inference costs of these models, however, have grown rapidly and become prohibitively expensive. Here we aim to reduce the costs of Transformers by searching for a more efficient variant. Compared to previous approaches, our search is performed at a lower level, over the primitives that define a Transformer TensorFlow program. We identify an architecture, named Primer, that has a smaller training cost than the original Transformer and other variants for auto-regressive language modeling. Primer's improvements can be mostly attributed to two simple modifications: squaring ReLU activations and adding a depthwise convolution layer after each Q, K, and V projection in self-attention. Experiments show Primer's gains over Transformer increase as compute scale grows and follow a power law with respect to quality at optimal model sizes. We also verify empirically that Primer can be dropped into different codebases to significantly speed up training without additional tuning. For example, at a 500M parameter size, Primer improves the original T5 architecture on C4 auto-regressive language modeling, reducing the training cost by 4X. Furthermore, the reduced training cost means Primer needs much less compute to reach a target one-shot performance. For instance, in a 1.9B parameter configuration similar to GPT-3 XL, Primer uses 1/3 of the training compute to achieve the same one-shot performance as Transformer. We open source our models and several comparisons in T5 to help with reproducibility.",,,,,2025-02-17 16:11:00+00:00,United States of America,,,,,,,,,
SPALM + RelationLM,Language,"DeepMind,University of Oxford","Industry,Academia","Qi Liu, Dani Yogatama, Phil Blunsom",2022-01-24,Relational Memory-Augmented Language Models,https://arxiv.org/abs/2201.09680,29.0,,,124000000.0,,,,,,WikiText-103,,,,,,,,,,"We present a memory-augmented approach to condition an autoregressive language model on a knowledge graph. We represent the graph as a collection of relation triples and retrieve relevant relations for a given context to improve text generation. Experiments on WikiText-103, WMT19, and enwik8 English datasets demonstrate that our approach produces a better language model in terms of perplexity and bits per character. We also show that relational memory improves coherence, is complementary to token-based memory, and enables causal interventions. Our model provides a simple yet effective way to combine an autoregressive language model with a knowledge graph for a more coherent and logical generation.",SPALM + RelationLM,Unreleased,,,2024-10-01 14:02:13+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Transformer-XL + RelationLM,Language,"DeepMind,University of Oxford","Industry,Academia","Qi Liu, Dani Yogatama, Phil Blunsom",2022-01-24,Relational Memory-Augmented Language Models,https://arxiv.org/abs/2201.09680,29.0,,,124000000.0,,3.2e+21,,,,WikiText-103,,,,,,,,,,"We present a memory-augmented approach to condition an autoregressive language model on a knowledge graph. We represent the graph as a collection of relation triples and retrieve relevant relations for a given context to improve text generation. Experiments on WikiText-103, WMT19, and enwik8 English datasets demonstrate that our approach produces a better language model in terms of perplexity and bits per character. We also show that relational memory improves coherence, is complementary to token-based memory, and enables causal interventions. Our model provides a simple yet effective way to combine an autoregressive language model with a knowledge graph for a more coherent and logical generation.",TransformerXL+RelationLM,Unreleased,,,2024-10-07 17:29:31+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
OntoProtein,"Biology,Language",Zhejiang University,Academia,"Ningyu Zhang, Zhen Bi, Xiaozhuan Liang, Siyuan Cheng, Shumin Deng, Qiang Zhang, Jiazhang Lian, Huajun Chen, Haosen Hong",2022-01-23,ONTOPROTEIN: PROTEIN PRETRAINING WITH GENE ONTOLOGY EMBEDDING,https://openreview.net/pdf?id=yfe1VMYAXa4,,SOTA improvement,Experimental results show that OntoProtein can surpass state-of-the-art methods with pre-trained protein language models in TAPE benchmark and yield better performance compared with baselines in protein-protein interaction and protein function prediction1.,420000000.0,"""For the protein encoder, we use the pre-trained ProtBert from Elnaggar et al. (2020).""",,,,,ProteinKG25,"""the ProteinKG25 dataset used for pre-training contains about 612,483 entities and 4,990,097 triples, aligned with GO annotations and including protein sequences.""",160000001.00000018,"Data Summary:
- Protein tokens: 488,000 × 300 = 1.464 × 10^8
- GO term tokens: 612,483 × 20 = 1.224966 × 10^7
- Knowledge graph triples: 4,990,097
Total: (1.464 × 10^8 + 1.224966 × 10^7 + 4.99 × 10^6) ≈ 1.626 × 10^8 data points",,,,,,,"Self-supervised protein language models have proved their effectiveness in learn- ing the proteins representations. With the increasing computational power, cur- rent protein language models pre-trained with millions of diverse sequences can advance the parameter scale from million-level to billion-level and achieve re- markable improvement. However, those prevailing approaches rarely consider incorporating knowledge graphs (KGs), which can provide rich structured knowl- edge facts for better protein representations. We argue that informative biology knowledge in KGs can enhance protein representation with external knowledge. In this work, we propose OntoProtein, the first general framework that makes use of structure in GO (Gene Ontology) into protein pre-training models. We construct a novel large-scale knowledge graph that consists of GO and its related proteins, and gene annotation texts or protein sequences describe all nodes in the graph. We propose novel contrastive learning with knowledge-aware negative sampling to jointly optimize the knowledge graph and protein embedding during pre-training. Experimental results show that OntoProtein can surpass state-of-the-art methods with pre-trained protein language models in TAPE benchmark and yield better performance compared with baselines in protein-protein interaction and protein function prediction1.",,,,,2025-01-30 05:05:02+00:00,China,ProtBERT-BFD,,,,,,,,
AbLang (heavy sequences),Biology,University of Oxford,Academia,"Tobias H Olsen, Iain H Moal, Charlotte M Deane",2022-01-22,AbLang: an antibody language model for completing antibody sequences,https://academic.oup.com/bioinformaticsadvances/article/2/1/vbac046/6609807,99.0,SOTA improvement,"""AbLang restores residues more accurately and faster than a current state-of-the-art protein language model ESM-1b, emphasizing the benefits and potential of an antibody specific language model"" - SOTA improvement for a very specific task",355000000.0,"""The hyperparameters were selected to be similar to those used
in the RoBERTa paper (Liu et al., 2019).""

Liu et al., 2019 link: https://arxiv.org/pdf/1907.11692.pdf
""We begin by training RoBERTa following the BERTLARGE architecture (L = 24, H = 1024, A = 16, 355M parameters)""",,,,,Observed Antibody Space (OAS) database,,2290000001.0000024,"Heavy Chain: 14,126,724 sequences × 160 residues = 2,260,275,840 datapoints
Light Chain: 187,068 sequences × 160 residues = 29,930,880 datapoints
Total: 2,260,275,840 + 29,930,880 = 2,290,206,720 datapoints (2.29B)",20.0,,,,,,"Motivation
General protein language models have been shown to summarize the semantics of protein sequences into representations that are useful for state-of-the-art predictive methods. However, for antibody specific problems, such as restoring residues lost due to sequencing errors, a model trained solely on antibodies may be more powerful. Antibodies are one of the few protein types where the volume of sequence data needed for such language models is available, e.g. in the Observed Antibody Space (OAS) database.

Results
Here, we introduce AbLang, a language model trained on the antibody sequences in the OAS database. We demonstrate the power of AbLang by using it to restore missing residues in antibody sequence data, a key issue with B-cell receptor repertoire sequencing, e.g. over 40% of OAS sequences are missing the first 15 amino acids. AbLang restores the missing residues of antibody sequences better than using IMGT germlines or the general protein language model ESM-1b. Further, AbLang does not require knowledge of the germline of the antibody and is seven times faster than ESM-1b.",,,,Confident,2025-01-30 05:04:37+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
data2vec (language),Language,Meta AI,Industry,"Alexei Baevski,  Wei-Ning Hsu,  Qiantong Xu , Arun Babu,  Jiatao Gu,  Michael Auli",2022-01-20,"Data2vec: A General Framework for Self-supervised Learning in Speech, Vision and Language",https://ai.facebook.com/research/data2vec-a-general-framework-for-self-supervised-learning-in-speech-vision-and-language/,716.0,SOTA improvement,"""Experiments on the major benchmarks of speech recognition, image classification, and natural lan guage understanding demonstrate a new state of the art or competitive performance to predominant approaches""",705134592.0,"Section 4: ""We experiment with two model sizes: data2vec Base and
data2vec Large, containing either L = 12 or L = 24 Trans-
former blocks with H = 768 or H = 1024 hidden dimen-
sion (with 4 × H feed-forward inner-dimension)""
",,,,,"BookCorpus (BooksCorpus, Toronto Book Corpus),English Wikipedia",,3300000000.0,"Section 5.3: ""we adopt the same training setup as BERT (Devlin et al., 2019)
by pre-training on the Books Corpus (Zhu et al., 2015) and English Wikipedia data over 1M updates and a batch size of 256 sequences.""",,,,,,Self-supervised learning,"While the general idea of self-supervised learning is identical across modalities, the actual algorithms and objectives differ widely because
they were developed with a single modality in mind. To get us closer to general self-supervised learning, we present data2vec, a framework that
uses the same learning method for either speech, NLP or computer vision. The core idea is to predict latent representations of the full input data based on a masked view of the input in a selfdistillation setup using a standard transformer architecture. Instead of predicting modality-specific
targets such as words, visual tokens or units of human speech which are local in nature, data2vecpredicts contextualized latent representations that
contain information from the entire input. Experiments on the major benchmarks of speech recognition, image classification, and natural language understanding demonstrate a new state of the art or competitive performance to predominant approaches. Models and code are available at www.github.com/pytorch/fairseq/tree/master/examples/data2vec.
",,Open weights (unrestricted),,,2024-11-01 14:04:09+00:00,United States of America,,,,,,,,,
data2vec (speech),Speech,Meta AI,Industry,"Alexei Baevski,  Wei-Ning Hsu,  Qiantong Xu , Arun Babu,  Jiatao Gu,  Michael Auli",2022-01-20,"Data2vec: A General Framework for Self-supervised Learning in Speech, Vision and Language",https://ai.facebook.com/research/data2vec-a-general-framework-for-self-supervised-learning-in-speech-vision-and-language/,716.0,SOTA improvement,"""Experiments on the major benchmarks of speech recognition, image classification, and natural lan guage understanding demonstrate a new state of the art or competitive performance to predominant approaches""",705134592.0,"Section 4: ""We experiment with two model sizes: data2vec Base and
data2vec Large, containing either L = 12 or L = 24 Trans-
former blocks with H = 768 or H = 1024 hidden dimen-
sion (with 4 × H feed-forward inner-dimension)""
",,,,,LibriSpeech,,13132800.0,"Section 5.2:
""we pre-train data2vec on the 960
hours of speech audio data from Librispeech (LS-960)""

13,680 words per hour",,,,,,Self-supervised learning,"While the general idea of self-supervised learning is identical across modalities, the actual algorithms and objectives differ widely because they were developed with a single modality in mind. To get us closer to general self-supervised learning, we present data2vec, a framework that uses the same learning method for either speech,NLP or computer vision. The core idea is to predict latent representations of the full input data based on a masked view of the input in a selfdistillation setup using a standard Transformer architecture. Instead of predicting modality-specific targets such as words, visual tokens or units of human speech which are local in nature, data2vec predicts contextualized latent representations that contain information from the entire input. Experiments on the major benchmarks of speech recognition, image classification, and natural language understanding demonstrate a new state of the art or competitive performance to predominant approaches.",,,,,2024-11-01 14:04:08+00:00,United States of America,,,,,,,,,
data2vec (vision),Vision,Meta AI,Industry,"Alexei Baevski,  Wei-Ning Hsu,  Qiantong Xu , Arun Babu,  Jiatao Gu,  Michael Auli",2022-01-20,"Data2vec: A General Framework for Self-supervised Learning in Speech, Vision and Language",https://ai.facebook.com/research/data2vec-a-general-framework-for-self-supervised-learning-in-speech-vision-and-language/,716.0,SOTA improvement,"""Experiments on the major benchmarks of speech recognition, image classification, and natural lan guage understanding demonstrate a new state of the art or competitive performance to predominant approaches""",705134592.0,"Section 4: ""We experiment with two model sizes: data2vec Base and
data2vec Large, containing either L = 12 or L = 24 Trans-
former blocks with H = 768 or H = 1024 hidden dimen-
sion (with 4 × H feed-forward inner-dimension)""
",,,,,ImageNet-1k,,1281167.0,"Section 5.1: 
""we pretrain data2vec on the images of the ImageNet-1K training
set""",800.0,,,,,Self-supervised learning,"While the general idea of self-supervised learning is identical across modalities, the actual algorithms and objectives differ widely because they were developed with a single modality in mind. To get us closer to general self-supervised learning, we present data2vec, a framework that uses the same learning method for either speech,NLP or computer vision. The core idea is to predict latent representations of the full input data based on a masked view of the input in a selfdistillation setup using a standard Transformer architecture. Instead of predicting modality-specific targets such as words, visual tokens or units of human speech which are local in nature, data2vec predicts contextualized latent representations that contain information from the entire input. Experiments on the major benchmarks of speech recognition, image classification, and natural language understanding demonstrate a new state of the art or competitive performance to predominant approaches.",,,,,2024-11-01 14:04:08+00:00,United States of America,,,,,,,,,
Japanese-GPT-1B,Language,rinna,Industry,"Kei Sawada, Tianyu Zhao, Makoto Shing, Kentaro Mitsui, Akio Kaga, Yukiya Hono, Toshiaki Wakatsuki, Koh Mitsuda",2022-01-19,"This repository provides a 1.3B-parameter Japanese GPT model. The model was trained by rinna Co., Ltd.",https://huggingface.co/rinna/japanese-gpt-1b,,,,1300000000.0,,,,,,"Japanese CC-100,Japanese C4,Wikipedia (ja)","""The model was trained on Japanese C4, Japanese CC-100 and Japanese Wikipedia to optimize a traditional language modelling objective. It reaches around 14 perplexity on a chosen validation set from the same data.""",,,,,,,,,"Model architecture
A 24-layer, 2048-hidden-size transformer-based language model.

Training
The model was trained on Japanese C4, Japanese CC-100 and Japanese Wikipedia to optimize a traditional language modelling objective. It reaches around 14 perplexity on a chosen validation set from the same data.

Tokenization
The model uses a sentencepiece-based tokenizer. The vocabulary was first trained on a selected subset from the training data using the official sentencepiece training script, and then augmented with emojis and symbols.",,Open weights (unrestricted),,Confident,2024-09-05 18:08:31+00:00,Japan,,,,,,,,,
Detic,Vision,"Meta AI,University of Texas at Austin","Industry,Academia","Xingyi Zhou, Rohit Girdhar, Armand Joulin, Philipp Krähenbühl, Ishan Misra",2022-01-07,Detecting Twenty-thousand Classes using Image-level Supervision,https://arxiv.org/abs/2201.02605,483.0,SOTA improvement,"""On open-vocabulary COCO, our method outperforms the previous state-of-the-art OVR-CNN [ 72 ] by 5 point with the same detector and data""",88000000.0,"from https://github.com/microsoft/Swin-Transformer Swin-B have 88M, 
from page 8 :  'Training our ResNet50 model takes ∼ 22 hours on 8 V100 GPUs. The large 21K Swin-B model trains in ∼ 24 hours on 32 GPUs.'",2.34399744e+19,,,"28.26e12* 32 * 24*3600*0.3 =2.34e19 = peak flops * num gpus * num seconds * assumed utilization rate
for Swin-B model from page 8 :  'Training our ResNet50 model takes ∼ 22 hours on 8 V100 GPUs. The large 21K Swin-B model trains in ∼ 24 hours on 32 GPUs.'","ImageNet21k,Conceptual Captions (CC3M),LVIS","table above section 5.1
""We evaluate Detic on the large-vocabulary object detection dataset LVIS [18 ]""
""Image-supervised data. We use two sources of image-supervised data: ImageNet-21K [10] and Conceptual Captions """,16900000.0,"14M + 1.5M + 1.2M + 100K + 100K = 16900000.0
table above section 5.1",,24.0,"from page 8 :  'Training our ResNet50 model takes ∼ 22 hours on 8 V100
GPUs. The large 21K Swin-B model trains in ∼ 24 hours on 32 GPUs.'",NVIDIA V100,32.0,," Current object detectors are limited in vocabulary size due to the small scale of detection datasets. Image classifiers, on the other hand, reason about much larger vocabularies, as their datasets are larger and easier to collect. We propose Detic, which simply trains the classifiers of a detector on image classification data and thus expands the vocabulary of detectors to tens of thousands of concepts. Unlike prior work, Detic does not need complex assignment schemes to assign image labels to boxes based on model predictions, making it much easier to implement and compatible with a range of detection architectures and backbones. Our results show that Detic yields excellent detectors even for classes without box annotations. It outperforms prior work on both open-vocabulary and long-tail detection benchmarks. Detic provides a gain of 2.4 mAP for all classes and 8.3 mAP for novel classes on the open-vocabulary LVIS benchmark. On the standard LVIS benchmark, Detic obtains 41.7 mAP when evaluated on all classes, or only rare classes, hence closing the gap in performance for object categories with few samples. For the first time, we train a detector with all the twenty-one-thousand classes of the ImageNet dataset and show that it generalizes to new datasets without finetuning. Code is available at \url{this https URL}. ",,Open weights (unrestricted),,Speculative,2025-02-17 16:11:09+00:00,"United States of America,United States of America",,,,,,,,,
SignalP 6.0,Biology,"Technical University of Denmark,ETH Zurich,University of Copenhagen,Stanford University,Stockholm University,European Bioinformatics Institute","Academia,Academia,Academia,Academia,Academia,Research collective","Felix Teufel, José Juan Almagro Armenteros, Alexander Rosenberg Johansen, Magnús Halldór Gíslason, Silas Irby Pihl, Konstantinos D. Tsirigos, Ole Winther, Søren Brunak, Gunnar von Heijne & Henrik Nielsen",2022-01-03,SignalP 6.0 predicts all five types of signal peptides using protein language models,https://www.nature.com/articles/s41587-021-01156-3,,,,,,,,,,,,,,,,,,,,"Signal peptides (SPs) are short amino acid sequences that control protein secretion and translocation in all living organisms. SPs can be predicted from sequence data, but existing algorithms are unable to detect all known types of SPs. We introduce SignalP 6.0, a machine learning model that detects all five SP types and is applicable to metagenomic data.",,,,Unverified,2025-01-12 05:18:33+00:00,"Denmark,Switzerland,Denmark,United States of America,Sweden,Multinational",,,,,,,,,
ERNIE-ViLG,"Multimodal,Image generation,Vision",Baidu,Industry,"Han Zhang, Weichong Yin, Yewei Fang, Lanxin Li, Boqiang Duan, Zhihua Wu, Yu Sun, Hao Tian, Hua Wu, Haifeng Wang",2021-12-31,ERNIE-ViLG: Unified Generative Pre-training for Bidirectional Vision-Language Generation,https://arxiv.org/abs/2112.15283,54.0,SOTA improvement,"""we train a 10-billion parameter ERNIE-ViLG model on a large-scale dataset of 145 million (Chinese) image-text pairs which achieves state-of-the-art performance for both text-to-image and image-to-text tasks""",10000000000.0,"""To explore the landscape of large-scale pre-training for bidirectional text-image generation, we pre-train a 10-billion parameter model on a large-scale dataset of 145 million high-quality Chinese image-text pairs.""",,,,,,,145000000.0,"To explore the landscape of large-scale pre-training for bidirectional text-image generation, we pre-train a 10-billion parameter model on a large-scale dataset of 145 million high-quality Chinese image-text pairs.",,,,,,Self-supervised learning,"Conventional methods for the image-text generation tasks mainly tackle the naturally bidirectional generation tasks separately, focusing on designing task-specific frameworks to improve the quality and fidelity of the generated samples. Recently, Vision-Language Pre-training models have greatly improved the performance of the image-to-text generation tasks, but large-scale pre-training models for text-to-image synthesis task are still under-developed. In this paper, we propose ERNIE-ViLG, a unified generative pre-training framework for bidirectional image-text generation with transformer model. Based on the image quantization models, we formulate both image generation and text generation as autoregressive generative tasks conditioned on the text/image input. The bidirectional image-text generative modeling eases the semantic alignments across vision and language. For the text-to-image generation process, we further propose an end-to-end training method to jointly learn the visual sequence generator and the image reconstructor. To explore the landscape of large-scale pre-training for bidirectional text-image generation, we train a 10-billion parameter ERNIE-ViLG model on a large-scale dataset of 145 million (Chinese) image-text pairs which achieves state-of-the-art performance for both text-to-image and image-to-text tasks, obtaining an FID of 7.9 on MS-COCO for text-to-image synthesis and best results on COCO-CN and AIC-ICC for image captioning.",,,,,2024-11-01 14:04:08+00:00,China,,,,,,,,,True
Vespa,Biology,Technical University of Munich,Academia,"Céline Marquet, Michael Heinzinger, Tobias Olenyi, Christian Dallago, Kyra Erckert, Michael Bernhofer, Dmitrii Nechaev & Burkhard Rost ",2021-12-30,Embeddings from protein language models predict conservation and variant effects,https://link.springer.com/article/10.1007/s00439-021-02411-y,,,,231000.0,"""(3) standard convolutional neural network (CNN; with two convolutional layers with a window size of 7, connected through ReLU activations; dropout rate of 0.25; 231 k free parameters)""",,,,,"ConSurf10k,Eff10k,PMD4k,DMS4,DMS39",ConSurf10k data set contained about 2.7 million samples,2800000.9999999977,"ConSurf10k: 2.7 x 10^6 samples
Eff10k: 1.00737 x 10^5 samples
Total = 2.7 x 10^6 + 1.00737 x 10^5 = 2.800737 x 10^6 ≈ 2.8 x 10^6 datapoints",,,,,,Supervised,"The emergence of SARS-CoV-2 variants stressed the demand for tools allowing to interpret the effect of single amino acid variants (SAVs) on protein function. While Deep Mutational Scanning (DMS) sets continue to expand our understanding of the mutational landscape of single proteins, the results continue to challenge analyses. Protein Language Models (pLMs) use the latest deep learning (DL) algorithms to leverage growing databases of protein sequences. These methods learn to predict missing or masked amino acids from the context of entire sequence regions. Here, we used pLM representations (embeddings) to predict sequence conservation and SAV effects without multiple sequence alignments (MSAs). Embeddings alone predicted residue conservation almost as accurately from single sequences as ConSeq using MSAs (two-state Mat- thews Correlation Coefficient—MCC—for ProtT5 embeddings of 0.596 ± 0.006 vs. 0.608 ± 0.006 for ConSeq). Inputting the conservation prediction along with BLOSUM62 substitution scores and pLM mask reconstruction probabilities into a simplistic logistic regression (LR) ensemble for Variant Effect Score Prediction without Alignments (VESPA) predicted SAV effect magnitude without any optimization on DMS data. Comparing predictions for a standard set of 39 DMS experiments to other methods (incl. ESM-1v, DeepSequence, and GEMME) revealed our approach as competitive with the state-of-the-art (SOTA) methods using MSA input. No method outperformed all others, neither consistently nor statistically significantly, independently of the performance measure applied (Spearman and Pearson correlation). Finally, we investigated binary effect predictions on DMS experiments for four human proteins. Overall, embedding-based methods have become competi- tive with methods relying on MSAs for SAV effect prediction at a fraction of the costs in computing/energy. Our method predicted SAV effects for the entire human proteome (~ 20 k proteins) within 40 min on one Nvidia Quadro RTX 8000. All methods and data sets are freely available for local and online execution through bioembeddings.com, https://github.com/ Rostlab/VESPA, and PredictProtein.",,,,Confident,2025-01-30 05:04:25+00:00,Germany,ProteinBERT,,,,,,,,
ERNIE 3.0 Titan,Language,"Baidu,Peng Cheng Laboratory","Industry,Academia","Shuohuan Wang, Yu Sun, Yang Xiang, Zhihua Wu, Siyu Ding, Weibao Gong, Shikun Feng",2021-12-23,ERNIE 3.0 Titan: Exploring Larger-scale Knowledge Enhanced Pre-training for Language Understanding and Generation,https://arxiv.org/abs/2112.12731,70.0,SOTA improvement,"""Empirical results show that the ERNIE 3.0 Titan outperforms the state-of-the-art models on 68 NLP datasets.""",260000000000.0,"""[We] developed... distributed training technology, including fine-grained parallelism, heterogeneous hardware-aware training, and fault tolerance mechanism to train the 260B model on both Nvidia V100 GPU and Ascend 910 NPU clusters.""
See also:
https://twitter.com/BaiduResearch/status/1468633977242243078?t=6q4zuLNdTSc4GUBe9OM5Aw&s=19",1.0421e+24,,,"The paper suggests that ERNIE 3.0 Titan uses more compute than GPT-3. This is consistent with the 6ND approximation.

C = 6ND = 6 (FLOP/param/token) * (260B params) * (668B tokens) = 1.0421*10^24 FLOP",ERNIE 3.0 Corpus,,668000000000.0,"""To ensure the success of the pre-training of ERNIE 3.0 Titan, we utilize the ERNIE 3.0 Corpus [ 2 ], a large-scale, wide-variety, and high-quality Chinese text corpora amounting to 4TB""

Assuming 167M words/tokens per GB",,,,"NVIDIA Tesla V100 DGXS 32 GB,Huawei Ascend 910",1920.0,,"Pre-trained language models have achieved state-of-the-art results in various Natural Language Processing (NLP) tasks. GPT-3 has shown that scaling up pre-trained language models can further exploit their enormous potential. A unified framework named ERNIE 3.0 was recently proposed for pre-training large-scale knowledge enhanced models and trained a model with 10 billion parameters. ERNIE 3.0 outperformed the state-of-the-art models on various NLP tasks. In order to explore the performance of scaling up ERNIE 3.0, we train a hundred-billion-parameter model called ERNIE 3.0 Titan with up to 260 billion parameters on the PaddlePaddle platform. Furthermore, we design a self-supervised adversarial loss and a controllable language modeling loss to make ERNIE 3.0 Titan generate credible and controllable texts. To reduce the computation overhead and carbon emission, we propose an online distillation framework for ERNIE 3.0 Titan, where the teacher model will teach students and train itself simultaneously. ERNIE 3.0 Titan is the largest Chinese dense pre-trained model so far. Empirical results show that the ERNIE 3.0 Titan outperforms the state-of-the-art models on 68 NLP datasets.",,Hosted access (no API),,Confident,2025-02-27 15:37:50+00:00,"China,China",,,,,"Peng Cheng Cloud Brain II, Paper on Ernie 3.0",,1048576.0,"""The maximum sequence length of context and
the memory length of language generation is 512 and 128, respectively""

In table 1, they use a global batch size of 512 when data parallelism is ""1"" and 2048 when DP is ""4"". Not sure I fully understand this part but I guess they'd use parallelism as much as possible given how they talk about it.

2048 * 512 = 1048576.",True
GLIDE,Image generation,OpenAI,Industry,"Alex Nichol, Prafulla Dhariwal, Aditya Ramesh, Pranav Shyam, Pamela Mishkin, Bob McGrew, Ilya Sutskever, Mark Chen",2021-12-20,GLIDE: Towards Photorealistic Image Generation and Editing with Text-Guided Diffusion Models,https://arxiv.org/abs/2112.10741,2795.0,Highly cited,,3500000000.0,"""Samples from a 3.5 billion parameter text-conditional diffusion model using classifier-free guidance are favored by human evaluators to those from DALL-E, even when the latter uses expensive CLIP reranking""",4.7e+22,,,"""Note that GLIDE was
trained with roughly the same training compute as DALL-E
but with a much smaller model (3.5 billion vs. 12 billion
parameters)""",DALL-E,,250000000.0,"Section 4:
""We train our model on the same dataset as DALL-E (Ramesh et al., 2021)""

This paper used 250M image-text pairs
https://arxiv.org/pdf/2102.12092.pdf",,,,,,,"Diffusion models have recently been shown to generate high-quality synthetic images, especially when paired with a guidance technique to trade off diversity for fidelity. We explore diffusion models for the problem of text-conditional image synthesis and compare two different guidance strategies: CLIP guidance and classifier-free guidance. We find that the latter is preferred by human evaluators for both photorealism and caption similarity, and often produces photorealistic samples. Samples from a 3.5 billion parameter text-conditional diffusion model using classifier-free guidance are favored by human evaluators to those from DALL-E, even when the latter uses expensive CLIP reranking. Additionally, we find that our models can be fine-tuned to perform image inpainting, enabling powerful text-driven image editing. We train a smaller model on a filtered dataset and release the code and weights at this https URL.",,,,Speculative,2025-02-19 19:03:14+00:00,United States of America,,,,,,,,,
MoE-1.1T,Language,Meta AI,Industry,"Mikel Artetxe, Shruti Bhosale, Naman Goyal, Todor Mihaylov, Myle Ott, Sam Shleifer, Xi Victoria Lin, Jingfei Du, Srinivasan Iyer, Ramakanth Pasunuru, Giri Anantharaman, Xian Li, Shuohui Chen, Halil Akin, Mandeep Baines, Louis Martin, Xing Zhou, Punit Singh Koura, Brian O'Horo, Jeff Wang, Luke Zettlemoyer, Mona Diab, Zornitsa Kozareva, Ves Stoyanov",2021-12-20,Efficient Large Scale Language Modeling with Mixtures of Experts,https://arxiv.org/abs/2112.10684,157.0,,,1100000000000.0,,2.227e+22,,,Reported directly in paper. Authors calculate FLOPs analytically in appendix G,"English Wikipedia,CC-News,OPENWEBTEXT,CC-Stories,CC100","""We pretrain our models on a union of six Englishlanguage datasets, including the five datasets used to pretrain RoBERTa (Liu et al., 2019) and the
English subset of CC100, totalling 112B tokens corresponding to 453GB:
BookCorpus (Zhu et al., 2019) consists of more
than 10K unpublished books (4GB);
• English Wikipedia, excluding lists, tables and
headers (12GB);
• CC-News (Nagel, 2016) contains 63 millions English news articles crawled between September
2016 and February 2019 (76GB);
• OpenWebText (Gokaslan and Cohen, 2019), an
open source recreation of the WebText dataset
used to train GPT-2 (38GB);
• CC-Stories (Trinh and Le, 2018) contains a subset of CommonCrawl data filtered to match the
story-like style of Winograd schemas (31GB);
• English CC100 (Wenzek et al., 2020), a dataset
extracted from CommonCrawl snapshots between January 2018 and December 2018, filtered
to match the style of Wikipedia (292GB)""",112000000000.0,"112B tokens, or 84B words at 0.75 English words/token. 
""We pretrain our models on a union of six Englishlanguage datasets, including the five datasets used to pretrain RoBERTa (Liu et al., 2019) and the
English subset of CC100, totalling 112B tokens""",2.68,,,NVIDIA A100,,,"Mixture of Experts layers (MoEs) enable efficient scaling of language models through conditional computation. This paper presents a detailed empirical study of how autoregressive MoE language models scale in comparison with dense models in a wide range of settings: in- and out-of-domain language modeling, zero- and few-shot priming, and full-shot fine-tuning. With the exception of fine-tuning, we find MoEs to be substantially more compute efficient. At more modest training budgets, MoEs can match the performance of dense models using ∼4 times less compute. This gap narrows at scale, but our largest MoE model (1.1T parameters) consistently outperforms a compute-equivalent dense model (6.7B parameters). Overall, this performance gap varies greatly across tasks and domains, suggesting that MoE and dense models generalize differently in ways that are worthy of future study. We make our code and models publicly available for research use.",,,,Confident,2024-11-10 23:29:38+00:00,United States of America,,,,,,,,,
Fairseq-dense 13B,Language,Meta AI,Industry,"Mikel Artetxe, Shruti Bhosale, Naman Goyal, Todor Mihaylov, Myle Ott, Sam Shleifer, Xi Victoria Lin, Jingfei Du, Srinivasan Iyer, Ramakanth Pasunuru, Giri Anantharaman, Xian Li, Shuohui Chen, Halil Akin, Mandeep Baines, Louis Martin, Xing Zhou, Punit Singh Koura, Brian O'Horo, Jeff Wang, Luke Zettlemoyer, Mona Diab, Zornitsa Kozareva, Ves Stoyanov",2021-12-20,Efficient Large Scale Language Modeling with Mixtures of Experts,https://arxiv.org/abs/2112.10684,157.0,,,13000000000.0,,3.267e+22,,,Table 1,,"""We pretrain our models on a union of six Englishlanguage datasets, including the five datasets used to pretrain RoBERTa (Liu et al., 2019) and the
English subset of CC100, totalling 112B tokens corresponding to 453GB:
BookCorpus (Zhu et al., 2019) consists of more
than 10K unpublished books (4GB);
• English Wikipedia, excluding lists, tables and
headers (12GB);
• CC-News (Nagel, 2016) contains 63 millions English news articles crawled between September
2016 and February 2019 (76GB);
• OpenWebText (Gokaslan and Cohen, 2019), an
open source recreation of the WebText dataset
used to train GPT-2 (38GB);
• CC-Stories (Trinh and Le, 2018) contains a subset of CommonCrawl data filtered to match the
story-like style of Winograd schemas (31GB);
• English CC100 (Wenzek et al., 2020), a dataset
extracted from CommonCrawl snapshots between January 2018 and December 2018, filtered
to match the style of Wikipedia (292GB)""",112000000000.0,"112B tokens, or 84B words at 0.75 English words/token. 
""We pretrain our models on a union of six Englishlanguage datasets, including the five datasets used to pretrain RoBERTa (Liu et al., 2019) and the English subset of CC100, totalling 112B tokens""
...
""All models are trained for 300B tokens with a sequence length of 2048 tokens.""",2.68,,,NVIDIA A100,,,"Mixture of Experts layers (MoEs) enable efficient scaling of language models through conditional computation. This paper presents a detailed empirical study of how autoregressive MoE language models scale in comparison with dense models in a wide range of settings: in- and out-of-domain language modeling, zero- and few-shot priming, and full-shot fine-tuning. With the exception of fine-tuning, we find MoEs to be substantially more compute efficient. At more modest training budgets, MoEs can match the performance of dense models using ∼4 times less compute. This gap narrows at scale, but our largest MoE model (1.1T parameters) consistently outperforms a compute-equivalent dense model (6.7B parameters). Overall, this performance gap varies greatly across tasks and domains, suggesting that MoE and dense models generalize differently in ways that are worthy of future study. We make our code and models publicly available for research use.",,Open weights (unrestricted),,Likely,2025-02-17 16:11:14+00:00,United States of America,,,,,,,,,
LDM-1.45B,Image generation,"Heidelberg University,Runway","Academia,Industry","Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, Björn Ommer",2021-12-20,High-Resolution Image Synthesis with Latent Diffusion Models,https://arxiv.org/abs/2112.10752,10764.0,Highly cited,,1450000000.0,1.45B,,,,,LAION-400M,,400000000.0,400M image-text pairs,0.66,,,NVIDIA A100,,,"By decomposing the image formation process into a sequential application of denoising autoencoders, diffusion models (DMs) achieve state-of-the-art synthesis results on image data and beyond. Additionally, their formulation allows for a guiding mechanism to control the image generation process without retraining. However, since these models typically operate directly in pixel space, optimization of powerful DMs often consumes hundreds of GPU days and inference is expensive due to sequential evaluations. To enable DM training on limited computational resources while retaining their quality and flexibility, we apply them in the latent space of powerful pretrained autoencoders. In contrast to previous work, training diffusion models on such a representation allows for the first time to reach a near-optimal point between complexity reduction and detail preservation, greatly boosting visual fidelity. By introducing cross-attention layers into the model architecture, we turn diffusion models into powerful and flexible generators for general conditioning inputs such as text or bounding boxes and high-resolution synthesis becomes possible in a convolutional manner. Our latent diffusion models (LDMs) achieve a new state of the art for image inpainting and highly competitive performance on various tasks, including unconditional image generation, semantic scene synthesis, and super-resolution, while significantly reducing computational requirements compared to pixel-based DMs. Code is available at this https URL.",,Open weights (unrestricted),,Confident,2025-01-17 20:09:04+00:00,"Germany,United States of America",,,,,,,,,
XGLM-7.5B,Language,"Meta AI,Facebook AI Research","Industry,Industry","Xi Victoria Lin, Todor Mihaylov, Mikel Artetxe, Tianlu Wang, Shuohui Chen, Daniel Simig, Myle Ott, Naman Goyal, Shruti Bhosale, Jingfei Du, Ramakanth Pasunuru, Sam Shleifer, Punit Singh Koura, Vishrav Chaudhary, Brian O'Horo, Jeff Wang, Luke Zettlemoyer, Zornitsa Kozareva, Mona Diab, Veselin Stoyanov, Xian Li",2021-12-20,Few-shot Learning with Multilingual Language Models,https://arxiv.org/abs/2112.10668,245.0,SOTA improvement,"""Our largest model (XGLM7.5B) sets a new state of the art performance for few-shot learning in more than 20 representative languages (including medium- and low-resource languages) for the tasks of commonsense reasoning, natural language inference and machine translation.""",7500000000.0,"""Our largest model with 7.5 billion parameters sets new state of the art""",2.25e+22,,,"""The XGLM 7.5B model was trained on 256 A100 GPUs for about 3 weeks, at a speed of 311.6k words per second""

256 * 312 teraFLOP/s * 21 * 24 * 3600 * 0.3 utilization assumption ~= 4.3e22

also, it was trained for 500B tokens. Using Compute = 6ND, we have
6 * 500B * 7.5B = 2.25e22

311k tokens per second * 7.5B params * 6 is 1.35e16 FLOP/s. divide that by 312 teraFLOP/s, which is A100 peak compute, gets 43, suggesting low utilization (17%) of the 256-GPU cluster, or somewhat higher if there's more than one token per word. So I'll use the 6ND number.","Subset of CC100-XL,CC100-XL,Common Crawl","*they built a closed dataset based on open Common Crawl ""We extend the pipeline used for mining the CC100 corpus (Conneau et al., 2020; Wenzek et al., 2020) to generate CC100-XL, a significantly larger multilingual dataset covering 68 Common Crawl (CC) snapshots (from Summer 2013 to March/April 2020) and 134 languages.",1740000000.0,"Training Data. Our models are trained on a static multilingual corpus extracted from CommonCrawl, with English text comprising 32.6% of the total number of tokens corresponding to 163B tokens.
163B / 0.326 = 500B total

Note that this dataset is sampled from the much larger CC100-XL, outlined in Appendix F and here: https://huggingface.co/facebook/xglm-7.5B#training-data-statistics

The huggingface link sums to 1.64T tokens, while the Data Card in the appendix claims 1.9T tokens.",1.0,504.0,"appendix A : ""The XGLM 7.5B model was trained on 256 A100 GPUs for about 3 weeks, at a speed of 311.6k words per second""",NVIDIA A100,256.0,Self-supervised learning,"Large-scale generative language models such as GPT-3 are competitive few-shot learners. While these models are known to be able to jointly represent many different languages, their training data is dominated by English, potentially limiting their cross-lingual generalization. In this work, we train multilingual generative language models on a corpus covering a diverse set of languages, and study their few- and zero-shot learning capabilities in a wide range of tasks. Our largest model with 7.5 billion parameters sets new state of the art in few-shot learning in more than 20 representative languages, outperforming GPT-3 of comparable size in multilingual commonsense reasoning (with +7.4% absolute accuracy improvement in 0-shot settings and +9.4% in 4-shot settings) and natural language inference (+5.4% in each of 0-shot and 4-shot settings). On the FLORES-101 machine translation benchmark, our model outperforms GPT-3 on 171 out of 182 directions with 32 training examples, while surpassing the official supervised baseline in 45 directions. We conduct an in-depth analysis of different multilingual prompting approaches, showing in particular that strong few-shot learning performance across languages can be achieved via cross-lingual transfer through both templates and demonstration examples. Finally, we evaluate our models in social value tasks such as hate speech detection in five languages and find it has limitations similar to comparable sized GPT-3 models. ",,Open weights (non-commercial),,Confident,2025-02-17 16:11:43+00:00,"United States of America,United States of America",,,,,,,,,
HSO,Language,Toyota Technological Institute at Chicago,Academia,"Davis Yoshida, Kevin Gimpel",2021-12-16,Reconsidering the Past: Optimizing Hidden States in Language Models,https://arxiv.org/abs/2112.08653,2.0,,,345000000.0,,3.45e+20,,,,,,,,,,,,,,"We present Hidden-State Optimization (HSO), a gradient-based method for improving the performance of transformer language models at inference time. Similar to dynamic evaluation (Krause et al., 2018), HSO computes the gradient of the log-probability the language model assigns to an evaluation text, but uses it to update the cached hidden states rather than the model parameters. We test HSO with pretrained Transformer-XL and GPT-2 language models, finding improvement on the WikiText103 and PG-19 datasets in terms of perplexity, especially when evaluating a model outside of its training distribution. We also demonstrate downstream applicability by showing gains in the recently developed prompt-based few-shot evaluation setting, again with no extra parameters or training data.",HSO,Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,GPT-2 (355M),,,,,HSO,,,
Contriever,Language,"Meta AI,University College London (UCL),PSL University,Université Grenoble Alpes","Industry,Academia,Academia,Academia","Gautier Izacard, Mathilde Caron, Lucas Hosseini, Sebastian Riedel, Piotr Bojanowski, Armand Joulin, Edouard Grave",2021-12-16,Unsupervised Dense Information Retrieval with Contrastive Learning,https://arxiv.org/abs/2112.09118,590.0,SOTA improvement,"""We observe that when
used as pre-training, contrastive learning leads to strong performance: contriever obtains the best results
among dense bi-encoder methods for the nDCG@10, and is state-of-the-art for the recall@100 (improving the
average recall@100 from 65.0 to 67.1). This strong recall@100 performance can be further exploited by using
a cross-encoder2
to re-rank the retrieved documents: this leads to the state-of-the-art on 8 datasets of the
BEIR benchmark for the nDCG@10, as well as on average""",110000000.0,"Based on BERT base, which had 110m params.

""We initialize the network with the publicly available BERT base uncased model.""",1.57e+20,,,"Pre-training:
""We use the random cropping data augmentation, with documents of 256 tokens... batch size of 2,048 and 500,000 steps""
256 * 2048 * 500k * 100M * 6 = 1.57e20

Fine-tuning looks unlikely to move final sum much beyond this.","Wikipedia,CCNet","""Documents are simply random piece of text sampled from a mix between Wikipedia and CCNet data """,,,,,,,,,"Recently, information retrieval has seen the emergence of dense retrievers, using neural networks, as an alternative to classical sparse methods based on term-frequency. These models have obtained state-of-the-art results on datasets and tasks where large training sets are available. However, they do not transfer well to new applications with no training data, and are outperformed by unsupervised term-frequency methods such as BM25. In this work, we explore the limits of contrastive learning as a way to train unsupervised dense retrievers and show that it leads to strong performance in various retrieval settings. On the BEIR benchmark our unsupervised model outperforms BM25 on 11 out of 15 datasets for the Recall@100. When used as pre-training before fine-tuning, either on a few thousands in-domain examples or on the large MS~MARCO dataset, our contrastive model leads to improvements on the BEIR benchmark. Finally, we evaluate our approach for multi-lingual retrieval, where training data is even scarcer than for English, and show that our approach leads to strong unsupervised performance. Our model also exhibits strong cross-lingual transfer when fine-tuned on supervised English data only and evaluated on low resources language such as Swahili. We show that our unsupervised models can perform cross-lingual retrieval between different scripts, such as retrieving English documents from Arabic queries, which would not be possible with term matching methods.",,Open weights (non-commercial),,Likely,2025-02-17 16:11:53+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,France,France",BERT-Large,,actually BERT base,,,,,,
LongT5,Language,Google Research,Industry,"Mandy Guo, Joshua Ainslie, David Uthus, Santiago Ontanon, Jianmo Ni, Yun-Hsuan Sung, Yinfei Yang",2021-12-15,LongT5: Efficient Text-To-Text Transformer for Long Sequences,https://arxiv.org/abs/2112.07916,257.0,SOTA improvement,"from abstract: ""We are able to achieve state-of-the-art results on several summarization tasks and outperform the original T5 models on question answering tasks.""",3000000000.0,3B from section 4.1,,,,"architecture is sparse so we cannot use 6ND method,
from 3.1.1 ""we simply replace the encoder
self-attention operation in T5 with a sparse sliding-
window local attention operation following the im-
plementation in ETC ""
at the end of section 3.1.2 there is information about 
complexity O(l(r + l/k)) of local attention
from 4.1.1 ""We pre-train LongT5 models for 1M steps on
4096 input sequence length and 910 output se-
quence length.
batch size is 128 (from 4.1 configurations section)
so with l = 4096, k = 16, r = 127, 
so l(r+l/k) = 1568768, but we are not sure about constant.

if normal attention have complexity O(l^2), and l^2 = 16777216
16777216/1568768 = 10.7
We can try to estimate that LongT5 would have 10 times less compute that normal architecture.",C4,"from 4.1.1 ""The same as T5.1.1, we pre-train LongT5 only on the C4 dataset
(Raffel et al., 2019b), and we do not apply dropout during pre-training.""",200000000000.0,"size of C4, from https://huggingface.co/datasets/c4 , C4 dataset is a collection of about 750GB of English-language text
200M word/GB * 4/3 token/word * 750GB = 200000000000 tokens

Actual tokens seen:
1M steps * (4096 input len + 910 output len) * 128 batch size = 641B tokens, so around 3.2 epochs.",3.2,,,Google TPU v3,128.0,,"Recent work has shown that either (1) increasing the input length or (2) increasing model size can improve the performance of Transformer-based neural models. In this paper, we present a new model, called LongT5, with which we explore the effects of scaling both the input length and model size at the same time. Specifically, we integrated attention ideas from long-input transformers (ETC), and adopted pre-training strategies from summarization pre-training (PEGASUS) into the scalable T5 architecture. The result is a new attention mechanism we call {\em Transient Global} (TGlobal), which mimics ETC's local/global attention mechanism, but without requiring additional side-inputs. We are able to achieve state-of-the-art results on several summarization tasks and outperform the original T5 models on question answering tasks.",,Open weights (unrestricted),,Confident,2024-11-01 14:04:28+00:00,"Multinational,United States of America",,,,,,,,,
GLaM,Language,Google,Industry,"Nan Du, Yanping Huang, Andrew M. Dai, Simon Tong, Dmitry Lepikhin, Yuanzhong Xu, Maxim Krikun, Yanqi Zhou, Adams Wei Yu, Orhan Firat, Barret Zoph, Liam Fedus, Maarten Bosma, Zongwei Zhou, Tao Wang, Yu Emma Wang, Kellie Webster, Marie Pellat, Kevin Robinson, Kathleen Meier-Hellstern, Toju Duke, Lucas Dixon, Kun Zhang, Quoc V Le, Yonghui Wu, Zhifeng Chen, Claire Cui",2021-12-13,GLaM: Efficient Scaling of Language Models with Mixture-of-Experts,https://arxiv.org/abs/2112.06905,597.0,SOTA improvement,"""As shown in Table 5, GLaM (64B/64E) is better than the dense model and outperforms the previous finetuned state-of-the-art (SOTA) on this dataset in the open-domain setting""",1200000000000.0,1.2 trillion parameters,3.6363112434e+23,,,"The network activates 96.6 billion parameters per token and trained for 600B tokens.

6 * 600B * 96.6B = 3.478e23

Digitizing figure 4 (d) indicates 139.67 TPU-years of training. 
2.75e14 * 139.67 * 365.25 * 24 * 3600 * 0.3 = 3.636e23

Since these are close, we will use the 6NC estimate and derive hardware utilization from the training time information.

Later they say they measured 326W power usage per chip, which could maybe be used to estimate utilization.","Wikipedia,GLaM dataset","""To train our model, we build a high-quality dataset of 1.6 trillion tokens that are representative of a wide range of natural language use cases. Web pages constitute the vast quantity of data in our unlabeled dataset. However, their quality ranges from professional writing to low-quality comment and forum pages.""",600000000000.0,"The dataset is made of 1.6 trillion tokens, but later in the paper they say they only train the largest model for 600b tokens. 600b / 0.75 words/token = 800b words.

""The complete GLaM training using 600B tokens consumes only 456 MWh and emits 40.2 net tCO2e.""",,1366.0,"Note that they give several energy estimates. Use the complete training figures for 600B tokens, not the GPT-3 comparison values with 280B tokens.

""326W measured system power per TPU-v4 chip""
""The complete GLaM training using 600B tokens consumes only
456 MWh""
1024 TPU v4 chips
(456 MWh) / (326W/chip * 1024 chips) = 1366 hours",Google TPU v4,1024.0,,"Scaling language models with more data, compute and parameters has driven significant progress in natural language processing. For example, thanks to scaling, GPT-3 was able to achieve strong results on in-context learning tasks. However, training these large dense models requires significant amounts of computing resources. In this paper, we propose and develop a family of language models named GLaM (Generalist Language Model), which uses a sparsely activated mixture-of-experts architecture to scale the model capacity while also incurring substantially less training cost compared to dense variants. The largest GLaM has 1.2 trillion parameters, which is approximately 7x larger than GPT-3. It consumes only 1/3 of the energy used to train GPT-3 and requires half of the computation flops for inference, while still achieving better overall zero-shot and one-shot performance across 29 NLP tasks.",,Unreleased,0.2869636964,Confident,2025-02-17 20:52:35+00:00,United States of America,,,,,,,1000000.0,"""We use a maximum sequence
length of 1024 tokens, and pack each input example to have
up to 1 million tokens per batch.""",True
Engine-XL(NE),"Language,Vision,Multimodal",Boston University,Academia,"Zhongping Zhang, Yiwen Gu, Bryan A. Plummer",2021-12-11,Show and Write: Entity-aware Article Generation with Image Information,https://arxiv.org/abs/2112.05917,2.0,,,1500000000.0,"""ENGINE-XL has 48 layers and 1.5 billion parameters, on par with GPT2-1.5B and GROVER-Mega""",,,,,"WikiText-2,Goodnews,VisualNews",,,,3.0,,,,,,"Article comprehension is an important challenge in natural language processing with many applications such as article generation or image-to-article retrieval. Prior work typically encodes all tokens in articles uniformly using pretrained language models. However, in many applications, such as understanding news stories, these articles are based on real-world events and may reference many named entities that are difficult to accurately recognize and predict by language models. To address this challenge, we propose an ENtity-aware article GeneratIoN and rEtrieval (ENGINE) framework, to explicitly incorporate named entities into language models. ENGINE has two main components: a named-entity extraction module to extract named entities from both metadata and embedded images associated with articles, and an entity-aware mechanism that enhances the model's ability to recognize and predict entity names. We conducted experiments on three public datasets: GoodNews, VisualNews, and WikiText, where our results demonstrate that our model can boost both article generation and article retrieval performance, with a 4-5 perplexity improvement in article generation and a 3-4% boost in recall@1 in article retrieval. We release our implementation at this https URL .",Engine-XL(NE),Open weights (unrestricted),,,2024-09-05 18:08:31+00:00,United States of America,GPT-2 (1.5B),,,,,,,,
Gopher (280B),Language,DeepMind,Industry,"Jack W. Rae, Sebastian Borgeaud, Trevor Cai, Katie Millican, Jordan Hoffmann, Francis Song, John Aslanides, Sarah Henderson, Roman Ring, Susannah Young, Eliza Rutherford, Tom Hennigan, Jacob Menick, Albin Cassirer, Richard Powell, George van den Driessche, Lisa Anne Hendricks, Maribeth Rauh, Po-Sen Huang, Amelia Glaese, Johannes Welbl, Sumanth Dathathri, Saffron Huang, Jonathan Uesato, John Mellor, Irina Higgins, Antonia Creswell, Nat McAleese, Amy Wu, Erich Elsen, Siddhant Jayakumar, Elena Buchatskaya, David Budden, Esme Sutherland, Karen Simonyan, Michela Paganini, Laurent Sifre, Lena Martens, Xiang Lorraine Li, Adhiguna Kuncoro, Aida Nematzadeh, Elena Gribovskaya, Domenic Donato, Angeliki Lazaridou, Arthur Mensch, Jean-Baptiste Lespiau, Maria Tsimpoukelli, Nikolai Grigorev, Doug Fritz, Thibault Sottiaux, Mantas Pajarskas, Toby Pohlen, Zhitao Gong, Daniel Toyama, Cyprien de Masson d'Autume, Yujia Li, Tayfun Terzi, Vladimir Mikulik, Igor Babuschkin, Aidan Clark, Diego de Las Casas, Aurelia Guy, Chris Jones, James Bradbury, Matthew Johnson, Blake Hechtman, Laura Weidinger, Iason Gabriel, William Isaac, Ed Lockhart, Simon Osindero, Laura Rimell, Chris Dyer, Oriol Vinyals, Kareem Ayoub, Jeff Stanway, Lorrayne Bennett, Demis Hassabis, Koray Kavukcuoglu, Geoffrey Irving",2021-12-08,"""Scaling Language Models: Methods, Analysis & Insights from Training Gopher""",https://arxiv.org/abs/2112.11446,1122.0,SOTA improvement,"""These models are evaluated on 152 diverse tasks, achieving state-of-the-art performance across the majority""",280000000000.0,"Language modelling provides a step towards intelligent communication systems by harnessing large repositories of written human knowledge to better predict and understand the world. In this paper, we present an analysis of Transformer-based language model performance across a wide range of model scales -- from models with tens of millions of parameters up to a 280 billion parameter model called Gopher. These models are evaluated on 152 diverse tasks, achieving state-of-the-art performance across the majority. Gains from scale are largest in areas such as reading comprehension, fact-checking, and the identification of toxic language, but logical and mathematical reasoning see less benefit. We provide a holistic analysis of the training dataset and model's behaviour, covering the intersection of model scale with bias and toxicity. Finally we discuss the application of language models to AI safety and the mitigation of downstream harms.",6.31e+23,,,"Table A26
6.31E+08 Train PFLOPs",MassiveTex,,300000000000.0,"""We train all models for 300 billion tokens with a 2048 token context window, using the Adam (Kingma and Ba, 2014) optimiser.""

1 token ~ 0.75 words",1.0,920.0,"""We trained Gopher for 920 hours in November and December 2020 in Google’s Georgia datacentre. The PUE of the datacenter at this time was 1.08; the net tCO2e per MWh in October 2020 was 0.33. Using an estimate of 283W drawn per chip, this leads to a total of 380 net tCO2e""",Google TPU v3,4096.0,Self-supervised learning,"We enhance auto-regressive language models by conditioning on document chunks retrieved from a large corpus, based on local similarity with preceding tokens. With a 2 trillion token database, our Retrieval-Enhanced Transformer (RETRO) obtains comparable performance to GPT-3 and Jurassic-1 on the Pile, despite using 25× fewer parameters. After fine-tuning, RETRO performance translates to downstream knowledge-intensive tasks such as question answering. RETRO combines a frozen Bert retriever, a differentiable encoder and a chunked cross-attention mechanism to predict tokens based on an order of magnitude more data than what is typically consumed during training. We typically train RETRO from scratch, yet can also rapidly RETROfit pre-trained transformers with retrieval and still achieve good performance. Our work opens up new avenues for improving language models through explicit memory at unprecedented scale.",Gopher (280B),Unreleased,0.378,Confident,2024-12-09 20:45:43+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,6000000.0,"Table 1. ""Furthermore, we increase Gopher’s batch size from three to six million tokens per batch during training""",
Student of Games,Games,DeepMind,Industry,"Martin Schmid, Matej Moravcik, Neil Burch, Rudolf Kadlec, Josh Davidson, Kevin Waugh, Nolan Bard, Finbarr Timbers, Marc Lanctot, Zach Holland, Elnaz Davoodi, Alden Christianson, Michael Bowling",2021-12-06,Player of Games,https://arxiv.org/abs/2112.03178,13.0,SOTA improvement,"""Player of Games reaches strong performance in chess and Go, beats the strongest openly available agent in heads-up no-limit Texas hold'em poker (Slumbot), and defeats the state-of-the-art agent in Scotland Yard""",,,3.667927300468287e+22,,,"""We trained a version of AlphaZero using its original settings in chess and Go, e.g. , using 800 MCTS simulations during training, with 3500 concurrent actors each on a single TPUv4, for a total of 800k training steps. SOG was trained using a similar amount of TPU resources.""",,,,,,,,,,,"Games have a long history as benchmarks for progress in artificial intelligence. Approaches using search and learning produced strong performance across many perfect information games, and approaches using game-theoretic reasoning and learning demonstrated strong performance for specific imperfect information poker variants. We introduce Student of Games, a general-purpose algorithm that unifies previous approaches, combining guided search, self-play learning, and game-theoretic reasoning. Student of Games achieves strong empirical performance in large perfect and imperfect information games -- an important step towards truly general algorithms for arbitrary environments. We prove that Student of Games is sound, converging to perfect play as available computation and approximation capacity increases. Student of Games reaches strong performance in chess and Go, beats the strongest openly available agent in heads-up no-limit Texas hold'em poker, and defeats the state-of-the-art agent in Scotland Yard, an imperfect information game that illustrates the value of guided search, learning, and game-theoretic reasoning.",,Unreleased,,Speculative,2024-11-01 14:04:28+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
CTR-BERT,Recommendation,Amazon,Industry,"Aashiq Muhamed, Iman Keivanloo, Sujan Perera, James Mracek, Yi Xu, Qingjun Cui, Santosh Rajagopalan, Belinda Zeng, Trishul Chilimb
",2021-12-06,CTR-BERT: Cost-effective knowledge distillation for billion-parameter teacher models,https://neurips2021-nlp.github.io/papers/20/CameraReady/camera_ready_final.pdf,37.0,,,70000000.0,"
'CTR-BERTuses about 70 million parameters which can be trained on 8 A100 GPUs in less than a day (<1000
USD).
'",6.469632e+19,,,"flops = (8) * (312 * 10**12) * (24 * 3600) * (0.3)
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

'CTR-BERT
uses about 70 million parameters which can be trained on 8 A100 GPUs in less than a day (<1000
USD).
'",,"citations: '
Our CTR dataset is sampled from online traffic and is different from existing public CTR datasets in
that it comprises of text features in addition to numeric/categorical features.

We sample random train-test splits from 2020 online traffic. As

The train-test splits are sampled from 2021 online traffic and balanced the
same way as OOD data. The train set comprises 200 million data points and the test and validation
sets comprise 25 million points each'",,"more than 200M
citations: 'Our CTR dataset is sampled from online traffic and is different from existing public CTR datasets in
that it comprises of text features in addition to numeric/categorical features.

We sample random train-test splits from 2020 online traffic. As

The train-test splits are sampled from 2021 online traffic and balanced the
same way as OOD data. The train set comprises 200 million data points and the test and validation
sets comprise 25 million points each'",,,,NVIDIA A100,8.0,,"While pre-trained large language models (LLM) like BERT have achieved state-of-
the-art in several NLP tasks, their performance on tasks with additional grounding
e.g. with numeric and categorical features is less studied. In this paper, we study the
application of pre-trained LLM for Click-through-rate (CTR) prediction for product
advertisement in e-commerce. This is challenging because the model needs to a)
learn from language as well as tabular data features, b) maintain low-latency (<5 ms)
at inference time, and c) adapt to constantly changing advertisement distribution.
We first show that scaling the pre-trained language model to 1.5 billion parameters
significantly improves performance over conventional CTR baselines. We then
present CTR-BERT, a novel lightweight cache-friendly factorized model for CTR
prediction that consists of twin-structured BERT-like encoders for text with a
mechanism for late fusion for text and tabular features. We train the CTR-BERT
model using cross-architecture knowledge distillation (KD) and empirically study
the interaction between KD and distribution shift in this setting, by a) experimenting
with pre-training, distillation pre-finetuning and fine-tuning strategies b) factorizing
features based on their distribution shift time scales, that allows the model to
readily adapt and be re-trained. Finally, we show that CTR-BERT significantly
outperforms a traditional CTR baseline with a 2.3% relative ROC-AUC lift in
offline experiments and a 2% CTR lift in an online experiment",,,,Likely,2025-02-17 16:11:58+00:00,United States of America,,,,,,,,,
T-NLRv5,Language,Microsoft,Industry,,2021-12-03,Microsoft : Turing-NLRv5 achieves new performance milestones,https://www.marketscreener.com/quote/stock/MICROSOFT-CORPORATION-4835/news/Microsoft-Turing-NLRv5-achieves-new-performance-milestones-37207301/,,SOTA improvement,"Highest score at SuperGLUE leaderboard version 2.0 in terms of CB (CommitmentBank-Av. F1/Accuracy; together with Ernie 3.0) and ReCoRD (Reading Comprehsention with Commonsense Reasoning-F1/Accuracy)
https://super.gluebenchmark.com/leaderboard/ ",434000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 12:56:38+00:00,United States of America,,,,,,,,,
GPT-2-Medium+Pixelfly,Language,"Stanford University,SambaNova Systems, Inc,Peking University,Adobe,University at Buffalo","Academia,Industry,Academia,Industry,Academia","Tri Dao, Beidi Chen, Kaizhao Liang, Jiaming Yang, Zhao Song, Atri Rudra, Christopher Ré",2021-11-30,Pixelated Butterfly: Simple and Efficient Sparse training for Neural Network Models,https://arxiv.org/abs/2112.00029,69.0,,,203000000.0,,8.34e+20,,,,WikiText-103,"""We show training GPT-2-Small, Medium and its
Pixelfly model from scratch on a commonly used
NLP benchmarking dataset, wikiText-103.""",,,100.0,,,,,,"Overparameterized neural networks generalize well but are expensive to train. Ideally, one would like to reduce their computational cost while retaining their generalization benefits. Sparse model training is a simple and promising approach to achieve this, but there remain challenges as existing methods struggle with accuracy loss, slow training runtime, or difficulty in sparsifying all model components. The core problem is that searching for a sparsity mask over a discrete set of sparse matrices is difficult and expensive. To address this, our main insight is to optimize over a continuous superset of sparse matrices with a fixed structure known as products of butterfly matrices. As butterfly matrices are not hardware efficient, we propose simple variants of butterfly (block and flat) to take advantage of modern hardware. Our method (Pixelated Butterfly) uses a simple fixed sparsity pattern based on flat block butterfly and low-rank matrices to sparsify most network layers (e.g., attention, MLP). We empirically validate that Pixelated Butterfly is 3x faster than butterfly and speeds up training to achieve favorable accuracy--efficiency tradeoffs. On the ImageNet classification and WikiText-103 language modeling tasks, our sparse models train up to 2.5x faster than the dense MLP-Mixer, Vision Transformer, and GPT-2 medium with no drop in accuracy.",GPT-2-Medium+Pixelfly,Unreleased,,,2024-11-01 14:04:29+00:00,"United States of America,United States of America,China,United States of America,United States of America",,,,,,,,,
Quantized ADMM,Language,"Chinese University of Hong Kong (CUHK),Microsoft","Academia,Industry","Junhao Xu, Xie Chen, Shoukang Hu, Jianwei Yu, Xunying Liu, Helen Meng",2021-11-29,Low-bit Quantization of Recurrent Neural Network Language Models Using Alternating Direction Methods of Multipliers,https://arxiv.org/abs/2111.14836,9.0,,,,,,,,,,,,,50.0,,,,,,"The high memory consumption and computational costs of Recurrent neural network language models (RNNLMs) limit their wider application on resource constrained devices. In recent years, neural network quantization techniques that are capable of producing extremely low-bit compression, for example, binarized RNNLMs, are gaining increasing research interests. Directly training of quantized neural networks is difficult. By formulating quantized RNNLMs training as an optimization problem, this paper presents a novel method to train quantized RNNLMs from scratch using alternating direction methods of multipliers (ADMM). This method can also flexibly adjust the trade-off between the compression rate and model performance using tied low-bit quantization tables. Experiments on two tasks: Penn Treebank (PTB), and Switchboard (SWBD) suggest the proposed ADMM quantization achieved a model size compression factor of up to 31 times over the full precision baseline RNNLMs. Faster convergence of 5 times in model training over the baseline binarized RNNLM quantization was also obtained. Index Terms: Language models, Recurrent neural networks, Quantization, Alternating direction methods of multipliers.",Quantized ADMM,Unreleased,,Unknown,2024-09-09 02:42:47+00:00,"Hong Kong,China,United States of America",,,,,,,,,
Transformer LM + MinSen,Language,Chinese University of Hong Kong (CUHK),Academia,"Junhao Xu, Shoukang Hu, Jianwei Yu, Xunying Liu, Helen Meng",2021-11-29,Mixed Precision of Quantization of Transformer Language Models for Speech Recognition,https://arxiv.org/abs/2112.11540,11.0,,,,,,,,,,,,,,,,,,,"State-of-the-art neural language models represented by Transformers are becoming increasingly complex and expensive for practical applications. Low-bit deep neural network quantization techniques provides a powerful solution to dramatically reduce their model size. Current low-bit quantization methods are based on uniform precision and fail to account for the varying performance sensitivity at different parts of the system to quantization errors. To this end, novel mixed precision DNN quantization methods are proposed in this paper. The optimal local precision settings are automatically learned using two techniques. The first is based on a quantization sensitivity metric in the form of Hessian trace weighted quantization perturbation. The second is based on mixed precision Transformer architecture search. Alternating direction methods of multipliers (ADMM) are used to efficiently train mixed precision quantized DNN systems. Experiments conducted on Penn Treebank (PTB) and a Switchboard corpus trained LF-MMI TDNN system suggest the proposed mixed precision Transformer quantization techniques achieved model size compression ratios of up to 16 times over the full precision baseline with no recognition performance degradation. When being used to compress a larger full precision Transformer LM with more layers, overall word error rate (WER) reductions up to 1.7% absolute (18% relative) were obtained.",Transformer LM + MinSen,Unreleased,,Unknown,2024-09-09 02:43:22+00:00,"Hong Kong,China",,,,,,,,,
NÜWA,"Multimodal,Vision,Image generation,Video,Language","Microsoft Research,Peking University","Industry,Academia","Chenfei Wu, Jian Liang, Lei Ji, Fan Yang, Yuejian Fang, Daxin Jiang, Nan Duan",2021-11-24,NÜWA: Visual Synthesis Pre-training for Neural visUal World creAtion,https://arxiv.org/abs/2111.12417,258.0,SOTA improvement,"""NÜWA achieves state-of-the-art results on text-to-image generation, text-to-video generation, video prediction, etc""",870000000.0,Section 4.1,4.8384e+21,,,"From AI Tracker:
""Compute cost: End of Sec 4.1: ""We pre-train on 64 A100 GPUs for two weeks"". Info sheet from NVIDIA (https://www.nvidia.com/content/dam/en-zz/Solutions/Data-Center/a100/pdf/nvidia-a100-datasheet.pdf) gives single precision TensorFloat 32 performance of 156 TFLOPs/s. So we get 64 x 14 x 156 = 140,000 TFLOPs/s x days.""

Multiply by seconds/day and 30% utilization","Conceptual Captions (CC3M),Moments in Time,VATEX",,,"we first pre-train N  ̈UWA on three
datasets: Conceptual Captions [22] for text-to-image (T2I)
generation, which includes 2.9M text-image pairs, Mo-
ments in Time [26] for video prediction (V2V), which in-
cludes 727K videos, and VATEX dataset [43] for text-to-
video (T2V) generation, which includes 241K text-video
pairs.",,,,,,Self-supervised learning,"This paper presents a unified multimodal pre-trained model called NÜWA that can generate new or manipulate existing visual data (i.e., images and videos) for various visual synthesis tasks. To cover language, image, and video at the same time for different scenarios, a 3D transformer encoder-decoder framework is designed, which can not only deal with videos as 3D data but also adapt to texts and images as 1D and 2D data, respectively. A 3D Nearby Attention (3DNA) mechanism is also proposed to consider the nature of the visual data and reduce the computational complexity. We evaluate NÜWA on 8 downstream tasks. Compared to several strong baselines, NÜWA achieves state-of-the-art results on text-to-image generation, text-to-video generation, video prediction, etc. Furthermore, it also shows surprisingly good zero-shot capabilities on text-guided image and video manipulation tasks. Project repo is this https URL.",,Unreleased,,,2025-02-17 16:20:26+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,China",,,,,,,,,
Persia,Recommendation,"ETH Zurich,Kuaishou Technology","Academia,Industry","Xiangru Lian, Binhang Yuan, Xuefeng Zhu, Yulong Wang, Yongjun He, Honghuan Wu, Lei Sun, Haodong Lyu, Chengjun Liu, Xing Dong, Yiqiao Liao, Mingnan Luo, Congfei Zhang, Jingru Xie, Haonan Li, Lei Chen, Renjie Huang, Jianying Lin, Chengchun Shu, Xuezhong Qiu, Zhishan Liu, Dongying Kong, Lei Yuan, Hai Yu, Sen Yang, Ce Zhang, Ji Liu",2021-11-23,"Persia: An Open, Hybrid System Scaling Deep Learning-based Recommenders up to 100 Trillion Parameters",https://arxiv.org/abs/2111.05897,26.0,,,100000000000000.0,100 trillion,,,,,,,,,,,,NVIDIA V100,,,"Deep learning based models have dominated the current landscape of production recommender systems. Furthermore, recent years have witnessed an exponential growth of the model scale--from Google's 2016 model with 1 billion parameters to the latest Facebook's model with 12 trillion parameters. Significant quality boost has come with each jump of the model capacity, which makes us believe the era of 100 trillion parameters is around the corner. However, the training of such models is challenging even within industrial scale data centers. This difficulty is inherited from the staggering heterogeneity of the training computation--the model's embedding layer could include more than 99.99% of the total model size, which is extremely memory-intensive; while the rest neural network is increasingly computation-intensive. To support the training of such huge models, an efficient distributed training system is in urgent need. In this paper, we resolve this challenge by careful co-design of both the optimization algorithm and the distributed system architecture. Specifically, in order to ensure both the training efficiency and the training accuracy, we design a novel hybrid training algorithm, where the embedding layer and the dense neural network are handled by different synchronization mechanisms; then we build a system called Persia (short for parallel recommendation training system with hybrid acceleration) to support this hybrid training algorithm. Both theoretical demonstration and empirical study up to 100 trillion parameters have conducted to justified the system design and implementation of Persia. We make Persia publicly available (at this https URL) so that anyone would be able to easily train a recommender model at the scale of 100 trillion parameters.",,Unreleased,,Confident,2024-11-01 14:04:29+00:00,"Switzerland,China",,,,,,,,,
Florence,Vision,Microsoft,Industry,"Lu Yuan, Dongdong Chen, Yi-Ling Chen, Noel Codella, Xiyang Dai, Jianfeng Gao, Houdong Hu, Xuedong Huang, Boxin Li, Chunyuan Li, Ce Liu, Mengchen Liu, Zicheng Liu, Yumao Lu, Yu Shi, Lijuan Wang, JianFeng Wang, Bin Xiao, Zhen Xiao, Jianwei Yang, Michael Zeng, Luowei Zhou, Pengchuan Zhang",2021-11-22,Florence: A New Foundation Model for Computer Vision,https://arxiv.org/abs/2111.11432v1,758.0,"Historical significance,SOTA improvement",,893000000.0,"""Our Florence pretrained model has in total 893M parameters, including the language transformer with 256M parameters and the CoSwin-H transformer with 637M parameters.""",4.831e+22,,,"""The model takes 10 days to train on 512 NVIDIA A100 GPUs with 40GB memory per GPU.""
512 * 312 teraFLOPS * 10 days * 35% utilization = 4.831e22 FLOP",FLD-900M,"900 million image-text pairs curated from internet images and descriptions

""We leverage large quantities of image-text data available
publicly on the internet. Specifically, we construct a 900
million image-text-pair dataset, called FLD-900M (FLD
stands for FLorenceDataset), using a programmatic data
curation pipeline that processes around 3 billion Internet
images and their raw descriptions in parallel.  <..>The final form of the FLD-900M dataset consists of 900M images with 900M free-form texts (ranging from one word, phase to sentences), 9.7M unique queries, and 7.5B tokens in total.
",900000000.0,,,240.0,10 days on 512 A100 40GB,NVIDIA A100 SXM4 40 GB,512.0,Supervised,"Automated visual understanding of our diverse and open world demands computer vision models to generalize well with minimal customization for specific tasks, similar to human vision. Computer vision foundation models, which are trained on diverse, large-scale dataset and can be adapted to a wide range of downstream tasks, are critical for this mission to solve real-world computer vision applications. While existing vision foundation models such as CLIP, ALIGN, and Wu Dao 2.0 focus mainly on mapping images and textual representations to a cross-modal shared representation, we introduce a new computer vision foundation model, Florence, to expand the representations from coarse (scene) to fine (object), from static (images) to dynamic (videos), and from RGB to multiple modalities (caption, depth). By incorporating universal visual-language representations from Web-scale image-text data, our Florence model can be easily adapted for various computer vision tasks, such as classification, retrieval, object detection, VQA, image caption, video retrieval and action recognition. Moreover, Florence demonstrates outstanding performance in many types of transfer learning: fully sampled fine-tuning, linear probing, few-shot transfer and zero-shot transfer for novel images and objects. All of these properties are critical for our vision foundation model to serve general purpose vision tasks. Florence achieves new state-of-the-art results in majority of 44 representative benchmarks, e.g., ImageNet-1K zero-shot classification with top-1 accuracy of 83.74 and the top-5 accuracy of 97.18, 62.4 mAP on COCO fine tuning, 80.36 on VQA, and 87.8 on Kinetics-600.",,Unreleased,,Confident,2024-11-10 21:47:20+00:00,United States of America,,,,,,,,,True
BASIC-L,Vision,Google,Industry,"Hieu Pham, Zihang Dai, Golnaz Ghiasi, Kenji Kawaguchi, Hanxiao Liu, Adams Wei Yu, Jiahui Yu, Yi-Ting Chen, Minh-Thang Luong, Yonghui Wu, Mingxing Tan, Quoc V. Le",2021-11-19,Combined Scaling for Zero-shot Transfer Learning,https://arxiv.org/abs/2111.10050,166.0,SOTA improvement,"SOTA on ImageNet for a model that was not trained on ImageNet images:
""We present a combined scaling method – named BASIC – that achieves 85.7% top-1 accuracy on the ImageNet ILSVRC-2012 validation set without learning from any labeled ImageNet example. This accuracy
surpasses best-published similar models – CLIP and ALIGN – by 9.3%""",3070000000.0,2.4B image model + 670M text model,4.12e+22,,,"6.9k + 1k + 0.8k = 8.7k TPUv4 core-days for BASIC-L, per Table 8

Two cores per chip, and 275 teraflop/s per chip 
(https://cloud.google.com/tpu/docs/system-architecture-tpu-vm#tpu_v4)

275 teraflops * 8700/2 * 24 * 3600 * 0.4 (assumed utilization) = 8.3e22","JFT,ALIGN","For pretraining (Section 8), we use the JFT dataset. This dataset has been
used in previous publications (Zhai et al., 2021; Dosovitskiy et al., 2021; Kolesnikov et al., 2020), but it has been constantly expanded. The JFT version used in our experiments has 5B images, each of which can be associated to one or multiple labels out of 29K possible classes.


""Starting from the ALIGN dataset, which contains 1.7B weakly-aligned image-text pairs (Jia et al., 2021), we collect 5B more image-text pairs, hence expanding the dataset size by roughly 4 times. We acquire
these 5B image-text pairs from the JFT dataset""",6700000000.0,6.7B image-text pairs,,,,Google TPU v4,,,"We present a combined scaling method - named BASIC - that achieves 85.7% top-1 accuracy on the ImageNet ILSVRC-2012 validation set without learning from any labeled ImageNet example. This accuracy surpasses best published similar models - CLIP and ALIGN - by 9.3%. Our BASIC model also shows significant improvements in robustness benchmarks. For instance, on 5 test sets with natural distribution shifts such as ImageNet-{A,R,V2,Sketch} and ObjectNet, our model achieves 84.3% top-1 average accuracy, only a small drop from its original ImageNet accuracy. To achieve these results, we scale up the contrastive learning framework of CLIP and ALIGN in three dimensions: data size, model size, and batch size. Our dataset has 6.6B noisy image-text pairs, which is 4x larger than ALIGN, and 16x larger than CLIP. Our largest model has 3B weights, which is 3.75x larger in parameters and 8x larger in FLOPs than ALIGN and CLIP. Finally, our batch size is 65536 which is 2x more than CLIP and 4x more than ALIGN. We encountered two main challenges with the scaling rules of BASIC. First, the main challenge with implementing the combined scaling rules of BASIC is the limited memory of accelerators, such as GPUs and TPUs. To overcome the memory limit, we propose two simple methods which make use of gradient checkpointing and model parallelism. Second, while increasing the dataset size and the model size has been the defacto method to improve the performance of deep learning models like BASIC, the effect of a large contrastive batch size on such contrastive-trained image-text models is not well-understood. To shed light on the benefits of large contrastive batch sizes, we develop a theoretical framework which shows that larger contrastive batch sizes lead to smaller generalization gaps for image-text models such as BASIC.",,Unreleased,,Likely,2025-02-17 16:21:03+00:00,United States of America,,,,,,,,"65536, but these are image-text pairs not tokens
""For the batch size, we use 65536 contrastive
learning examples per minibatch""",
Swin Transformer V2 (SwinV2-G),"Vision,Video",Microsoft Research Asia,Industry,"Ze Liu, Han Hu, Yutong Lin, Zhuliang Yao, Zhenda Xie, Yixuan Wei, Jia Ning, Yue Cao, Zheng Zhang, Li Dong, Furu Wei, Baining Guo",2021-11-18,Swin Transformer V2: Scaling Up Capacity and Resolution,https://arxiv.org/abs/2111.09883v2,1368.0,"SOTA improvement,Highly cited","""It set new performance records on 4 representative vision tasks, including ImageNet-V2
image classification, COCO object detection, ADE20K semantic segmentation, and Kinetics-400 video action classification.""",3000000000.0,,1.1e+21,,,"trained on ""<0.5k"" TPUv3 core-days per Table 2 (not trained on TPUs, this is a comparison with other papers)

A core is 123/2 teraflops

500 core-days
= 500 * 123/2 trillion * 24 * 3600 * 0.4 utilization
~= 1.1e21",ImageNet21k,"""We conduct experiments on ImageNet-1K image classification (V1 and V2) [18, 55], COCO object detection [44], and ADE20K semantic segmentation [85]. For the 3B model experiments, we also report the accuracy on Kinetics-400 video action recognition [37].""

• Image classification. ImageNet-1K V1 and V2 val are
used [18,55] for evaluation. ImageNet-22K [18] which
has 14M images and 22K categories is optionally employed for pre-training. For the pre-training our largest
model SwinV2-G, a privately collected ImageNet22K-ext dataset with 70 million images is used.",,,,,,NVIDIA A100 SXM4 40 GB,,,"Large-scale NLP models have been shown to significantly improve the performance on language tasks with no signs of saturation. They also demonstrate amazing few-shot capabilities like that of human beings. This paper aims to explore large-scale models in computer vision. We tackle three major issues in training and application of large vision models, including training instability, resolution gaps between pre-training and fine-tuning, and hunger on labelled data. Three main techniques are proposed: 1) a residual-post-norm method combined with cosine attention to improve training stability; 2) A log-spaced continuous position bias method to effectively transfer models pre-trained using low-resolution images to downstream tasks with high-resolution inputs; 3) A self-supervised pre-training method, SimMIM, to reduce the needs of vast labeled images. Through these techniques, this paper successfully trained a 3 billion-parameter Swin Transformer V2 model, which is the largest dense vision model to date, and makes it capable of training with images of up to 1,536×1,536 resolution. It set new performance records on 4 representative vision tasks, including ImageNet-V2 image classification, COCO object detection, ADE20K semantic segmentation, and Kinetics-400 video action classification. Also note our training is much more efficient than that in Google's billion-level visual models, which consumes 40 times less labelled data and 40 times less training time. Code is available at \url{this https URL}.",,Open weights (unrestricted),,Confident,2025-02-03 17:49:19+00:00,China,,,,,,,,,
DeBERTaV3large,Language,Microsoft Research,Industry,"Pengcheng He, Jianfeng Gao, Weizhu Chen",2021-11-18,DeBERTaV3: Improving DeBERTa using ELECTRA-Style Pre-Training with Gradient-Disentangled Embedding Sharing,https://arxiv.org/abs/2111.09543,,,,418000000.0,"from HF ""The DeBERTa V3 large model comes with 24 layers and a hidden size of 1024 . Its total parameter number is 418M since we use a vocabulary containing 128K tokens which introduce 131M parameters in the Embedding layer.  This model was trained using the 160GB data as DeBERTa V2.""",1.07008e+20,,,6ND = 6* 42666666667*418000000 = 1.07008e+20,"Wikipedia,OPENWEBTEXT,CC-Stories,CC-News,BookCorpus (BooksCorpus, Toronto Book Corpus)",,42666666667.0,"""We train those models with 160GB data"" 
from Table 8
Wiki+Book 16GB
OpenWebText 38GB
Stories  31GB
CC-News 76GB
""All the models are trained for 500,000 steps with a batch size of 8192 and warming up steps of 10,000.""

160GB* 200M words per GB * 4/3 tokens per English word ~ 42666666667

Batch Size 8k
Max Steps 500k
sequence length unknown",,,,,,,"This paper presents a new pre-trained language model, DeBERTaV3, which improves the original DeBERTa model by replacing mask language modeling (MLM) with replaced token detection (RTD), a more sample-efficient pre-training task. Our analysis shows that vanilla embedding sharing in ELECTRA hurts training efficiency and model performance. This is because the training losses of the discriminator and the generator pull token embeddings in different directions, creating the ""tug-of-war"" dynamics. We thus propose a new gradient-disentangled embedding sharing method that avoids the tug-of-war dynamics, improving both training efficiency and the quality of the pre-trained model. We have pre-trained DeBERTaV3 using the same settings as DeBERTa to demonstrate its exceptional performance on a wide range of downstream natural language understanding (NLU) tasks. Taking the GLUE benchmark with eight tasks as an example, the DeBERTaV3 Large model achieves a 91.37% average score, which is 1.37% over DeBERTa and 1.91% over ELECTRA, setting a new state-of-the-art (SOTA) among the models with a similar structure. Furthermore, we have pre-trained a multi-lingual model mDeBERTa and observed a larger improvement over strong baselines compared to English models. For example, the mDeBERTa Base achieves a 79.8% zero-shot cross-lingual accuracy on XNLI and a 3.6% improvement over XLM-R Base, creating a new SOTA on this benchmark. We have made our pre-trained models and inference code publicly available at this https URL.",,Open weights (unrestricted),,Likely,2024-11-07 20:39:48+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
ViT-G/14 (LiT),Vision,Google,Industry,"Xiaohua Zhai, Xiao Wang, Basil Mustafa, Andreas Steiner, Daniel Keysers, Alexander Kolesnikov, Lucas Beyer",2021-11-15,Zero-Shot Transfer with Locked-image Text Tuning,https://arxiv.org/abs/2111.07991v3,461.0,SOTA improvement,"""For example, it achieves 82.5% accuracy on the challenging ObjectNet test set [1], outperforming the previous state-of-the-art
method [46] by 10.2%.""",3005000000.0,Table 7,,,,"They start with the ViT-G/14 image model and train their own text model. ViT-G/14 is 3.4e21. 

They also say ""We use 128 TPU cores by default for the above experiments, and 256 TPU cores for our best run with 18 billion seen image-text pairs"" which may be relevant.","Conceptual Captions 12M (CC12M),YFCC-100M,Unspecified unreleased","CC12M, YFCC100m, and their novel dataset:
""Our dataset. We collect 4 billion image and alt-text
pairs following the same process as ALIGN [31], with the
same image-based filtering but simpler text-based filtering.
Appendix L shows that reducing text filtering does not harm
performance. To avoid misleading evaluation results, we
remove from our dataset near-duplicate images of all splits
from all datasets we evaluate on. We do not consider the
creation of our dataset a main contribution of this paper; we
just simplify the data collection process in ALIGN [31] to
demonstrate the efficacy of our methods at scale.""",4000000000.0,"Largest dataset is ""4 billion image and alt-text pairs"". This is rounded down slightly; the other datasets are much smaller.",4.5,,,Google TPU v3,,,"This paper presents contrastive-tuning, a simple method employing contrastive training to align image and text models while still taking advantage of their pre-training. In our empirical study we find that locked pre-trained image models with unlocked text models work best. We call this instance of contrastive-tuning ""Locked-image Tuning"" (LiT), which just teaches a text model to read out good representations from a pre-trained image model for new tasks. A LiT model gains the capability of zero-shot transfer to new vision tasks, such as image classification or retrieval. The proposed LiT is widely applicable; it works reliably with multiple pre-training methods (supervised and unsupervised) and across diverse architectures (ResNet, Vision Transformers and MLP-Mixer) using three different image-text datasets. With the transformer-based pre-trained ViT-g/14 model, the LiT model achieves 85.2% zero-shot transfer accuracy on the ImageNet test set, and 82.5% on the challenging out-of-distribution ObjectNet test set.",,,,Confident,2024-11-01 14:03:45+00:00,United States of America,ViT-G/14,,,,,,,,
EquiDock,Biology,"Massachusetts Institute of Technology (MIT),ETH Zurich,Tencent","Academia,Academia,Industry","Octavian-Eugen Ganea, Xinyuan Huang, Charlotte Bunne, Yatao Bian, Regina Barzilay, Tommi Jaakkola, Andreas Krause",2021-11-15,Independent SE(3)-Equivariant Models for End-to-End Rigid Protein Docking,https://arxiv.org/abs/2111.07786,133.0,,"""Empirically, we achieve significant running time improvements and often outperform existing docking software despite not relying on heavy candidate sampling, structure refinement, or templates.""

did not have best results, per Table 1",,,1.08e+19,,,"Training details here:

https://docs.nvidia.com/bionemo-framework/latest/models/equidock.html

32 A100s can do 30 epochs per hour on the DIPS dataset. Equidock was trained on 30 epochs on DIPS and 150 epochs on DB5.5. DIPS is about 100x bigger, so the large majority of compute was DIPS.

32 A100-hours = 312 teraflops * 32 * 3600 * 0.3 
~= 1.08e19","DIPS,DB5.5","""We leverage the following datasets: Docking Benchmark 5.5 (DB5.5) (Vreven et al.,
2015) and Database of Interacting Protein Structures (DIPS) (Townshend et al., 2019). DB5.5 is
a gold standard dataset in terms of data quality, but contains only 253 structures. DIPS is a larger
protein complex structures dataset mined from the Protein Data Bank (Berman et al., 2000) and
tailored for rigid body docking. Datasets information is given in Appendix D""",39938.00000000003,"DIPS Dataset:
39,937 protein pairs

Total data points = 39,937 = 3.9937e4",30.0,,,,,,"Protein complex formation is a central problem in biology, being involved in most of the cell's processes, and essential for applications, e.g. drug design or protein engineering. We tackle rigid body protein-protein docking, i.e., computationally predicting the 3D structure of a protein-protein complex from the individual unbound structures, assuming no conformational change within the proteins happens during binding. We design a novel pairwise-independent SE(3)-equivariant graph matching network to predict the rotation and translation to place one of the proteins at the right docked position relative to the second protein. We mathematically guarantee a basic principle: the predicted complex is always identical regardless of the initial locations and orientations of the two structures. Our model, named EquiDock, approximates the binding pockets and predicts the docking poses using keypoint matching and alignment, achieved through optimal transport and a differentiable Kabsch algorithm. Empirically, we achieve significant running time improvements and often outperform existing docking software despite not relying on heavy candidate sampling, structure refinement, or templates.",,Open weights (unrestricted),,Likely,2025-02-17 16:21:42+00:00,"United States of America,Switzerland,China",,,,,,,,,
KoGPT,Language,Kakao,Industry,"Ildoo Kim, Gunsoo Han, Jiyeon Ham, Woonhyuk Baek",2021-11-12,KoGPT: KakaoBrain Korean(hangul) Generative Pre-trained Transformer,https://github.com/kakaobrain/kogpt,,,"competitive with HyperCLOVA on benchmarks, per results table",6166502400.0,"from https://huggingface.co/kakaobrain/kogpt

possibly has 30B parameters based on this source: (would be a different version)

https://post.naver.com/viewer/postView.naver?volumeNo=34605062&memberNo=35753905&vType=VERTICAL",,,,,ryan,"""KakaoBrain KoGPT was trained on ryan dataset, a dataset known to contain profanity, lewd, political changed, and other harsh language.""

Not sure if that's the only dataset. Couldn't find any info on ""ryan"".

https://huggingface.co/kakaobrain/kogpt",,,,,,,,,"""Kakao, the operator of South Korea’s No. 1 messenger app KakaoTalk, said Friday that it plans to expand its vertical Korean language-based artificial intelligence services based on an AI language model called KoGPT this year.""

https://www.koreaherald.com/view.php?ud=20230210000564",,Open weights (non-commercial),,Speculative,2024-09-09 02:50:59+00:00,Korea (Republic of),,,,,,,,,
Masked Autoencoders ViT-H,Vision,Facebook AI Research,Industry,"Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Dollár, Ross Girshick",2021-11-11,Masked Autoencoders Are Scalable Vision Learners,https://arxiv.org/abs/2111.06377,5980.0,"Highly cited,SOTA improvement","""By fine-tuning with a 448 size, we achieve 87.8% accuracy, using only IN1K data. The previous best accuracy, among all methods using only IN1K data, is 87.1% (512 size)... We improve over the state-of-the-art by a nontrivial margin in the highly competitive benchmark of IN1K (no external data). Our result is based on vanilla ViT, and we expect advanced networks will perform better.""

See Table 3",632000000.0,"Three models:
ViT-B (86M), ViT-L (304M), ViT-H (632M)",4.6e+20,,,"128 TPU-v3 cores trained for 1600 epochs. Times are given for 800 epochs in Table 2; largest model (ViT-H) took 34.5 hrs for 800.
128 TPU-v3 cores * 0.5 chips/core * 34.5 hours * 2 * 1.23E+14 FLOP/sec / chip * 3600 sec/hour  * 40% utilization = 7.84e20 FLOP

Note that the operations counting method disagrees:
2 × 632000000 connections × 3 × 1281167 training examples × 1600 of epochs  = 7.8e18 FLOP

Manual calculation with `calflops` package roughly agrees with hardware-time calculation: 
286.21 GFLOPS/observation * 1281167 observations * 1600 epochs = 5.86e20 FLOP

See reproduction here: https://colab.research.google.com/drive/1KCsmrfPzT9BgGO_YQthnz4oP3QRqbw5o?usp=sharing

Weighting three estimates equally:
(7.84e20 + 7.8e18 + 5.86e20)/3 = 4.6e20",ImageNet-1k,,1281167.0,,1600.0,69.0,"Table 2 gives wall times for training ViT-L and ViT-H to 800 epochs; later it is stated that the systems are each trained for 1600 epochs.
(34.5 hours / 800 epochs) * 1600 epochs = 69 hours",,,Self-supervised learning,"This paper shows that masked autoencoders (MAE) are scalable self-supervised learners for computer vision. Our MAE approach is simple: we mask random patches of the input image and reconstruct the missing pixels. It is based on two core designs. First, we develop an asymmetric encoder-decoder architecture, with an encoder that operates only on the visible subset of patches (without mask tokens), along with a lightweight decoder that reconstructs the original image from the latent representation and mask tokens. Second, we find that masking a high proportion of the input image, e.g., 75%, yields a nontrivial and meaningful self-supervisory task. Coupling these two designs enables us to train large models efficiently and effectively: we accelerate training (by 3x or more) and improve accuracy. Our scalable approach allows for learning high-capacity models that generalize well: e.g., a vanilla ViT-Huge model achieves the best accuracy (87.8%) among methods that use only ImageNet-1K data. Transfer performance in downstream tasks outperforms supervised pre-training and shows promising scaling behavior.",,Open weights (non-commercial),,Speculative,2025-03-06 20:00:00+00:00,United States of America,ViT-Huge/14,,"UNCERTAIN
128 TPU-v3 cores trained for 1600 epochs. Times are given for 800 epochs in Table 2; largest model (ViT-H) took 34.5 hrs for 800.
128 TPU-v3 cores * 0.5 chips/core * 34.5 hours * 2 * 1.23E+14 FLOP/sec / chip * 3600 sec/hour  * 40% utilization = 7.84e20 FLOP

Note that the operations counting method disagrees:
2 × 632000000 connections × 3 × 1281167 training examples × 1600 of epochs  = 7.8e18 FLOP
",,,,,,
Japanese dialog transformers,Language,NTT Communication Science Laboratories,Industry,"Hiroaki Sugiyama, Masahiro Mizukami, Tsunehiro Arimoto, Hiromi Narimatsu, Yuya Chiba, Hideharu Nakajima, Toyomi Meguro",2021-11-09,Empirical Analysis of Training Strategies of Transformer-based Japanese Chit-chat Systems,https://arxiv.org/abs/2109.05217,43.0,,,1600000000.0,"""We examined the improvement in model size in detail by considering four model sizes: 0.35B, 0.7B, 1.1B, and 1.6B parameters""",,,,,,,2100000000.0,"[Pairs of text]

""We obtained 2.1 billion (521 GB) pairs by this method. The average number of utterances in the input context was 2.913, and the average number of characters was 62.3 for the input context and 20.3 for the target utterance""",,,,,,,"In recent years, several high-performance conversational systems have been proposed based on the Transformer encoder-decoder model. Although previous studies analyzed the effects of the model parameters and the decoding method on subjective dialogue evaluations with overall metrics, they did not analyze how the differences of fine-tuning datasets affect on user's detailed impression. In addition, the Transformer-based approach has only been verified for English, not for such languages with large inter-language distances as Japanese. In this study, we develop large-scale Transformer-based Japanese dialogue models and Japanese chit-chat datasets to examine the effectiveness of the Transformer-based approach for building chit-chat dialogue systems. We evaluated and analyzed the impressions of human dialogues in different fine-tuning datasets, model parameters, and the use of additional information.",,Open weights (non-commercial),,,2024-10-01 14:01:24+00:00,Japan,,,,,,,,,
GPT-2 (AMPS),"Mathematics,Language",University of California (UC) Berkeley,Academia,"Dan Hendrycks, Collin Burns, Saurav Kadavath, Akul Arora, Steven Basart, Eric Tang, Dawn Song, Jacob Steinhardt",2021-11-08,Measuring Mathematical Problem Solving With the MATH Dataset,https://arxiv.org/abs/2103.03874,,,,1500000.0,,,,,,Auxiliary Mathematics Problems and Solutions (AMPS),,,,,24.0,"Models are trained with 8 A100 GPUs, each requiring less than a day. Unless otherwise specified, for GPT-2 we use the default HuggingFace (Wolf et al., 2020) generation parameters, except that we use beam search.",NVIDIA A100,8.0,,"Many intellectual endeavors require mathematical problem solving, but this skill remains beyond the capabilities of computers. To measure this ability in machine learning models, we introduce MATH, a new dataset of 12,500 challenging competition mathematics problems. Each problem in MATH has a full step-by-step solution which can be used to teach models to generate answer derivations and explanations. To facilitate future research and increase accuracy on MATH, we also contribute a large auxiliary pretraining dataset which helps teach models the fundamentals of mathematics. Even though we are able to increase accuracy on MATH, our results show that accuracy remains relatively low, even with enormous Transformer models. Moreover, we find that simply increasing budgets and model parameter counts will be impractical for achieving strong mathematical reasoning if scaling trends continue. While scaling Transformers is automatically solving most other text-based tasks, scaling is not currently solving MATH. To have more traction on mathematical problem solving we will likely need new algorithmic advancements from the broader research community.",,,,Speculative,2024-12-02 15:25:07+00:00,United States of America,GPT-2 (1.5B),6.46631424e+19,8*24*3600*311.84*10^12*0.3=64663142400000000000,,,,,,
GPT2+CoreLM+Fine-Tuning,Language,Aristotle University of Thessaloniki,Academia,"Nikolaos Stylianou, Ioannis Vlahavas",2021-11-04,CoreLM: Coreference-aware Language Model Fine-Tuning,https://arxiv.org/abs/2111.02687,2.0,,,132000000.0,,3.17e+16,,,,,,,,10.0,,,,,,"Language Models are the underpin of all modern Natural Language Processing (NLP) tasks. The introduction of the Transformers architecture has contributed significantly into making Language Modeling very effective across many NLP task, leading to significant advancements in the field. However, Transformers come with a big computational cost, which grows quadratically with respect to the input length. This presents a challenge as to understand long texts requires a lot of context. In this paper, we propose a Fine-Tuning framework, named CoreLM, that extends the architecture of current Pretrained Language Models so that they incorporate explicit entity information. By introducing entity representations, we make available information outside the contextual space of the model, which results in a better Language Model for a fraction of the computational cost. We implement our approach using GPT2 and compare the fine-tuned model to the original. Our proposed model achieves a lower Perplexity in GUMBY and LAMBDADA datasets when compared to GPT2 and a fine-tuned version of GPT2 without any changes. We also compare the models' performance in terms of Accuracy in LAMBADA and Children's Book Test, with and without the use of model-created coreference annotations.",GPT2+CoreLM+Fine-Tuning,Unreleased,,,2024-09-09 03:03:24+00:00,Greece,,,,,,,,,
CodeT5-base,Language,"Salesforce,Nanyang Technological University","Industry,Academia","Yue Wang, Weishi Wang, Shafiq Joty, Steven C.H. Hoi",2021-11-01,CodeT5: Identifier-aware Unified Pre-trained Encoder-Decoder Models for Code Understanding and Generation,https://aclanthology.org/2021.emnlp-main.685/,1211.0,SOTA improvement,"""Extensive experiments show that CodeT5 yields state-of-the-art results on the fourteen sub-tasks in CodeXGLUE.""",220000000.0,"""We build CodeT5 based on Huggingface’s T5 (Raffel et al., 2020) PyTorch implementation and employ two sizes of CodeT5-small (60M) and CodeT5-base (220M)""",1.56e+21,,,"""We pre-train the model with the denoising objective for 100 epochs and bimodal dual training for further 50 epochs on a cluster of 16 NVIDIA A100 GPUs with 40G memory. The total training time for CodeT5-small and CodeT5- base is 5 and 12 days, respectively""

16 * 312 teraFLOP/s * 12 * 24 * 3600 * 0.3 (utilization assumption) = 1.56e21","CodeSearchNet,BigQuery","""We follow Feng et al. (2020) to employ CodeSearchNet (Husain et al., 2019) to pre-train CodeT5, which consists of six PLs with both unimodal and bimodal data. Apart from that, we additionally collect two datasets of C/CSharp from
BigQuery1 to ensure that all downstream tasks have overlapped PLs with the pre-training data. In total, we employ around 8.35 million instances for pretraining""",,"""In total, we employ around 8.35 million instances for pretraining"" 
Instances meaning code snippets/examples, not tokens.",150.0,288.0,"""The total training time for CodeT5-small and CodeT5- base is 5 and 12 days, respectively""",NVIDIA A100,,,"""Pre-trained models for Natural Languages (NL) like BERT and GPT have been recently shown to transfer well to Programming Languages (PL) and largely benefit a broad set of code-related tasks. Despite their success, most current methods either rely on an encoder-only (or decoder-only) pre-training that is suboptimal for generation (resp. understanding) tasks or process the code snippet in the same way as NL, neglecting the special characteristics of PL such as token types. We present CodeT5, a unified pre-trained encoder-decoder Transformer model that better leverages the code semantics conveyed from the developer-assigned identifiers. Our model employs a unified framework to seamlessly support both code understanding and generation tasks and allows for multi-task learning. Besides, we propose a novel identifier-aware pre-training task that enables the model to distinguish which code tokens are identifiers and to recover them when they are masked. Furthermore, we propose to exploit the user-written code comments with a bimodal dual generation task for better NL-PL alignment. Comprehensive experiments show that CodeT5 significantly outperforms prior methods on understanding tasks such as code defect detection and clone detection, and generation tasks across various directions including PL-NL, NL-PL, and PL-PL. Further analysis reveals that our model can better capture semantic information from code. Our code and pre-trained models are released at https://github.com/salesforce/CodeT5.""",,Open weights (unrestricted),,Likely,2025-02-17 16:34:58+00:00,"United States of America,Singapore",,,,,,,,,
Projected GAN,Image generation,Heidelberg University,Academia,"Axel Sauer, Kashyap Chitta, Jens Müller, Andreas Geiger",2021-11-01,Projected GANs Converge Faster,https://proceedings.neurips.cc/paper/2021/hash/9219adc5c42107c4911e249155320648-Abstract.html,207.0,SOTA improvement,"""It is further compatible with resolutions of up to one Megapixel and advances the state-of-the-art Fréchet Inception Distance (FID) on twenty-two benchmark datasets""",,Possibly calculable from Appendix Table 8,1.05e+19,,,"""With this setting, each experiment takes roughly 100-200 GPU hours on a NVIDIA V100,
for more details we refer to the appendix.""

""We conduct our experiments on an internal cluster with several nodes, each with up to 8 Quadro RTX
6000 or NVIDIA V100 using PyTorch 1.7.1 and CUDA 11.0.""

In appendix table 7, takes 10.1 seconds per 1k images on 8 Quadro RTX 6000s. Longest training run for Projected GAN appears to be in Figure 4 (left), at 14M images, though this is overtrained and the largest checkpoint used for evaluations was 10M.
10M images * 10.1 s/1000 images * 8 * 3.26e13 FLOP/s * 0.4 = 1.05e19",,They experiment with 22 image datasets. Largest appears to be LSUN-Bedroom at 3M images.,3000000.0,They experiment with 22 image datasets. Largest appears to be LSUN-Bedroom at 3M images.,,,,"NVIDIA V100,NVIDIA Quadro RTX 6000",,,"Generative Adversarial Networks (GANs) produce high-quality images but are
challenging to train. They need careful regularization, vast amounts of compute,
and expensive hyper-parameter sweeps. We make significant headway on these issues by projecting generated and real samples into a fixed, pretrained feature space.
Motivated by the finding that the discriminator cannot fully exploit features from
deeper layers of the pretrained model, we propose a more effective strategy that
mixes features across channels and resolutions. Our Projected GAN improves image quality, sample efficiency, and convergence speed. It is further compatible with
resolutions of up to one Megapixel and advances the state-of-the-art Fréchet Inception Distance (FID) on twenty-two benchmark datasets. Importantly, Projected
GANs match the previously lowest FIDs up to 40 times faster, cutting the wall-clock
time from 5 days to less than 3 hours given the same computational resources.",,,,Confident,2025-02-17 16:35:18+00:00,Germany,,,,,,,,,
S4,Language,Stanford University,Academia,"Albert Gu, Karan Goel, Christopher Ré",2021-10-31,Efficiently Modeling Long Sequences with Structured State Spaces,https://arxiv.org/abs/2111.00396,1058.0,SOTA improvement,"""S4 achieves strong empirical results across a diverse range of established benchmarks, including... SoTA on every task from the Long Range Arena benchmark""",249000000.00000003,,6e+20,,,,WikiText-103,,,,509.02,,,,,,"A central goal of sequence modeling is designing a single principled model that can address sequence data across a range of modalities and tasks, particularly on long-range dependencies. Although conventional models including RNNs, CNNs, and Transformers have specialized variants for capturing long dependencies, they still struggle to scale to very long sequences of 10000 or more steps. A promising recent approach proposed modeling sequences by simulating the fundamental state space model (SSM) \( x'(t) = Ax(t) + Bu(t), y(t) = Cx(t) + Du(t) \), and showed that for appropriate choices of the state matrix \( A \), this system could handle long-range dependencies mathematically and empirically. However, this method has prohibitive computation and memory requirements, rendering it infeasible as a general sequence modeling solution. We propose the Structured State Space sequence model (S4) based on a new parameterization for the SSM, and show that it can be computed much more efficiently than prior approaches while preserving their theoretical strengths. Our technique involves conditioning \( A \) with a low-rank correction, allowing it to be diagonalized stably and reducing the SSM to the well-studied computation of a Cauchy kernel. S4 achieves strong empirical results across a diverse range of established benchmarks, including (i) 91\% accuracy on sequential CIFAR-10 with no data augmentation or auxiliary losses, on par with a larger 2-D ResNet, (ii) substantially closing the gap to Transformers on image and language modeling tasks, while performing generation 60× faster (iii) SoTA on every task from the Long Range Arena benchmark, including solving the challenging Path-X task of length 16k that all prior work fails on, while being as efficient as all competitors.",S4,Open weights (unrestricted),,,2024-11-01 14:03:45+00:00,United States of America,,,,,,,,,
EfficientZero,Games,"Tsinghua University,University of California (UC) Berkeley,Shanghai Qi Zhi institute","Academia,Academia","Weirui Ye, Shaohuai Liu, Thanard Kurutach, Pieter Abbeel, Yang Gao",2021-10-30,Mastering Atari Games with Limited Data,https://arxiv.org/abs/2111.00210,184.0,SOTA improvement,"""Our method is 176% and 163% better
than the previous SoTA performance, in mean and median human normalized score respectively""",,,,,,"""Our implementation is computationally friendly. To train an Atari agent for 100k steps, it only needs 4 GPUs to train 7 hours.""",,,,,,,,,,,"Reinforcement learning has achieved great success in many applications. However, sample efficiency remains a key challenge, with prominent methods requiring millions (or even billions) of environment steps to train. Recently, there has been significant progress in sample efficient image-based RL algorithms; however, consistent human-level performance on the Atari game benchmark remains an elusive goal. We propose a sample efficient model-based visual RL algorithm built on MuZero, which we name EfficientZero. Our method achieves 194.3% mean human performance and 109.0% median performance on the Atari 100k benchmark with only two hours of real-time game experience and outperforms the state SAC in some tasks on the DMControl 100k benchmark. This is the first time an algorithm achieves super-human performance on Atari games with such little data. EfficientZero's performance is also close to DQN's performance at 200 million frames while we consume 500 times less data. EfficientZero's low sample complexity and high performance can bring RL closer to real-world applicability. We implement our algorithm in an easy-to-understand manner and it is available at this https URL. We hope it will accelerate the research of MCTS-based RL algorithms in the wider community.",,,,Unknown,2024-11-01 14:04:08+00:00,"China,United States of America,China",,,,,,,,,
Scatterbrain,Language,"Stanford University,Adobe,University at Buffalo","Academia,Industry,Academia","Beidi Chen, Tri Dao, Eric Winsor, Zhao Song, Atri Rudra, Christopher Ré",2021-10-28,Scatterbrain: Unifying Sparse and Low-rank Attention Approximation,https://arxiv.org/abs/2110.15343,104.0,,,,,,,,,WikiText-103,,,,30.0,,,,,,"Recent advances in efficient Transformers have exploited either the sparsity or low-rank properties of attention matrices to reduce the computational and memory bottlenecks of modeling long sequences. However, it is still challenging to balance the trade-off between model quality and efficiency to perform a one-size-fits-all approximation for different tasks. To better understand this trade-off, we observe that sparse and low-rank approximations excel in different regimes, determined by the softmax temperature in attention, and sparse + low-rank can outperform each individually. Inspired by the classical robust-PCA algorithm for sparse and low-rank decomposition, we propose Scatterbrain, a novel way to unify sparse (via locality sensitive hashing) and low-rank (via kernel feature map) attention for accurate and efficient approximation. The estimation is unbiased with provably low error. We empirically show that Scatterbrain can achieve 2.1x lower error than baselines when serving as a drop-in replacement in BigGAN image generation and pre-trained T2T-ViT. On a pre-trained T2T Vision transformer, even without fine-tuning, Scatterbrain can reduce 98% of attention memory at the cost of only 1% drop in accuracy. We demonstrate Scatterbrain for end-to-end training with up to 4 points better perplexity and 5 points better average accuracy than sparse or low-rank efficient transformers on language modeling and long-range-arena tasks.",Scatterbrain,Unreleased,,Unknown,2024-11-01 14:03:45+00:00,"United States of America,United States of America,United States of America",,,,,,Scatterbrain,,,
Eve,Biology,"Harvard Medical School,University of Oxford","Academia,Academia","Jonathan Frazer, Pascal Notin, Mafalda Dias, Aidan Gomez, Joseph K. Min, Kelly Brock, Yarin Gal and Debora S. Marks",2021-10-27,Disease variant prediction with deep generative models of evolutionary data,https://www.nature.com/articles/s41586-021-04043-8#change-history,411.0,SOTA improvement,"""Our model EVE (evolutionary model of variant effect) not only outperforms computational approaches that rely on labelled data but also performs on par with, if not better than, predictions from high-throughput experiments, which are increasingly used as evidence for variant classification"" [Abstract] - SOTA improvement for very specific task",15010300.0,"""The Bayesian VAE architecture in EVE is comprised of a symmetric 3-layer encoder & decoder architecture (with 2,000-1,000-300 and 300-1,000-2,000 units respectively) and a latent space of dimension 50 [...] We use a single set of parameters for the encoder (ϕp) and learn a fully-factorized gaussian distribution over the weights of the decoder (θp)""
They train a new VAE for each protein, and it doesn't seem like they trim the input sequence length, so the largest model will be the one trained for the largest input protein. Supplementary materials 1 gives statistics for each protein; the longest is 5202, which would indicate a network of size 15,010,300",,,,,UniRef100,"""a Bayesian VAE was trained on a multiple sequence alignment retrieved by searching approximately 250 million protein sequences in UniRef""",,,,,,,,,"Quantifying the pathogenicity of protein variants in human disease-related genes would have a marked effect on clinical decisions, yet the overwhelming majority (over 98%) of these variants still have unknown consequences1–3. In principle, computational methods could support the large-scale interpretation of genetic variants. However, state-of-the-art methods4–10 have relied on training machine learning models on known disease labels. As these labels are sparse, biased and of variable quality, the resulting models have been considered insufficiently reliable11. Here we propose an approach that leverages deep generative models to predict variant pathogenicity without relying on labels. By modelling the distribution of sequence variation across organisms, we implicitly capture constraints on the protein sequences that maintain fitness. Our model EVE (evolutionary model of variant effect) not only outperforms computational approaches that rely on labelled data but also performs on par with, if not better than, predictions from high-throughput experiments, which are increasingly used as evidence for variant classifcation12–16. We predict the pathogenicity of more than 36 million variants across 3,219 disease genes and provide evidence for the classification of more than 256,000 variants of unknown significance. Our work suggests that models of evolutionary information can provide valuable independent evidence for variant interpretation that will be widely useful in research and clinical settings.",,Unreleased,,Likely,2024-11-01 14:04:09+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
DALL-E mini,Vision,Craiyon,Industry,"Dayma, Boris and Patil, Suraj and Cuenca, Pedro and Saifullah, Khalid and Abraham, Tanishq and Lê Khắc, Phúc and Melas, Luke and Ghosh, Ritobrata",2021-10-26,DALL·E Mini Model Card ,https://huggingface.co/dalle-mini/dalle-mini,,,,,,3.8e+19,,,"trained on a TPU v3-8 for 72 hours. That's 8 TPUv3 cores, or 4 TPUv3 chips (123 teraflop/s each)

flops = (4) * (123 * 10**12) * (72 * 3600) * (0.3) = 3.8e19
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)
from https://huggingface.co/dalle-mini/dalle-mini#dall%C2%B7e-mini-estimated-emissions",,"Conceptual Captions Dataset, which contains 3 million image and caption pairs.
﻿Conceptual 12M, which contains 12 million image and caption pairs.
The OpenAI subset of YFCC100M, which contains about 15 million images and that we further sub-sampled to 2 million images due to limitations in storage space. 
from https://huggingface.co/dalle-mini/dalle-mini#training-data",30000000.0,3M+12M+15M = 30M from https://huggingface.co/dalle-mini/dalle-mini#training-data,,72.0,from https://huggingface.co/dalle-mini/dalle-mini#dall%C2%B7e-mini-estimated-emissions,Google TPU v3,4.0,,,,Open weights (unrestricted),,Likely,2025-02-17 16:35:34+00:00,United States of America,,,,,,,,,
Cloob,"Multimodal,Language,Vision","Johannes Kepler University,HERE Technologies,Institute of Advanced Research in Artificial Intelligence","Academia,Academia","Andreas Fürst ∗Elisabeth Rumetshofer ∗Johannes Lehner,Viet Tran,Fei Tang, Hubert Ramsauer, David Kreil, Michael Kopp, Günter Klambauer, Angela Bitto-Nemling, Sepp Hochreiter",2021-10-21,CLOOB: Modern Hopfield Networks with InfoLOOB Outperform CLIP,https://arxiv.org/abs/2110.11316,96.0,,"improves on CLIP, which was SOTA at the time 1.5 years ago. but this paper doesn't claim to be SOTA, so I think it's unlikely to be so.",,,,,,,,,15000000.0,"[Image-text pairs]
""To be comparable to the CLIP results, we use the same subset of 15 million samples from the YFCC100M dataset""",,,,,,,"CLIP yielded impressive results on zero-shot transfer learning tasks and is considered as a foundation model like BERT or GPT3. CLIP vision models that have a rich representation are pre-trained using the InfoNCE objective and natural language supervision before they are fine-tuned on particular tasks. Though CLIP excels at zero-shot transfer learning, it suffers from an explaining away problem, that is, it focuses on one or few features, while neglecting other relevant features. This problem is caused by insufficiently extracting the covariance structure in the original multi-modal data. We suggest to use modern Hopfield networks to tackle the problem of explaining away. Their retrieved embeddings have an enriched covariance structure derived from co-occurrences of features in the stored embeddings. However, modern Hopfield networks increase the saturation effect of the InfoNCE objective which hampers learning. We propose to use the InfoLOOB objective to mitigate this saturation effect. We introduce the novel ""Contrastive Leave One Out Boost"" (CLOOB), which uses modern Hopfield networks for covariance enrichment together with the InfoLOOB objective. In experiments we compare CLOOB to CLIP after pre-training on the Conceptual Captions and the YFCC dataset with respect to their zero-shot transfer learning performance on other datasets. CLOOB consistently outperforms CLIP at zero-shot transfer learning across all considered architectures and datasets.",,,,,2024-11-01 14:04:09+00:00,"Austria,Switzerland,Austria",,,,,,,,,
PMLM,Biology,"Microsoft Research Asia,Nanyang Technological University,Xi’an Jiaotong University,Sun Yat-sen University","Industry,Academia,Academia,Academia","Liang He, Shizhuo Zhang, Lijun Wu, Huanhuan Xia, Fusong Ju, He Zhang, Siyuan Liu, Yingce Xia, Jianwei Zhu, Pan Deng, Bin Shao, Tao Qin, Tie-Yan Liu",2021-10-21,Pre-Training Co-Evolutionary Protein Representation via a Pairwise Masked Language Model,https://arxiv.org/abs/2110.15527,28.0,,,,,,,,,,,,,,,,,,,"Understanding protein sequences is vital and urgent for biology, healthcare, and medicine. Labeling approaches are expensive yet time-consuming, while the amount of unlabeled data is increasing quite faster than that of the labeled data due to low-cost, high-throughput sequencing methods. In order to extract knowledge from these unlabeled data, representation learning is of significant value for protein-related tasks and has great potential for helping us learn more about protein functions and structures. The key problem in the protein sequence representation learning is to capture the co-evolutionary information reflected by the inter-residue co-variation in the sequences. Instead of leveraging multiple sequence alignment as is usually done, we propose a novel method to capture this information directly by pre-training via a dedicated language model, i.e., Pairwise Masked Language Model (PMLM). In a conventional masked language model, the masked tokens are modeled by conditioning on the unmasked tokens only, but processed independently to each other. However, our proposed PMLM takes the dependency among masked tokens into consideration, i.e., the probability of a token pair is not equal to the product of the probability of the two tokens. By applying this model, the pre-trained encoder is able to generate a better representation for protein sequences. Our result shows that the proposed method can effectively capture the inter-residue correlations and improves the performance of contact prediction by up to 9% compared to the MLM baseline under the same setting. The proposed model also significantly outperforms the MSA baseline by more than 7% on the TAPE contact prediction benchmark when pre-trained on a subset of the sequence database which the MSA is generated from, revealing the potential of the sequence pre-training method to surpass MSA based methods in general.",,,,Unverified,2024-10-22 14:19:30+00:00,"China,Singapore,China,China",,,,,,,,,
WD+LR+M,Language,"University of Cambridge,Alan Turing Institute","Academia,Government","Ross M. Clarke, Elre T. Oldewage, José Miguel Hernández-Lobato",2021-10-20,Scalable One-Pass Optimisation of High-Dimensional Weight-Update Hyperparameters by Implicit Differentiation,https://arxiv.org/abs/2110.10461,9.0,,,,,,,,,Penn TreeBank,,,,72.0,,,,,,"Machine learning training methods depend plentifully and intricately on hyperparameters, motivating automated strategies for their optimisation. Many existing algorithms restart training for each new hyperparameter choice, at considerable computational cost. Some hypergradient-based one-pass methods exist, but these either cannot be applied to arbitrary optimiser hyperparameters (such as learning rates and momenta) or take several times longer to train than their base models. We extend these existing methods to develop an approximate hypergradient-based hyperparameter optimiser which is applicable to any continuous hyperparameter appearing in a differentiable model weight update, yet requires only one training episode, with no restarts. We also provide a motivating argument for convergence to the true hypergradient, and perform tractable gradient-based optimisation of independent learning rates for each model parameter. Our method performs competitively from varied random hyperparameter initialisations on several UCI datasets and Fashion-MNIST (using a one-layer MLP), Penn Treebank (using an LSTM) and CIFAR-10 (using a ResNet-18), in time only 2-3x greater than vanilla training.",WD+LR+M,Unreleased,,Unknown,2024-09-09 03:11:24+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
base LM+GNN+kNN,Language,"Shannon.AI,Nanjing University,Nanyang Technological University,Zhejiang University","Industry,Academia,Academia,Academia","Yuxian Meng, Shi Zong, Xiaoya Li, Xiaofei Sun, Tianwei Zhang, Fei Wu, Jiwei Li",2021-10-17,GNN-LM: Language Modeling based on Global Contexts via GNN,https://arxiv.org/abs/2110.08743,35.0,SOTA improvement,,274000000.0,,7.3e+18,,,,WikiText-103,,,,,,,,,,"Inspired by the notion that ``{\it to copy is easier than to memorize}``, in this work, we introduce GNN-LM, which extends the vanilla neural language model (LM) by allowing to reference similar contexts in the entire training corpus. We build a directed heterogeneous graph between an input context and its semantically related neighbors selected from the training corpus, where nodes are tokens in the input context and retrieved neighbor contexts, and edges represent connections between nodes. Graph neural networks (GNNs) are constructed upon the graph to aggregate information from similar contexts to decode the token. This learning paradigm provides direct access to the reference contexts and helps improve a model's generalization ability. We conduct comprehensive experiments to validate the effectiveness of the GNN-LM: GNN-LM achieves a new state-of-the-art perplexity of 14.8 on WikiText-103 (a 3.9 point improvement over its counterpart of the vanilla LM model), and shows substantial improvement on One Billion Word and Enwiki8 datasets against strong baselines. In-depth ablation studies are performed to understand the mechanics of GNN-LM. \footnote{The code can be found at this https URL",base LM+GNN+kNN,Open weights (unrestricted),,,2024-09-10 20:51:29+00:00,"China,China,Singapore,China",,,,,,,,,
PAGnol-XL,Language,"LightOn,Laboratoire de Physique de l'Ecole Normale (LPENS),INRIA","Industry,Academia,Academia","Julien Launay, E.L. Tommasone, Baptiste Pannier, François Boniface, Amélie Chatelain, Alessandro Cappelli, Iacopo Poli, Djamé Seddah",2021-10-16,PAGnol: An Extra-Large French Generative Model,https://arxiv.org/abs/2110.08554,7.0,,,1500000000.0,,2.592e+20,,,"They report their compute directly.

From section 8: ""About 62k GPU-hours on the Jean Zay HPC Cluster."" Jean Zay uses both A100 and V100 GPUs, and maybe other stuff as well?

Note they explicitly call out V100 in their Appendix A.

https://www.hpcwire.com/2021/11/17/frances-jean-zay-supercomputer-gets-ai-boost-from-hpe-nvidia/",CCNet,They mostly use CCNet but also OSCAR for a comparison.,24000000000.0,Section 4.1: 32G tokens => 32e9*0.75 = 24e9 words,,,,NVIDIA Tesla V100 SXM2,,Self-supervised learning,"Access to large pre-trained models of varied architectures, in many different languages, is central to the democratization of NLP. We introduce PAGnol, a collection of French GPT models. Using scaling laws, we efficiently train PAGnol-XL (1.5B parameters) with the same computational budget as CamemBERT, a model 13 times smaller. PAGnol-XL is the largest model trained to date for the French language. We plan to train increasingly large and performing versions of PAGnol, exploring the capabilities of French extreme-scale models. For this first release, we focus on the pretraining and scaling calculations underlining PAGnol. We fit a scaling law for compute for the French language, and compare it with its English counterpart. We find the pre-training dataset significantly conditions the quality of the outputs, with common datasets such as OSCAR leading to low-quality offensive text. We evaluate our models on discriminative and generative tasks in French, comparing to other state-of-the-art French and multilingual models, and reaching the state of the art in the abstract summarization task. Our research was conducted on the public GENCI Jean Zay supercomputer, and our models up to the Large are made publicly available.",,API access,,,2025-02-17 16:36:05+00:00,"France,France,France",,,,,,,,,
GPT-2 (fine-tuned with HYDRA),Language,University of California San Diego,Academia,"Kabir Nagrecha, Arun Kumar",2021-10-16,Hydra: A System for Large Multi-Model Deep Learning,https://arxiv.org/abs/2110.08633,4.0,,,1540000000.0,"They don't actually say which GPT-2 version they use, but it appears to be XL (1.5B params), since Table 1 shows zero-shot accuracy of 18.34 on WikiText-2, which is what the 1.5B version got.",1.92e+21,,,"They fine-tuned GPT-2 (1.5B) for one epoch on WikiText-2. GPT-2 itself used 1.92e21 FLOP, and here we see 6 * 2M * 1.54B = 1.848e16 fine-tuning FLOP (which has almost no impact on total FLOP).",WikiText-2,,,,1.0,,,,,,"Scaling up model depth and size is now a common approach to raise accuracy in many deep learning (DL) applications, as evidenced by the widespread success of multi-billion or even trillion parameter models in natural language processing (NLP) research. Despite success in DL research and at major technology companies, broader practical adoption of such large models among domain scientists and businesses is still bottlenecked by GPU memory limits, high training costs, and low GPU availability, even on public clouds. Model selection needs further compound these resource challenges: users often need to compare dozens of models with different hyper-parameters or neural architectures to suit their specific task and dataset. In this paper, we present Hydra, a system designed to tackle such challenges by enabling out-of-the-box scaling for multi-large-model DL workloads on even commodity GPUs in a resource-efficient manner. Hydra is the first approach to holistically optimize the execution of multi-model workloads for large DL models. We do this by adapting prior ""model-parallel"" execution schemes to work with scalable parameter offloading across the memory hierarchy and further hybridizing this approach with task-parallel job scheduling techniques. Hydra decouples scalability of model parameters from parallelism of execution, thus enabling DL users to train even a 6-billion parameter model on a single commodity GPU. It also fully exploits the speedup potential of task parallelism in multi-GPU setups, yielding near-linear strong scaling and making rigorous model selection perhaps more practical for such models. We evaluate end-to-end performance by fine-tuning GPT-2 for language modeling. We find that Hydra offers between 50% and 100% higher training throughput than even the best settings of state-of-the-art industrial frameworks such as DeepSpeed and GPipe for multi-large-model training.",GPT-2 (fine-tuned with HYDRA),Unreleased,,,2025-03-07 01:53:06+00:00,United States of America,,,,,,,,,
MGK 4 heads (medium),Language,"FPT Software AI Center,University of California Los Angeles (UCLA),VinUniversity,Deezer Research,Rice University,University of Texas at Austin","Industry,Academia,Academia,Academia,Academia","Tam Nguyen, Tan M. Nguyen, Dung D. Le, Duy Khuong Nguyen, Viet-Anh Tran, Richard G. Baraniuk, Nhat Ho, Stanley J. Osher",2021-10-16,Improving Transformers with Probabilistic Attention Keys,https://arxiv.org/abs/2110.08678,23.0,,,90000000.0,,8.8992e+18,,,(90M parameters)(103M words)(4/3 tokens/word)(120 epochs)*6,WikiText-103,,,,120.0,,,NVIDIA A100,2.0,,"Multi-head attention is a driving force behind state-of-the-art transformers, which achieve remarkable performance across a variety of natural language processing (NLP) and computer vision tasks. It has been observed that for many applications, those attention heads learn redundant embedding, and most of them can be removed without degrading the performance of the model. Inspired by this observation, we propose Transformer with a Mixture of Gaussian Keys (Transformer-MGK), a novel transformer architecture that replaces redundant heads in transformers with a mixture of keys at each head. These mixtures of keys follow a Gaussian mixture model and allow each attention head to focus on different parts of the input sequence efficiently. Compared to its conventional transformer counterpart, Transformer-MGK accelerates training and inference, has fewer parameters, and requires fewer FLOPs to compute while achieving comparable or better accuracy across tasks. Transformer-MGK can also be easily extended to use with linear attention. We empirically demonstrate the advantage of Transformer-MGK in a range of practical applications, including language modeling and tasks that involve very long sequences. On the Wikitext-103 and Long Range Arena benchmark, Transformer-MGKs with 4 heads attain comparable or better performance to the baseline transformers with 8 heads.",MGK 4 heads (medium),Unreleased,,,2025-02-17 16:35:25+00:00,"Vietnam,United States of America,Vietnam,France,United States of America,United States of America",,,,,,,,,
T0-XXL,Language,"Hugging Face,Brown University","Industry,Academia","Victor Sanh, Albert Webson, Colin Raffel, Stephen H. Bach, Lintang Sutawika, Zaid Alyafeai, Antoine Chaffin, Arnaud Stiegler, Teven Le Scao,  Arun Raja, Manan Dey, M Saiful Bari, Canwen Xu, Urmish Thakker, Shanya Sharma, Eliza Szczechla, Taewoon Kim, Gunjan Chhablani, Nihal V. Nayak, Debajyoti Datta, Jonathan Chang, Mike Tian-Jian Jiang, Han Wang, Matteo Manica, Sheng Shen, Zheng-Xin Yong, Harshit Pandey, Michael McKenna, Rachel Bawden, Thomas Wang, Trishala Neeraj, Jos Rozen, Abheesht Sharma, Andrea Santilli, Thibault Fevry, Jason Alan Fries, Ryan Teehan, Tali Bers, Stella Biderman, Leo Gao, Thomas Wolf, Alexander M. Rush",2021-10-15,Multitask Prompted Training Enables Zero-Shot Task Generalization,https://arxiv.org/abs/2110.08207,1526.0,Highly cited,"""we compare T0 to the zero-shot performance of the largest language models available as of writing, i.e., various GPT-3 models up to 175B parameters...
We find that T0 matches or exceeds the performance
of all GPT-3 models on 9 out of 11 held-out datasets""",11000000000.0,"""Unless specified otherwise, we use the XXL version which
has 11B parameters.""",9.1819e+20,,,"From Table 1 and section B.1, a single run uses 27 hours of a 512 core slice of a TPU-v3 pod. 
512 * 0.5 * 1.23e14 * 3600 * 27 * 0.3 = 9.18e20
(cores) * (chip/core) * (FLOP/chip-sec) * (sec/hour) * (hours) * (utilization assumption)",P3 (Public Pool of Prompts),,,"Multitask - 12 tasks, 62 datasets. See fig 2 for details. 

This is going to be a nightmare to figure out! TODO figure out the sizes of each of these 62 datasets!

All datasets from here: https://arxiv.org/pdf/2109.02846.pdf

From B.2: ""across all of our training runs (including preliminary test experiments not described in this paper) we trained for 250 billion tokens""",,27.0,"For main model, 27 hours (Table 1)

Total time taken to train for all experiments was 270 hours ""These training runs corresponded to about 270 total hours of training on a v3-512 Cloud TPU device.""",Google TPU v3,256.0,,"Large language models have recently been shown to attain reasonable zero-shot generalization on a diverse set of tasks (Brown et al., 2020). It has been hypothesized that this is a consequence of implicit multitask learning in language models' pretraining (Radford et al., 2019). Can zero-shot generalization instead be directly induced by explicit multitask learning? To test this question at scale, we develop a system for easily mapping any natural language tasks into a human-readable prompted form. We convert a large set of supervised datasets, each with multiple prompts with diverse wording. These prompted datasets allow for benchmarking the ability of a model to perform completely held-out tasks. We fine-tune a pretrained encoder-decoder model (Raffel et al., 2020; Lester et al., 2021) on this multitask mixture covering a wide variety of tasks. The model attains strong zero-shot performance on several standard datasets, often outperforming models up to 16x its size. Further, our approach attains strong performance on a subset of tasks from the BIG-bench benchmark, outperforming models up to 6x its size. All trained models are available at this https URL and all prompts are available at this https URL.",,Open weights (unrestricted),,Confident,2024-11-01 14:03:44+00:00,"Multinational,United States of America,United States of America",T5-11B,,,,,,,,
KnGPT2,Language,"Huawei Noah's Ark Lab,McGill University","Industry,Academia","Ali Edalati, Marzieh Tahaei, Ahmad Rashid, Vahid Partovi Nia, James J. Clark, Mehdi Rezagholizadeh",2021-10-15,Kronecker Decomposition for GPT Compression,https://arxiv.org/abs/2110.08152,28.0,,,83000000.0,,1.24e+20,,,,,,,,1.0,,,,,,"GPT is an auto-regressive Transformer-based pre-trained language model which has attracted a lot of attention in the natural language processing (NLP) domain due to its state-of-the-art performance in several downstream tasks. The success of GPT is mostly attributed to its pre-training on huge amount of data and its large number of parameters (from ~100M to billions of parameters). Despite the superior performance of GPT (especially in few-shot or zero-shot setup), this overparameterized nature of GPT can be very prohibitive for deploying this model on devices with limited computational power or memory. This problem can be mitigated using model compression techniques; however, compressing GPT models has not been investigated much in the literature. In this work, we use Kronecker decomposition to compress the linear mappings of the GPT-22 model. Our Kronecker GPT-2 model (KnGPT2) is initialized based on the Kronecker decomposed version of the GPT-2 model and then is undergone a very light pre-training on only a small portion of the training data with intermediate layer knowledge distillation (ILKD). Finally, our KnGPT2 is fine-tuned on down-stream tasks using ILKD as well. We evaluate our model on both language modeling and General Language Understanding Evaluation benchmark tasks and show that with more efficient pre-training and similar number of parameters, our KnGPT2 outperforms the existing DistilGPT2 model significantly.",KnGPT2,Unreleased,,,2024-11-01 14:03:44+00:00,"China,Canada",,,,,,KnGPT2,,,
Yuan 1.0,Language,Inspur,Industry,"Shaohua Wu, Xudong Zhao, Tong Yu, Rongguo Zhang, Chong Shen, Hongli Liu, Feng Li, Hong Zhu, Jiangang Luo, Liang Xu, Xuanwei Zhang, Jun Liu",2021-10-12,Yuan 1.0: Large-Scale Pre-trained Language Model in Zero-Shot and Few-Shot Learning,https://arxiv.org/abs/2110.04725,51.0,SOTA improvement,"""The zero-shot average scores of both LM and PLM are superior to the SOTA one. On Csldcp, Tnews and Iflytek tasks, we surpass the zero-shot SOTA by a large margin""",245730000000.0,"Table 2: Parameters of Yuan models.
""Parameters (billion)""",3.5380000000001e+23,,,"Table 9: 4095 petaFLOPS-days which equals 3.538*10^23 FLOP

https://www.wolframalpha.com/input?i=4095+petaFLOPS+*+1+day
","Common Crawl,Wikipedia,Sogue News","""A Chinese corpus with 5TB high-quality text is built, which is sufficient to train Yuan 245B model without sampling the dataset twice.""

In order to obtain the high-quality dataset, we develop a Massive Data Filtering System (MDFS) built on Spark to clean and filter the raw data, and train a Bert-based model to select high quality samples. MDFS is consisted of three parts, data collection, coarse filtering and fine filtering (Fig. 5). The raw data is collected from Common Crawl, Sogou News, SogouT, Encyclopedia, and Books (Table 3). To process these raw data, we run MDFS system on a high performance cluster with 36 nodes.",1000000000000.0,"""Yuan 1.0 was trained on a new Chinese dataset of 5TB high-quality text that was built on 850TB raw data from Internet.""

1 GB ~ 167M words in English or 333M words in Chinese. For a mixed dataset of mostly Chinese, 5TB may be equivalent to around 1T words.

Table 2: 180B training tokens",,,,,2128.0,Self-supervised learning,"Recent work like GPT-3 has demonstrated excellent performance of Zero-Shot and Few-Shot learning on many natural language processing (NLP) tasks by scaling up model size, dataset size and the amount of computation. However, training a model like GPT-3 requires huge amount of computational resources which makes it challengeable to researchers. In this work, we propose a method that incorporates large-scale distributed training performance into model architecture design. With this method, Yuan 1.0, the current largest singleton language model with 245B parameters, achieves excellent performance on thousands GPUs during training, and the state-of-the-art results on NLP tasks. A data processing method is designed to efficiently filter massive amount of raw data. The current largest high-quality Chinese corpus with 5TB high quality texts is built based on this method. In addition, a calibration and label expansion method is proposed to improve the Zero-Shot and Few-Shot performance, and steady improvement is observed on the accuracy of various tasks. Yuan 1.0 presents strong capacity of natural language generation, and the generated articles are difficult to distinguish from the human-written ones.",,API access,0.45,Confident,2024-12-16 15:48:21+00:00,China,,,,,,,6881280.0,"Table 2. Batch size 3360, sequence length 2048. 3360*2048 = 6881280",
TOME,Language,"University of Southern California,Google","Academia,Industry","Michiel de Jong, Yury Zemlyanskiy, Nicholas FitzGerald, Fei Sha, William Cohen",2021-10-12,Mention Memory: incorporating textual knowledge into Transformers through entity mention attention,https://arxiv.org/abs/2110.06176v2,42.0,,,220000000.0,220M from Table 1 entry for TOME,1.03809024e+21,,,"We have information about hardware ""All models are pre-trained on 128 TPUs using AdamW optimizer (Loshchilov& Hutter, 2019) with learning rate 1e-4 and batch size of 4096."", but no information about training time and exact model of TPUs.

There is information about training 1.5M steps with batch size 4096 * 128 citation from appendix A:
""The Mention Encoder and BATCH-TOME are pre-trained
for 1 million steps with 50k warmup steps, and TOME is trained for 500k additional steps with 25k warmup steps after initialization from BATCH-TOME.""

It seems like 6ND is appropriate, since all components are dense transformers. In this case, compute is:
6 * 1.5M (steps) * 4096 (batch size) * 128 (seq len) * 220M (parameters) = 1.038e21",English Wikipedia,"citation from the start of Appendix A ""We train on English Wikipedia,""",5000000000.0,"Per Wikipedia, the site had 3.755B words as of the most recent checkpoint prior to the paper's publication: https://en.wikipedia.org/wiki/Wikipedia:Size_of_Wikipedia#Yearly_statistics
3.755B * 4/3 = 5B tokens",157.2864,,,,,,"Natural language understanding tasks such as open-domain question answering often require retrieving and assimilating factual information from multiple sources. We propose to address this problem by integrating a semi-parametric representation of a large text corpus into a Transformer model as a source of factual knowledge. Specifically, our method represents knowledge with `mention memory', a table of dense vector representations of every entity mention in a corpus. The proposed model - TOME - is a Transformer that accesses the information through internal memory layers in which each entity mention in the input passage attends to the mention memory. This approach enables synthesis of and reasoning over many disparate sources of information within a single Transformer model. In experiments using a memory of 150 million Wikipedia mentions, TOME achieves strong performance on several open-domain knowledge-intensive tasks, including the claim verification benchmarks HoVer and FEVER and several entity-based QA benchmarks. We also show that the model learns to attend to informative mentions without any direct supervision. Finally we demonstrate that the model can generalize to new unseen entities by updating the memory without retraining. ",,Unreleased,,Likely,2025-02-17 16:36:27+00:00,"United States of America,United States of America",,,,,,,524288.0,"""All models are pre-trained on [...] batch size of 4096. Each passage in the batch has length T = 128, excluding entity tokens.""",
Megatron-Turing NLG 530B,Language,"Microsoft,NVIDIA","Industry,Industry","Shaden Smith, Mostofa Patwary, Brandon Norick, Patrick LeGresley, Samyam Rajbhandari, Jared Casper, Zhun Liu, Shrimai Prabhumoye, George Zerveas, Vijay Korthikanti, Elton Zhang, Rewon Child, Reza Yazdani Aminabadi, Julie Bernauer, Xia Song, Mohammad Shoeybi, Yuxiong He, Michael Houston, Saurabh Tiwary, Bryan Catanzaro",2021-10-11,"Using DeepSpeed and Megatron to Train Megatron-Turing NLG 530B, A Large-Scale Generative Language Model",https://arxiv.org/abs/2201.11990,657.0,"SOTA improvement,Training cost","The 105-layer, transformer-based MT-NLG improved upon the prior state-of-the-art models in zero-, one-, and few-shot settings",530000000000.0,,1.17e+24,,,"https://www.lesswrong.com/posts/bGuMrzhJdENCo8BxX/nvidia-and-microsoft-releases-530b-parameter-transformer?commentId=HSJSNspKp94tFcSCx

source: https://lair.lighton.ai/akronomicon/
9938 PF-days * 3600 * 24 * 10^15  = 8.586432e+23","Common Crawl,The Pile,CC-Stories,Realnews"," In addition to Common Crawl data, we leveraged a number of other previously generated datasets. From The Pile, we selected Books3, OpenWebText2, Stack Exchange, PubMed Abstracts,
Wikipedia, Gutenberg (PG-19), BookCorpus2, NIH ExPorter, and Pile-CC datasets. We also included the
CC-Stories and RealNews datasets used to train Megatron",270000000000.0,"""Our training dataset consists of 339 billion tokens and we
trained MT-NLG on 270 billions tokens by blending the 15 training datasets as described above. We also set aside 2% of our data for validation.""

1 token ~ 0.75 words",,770.0,"Total compute was 1.17*10^24 FLOP.
They don't directly report the utilization and training speed when using the full Selene supercomputer with 560 DGX * 8 A100/DGX = 4480 GPUs. See section 2.3 Hardware Setup.

At 280 DGX, the utilization is 126/312 = 40% and a batch takes 60 seconds; at 350, it is 39% for 50 seconds; at 420, it is 36% for 44 seconds.

The overall utilization was 30.2% and the full cluster has 560 DGX. Dividing the total compute by the total performance of 4480 A100 at 30.2% utilization gives 770 hours.",NVIDIA A100 SXM4 80 GB,4480.0,Self-supervised learning,"Pretrained general-purpose language models can achieve state-of-the-art accuracies in various natural language processing domains by adapting to downstream tasks via zero-shot, few-shot and fine-tuning techniques. Because of their success, the size of these models has increased rapidly, requiring high-performance hardware, software, and algorithmic techniques to enable training such large models. As the result of a joint effort between Microsoft and NVIDIA, we present details on the training of the largest monolithic transformer based language model, Megatron-Turing NLG 530B (MT-NLG), with 530 billion parameters. In this paper, we first focus on the infrastructure as well as the 3D parallelism methodology used to train this model using DeepSpeed and Megatron. Next, we detail the training process, the design of our training corpus, and our data curation techniques, which we believe is a key ingredient to the success of the model. Finally, we discuss various evaluation results, as well as other interesting observations and new properties exhibited by MT-NLG. We demonstrate that MT-NLG achieves superior zero-, one-, and few-shot learning accuracies on several NLP benchmarks and establishes new state-of-the-art results. We believe that our contributions will help further the development of large-scale training infrastructures, large-scale language models, and natural language generations.",,Unreleased,0.302,,2025-02-17 19:52:17+00:00,"United States of America,United States of America",,,,,,,3932160.0,"""The sequence length is 2048 and the global batch size is 1920. We used 8-way tensor and 35-way pipeline parallelism. The learning rate is 5.0e −5 . We used one billion tokens for linear learning rate warmup. We used cosine decay for the learning rate targeting to reach 10% of its value over 340 billion tokens. Over the first 12 billion tokens, we started at a batch size of 32 and gradually increased the batch size in increments of 32, until we reach the final batch size of 1920"" 

Final batch size is 1920 * 2048 = 3932160",True
M6-10T,"Multimodal,Language,Vision",Alibaba,Industry,"Junyang Lin, An Yang, Jinze Bai, Chang Zhou, Le Jiang, Xianyan Jia, Ang Wang, Jie Zhang, Yong Li, Wei Lin, Jingren Zhou, Hongxia Yang",2021-10-08,M6-10T: A Sharing-Delinking Paradigm for Efficient Multi-Trillion Parameter Pretraining,https://arxiv.org/abs/2110.03888,37.0,,,10000000000000.0,"""We demonstrate a practice of pretraining unprecedented 10-trillion-parameter model, an order of magnitude larger than the state-of-the-art, on solely 512 GPUs within 10 days""",5.53e+21,,,"512 GPUs in 10 days - using NVIDIA V100 GPUs

Using the NVIDIA V100 Specifications this works out to be: 
0.30 * 125E12 * 512 * 10 * 86400 = 1.66E22

(Assuming 30% utilisation, and 125 TFLOPS)","BookCorpus (BooksCorpus, Toronto Book Corpus),English Wikipedia",,8000000000.0,"""We conduct experiments for pretraining and finetuning to analyze model competence in upstream and
downstream tasks. Following the classical data setup for pretraining and finetuning, we pretrain the model on BookCorpus [52] and English Wikipedia [9], which are corpora with around 16GB of plain
texts.""

I used http://extraconversion.com/data-storage/gigabits/gigabits-to-words.html for the conversion to number of words",,,512 GPUs * 10 days * 24 h/day,,,Self-supervised learning,"Recent expeditious developments in deep learning algorithms, distributed training, and even hardware design for large models have enabled training extreme-scale models, say GPT-3 and Switch Transformer possessing hundreds of billions or even trillions of parameters. However, under limited resources, extreme-scale model training that requires enormous amounts of computes and memory footprint suffers from frustratingly low efficiency in model convergence. In this paper, we propose a simple training strategy called ""Pseudo-to-Real"" for high-memory-footprint-required large models. Pseudo-to-Real is compatible with large models with architecture of sequential layers. We demonstrate a practice of pretraining unprecedented 10-trillion-parameter model, an order of magnitude larger than the state-of-the-art, on solely 512 GPUs within 10 days. Besides demonstrating the application of Pseudo-to-Real, we also provide a technique, Granular CPU offloading, to manage CPU memory for training large model and maintain high GPU utilities. Fast training of extreme-scale models on a decent amount of resources can bring much smaller carbon footprint and contribute to greener AI.",,,,,2024-11-10 23:29:29+00:00,China,,,,,,,,,
AlphaFold-Multimer,Biology,"Google DeepMind,DeepMind","Industry,Industry","Richard Evans, Michael O’Neill, Alexander Pritzel, Natasha Antropova, Andrew Senior, Tim Green, Augustin Žídek, Russ Bates, Sam Blackwell, Jason Yim, Olaf Ronneberger, Sebastian Bodenstein, Michal Zielinski, Alex Bridgland, Anna Potapenko, Andrew Cowie, Kathryn Tunyasuvunakool, Rishub Jain, Ellen Clancy, Pushmeet Kohli, John Jumper and Demis Hassabis",2021-10-04,Protein complex prediction with AlphaFold-Multimer,https://www.biorxiv.org/content/10.1101/2021.10.04.463034v1,1762.0,"Highly cited,SOTA improvement","""On a benchmark dataset of 17 heterodimer proteins without templates (introduced in [2]) we achieve at least medium accuracy (DockQ [3] ≥ 0.49) on 14 targets and high accuracy (DockQ ≥ 0.8) on 6 targets, compared to 9 targets of at least medium accuracy and 4 of high accuracy for the previous state of the art system (an AlphaFold-based system from [2])""

""For heteromeric interfaces we successfully predict the interface (DockQ ≥ 0.23) in 67% of cases, and produce high accuracy predictions (DockQ ≥ 0.8) in 23% of cases, an improvement of +25 and +11 percentage points over the flexible linker modification of AlphaFold [4] respectively""

""For homomeric interfaces we successfully predict the interface in 69% of cases, and produce high accuracy predictions in 34% of cases, an improvement of +5 percentage points in both instances""",,"""Multiple changes to the AlphaFold system were made to adapt it to training on protein complexes, which are detailed below. Summarizing briefly, we [...] make various small adjustments to the structure losses and the model architecture."" [2. Methods]

Hence, this will have approximately the same amount of parameters as AlphaFold2",4.35e+21,,,"Section: 2.5. Training Regimen
""We train the model to convergence (approximately 10M samples, for 2 weeks) across 128 TPUv3 cores [...]. Then we [...] run two separate fine-tuning stages (one further day of training each)""

Assuming: FP16 and utilization 0.4

Calculation: (14+2) days * 24 hours/day * 60 min/hour * 60 sec/min * (128 TPU cores/2 cores per chip) * 1.23e14 FLOP/s per chip * 0.4 utilization = 4.35e21 FLOPs",PDB (Protein Data Bank),"""The training dataset comprised structures from the Protein Data Bank (PDB) [13] with a maximum release date of 2018-04-30"" [2.5. Training Regimen]",147328.0,"See: https://www.rcsb.org/stats/growth/growth-released-structures for 2018

""We train the model to convergence (approximately 10M samples, for 2 weeks) across 128 TPUv3 cores with a batch size of 1 per TPU core. Then we halve the learning rate and double the number of sequences fed into the MSA stack before running two separate fine-tuning stages (one further day of training each)""

10000000/147328 ~ 68 epochs",68.0,384.0,"Section: 2.5. Training Regimen
""We train the model to convergence (approximately 10M samples, for 2 weeks) across 128 TPUv3 cores [...]. Then we [...] run two separate fine-tuning stages (one further day of training each)""",Google TPU v3,64.0,,"While the vast majority of well-structured single protein chains can now be predicted to high accuracy due to the recent AlphaFold [1] model, the prediction of multi-chain protein complexes remains a challenge in many cases. In this work, we demonstrate that an AlphaFold model trained specifically for multimeric inputs of known stoichiometry, which we call AlphaFold-Multimer, significantly increases accuracy of predicted multimeric interfaces over input-adapted single-chain AlphaFold while maintaining high intra-chain accuracy. On a benchmark dataset of 17 heterodimer proteins without templates (introduced in [2]) we achieve at least medium accuracy (DockQ [3] ≥ 0.49) on 14 targets and high accuracy (DockQ ≥ 0.8) on 6 targets, compared to 9 targets of at least medium accuracy and 4 of high accuracy for the previous state of the art system (an AlphaFold-based system from [2]). We also predict structures for a large dataset of 4,433 recent protein complexes, from which we score all non-redundant interfaces with low template identity. For heteromeric interfaces we successfully predict the interface (DockQ ≥ 0.23) in 67% of cases, and produce high accuracy predictions (DockQ ≥ 0.8) in 23% of cases, an improvement of +25 and +11 percentage points over the flexible linker modification of AlphaFold [4] respectively. For homomeric interfaces we successfully predict the interface in 69% of cases, and produce high accuracy predictions in 34% of cases, an improvement of +5 percentage points in both instances.",,Open weights (unrestricted),,Confident,2024-11-11 22:40:14+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational,United Kingdom of Great Britain and Northern Ireland",AlphaFold 2,,,,,,,,
TrOCR,Vision,"Beihang University,Microsoft Research Asia","Academia,Industry","Minghao Li, Tengchao Lv, Jingye Chen, Lei Cui, Yijuan Lu, Dinei Florencio, Cha Zhang, Zhoujun Li, Furu Wei",2021-09-21,TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models,https://arxiv.org/abs/2109.10282,246.0,SOTA improvement,"from conclusion ""Experiment results show that TrOCR achieves state-of-the-art results on printed, handwritten and scene text recognition with just a simple encoder-decoder model, without any post-processing steps""",558000000.0,558M table 5,,,,May be computed from github and datasets details. Uses pretrained BEiT and DeiT models.,,"""To build a large-scale high-quality dataset, we sample two million document pages from the publicly available PDF files on the Internet.""
From the Experiment section: ""In total, the first-stage pre-training dataset contains 684M textlines."" ""The handwritten dataset for the second-stage pre-training consists of 17.9M textlines"" ""In total, the printed dataset consists of 3.3M textlines.""
and from MJSynth, SynthText datasets there is ""about 16M text images.""",721200000.0,"The input data to the model are images.
684M + 17.9M + 3.3M + 16M",,,,NVIDIA V100,32.0,,"Text recognition is a long-standing research problem for document digitalization. Existing approaches are usually built based on CNN for image understanding and RNN for char-level text generation. In addition, another language model is usually needed to improve the overall accuracy as a post-processing step. In this paper, we propose an end-to-end text recognition approach with pre-trained image Transformer and text Transformer models, namely TrOCR, which leverages the Transformer architecture for both image understanding and wordpiece-level text generation. The TrOCR model is simple but effective, and can be pre-trained with large-scale synthetic data and fine-tuned with human-labeled datasets. Experiments show that the TrOCR model outperforms the current state-of-the-art models on the printed, handwritten and scene text recognition tasks. The TrOCR models and code are publicly available at https://aka.ms/trocr",,Open weights (unrestricted),,Confident,2024-11-01 14:03:44+00:00,"China,China",,,,,,,,,
LM-GVP,Biology,"Amazon Machine Learning Solutions Lab,Johnson & Johnson","Industry,Industry","Zichen Wang, Steven A. Combs, Ryan Brand, Miguel Romero Calvo, Panpan Xu, George Price, Nataliya Golovach, Emmanuel O. Salawu, Colby J. Wise, Sri Priya Ponnapalli, Peter M. Clark",2021-09-21,LM-GVP: A Generalizable Deep Learning Framework for Protein Property Prediction from Sequence and Structure,https://www.biorxiv.org/content/10.1101/2021.09.21.460852v1.abstract,10.0,,,,,2.400000000000002e+20,,,"1. Hardware setup: 8x NVIDIA V100 GPUs (1.25×10¹⁴ FLOP/s per GPU using fp16_tensor)
2. Training duration: Estimated 168 hours (1 week), based on assumption due to lack of specific information
3. Utilization rate: 40%
4. Calculation: 1.25×10¹⁴ FLOP/s × 8 GPUs × 604,800 seconds × 0.4 = 2.4×10²⁰ FLOPs",,,,,,,,,,,"Proteins perform many essential functions in biological systems and can be successfully developed as bio-therapeutics. It is invaluable to be able to predict their properties based on a proposed sequence and structure. In this study, we developed a novel generalizable deep learning framework, LM-GVP, composed of a protein Language Model (LM) and Graph Neural Network (GNN) to leverage information from both 1D amino acid sequences and 3D structures of proteins. Our approach outperformed the state-of-the-art protein LMs on a variety of property prediction tasks including fluorescence, protease stability, and protein functions from Gene Ontology (GO). We also illustrated insights into how a GNN prediction head can guide the protein LM to better leverage structural information. We envision that our deep learning framework will be generalizable to many protein property prediction problems to greatly accelerate protein engineering and drug development.",,,,Unverified,2025-02-17 16:37:13+00:00,"United States of America,United States of America",,,,,,,,,
PLATO-XL,Language,Baidu,Industry,"Siqi Bao, Huang He, Fan Wang, Hua Wu, Haifeng Wang, Wenquan Wu, Zhihua Wu, Zhen Guo, Hua Lu, Xinxian Huang, Xin Tian, Xinchao Xu, Yingzhan Lin, Zheng-Yu Niu",2021-09-20,PLATO-XL: Exploring the Large-scale Pre-training of Dialogue Generation,https://arxiv.org/abs/2109.09519,57.0,SOTA improvement,,11000000000.0,,9.9e+21,,,"""In PLATO-XL, each model was trained for a total of 150B tokens, with
a batch size of 2M tokens.""

150B * 11B * 6 = 9.9e21",,,150000000000.0,"""In PLATO-XL, each model was trained for a total of 150B tokens, with
a batch size of 2M tokens.""
811M English and 1.2B Chinese (context, response) samples. So if the average response is at least 75 tokens, the 150B tokens seen in training don't include repeat tokens. This seems plausible.",,,,NVIDIA V100,256.0,,"To explore the limit of dialogue generation pre-training, we present the models of PLATO-XL with up to 11 billion parameters, trained on both Chinese and English social media conversations. To train such large models, we adopt the architecture of unified transformer with high computation and parameter efficiency. In addition, we carry out multi-party aware pre-training to better distinguish the characteristic information in social media conversations. With such designs, PLATO-XL successfully achieves superior performances as compared to other approaches in both Chinese and English chitchat. We further explore the capacity of PLATO-XL on other conversational tasks, such as knowledge grounded dialogue and task-oriented conversation. The experimental results indicate that PLATO-XL obtains state-of-the-art results across multiple conversational tasks, verifying its potential as a foundation model of conversational AI.",,Open weights (unrestricted),,Confident,2025-02-17 16:37:17+00:00,China,,,,,,,,,
DLRM-2022,Recommendation,Facebook,Industry,"D Mudigere, Y Hao, J Huang, A Tulloch",2021-09-15,Software-Hardware Co-design for Fast and Scalable Training of Deep Learning Recommendation Models,https://arxiv.org/abs/2104.05158,126.0,,,3000000000000.0,"Figure 1

https://arxiv.org/abs/2104.05158",1.1e+21,,,"Figure 1

https://arxiv.org/abs/2104.05158",,,,,,,,"NVIDIA Tesla V100 DGXS 32 GB,NVIDIA A100",,,"Deep learning recommendation models (DLRMs) are used across many business-critical services at Facebook and are the single largest AI application in terms of infrastructure demand in its data-centers. In this paper we discuss the SW/HW co-designed solution for high-performance distributed training of large-scale DLRMs. We introduce a high-performance scalable software stack based on PyTorch and pair it with the new evolution of Zion platform, namely ZionEX. We demonstrate the capability to train very large DLRMs with up to 12 Trillion parameters and show that we can attain 40X speedup in terms of time to solution over previous systems. We achieve this by (i) designing the ZionEX platform with dedicated scale-out network, provisioned with high bandwidth, optimal topology and efficient transport (ii) implementing an optimized PyTorch-based training stack supporting both model and data parallelism (iii) developing sharding algorithms capable of hierarchical partitioning of the embedding tables along row, column dimensions and load balancing them across multiple workers; (iv) adding high-performance core operators while retaining flexibility to support optimizers with fully deterministic updates (v) leveraging reduced precision communications, multi-level memory hierarchy (HBM+DDR+SSD) and pipelining. Furthermore, we develop and briefly comment on distributed data ingestion and other supporting services that are required for the robust and efficient end-to-end training in production environments.",,,,,2025-02-17 16:37:37+00:00,United States of America,,,,,,,,,
MegaMolBART,Biology,NVIDIA,Industry,,2021-09-14,MegaMolBART,"https://docs.nvidia.com/bionemo-framework/0.4.0/models/megamolbart.html, https://github.com/NVIDIA/MegaMolBART",,,,45000000.0,"""MegaMolBART has eight layers, four attention heads, a hidden space dimension of 256, and contains 45M parameters""",7.2e+20,,,"""MegaMolBART was trained with data parallelism on 64 V100 32 GB GPUs (4 nodes x 16 GPUs) for 8 epochs (approximately 160k iterations or ~80 wall-clock hours) using a batch size of 32 molecules per GPU (micro batch)""

https://docs.nvidia.com/bionemo-framework/0.4.0/models/megamolbart.html

64 * 130 teraflops * 80 * 3600 * 0.3 = 7.2e20",ZINC 15,"""The ZINC-15 database was used for training [Sterling and Irwin, 2015]. Approximately 1.54 Billion molecules (SMILES strings) were selected from tranches meeting the following constraints: molecular weight <= 500 Daltons, LogP <= 5, reactivity level was “reactive,” and purchasability was “annotated.” The compounds were filtered to ensure a maximum length of 512 characters.""",,"1.54B molecules, maximum length of 512 characters. Perhaps ~100B tokens",8.0,80.0,,NVIDIA V100,,,"MegaMolBART is a model that understands chemistry and can be used for a variety of cheminformatics applications in drug discovery. The embeddings from its encoder can be used as features for predictive models. Alternatively, the encoder and decoder can be used together to generate novel molecules by sampling the model’s embedding space.",,Open weights (unrestricted),,Likely,2025-02-17 16:40:44+00:00,United States of America,,,,,,,,,
HyperCLOVA 204B,Language,NAVER,Industry,,2021-09-10,,,92.0,SOTA improvement,"""HyperCLOVA with our training configuration shows state-of-the-art in-context zero-shot and few-shot learning performances on various downstream tasks in Korean""",204000000000.0,https://www.navercorp.com/navercorp_/ir/announce/2023/NAVER_CEO%20letter%20to%20shareholders_Aug%202023_Eng.pdf,,1.47600100000001e+22,,"Estimations for 82B model (marked as lower bound estimations)

""For experiments in Section 4, the model trained with 150B is used for fair comparison, because not all models are finished training at the same iteration. However, experiments in Section 5.2 use the model trained with 300B tokens, as HyperCLOVA Studio provided the 39B and 82B models trained with 300B tokens.""

82e9 connections * 2 FLOP/connection * 300e9 tokens * 3 backward pass = 1.476e23 FLOP

Calculation using GPU time corroborates this:
- ""Our model is based on megatron-LM (Shoeybi et al., 2019) and trained on the NVIDIA Superpod, which includes 128 strongly clustered DGX servers with 1,024 A100 GPUs.""
- ""It takes 13.4 days to train a model with 82B parameters with 150B tokens."" Assume 300B tokens takes twice as long, 26.8 days.
- Assume the default of 30% utilization rate for large language models.

1024 A100 GPUs * 312e12 FLOP/second * 0.3 utilization * 26.8 days * 24 * 60 * 60 seconds/day = 2.219e+23 FLOP",Unspecified unreleased,,560000000000.0,"https://twitter.com/arankomatsuzaki/status/1397583304610783238
https://venturebeat.com/ai/naver-trained-a-gpt-3-like-korean-language-model/",,,,NVIDIA A100,,Self-supervised learning,,,,,Speculative,2024-10-15 16:00:31+00:00,Korea (Republic of),,,,,,,,,True
NLM,Language,"Carnegie Mellon University (CMU),University of California San Diego","Academia,Academia","Junxian He, Graham Neubig, Taylor Berg-Kirkpatrick",2021-09-09,Efficient Nearest Neighbor Language Models,https://arxiv.org/abs/2109.04212,92.0,,,247000512.0,"The core language model is semi-parametric. There is a non-parametric component which involves learning a datastore which maps the training data to context vectors. This paper improves on the kNN-LM model primarily by reducing the size of the datastore to improve throughput. They also add a small 512 parameter neural net to adaptively adjust the interpolation hyperparameter.

They use the pre-trained model from https://arxiv.org/abs/1809.10853, which had 247M trainable parameters, so the model in this paper one has 247M + 512 parameters.",2.783e+19,,,"The base model used was 247M parameters and trained for 286k updates with an effective batch size of 65,536 tokens.

6 * 247M * 286k * 65536 = 2.778e19 FLOPs

Generating the datastore involves a single forward pass over all of the training examples, for another
2 * 247M * 103M = 5.088e16 FLOPs

They also train the small retrieval adapter, but this converges in ""several minutes with a single GPU"" and so is unlikely to contribute significantly.

The only other computationally expensive step is the k-means datastore pruning: ""we perform 5000 separate k-means clustering passes only for the most frequent 5000 words due to high computational cost"". These are likely computed on CPUs; they have 32 CPU cores from 1.5GHz AMD EPYC 7282. Assuming that this means 32 processors, and not the 32 threads in a single processor, and assuming 4 cycles per multiplication, these CPUs could do 32 * 32 * (1.5e9 / 4) = 3.84e11 FLOP/s, so putting a dent in the 2.8e19 FLOPs from the base model would take a prohibitive amount of time.

Total: 2.783e19",WikiText-103,"""WikiText-103 (Merity et al., 2017) is a standard language modeling benchmark from Wikipedia that has 250K word-level vocabulary. It consists of 103M training tokens""",103000000.0,103M training tokens in WikiText-103,,,,NVIDIA GeForce RTX 3090,1.0,,"Non-parametric neural language models (NLMs) learn predictive distributions of text utilizing an external datastore, which allows them to learn through explicitly memorizing the training datapoints. While effective, these models often require retrieval from a large datastore at test time, significantly increasing the inference overhead and thus limiting the deployment of non-parametric NLMs in practical applications. In this paper, we take the recently proposed k-nearest neighbors language model (Khandelwal et al., 2020) as an example, exploring methods to improve its efficiency along various dimensions. Experiments on the standard WikiText-103 benchmark and domain-adaptation datasets show that our methods are able to achieve up to a 6x speed-up in inference speed while retaining comparable performance. The empirical analysis we present may provide guidelines for future research seeking to develop or deploy more efficient non-parametric NLMs.",NLM,Unreleased,,Confident,2025-02-17 16:41:12+00:00,"United States of America,United States of America",,,,,,,,,
PermuteFormer,Language,Peking University,Academia,Peng Chen,2021-09-06,PermuteFormer: Efficient Relative Position Encoding for Long Sequences,https://arxiv.org/abs/2109.02377,20.0,SOTA improvement,"""Results show that
PermuteFormer uniformly improves the performance of Performer, accelerates convergence, and
achieves state-of-the-art on some tasks.""",149697024.0,"Parameterization appears to be similar to a vanilla transformer. 6 layers, hidden dimension of 512, feed forward dimension of 1024, 8 attention heads. This would imply 20,447,232 parameters without embedding weights, and 512*vocab_size embedding weights (assuming tied embedding and unembedding projections)

They appear to use word-level tokenization: ""We evaluate unidirectional PermuteFormer on WikiText-103 (Merity et al., 2017). It is a language modeling dataset with about 103 million tokens,"" and I confirmed that word-level tokenization results in about 102M words across train-test-validation.

If this is the case, there are 267,735 unique words, so the embedding layer alone would be 137,080,320 parameters, for a total of 149,697,024.",2.775e+18,,,"6 * (30 * 103M) * 149,697,024 = 2.775e18

This seems a bit small relative to their statement: ""It takes about 10 days on 8 V100 GPUs to get all the figures in this paper"" which suggests about 2.7e20 FLOPs at 30% MFU.

Table 2 indicates that Performer and PermuteFormer take 0.23x to 0.58x as long to train as a Transformer model. Figure 2 appears to be the most compute intensive figure, and would take about 4 * (2.775e18) + 1 * (2.775e18 / 0.365) = 1.9e19 FLOPs. ",WikiText-103,,103000000.0,WikiText-103 is about 103M tokens,30.0,,Running all code needed to produce plots took about 10 days on 8 V100s,NVIDIA V100,8.0,,"A recent variation of Transformer, Performer, scales Transformer to longer sequences with a linear attention mechanism. However, it is not compatible with relative position encoding, which has advantages over absolute position encoding. In this paper, we discuss possible ways to add relative position encoding to Performer. Based on the analysis, we propose PermuteFormer, a Performer-based model with relative position encoding that scales linearly on long sequences. PermuteFormer applies position-dependent transformation on queries and keys to encode positional information into the attention module. This transformation is carefully crafted so that the final output of self-attention is not affected by absolute positions of tokens. PermuteFormer introduces negligible computational overhead by design that it runs as fast as Performer. We evaluate PermuteFormer on Long-Range Arena, a dataset for long sequences, as well as WikiText-103, a language modeling dataset. The experiments show that PermuteFormer uniformly improves the performance of Performer with almost no computational overhead and outperforms vanilla Transformer on most of the tasks.",PermuteFormer,Unreleased,,Speculative,2025-02-17 16:42:05+00:00,China,,,,,,,,,
RNS-RNN,Language,University of Notre Dame,Academia,"Brian DuSell, David Chiang",2021-09-05,Learning Hierarchical Structures with Differentiable Nondeterministic Stacks,https://arxiv.org/abs/2109.01982,12.0,,,5751892.0,Table 1,,,,"FLOPs per epoch is possibly calculable, but they don't say how many epochs, just that they stopped after 2 without improvement.",Penn TreeBank,,912344.0,"Penn TreeBank's training split has 912,344 tokens.",100.0,,,,,,"Learning hierarchical structures in sequential data -- from simple algorithmic patterns to natural language -- in a reliable, generalizable way remains a challenging problem for neural language models. Past work has shown that recurrent neural networks (RNNs) struggle to generalize on held-out algorithmic or syntactic patterns without supervision or some inductive bias. To remedy this, many papers have explored augmenting RNNs with various differentiable stacks, by analogy with finite automata and pushdown automata (PDAs). In this paper, we improve the performance of our recently proposed Nondeterministic Stack RNN (NS-RNN), which uses a differentiable data structure that simulates a nondeterministic PDA, with two important changes. First, the model now assigns unnormalized positive weights instead of probabilities to stack actions, and we provide an analysis of why this improves training. Second, the model can directly observe the state of the underlying PDA. Our model achieves lower cross-entropy than all previous stack RNNs on five context-free language modeling tasks (within 0.05 nats of the information-theoretic lower bound), including a task on which the NS-RNN previously failed to outperform a deterministic stack RNN baseline. Finally, we propose a restricted version of the NS-RNN that incrementally processes infinitely long sequences, and we present language modeling results on the Penn Treebank.",RNS-RNN,Unreleased,,Confident,2024-09-29 02:18:55+00:00,United States of America,,,,,,,1120.0,"Sequence length 35, minibatches of 32",
MEB,"Search,Language",Microsoft,Industry,"W Liu, Z Wang, X Liu, N Zeng, Y Liu, FE Alsaadi",2021-09-04,Make Every feature Binary: A 135B parameter sparse neural network for massively improved search relevance,https://www.microsoft.com/en-us/research/blog/make-every-feature-binary-a-135b-parameter-sparse-neural-network-for-massively-improved-search-relevance/,26.0,Significant use,"""MEB is running in production for 100 percent of Bing searches, in all regions and languages.""",135000000000.0,See paper title,,,,,,,,"""MEB uses three years of search logs from Bing as training data."" TODO convert",,,,,,,"Recently, Transformer-based deep learning models like GPT-3 have been getting a lot of attention in the machine learning world. These models excel at understanding semantic relationships, and they have contributed to large improvements in Microsoft Bing’s search experience and surpassing human performance on the SuperGLUE academic benchmark. However, these models can fail to capture more nuanced relationships between query and document terms beyond pure semantics.

In this blog post, we are introducing “Make Every feature Binary” (MEB), a large-scale sparse model that complements our production Transformer models to improve search relevance for Microsoft customers using AI at Scale. To make search more accurate and dynamic, MEB better harnesses the power of large data and allows for an input feature space with over 200 billion binary features that reflect the subtle relationships between search queries and documents.",,,,,2024-09-09 03:34:04+00:00,United States of America,,,,,,,,,
FLAN 137B,Language,Google Research,Industry,"Jason Wei, Maarten Bosma, Vincent Y. Zhao, Kelvin Guu, Adams Wei Yu, Brian Lester, Nan Du, Andrew M. Dai, and Quoc V. Le",2021-09-03,Finetuned Language Models Are Zero-Shot Learners,https://arxiv.org/abs/2109.01652,2994.0,"Highly cited,SOTA improvement","Abstract: 
""FLAN substantially improves the performance of its unmodified counterpart and surpasses zero-shot 175B GPT-3 on 20 of 25 datasets that we evaluate.""",137000000000.0,"Abstract:
""We take a 137B parameter pretrained language model and instruction tune it on
over 60 NLP datasets verbalized via natural language instruction templates. We
evaluate this instruction-tuned model, which we call FLAN, on unseen task types.""

Many models seem to be using the same 137B base transformer model?",2.047e+24,,,"From section 2.4: Pretraining was done over 2.49T tokens.
6 * 2.49T * 137B = 2.047e24 
Also, ""instruction tuning takes around 60 hours on a TPUv3 with 128 cores."" 128 TPUv3 cores = 64 TPUv3 chips. Environmental considerations section claims this took less than 2% of total time
1.23e14 * 64 * 60 * 3600 * 0.3 = 5.10e20","Wikipedia,Unspecified unreleased","Abstract: ""We take a 137B parameter pretrained language model and instruction tune it on over 60 NLP datasets""",2490000000000.0,"""Model architecture and pretraining. In our experiments, we use LaMDA-PT, a dense left-to-right, decoder-only transformer language model of 137B parameters (Thoppilan et al., 2022). This model is pretrained on a collection of web documents (including those with computer code), dialog data, and Wikipedia, tokenized into 2.49T BPE tokens with a 32k vocabulary using the  SentencePiece library (Kudo & Richardson, 2018). Around 10% of the pretraining data was non-English. Note that LaMDA-PT only has language model pretraining (c.f. LaMDA, which was finetuned for dialog).""",1.0,,,Google TPU v3,,Self-supervised learning,"This paper explores a simple method for improving the zero-shot learning abilities of language models. We show that instruction tuning—finetuning language models on a collection of datasets described via instructions—substantially improves zeroshot performance on unseen tasks. We take a 137B parameter pretrained language model and instruction tune it on over 60 NLP datasets verbalized via natural language instruction templates. We evaluate this instruction-tuned model, which we call FLAN, on unseen task types. FLAN substantially improves the performance of its unmodified counterpart and surpasses zero-shot 175B GPT-3 on 20 of 25 datasets that we evaluate. FLAN even outperforms few-shot GPT-3 by a large margin on ANLI, RTE, BoolQ, AI2-ARC, OpenbookQA, and StoryCloze. Ablation studies reveal that number of finetuning datasets, model scale, and natural language instructions are key to the success of instruction tuning.",,Unreleased,,Confident,2025-02-17 16:42:18+00:00,"Multinational,United States of America",LaMDA,,"""In our experiments, we use LaMDA-PT, a dense left-to-right,
decoder-only transformer language model of 137B parameters (Thoppilan et al., 2022) [...] Note that LaMDA-PT only has language model pretraining (c.f. LaMDA, which was finetuned for dialog)."" In our entry for LaMDA we only measured pre-training compute, so we just specify LaMDA as the base model of FLAN 137B.",,,,,,
PLUS-RNN,Biology,"Seoul National University,LG AI Research,NAVER,Kangwon National University","Academia,Industry,Industry,Academia","Seonwoo Min, Seunghyun Park, Siwon Kim, Hyun-Soo Choi, Byunghan Lee, Sungroh Yoon",2021-09-03,Pre-Training of Deep Bidirectional Protein Sequence Representations With Structural Information,https://ieeexplore.ieee.org/abstract/document/9529198,69.0,,,,,,,,,,,2200000000.999993,"14,670,860 protein sequences × 150 amino acids/sequence = 2.2 billion datapoints 
(2.2 × 10^9 total tokens)",,,,,,,"Bridging the exponentially growing gap between the numbers of unlabeled and labeled protein sequences, several studies adopted semi-supervised learning for protein sequence modeling. In these studies, models were pre-trained with a substantial amount of unlabeled data, and the representations were transferred to various downstream tasks. Most pre-training methods solely rely on language modeling and often exhibit limited performance. In this paper, we introduce a novel pre-training scheme called PLUS , which stands for P rotein sequence representations L earned U sing S tructural information. PLUS consists of masked language modeling and a complementary protein-specific pre-training task, namely same-family prediction. PLUS can be used to pre-train various model architectures. In this work, we use PLUS to pre-train a bidirectional recurrent neural network and refer to the resulting model as PLUS-RNN. Our experiment results demonstrate that PLUS-RNN outperforms other models of similar size solely pre-trained with the language modeling in six out of seven widely used protein biology tasks. Furthermore, we present the results from our qualitative interpretation analyses to illustrate the strengths of PLUS-RNN. PLUS provides a novel way to exploit evolutionary relationships among unlabeled proteins and is broadly applicable across a variety of protein biology tasks. We expect that the gap between the numbers of unlabeled and labeled proteins will continue to grow exponentially, and the proposed pre-training method will play a larger role. All the data and codes used in this study are available at https://github.com/mswzeus/PLUS ",,,,Unverified,2025-01-30 05:04:26+00:00,"Korea (Republic of),Korea (Republic of),Korea (Republic of),Korea (Republic of)",,,,,,,,,
$\infty$-former (SM),Language,"Universidade de Lisboa (ULisboa),DeepMind","Academia,Industry","Pedro Henrique Martins, Zita Marinho, André F. T. Martins",2021-09-01,$\infty$-former: Infinite Memory Transformer,https://arxiv.org/abs/2109.00301,31.0,,,117000000.0,,1.2e+22,,,,"WikiText-103,PG-19 (Project Gutenberg)","""we fine-tune GPT-2 small (Radford et al., 2019) on Wikitext103 (Merity et al., 2017) and a subset of PG-19 (Rae et al., 2019) containing the first 2,000 books (≈ 200 million tokens) of the training set""",,,1.0,,,,,,"Transformers are unable to model long-term memories effectively, since the amount of computation they need to perform grows with the context length. While variations of efficient transformers have been proposed, they all have a finite memory capacity and are forced to drop old information. In this paper, we propose the \infty-former, which extends the vanilla transformer with an unbounded long-term memory. By making use of a continuous-space attention mechanism to attend over the long-term memory, the \infty-former's attention complexity becomes independent of the context length, trading off memory length with precision. In order to control where precision is more important, \infty-former maintains ""sticky memories"" being able to model arbitrarily long contexts while keeping the computation budget fixed. Experiments on a synthetic sorting task, language modeling, and document grounded dialogue generation demonstrate the \infty-former's ability to retain information from long sequences.",$\infty$-former (SM),Unreleased,,,2024-09-26 19:18:17+00:00,"Portugal,United Kingdom of Great Britain and Northern Ireland",GPT-2 (124M),,"""To understand if long-term memories can be used to
extend a pre-trained language model, we fine-tune
GPT-2 small (Radford et al., 2019) on Wikitext103 (Merity et al., 2017) and a subset of PG-19
(Rae et al., 2019) containing the first 2,000 books
(≈ 200 million tokens) of the training set""",,,,,,
HJRSS,Biology,"University of Washington,Microsoft","Academia,Industry","Sanaa Mansoor, Minkyung Baek, Umesh Madan, Eric Horvitz",2021-09-01,Toward More General Embeddings for Protein Design: Harnessing Joint Representations of Sequence and Structure,https://www.biorxiv.org/content/10.1101/2021.09.01.458592v1.abstract,19.0,,,,,,,,,,,,,,,,,,,"Protein embeddings learned from aligned sequences have been leveraged in a wide array of tasks in protein understanding and engineering. The sequence embeddings are generated through semi-supervised training on millions of sequences with deep neural models defined with hundreds of millions of parameters, and they continue to increase in performance on target tasks with increasing complexity. We report a more data-efficient approach to encode protein information through joint training on protein sequence and structure in a semi-supervised manner. We show that the method is able to encode both types of information to form a rich embedding space which can be used for downstream prediction tasks. We show that the incorporation of rich structural information into the context under consideration boosts the performance of the model by predicting the effects of single-mutations. We attribute increases in accuracy to the value of leveraging proximity within the enriched representation to identify sequentially and spatially close residues that would be affected by the mutation, using experimentally validated or predicted structures.",,,,Unverified,2024-11-01 14:01:43+00:00,"United States of America,United States of America",,,,,,,,,
"ALiBi (L=3072, Lvalid = 3072)",Language,"University of Washington,Facebook AI Research,Allen Institute for AI","Academia,Industry,Research collective","Ofir Press, Noah A. Smith, Mike Lewis",2021-08-27,"Train Short, Test Long: Attention with Linear Biases Enables Input Length Extrapolation",https://arxiv.org/abs/2108.12409,557.0,,,1300000000.0,,8.1e+20,,,"From figure 5, 6000 GPU hours (Nvidia V100) 

6000*  125 teraflop/s * 3600 * 0.3 = 8.1e20",WikiText-103,"""We first test the extrapolation abilities of various position methods on the WikiText-103 corpus... The training set is about 103 million tokens from English Wikipedia""",103000000.0,"""The training set is about 103 million tokens from English Wikipedia""",205.0,,,,,,"Since the introduction of the transformer model by Vaswani et al. (2017), a fundamental question has yet to be answered: how does a model achieve extrapolation at inference time for sequences that are longer than it saw during training? We first show that extrapolation can be enabled by simply changing the position representation method, though we find that current methods do not allow for efficient extrapolation. We therefore introduce a simpler and more efficient position method, Attention with Linear Biases (ALiBi). ALiBi does not add positional embeddings to word embeddings; instead, it biases query-key attention scores with a penalty that is proportional to their distance. We show that this method trains a 1.3 billion parameter model on input sequences of length 1024 that extrapolates to input sequences of length 2048, achieving the same perplexity as a sinusoidal position embedding model trained on inputs of length 2048 but training 11% faster and using 11% less memory. ALiBi's inductive bias towards recency also leads it to outperform multiple strong position methods on the WikiText-103 benchmark.","ALiBi (L=3072, Lvalid = 3072)",Open weights (unrestricted),,Confident,2025-01-03 20:52:39+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
XLMR-XXL,Language,Facebook AI Research,Industry,"Naman Goyal, Jingfei Du, Myle Ott, Giri Anantharaman, Alexis Conneau",2021-08-17,Larger-Scale Transformers for Multilingual Masked Language Modeling,https://arxiv.org/abs/2105.00572,107.0,SOTA improvement,"Abstract:
""Our model also outperforms
the RoBERTa-Large model on several English tasks of the GLUE benchmark by 0.3% on average while handling 99 more languages.""",10700000000.0,"Section 2.1:
"" ...XLM-RXXL (L= 48, H = 4096, A = 32, 10.7B params)""",3.366e+22,,,"Trained for 500k steps at a batch size of 2048 with sequence length of 512 = 524,288,000,000 tokens seen.
6 * 10700000000 * 524,288,000,000 = 3.366e22",CC100,,167000000000.0,"""We pretrain the models on the CC100 dataset, which corresponds to 167B tokens in 100 languages.""",3.1394491018,,,,,,"Recent work has demonstrated the effectiveness of cross-lingual language model pretraining for cross-lingual understanding. In this study, we present the results of two larger multilingual masked language models, with 3.5B and 10.7B parameters. Our two new models dubbed XLM-R XL and XLM-R XXL outperform XLM-R by 1.8% and 2.4% average accuracy on XNLI. Our model also outperforms the RoBERTa-Large model on several English tasks of the GLUE benchmark by 0.3% on average while handling 99 more languages. This suggests pretrained models with larger capacity may obtain both strong performance on high-resource languages while greatly improving low-resource languages. We make our code and models publicly available.",,Open weights (unrestricted),,Confident,2025-02-17 16:43:54+00:00,United States of America,,,,,,,1048576.0,Batches of 2048 with sequence length of 512,
ProteinLM,Biology,"Tsinghua University,Beijing Academy of Artificial Intelligence / BAAI,Tencent","Academia,Academia,Industry","Yijia Xiao, Jiezhong Qiu, Ziang Li, Chang-Yu Hsieh, Jie Tang
",2021-08-17,Modeling Protein Using Large-scale Pretrain Language Model,https://arxiv.org/abs/2108.07435,24.0,,,3000000000.0,"""We have trained multiple largescale models on the PFAM[7] dataset, the largest with 3 billion parameters""",1.6e+22,,,"""We pretrained two large models on a 480 GPUs (TeslaV100-32GB) cluster for about three weeks""

21 * 24* 3600 * 480 * 125 teraFLOP/s * 0.3 (utilization) * 0.5 (two models) = 1.6e22",Pfam,"""PFAM[7] is a widely-used database consisting of more than 32 million protein sequences""",9000000001.000002,"Total sequences: 32,000,000
Testing (1%): 32,000,000 × 0.01 = 320,000
Remaining: 32,000,000 - 320,000 = 31,680,000
Training (95%): 31,680,000 × 0.95 = 30,096,000
Final calculation: 30,096,000 sequences × 300 tokens/sequence = 9,028,800,000 tokens",,252.0,,NVIDIA V100,48.0,Self-supervised learning,"Protein is linked to almost every life process. Therefore, analyzing the biological structure and property of protein sequences is critical to the exploration of life, as well as disease detection and drug discovery. Traditional protein analysis methods tend to be labor-intensive and time-consuming. The emergence of deep learning models makes modeling data patterns in large quantities of data possible. Interdisciplinary researchers have begun to leverage deep learning methods to model large biological datasets, e.g. using long short-term memory and convolutional neural network for protein sequence classification. After millions of years of evolution, evolutionary information is encoded in protein sequences. Inspired by the similarity between natural language and protein sequences, we use large-scale language models to model evolutionary-scale protein sequences, encoding protein biology information in representation. Significant improvements are observed in both token- level and sequence-level tasks, demonstrating that our large-scale model can accurately capture evolution information from pretraining on evolutionary-scale individual sequences. Our code and model are available at https://github.com/THUDM/ProteinLM.",,Open weights (unrestricted),,Confident,2025-02-17 16:43:29+00:00,"China,China,China",,,,,,,,,
DNABERT,Biology,Northeastern University,Academia,"Yanrong Ji, Zhihan Zhou, Han Liu, Ramana V Davuluri",2021-08-15,DNABERT: pre-trained Bidirectional Encoder Representations from Transformers model for DNA-language in genome,https://academic.oup.com/bioinformatics/article/37/15/2112/6128680,479.0,SOTA improvement,"""We show that the single pre-trained transformers model can simultaneously achieve state-of-the-art performance on prediction of promoters, splice sites and transcription factor binding sites, after easy fine-tuning using small task-specific labeled data."" [Abstract] - SOTA improvement on very specific task",110000000.0,"""We used the same model architecture as the BERT base, which consists of 12 Transformer layers with 768 hidden units and 12 attention heads in each layer, and the same parameter setting across all the four DNABERT models during pre-training""

Known to have 110 million parameters as reported in: https://arxiv.org/pdf/1810.04805v2.pdf
""We primarily report results on two model sizes: BERTBASE (L=12, H=768, A=12, Total Parameters=110M) [...]""",1.07e+20,,,"""Since the pre-training of DNABERT model is resource-intensive (about 25 days on 8 NVIDIA 2080Ti GPUs)""

Assuming FP16 and 30% utilization

Calculation = (25 * 24 *3600) s * 2.7e13 FLOP/s per GPU * 8 GPUs * 0.3 utilization = 1.4e20 FLOP

Alternatively:
""DNABERT takes a sequence with a max length of 512 as input... We pre-trained DNABERT for 120k steps with a batch size of 2000""
6 * 512 * 2000 * 120k * 110M = 8.11e19

Geometric mean: 1.07e20",Human Reference Genome (GRCh38/hg38),"""We generated training data from human genome [...]"" [2.2.2 Pre-training]. ",3000000000.0,"The human genome is around 3 billion base pairs (https://useast.ensembl.org/Homo_sapiens/Info/Annotation).
The authors use both non-overlapping sampling and random sampling from a human genome, though the source is unspecified.",4.04,600.0,"""Since the pre-training of DNABERT model is resource-intensive (about 25 days on 8 NVIDIA 2080Ti GPUs)""",NVIDIA GeForce RTX 2080 Ti,,,"Motivation
Deciphering the language of non-coding DNA is one of the fundamental problems in genome research. Gene regulatory code is highly complex due to the existence of polysemy and distant semantic relationship, which previous informatics methods often fail to capture especially in data-scarce scenarios.

Results
To address this challenge, we developed a novel pre-trained bidirectional encoder representation, named DNABERT, to capture global and transferrable understanding of genomic DNA sequences based on up and downstream nucleotide contexts. We compared DNABERT to the most widely used programs for genome-wide regulatory elements prediction and demonstrate its ease of use, accuracy and efficiency. We show that the single pre-trained transformers model can simultaneously achieve state-of-the-art performance on prediction of promoters, splice sites and transcription factor binding sites, after easy fine-tuning using small task-specific labeled data. Further, DNABERT enables direct visualization of nucleotide-level importance and semantic relationship within input sequences for better interpretability and accurate identification of conserved sequence motifs and functional genetic variant candidates. Finally, we demonstrate that pre-trained DNABERT with human genome can even be readily applied to other organisms with exceptional performance. We anticipate that the pre-trained DNABERT model can be fined tuned to many other sequence analyses tasks.",,Open weights (unrestricted),,Confident,2025-02-17 16:44:20+00:00,United States of America,,,,,,,,,
"GPT-2 (1.5B, Curriculum Learning 45K)",Language,Microsoft,Industry,"Conglong Li, Minjia Zhang, Yuxiong He",2021-08-13,Curriculum Learning: A Regularization Method for Efficient and Stable Billion-Scale GPT Model Pre-Training,https://arxiv.org/abs/2108.06084,29.0,,,1500000000.0,,6e+20,,,,,,,,2.2,,,,,,"Recent works have demonstrated great success in pre-training large-scale autoregressive language models on massive GPUs. To reduce the wall-clock training time, a common practice is to increase the batch size and learning rate. However, such practice is often brittle and leads to a so-called stability-efficiency dilemma: increasing the batch sizes and learning rates leads to better training efficiency but can also result in training instability, leading to poor generalization accuracy or failed runs. To better understand this phenomenon, we conduct an in-depth analysis on large-scale pre-training experiments replicating the GPT-2 model. We find that there is a strong correlation between training instability and extreme values of gradient variance, and that samples with long sequence lengths contribute to these extreme gradient variance values, especially at the beginning of the training, indicating that long sequence length can be a main source of training instability. Based on the analysis, we present a Sequence Length Warmup method that aims to solve the training stability-efficiency dilemma. Experiments replicating GPT-2 models show that our approach enables stable training with 8x larger batch size and 4x larger learning rate, whereas the baseline approach struggles with training instability. To achieve the same or better zero-shot evaluation results, our method reduces the required number of training tokens and wall clock time by up to 2.2x and 3.7x, respectively. Experiments replicating GPT-3 model (125M) show that our approach enables stable training with 8x larger batch size and 40x larger learning rate, and retains 99% of the zero-shot accuracy on 11 tasks using 10x less data and 17x less time compared to the original GPT-3 training recipe, while the baseline diverges under the same settings and only retain 95% of accuracy under lower learning rate.","GPT-2 (1.5B, Curriculum Learning 45K)",Unreleased,,,2024-11-01 14:04:09+00:00,United States of America,,,,,,,,,
Jurassic-1-Jumbo,Language,AI21 Labs,Industry,"Opher Lieber, Or Sharir, Barak Lenz, Yoav Shoham",2021-08-11,Jurassic-1: Technical Details and Evaluation,https://uploads-ssl.webflow.com/60fd4503684b466578c0d307/61138924626a6981ee09caf6_jurassic_tech_paper.pdf,55.0,Training cost,"""Training such a large model, on over 800 GPUs over many months""

Lower-bound cost estimate:
800 GPUs * $1/GPU-hour * 4 months = $2.3M
True cost was probably substantially higher. ""many months"" implies more than 4, and the GPUs were probably more expensive than $1/hour.",178000000000.0,"""Jurassic-1 models come in two sizes, where the Jumbo version, at 178B parameters, is the largest and most sophisticated language model ever released for general use by developers.""",3.7e+23,,,see here https://docs.google.com/document/d/1B8x6XYcmB1u6Tmq3VcbAtj5bzhDaj2TcIPyK6Wpupx4/edit,,,225000000000.0,"""Our model was trained with the conventional self-supervised auto-regressive training objective on 300B tokens drawn from publicly available resources""

1 token ~ 0.75 words",,,,NVIDIA A100,,Self-supervised learning,"Jurassic-1 is a pair of auto-regressive language models recently released by AI21 Labs, consisting of J1-Jumbo, a 178B-parameter model, and J1-Large, a 7B-parameter model. We describe their architecture and training, and evaluate their performance relative to GPT-3. The evaluation is in terms of perplexity, as well as zero-shot and few-shot learning. To that end, we developed a zeroshot and few-shot test suite, which we made publicly available (https://github.com/ai21labs/ lm-evaluation) as a shared resource for the evaluation of mega language models.",,API access,,,2025-03-03 08:04:58+00:00,Israel,,,,,,,3200000.0,"""Namely, we used a base learning rate of 1.2 × 10−4 and 0.6 × 10−4 , and a batch size of 2M and 3.2M tokens, for J1-Large and J1-Jumbo, respectively. We also used a linear warm-up over roughly the first 375 million tokens, and gradually increased the batch size from 32K tokens up to its target value for the first few billion tokens.""",
Zidong Taichu,"Multimodal,Speech,Vision,Language","Chinese Academy of Sciences,Wuhan AI Computing Center","Academia,Government",,2021-08-11,Zidong Ancestral multi-modal large model,https://gitee.com/zidongtaichu/multi-modal-models,,Historical significance,"The world’s first image, language, and audio trimodal pre-trained model.",3200000000.0,共32亿参数 translated as A total of 3.2 billion parameters ,8.016e+20,,,4.175e10 * 3.2e9 * 6 = 8.016e20 FLOP,,,41750000000.0,"主要采用CLUE与WMT中收集的中文数据，同时我们加入了额外收集的对话数据以及翻译平行语料中的中文部分，总共约250G的中文语料，领域覆盖广泛。

From context, seems to mean 250GB

250GB * 167M tokens/GB = 4.175e+10 tokens

https://gitee.com/zidongtaichu/multi-modal-models/tree/master/text#%E6%95%B0%E6%8D%AE%E9%9B%86",,,,,,,,,,,Confident,2025-02-17 16:44:26+00:00,"China,China",,,,,,,,,
W2v-BERT,Speech,"Google Brain,Massachusetts Institute of Technology (MIT)","Industry,Academia","Yu-An Chung, Yu Zhang, Wei Han, Chung-Cheng Chiu, James Qin, Ruoming Pang, Yonghui Wu",2021-08-07,W2v-BERT: Combining Contrastive Learning and Masked Language Modeling for Self-Supervised Speech Pre-Training,https://arxiv.org/abs/2108.06209v2,352.0,SOTA improvement,"""Our experiments show that w2v-BERT achieves competitive results
compared to current state-of-the-art pre-trained models on the LibriSpeech benchmarks when using the Libri-Light 60k corpus as the
unsupervised data. In particular, when compared to published models such as conformer-based wav2vec 2.0 and HuBERT, our model
shows 5% to 10% relative WER reduction on the test-clean and
test-other subsets""",1000000000.0,1B for XXL model,,,,,LibriLight,"""We use the Libri-Light unlab-60k subset [34], which contains
about 60,000 hours of unannotated speech audio, for pre-training
w2v-BERT models. For our main results, we use the LibriSpeech
960hr subset [35] as the supervised data, and use the 100hr subset
for ablation studies""",,,,,,,,,"Motivated by the success of masked language modeling~(MLM) in pre-training natural language processing models, we propose w2v-BERT that explores MLM for self-supervised speech representation learning. w2v-BERT is a framework that combines contrastive learning and MLM, where the former trains the model to discretize input continuous speech signals into a finite set of discriminative speech tokens, and the latter trains the model to learn contextualized speech representations via solving a masked prediction task consuming the discretized tokens. In contrast to existing MLM-based speech pre-training frameworks such as HuBERT, which relies on an iterative re-clustering and re-training process, or vq-wav2vec, which concatenates two separately trained modules, w2v-BERT can be optimized in an end-to-end fashion by solving the two self-supervised tasks~(the contrastive task and MLM) simultaneously. Our experiments show that w2v-BERT achieves competitive results compared to current state-of-the-art pre-trained models on the LibriSpeech benchmarks when using the Libri-Light~60k corpus as the unsupervised data. In particular, when compared to published models such as conformer-based wav2vec~2.0 and HuBERT, our model shows~5\% to~10\% relative WER reduction on the test-clean and test-other subsets. When applied to the Google's Voice Search traffic dataset, w2v-BERT outperforms our internal conformer-based wav2vec~2.0 by more than~30\% relatively.",,,,Confident,2024-11-01 14:04:08+00:00,"United States of America,United States of America",,,,,,,,,
YOLOX-X,Vision,Megvii Inc,Industry,"Zheng Ge, Songtao Liu, Feng Wang, Zeming Li, Jian Sun",2021-08-06,YOLOX: Exceeding YOLO Series in 2021,https://arxiv.org/abs/2107.08430,3207.0,"Highly cited,SOTA improvement",Table 6,99100000.0,"99.1M, table 3",6.34275e+20,,,"""We train the models for a total of 300 epochs with 5 epochs warmup on COCO train2017 [17]. We use stochastic gradient descent (SGD) for training ... The batch size is 128 by default to typical 8-GPU devices ... input size is evenly drawn from 448 to 832 with 32 strides""

Training is done on 300 epochs of the 2.5 million image-label pairs in COCO train2017.

Table 3 indicates 281.9 GFLOP per forward pass on a 640x640 image. The mean image width/height is 640, though using this to estimate training FLOPs is probably a slight underestimate as FLOPs will scale roughly linearly in the number of pixels (which scale at width^2).

Ignoring this slight issue: 281.9e9 * 2.5M * 300 * 3 = 6.34e20",COCO 2017,"""We train the models for a total of 300 epochs with 5 epochs warmup on COCO train2017""",2500000.0,"2.5 million image-label pairs, per Coco paper https://arxiv.org/abs/1405.0312",300.0,,,NVIDIA V100,8.0,,"In this report, we present some experienced improvements to YOLO series, forming a new high-performance detector -- YOLOX. We switch the YOLO detector to an anchor-free manner and conduct other advanced detection techniques, i.e., a decoupled head and the leading label assignment strategy SimOTA to achieve state-of-the-art results across a large scale range of models: For YOLO-Nano with only 0.91M parameters and 1.08G FLOPs, we get 25.3% AP on COCO, surpassing NanoDet by 1.8% AP; for YOLOv3, one of the most widely used detectors in industry, we boost it to 47.3% AP on COCO, outperforming the current best practice by 3.0% AP; for YOLOX-L with roughly the same amount of parameters as YOLOv4-CSP, YOLOv5-L, we achieve 50.0% AP on COCO at a speed of 68.9 FPS on Tesla V100, exceeding YOLOv5-L by 1.8% AP. Further, we won the 1st Place on Streaming Perception Challenge (Workshop on Autonomous Driving at CVPR 2021) using a single YOLOX-L model. We hope this report can provide useful experience for developers and researchers in practical scenes, and we also provide deploy versions with ONNX, TensorRT, NCNN, and Openvino supported. Source code is at this https URL.",,Open weights (unrestricted),,Likely,2025-03-06 20:00:04+00:00,China,,,,,,,128.0,,
FMMformer (2-kernel fast weight + Band20),Language,"University of California Los Angeles (UCLA),University of Utah","Academia,Academia","Tan M. Nguyen, Vai Suliafu, Stanley J. Osher, Long Chen, Bao Wang",2021-08-05,FMMformer: Efficient and Flexible Transformer via Decomposed Near-field and Far-field Attention,https://proceedings.neurips.cc/paper/2021/file/f621585df244e9596dc70a39b579efb1-Paper.pdf,31.0,,,40000000.0,,4.3e+17,,,,,,,,,,,,,,"We propose FMMformers, a class of efficient and flexible transformers inspired by the celebrated fast multipole method (FMM) for accelerating interacting particle simulation. FMM decomposes particle-particle interaction into near-field and far-field components and then performs direct and coarse-grained computation, respectively. Similarly, FMMformers decompose the attention into near-field and far-field attention, modeling the near-field attention by a banded matrix and the far-field attention by a low-rank matrix. Computing the attention matrix for FMMformers requires linear complexity in computational time and memory footprint with respect to the sequence length. In contrast, standard transformers suffer from quadratic complexity. We analyze and validate the advantage of FMMformers over the standard transformer on the Long Range Arena and language modeling benchmarks. FMMformers can even outperform the standard transformer in terms
of accuracy by a significant margin. For instance, FMMformers achieve an average classification accuracy of 60.74% over the five Long Range Arena tasks, which is significantly better than the standard transformer’s average accuracy of 58.70%.",FMMformer (2-kernel fast weight + Band20),Unreleased,,,2024-09-09 03:45:59+00:00,"United States of America,United States of America",,,,,,FMMformer (2-kernel fast weight + Band20),,,
6-Act Tether,Robotics,"Facebook AI Research,Georgia Institute of Technology","Industry,Academia","Joel Ye, Dhruv Batra, Abhishek Das, Erik Wijmans",2021-08-03,Auxiliary Tasks and Exploration Enable ObjectGoal Navigation,https://openaccess.thecvf.com/content/ICCV2021/html/Ye_Auxiliary_Tasks_and_Exploration_Enable_ObjectGoal_Navigation_ICCV_2021_paper.html,81.0,SOTA improvement,"""Our agents achieve 24.5% success and 8.1% SPL, a 37% and 8% relative improvement over prior state-of-the-art, respectively, on the Habitat ObjectNav Challenge""",5000000.0,"""Agent parameter counts were all 5 − 6 million parameters, excluding parameters in auxiliary modules""",,,,"""In our experiments, we train each of our agents for 8 GPU-weeks (192 GPU-hours)"". No GPU specified.",Matterport,"""We experiment on the Matterport dataset (MP3D [4]), which has 90 scenes and 40 labeled semantic object categories.""",,,,,,,,Reinforcement learning,,,,,Confident,2024-11-01 14:04:08+00:00,"United States of America,United States of America",,,,,,,,,
SEER,Vision,"Facebook AI Research,INRIA","Industry,Academia","Priya Goyal, Mathilde Caron, Benjamin Lefaudeux, Min Xu, Pengchao Wang, Vivek Pai, Mannat Singh, Vitaliy Liptchinsky, Ishan Misra, Armand Joulin, Piotr Bojanowski",2021-07-29,Self-supervised Pretraining of Visual Features in the Wild,https://arxiv.org/abs/2103.01988,244.0,SOTA improvement,"SOTA for self-supervised models on ImageNet, which seems fair to consider a different benchmark than ImageNet for supervised models.

""Our final SElf-supERvised (SEER) model,
a RegNetY with 1.3B parameters trained on 1B random
images with 512 GPUs achieves 84.2% top-1 accuracy,
surpassing the best self-supervised pretrained model by 1%""",1300000000.0,"From abstract:
"" Our final SElf-supERvised (SEER) model, a RegNetY with 1.3B parameters...""",1.8e+22,,,"Numbers from section 3.2, they specifically mention using mixed precision training.
6125 ms / batch * 114890 batches = 8.14 days (they round to 8 in the text)

512 GPUs * 8.14 days * 24h/day * 3600s/h * 125 TFLOP/s * 0.4 (assumed utilization) = 1.800e22",Instagram,"Section 3.3:
""For our billion scale pretraining, we consider a dataloader that directly samples random, public, and non-EU images from Instagram""

Note the dataset is not static - it is refreshed every 90 days",1000000000.0,"""Overall, we train
on 1B images for a total of 122K iterations.""",,195.5,6125 ms / batch * 114890 batches = 195.5 hours,NVIDIA V100,512.0,Self-supervised learning,"Recently, self-supervised learning methods like MoCo, SimCLR, BYOL and SwAV have reduced the gap with supervised methods. These results have been achieved in a control environment, that is the highly curated ImageNet dataset. However, the premise of self-supervised learning is that it can learn from any random image and from any unbounded dataset. In this work, we explore if self-supervision lives to its expectation by training large models on random, uncurated images with no supervision. Our final SElf-supERvised (SEER) model, a RegNetY with 1.3B parameters trained on 1B random images with 512 GPUs achieves 84.2% top-1 accuracy, surpassing the best self-supervised pretrained model by 1% and confirming that self-supervised learning works in a real world setting. Interestingly, we also observe that self-supervised models are good few-shot learners achieving 77.9% top-1 with access to only 10% of ImageNet. Code: this https URL",,Open weights (non-commercial),,,2025-02-17 16:45:55+00:00,"United States of America,France",,,,,,,,,
GOAT,Games,DeepMind,Industry,"Open-Ended Learning Team*, Adam Stooke, Anuj Mahajan, Catarina Barros, Charlie Deck, Jakob Bauer, Jakub Sygnowski, Maja Trebacz, Max Jaderberg, Michael Mathieu, Nat McAleese, Nathalie Bradley-Schmieg, Nathaniel Wong, Nicolas Porcel, Roberta Raileanu, Steph Hughes-Fitt, Valentin Dalibard and Wojciech Marian Czarnecki",2021-07-27,Open-Ended Learning Leads to Generally Capable Agents,"https://deepmind.com/blog/article/generally-capable-agents-emerge-from-open-ended-play

https://arxiv.org/abs/2107.12808",163.0,SOTA improvement,likely qualitatively SOTA,3472816.0,estimate described here: https://docs.google.com/document/d/1S9xZyCeITDOs-P1W_-liNW0WgVN-OLsSudVrPXMaLqw/edit?usp=sharing,2.412e+22,,,"[Final calculation]
(8 TPUs) * (1.23e14 FLOP/TPU-s) * (0.1 utilization) / (50k steps/s) = 1.968e9 FLOP/step

(32 agents) * (383B steps/agent) * (1.968e9 FLOP/step) = 2.412e22 FLOPs

==========================
NOTES BELOW

6.1: Each agent is trained using 8 TPUv3s and consumes approximately 50,000 agent steps (observations) per second.
Multiple agents interacting probably mean a fairly low utilization rate, so let’s assume 0.10
8 * 1.23e14 * 0.1 / 50k = 1.968e9 FLOPs per step

The paper doesn’t say exactly how many agents they train in each population. The original PBT paper uses 32 agents for one task (in general it uses between 10 and 80), so as a guesstimate let’s go with that.

Figure 16: They train over 5 generations. Summing the number of steps, it looks like there were roughly 383B steps
32 * 383B * 1.968e9 = 2.412e22

Final estimate:
2.412e22

I do a confidence interval analysis here and find a 90% CI of 6.9e21 to 1.3e23, so we can call this estimate ""likely"" (within 1 OOM): https://colab.research.google.com/drive/1wGSTQxBExY6Fa0-d7msVumf5-KnsWLe6?usp=sharing",XLand,,390000000000.0,Figure 16 shows steps per generation and agent. In total there are 1.5e10 + 4.0e10 + 2.5e10 + 1.1e11 + 2e11 = 3.9e11 steps per agent.,,,"see other notes
",Google TPU v3,,Self-supervised learning,"In this work we create agents that can perform well beyond a single, individual task, that exhibit much wider generalisation of behaviour to a massive, rich space of challenges. We define a universe of tasks within an environment domain and demonstrate the ability to train agents that are generally capable across this vast space and beyond. The environment is natively multi-agent, spanning the continuum of competitive, cooperative, and independent games, which are situated within procedurally generated physical 3D worlds. The resulting space is exceptionally diverse in terms of the challenges posed to agents, and as such, even measuring the learning progress of an agent is an open research problem. We propose an iterative notion of improvement between successive generations of agents, rather than seeking to maximise a singular objective, allowing us to quantify progress despite tasks being incomparable in terms of achievable rewards. We show that through constructing an open-ended learning process, which dynamically changes the training task distributions and training objectives such that the agent never stops learning, we achieve consistent learning of new behaviours. The resulting agent is able to score reward in every one of our humanly solvable evaluation levels, with behaviour generalising to many held-out points in the universe of tasks. Examples of this zero-shot generalisation include good performance on Hide and Seek, Capture the Flag, and Tag. Through analysis and hand-authored probe tasks we characterise the behaviour of our agent, and find interesting emergent heuristic behaviours such as trial-and-error experimentation, simple tool use, option switching, and cooperation. Finally, we demonstrate that the general capabilities of this agent could unlock larger scale transfer of behaviour through cheap finetuning.",,Unreleased,,Speculative,2025-02-17 16:46:20+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,64.0,,True
HuBERT,Speech,Facebook AI Research,Industry,"Wei-Ning Hsu, Benjamin Bolte, Yao-Hung Hubert Tsai, Kushal Lakhotia, Ruslan Salakhutdinov, Abdelrahman Mohamed",2021-07-27,HuBERT: Self-Supervised Speech Representation Learning by Masked Prediction of Hidden Units,https://arxiv.org/abs/2106.07447,2235.0,"Highly cited,SOTA improvement","Abstract: 
"" the
HuBERT model either matches or improves upon the state-ofthe-art wav2vec 2.0 performance on the Librispeech (960h) and
Libri-light (60,000h) benchmarks with 10min, 1h, 10h, 100h, and
960h fine-tuning subsets.""",1000000000.0,"From abstract:
""Using a 1B parameter model, HuBERT shows up to 19% and 13% relative WER reduction on the more challenging dev-other and test-other evaluation subsets""",5.54e+21,,,"GPU NOT SPECIFIED - for the sake of argument I assume something on the order of 1 TFLOP/s

Numbers from Section IV part C
0.1 * (960h * 32GPUs + 60000h * 256 GPUs) * 3600s/h * 1 TFLOP/s/GPU","LibriSpeech,LibriLight",,820800000.0,"""When the HuBERT model is pre-trained on either the standard Librispeech 960h [24] or the Libri-Light 60k hours [25], it either matches or improves upon the state-of-theart wav2vec 2.0 [6] performance on all fine-tuning subsets of 10mins, 1h, 10h, 100h, and 960h.""

1h ~ 13,680 words
13,680 * 60,000 = 820800000",,,,,,Self-supervised learning,"Self-supervised approaches for speech representation learning are challenged by three unique problems: (1) there are multiple sound units in each input utterance, (2) there is no lexicon of input sound units during the pre-training phase, and (3) sound units have variable lengths with no explicit segmentation. To deal with these three problems, we propose the Hidden-Unit BERT (HuBERT) approach for self-supervised speech representation learning, which utilizes an offline clustering step to provide aligned target labels for a BERT-like prediction loss. A key ingredient of our approach is applying the prediction loss over the masked regions only, which forces the model to learn a combined acoustic and language model over the continuous inputs. HuBERT relies primarily on the consistency of the unsupervised clustering step rather than the intrinsic quality of the assigned cluster labels. Starting with a simple k-means teacher of 100 clusters, and using two iterations of clustering, the HuBERT model either matches or improves upon the state-of-the-art wav2vec 2.0 performance on the Librispeech (960h) and Libri-light (60,000h) benchmarks with 10min, 1h, 10h, 100h, and 960h fine-tuning subsets. Using a 1B parameter model, HuBERT shows up to 19% and 13% relative WER reduction on the more challenging dev-other and test-other evaluation subsets.",,Open weights (unrestricted),,Speculative,2024-11-15 14:29:29+00:00,United States of America,,,,,,,,,
FNetAR Medium,Language,X-Mechanics,Research collective,"Tim Lou, Michael Park, Mohammad Ramezanali, Vincent Tang",2021-07-22,FNetAR: Mixing Tokens with Autoregressive Fourier Transforms,https://arxiv.org/abs/2107.10932,2.0,,not SOTA per https://paperswithcode.com/sota/language-modelling-on-wikitext-103,34300000.0,,,,,,WikiText-103,,,,,,,,,,"In this note we examine the autoregressive generalization of the FNet algorithm, in which self-attention layers from the standard Transformer architecture are substituted with a trivial sparse-uniformsampling procedure based on Fourier transforms. Using the Wikitext-103 benchmark, we demonstratethat FNetAR retains state-of-the-art performance (25.8 ppl) on the task of causal language modelingcompared to a Transformer-XL baseline (24.2 ppl) with only half the number self-attention layers,thus providing further evidence for the superfluity of deep neural networks with heavily compoundedattention mechanisms. The autoregressive Fourier transform could likely be used for parameterreduction on most Transformer-based time-series prediction models.",FNetAR Medium,Unreleased,,,2024-09-09 03:46:31+00:00,United States of America,,,,,,,,,
Codex,Language,OpenAI,Industry,"Mark Chen , Jerry Tworek, Heewoo Jun, Qiming Yuan, Henrique Ponde de Oliveira Pinto, Jared Kaplan, Harri Edwards, Yuri Burda, Nicholas Joseph, Greg Brockman, Alex Ray, Raul Puri, Gretchen Krueger,  Michael Petrov, Heidy Khlaaf, Girish Sastry, Pamela Mishkin, Brooke Chan, Scott Gray, Nick Ryder, Mikhail Pavlov, Alethea Power, Lukasz Kaiser, Clemens Winter, Philippe Tillet, Felipe Petroski Such, Dave Cummings, Fotios Chantzis, Elizabeth Barnes, Ariel Herbert-Voss, William Hebgen Guss, Nikolas Tezak, Jie Tang, Igor Babuschkin, Suchir Balaji,  Shantanu Jain, William Saunders, Christopher Hesse, Andrew N. Carr, Jan Leike, Josh Achiam, Vedant Misra, Evan Morikawa, Alec Radford, Matthew Knight, Miles Brundage, Mira Murati, Katie Mayer, Peter Welinder, Bob McGrew, Dario Amodei, Sam McCandlish, Ilya Sutskever, Wojciech Zaremba ",2021-07-07,Evaluating Large Language Models Trained on Code,"https://openai.com/blog/openai-codex/
https://arxiv.org/abs/2107.03374",3818.0,"Significant use,Highly cited",,12000000000.0,"""With just a single sample, a 12B parameter Codex solves 28.8% of these problems, and a 300M parameter Codex solves 13.2% of these problems""",7.344e+22,,,"""The original training of GPT-3-12B consumed hundreds of petaflop/sdays of compute, while fine-tuning it to create Codex-12B
consumed a similar amount of compute.""
1 PFLOP/s-day = 8.64e19 FLOPs.
""Hundreds"" is likely between 200 and 900, geometric mean = 425.
2 * 425 * 8.64e19 = 7.344e22
",,,31800000000.0,"""Our training dataset was collected in May 2020 from 54 million public software repositories hosted on GitHub, containing 179 GB of unique Python files under 1 MB. We filtered out files which were likely auto-generated, had average line
length greater than 100, had maximum line length greater
than 1000, or contained a small percentage of alphanumeric
characters. After filtering, our final dataset totaled 159 GB.""

1 GB ~ 200M words",,,,,,Self-supervised learning,"We introduce Codex, a GPT language model fine-tuned on publicly available code from GitHub, and study its Python code-writing capabilities. A distinct production version of Codex powers GitHub Copilot. On HumanEval, a new evaluation set we release to measure functional correctness for synthesizing programs from docstrings, our model solves 28.8% of the problems, while GPT-3 solves 0% and GPT-J solves 11.4%. Furthermore, we find that repeated sampling from the model is a surprisingly effective strategy for producing working solutions to difficult prompts. Using this method, we solve 70.2% of our problems with 100 samples per problem. Careful investigation of our model reveals its limitations, including difficulty with docstrings describing long chains of operations and with binding operations to variables. Finally, we discuss the potential broader impacts of deploying powerful code generation technologies, covering safety, security, and economics.",,API access,,Likely,2024-12-22 20:15:26+00:00,United States of America,GPT-3 13B,,,,,,,,True
ERNIE 3.0,Language,Baidu,Industry,"Y Sun, S Wang, S Feng, S Ding, C Pang",2021-07-05,ERNIE 3.0: Large-scale Knowledge Enhanced Pre-training for Language Understanding and Generation,http://research.baidu.com/Blog/index-view?id=160,347.0,SOTA improvement,"""ERNIE 3.0 achieved new state-of-the-art results across 54 Chinese NLP tasks""",10000000000.0,"""We trained the model with 10 billion parameters on a 4TB corpus consisting of plain texts and a large-scale knowledge graph.""",2.25e+22,,,"Section 3.3.3: 
""""The model is trained for
a total of 375 billion tokens""

Total compute approximated as 6*N*D",,,668000000000.0,"""To ensure the success of the pre-training of ERNIE 3.0, we construct a large-scale, wide-variety and high-quality Chinese text corpora amounting to 4TB storage size in 11 different categories.""

1 GB ~ 167M chinese words",,,,NVIDIA V100,384.0,Self-supervised learning,,,Open weights (unrestricted),,,2025-02-17 16:46:40+00:00,China,,,,,,,,,
DEQ-Transformer (Post-LN) + Jacobian Regularisation,Language,"Carnegie Mellon University (CMU),Intel Labs","Academia,Industry","Shaojie Bai, Vladlen Koltun, J. Zico Kolter",2021-06-28,Stabilizing Equilibrium Models by Jacobian Regularization,https://arxiv.org/abs/2106.14342,51.0,,,98000000.0,,2.9e+19,,,,WikiText-103,,,,23.0,,,,,,"Deep equilibrium networks (DEQs) are a new class of models that eschews traditional depth in favor of finding the fixed point of a single nonlinear layer. These models have been shown to achieve performance competitive with the state-of-the-art deep networks while using significantly less memory. Yet they are also slower, brittle to architectural choices, and introduce potential instability to the model. In this paper, we propose a regularization scheme for DEQ models that explicitly regularizes the Jacobian of the fixed-point update equations to stabilize the learning of equilibrium models. We show that this regularization adds only minimal computational cost, significantly stabilizes the fixed-point convergence in both forward and backward passes, and scales well to high-dimensional, realistic domains (e.g., WikiText-103 language modeling and ImageNet classification). Using this method, we demonstrate, for the first time, an implicit-depth model that runs with approximately the same speed and level of performance as popular conventional deep networks such as ResNet-101, while still maintaining the constant memory footprint and architectural simplicity of DEQs. Code is available at this https URL .",DEQ-Transformer (Post-LN) + Jacobian Regularisation,Open weights (unrestricted),,,2024-11-01 14:04:08+00:00,"United States of America,Multinational,United States of America",,,,,,,,,
Adaptive Input Transformer + RD,Language,"Microsoft Research Asia,Soochow University","Industry,Academia","Xiaobo Liang, Lijun Wu, Juntao Li, Yue Wang, Qi Meng, Tao Qin, Wei Chen, Min Zhang, Tie-Yan Liu",2021-06-28,R-Drop: Regularized Dropout for Neural Networks,https://arxiv.org/abs/2106.14448,379.0,SOTA improvement,"""In particular, it yields substantial
improvements when applied to fine-tune large-scale pre-trained models, e.g., ViT, RoBERTa-large, and BART, and achieves state-of-the-art (SOTA) performances with the vanilla Transformer model """,247000000.00000003,,8.2e+19,,,,WMT14,,,,,,,,,,,Adaptive Input Transformer + RD,Unreleased,,,2024-11-01 14:04:08+00:00,"China,Taiwan",,,,,,,,,
CPM-2,Language,"Tsinghua University,Beijing Academy of Artificial Intelligence / BAAI","Academia,Academia","Zhengyan Zhang, Yuxian Gu, Xu Han, Shengqi Chen, Chaojun Xiao, Zhenbo Sun, Yuan Yao, Fanchao Qi, Jian Guan, Pei Ke, Yanzheng Cai, Guoyang Zeng, Zhixing Tan, Zhiyuan Liu, Minlie Huang, Wentao Han, Yang Liu, Xiaoyan Zhu, Maosong Sun",2021-06-24,CPM-2: Large-scale Cost-effective Pre-trained Language Models,https://arxiv.org/abs/2106.10715,81.0,,,11000000000.0,"""we pretrain two models: an encoder-decoder bilingual model with 11 billion parameters (CPM2) and its corresponding MoE version with
198 billion parameters. """,3.600000000001e+22,,,"epoch count not stated
C = 6 FLOP * 11B * 464B = ",WuDao Corpora,,464000000000.0,"""We pre-train our model on WuDaoCorpus (Yuan et al., 2021), which contains 2.3TB cleaned Chinese data as well as 300GB cleaned English data.""

2300GB * 167M tokens/GB + 300GB * 267M tokens/GB = 464 billion tokens

https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.ieihc08p8dn0",,,,,,,"In recent years, the size of pre-trained language models (PLMs) has grown by leaps and bounds. However, efficiency issues of these large-scale PLMs limit their utilization in real-world scenarios. We present a suite of cost-effective techniques for the use of PLMs to deal with the efficiency issues of pre-training, fine-tuning, and inference. (1) We introduce knowledge inheritance to accelerate the pre-training process by exploiting existing PLMs instead of training models from scratch. (2) We explore the best practice of prompt tuning with large-scale PLMs. Compared with conventional fine-tuning, prompt tuning significantly reduces the number of task-specific parameters. (3) We implement a new inference toolkit, namely InfMoE, for using large-scale PLMs with limited computational resources. Based on our cost-effective pipeline, we pre-train two models: an encoder-decoder bilingual model with 11 billion parameters (CPM-2) and its corresponding MoE version with 198 billion parameters. In our experiments, we compare CPM-2 with mT5 on downstream tasks. Experimental results show that CPM-2 has excellent general language intelligence. Moreover, we validate the efficiency of InfMoE when conducting inference of large-scale models having tens of billions of parameters on a single GPU. All source code and model parameters are available at this https URL.",,,,Likely,2025-02-17 16:46:32+00:00,"China,China",,,,,,,,,
Fold2Seq,Biology,"IBM,Texas A&M","Industry,Academia","Yue Cao, Payel Das, Vijil Chenthamarakshan, Pin-Yu Chen, Igor Melnyk, Yang Shen",2021-06-24,Fold2Seq: A Joint Sequence(1D)-Fold(3D) Embedding-based Generative Model for Protein Design,https://arxiv.org/abs/2106.13058,44.0,SOTA improvement,"""On test sets with single, high-resolution and complete structure inputs for individual folds, our experiments demonstrate improved or comparable performance of Fold2Seq in terms of speed, coverage, and reliability for sequence design, when compared to existing state-of-the-art methods that include data-driven deep generative models and physics-based RosettaDesign."" [Abstract]",12427904.0,"Three components, a sequence encoder, fold encoder, and sequence decoder. (1) and (3) have similar architectures, a sequence embedder + transformer block (the encoder uses a transformer encoder, the decoder uses a decoder block). 

The fold encoder adds 6 residual conv blocks and has a 3d positional encoder rather than sequence embedder. Each residual block has two 3D-convolutional layers (3×3×3) and batch normalization layers.

Each transformer block has 4 layers and d = 256 latent dimensions.

Calculations here: https://docs.google.com/document/d/1luTCTQLmfaBfmnjbsBpWuG51x_IwuiN7mqNoOXtoi8Y/edit?usp=sharing",1.4e+17,,,"""We train our model on 2 Tesla K80 GPUs, with batch size 128. In every training stage we train up to 200 epochs with an early stopping strategy based on the validation loss""
See calculations here: https://docs.google.com/document/d/1luTCTQLmfaBfmnjbsBpWuG51x_IwuiN7mqNoOXtoi8Y/edit?usp=sharing

Block 1:
CNN 1: 2*20*20*20*3*3*3*4*8=13824000
CNN 2: 2*20*20*20*3*3*3*8*8=27648000
Block 2:
CNN 1: 2*20*20*20*3*3*3*8*16=55296000
CNN 2: 2*20*20*20*3*3*3*16*16=110592000
Block 3:
CNN 1: 2*20*20*20*3*3*3*16*32=221184000
CNN 2: 2*20*20*20*3*3*3*32*32=442368000
Block 4:
CNN 1: 2*10*10*10*3*3*3*32*64=110592000
CNN 2: 2*10*10*10*3*3*3*64*64=221184000
Block 5:
CNN 1: 2*10*10*10*3*3*3*64*128=442368000
CNN 2: 2*10*10*10*3*3*3*128*128=884736000
Block 6:
CNN 1: 2*10*10*10*3*3*3*128*256=1769472000
CNN 2: 2*10*10*10*3*3*3*256*256=3538944000
CNN forward FLOP: 13824000+27648000+55296000+110592000+221184000+442368000+110592000+221184000+442368000+884736000+1769472000+3538944000=7838208000
Training FLOP: 45995*200*(3299020800+4074393600+7838208000)=1.4e17


Note I make several assumptions about the CNN architecture which could change this value.",CATH,"""We used protein structure data from CATH 4.2""",45995.0,"""Training set includes 45995 proteins belonging to a total of 971 folds""",200.0,,,NVIDIA Tesla K80,2.0,,"Designing novel protein sequences for a desired 3D topological fold is a fundamental yet nontrivial task in protein engineering. Challenges exist due to the complex sequence–fold relationship, as well as the difficulties to capture the diversity of the sequences (therefore structures and functions) within a fold. To overcome these challenges, we propose Fold2Seq, a novel transformer-based
generative framework for designing protein sequences conditioned on a specific target fold. To model the complex sequence–structure relationship, Fold2Seq jointly learns a sequence embedding using a transformer and a fold embedding from the density of secondary structural elements in 3D voxels. On test sets with single, high-resolution and complete structure inputs for individual folds, our experiments demonstrate improved or comparable performance of Fold2Seq in terms of speed, coverage, and reliability for sequence design, when compared to existing state-of-the-art methods that include datadriven deep generative models and physics-based RosettaDesign. The unique advantages of foldbased Fold2Seq, in comparison to a structurebased deep model and RosettaDesign, become more evident on three additional real-world challenges originating from low-quality, incomplete, or ambiguous input structures. Source code and data are available at https://github.com/IBM/fold2seq.",,,,Unverified,2025-02-17 16:55:00+00:00,"United States of America,United States of America",,,,,,,128.0,,
EfficientNetV2-XL,Vision,"Google,Google Brain","Industry,Industry","Mingxing Tan, Quoc V. Le",2021-06-23,EfficientNetV2: Smaller Models and Faster Training,https://arxiv.org/abs/2104.00298,2048.0,"Highly cited,SOTA improvement","""EfficientNetV2 achieves 87.3% top-1 accuracy on ImageNet ILSVRC2012, outperforming the recent ViT by 2.0% accuracy while 
 training 5x-11x faster using the same computing resources.""",208000000.0,"208M for XL version (Table 7, page 7)",9.56e+19,,,"Table 7, page 7: 45 hours on 32 TPUv3 cores.

""Each v3 TPU chip contains two TensorCores.""
TPU performance per chip = 123e12 FLOP/s
32 cores = 16 chips

123e12 FLOP/s per chip * (32 cores / 2 cores per chip) * 45 hours * 3600 seconds/hour * 0.30 utilization = 9.56e19 FLOP

https://www.wolframalpha.com/input?i=123+terahertz+*+16+*+45+hours+*+0.3","ImageNet21k,ILSVRC 2012 subset of ImageNet","""Setup: ImageNet21k (Russakovsky et al., 2015) contains
about 13M training images with 21,841 classes. The original
ImageNet21k doesn’t have train/eval split, so we reserve randomly picked 100,000 images as validation set and use the
remaining as training set. We largely reuse the same training
settings as ImageNet ILSVRC2012 with a few changes: (1)
we change the training epochs to 60 or 30 to reduce training
time, and use cosine learning rate decay that can adapt to
different steps without extra tuning; (2) since each image
has multiple labels, we normalize the labels to have sum
of 1 before computing softmax loss. After pretrained on
ImageNet21k, each model is finetuned on ILSVRC2012 for
15 epochs using cosine learning rate decay.""

Based on Table 7, where XL is trained on 5x as many TPU-hours as S, despite having 10x as many parameters, XL was probably trained on 30 epochs and S on 60 epochs.

",14180000.0,"""ImageNet21k (Russakovsky et al., 2015) contains about 13M training images with 21,841 classes. The original ImageNet21k doesn’t have train/eval split, so we reserve randomly picked 100,000 images as validation set and use the remaining as training set...
After pretrained on ImageNet21k, each model is finetuned on ILSVRC2012 for 15 epochs using cosine learning rate decay.""

12.9M + 1.28M ~= 14,180,000",30.0,45.0,Table 7,Google TPU v3,16.0,Supervised,"This paper introduces EfficientNetV2, a new family of convolutional networks that have faster training speed and better parameter efficiency than previous models. To develop this family of models, we use a combination of training-aware neural architecture search and scaling, to jointly optimize training speed and parameter efficiency. The models were searched from the search space enriched with new ops such as Fused-MBConv. Our experiments show that EfficientNetV2 models train much faster than state-of-the-art models while being up to 6.8x smaller.
Our training can be further sped up by progressively increasing the image size during training, but it often causes a drop in accuracy. To compensate for this accuracy drop, we propose to adaptively adjust regularization (e.g., dropout and data augmentation) as well, such that we can achieve both fast training and good accuracy.
With progressive learning, our EfficientNetV2 significantly outperforms previous models on ImageNet and CIFAR/Cars/Flowers datasets. By pretraining on the same ImageNet21k, our EfficientNetV2 achieves 87.3% top-1 accuracy on ImageNet ILSVRC2012, outperforming the recent ViT by 2.0% accuracy while training 5x-11x faster using the same computing resources. Code will be available at this https URL.",,Open weights (unrestricted),,Confident,2025-02-17 16:55:08+00:00,"United States of America,United States of America",,,,,,,4096.0,"""Each model is trained for 350 epochs with total batch size 4096""",
ALIGN,"Multimodal,Vision,Language",Google Research,Industry,"Chao Jia, Yinfei Yang, Ye Xia, Yi-Ting Chen, Zarana Parekh, Hieu Pham, Quoc V. Le, Yunhsuan Sung, Zhen Li, Tom Duerig",2021-06-11,Scaling up visual and vision-language representation learning with noisy text supervision,https://arxiv.org/abs/2102.05918,3019.0,"Highly cited,SOTA improvement","""The aligned visual and language representations... set new state-of-the-art results on Flickr30K and MSCOCO image-text retrieval benchmarks""",820000000.0,"From author communication

480M (image tower) + 340 M (text tower)",2.598670000001e+22,,,"From author communication
14.82K TPUv3 core-days
Precision: bfloat16

Estimation
TPUv3 at float16: 123 TFLOPS/chip

123*10^12 TFLOPS/chip * (1 chip / 2 cores) * 14820 TPU core-days * 86400 s/day * 33% utilization = 2.599*10^22 FLOP
https://www.wolframalpha.com/input?i=14820+days+*+123+teraFLOPS+%2F+2+*+0.33","Conceptual Captions (CC3M),FIT400M",,1600000000.0,"Dataset contains 1.8B image-text pairs, then some duplicates are removed.",,347.3,14820 TPU core-hours / 1024 TPU cores = 347.3 hours,Google TPU v3,512.0,Self-supervised learning,"Pre-trained representations are becoming crucial for many NLP and perception tasks. While representation learning in NLP has transitioned to training on raw text without human annotations, visual and vision-language representations still rely heavily on curated training datasets that are expensive or require expert knowledge. For vision applications, representations are mostly learned using datasets with explicit class labels such as ImageNet or OpenImages. For vision-language, popular datasets like Conceptual Captions, MSCOCO, or CLIP all involve a non-trivial data collection (and cleaning) process. This costly curation process limits the size of datasets and hence hinders the scaling of trained models. In this paper, we leverage a noisy dataset of over one billion image alt-text pairs, obtained without expensive filtering or post-processing steps in the Conceptual Captions dataset. A simple dual-encoder architecture learns to align visual and language representations of the image and text pairs using a contrastive loss. We show that the scale of our corpus can make up for its noise and leads to state-of-the-art representations even with such a simple learning scheme. Our visual representation achieves strong performance when transferred to classification tasks such as ImageNet and VTAB. The aligned visual and language representations enables zero-shot image classification and also set new state-of-the-art results on Flickr30K and MSCOCO image-text retrieval benchmarks, even when compared with more sophisticated cross-attention models. The representations also enable cross-modality search with complex text and text + image queries.",,Unreleased,,Confident,2025-02-13 20:36:28+00:00,"Multinational,United States of America",,,,,,,16384.0,,
Denoising Diffusion Probabilistic Models (LSUN Bedroom),Vision,University of California (UC) Berkeley,Academia,"Jonathan Ho, Ajay Jain, Pieter Abbeel",2021-06-11,Denoising Diffusion Probabilistic Models,https://arxiv.org/abs/2006.11239,11839.0,"Highly cited,SOTA improvement","Novel approach to image synthesis that yields SOTA results on datasets like CIFAR-10

Abstract: 
""On the unconditional CIFAR10 dataset, we obtain an Inception score of 9.46 and a state-of-the-art FID score of 3.17. """,256000000.0,"Appendix B: 
"" Our CIFAR10 model has 35.7 million parameters, and our LSUN and
CelebA-HQ models have 114 million parameters. We also trained a larger variant of the LSUN Bedroom model with approximately 256 million parameters by increasing filter count.""",3.8e+20,,,"Numbers in Appendix B
10.6h for the CIFAR model (batch size 128, 21 step/s)
2.2 step/s for the LSUN model, 1.15M steps so 702.8 hours

This is for TPUv3-8's, which seems to mean 8 cores (standard chip is 125 teraflop/s for 2 cores)
https://cloud.google.com/tpu/docs/regions-zones

1.25E14 FLOP/s * (8 cores / 2 cores/chip) * 702.8h * 3600s/h * 0.3 = 3.8e20",LSUN Bedroom,,3033042.0,"""We trained on CelebA-HQ for 0.5M steps, LSUN Bedroom for 2.4M steps, LSUN Cat for 1.8M steps, and LSUN Church for 1.2M steps.""

""The CelebA-HQ dataset is a high-quality version of CelebA that consists of 30,000 images at 1024×1024 resolution.""
https://paperswithcode.com/dataset/celeba-hq

LSUN bedroom has 3,033,042 examples. LSUN cat has 1,657,266 examples. LSUN church has 126,227 examples.
https://www.tensorflow.org/datasets/catalog/lsun
",,,,Google TPU v3,,,"We present high quality image synthesis results using diffusion probabilistic models, a class of latent variable models inspired by considerations from nonequilibrium thermodynamics. Our best results are obtained by training on a weighted variational bound designed according to a novel connection between diffusion probabilistic models and denoising score matching with Langevin dynamics, and our models naturally admit a progressive lossy decompression scheme that can be interpreted as a generalization of autoregressive decoding. On the unconditional CIFAR10 dataset, we obtain an Inception score of 9.46 and a state-of-the-art FID score of 3.17. On 256x256 LSUN, we obtain sample quality similar to ProgressiveGAN. Our implementation is available at this https URL",,Open weights (unrestricted),,,2025-02-17 16:55:20+00:00,United States of America,,,,,,,,,
Delta RNN (+ full context),Language,"IDSIA,SUPSI,King Abdullah University of Science and Technology (KAUST)","Academia,Academia,Academia","Kazuki Irie, Imanol Schlag, Róbert Csordás, Jürgen Schmidhuber",2021-06-11,Going Beyond Linear Transformers with Recurrent Fast Weight Programmers,https://proceedings.neurips.cc/paper/2021/file/3f9e3767ef3b10a0de4c256d7ef9805d-Paper.pdf,51.0,,,44600000.0,,1.1e+18,,,,WikiText-103,,,,40.0,,,,,,"Transformers with linearised attention (“linear Transformers”) have demonstrated the practical scalability and effectiveness of outer product-based Fast Weight Programmers (FWPs) from the ’90s. However, the original FWP formulation is more general than the one of linear Transformers: a slow neural network (NN) continually reprograms the weights of a fast NN with arbitrary architecture. In existing linear Transformers, both NNs are feedforward and consist of a single layer. Here we explore new variations by adding recurrence to the slow and fast nets. We evaluate our novel recurrent FWPs (RFWPs) on two synthetic algorithmic tasks (code execution and sequential ListOps), Wikitext-103 language models, and on the Atari 2600 2D game environment. Our models exhibit properties of Transformers and RNNs. In the reinforcement learning setting, we report large improvements over LSTM in several Atari games. Our code is public.1
",Delta RNN (+ full context),Unreleased,,,2024-11-01 14:04:08+00:00,"Switzerland,Switzerland,Saudi Arabia",,,,,,,,,
DeBERTa,Language,Microsoft,Industry,"Pengcheng He, Xiaodong Liu, Jianfeng Gao, Weizhu Chen",2021-06-10,DeBERTa: Decoding-enhanced BERT with Disentangled Attention,https://arxiv.org/abs/2006.03654,2229.0,"Highly cited,SOTA improvement","""DeBERTa significantly outperforms all existing PLMs of similar size on MNLI and creates a new state of the art""",1500000000.0,"""...we scale up DeBERTa by training a larger version that consists of 48 Transform layers with 1.5 billion parameters""

Other versions are smaller and use a smaller pre-training dataset. These are distinguished in the paper (e.g. DeBERTa1.5B is the version of DeBERTa with 1.5 billion parameters).",2.588e+22,,,"Table 8: 16 DGX-2 nodes (x16 V100s each) for 30 days
16 * 16 * 1.3e14 * 30 * 24 * 3600 * 0.3 = 2.588e22","Wikipedia,CC-Stories,OPENWEBTEXT,BookCorpus (BooksCorpus, Toronto Book Corpus)","We pre-train our large models following the setting of BERT (Devlin et al., 2019), except that we use the BPE vocabulary of Radford et al. (2019); Liu et al. (2019c). For training data, we use Wikipedia (English Wikipedia dump3; 12GB), BookCorpus (Zhu et al., 2015) (6GB), OPENWEBTEXT (public Reddit content (Gokaslan & Cohen, 2019); 38GB), and STORIES (a subset of CommonCrawl (Trinh & Le, 2018); 31GB). The total data size after data deduplication (Shoeybi et al., 2019) is about 78G",15600000000.0,""" DeBERTa is pretrained on 78G training data""

1GB ~ 200M words",49.2,720.0,30 days (Table 8),NVIDIA V100,256.0,Self-supervised learning,"Recent progress in pre-trained neural language models has significantly improved the performance of many natural language processing (NLP) tasks. In this paper we propose a new model architecture DeBERTa (Decoding-enhanced BERT with disentangled attention) that improves the BERT and RoBERTa models using two novel techniques. The first is the disentangled attention mechanism, where each word is represented using two vectors that encode its content and position, respectively, and the attention weights among words are computed using disentangled matrices on their contents and relative positions, respectively. Second, an enhanced mask decoder is used to incorporate absolute positions in the decoding layer to predict the masked tokens in model pre-training. In addition, a new virtual adversarial training method is used for fine-tuning to improve models' generalization. We show that these techniques significantly improve the efficiency of model pre-training and the performance of both natural language understanding (NLU) and natural langauge generation (NLG) downstream tasks. Compared to RoBERTa-Large, a DeBERTa model trained on half of the training data performs consistently better on a wide range of NLP tasks, achieving improvements on MNLI by +0.9% (90.2% vs. 91.1%), on SQuAD v2.0 by +2.3% (88.4% vs. 90.7%) and RACE by +3.6% (83.2% vs. 86.8%). Notably, we scale up DeBERTa by training a larger version that consists of 48 Transform layers with 1.5 billion parameters. The significant performance boost makes the single DeBERTa model surpass the human performance on the SuperGLUE benchmark (Wang et al., 2019a) for the first time in terms of macro-average score (89.9 versus 89.8), and the ensemble DeBERTa model sits atop the SuperGLUE leaderboard as of January 6, 2021, out performing the human baseline by a decent margin (90.3 versus 89.8).",,Open weights (unrestricted),,,2024-11-07 20:19:47+00:00,United States of America,,,,,,,,,
CoAtNet,Vision,"Google,Google Research,Google Brain","Industry,Industry,Industry","Zihang Dai, Hanxiao Liu, Quoc V. Le, Mingxing Tan",2021-06-09,"CoAtNet: Marrying Convolution and Attention
for All Data Sizes",https://arxiv.org/abs/2106.04803v2,997.0,SOTA improvement,"""Notably, when we further scale up CoAtNet with JFT-3B, it achieves 90.88% top-1 accuracy on ImageNet, establishing a new state-of-the-art result.""",2440000000.0,,4.27e+22,,,"20.1K TPU-v3 core-days

TPUs have two cores per chip, and a chip is 123 teraflop/s 
https://cloud.google.com/tpu/docs/system-architecture-tpu-vm#tpu_v3

123 teraflop/s * 20100/2 * 24 * 3600 * 0.4 (utilization assumption for non-language models) = 4.27e22",JFT-3B,"When only ImageNet-1K is used for training, CoAtNet achieves 86.0% top-1 accuracy, matching the prior art NFNet [20] under similar computation resource and training conditions. Further, when pre-trained on ImageNet-21K with about 10M images, CoAtNet reaches 88.56% top-1 accuracy when finetuned on ImageNet-1K, matching the ViT-Huge pre-trained on JFT-300M, a 23× larger dataset. Finally, when JFT-3B is used for pre-training, CoAtNet exhibits better efficiency compared to ViT, and pushes the ImageNet-1K top-1 accuracy to 90.88% while using 1.5x less computation of the prior art set by ViT-G/14 [26].",3000000000.0,"Used JFT-3B (3 billion images), but not stated for how many epochs. 

Based on GPU time, training took 4.27e+22 FLOPs. Table 5 indicates 2.586e12 FLOPs per image. Since training is roughly 3x the FLOP cost of inference, implies inference on full training set took 1.42e22 FLOP
Then # images trained over is around 1.42e22 / 2.586e12 = 5,491,105,955

So probably ~1.83 epochs on 3B images",1.83,,,Google TPU v3,,,"Transformers have attracted increasing interests in computer vision, but they still fall behind state-of-the-art convolutional networks. In this work, we show that while Transformers tend to have larger model capacity, their generalization can be worse than convolutional networks due to the lack of the right inductive bias. To effectively combine the strengths from both architectures, we present CoAtNets (pronounced “coat” nets), a family of hybrid models built from two key insights: (1) depthwise Convolution and self-Attention can be naturally unified via simple relative attention; (2) vertically stacking convolution layers and attention layers in a principled way is surprisingly effective in improving generalization, capacity and efficiency. Experiments show that our CoAtNets achieve state-of-the-art performance under different resource constraints across various datasets: Without extra data, CoAtNet achieves 86.0% ImageNet top-1 accuracy; When pre-trained with 13M images from ImageNet-21K, our CoAtNet achieves 88.56% top-1 accuracy, matching ViT-huge pre-trained with 300M images from JFT-300M while using 23x less data; Notably, when we further scale up CoAtNet with JFT-3B, it achieves 90.88% top-1 accuracy on ImageNet, establishing a new state-of-the-art result.",,Unreleased,,Confident,2025-02-17 16:55:32+00:00,"United States of America,Multinational,United States of America,United States of America",,,,,,,,,
EMDR,Language,"Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),McGill University,DeepMind","Academia,Academia,Industry","Devendra Singh Sachan, Siva Reddy, William Hamilton, Chris Dyer, Dani Yogatama",2021-06-09,End-to-End Training of Multi-Document Reader and Retriever for Open-Domain Question Answering,https://arxiv.org/abs/2106.05346v2,147.0,SOTA improvement,"""Experiments on three benchmark datasets demonstrate that our proposed method outperforms all existing approaches of comparable size by 2-3% absolute exact match points, achieving new state-of-the-art results.""",440000000.0,Table 2,1.91e+21,,,"""We run all of our experiments on a machine with 96 CPUs, 1.3TB physical memory, and 16 A100 GPUs. We use PyTorch (Paszke et al., 2019) to implement our proposed model. With this hardware setup, our experiments on NQ and TriviaQA took approximately 25 hours to complete, while experiments on WebQ took roughly 8 hours to complete. Before supervised training, we also perform a one-time unsupervised MSS pre-training for 82,000 steps that took roughly 1 week.""

1 week + 25 hours * 16 A100s
= ~193 * 16 A100-hours
= 193 * 16 * 3600 * 312 trillion * 0.3 = 1.04e21

Additionally, the model uses BERT, ICT, and T5 models. These required:
- BERT: 6 * 110M parameters * (1M * 256 * 256) inputs = 4.33e19 FLOP
- ICT: 6 * 220M parameters * (100k * 4096 * 256) inputs = 1.38e20 FLOP
- T5: 6 * 220M parameters * (1M * 2048 * 256) inputs = 6.92e20 FLOP

Total: 1.04e21 + 4.33e19 + 1.38e20 + 6.92e20 = 1.91e21","Wikipedia,NQ (Natural Questions),TriviaQA","Pre-train different components on Wikipedia, BookCorpus, C4, and OpenWebText (Table 6), then training on the QA datasets",171600000000.0,"At the time of publication there were about 4B words (5.3B tokens) on English Wikipedia: https://en.wikipedia.org/wiki/Wikipedia:Size_of_Wikipedia#Yearly_statistics
BookCorpus has about 1B words (1.3B tokens), C4 has about 156B tokens, and OpenWebText has about 9B tokens.

From Table 6, it looks like all datasets were trained on for over one epoch.

BERT: 1M steps, batches of 256, sequence length 256 = 65.5B tokens vs 6.6B in Wikipedia + BookCorpus
ICT: 100k steps, batches of 4096, sequence length 256 = 104.9B tokens vs 5.3B in Wikipedia
T5: 1M steps, batches of 2048, sequence length 256 = 524.3B tokens vs 170.3B tokens in C4 + Wikipedia + OpenWebText

Total tokens: 171.6 billion

Some tokens were probably seen more times than others, but overall this corresponds to 4.05 epochs on the pre-training data. ",4.05,355.0,"""We run all of our experiments on a machine with 96 CPUs, 1.3TB physical memory, and 16 A100 GPUs [...] our experiments on NQ and TriviaQA took approximately 25 hours to complete, while experiments on WebQ took roughly 8 hours to complete. Before supervised training, we also perform a one-time unsupervised MSS pre-training for 82,000 steps that took roughly 1 week""

Additionally, they pre-trained BERT, ICT, and T5 models, which took a combined 8.733e20 FLOPs. On 16 A100s at 0.3 utilization, that would have taken approximately 162 hours.

So total time for the largest experiment (NQ or TriviaQA) is around:
25 + 168 + 162 = 355",NVIDIA A100,,,"We present an end-to-end differentiable training method for retrieval-augmented open-domain question answering systems that combine information from multiple retrieved documents when generating answers. We model retrieval decisions as latent variables over sets of relevant documents. Since marginalizing over sets of retrieved documents is computationally hard, we approximate this using an expectation-maximization algorithm. We iteratively estimate the value of our latent variable (the set of relevant documents for a given question) and then use this estimate to update the retriever and reader parameters. We hypothesize that such end-to-end training allows training signals to flow to the reader and then to the retriever better than staged-wise training. This results in a retriever that is able to select more relevant documents for a question and a reader that is trained on more accurate documents to generate an answer. Experiments on three benchmark datasets demonstrate that our proposed method outperforms all existing approaches of comparable size by 2-3% absolute exact match points, achieving new state-of-the-art results. Our results also demonstrate the feasibility of learning to retrieve to improve answer generation without explicit supervision of retrieval decisions.",,Open weights (unrestricted),,Confident,2025-02-17 16:56:11+00:00,"Canada,Canada,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
ViT-G/14,Vision,"Google Brain,Google Research","Industry,Industry","X Zhai, A Kolesnikov, N Houlsby, L Beyer",2021-06-08,Scaling Vision Transformers,https://arxiv.org/abs/2106.04560,903.0,SOTA improvement,"""we successfully train a ViT model with two billion parameters, which attains a new state-of-the-art on ImageNet of 90.45% top-1 accuracy""",1843000000.0,Table 2 of paper,5.85e+22,,,"Digitizing Figure 9 indicates training used 27,200 TPUv3 core-days. TPUv3 is 123 teraflop/s per chip, 2 cores per chip.

1.23e14 * (1/2) * 27,200 * 24 * 3600 * 0.4 = 5.78e22

Alternatively, Table 2 indicates 965.3e9 FLOPs per forward pass on a 224^2 image. Table 4 indicates 5 million steps at a (normalized) batch size of 4096, and total flops including backward pass would be 3x the FLOPs from forward passes alone, so we get:
4096 * 5e6 * 965.3e9 * 3 = 5.93e22

(Note that actual batch size appears to have been 32,768)

Geometric mean: sqrt(5.78e22*5.93e22) = 5.85e22

However note that this leaderboard claims ViT-G/14 took 34 PF-days, or 2.94e21 FLOPs: https://web.archive.org/web/20211218185755/https://lair.lighton.ai/akronomicon/","JFT-3B,ImageNet","We trained a large Vision Transformer, ViT-G/14, which
contains nearly two billion parameters. Section 3.6 details
the architecture’s shape. We evaluate the ViT-G/14 model on
a range of downstream tasks, and compare it to recent stateof-the-art results. We fine-tune on ImaegNet",3000000000.0,"""For this study, we use the proprietary JFT-3B dataset, a larger version of the JFT-300M dataset used in many previous works on large-scale computer vision models [31, 18, 11]. This dataset consists of nearly 3 billion images, annotated with a class-hierarchy of around 30k labels via a semi-automatic
pipeline""

Epochs: 5M steps (Table 11) * 32768 (batch size) / 3B = 54.6 epochs",54.6,,,Google TPU v3,2048.0,Self-supervised learning,"Attention-based neural networks such as the Vision Transformer (ViT) have recently attained state-of-the-art results on many computer vision benchmarks. Scale is a primary ingredient in attaining excellent results, therefore, understanding a model's scaling properties is a key to designing future generations effectively. While the laws for scaling Transformer language models have been studied, it is unknown how Vision Transformers scale. To address this, we scale ViT models and data, both up and down, and characterize the relationships between error rate, data, and compute. Along the way, we refine the architecture and training of ViT, reducing memory consumption and increasing accuracy of the resulting models. As a result, we successfully train a ViT model with two billion parameters, which attains a new state-of-the-art on ImageNet of 90.45% top-1 accuracy. The model also performs well for few-shot transfer, for example, reaching 84.86% top-1 accuracy on ImageNet with only 10 examples per class.",,Unreleased,,Confident,2025-02-17 16:56:38+00:00,"United States of America,Multinational,United States of America",,,,,,,32768.0,,
AFP+FPI (PTB),Language,University of Sheffield,Academia,"Zhengxiong Wang, Anton Ragni",2021-06-04,Approximate Fixed-Points in Recurrent Neural Networks,https://arxiv.org/abs/2106.02417,2.0,,,2040000.0,,227000000000000.0,,,,Penn TreeBank,,,,20.0,,,,,,"Recurrent neural networks are widely used in speech and language processing. Due to dependency on the past, standard algorithms for training these models, such as back-propagation through time (BPTT), cannot be efficiently parallelised. Furthermore, applying these models to more complex structures than sequences requires inference time approximations, which introduce inconsistency between inference and training. This paper shows that recurrent neural networks can be reformulated as fixed-points of non-linear equation systems. These fixed-points can be computed using an iterative algorithm exactly and in as many iterations as the length of any given sequence. Each iteration of this algorithm adds one additional Markovian-like order of dependencies such that upon termination all dependencies modelled by the recurrent neural networks have been incorporated. Although exact fixed-points inherit the same parallelization and inconsistency issues, this paper shows that approximate fixed-points can be computed in parallel and used consistently in training and inference including tasks such as lattice rescoring. Experimental validation is performed in two tasks, Penn Tree Bank and WikiText-2, and shows that approximate fixed-points yield competitive prediction performance to recurrent neural networks trained using the BPTT algorithm.",AFP+FPI (PTB),Unreleased,,,2024-09-09 03:48:55+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
GPT2-Large+LHOPT,Language,OpenAI,Industry,"Diogo Almeida, Clemens Winter, Jie Tang, Wojciech Zaremba",2021-06-02,A Generalizable Approach to Learning Optimizers,https://arxiv.org/abs/2106.00958,27.0,,,760000000.0,,1.6e+21,,,,,,,,1.0,,,,,,"A core issue with learning to optimize neural networks has been the lack of generalization to real world problems. To address this, we describe a system designed from a generalization-first perspective, learning to update optimizer hyperparameters instead of model parameters directly using novel features, actions, and a reward function. This system outperforms Adam at all neural network tasks including on modalities not seen during training. We achieve 2x speedups on ImageNet, and a 2.5x speedup on a language modeling task using over 5 orders of magnitude more compute than the training tasks.",GPT2-Large+LHOPT,Unreleased,,,2024-10-01 14:01:10+00:00,United States of America,,,,,,GPT2-Large+LHOPT,,,
Wu Dao 2.0,"Multimodal,Language,Vision,Image generation",Beijing Academy of Artificial Intelligence / BAAI,Academia,,2021-05-31,China's gigantic multi-modal AI is no one-trick pony,https://www.engadget.com/chinas-gigantic-multi-modal-ai-is-no-one-trick-pony-211414388.html,,,,1750000000000.0,"""It's been trained on 1.75 trillion parameters""",,,,"It's a mixture-of-experts model, so 1.75 trillion params likely overstates how much compute was required:

""The parameter scale of Enlightenment 2.0 reached a record-breaking 1.75 trillion. According to reports, the new generation FastMoE technology is the key to the realization of the ""Trillion Model"" cornerstone of Enlightenment 2.0.""

",WuDao Corpora,"WuDao Corpora, as of version 2.0, was a large dataset constructed for training Wu Dao 2.0. It contains 3 terabytes of text scraped from web data, 90 terabytes of graphical data (incorporating 630 million text/image pairs), and 181 gigabytes of Chinese dialogue (incorporating 1.4 billion dialogue rounds).
https://en.wikipedia.org/wiki/Wu_Dao#WuDao_Corpora",,,,,,,,,"Sporting 1.75 trillion parameters, Wu Dao 2.0 is roughly ten times the size of Open AI's GPT-3.",,API access,,,2025-01-10 16:31:02+00:00,China,,,,,,,,,True
CODA,Language,"The University of Hong Kong,Sun Yat-sen University,Shanghai AI Lab","Academia,Academia,Academia","Lin Zheng, Zhiyong Wu, Lingpeng Kong",2021-05-31,Cascaded Head-colliding Attention,https://arxiv.org/abs/2105.14850,2.0,,,246930000.0,Table 1,,,,"Largest model trained is on WikiText-103. We don't know how many epochs the model trained for, but FLOPs per epoch is roughly
6 * 103M * 246.93M = 1.526e17. However, this work replaces multi-head attention with a more complex block. They don't state the time complexity, but I suspect it is higher than for MHA.",WikiText-103,"""First, we conducted experiments for token-level language modeling on a large-scale benchmark dataset Wikitext-103 (Merity et al., 2016), which consists of articles from Wikipedia with the token number around 103M/218K/246K for the training/validation/testing splits respectively. The vocabulary size is 267,744.""",103000000.0,"""Wikitext-103 [...] consists of articles from Wikipedia with the token number around 103M/218K/246K for the training/validation/testing splits respectively.""",,,,,,,"Transformers have advanced the field of natural language processing (NLP) on a variety of important tasks. At the cornerstone of the Transformer architecture is the multi-head attention (MHA) mechanism which models pairwise interactions between the elements of the sequence. Despite its massive success, the current framework ignores interactions among different heads, leading to the problem that many of the heads are redundant in practice, which greatly wastes the capacity of the model. To improve parameter efficiency, we re-formulate the MHA as a latent variable model from a probabilistic perspective. We present cascaded head-colliding attention (CODA) which explicitly models the interactions between attention heads through a hierarchical variational distribution. We conduct extensive experiments and demonstrate that CODA outperforms the transformer baseline, by 0.6 perplexity on \texttt{Wikitext-103} in language modeling, and by 0.6 BLEU on \texttt{WMT14 EN-DE} in machine translation, due to its improvements on the parameter efficiency.\footnote{Our implementation is publicly available at \url{this https URL}.}",CODA,Unreleased,,Confident,2024-09-30 21:43:53+00:00,"Hong Kong,China,China,China",,,,,,,,,
ByT5-XXL,Language,"Google,Google Research","Industry,Industry","Linting Xue, Aditya Barua, Noah Constant, Rami Al-Rfou, Sharan Narang, Mihir Kale, Adam Roberts, Colin Raffel",2021-05-28,ByT5: Towards a token-free future with pre-trained byte-to-byte models,https://arxiv.org/abs/2105.13626,392.0,SOTA improvement,"""On the most realistic in-language setting, where some gold training data is available in all languages, ByT5 surpasses the previous state-of-art mT5 on all tasks and model sizes""",12900000000.0,"12.9B, from Table 1",8.1e+22,,,"""Like mT5, we set our sequence length to 1024 (bytes rather than tokens), and train for 1 million steps over batches of 2^20 tokens.""

12.9 billion * 1 million * 2^20 * 6 = ~8.1e22",mC4,,,,,,"Table 9 indicates pretraining completes 25 sequences per second on a TPUv3-64 device. 

""we set our sequence length to 1024 (bytes rather than tokens), and train for 1 million steps over batches of 2^20 tokens."" 

So 1024 sequences per step * 1M steps = 1.024 billion sequences
1.024 B / 25 = 40.96M seconds = 11378 hours or 474 days. This seems implausible, so probably they just used a bigger TPU slice for the full training, but this is not indicated.",Google TPU v3,,,"Most widely-used pre-trained language models operate on sequences of tokens corresponding to word or subword units. By comparison, token-free models that operate directly on raw text (bytes or characters) have many benefits: they can process text in any language out of the box, they are more robust to noise, and they minimize technical debt by removing complex and error-prone text preprocessing pipelines. Since byte or character sequences are longer than token sequences, past work on token-free models has often introduced new model architectures designed to amortize the cost of operating directly on raw text. In this paper, we show that a standard Transformer architecture can be used with minimal modifications to process byte sequences. We characterize the trade-offs in terms of parameter count, training FLOPs, and inference speed, and show that byte-level models are competitive with their token-level counterparts. We also demonstrate that byte-level models are significantly more robust to noise and perform better on tasks that are sensitive to spelling and pronunciation. As part of our contribution, we release a new set of pre-trained byte-level Transformer models based on the T5 architecture, as well as all code and data used in our experiments.",,Open weights (unrestricted),,Likely,2024-12-22 19:25:49+00:00,"United States of America,Multinational,United States of America",,,,,,,1048576.0,"""Like mT5, we set our sequence length to 1024 (bytes rather than tokens), and train for 1 million steps over batches of 2^20 tokens""",
Transformer local-attention (NesT-B),Vision,"Google Cloud,Google Research","Industry,Industry","Zizhao Zhang, Han Zhang, Long Zhao, Ting Chen, Sercan Arık, Tomas Pfister",2021-05-26,"Nested Hierarchical Transformer: Towards Accurate, Data-Efficient and Interpretable Visual Understanding",https://arxiv.org/abs/2105.12723v4,5734.0,Highly cited,,90100000.0,"Table A2, NesT-B is the largest size.",2.40576e+19,,,"17.9 GFLOPS per forward pass
300 epochs
1.28M training examples
3.5 f_to_b pass ratio
(From Imagenet paper-data, Besiroglu et al., forthcoming) ",ImageNet-1k,,1280000.0,,,,,,,Self-supervised learning,"Hierarchical structures are popular in recent vision transformers, however, they require sophisticated designs and massive datasets to work well. In this paper, we explore the idea of nesting basic local transformers on non-overlapping image blocks and aggregating them in a hierarchical way. We find that the block aggregation function plays a critical role in enabling cross-block non-local information communication. This observation leads us to design a simplified architecture that requires minor code changes upon the original vision transformer. The benefits of the proposed judiciously-selected design are threefold: (1) NesT converges faster and requires much less training data to achieve good generalization on both ImageNet and small datasets like CIFAR; (2) when extending our key ideas to image generation, NesT leads to a strong decoder that is 8× faster than previous transformer-based generators; and (3) we show that decoupling the feature learning and abstraction processes via this nested hierarchy in our design enables constructing a novel method (named GradCAT) for visually interpreting the learned model. Source code is available this https URL.",,Open weights (unrestricted),,,2025-02-17 16:56:53+00:00,"Multinational,United States of America,Multinational,United States of America",,,,,,,,,
CogView,Image generation,"Tsinghua University,Alibaba DAMO Academy","Academia,Industry","M Ding, Z Yang, W Hong, W Zheng, C Zhou",2021-05-26,CogView: Mastering Text-to-Image Generation via Transformers,https://arxiv.org/abs/2105.13290,631.0,SOTA improvement,"""CogView achieves the state-of-the-art FID on the blurred MS COCO dataset, outperforming previous GAN-based models and a recent similar work DALL-E""",4000000000.0,"""We propose CogView, a 4-billion-parameter Transformer with VQ-VAE tokenizer to advance this problem.""",2.68e+22,,,"source: https://lair.lighton.ai/akronomicon/
archived: https://github.com/lightonai/akronomicon/tree/main/akrodb",WuDao Corpora,"""We collected about 30 million text-image pairs from multiple channels, and built a 2.5TB new dataset (after tokenization, the size becomes about 250GB).""",50000000000.0,"""We collected about 30 million text-image pairs from multiple channels, and built a 2.5TB new dataset (after tokenization, the size becomes about 250GB).""

250GB * (1 word / 5 bytes) = 50 billion words or 67 billion tokens

So 30M text-image pairs and 50 billion words",,,,NVIDIA Tesla V100 DGXS 16 GB,512.0,Self-supervised learning,"Text-to-Image generation in the general domain has long been an open problem, which requires both a powerful generative model and cross-modal understanding. We propose CogView, a 4-billion-parameter Transformer with VQ-VAE tokenizer to advance this problem. We also demonstrate the finetuning strategies for various downstream tasks, e.g. style learning, super-resolution, text-image ranking and fashion design, and methods to stabilize pretraining, e.g. eliminating NaN losses. CogView achieves the state-of-the-art FID on the blurred MS COCO dataset, outperforming previous GAN-based models and a recent similar work DALL-E.",,Open weights (unrestricted),,Likely,2025-02-17 19:51:52+00:00,"China,China",,,,,,,,,True
DeepFRI,Biology,"Flatiron Institute,University of California San Diego,Jagiellonian University,New York University (NYU),Broad Institute,University of Auckland,Massachusettes General Hospital,Harvard Medical School,Massachusetts Institute of Technology (MIT)","Academia,Academia,Academia,Research collective,Academia,Academia,Academia","Vladimir Gligorijević, P. Douglas Renfrew, Tomasz Kosciolek, Julia Koehler Leman, Daniel Berenberg, Tommi Vatanen, Chris Chandler, Bryn C. Taylor, Ian M. Fisk, Hera Vlamakis, Ramnik J. Xavier, Rob Knight, Kyunghyun Cho & Richard Bonneau",2021-05-26,Structure-based protein function prediction using graph convolutional networks,https://www.nature.com/articles/s41467-021-23303-9,658.0,,,,,,,,,,,,,,,,,,,"The rapid increase in the number of proteins in sequence databases and the diversity of their functions challenge computational approaches for automated function prediction. Here, we introduce DeepFRI, a Graph Convolutional Network for predicting protein functions by leveraging sequence features extracted from a protein language model and protein structures. It outperforms current leading methods and sequence-based Convolutional Neural Networks and scales to the size of current sequence repositories. Augmenting the training set of experimental structures with homology models allows us to significantly expand the number of predictable functions. DeepFRI has significant de-noising capability, with only a minor drop in performance when experimental structures are replaced by protein models. Class activation mapping allows function predictions at an unprecedented resolution, allowing site-specific annotations at the residue-level in an automated manner. We show the utility and high performance of our method by annotating structures from the PDB and SWISS-MODEL, making several new confident function predictions. DeepFRI is available as a webserver at https://beta.deepfri.flatironinstitute.org/.",,,,Unverified,2024-10-22 14:20:18+00:00,"United States of America,United States of America,Poland,United States of America,United States of America,New Zealand,United States of America,United States of America,United States of America",,,,,,,,,
ConSERT,Language,"Meituan University,Beijing University of Posts and Telecommunications","Academia,Academia","Yuanmeng Yan, Rumei Li, Sirui Wang, Fuzheng Zhang, Wei Wu, Weiran Xu",2021-05-25,ConSERT: A contrastive framework for self-supervised sentence representation transfer,https://arxiv.org/abs/2105.11741,490.0,,"Trains an effective BERT model on small sample sizes and claims to achieve an 8% improvement over previous SOTA on STA datasets. However, Papers With Code shows that none of the results were actually SOTA at the time of publication.",340000000.0,,2.8e+20,,,"Fine-tuning was done using a single Nvidia V100 GPU for a few minutes -> 1.0E+15 to 5.0E+15 (2 to 10 min)

Foundation model is BeRT with 2.8e+20 FLOP.

So total compute is 2.8e+20.",Chinese STS,,,,,0.1,,NVIDIA Tesla V100S PCIe 32 GB,,,"Learning high-quality sentence representations benefits a wide range of natural language processing tasks. Though BERT-based pre-trained language models achieve high performance on many downstream tasks, the native derived sentence representations are proved to be collapsed and thus produce a poor performance on the semantic textual similarity (STS) tasks. In this paper, we present ConSERT, a Contrastive Framework for Self-Supervised Sentence Representation Transfer, that adopts contrastive learning to fine-tune BERT in an unsupervised and effective way. By making use of unlabeled texts, ConSERT solves the collapse issue of BERT-derived sentence representations and make them more applicable for downstream tasks. Experiments on STS datasets demonstrate that ConSERT achieves an 8\% relative improvement over the previous state-of-the-art, even comparable to the supervised SBERT-NLI. And when further incorporating NLI supervision, we achieve new state-of-the-art performance on STS tasks. Moreover, ConSERT obtains comparable results with only 1000 samples available, showing its robustness in data scarcity scenarios.",,Open weights (unrestricted),,Confident,2025-02-17 16:57:05+00:00,"China,China",,,,,,,,,
MedBERT,Medicine,"Peng Cheng Laboratory,University of Texas at Houston","Academia,Academia","Laila Rasmy, Yang Xiang, Ziqian Xie, Cui Tao, Degui Zhi",2021-05-20,Med-BERT: pretrained contextualized embeddings on large-scale structured electronic health records for disease prediction,https://www.nature.com/articles/s41746-021-00455-y,517.0,SOTA improvement,"""This work is the first demonstration of significantly boosted
performance over state-of-the-art methods on multiple
clinical tasks with phenotyped cohorts.""",17000000.0,"17M from ""This is possibly due to the fact that the untrained Med-BERT is an over-parameterized model (around 17 million parameters) with a huge
number of configurations, so it might overfit to the training data""",9.47e+18,,,"flops = (1) * (3.13e13) * (24*7 * 3600) * (0.5) = 9.47e18
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)
I assume higher utilization rate, because only 1 GPU is used.
Citation from the text:
""We used a single Nvidia Tesla V100GPU of 32 GB graphics memory capacity, and we trained the model for a week for more than 45 million steps, for which each step consists of 32 patients (batch size)."" - page 11

Note that public code appears not to make use of the tensor core speed up, thus I use 3.13e13 FLOP/sec",Cerner Health Facts,"page 3 data source
""We extracted our cohorts from two databases: Cerner Health
Facts® (version 2017) (Cerner) and Truven Health MarketScan®
(Truven)""
""Our pretraining cohort for Med-BERT is consisting of 28 million
patients extracted from Cerner""""",,"data about 28M patients
""Our pretraining cohort for Med-BERT is consisting of 28 million
patients extracted from Cerner""",50.5,168.0,"""We used a single Nvidia Tesla V100GPU of 32 GB graphics memory capacity, and we trained the model for a week for more than 45 million steps, for which each step consists of 32 patients (batch size)."" - page 11",NVIDIA Tesla V100 DGXS 32 GB,1.0,,"Deep learning (DL)-based predictive models from electronic health records (EHRs) deliver impressive performance in many clinical tasks. Large training cohorts, however, are often required by these models to achieve high accuracy, hindering the adoption of DL-based models in scenarios with limited training data. Recently, bidirectional encoder representations from transformers (BERT) and related models have achieved tremendous successes in the natural language processing domain. The pretraining of BERT on a very large training corpus generates contextualized embeddings that can boost the performance of models trained on smaller datasets. Inspired by BERT, we propose Med-BERT, which adapts the BERT framework originally developed for the text domain to the structured EHR domain. Med-BERT is a contextualized embedding model pretrained on a structured EHR dataset of 28,490,650 patients. Fine-tuning experiments showed that Med-BERT substantially improves the prediction accuracy, boosting the area under the receiver operating characteristics curve (AUC) by 1.21–6.14% in two disease prediction tasks from two clinical databases. In particular, pretrained Med-BERT obtains promising performances on tasks with small fine-tuning training sets and can boost the AUC by more than 20% or obtain an AUC as high as a model trained on a training set ten times larger, compared with deep learning models without Med-BERT. We believe that Med-BERT will benefit disease prediction studies with small local training datasets, reduce data collection expenses, and accelerate the pace of artificial intelligence aided healthcare.",,Unreleased,,Likely,2025-02-17 16:58:38+00:00,"China,United States of America",,,,,,,,,
Multitask Unified Model (MUM),Language,Google,Industry,,2021-05-18,MUM: A new AI milestone for understanding information,https://blog.google/products/search/introducing-mum/,,,May have been deployed in Google search and other products,,,,,,,,,,,,,,,,,"When I tell people I work on Google Search, I’m sometimes asked, ""Is there any work left to be done?"" The short answer is an emphatic “Yes!” There are countless challenges we're trying to solve so Google Search works better for you. Today, we’re sharing how we're addressing one many of us can identify with: having to type out many queries and perform many searches to get the answer you need.

Take this scenario: You’ve hiked Mt. Adams. Now you want to hike Mt. Fuji next fall, and you want to know what to do differently to prepare. Today, Google could help you with this, but it would take many thoughtfully considered searches — you’d have to search for the elevation of each mountain, the average temperature in the fall, difficulty of the hiking trails, the right gear to use, and more. After a number of searches, you’d eventually be able to get the answer you need.

But if you were talking to a hiking expert; you could ask one question — “what should I do differently to prepare?” You’d get a thoughtful answer that takes into account the nuances of your task at hand and guides you through the many things to consider.  

This example is not unique — many of us tackle all sorts of tasks that require multiple steps with Google every day. In fact, we find that people issue eight queries on average for complex tasks like this one. 

Today's search engines aren't quite sophisticated enough to answer the way an expert would. But with a new technology called Multitask Unified Model, or MUM, we're getting closer to helping you with these types of complex needs. So in the future, you’ll need fewer searches to get things done. ",,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,T5-11B,,"Based on T5 (specific model not specified). But also multimodal:

""MUM uses the T5 text-to-text framework and is 1,000 times more powerful than BERT.""",,,,,,
Fairseq + UID: variance,Language,"Google AI,ETH Zurich,University of Cambridge","Industry,Academia,Academia","Jason Wei, Clara Meister, Ryan Cotterell",2021-05-15,A Cognitive Regularizer for Language Modeling,https://arxiv.org/abs/2105.07144,20.0,,,,,,,,,,,,,,,,,,,"The uniform information density (UID) hypothesis, which posits that speakers behaving optimally tend to distribute information uniformly across a linguistic signal, has gained traction in psycholinguistics as an explanation for certain syntactic, morphological, and prosodic choices. In this work, we explore whether the UID hypothesis can be operationalized as an inductive bias for statistical language modeling. Specifically, we augment the canonical MLE objective for training language models with a regularizer that encodes UID. In experiments on ten languages spanning five language families, we find that using UID regularization consistently improves perplexity in language models, having a larger effect when training data is limited. Moreover, via an analysis of generated sequences, we find that UID-regularized language models have other desirable properties, e.g., they generate text that is more lexically diverse. Our results not only suggest that UID is a reasonable inductive bias for language modeling, but also provide an alternative validation of the UID hypothesis using modern-day NLP tools.",Fairseq + UID: variance,Unreleased,,Unknown,2024-10-01 14:01:11+00:00,"Multinational,United States of America,Switzerland,United Kingdom of Great Britain and Northern Ireland",,,,,,Fairseq + UID: variance,,,
ADM,Image generation,OpenAI,Industry,"Prafulla Dhariwal, Alex Nichol",2021-05-11,Diffusion Models Beat GANs on Image Synthesis,https://arxiv.org/abs/2105.05233,5567.0,"Highly cited,SOTA improvement","""We show that diffusion models can achieve image sample quality superior to the current state-of-the-art generative models""",559000000.0,"Largest model is denoted ImageNet 512, has 559M parameters",6.2e+21,,,"Largest run with their architecture improvements is the ImageNet 512 variant. Table 7 suggests utilization is around 30% for largest models (though we only see 256 x 256 and 128 -> 512)

Table 10: ImageNet 512 variant took 1914 V100-days of training
125e12 FLOP/sec * 1914 days * 24 h/day * 3600 sec/h * 0.3 = 6.2e21","LSUN,ILSVRC 2012 subset of ImageNet","""To evaluate our improved model architecture on unconditional image generation, we train separate diffusion models on three LSUN [71] classes: bedroom, horse, cat""",1281167.0,"Biggest models are trained on ImageNet 512x512. ImageNet ILSVRC has 1,281,167 images in the training set, but it is possible some were filtered due to size.

Note that a smaller model was trained on LSUN {bedroom, horse, cat}, which forms a larger dataset:
3,033,042 + 2,000,340 + 1,657,266 = 6,690,648 images

Epochs ≈ (1,940,000 * 256) / 1,300,000 ≈ 381 epochs",381.0,,,NVIDIA V100,,,"We show that diffusion models can achieve image sample quality superior to the current state-of-the-art generative models. We achieve this on unconditional image synthesis by finding a better architecture through a series of ablations. For conditional image synthesis, we further improve sample quality with classifier guidance: a simple, compute-efficient method for trading off diversity for fidelity using gradients from a classifier. We achieve an FID of 2.97 on ImageNet 128×128, 4.59 on ImageNet 256×256, and 7.72 on ImageNet 512×512, and we match BigGAN-deep even with as few as 25 forward passes per sample, all while maintaining better coverage of the distribution. Finally, we find that classifier guidance combines well with upsampling diffusion models, further improving FID to 3.94 on ImageNet 256×256 and 3.85 on ImageNet 512×512.",,Open weights (non-commercial),,Confident,2025-02-13 20:33:45+00:00,United States of America,,,,,,,,,
ProtT5-XXL,Biology,"Technical University of Munich,Med AI Technology,NVIDIA,Oak Ridge National Laboratory,Google,Seoul National University","Academia,Industry,Government,Industry,Academia","A Elnaggar, M Heinzinger, C Dallago, G Rihawi",2021-05-04,ProtTrans: Towards Cracking the Language of Life’s Code Through Self-Supervised Learning,"https://www.biorxiv.org/content/10.1101/2020.07.12.199554v3 or 
https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9477085",396.0,SOTA improvement,"""For the per-residue predictions the transfer of the most informative embeddings (ProtT5) for the first time outperformed the state-of-the-art
without using evolutionary information""",11000000000.0,"source: https://lair.lighton.ai/akronomicon/

archived: https://github.com/lightonai/akronomicon/tree/main/akrodb",7.37e+22,,,"7.37e22 from:
source: https://lair.lighton.ai/akronomicon/
archived: https://github.com/lightonai/akronomicon/blob/main/akrodb/Technical%20University%20of%20Munich/ProtT5-XXL.json

3.7E+22 from Table 9 https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1

Manual calculation: forward passes on 512 * (4096*920k + 2048*343k) = 2.3T tokens
Backward passes on 15% of those, 2.3T * 0.15 = 343B tokens.
Total FLOPs: (2 * 11B * 2.3T) + (4 * 11B * 343B) = 6.57e22","BFD (Big Fantastic Dataset),UniRef50","First, T5-XL and T5-XXL were trained on BFD for 1.2M and 920k steps respectively (ProtT5-XL-BFD, ProtT5-XXL-BFD). In a second step, ProtT5-XL-BFD and ProtT5-XXL-BFD were fine-tuned on
UniRef50 for 991k and 343k steps respectively (ProtT5-XLU50, ProtT5-XXL-U50).
Table 1 and 2 give enough info to calculate epochs:
BFD: 512 (seq len) * 4096 (global batch) * 920k (steps) / 393B = 4.9 epochs
UniRef50: 512 (seq len) * 2048 (global batch) * 343k (steps) / 14B = 25.7 epochs",407000000000.0,"Table 2. ProtT5-XXL uses BFD100 and UniRef50, which sum to 407 billion amino acids.",,,,Google TPU v3,512.0,Self-supervised learning,"Computational biology and bioinformatics provide vast data gold-mines from protein sequences, ideal for Language Models taken from NLP. These LMs reach for new prediction frontiers at low inference costs. Here, we trained two auto-regressive models (Transformer-XL, XLNet) and four auto-encoder models (BERT, Albert, Electra, T5) on data from UniRef and BFD containing up to 393 billion amino acids. The LMs were trained on the Summit supercomputer using 5616 GPUs and TPU Pod up-to 1024 cores. Dimensionality reduction revealed that the raw protein LM-embeddings from unlabeled data captured some biophysical features of protein sequences. We validated the advantage of using the embeddings as exclusive input for several subsequent tasks. The first was a per-residue prediction of protein secondary structure (3-state accuracy Q3=81%-87%); the second were per-protein predictions of protein sub-cellular localization (ten-state accuracy: Q10=81%) and membrane vs. water-soluble (2-state accuracy Q2=91%). For the per-residue predictions the transfer of the most informative embeddings (ProtT5) for the first time outperformed the state-of-the-art without using evolutionary information thereby bypassing expensive database searches. Taken together, the results implied that protein LMs learned some of the grammar of the language of life. To facilitate future work, we released our models at https://github.com/agemagician/ProtTrans.",,Open weights (unrestricted),,Confident,2025-02-17 20:01:36+00:00,"Germany,China,United States of America,United States of America,United States of America,Korea (Republic of)",,,,,,,,,
ProtT5-XXL-BFD,Biology,"Technical University of Munich,Med AI Technology,NVIDIA,Oak Ridge National Laboratory,Google,Seoul National University","Academia,Industry,Government,Industry,Academia","Ahmed Elnaggar, Michael Heinzinger,  Christian Dallago, Ghalia Rehawi, Yu Wang, Llion Jones, Tom Gibbs, Tamas Feher, Christoph Angerer, Martin Steinegger, Debsindhu Bhowmik, Burkhard Rost",2021-05-04,ProtTrans:Towards Cracking the Language of Life's Code Through Self-Supervised Learning,"https://www.biorxiv.org/content/10.1101/2020.07.12.199554v3 or 
https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9477085",,SOTA improvement,"""For the per-residue predictions the transfer of the most informative embeddings (ProtT5) for the first time outperformed the state-of-the-art without using evolutionary information thereby bypassing expensive database searches.""",11000000000.0,Table 2,3.7e+22,,,"FLOP = 11B*2*(920k*512*4096) +  11B*4*(920k*512*4096), 920k steps using seq length 512 batch size 4096, ",BFD (Big Fantastic Dataset),"First, T5-XL and T5-XXL were trained on BFD for 1.2M and 920k steps respectively (ProtT5-XL-BFD, ProtT5-XXL-BFD). In a second step, ProtT5-XL-BFD and ProtT5-XXL-BFD were fine-tuned on
UniRef50 for 991k and 343k steps respectively (ProtT5-XLU50, ProtT5-XXL-U50).",,"Table 1: 2122M proteins, 393B amino acids, 572 GB",5.0,,,Google TPU v3,512.0,Self-supervised learning,"Computational biology and bioinformatics provide vast data gold-mines from protein sequences, ideal for Language Models taken from NLP. These LMs reach for new prediction frontiers at low inference costs. Here, we trained two auto-regressive models (Transformer-XL, XLNet) and four auto-encoder models (BERT, Albert, Electra, T5) on data from UniRef and BFD containing up to 393 billion amino acids. The LMs were trained on the Summit supercomputer using 5616 GPUs and TPU Pod up-to 1024 cores.

Dimensionality reduction revealed that the raw protein LM-embeddings from unlabeled data captured some biophysical features of protein sequences. We validated the advantage of using the embeddings as exclusive input for several subsequent tasks. The first was a per-residue prediction of protein secondary structure (3-state accuracy Q3=81%-87%); the second were per-protein predictions of protein sub-cellular localization (ten-state accuracy: Q10=81%) and membrane vs. water-soluble (2-state accuracy Q2=91%). For the per-residue predictions the transfer of the most informative embeddings (ProtT5) for the first time outperformed the state-of-the-art without using evolutionary information thereby bypassing expensive database searches. Taken together, the results implied that protein LMs learned some of the grammar of the language of life. To facilitate future work, we released our models at https://github.com/agemagician/ProtTrans.",,Open weights (unrestricted),,Confident,2024-10-21 15:22:55+00:00,"Germany,China,United States of America,United States of America,United States of America,Korea (Republic of)",,,,,,,,,
ProtBERT-BFD,Biology,"Technical University of Munich,NVIDIA,Seoul National University,Google,Oak Ridge National Laboratory,Med AI Technology","Academia,Industry,Academia,Industry,Government","Ahmed Elnaggar, Michael Heinzinger,  Christian Dallago, Ghalia Rehawi, Yu Wang, Llion Jones, Tom Gibbs, Tamas Feher, Christoph Angerer, Martin Steinegger,  Debsindhu Bhowmik, Burkhard Rost",2021-05-04,ProtTrans:Towards Cracking the Language of Life's Code Through Self-Supervised Learning,"https://www.biorxiv.org/content/10.1101/2020.07.12.199554v3 or 
https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9477085",,SOTA improvement,"""For the per-residue predictions the transfer of the most informative embeddings (ProtT5) for the first time outperformed the state-of-the-art without using evolutionary information thereby bypassing expensive database searches.""",420000000.0,Table 2,3.9e+22,,,"FLOP = 420M * 6 * (800k*512*32k + 200k*2048*6k) 
1M steps total split into two phases, (1) 800k steps, seq length 512 (batch size 32k) and (2) 200k steps, seq length 2048 (batch size 6k)
single TPU Pod V3-1024 (64 nodes and 1024 TPUs) info from paper and https://huggingface.co/Rostlab/prot_bert_bfd",BFD (Big Fantastic Dataset),"ProtBert: BERT2 was trained using both UniRef100
and BFD-100 datasets (referred to as ProtBert and ProtBertBFD, respectively; Table 2)",8900000000000.0,"""ProtBERT-BFD (420M parameters) saw around 27B proteins during pre-training"" 

Table 1: BFD has 2122M proteins, 393B amino acids, 572 GB
Suggests average amino acid length of 185

Implies 27B * 185 = 5T amino acids seen in training

However, Table 2 suggests number of tokens (amino acids) seen in training was:
(512*32768*800k) + (2048*6144*200k) = 15.9T amino acids in training

Geometric mean = 8.9T",,,"figure 3 shows 19 hours per epoch, though this was on a different GPU setup than the one used for training.",Google TPU v3,1024.0,Self-supervised learning,"Computational biology and bioinformatics provide vast data gold-mines from protein sequences, ideal for Language Models taken from NLP. These LMs reach for new prediction frontiers at low inference costs. Here, we trained two auto-regressive models (Transformer-XL, XLNet) and four auto-encoder models (BERT, Albert, Electra, T5) on data from UniRef and BFD containing up to 393 billion amino acids. The LMs were trained on the Summit supercomputer using 5616 GPUs and TPU Pod up-to 1024 cores.

Dimensionality reduction revealed that the raw protein LM-embeddings from unlabeled data captured some biophysical features of protein sequences. We validated the advantage of using the embeddings as exclusive input for several subsequent tasks. The first was a per-residue prediction of protein secondary structure (3-state accuracy Q3=81%-87%); the second were per-protein predictions of protein sub-cellular localization (ten-state accuracy: Q10=81%) and membrane vs. water-soluble (2-state accuracy Q2=91%). For the per-residue predictions the transfer of the most informative embeddings (ProtT5) for the first time outperformed the state-of-the-art without using evolutionary information thereby bypassing expensive database searches. Taken together, the results implied that protein LMs learned some of the grammar of the language of life. To facilitate future work, we released our models at https://github.com/agemagician/ProtTrans.",,Open weights (unrestricted),,Confident,2025-02-17 16:58:55+00:00,"Germany,United States of America,Korea (Republic of),United States of America,United States of America,China",,,,,,,,,
ProtBERT-UniRef,Biology,"Technical University of Munich,NVIDIA,Seoul National University,Google,Oak Ridge National Laboratory,Med AI Technology","Academia,Industry,Academia,Industry,Government","Ahmed Elnaggar, Michael Heinzinger,  Christian Dallago, Ghalia Rehawi, Yu Wang, Llion Jones, Tom Gibbs, Tamas Feher, Christoph Angerer, Martin Steinegger,  Debsindhu Bhowmik, Burkhard Rost",2021-05-04,ProtTrans:Towards Cracking the Language of Life's Code Through Self-Supervised Learning,"https://www.biorxiv.org/content/10.1101/2020.07.12.199554v3 or 
https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9477085",5.0,,,420000000.0,Table 2,,,,,,,,,,,,,,,,,,,Unverified,2024-10-22 14:23:25+00:00,"Germany,United States of America,Korea (Republic of),United States of America,United States of America,China",,,,,,,,,
Transformer-XL + SIS,Language,INRIA,Academia,"Sagar Verma, Jean-Christophe Pesquet",2021-05-03,Sparsifying Networks via Subdifferential Inclusion,http://proceedings.mlr.press/v139/verma21b/verma21b.pdf,13.0,,,246000000.0,,1.04e+19,,,,,,,,,,,,,,"Sparsifying deep neural networks is of paramount interest in many areas, especially when those networks have to be implemented on lowmemory devices. In this article, we propose a new formulation of the problem of generating sparse weights for a pre-trained neural network. By leveraging the properties of standard nonlinear activation functions, we show that the problem is equivalent to an approximate subdifferential inclusion problem. The accuracy of the approximation controls the sparsity. We show that the proposed approach is valid for a broad class of activation functions (ReLU, sigmoid, softmax). We propose an iterative optimization algorithm to induce sparsity whose convergence is guaranteed. Because of the algorithm flexibility, the sparsity can be ensured from partial training data in a minibatch manner. To demonstrate the effectiveness of our method, we perform experiments on various networks in different applicative contexts: image classification, speech recognition, natural language processing, and time-series forecasting. Project page: https://sagarverma.github.io/compression",Transformer-XL + SIS,Unreleased,,,2024-09-09 04:01:14+00:00,France,,,,,,Transformer-XL + SIS,,,
GPT-J-6B,Language,"EleutherAI,LAION","Research collective,Research collective","Ben Wang, Aran Komatsuzaki",2021-05-01,GPT-J-6B: 6B JAX-Based Transformer,https://arankomatsuzaki.wordpress.com/2021/06/04/gpt-j/,,,,6053381344.0,source: model details table in GitHub,1.5e+22,,,source: zero shot evaluation table in GitHub,The Pile,,400000000000.0,"""The model was trained on 400B tokens from The Pile dataset with 800GB text.""

1 GB ~ 200M words",1.0,840.0,"""GPT-J training took roughly five weeks with TPU v3-256.""
5*7*24=",Google TPU v3,,Self-supervised learning,"We have released GPT-J-6B, 6B JAX-based (Mesh) Transformer LM (Github).
GPT-J-6B performs nearly on par with 6.7B GPT-3 (or Curie) on various zero-shot down-streaming tasks.
You can try out this Colab notebook or free web demo.
This library also serves as an example of model parallelism with xmap on JAX.",GPT-J-6B,Open weights (unrestricted),0.6,Confident,2025-02-19 19:03:55+00:00,"Multinational,United States of America,Multinational,Germany",,,,,,,,,
ViT + DINO,Vision,"INRIA,Facebook AI Research","Academia,Industry","Mathilde Caron, Hugo Touvron, Ishan Misra, Hervé Jégou, Julien Mairal, Piotr Bojanowski, Armand Joulin",2021-04-29,Emerging Properties in Self-Supervised Vision Transformers,https://arxiv.org/abs/2104.14294,4593.0,Highly cited,,85000000.0,"85M, table 1",2.1e+20,,,"""Overall, training DINO with Vision Transformers
achieves 76.1 top-1 accuracy using two 8-GPU servers for 3
days""

GPU is V100

16 * 125 teraflops * 3 days * 0.4 utilization
= 2.1e20

However, this isn't the best result in the paper (which is 80.1% with ViT-B/8). 76.1% is the result from ViT-B/16 per Table 2, which may be 5x cheaper than ViT-B/8 based on Table 1?

upd:
 ""Table 8: Time and memory requirements. We show total running
time and peak memory per GPU (“mem.”) when running ViT-S/16
DINO models on two 8-GPU machines.""

2*8*125 teraflops*72.6h*3600*0.4=2.09088e+20",ImageNet,"""We pretrain the models on the ImageNet dataset [60] without labels""",,,300.0,,,NVIDIA V100,,Self-supervised learning,"In this paper, we question if self-supervised learning provides new properties to Vision Transformer (ViT) that stand out compared to convolutional networks (convnets). Beyond the fact that adapting self-supervised methods to this architecture works particularly well, we make the following observations: first, self-supervised ViT features contain explicit information about the semantic segmentation of an image, which does not emerge as clearly with supervised ViTs, nor with convnets. Second, these features are also excellent k-NN classifiers, reaching 78.3% top-1 on ImageNet with a small ViT. Our study also underlines the importance of momentum encoder, multi-crop training, and the use of small patches with ViTs. We implement our findings into a simple self-supervised method, called DINO, which we interpret as a form of self-distillation with no labels. We show the synergy between DINO and ViTs by achieving 80.1% top-1 on ImageNet in linear evaluation with ViT-Base.",,Open weights (unrestricted),,Confident,2025-02-07 17:19:42+00:00,"France,United States of America",,,,,,,,,
SPALM + kNN,Language,DeepMind,Industry,"Dani Yogatama, Cyprien de Masson d’Autume, Lingpeng Kong",2021-04-26,Adaptive Semiparametric Language Models,https://direct.mit.edu/tacl/article/doi/10.1162/tacl_a_00371/100688/Adaptive-Semiparametric-Language-Models,95.0,,"paper says ""Our implementation produces results that are in the same range as state-of-the-art numbers, demonstrating the strength of our baselines"" I think this suggests it's close to, but not reaching SOTA?",,,,,,,,,,,,,,,,,"We present a language model that combines a large parametric neural network (i.e., a transformer) with a non-parametric episodic memory component in an integrated architecture. Our model uses extended short-term context by caching local hidden states—similar to transformer-XL—and global long-term memory by retrieving a set of nearest neighbor tokens at each timestep. We design a gating function to adaptively combine multiple information sources to make a prediction. This mechanism allows the model to use either local context, short-term memory, or long-term memory (or any combination of them) on an ad hoc basis depending on the context. Experiments on word-based and character-based language modeling datasets demonstrate the efficacy of our proposed method compared to strong baselines.",SPALM + kNN,Unreleased,,Unknown,2024-09-09 15:28:00+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,SPALM + kNN,,,
PanGu-α,Language,Huawei Noah's Ark Lab,Industry,"Wei Zeng, Xiaozhe Ren, Teng Su, Hui Wang, Yi LiaoZhiwei WangXin JiangZhenzhang YangKaisheng WangXiaoda ZhangChen LiZiyan GongYifan YaoXinjing HuangJun WangJianfeng YuQi GuoYue YuYan ZhangJin WangHengtao TaoDasen YanZexuan YiFang PengFangqing JiangHan ZhangLingfeng DengYehong ZhangZhe LinChao ZhangShaojie ZhangMingyue GuoShanzhi GuGaojun FanYaowei WangXuefeng JinQun LiuYonghong Tian",2021-04-25,PanGu-α: Large-scale Autoregressive Pretrained Chinese Language Models with Auto-parallel Computation,https://arxiv.org/abs/2104.12369,187.0,,,207000000000.0,Table 1,5.112e+22,,,"Figure 8 digitized with https://automeris.io/wpd/?v=5_2, training the 200B model runs for 42.6B tokens. 6 * 200B * 42.6B = 5.112e22

Elsewhere, the akronomicon leaderboard indicates 538 PF-days, or 5.037e22 FLOPs.
https://web.archive.org/web/20220211115721/https://lair.lighton.ai/akronomicon/

Note however, that this seems to contradict Table 4, which appears to indicate that PanGu-α 200B saw 317.569B tokens. If this were the case, training compute would be ~ 6 * 200B * 317.569B = 3.811e23",,Custom dataset,258500000000.0,"Column 1 in Table 4 sums to 258.5B tokens. Note however that ""Epochs elapsed when training"" from this table appears to conflict with other statements about training, so my confidence in the info here is somewhat low.",1.0,,,Huawei Ascend 910,2048.0,Self-supervised learning,"Large-scale Pretrained Language Models (PLMs) have become the new paradigm for Natural Language Processing (NLP). PLMs with hundreds of billions parameters such as GPT-3 have demonstrated strong performances on natural language understanding and generation with \textit{few-shot in-context} learning. In this work, we present our practice on training large-scale autoregressive language models named PanGu-α, with up to 200 billion parameters. PanGu-α is developed under the MindSpore and trained on a cluster of 2048 Ascend 910 AI processors. The training parallelism strategy is implemented based on MindSpore Auto-parallel, which composes five parallelism dimensions to scale the training task to 2048 processors efficiently, including data parallelism, op-level model parallelism, pipeline model parallelism, optimizer model parallelism and rematerialization. To enhance the generalization ability of PanGu-α, we collect 1.1TB high-quality Chinese data from a wide range of domains to pretrain the model. We empirically test the generation ability of PanGu-α in various scenarios including text summarization, question answering, dialogue generation, etc. Moreover, we investigate the effect of model scales on the few-shot performances across a broad range of Chinese NLP tasks. The experimental results demonstrate the superior capabilities of PanGu-α in performing various tasks under few-shot or zero-shot settings.",,Unreleased,,Likely,2025-02-27 15:37:39+00:00,China,,,,,,,,"260k steps, # tokens not too clear (Figure 8 suggests ~40B, seems too low, maybe a typo?)",
DiffQ Transformer (16L),Language,Meta AI,Industry,"Alexandre Défossez, Yossi Adi, Gabriel Synnaeve",2021-04-20,Differentiable Model Compression via Pseudo Quantization Noise,https://arxiv.org/abs/2104.09987,36.0,,,247000000.0,"They base their architecture off of ""Transformer (Adaptive Input Embeddings) WT103"", a 16 layer transformer with 16 heads per MHA layer, d_model=1024 and d_ff=4096.",3.02e+19,,,"The authors say they train their base model following Baevski & Auli (2019). That paper trained for 286k steps in batches of 65,536 tokens.
This suggests training the base model took 6 * 247M * 286k * 65536 = 2.778E19 FLOPs. 

However, DiffQ introduces some additional computational overhead during training: ""Using DiffQ usually increase the training time by some amount. On the language modeling task, the time per batch went from 115ms to 125ms.""

This suggests 125/115 - 1 = 8.7% overhead, relative to the direct FLOPs used to do vanilla forward and backward passes on the model weights.

2.778E19 * 125 / 115 = 3.020e19",WikiText-103,"WikiText-103, which has 103M training tokens",103000000.0,"WikiText-103, which has 103M training tokens",,,,NVIDIA V100,,Self-supervised learning,"We propose DiffQ a differentiable method for model compression for quantizing model parameters without gradient approximations (e.g., Straight Through Estimator). We suggest adding independent pseudo quantization noise to model parameters during training to approximate the effect of a quantization operator. DiffQ is differentiable both with respect to the unquantized weights and the number of bits used. Given a single hyper-parameter balancing between the quantized model size and accuracy, DiffQ optimizes the number of bits used per individual weight or groups of weights, in end-to-end training. We experimentally verify that our method is competitive with STE based quantization techniques on several benchmarks and architectures for image classification, language modeling, and audio source separation. For instance, on the ImageNet dataset, DiffQ compresses a 12 layers transformer-based model by more than a factor of 8, (lower than 4 bits precision per weight on average), with a loss of 0.3% in model accuracy. Code is available at this http URL.",DiffQ Transformer (16L),Unreleased,,Confident,2025-02-17 19:51:34+00:00,United States of America,,,,,,,,,
PLUG,Language,Alibaba,Industry,,2021-04-19,,https://mp.weixin.qq.com/s/DAQomIkDa52Sef-ruyH5qg,,SOTA improvement,Was a SOTA in CLUE 1.0 https://www.cluebenchmarks.com/classification10.html,27000000000.0,,3.5997696e+22,,,128 Nvidia A100 for 35 days,,,,,,840.0,35 days,NVIDIA A100,128.0,,"ExperienceAfter the Great Refining Model, the field of artificial intelligence is entering the era of ""Renging Model"".Since OpenAI released the ultra-large-scale pre-training language model GPT-3 in the English field last year, the training process of similar models in the Chinese field has received much attention.Today, the Aridal Moral Court released 27 billion parameters, 1TB + training data, the world's largest Chinese pre-training language model PLUG, and refreshed the historical record of the CLUE classification list with a score of 80.614.

(autotranslate from Chinese)",,Hosted access (no API),,,2025-02-07 01:08:27+00:00,China,,,,,,,,,
DLRM-12T,Recommendation,"Meta AI,Carnegie Mellon University (CMU)","Industry,Academia","Dheevatsa Mudigere, Yuchen Hao, Jianyu Huang, Zhihao Jia, Andrew Tulloch, Srinivas Sridharan, Xing Liu, Mustafa Ozdal, Jade Nie, Jongsoo Park, Liang Luo, Jie Amy Yang, Leon Gao, Dmytro Ivchenko, Aarti Basant, Yuxi Hu, Jiyan Yang, Ehsan K. Ardestani, Xiaodong Wang, Rakesh Komuravelli, Ching-Hsiang Chu, Serhat Yilmaz, Huayu Li, Jiyuan Qian, Zhuobo Feng, Yinbin Ma, Junjie Yang, Ellie Wen, Hong Li, Lin Yang, Chonglin Sun, Whitney Zhao, Dimitry Melts, Krishna Dhulipala, KR Kishore, Tyler Graf, Assaf Eisenman, Kiran Kumar Matam, Adi Gangidi, Guoqiang Jerry Chen, Manoj Krishnan, Avinash Nayak, Krishnakumar Nair, Bharath Muthiah, Mahmoud khorashadi, Pallab Bhattacharya, Petr Lapukhov, Maxim Naumov, Ajit Mathews, Lin Qiao, Mikhail Smelyanskiy, Bill Jia, Vijay Rao",2021-04-12,Software-Hardware Co-design for Fast and Scalable Training of Deep Learning Recommendation Models,https://arxiv.org/abs/2104.05158,126.0,,,12000000000000.0,They instantiated a 12T-parameter model to show that their hardware setup can train it despite the huge memory requirements.,,,,No training details provided.,,No training details provided.,,No training details provided.,,,No training details provided.,NVIDIA A100,,,"Deep learning recommendation models (DLRMs) are used across many business-critical services at Facebook and are the single largest AI application in terms of infrastructure demand in its data-centers. In this paper we discuss the SW/HW co-designed solution for high-performance distributed training of large-scale DLRMs. We introduce a high-performance scalable software stack based on PyTorch and pair it with the new evolution of Zion platform, namely ZionEX. We demonstrate the capability to train very large DLRMs with up to 12 Trillion parameters and show that we can attain 40X speedup in terms of time to solution over previous systems. We achieve this by (i) designing the ZionEX platform with dedicated scale-out network, provisioned with high bandwidth, optimal topology and efficient transport (ii) implementing an optimized PyTorch-based training stack supporting both model and data parallelism (iii) developing sharding algorithms capable of hierarchical partitioning of the embedding tables along row, column dimensions and load balancing them across multiple workers; (iv) adding high-performance core operators while retaining flexibility to support optimizers with fully deterministic updates (v) leveraging reduced precision communications, multi-level memory hierarchy (HBM+DDR+SSD) and pipelining. Furthermore, we develop and briefly comment on distributed data ingestion and other supporting services that are required for the robust and efficient end-to-end training in production environments.",,,,Confident,2024-11-01 14:03:33+00:00,"United States of America,United States of America",,,,,,,,,
Megatron-LM (1T),Language,"Microsoft Research,NVIDIA,Stanford University","Industry,Industry,Academia","Deepak Narayanan, Mohammad Shoeybi, Jared Casper, Patrick LeGresley, Mostofa Patwary, Vijay Korthikanti, Dmitri Vainbrand, Prethvi Kashinkunti, Julie Bernauer, Bryan Catanzaro, Amar Phanishayee, Matei Zaharia",2021-04-09,Efficient Large-Scale Language Model Training on GPU Clusters,https://arxiv.org/abs/2104.04473,469.0,,Improved SOTA efficiency at distributed training.,1000000000000.0,"[NOTE: They didn't train the model fully end-to-end, probably just to obtain enough information to gauge the ability to do model parallelisation]

""Our approach allows us to perform training iterations on a model with 1 trillion parameters at 502 petaFLOP/s on 3072 GPUs with achieved per-GPU throughput of 52% of theoretical peak.""",,,,"NOTE: They didn't train the model fully end-to-end, probably just to obtain enough information to gauge the ability to do model parallelisation.

We calculate below the FLOP required for a full training, but we do not populate it in the Training Compute column.

“For the 1 trillion parameter model, we assume that 450 billion tokens are needed for end-to-end training. With 3072 A100 GPUs, we can achieve a per-GPU throughput of 163 teraFLOP/s, and end-to-end training time of 84 days. We believe these training times (using a reasonable number of GPUs) are practical.”

Table 1 gives a utilisation rate of 52%

Plugging this into the calculator: https://epoch.ai/blog/estimating-training-compute
84 days, 3072 GPUs, NVIDIA A100, FP16, 52% utilisation rate --> 3.6e24 FLOP",,Dataset information not provided.,,,,,,NVIDIA A100,,Self-supervised learning,"Large language models have led to state-of-the-art accuracies across a range of tasks. However, training these models efficiently is challenging for two reasons: a) GPU memory capacity is limited, making it impossible to fit large models on even a multi-GPU server, and b) the number of compute operations required to train these models can result in unrealistically long training times. Consequently, new methods of model parallelism such as tensor and pipeline parallelism have been proposed. Unfortunately, naive usage of these methods leads to fundamental scaling issues at thousands of GPUs, e.g., due to expensive cross-node communication or devices spending significant time waiting on other devices to make progress.
In this paper, we show how different types of parallelism methods (tensor, pipeline, and data parallelism) can be composed to scale to thousands of GPUs and models with trillions of parameters. We survey techniques for pipeline parallelism and propose a novel interleaved pipeline parallelism schedule that can improve throughput by 10+% with memory footprint comparable to existing approaches. We quantitatively study the trade-offs between tensor, pipeline, and data parallelism, and provide intuition as to how to configure distributed training of a large model. Our approach allows us to perform training iterations on a model with 1 trillion parameters at 502 petaFLOP/s on 3072 GPUs with achieved per-GPU throughput of 52% of theoretical peak.",,,,Confident,2024-11-13 07:57:23+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,United States of America,United States of America",,,,,,,,,
Transformer-C,Language,University of Massachusetts Amherst,Academia,"Simeng Sun, Mohit Iyyer",2021-04-08,Revisiting Simple Neural Probabilistic Language Models,https://arxiv.org/abs/2104.03474,11.0,,,148000000.0,,1.818624e+18,,,,WikiText-103,,,,19.88,,,,,,"Recent progress in language modeling has been driven not only by advances in neural architectures, but also through hardware and optimization improvements. In this paper, we revisit the neural probabilistic language model (NPLM) of~\citet{Bengio2003ANP}, which simply concatenates word embeddings within a fixed window and passes the result through a feed-forward network to predict the next word. When scaled up to modern hardware, this model (despite its many limitations) performs much better than expected on word-level language model benchmarks. Our analysis reveals that the NPLM achieves lower perplexity than a baseline Transformer with short input contexts but struggles to handle long-term dependencies. Inspired by this result, we modify the Transformer by replacing its first self-attention layer with the NPLM's local concatenation layer, which results in small but consistent perplexity decreases across three word-level language modeling datasets.",Transformer-C,Unreleased,,,2025-03-07 01:45:29+00:00,United States of America,,,,,,,,,
TransfoRNN(d=1024)(2-layer) (WT2),Language,Lenovo Research,Industry,"Tze Yuang Chong, Xuyang Wang, Lin Yang, Junjie Wang",2021-04-04,TransfoRNN: Capturing the Sequential Information in Self-Attention Representations for Language Modeling,https://arxiv.org/abs/2104.01572,0.0,,,97600000.0,,,,,,,,,,,,,,,,"In this paper, we describe the use of recurrent neural networks to capture sequential information from the self-attention representations to improve the Transformers. Although self-attention mechanism provides a means to exploit long context, the sequential information, i.e. the arrangement of tokens, is not explicitly captured. We propose to cascade the recurrent neural networks to the Transformers, which referred to as the TransfoRNN model, to capture the sequential information. We found that the TransfoRNN models which consists of only shallow Transformers stack is suffice to give comparable, if not better, performance than a deeper Transformer model. Evaluated on the Penn Treebank and WikiText-2 corpora, the proposed TransfoRNN model has shown lower model perplexities with fewer number of model parameters. On the Penn Treebank corpus, the model perplexities were reduced up to 5.5% with the model size reduced up to 10.5%. On the WikiText-2 corpus, the model perplexity was reduced up to 2.2% with a 27.7% smaller model. Also, the TransfoRNN model was applied on the LibriSpeech speech recognition task and has shown comparable results with the Transformer models.",TransfoRNN(d=1024)(2-layer) (WT2),Unreleased,,,2024-09-09 16:14:11+00:00,China,,,,,,,,,
GraphMS,Biology,"Dalian University of Technology,Dongbei University of Technology,Baidu,China National Health Development Research Center","Academia,Academia,Industry,Academia","Shicheng Cheng, Liang Zhang, Bo Jin, Qiang Zhang, Xinjiang Lu, Mao You, Xueqing Tian",2021-04-04,GraphMS: Drug Target Prediction Using Graph Representation Learning with Substructures,https://www.mdpi.com/2076-3417/11/7/3239,14.0,,,,,,,,,,,1800000.9999999998,"Edges:
Drug-Protein: 1,923
Drug-Disease: 199,214
Protein-Disease: 1,596,745
Drug-Drug: 10,036
Protein-Protein: 7,363

1,923 + 199,214 + 1,596,745 + 10,036 + 7,363 = 1,815,281 total edges

Final estimate: 1.8 × 10⁶",,,,,,,"The prediction of drug–target interactions is always a key task in the field of drug redirection. However, traditional methods of predicting drug–target interactions are either mediocre or rely heavily on data stacking. In this work, we proposed our model named GraphMS. We merged heterogeneous graph information and obtained effective node information and substructure information based on mutual information in graph embeddings. We then learned high quality representations for downstream tasks, and proposed an end–to–end auto–encoder model to complete the task of link prediction. Experimental results show that our method outperforms several state–of–the–art models. The model can achieve the area under the receiver operating characteristics (AUROC) curve of 0.959 and area under the precise recall curve (AUPR) of 0.847. We found that the mutual information between the substructure and graph–level representations contributes most to the mutual information index in a relatively sparse network. And the mutual information between the node–level and graph–level representations contributes most in a relatively dense network.",,,,Unverified,2025-01-30 05:04:25+00:00,"China,China,China,China",,,,,,,,,
T2R + Random Init,Language,"University of Washington,Microsoft,DeepMind,Allen Institute for AI","Academia,Industry,Industry,Research collective","Jungo Kasai, Hao Peng, Yizhe Zhang, Dani Yogatama, Gabriel Ilharco, Nikolaos Pappas, Yi Mao, Weizhu Chen, Noah A. Smith",2021-03-24,Finetuning Pretrained Transformers into RNNs,https://arxiv.org/abs/2103.13076,51.0,,,450000000.0,,6.1e+19,,,,,,,,205.48,,,,,,"Transformers have outperformed recurrent neural networks (RNNs) in natural language generation. But this comes with a significant computational cost, as the attention mechanism's complexity scales quadratically with sequence length. Efficient transformer variants have received increasing interest in recent works. Among them, a linear-complexity recurrent variant has proven well suited for autoregressive generation. It approximates the softmax attention with randomized or heuristic feature maps, but can be difficult to train and may yield suboptimal accuracy. This work aims to convert a pretrained transformer into its efficient recurrent counterpart, improving efficiency while maintaining accuracy. Specifically, we propose a swap-then-finetune procedure: in an off-the-shelf pretrained transformer, we replace the softmax attention with its linear-complexity recurrent alternative and then finetune. With a learned feature map, our approach provides an improved tradeoff between efficiency and accuracy over the standard transformer and other recurrent variants. We also show that the finetuning process has lower training cost relative to training these recurrent variants from scratch. As many models for natural language tasks are increasingly dependent on large-scale pretrained transformers, this work presents a viable approach to improving inference efficiency without repeating the expensive pretraining process.",T2R + Random Init,Unreleased,,,2024-11-01 14:03:32+00:00,"United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
Unicorn,Language,Allen Institute for AI,Research collective,"Nicholas Lourie, Ronan Le Bras, Chandra Bhagavatula, Yejin Choi",2021-03-24,UNICORN on RAINBOW: A Universal Commonsense Reasoning Model on a New Multitask Benchmark,https://arxiv.org/abs/2103.13009,,,,11000000000.0,,,,,,RAINBOW,"Introduces RAINBOW, a transfer learning benchmark comprised of αNLI, COSMOSQA, HELLASWAG, PIQA, SOCIALIQA, and WINOGRANDE",324742.0,"Train set contains 324742 datapoints.
https://colab.research.google.com/drive/1MKmS96_kYWT4JsNW1GmEtgU63RqPCJ3P#scrollTo=vrAW7-DErrkf

Each dataset is a multiple choice QA, so one gradient calculated per question.

They first train on all six datasets simultaneously; then on each dataset separately for leaderboard submissions.

Epochs: it seems like they test both batch size 16 and 32 for pretraining over 25k steps, the larger of which would correspond to 2.46 epochs over the full dataset.
They then do 25k steps for each dataset, with a batch size of either 16 or 32 depending on the dataset. This means the fine-tuning involved the following number of epochs for each dataset:
- Anli: 2.36
- CosmosQA: 31.67
- HellaSWAG: 20.05
- PIQA: 49.65
- SocialIQA: 23.94
- WinoGrande: 9.90",2.46,3.0,"""Training times usually took several hours per run""
Guessing ",,,,"Commonsense AI has long been seen as a near impossible goal -- until recently. Now, research interest has sharply increased with an influx of new benchmarks and models.
We propose two new ways to evaluate commonsense models, emphasizing their generality on new tasks and building on diverse, recently introduced benchmarks. First, we propose a new multitask benchmark, RAINBOW, to promote research on commonsense models that generalize well over multiple tasks and datasets. Second, we propose a novel evaluation, the cost equivalent curve, that sheds new insight on how the choice of source datasets, pretrained language models, and transfer learning methods impacts performance and data efficiency.
We perform extensive experiments -- over 200 experiments encompassing 4800 models -- and report multiple valuable and sometimes surprising findings, e.g., that transfer almost always leads to better or equivalent performance if following a particular recipe, that QA-based commonsense datasets transfer well with each other, while commonsense knowledge graphs do not, and that perhaps counter-intuitively, larger models benefit more from transfer than smaller ones.
Last but not least, we introduce a new universal commonsense reasoning model, UNICORN, that establishes new state-of-the-art performance across 8 popular commonsense benchmarks, aNLI (87.3%), CosmosQA (91.8%), HellaSWAG (93.9%), PIQA (90.1%), SocialIQa (83.2%), WinoGrande (86.6%), CycIC (94.0%) and CommonsenseQA (79.3%).",,Open weights (unrestricted),,Confident,2024-12-02 15:25:24+00:00,United States of America,T5-11B,3.3e+22,"All experiments were run on Google Cloud using two Google Compute Engine virtual machine (VM) instances communicating with various TPUs. [...] Each VM had 20 vCPUs with 75GB of memory [...] For hardware acceleration, we ran all the experiments using v3-8 TPUs when building off of T5-LARGE or smaller. [...] The T5-11B models were trained using TPU v2-256 and v3-256s with a model parallelism of 16. Training times usually took several hours per run, so we ran many experiments in parallel on the VMs using GNU Parallel (Tange 2011).

Speculatively, ""several hours"" ~= 3 hours on v3-256 (128 chips) would suggest 3 * 3600 * 1.23e14 * 128 * 0.3 = 5.1e19 FLOPs

So unlikely to significantly move the 3.3e22 FLOPs from T5-11B pretraining.",,,,32.0,,
GPT-Neo-2.7B,Language,EleutherAI,Research collective,"Sid Black, Leo Gao, Phil Wang, Connor Leahy, Stella Biderman",2021-03-21,GPT-Neo: Large Scale Autoregressive Language Modeling with Mesh-Tensorflow,https://github.com/EleutherAI/gpt-neo,678.0,,,2700000000.0,"source: https://www.eleuther.ai/projects/gpt-neo/

Note: Directory of LLMs (https://docs.google.com/spreadsheets/d/1gc6yse74XCwBx028HV_cvdxwXkmXejVjkO-Mz2uwE0k/edit#gid=0) gives a somewhat lower estimate (2e9)",7.9e+21,,,source: https://www.aitracker.org/,The Pile,,885837004800.0,"""In aggregate, the Pile consists of over 825GiB of raw text data""

(see GPT-NeoX)",,,,,,Self-supervised learning,,GPT-Neo-2.7B,Open weights (unrestricted),,,2025-02-17 19:51:14+00:00,"Multinational,United States of America",,,,,,,,,True
GLM-10B,Language,"Tsinghua University,Beijing Academy of Artificial Intelligence / BAAI,Massachusetts Institute of Technology (MIT),Shanghai Qi Zhi institute","Academia,Academia,Academia","Zhengxiao Du, Yujie Qian, Xiao Liu, Ming Ding, Jiezhong Qiu, Zhilin Yang, Jie Tang",2021-03-18,GLM: General Language Model Pretraining with Autoregressive Blank Infilling,https://arxiv.org/abs/2103.10360,1162.0,,smaller version of the model in this paper,10000000000.0,,3.79e+22,,,,The Pile,see table https://github.com/THUDM/GLM ,,,1.0,,,,,,"There have been various types of pretraining architectures including autoencoding models (e.g., BERT), autoregressive models (e.g., GPT), and encoder-decoder models (e.g., T5). However, none of the pretraining frameworks performs the best for all tasks of three main categories including natural language understanding (NLU), unconditional generation, and conditional generation. We propose a General Language Model (GLM) based on autoregressive blank infilling to address this challenge. GLM improves blank filling pretraining by adding 2D positional encodings and allowing an arbitrary order to predict spans, which results in performance gains over BERT and T5 on NLU tasks. Meanwhile, GLM can be pretrained for different types of tasks by varying the number and lengths of blanks. On a wide range of tasks across NLU, conditional and unconditional generation, GLM outperforms BERT, T5, and GPT given the same model sizes and data, and achieves the best performance from a single pretrained model with 1.25x parameters of BERT Large , demonstrating its generalizability to different downstream tasks.",GLM-10B,Open weights (unrestricted),,Unverified,2024-11-01 14:03:33+00:00,"China,China,United States of America,China",,,,,,,524288.0,"""The models are trained on 64 V100 GPUs for 200K steps with
batch size of 1024 and maximum sequence length
of 512""",
ResNet-RS,Vision,"Google Brain,University of California (UC) Berkeley","Industry,Academia","Irwan Bello, William Fedus, Xianzhi Du, Ekin D. Cubuk, Aravind Srinivas, Tsung-Yi Lin, Jonathon Shlens, Barret Zoph",2021-03-13,Revisiting ResNets: Improved Training and Scaling Strategies,https://arxiv.org/abs/2103.07579,274.0,,,192000000.0,Table 7 appendix B,1.763328e+22,,,"(350) * (128000000000) * (1312 * 10**5) * 3 = 17633280000000000000000
(epochs) * (inference FLOP) * (dataset size) * (constant to account for backpropagation)
from 4.2 ""Our training method closely matches that of EfficientNet, where we train for 350 epochs, but with a few small differences""350 epochs from description of Table 8 in appendix C",,"""In a large-scale semi-supervised learning setup, ResNet-RS obtains a 4.7x training speed-up on TPUs (5.5x on GPUs) over EfficientNet-B5 when co-trained on ImageNet and an additional 130M pseudo-labeled images.""
""We train ResNets-RS on the combination of 1.2M labeled ImageNet images and 130M pseudo-labeled images, in a similar fashion to Noisy Studen""
 ""We use the same dataset of 130M images pseudo-labeled as Noisy Student, """,131200000.0,"1.2M + 130M = 131.2M 
""In a large-scale semi-supervised learning setup, ResNet-RS obtains a 4.7x training speed-up on TPUs (5.5x on GPUs) over EfficientNet-B5 when co-trained on ImageNet and an additional 130M pseudo-labeled images.""""We train ResNets-RS on the combination of 1.2M labeled ImageNet images and 130M pseudo-labeled images, in a similar fashion to Noisy Studen""
 ""We use the same dataset of 130M images pseudo-labeled as Noisy Student""",350.0,,,Google TPU v3,,,"Novel computer vision architectures monopolize the spotlight, but the impact of the model architecture is often conflated with simultaneous changes to training methodology and scaling strategies. Our work revisits the canonical ResNet (He et al., 2015) and studies these three aspects in an effort to disentangle them. Perhaps surprisingly, we find that training and scaling strategies may matter more than architectural changes, and further, that the resulting ResNets match recent state-of-the-art models. We show that the best performing scaling strategy depends on the training regime and offer two new scaling strategies: (1) scale model depth in regimes where overfitting can occur (width scaling is preferable otherwise); (2) increase image resolution more slowly than previously recommended (Tan & Le, 2019). Using improved training and scaling strategies, we design a family of ResNet architectures, ResNet-RS, which are 1.7x - 2.7x faster than EfficientNets on TPUs, while achieving similar accuracies on ImageNet. In a large-scale semi-supervised learning setup, ResNet-RS achieves 86.2% top-1 ImageNet accuracy, while being 4.7x faster than EfficientNet NoisyStudent. The training techniques improve transfer performance on a suite of downstream tasks (rivaling state-of-the-art self-supervised algorithms) and extend to video classification on Kinetics-400. We recommend practitioners use these simple revised ResNets as baselines for future research. ",,Open weights (unrestricted),,Confident,2025-02-17 17:01:48+00:00,"United States of America,United States of America",,,,,,,,,
M6-T,"Multimodal,Language,Vision",Alibaba,Industry,"An Yang, Junyang Lin, Rui Men, Chang Zhou, Le Jiang, Xianyan Jia, Ang Wang, Jie Zhang, Jiamang Wang, Yong Li, Di Zhang, Wei Lin, Lin Qu, Jingren Zhou, Hongxia Yang",2021-03-05,M6-T: Exploring Sparse Expert Models and Beyond,https://arxiv.org/abs/2105.15082,76.0,SOTA improvement,"Improves on hardware SOTA for similar problems

Abstract: 
""We push the model
scale to over 1 trillion parameters and implement it on solely 480 NVIDIA V100-32GB GPUs, in comparison with the recent SOTAs [11; 6] on 2048 TPU cores.""",1002700000000.0,Table 5. Note model is sparse MoE with 960 experts; not all parameters are activated on the forward pass.,5.5e+21,,,Estimate taken from https://www.governance.ai/research-paper/recent-trends-chinas-llm-landscape,M6-Corpus,M6-Corpus is a Chinese language multimodal dataset with 60.5B images and 111.8B tokens of text,1900000000000.0,60.5B images and 111.8B tokens of text,,,,NVIDIA Tesla V100 DGXS 32 GB,480.0,Self-supervised learning,"Mixture-of-Experts (MoE) models can achieve promising results with outrageous large amount of parameters but constant computation cost, and thus it has become a trend in model scaling. Still it is a mystery how MoE layers bring quality gains by leveraging the parameters with sparse activation. In this work, we investigate several key factors in sparse expert models. We observe that load imbalance may not be a significant problem affecting model quality, contrary to the perspectives of recent studies, while the number of sparsely activated experts k and expert capacity C in top-k routing can significantly make a difference in this context. Furthermore, we take a step forward to propose a simple method called expert prototyping that splits experts into different prototypes and applies k top-1 routing. This strategy improves the model quality but maintains constant computational costs, and our further exploration on extremely large-scale models reflects that it is more effective in training larger models. We push the model scale to over 1 trillion parameters and implement it on solely 480 NVIDIA V100-32GB GPUs, in comparison with the recent SOTAs on 2048 TPU cores. The proposed giant model achieves substantial speedup in convergence over the same-size baseline.",,Unreleased,,Likely,2025-02-17 19:50:58+00:00,China,,,,,,,,,
Generative BST,Language,Facebook AI Research,Industry,"Stephen Roller, Emily Dinan, Naman Goyal, Da Ju, Mary Williamson, Yinhan Liu, Jing Xu, Myle Ott, Kurt Shuster, Eric M. Smith, Y-Lan Boureau, Jason Weston",2021-03-05,Recipes for building an open-domain chatbot,https://arxiv.org/abs/2004.13637,932.0,SOTA improvement,"Abstract:
""Human evaluations show our best models are superior to existing approaches in multi-turn dialogue in terms of engagingness and humanness measurements. We then discuss the limitations of this work by analyzing failure cases of our models.""",9431810048.0,The largest model is a transformer with 9.4B parameters (Table 2),1.449e+22,,,"""Both our 2.7B and 9.4B parameter models were trained with batches of approximately 500k label BPE tokens per batch [...] The 9.4B parameter model was trained [...] for a total of 200k SGD steps.""

Also note that the full dataset contains 56.8B label BPE tokens and 88.8B context tokens, so for each batch of 500k label tokens, there are likely 500k * 88.8B / 56.8B = 780k context tokens.

6 * 9.4318B * 200k * (500k + 780k) = 1.449e22",,"Section 6. Pre-training is done on Pushshift.io Reddit: ""Our final dataset contains 1.50B comments totaling 56.8B label BPE tokens and 88.8B context tokens.""

They finetune on a few smaller datasets: ConvAI2 (140k utterances), Empathetic Dialogues (50k utterances), Wizard of Wikipedia (194k utterances), Blended Skill Talk (76k utterances, generated by training language models on the previous three datasets and selecting the best outputs from each)",56800000000.0,"Section 6. Pre-training is done on Pushshift.io Reddit: ""Our final dataset contains 1.50B comments totaling 56.8B label BPE tokens and 88.8B context tokens.""
None of the fine-tuning datasets put a significant dent in the total dataset size.

Epochs: they do 200k steps, where each batch has 500k label tokens = 100B label tokens seen. 56.8B label tokens in pre-training dataset, so 1.76 epochs",1.7605633803,,,,,,"Building open-domain chatbots is a challenging area for machine learning research. While prior work has shown that scaling neural models in the number of parameters and the size of the data they are trained on gives improved results, we show that other ingredients are important for a high-performing chatbot. Good conversation requires a number of skills that an expert conversationalist blends in a seamless way: providing engaging talking points and listening to their partners, and displaying knowledge, empathy and personality appropriately, while maintaining a consistent persona. We show that large scale models can learn these skills when given appropriate training data and choice of generation strategy. We build variants of these recipes with 90M, 2.7B and 9.4B parameter models, and make our models and code publicly available. Human evaluations show our best models are superior to existing approaches in multi-turn dialogue in terms of engagingness and humanness measurements. We then discuss the limitations of this work by analyzing failure cases of our models.",,Open weights (unrestricted),,Confident,2025-02-17 17:01:56+00:00,United States of America,,,,,,,,,
ProteinGAN,Biology,"Vilnius University,Chalmers University of Technology","Academia,Academia","Donatas Repecka, Vykintas Jauniskis, Laurynas Karpus, Elzbieta Rembeza, Irmantas Rokaitis, Jan Zrimec, Simona Poviloniene, Audrius Laurynenas, Sandra Viknander, Wissam Abuajwa, Otto Savolainen, Rolandas Meskys, Martin K. M. Engqvist & Aleksej Zelezniak",2021-03-04,Expanding functional protein sequence spaces using generative adversarial networks,https://www.nature.com/articles/s42256-021-00310-5,,,,60000000.0,"""The final architecture of the network comprised 45 layers with over 60 million trainable parameters""",4.3e+18,,,"2.5 million steps, batch size 64, 210 hours on NVIDIA Tesla P100 system",UniProtKB,,5330000.999999995,"16,706 × 319 = 5,329,214 tokens

Total datapoints = 5.33 million tokens",,210.0,,NVIDIA P100,1.0,Unsupervised,"De novo protein design for catalysis of any desired chemical reaction is a long-standing goal in protein engineering because of the broad spectrum of technological, scientific and medical applications. However, mapping protein sequence to protein function is currently neither computationally nor experimentally tangible. Here, we develop ProteinGAN, a self-attention-based variant of the generative adversarial network that is able to ‘learn’ natural protein sequence diversity and enables the generation of functional protein sequences. ProteinGAN learns the evolutionary relationships of protein sequences directly from the complex multidimensional amino-acid sequence space and creates new, highly diverse sequence variants with natural-like physical properties. Using malate dehydrogenase (MDH) as a template enzyme, we show that 24% (13 out of 55 tested) of the ProteinGAN-generated and experimentally tested sequences are soluble and display MDH catalytic activity in the tested conditions in vitro, including a highly mutated variant of 106 amino-acid substitutions. ProteinGAN therefore demonstrates the potential of artificial intelligence to rapidly generate highly diverse functional proteins within the allowed biological constraints of the sequence space.",,,,Confident,2025-02-17 17:02:00+00:00,"Lithuania,Sweden",,,,,,,,,
RFA-GATE-Gaussian-Stateful Big,Language,"University of Washington,DeepMind,Allen Institute for AI,Hebrew University of Jerusalem,The University of Hong Kong","Academia,Industry,Research collective,Academia,Academia","Hao Peng, Nikolaos Pappas, Dani Yogatama, Roy Schwartz, Noah A. Smith, Lingpeng Kong",2021-03-03,Random Feature Attention,https://arxiv.org/abs/2103.02143,314.0,,,242000000.0,,7.14e+18,,,,WikiText-103,,,,47.72,,,,,,"Transformers are state-of-the-art models for a variety of sequence modeling tasks. At their core is an attention function which models pairwise interactions between the inputs at every timestep. While attention is powerful, it does not scale efficiently to long sequences due to its quadratic time and space complexity in the sequence length. We propose RFA, a linear time and space attention that uses random feature methods to approximate the softmax function, and explore its application in transformers. RFA can be used as a drop-in replacement for conventional softmax attention and offers a straightforward way of learning with recency bias through an optional gating mechanism. Experiments on language modeling and machine translation demonstrate that RFA achieves similar or better performance compared to strong transformer baselines. In the machine translation experiment, RFA decodes twice as fast as a vanilla transformer. Compared to existing efficient transformer variants, RFA is competitive in terms of both accuracy and efficiency on three long text classification datasets. Our analysis shows that RFA's efficiency gains are especially notable on long sequences, suggesting that RFA will be particularly useful in tasks that require working with large inputs, fast decoding speed, or low memory footprints.",RFA-GATE-Gaussian-Stateful Big,Unreleased,,,2024-11-01 14:03:44+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,United States of America,Israel,Hong Kong,China",,,,,,,,,
Wu Dao - Wen Hui,"Language,Multimodal,Video,Image generation",Beijing Academy of Artificial Intelligence / BAAI,Academia,,2021-03-01,China's GPT-3? BAAI Introduces Superscale Intelligence Model 'Wu Dao 1.0',https://medium.com/syncedreview/chinas-gpt-3-baai-introduces-superscale-intelligence-model-wu-dao-1-0-98a573fc4d70,,,,11300000000.0,"""Wu Dao — Wen Hui has reached 11.3 billion parameters, and through simple fine-tuning can generate poetry, make videos, draw pictures, retrieve text, perform complex reasoning, etc.""

https://medium.com/syncedreview/chinas-gpt-3-baai-introduces-superscale-intelligence-model-wu-dao-1-0-98a573fc4d70",1.161216e+20,,,"64 Nvidia V100 GPUs for 2.5 days

64 GPUs * 2.8e13 FLOP/s /GPU * 2.5*24*60*60s* 0.3 [utilization rate]

",,,,,,,,,,Self-supervised learning,"Wu Dao — Wen Hui is an ultra-large-scale cognitive-oriented pretraining model that focuses on a series of essential problems in general artificial intelligence from a cognitive perspective, aiming to develop and enhance the logic-, consciousness- and reasoning-based cognitive capabilities of pretraining models. Wu Dao — Wen Hui has reached 11.3 billion parameters, and through simple fine-tuning can generate poetry, make videos, draw pictures, retrieve text, perform complex reasoning, etc. BAAI says the model achieves near-human performance on poetry generation on the Turing test.",,,,,2025-01-10 16:31:02+00:00,China,,,,,,,,,
Wu Dao - Wen Lan,"Multimodal,Vision",Beijing Academy of Artificial Intelligence / BAAI,Academia,,2021-03-01,China's GPT-3? BAAI Introduces Superscale Intelligence Model 'Wu Dao 1.0',https://medium.com/syncedreview/chinas-gpt-3-baai-introduces-superscale-intelligence-model-wu-dao-1-0-98a573fc4d70,,,,1000000000.0,"""Currently, the model has 1 billion parameters and is trained on 50 million graphic pairs collected from open sources.""

https://medium.com/syncedreview/chinas-gpt-3-baai-introduces-superscale-intelligence-model-wu-dao-1-0-98a573fc4d70",7.1995392e+21,,,"128 Nvidia A100 GPUs for 7 days

128 GPUs * 3.1e14 FLOP/s /GPU * 7*24*60*60s* 0.3 [utilization rate]

",,,,,,,,,,Self-supervised learning,"Wu Dao — Wen Lan, meanwhile, is the first publicly available Chinese universal graphic multimodal pretraining model. The ultra-large-scale multimodal pretraining model aims to break through the theoretical challenges of pretraining multimodal data based on a combination of graphics, text and video, and eventually generate industrial-grade Chinese graphics pretraining models and applications that exceed SOTA performance. Currently, the model has 1 billion parameters and is trained on 50 million graphic pairs collected from open sources. The Wu Dao — Wen Lan model has reached SOTA performance, scoring 5 percent higher than the champion team on the Image Caption task on the Chinese public multimodal test set AIC-ICC and 20 percent higher than the most popular UNITER model on the Visual Entailment task.",,,,,2025-02-17 17:02:43+00:00,China,,,,,,,,,
Wu Dao - Wen Su,Biology,Beijing Academy of Artificial Intelligence / BAAI,Academia,,2021-03-01,China's GPT-3? BAAI Introduces Superscale Intelligence Model 'Wu Dao 1.0',https://medium.com/syncedreview/chinas-gpt-3-baai-introduces-superscale-intelligence-model-wu-dao-1-0-98a573fc4d70,,,,,,,,,,,,,,,,,,,Self-supervised learning,,,,,Unknown,2024-12-12 22:57:22+00:00,China,,,,,,,,,
Meta Pseudo Labels,Vision,"Google Brain,Google AI","Industry,Industry","Hieu Pham, Zihang Dai, Qizhe Xie, Minh-Thang Luong, and Quoc V. Le",2021-03-01,Meta pseudo labels,https://arxiv.org/abs/2003.10580,597.0,SOTA improvement,,480000000.0,"Table 4
 480M",4.79e+22,,,"From communication with author:

22671 TPU days on specific hardware.

Which hardware did you use and in which configuration?
2048 cores of TPU v3.

Precision: Mixed. bfloat16 for activations, float32 for weights and optimizer slots.

2048 TPUv3 cores means 1024 TPUv3 chips, and the spec is 123e12 FLOP/second per chip with bfloat16 precision (Source: https://cloud.google.com/tpu/docs/system-architecture-tpu-vm)

So the compute estimate is:
1024 chips * 123e12 FLOP/second * 0.4 utilization * 11 days * 24 * 60 * 60 = 4.788191232e+22 FLOP","ImageNet,JFT-300M",,130000000.0,"Section 4
Datasets. For this experiment, we use the entire ImageNet
training set as labeled data, and use the JFT dataset as unlabeled data. The JFT dataset has 300 million images, and
then is filtered down to 130 million images by Noisy Student
using confidence thresholds and up-sampling [77]. We use
the same 130 million images as Noisy Student",,264.0,"11 days from section 4:
""We train the model for 1 million steps in total,
which takes about 11 days for EfficientNet-L2 and 10 days
for EfficientNet-B6-Wide. ""

""Specifically, our training process runs on a cluster of 2,048
TPUv3 cores. ""
",Google TPU v3,1024.0,Self-supervised learning,"We present Meta Pseudo Labels, a semi-supervised learning method that achieves a new state-of-the-art top-1 accuracy of 90.2% on ImageNet, which is 1.6% better than the existing state-of-the-art. Like Pseudo Labels, Meta Pseudo Labels has a teacher network to generate pseudo labels on unlabeled data to teach a student network. However, unlike Pseudo Labels where the teacher is fixed, the teacher in Meta Pseudo Labels is constantly adapted by the feedback of the student's performance on the labeled dataset. As a result, the teacher generates better pseudo labels to teach the student. Our code will be available at this https URL.",,Unreleased,,,2025-02-17 17:02:38+00:00,"United States of America,Multinational,United States of America",,,,,,,,,
M6-10B,"Multimodal,Image generation,Vision,Language","Tsinghua University,Alibaba","Academia,Industry","J Lin, R Men, A Yang, C Zhou, M Ding, Y Zhang",2021-03-01,M6: A Chinese Multimodal Pretrainer,https://arxiv.org/abs/2103.00823,124.0,,,10000000000.0,"""We scale the
model size up to 10 billion and 100 billion parameters, and build
the largest pretrained model in Chinese.""",,,,"""We implement M6-100B with around 100 billion parameters
on 128 Nvidia A100s and the speed of pretraining achieves 1440
samples/s (for samples of the sequence length of 272).""

Their response to our email doesn't say enough to tell us what the compute is for this paper, but allows us to determine the compute for the follow-up paper with the M6-10T model (but we knew this already)",,,1900000000000.0,"""1.9TB images and 292GB texts""

TODO: figure out what to do for multimodal pretraining datasets",,,,,,,"In this work, we construct the largest dataset for multimodal pretraining in Chinese, which consists of over 1.9TB images and 292GB texts that cover a wide range of domains. We propose a cross-modal pretraining method called M6, referring to Multi-Modality to Multi-Modality Multitask Mega-transformer, for unified pretraining on the data of single modality and multiple modalities. We scale the model size up to 10 billion and 100 billion parameters, and build the largest pretrained model in Chinese. We apply the model to a series of downstream applications, and demonstrate its outstanding performance in comparison with strong baselines. Furthermore, we specifically design a downstream task of text-guided image generation, and show that the finetuned M6 can create high-quality images with high resolution and abundant details.",,,,,2024-10-01 14:01:23+00:00,"China,China",,,,,,,,,
M6-100B,"Multimodal,Image generation,Vision,Language","Tsinghua University,Alibaba","Academia,Industry","J Lin, R Men, A Yang, C Zhou, M Ding, Y Zhang",2021-03-01,M6: A Chinese Multimodal Pretrainer,https://arxiv.org/abs/2103.00823,124.0,,,100000000000.0,"""We scale the
model size up to 10 billion and 100 billion parameters, and build
the largest pretrained model in Chinese.""",,,,,,,1900000000000.0,"""1.9TB images and 292GB texts""

TODO: figure out what to do for multimodal pretraining datasets",,,,,,,"In this work, we construct the largest dataset for multimodal pretraining in Chinese, which consists of over 1.9TB images and 292GB texts that cover a wide range of domains. We propose a cross-modal pretraining method called M6, referring to Multi-Modality to Multi-Modality Multitask Mega-transformer, for unified pretraining on the data of single modality and multiple modalities. We scale the model size up to 10 billion and 100 billion parameters, and build the largest pretrained model in Chinese. We apply the model to a series of downstream applications, and demonstrate its outstanding performance in comparison with strong baselines. Furthermore, we specifically design a downstream task of text-guided image generation, and show that the finetuned M6 can create high-quality images with high resolution and abundant details.",,,,,2024-10-01 14:01:23+00:00,"China,China",,,,,,,,,
SRU++ Large,Language,ASAPP,Industry,Tao Lei,2021-02-24,When Attention Meets Fast Recurrence: Training Language Models with Reduced Compute,https://arxiv.org/abs/2102.12459,43.0,SOTA improvement,"""our model achieves a state-of-the-art result on the ENWIK8 dataset using 1.6 days of training on an 8-GPU machine. """,234000000.0,,1.1e+19,,,,enwik8,,,,36.0,,,,,,"Large language models have become increasingly difficult to train because of the growing computation time and cost. In this work, we present SRU++, a highly-efficient architecture that combines fast recurrence and attention for sequence modeling. SRU++ exhibits strong modeling capacity and training efficiency. On standard language modeling tasks such as Enwik8, Wiki-103 and Billion Word datasets, our model obtains better bits-per-character and perplexity while using 3x-10x less training cost compared to top-performing Transformer models. For instance, our model achieves a state-of-the-art result on the Enwik8 dataset using 1.6 days of training on an 8-GPU machine. We further demonstrate that SRU++ requires minimal attention for near state-of-the-art performance. Our results suggest jointly leveraging fast recurrence with little attention as a promising direction for accelerating model training and inference.",SRU++ Large,Open weights (unrestricted),,,2024-11-01 14:03:44+00:00,United States of America,,,,,,,,,
Linear Transformer (large),Language,IDSIA,Academia,"Imanol Schlag, Kazuki Irie, Jürgen Schmidhuber",2021-02-22,Linear Transformers Are Secretly Fast Weight Programmers,https://arxiv.org/abs/2102.11174,176.0,,,90000000.0,,3.89e+18,,,,WikiText-103,,,,70.0,,,,,,"We show the formal equivalence of linearised self-attention mechanisms and fast weight controllers from the early '90s, where a ``slow"" neural net learns by gradient descent to program the ``fast weights"" of another net through sequences of elementary programming instructions which are additive outer products of self-invented activation patterns (today called keys and values). Such Fast Weight Programmers (FWPs) learn to manipulate the contents of a finite memory and dynamically interact with it. We infer a memory capacity limitation of recent linearised softmax attention variants, and replace the purely additive outer products by a delta rule-like programming instruction, such that the FWP can more easily learn to correct the current mapping from keys to values. The FWP also learns to compute dynamically changing learning rates. We also propose a new kernel function to linearise attention which balances simplicity and effectiveness. We conduct experiments on synthetic retrieval problems as well as standard machine translation and language modelling tasks which demonstrate the benefits of our methods.",Linear Transformer (large),Unreleased,,,2024-11-01 14:03:44+00:00,Switzerland,,,,,,,,,
Rational DQN Average,Games,TU Darmstadt,Academia,"Q Delfosse, P Schramowski, A Molina",2021-02-18,Recurrent Rational Networks,https://openreview.net/forum?id=gnRmI8TatHV,8.0,SOTA improvement,,1683456.0,See figure 7,,,,,,,,,,,,,,,,,,,,2024-11-01 14:03:44+00:00,Germany,,,,,,,,,
MSA Transformer,Biology,"Facebook AI Research,University of California (UC) Berkeley,New York University (NYU)","Industry,Academia,Academia","Roshan Rao, Jason Liu, Robert Verkuil, Joshua Meier, John F. Canny, Pieter Abbeel, Tom Sercu, Alexander Rives",2021-02-13,MSA Transformer,https://proceedings.mlr.press/v139/rao21a/rao21a.pdf,433.0,SOTA improvement,"""The performance of the model surpasses current state-of-the-art unsupervised structure learning methods by a wide margin, with far greater parameter efficiency than prior state-of-the-art protein language models""",100000000.0,"""We train an MSA Transformer model with 100M parameters..."" ",5.49e+21,,,"Based on: https://docs.google.com/spreadsheets/d/1enan21dFx03TkwufHgOwTVNBtuYlqNY9uurjIK6YS-8/edit#gid=0

Number of steps 4.5e5, batch size (tokens) 6.1e7, parameters 1e8

Calculation = 4e8 FLOP/bp * 4.5e5 bp + 2e8 FLOP/fp * 2.75e13 fp

Batch size: 512
Seq length: 100 * 1192 tokens
All models are trained on 32 V100 GPUs for 100k updates. The four models with best contact precision are then further trained to 150k updates. Finally, the best model at 150k updates is trained to 450k updates.

450k * 512 * 100 * 1192 * 100M * 6 = 1.65e22","UniRef50,UniRef30 (FKA UniClust30)","""Models are trained on a dataset of 26 million MSAs. An MSA is generated for each UniRef50 sequence by searching UniClost30 with HHblits.""",9297600000000.0,"""We train an MSA Transformer model with 100M parameters on a large dataset (4.3 TB) of 26 million MSAs, with an average of 1192 sequences per MSA.""
Average sequence is ~300 amino acids/tokens long.
26 million * 1192 * 300 = 9.3T tokens",,,,NVIDIA Tesla V100 DGXS 32 GB,32.0,,"Unsupervised protein language models trained across millions of diverse sequences learn structure and function of proteins. Protein language models studied to date have been trained to perform inference from individual sequences. The longstanding approach in computational biology has been to make inferences from a family of evolutionarily related sequences by fitting a model to each family independently. In this work we combine the two paradigms. We introduce a protein language model which takes as input a set of sequences in the form of a multiple sequence alignment. The model interleaves row and column attention across the input sequences and is trained with a variant of the masked language modeling objective across many protein families. The performance of the model surpasses current state-of-the-art unsupervised structure learning methods by a wide margin, with far greater parameter efficiency than prior state-of-the-art protein language models. ",,Open weights (unrestricted),,Likely,2025-02-19 17:56:00+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
top-down frozen classifier,Speech,"University of Edinburgh,Toshiba Cambridge Research Laboratory","Academia,Industry","Shucong Zhang, Cong-Thanh Do, Rama Doddipatla, Erfan Loweimi, Peter Bell, Steve Renals",2021-02-09,Train your classifier first: Cascade Neural Networks Training from upper layers to lower layers,https://arxiv.org/abs/2102.04697,2.0,SOTA improvement,"""Table 2 demonstrates that, to the best of our knowledge, top-down training results in state-of-the art character error rates for LSTM-based endto-end models on WSJ""",,,,,,,WSJ,,,,,,,,,,"Although the lower layers of a deep neural network learn features which are transferable across datasets, these layers are not transferable within the same dataset. That is, in general, freezing the trained feature extractor (the lower layers) and retraining the classifier (the upper layers) on the same dataset leads to worse performance. In this paper, for the first time, we show that the frozen classifier is transferable within the same dataset. We develop a novel top-down training method which can be viewed as an algorithm for searching for high-quality classifiers. We tested this method on automatic speech recognition (ASR) tasks and language modelling tasks. The proposed method consistently improves recurrent neural network ASR models on Wall Street Journal, self-attention ASR models on Switchboard, and AWD-LSTM language models on WikiText-2.",top-down frozen classifier,Unreleased,,Unknown,2024-10-15 15:02:38+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
CryoDRGN,Biology,Massachusetts Institute of Technology (MIT),Academia,"Ellen D. Zhong, Tristan Bepler, Bonnie Berger, Joseph H. Davis",2021-02-04,CryoDRGN: reconstruction of heterogeneous cryo-EM structures using neural networks,https://www.nature.com/articles/s41592-020-01049-4,,,,,,,,,,,,,,,,,,,,"Cryo-electron microscopy (cryo-EM) single-particle analysis has proven powerful in determining the structures of rigid macromolecules. However, many imaged protein complexes exhibit conformational and compositional heterogeneity that poses a major challenge to existing three-dimensional reconstruction methods. Here, we present cryoDRGN, an algorithm that leverages the representation power of deep neural networks to directly reconstruct continuous distributions of 3D density maps and map per-particle heterogeneity of single-particle cryo-EM datasets. Using cryoDRGN, we uncovered residual heterogeneity in high-resolution datasets of the 80S ribosome and the RAG complex, revealed a new structural state of the assembling 50S ribosome, and visualized large-scale continuous motions of a spliceosome complex. CryoDRGN contains interactive tools to visualize a dataset’s distribution of per-particle variability, generate density maps for exploratory analysis, extract particle subsets for use with other tools and generate trajectories to visualize molecular motions. CryoDRGN is open-source software freely available at http://cryodrgn.csail.mit.edu.",,,,Unverified,2025-01-12 05:32:58+00:00,United States of America,,,,,,,,,
Selfish-RNN (SNT-ASGD) Stacked LSTMs,Language,"Eindhoven University of Technology,University of Twente","Academia,Academia","Shiwei Liu, Decebal Constantin Mocanu, Yulong Pei, Mykola Pechenizkiy",2021-01-22,Selfish Sparse RNN Training,https://arxiv.org/abs/2101.09048,39.0,,"SOTA for sparse networks, but presumably not in general",25200000.0,,1.4e+16,,,,Penn TreeBank,,,,100.0,,,,,,"Sparse neural networks have been widely applied to reduce the computational demands of training and deploying over-parameterized deep neural networks. For inference acceleration, methods that discover a sparse network from a pre-trained dense network (dense-to-sparse training) work effectively. Recently, dynamic sparse training (DST) has been proposed to train sparse neural networks without pre-training a dense model (sparse-to-sparse training), so that the training process can also be accelerated. However, previous sparse-to-sparse methods mainly focus on Multilayer Perceptron Networks (MLPs) and Convolutional Neural Networks (CNNs), failing to match the performance of dense-to-sparse methods in the Recurrent Neural Networks (RNNs) setting. In this paper, we propose an approach to train intrinsically sparse RNNs with a fixed parameter count in one single run, without compromising performance. During training, we allow RNN layers to have a non-uniform redistribution across cell gates for better regularization. Further, we propose SNT-ASGD, a novel variant of the averaged stochastic gradient optimizer, which significantly improves the performance of all sparse training methods for RNNs. Using these strategies, we achieve state-of-the-art sparse training results, better than the dense-to-sparse methods, with various types of RNNs on Penn TreeBank and Wikitext-2 datasets. Our codes are available at this https URL.",Selfish-RNN (SNT-ASGD) Stacked LSTMs,Open weights (non-commercial),,,2024-09-09 16:40:50+00:00,"Netherlands,Netherlands",,,,,,,,,
DeiT-B,Vision,"Meta AI,Sorbonne University","Industry,Academia","Hugo Touvron, Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, Hervé Jégou",2021-01-15,Training data-efficient image transformers & distillation through attention,https://arxiv.org/abs/2012.12877,5607.0,Highly cited,,86000000.0,(DeiT-B),7.884e+19,,,"2*86000000 parameters*3*1280000 training examples*300 epochs=1.98144e+17 FLOPs

compute [FLOP] = training time [s] × # of GPUs/TPUs × peak FLOP/s × utilization rate

(53h+20h)*3600*8*125000000000000 peak FLOP/s*0.3=7.884e+19

",ImageNet,,1280000.0,,300.0,53.0,"A typical training of 300 epochs takes 37 hours with 2 nodes or 53 hours on a single node for the DeiT-B.
In this paper, we train a vision transformer on a single 8-GPU node in two
to three days (53 hours of pre-training, and optionally 20 hours of fine-tuning) that is competitive with convnets having a similar number of parameters and efficiency. It uses Imagenet as the sole training set.",NVIDIA V100,,,"Recently, neural networks purely based on attention were shown to address image understanding tasks such as image classification. However, these visual transformers are pre-trained with hundreds of millions of images using an expensive infrastructure, thereby limiting their adoption.
In this work, we produce a competitive convolution-free transformer by training on Imagenet only. We train them on a single computer in less than 3 days. Our reference vision transformer (86M parameters) achieves top-1 accuracy of 83.1% (single-crop evaluation) on ImageNet with no external data.
More importantly, we introduce a teacher-student strategy specific to transformers. It relies on a distillation token ensuring that the student learns from the teacher through attention. We show the interest of this token-based distillation, especially when using a convnet as a teacher. This leads us to report results competitive with convnets for both Imagenet (where we obtain up to 85.2% accuracy) and when transferring to other tasks. We share our code and models.",,Open weights (unrestricted),,Confident,2024-11-26 14:59:08+00:00,"United States of America,France",,,,,,,,,
Switch,Language,Google,Industry,"William Fedus, Barret Zoph, Noam Shazeer",2021-01-11,Switch Transformers: Scaling to Trillion Parameter Models with Simple and Efficient Sparsity,https://arxiv.org/abs/2101.03961,1628.0,"Highly cited,SOTA improvement",""" On ANLI (Nie et al., 2019), Switch XXL improves over the prior state-of-the-art to get a 65.7 accuracy versus the prior best of 49.4 (Yang et al., 2020)... Finally, we also conduct an early examination of the model’s knowledge with three closed-book knowledge-based tasks: Natural
Questions, WebQuestions and TriviaQA, without additional pre-training using Salient Span Masking (Guu et al., 2020). In all three cases, we observe improvements over the prior stateof-the-art T5-XXL model (without SSM)""",1571000000000.0,"""Combining expert, model and data parallelism, we design two large Switch Transformer models, one with 395 billion and 1.6 trillion parameters""
Table 9 gives more precise count of 1571B parameters",8.22e+22,,,"Table 4
https://arxiv.org/ftp/arxiv/papers/2104/2104.10350.pdf",C4,,576000000000.0,"""In our protocol we pre-train with 2^20 (1,048,576) tokens
per batch for 550k steps amounting to 576B total tokens.""

1 token ~ 0.75 words",,648.0,"see table 4 in https://arxiv.org/ftp/arxiv/papers/2104/2104.10350.pdf
",Google TPU v3,1024.0,Self-supervised learning,"In deep learning, models typically reuse the same parameters for all inputs. Mixture of Experts (MoE) defies this and instead selects different parameters for each incoming example. The result is a sparsely-activated model -- with outrageous numbers of parameters -- but a constant computational cost. However, despite several notable successes of MoE, widespread adoption has been hindered by complexity, communication costs and training instability -- we address these with the Switch Transformer. We simplify the MoE routing algorithm and design intuitive improved models with reduced communication and computational costs. Our proposed training techniques help wrangle the instabilities and we show large sparse models may be trained, for the first time, with lower precision (bfloat16) formats. We design models based off T5-Base and T5-Large to obtain up to 7x increases in pre-training speed with the same computational resources. These improvements extend into multilingual settings where we measure gains over the mT5-Base version across all 101 languages. Finally, we advance the current scale of language models by pre-training up to trillion parameter models on the ""Colossal Clean Crawled Corpus"" and achieve a 4x speedup over the T5-XXL model.
",,Open weights (unrestricted),0.2796747967,,2025-02-17 19:50:52+00:00,United States of America,,,,,,,,,
Wu Dao - Wen Yuan,Language,Beijing Academy of Artificial Intelligence / BAAI,Academia,,2021-01-11,"Tencent: Facing cognition, Zhiyuan Research Institute and several units released a super-large-scale new pre-training model ""Enlightenment·Wenhui""",https://mp.weixin.qq.com/s/BUQWZ5EdR19i40GuFofpBg,,,,2600000000.0,"""It has 2.6 billion parameters and is capable of performing cognitive activities such as memorization, comprehension, retrieval, numerical calculation, multi-language, etc.""

https://medium.com/syncedreview/chinas-gpt-3-baai-introduces-superscale-intelligence-model-wu-dao-1-0-98a573fc4d70",6.5028096e+20,,,"64 Nvidia V100 GPUs for two weeks

64 GPUs * 2.8e13 FLOP/s /GPU * 14*24*60*60s * 0.3 [utilization rate]

",,,,,,,,,,Self-supervised learning,,,API access,,,2025-02-17 17:03:01+00:00,China,,,,,,Wu Dao - Wen Yuan,,,
BigSSL,Speech,"Google,Apple","Industry,Industry","Yu Zhang,  Daniel S. Park, Wei Han,James Qin, Anmol Gulati, Joel Shor, Aren Jansen, Yuanzhong Xu, Yanping Huang, Shibo Wang, Zongwei Zhou, Bo Li, Min Ma, William Chan, Jiahui Yu, Yongqiang Wang, Liangliang Cao, Khe Chai Sim, Bhuvana Ramabhadran, Tara N. Sainath, Françoise Beaufays, Zhifeng Chen, Quoc V. Le, Chung-Cheng Chiu, Ruoming Pang and Yonghui Wu",2021-01-10,BigSSL: Exploring the Frontier of Large-Scale Semi-Supervised Learning for Automatic Speech Recognition,https://arxiv.org/abs/2109.13226,151.0,SOTA improvement,"""In particular, on an ASR task with 34k hours of labeled data, by fine-tuning an 8 billion parameter pre-trained Conformer model we can match state-of-the-art (SoTA) performance with only 3% of the training data and significantly improve SoTA with the full training set""",8000000000.0,"""... we study the utility of large models, with the parameter count ranging from 600M to 8B...""",,,,,,,42626880000.0,"Sum all values in Table VII, and add 34k for English VAD, and 926k for English Youtube = 3116k hours

Note this involves significant self-training: ""Noisy student training (NST) [23], [41] is a self-training
method where a teacher model generates pseudo-labels for a
large unlabeled dataset, which is in turn used to train a student
model with augmentation.""

1 hour ~ 13,680 words
13680 * 3116000 = 42626880000",,,,,,,,,,,,2024-12-08 19:02:26+00:00,"United States of America,United States of America",,,,,,,,,
DALL-E,Image generation,OpenAI,Industry,"Aditya Ramesh, Mikhail Pavlov, Gabriel Goh, Scott Gray, Chelsea Voss, Alec Radford, Mark Chen, Ilya Sutskever",2021-01-05,Zero-Shot Text-to-Image Generation,"https://openai.com/blog/dall-e/

https://arxiv.org/abs/2102.12092",4003.0,"Significant use,Highly cited",,12000000000.0,DALL·E is a 12-billion parameter version of GPT-3 trained to generate images from text descriptions,4.7e+22,,,"source: https://lair.lighton.ai/akronomicon/

archived: https://github.com/lightonai/akronomicon/tree/main/akrodb",DALL-E,"To scale up to 12-billion parameters, we created a dataset of
a similar scale to JFT-300M (Sun et al., 2017) by collecting
250 million text-images pairs from the internet. This dataset
does not include MS-COCO, but does include Conceptual
Captions and a filtered subset of YFCC100M (Thomee et al.,
2016). As MS-COCO was created from the latter, our training data includes a fraction of the MS-COCO validation images (but none of the captions).",250000000.0,"""To scale up to 12-billion parameters, we created a dataset of a similar scale to JFT-300M (Sun et al., 2017) by collecting
250 million text-images pairs from the internet. ""

number of epochs: 
1024 batch size * 430,000 updates / 250,000,000 = 1.76",1.76,,"""We trained the model using 1024, 16 GB NVIDIA V100 GPUs and a total batch size of 1024, for a total of 430,000 updates.
At the start of training, we use a linear schedule to ramp up the step size to 4.5 · 10−4 over 5000 updates, and halved the
step size each time the training loss appeared to plateau. We did this a total of five times, ending training with a final step
size that was 32 times smaller than the initial one. """,NVIDIA Tesla V100 DGXS 16 GB,1024.0,Self-supervised learning,"Text-to-image generation has traditionally focused on finding better modeling assumptions for training on a fixed dataset. These assumptions might involve complex architectures, auxiliary losses, or side information such as object part labels or segmentation masks supplied during training. We describe a simple approach for this task based on a transformer that autoregressively models the text and image tokens as a single stream of data. With sufficient data and scale, our approach is competitive with previous domain-specific models when evaluated in a zero-shot fashion.",,API access,,,2025-02-17 19:50:40+00:00,United States of America,,,,,,,,,
CLIP (ViT L/14@336px),"Multimodal,Vision,Language,Video",OpenAI,Industry,"Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, Gretchen Krueger, Ilya Sutskever",2021-01-05,Learning Transferable Visual Models From Natural Language Supervision,https://arxiv.org/abs/2103.00020,20331.0,"Highly cited,SOTA improvement",,370000000.0,"Image encoder
Vision Transformer
Table 1 in https://arxiv.org/pdf/2010.11929.pdf
Authors fine-tuned ViT L/14 at additional 336px resolution, hence the @336 (See ViT)
307M params

Text encoder
~Transformer (from paper)
63M params",1.05e+22,,,https://docs.google.com/document/d/156miAJkFN9DDX06C3s03UDsretCtymCKiGDddLBCgQE/edit?usp=sharing,Unspecified unreleased,"Custom image-text pairs from the internet

we constructed a new dataset of 400 million (image,
text) pairs collected form a variety of publicly available
sources on the Internet. To attempt to cover as broad a set
of visual concepts as possible, we search for (image, text)
pairs as part of the construction process whose text includes
one of a set of 500,000 queries",400000000.0,,,288.0,"“The largest ResNet model, RN50x64, took 18 days to train on 592 V100 GPUs while the largest Vision Transformer took 12 days on 256 V100 GPUs”",NVIDIA V100,256.0,Self-supervised learning,"State-of-the-art computer vision systems are trained to predict a fixed set of predetermined object categories. This restricted form of supervision limits their generality and usability since additional labeled data is needed to specify any other visual concept. Learning directly from raw text about images is a promising alternative which leverages a much broader source of supervision. We demonstrate that the simple pre-training task of predicting which caption goes with which image is an efficient and scalable way to learn SOTA image representations from scratch on a dataset of 400 million (image, text) pairs collected from the internet. After pre-training, natural language is used to reference learned visual concepts (or describe new ones) enabling zero-shot transfer of the model to downstream tasks. We study the performance of this approach by benchmarking on over 30 different existing computer vision datasets, spanning tasks such as OCR, action recognition in videos, geo-localization, and many types of fine-grained object classification. The model transfers non-trivially to most tasks and is often competitive with a fully supervised baseline without the need for any dataset specific training. For instance, we match the accuracy of the original ResNet-50 on ImageNet zero-shot without needing to use any of the 1.28 million training examples it was trained on. We release our code and pre-trained model weights at this https URL.",,Open weights (unrestricted),,,2025-02-17 19:50:44+00:00,United States of America,,,,,,,,,
CLIP (ResNet-50),"Multimodal,Vision,Language,Video",OpenAI,Industry,"Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, Gretchen Krueger, Ilya Sutskever",2021-01-05,Learning Transferable Visual Models From Natural Language Supervision,https://arxiv.org/abs/2103.00020,20331.0,"Highly cited,SOTA improvement",,88600000.0,"Image encoder
~ResNet-50 (from paper)
25.6M params

Text encoder
~Transformer (from paper)
63M params",,,,,,Custom image-text pairs from the internet,400000000.0,,,,,,,,"State-of-the-art computer vision systems are trained to predict a fixed set of predetermined object categories. This restricted form of supervision limits their generality and usability since additional labeled data is needed to specify any other visual concept. Learning directly from raw text about images is a promising alternative which leverages a much broader source of supervision. We demonstrate that the simple pre-training task of predicting which caption goes with which image is an efficient and scalable way to learn SOTA image representations from scratch on a dataset of 400 million (image, text) pairs collected from the internet. After pre-training, natural language is used to reference learned visual concepts (or describe new ones) enabling zero-shot transfer of the model to downstream tasks. We study the performance of this approach by benchmarking on over 30 different existing computer vision datasets, spanning tasks such as OCR, action recognition in videos, geo-localization, and many types of fine-grained object classification. The model transfers non-trivially to most tasks and is often competitive with a fully supervised baseline without the need for any dataset specific training. For instance, we match the accuracy of the original ResNet-50 on ImageNet zero-shot without needing to use any of the 1.28 million training examples it was trained on. We release our code and pre-trained model weights at this https URL.",,,,,2024-11-01 14:03:46+00:00,United States of America,,,,,,,,,
Transformer-XL + AutoDropout (WT2),Language,"Google Brain,Carnegie Mellon University (CMU)","Industry,Academia","Hieu Pham, Quoc V. Le",2021-01-05,AutoDropout: Learning Dropout Patterns to Regularize Deep Networks,https://arxiv.org/abs/2101.01761,52.0,,,35000000.0,,,,,,WikiText-2,,,,,,,,,,"Neural networks are often over-parameterized and hence benefit from aggressive regularization. Conventional regularization methods, such as Dropout or weight decay, do not leverage the structures of the network's inputs and hidden states. As a result, these conventional methods are less effective than methods that leverage the structures, such as SpatialDropout and DropBlock, which randomly drop the values at certain contiguous areas in the hidden states and setting them to zero. Although the locations of dropout areas random, the patterns of SpatialDropout and DropBlock are manually designed and fixed. Here we propose to learn the dropout patterns. In our method, a controller learns to generate a dropout pattern at every channel and layer of a target network, such as a ConvNet or a Transformer. The target network is then trained with the dropout pattern, and its resulting validation performance is used as a signal for the controller to learn from. We show that this method works well for both image recognition on CIFAR-10 and ImageNet, as well as language modeling on Penn Treebank and WikiText-2. The learned dropout patterns also transfers to different tasks and datasets, such as from language model on Penn Treebank to Engligh-French translation on WMT 2014. Our code will be available.",Transformer-XL + AutoDropout (WT2),Unreleased,,,2024-11-01 14:03:44+00:00,"United States of America,United States of America",,,,,,,,,
Subformer (122M),Language,"National Institute of Advanced Industrial Science and Technology (AIST),The University of Tokyo","Academia,Academia","Machel Reid, Edison Marrese-Taylor, Yutaka Matsuo",2021-01-01,Subformer: Exploring Weight Sharing for Parameter Efficiency in Generative Transformers,https://arxiv.org/abs/2101.00234,45.0,,,122000000.0,,5.3e+18,,,,WikiText-103,,,,70.29,,,,,,"Transformers have shown improved performance when compared to previous architectures for sequence processing such as RNNs. Despite their sizeable performance gains, as recently suggested, the model is computationally expensive to train and with a high parameter budget. In light of this, we explore parameter-sharing methods in Transformers with a specific focus on generative models. We perform an analysis of different parameter sharing/reduction methods and develop the Subformer. Our model combines sandwich-style parameter sharing, which overcomes naive cross-layer parameter sharing in generative models, and self-attentive embedding factorization (SAFE). Experiments on machine translation, abstractive summarization and language modeling show that the Subformer can outperform the Transformer even when using significantly fewer parameters.",Subformer (122M),Unreleased,,,2024-11-01 14:03:45+00:00,"Japan,Japan",,,,,,,,,
AraGPT2-Mega,Language,American University of Beirut,Academia,"W Antoun, F Baly, H Hajj",2020-12-31,AraGPT2: Pre-Trained Transformer for Arabic Language Generation,https://arxiv.org/abs/2012.15520,86.0,,,1500000000.0,"source: https://lair.lighton.ai/akronomicon/

archived: https://github.com/lightonai/akronomicon/tree/main/akrodb",2e+21,,,"source: https://github.com/lightonai/akronomicon/blob/10adaca9c74afa7d11f196947e410d248f25abe9/akrodb/American%20University%20of%20Beirut/AraGPT2-Mega.json

Akronomicon uses units of petaflop/s-days. 20 petaflop/s-days ~= 2e21 FLOP.

Our own validation of this estimate is below.

For the Mega model: 9 days on a TPUv3-128, bfloat16 precision  (from author communication)

A TPUv3-128 has 128 cores (you can infer this from footnote 9 on p.4 of the paper - 128 * 16GB = 2TB). TPUv3 has 2 cores per chip. So 64 chips.

TPUv3 FLOP/s: 1.23E+14

Utilization: use default value of 30% for Language domain (https://epoch.ai/blog/estimating-training-compute)

64 chips * 30% * 1.23E+14 FLOP/s * 9 days * 24h/day * 3600s/h
~= 2e21 FLOP",,,8800000000.0,"""The total dataset size is 77GB with 8.8B words [word count was done after preprocessing, where a white
space is inserted before and after punctuations, brackets, numbers... which increased the total word count]""",,,,,,Self-supervised learning,"Recently, pre-trained transformer-based architectures have proven to be very efficient at language modeling and understanding, given that they are trained on a large enough corpus. Applications in language generation for Arabic are still lagging in comparison to other NLP advances primarily due to the lack of advanced Arabic language generation models. In this paper, we develop the first advanced Arabic language generation model, AraGPT2, trained from scratch on a large Arabic corpus of internet text and news articles. Our largest model, AraGPT2-mega, has 1.46 billion parameters, which makes it the largest Arabic language model available. The Mega model was evaluated and showed success on different tasks including synthetic news generation, and zero-shot question answering. For text generation, our best model achieves a perplexity of 29.8 on held-out Wikipedia articles. A study conducted with human evaluators showed the significant success of AraGPT2-mega in generating news articles that are difficult to distinguish from articles written by humans. We thus develop and release an automatic discriminator model with a 98% percent accuracy in detecting model-generated text. The models are also publicly available, hoping to encourage new research directions and applications for Arabic NLP.",,Open weights (unrestricted),,,2025-02-17 19:50:35+00:00,Lebanon,,,,,,,,,
Shortformer,Language,"University of Washington,Facebook AI Research,Allen Institute for AI","Academia,Industry,Research collective","Ofir Press, Noah A. Smith, Mike Lewis",2020-12-31,Shortformer: Better Language Modeling using Shorter Inputs,https://arxiv.org/abs/2012.15832,81.0,,,24000000.0,,3.04e+18,,,,WikiText-103,,,,205.0,,,,,,"Increasing the input length has been a driver of progress in language modeling with transformers. We identify conditions where shorter inputs are not harmful, and achieve perplexity and efficiency improvements through two new methods that decrease input length. First, we show that initially training a model on short subsequences before moving on to longer ones both reduces overall training time and, surprisingly, substantially improves perplexity. Second, we show how to improve the efficiency of recurrence methods in transformers, which let models condition on previously processed tokens when generating sequences that exceed the maximal length the transformer can handle at once. Existing methods require computationally expensive relative position embeddings; we introduce a simple alternative of adding absolute position embeddings to queries and keys instead of to word embeddings, which efficiently produces superior results. We show that these recurrent models also benefit from short input lengths. Combining these techniques speeds up training by a factor of 1.65, reduces memory usage, and substantially improves perplexity on WikiText-103, without adding any parameters.",Shortformer,Unreleased,,,2024-11-01 14:03:45+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
ERNIE-Doc (247M),Language,Baidu,Industry,"Siyu Ding, Junyuan Shang, Shuohuan Wang, Yu Sun, Hao Tian, Hua Wu, Haifeng Wang",2020-12-31,ERNIE-Doc: A Retrospective Long-Document Modeling Transformer,https://arxiv.org/abs/2012.15688,47.0,SOTA improvement,"""ERNIE-DOC improved the state-of-the-art language modeling result of perplexity to 16.8 on WikiText103""",247000000.00000003,,2.91e+19,,,,WikiText-103,,,,190.88,,,,,,"Transformers are not suited for processing long documents, due to their quadratically increasing memory and time consumption. Simply truncating a long document or applying the sparse attention mechanism will incur the context fragmentation problem or lead to an inferior modeling capability against comparable model sizes. In this paper, we propose ERNIE-Doc, a document-level language pretraining model based on Recurrence Transformers. Two well-designed techniques, namely the retrospective feed mechanism and the enhanced recurrence mechanism, enable ERNIE-Doc, which has a much longer effective context length, to capture the contextual information of a complete document. We pretrain ERNIE-Doc to explicitly learn the relationships among segments with an additional document-aware segment-reordering objective. Various experiments were conducted on both English and Chinese document-level tasks. ERNIE-Doc improved the state-of-the-art language modeling result of perplexity to 16.8 on WikiText-103. Moreover, it outperformed competitive pretraining models by a large margin on most language understanding tasks, such as text classification and question answering.",ERNIE-Doc (247M),Open weights (unrestricted),,,2024-11-01 14:03:46+00:00,China,,,,,,,,,
CT-MoS (WT2),Language,"Google,National Tsing Hua University","Industry,Academia","Pei-Hsin Wang, Sheng-Iou Hsieh, Shih-Chieh Chang, Yu-Ting Chen, Jia-Yu Pan, Wei Wei, Da-Chang Juan",2020-12-25,Contextual Temperature for Language Modeling,https://arxiv.org/abs/2012.13575,17.0,SOTA improvement,"""Experimental results confirm that the
proposed method significantly improves state-of-the-art language models, achieving a perplexity of 55.31 and 62.89 on
the test set of Penn Treebank and WikiText-2""",45000000.0,,5.62e+17,,,,WikiText-2,,,,1000.0,,,,,,"Temperature scaling has been widely used as an effective approach to control the smoothness of a distribution, which helps the model performance in various tasks. Current practices to apply temperature scaling assume either a fixed, or a manually-crafted dynamically changing schedule. However, our studies indicate that the individual optimal trajectory for each class can change with the context. To this end, we propose contextual temperature, a generalized approach that learns an optimal temperature trajectory for each vocabulary over the context. Experimental results confirm that the proposed method significantly improves state-of-the-art language models, achieving a perplexity of 55.31 and 62.89 on the test set of Penn Treebank and WikiText-2, respectively. In-depth analyses show that the behaviour of the learned temperature schedules varies dramatically by vocabulary, and that the optimal schedules help in controlling the uncertainties. These evidences further justify the need for the proposed method and its advantages over fixed temperature schedules.",CT-MoS (WT2),Unreleased,,,2024-11-01 14:03:44+00:00,"United States of America,Taiwan",,,,,,,,,
CT-MoS + DynamicEval (WT2),Language,"National Tsing Hua University,Google","Academia,Industry","Pei-Hsin Wang, Sheng-Iou Hsieh, Shih-Chieh Chang, Yu-Ting Chen, Jia-Yu Pan, Wei Wei, Da-Chang Juan",2020-12-25,Contextual Temperature for Language Modeling,https://arxiv.org/abs/2012.13575,17.0,,"other model in the paper (without DynamicEval) was better, per Table 2",45000000.0,,5.62e+17,,,,WikiText-2,,,,1000.0,,,,,,"Temperature scaling has been widely used as an effective approach to control the smoothness of a distribution, which helps the model performance in various tasks. Current practices to apply temperature scaling assume either a fixed, or a manually-crafted dynamically changing schedule. However, our studies indicate that the individual optimal trajectory for each class can change with the context. To this end, we propose contextual temperature, a generalized approach that learns an optimal temperature trajectory for each vocabulary over the context. Experimental results confirm that the proposed method significantly improves state-of-the-art language models, achieving a perplexity of 55.31 and 62.89 on the test set of Penn Treebank and WikiText-2, respectively. In-depth analyses show that the behaviour of the learned temperature schedules varies dramatically by vocabulary, and that the optimal schedules help in controlling the uncertainties. These evidences further justify the need for the proposed method and its advantages over fixed temperature schedules.",CT-MoS + DynamicEval (WT2),Unreleased,,,2024-11-01 14:03:44+00:00,"Taiwan,United States of America",,,,,,,,,
DensePhrases,Language,"Korea University,Princeton University","Academia,Academia","Jinhyuk Lee, Mujeen Sung, Jaewoo Kang, Danqi Chen",2020-12-23,Learning Dense Representations of Phrases at Scale,https://arxiv.org/abs/2012.12624v3,108.0,SOTA improvement,"from abstract ""our model DensePhrases improves over previous phrase retrieval models by 15%-25% absolute accuracy and matches the performance of state-of-the-art retriever-reader models. """,,may be possible to estimate from batch size (8) and maximum memory of GPUs (96GB),2.09952e+18,,," flops = (8) * (1215 * 10**10) * (20 * 3600) * 3 // 10 = 2099520000000000000
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

model of GPU from appendix B (Titan Xp)
number of GPUs from table in appendix A
flops from https://www.techpowerup.com/gpu-specs/titan-xp.c2948","SQuAD,NQ (Natural Questions)","from appendix D ""The number of generated questions is 327,302 and 1,126,354 for SQuAD and Natural Questions, respectively.""",58000000.0,"from appendix D ""The number of generated questions is 327,302 and 1,126,354 for SQuAD and Natural Questions, respectively.""
assuming 40 words per question we get around ~ 58M",4.0,20.0,appendix A row 3,NVIDIA TITAN Xp,8.0,,"Open-domain question answering can be reformulated as a phrase retrieval problem, without the need for processing documents on-demand during inference (Seo et al., 2019). However, current phrase retrieval models heavily depend on sparse representations and still underperform retriever-reader approaches. In this work, we show for the first time that we can learn dense representations of phrases alone that achieve much stronger performance in open-domain QA. We present an effective method to learn phrase representations from the supervision of reading comprehension tasks, coupled with novel negative sampling methods. We also propose a query-side fine-tuning strategy, which can support transfer learning and reduce the discrepancy between training and inference. On five popular open-domain QA datasets, our model DensePhrases improves over previous phrase retrieval models by 15%-25% absolute accuracy and matches the performance of state-of-the-art retriever-reader models. Our model is easy to parallelize due to pure dense representations and processes more than 10 questions per second on CPUs. Finally, we directly use our pre-indexed dense phrase representations for two slot filling tasks, showing the promise of utilizing DensePhrases as a dense knowledge base for downstream tasks. ",,Open weights (unrestricted),,Speculative,2025-02-17 19:50:22+00:00,"Korea (Republic of),United States of America",,,,,,,,,
RaSoR,Language,"Korea University,Princeton University","Academia,Academia","Jinhyuk Lee, Mujeen Sung, Jaewoo Kang, Danqi Chen",2020-12-23,Learning Recurrent Span Representations for Extractive Question Answering,https://arxiv.org/abs/1611.01436,149.0,,,,May be estimated from author's repository https://github.com/shimisalant/RaSoR,,,,"May be estimated from author's repository https://github.com/shimisalant/RaSoR
citation from the paper about training machine ""All models are implemented using TensorFlow3 and trained on the SQUAD training set using the ADAM (Kingma & Ba, 2015) optimizer with a mini-batch size of 4 and trained using 10 asynchronous training threads on a single machine""",SQuAD,"from section 5 ""We train on the 80k (question, passage, answer span) triples in the SQUAD training set and report results on the 10k examples in the SQUAD development and test sets.""",5333333.0,"4000000 words in SQuAD * 4/3 tokens per word = 5,333,333 tokens",,,,,,,"Open-domain question answering can be reformulated as a phrase retrieval problem, without the need for processing documents on-demand during inference (Seo et al., 2019). However, current phrase retrieval models heavily depend on sparse representations and still underperform retriever-reader approaches. In this work, we show for the first time that we can learn dense representations of phrases alone that achieve much stronger performance in open-domain QA. We present an effective method to learn phrase representations from the supervision of reading comprehension tasks, coupled with novel negative sampling methods. We also propose a query-side fine-tuning strategy, which can support transfer learning and reduce the discrepancy between training and inference. On five popular open-domain QA datasets, our model DensePhrases improves over previous phrase retrieval models by 15%-25% absolute accuracy and matches the performance of state-of-the-art retriever-reader models. Our model is easy to parallelize due to pure dense representations and processes more than 10 questions per second on CPUs. Finally, we directly use our pre-indexed dense phrase representations for two slot filling tasks, showing the promise of utilizing DensePhrases as a dense knowledge base for downstream tasks.",,,,Confident,2024-10-01 14:00:56+00:00,"Korea (Republic of),United States of America",,,,,,,,,
VQGAN + CLIP,Image generation,Heidelberg University,Academia,"Patrick Esser, Robin Rombach, Björn Ommer",2020-12-17,Taming Transformers for High-Resolution Image Synthesis,https://arxiv.org/abs/2012.09841,2200.0,"Highly cited,SOTA improvement",,,,,,,,,,,I'm confused - I guess they pretrained on several different datasets? I think the model is also able to do zero-shot learning,,,,,,,"Designed to learn long-range interactions on sequential data, transformers continue to show state-of-the-art results on a wide variety of tasks. In contrast to CNNs, they contain no inductive bias that prioritizes local interactions. This makes them expressive, but also computationally infeasible for long sequences, such as high-resolution images. We demonstrate how combining the effectiveness of the inductive bias of CNNs with the expressivity of transformers enables them to model and thereby synthesize high-resolution images. We show how to (i) use CNNs to learn a context-rich vocabulary of image constituents, and in turn (ii) utilize transformers to efficiently model their composition within high-resolution images. Our approach is readily applied to conditional synthesis tasks, where both non-spatial information, such as object classes, and spatial information, such as segmentations, can control the generated image. In particular, we present the first results on semantically-guided synthesis of megapixel images with transformers and obtain the state of the art among autoregressive models on class-conditional ImageNet. Code and pretrained models can be found at this https URL .",,,,Unknown,2025-02-03 19:06:40+00:00,Germany,,,,,,,,,
ESM1b,Biology,"Facebook AI Research,New York University (NYU)","Industry,Academia","Alexander Rives, Joshua Meier, Tom Sercu, Siddharth Goyal, Zeming Lin, Jason Liu, Demi Guo, Myle Ott, C. Lawrence Zitnick, Jerry Ma, and Rob Fergus",2020-12-15,Biological structure and function emerge from scaling unsupervised learning to 250 million protein sequences,https://www.pnas.org/doi/abs/10.1073/pnas.2016239118,1676.0,"Highly cited,SOTA improvement","""We apply the representations to a range of prediction tasks and find that they improve state-of-art features across the applications.""",652400000.0,See Table 9,5.1e+21,,,"Information: 
128 NVIDIA V100 GPUs [Pre-training details]
8.5 hours on 64 GPUs per epoch, 56 epochs of UR50/S [Appendix B, ESM-1b Hyperparameter optimization, Experimental set-up]
128 NVIDIA V100 GPU, assuming  V100 PCIe half precision 130 TFLOPS and 0.3 utilization rate

Estimate: (8.5*56*3600) s * 1.3e14 FLOP/s * 0.3 *64 = 4.277e21 FLOP

6NC method:
UR50/S has 27.1M sequences, which are capped at 1024 amino acids. 
27.1M * 1024 * 56 * 652.4M * 6 = 6.08e21 FLOP

Geometric mean: 5.1e21",UniRef50,"In our experiments, we explore datasets withup to 250 million sequences of the UniParc database (33), whichhas 86 billion amino acids.",,,56.0,,,NVIDIA V100,128.0,,"In the field of artificial intelligence, a combination of scale in data and model capacity enabled by unsupervised learning has led to major advances in representation learning and statistical generation. In the life sciences, the anticipated growth of sequencing promises unprecedented data on natural sequence diversity. Protein language modeling at the scale of evolution is a logical step toward predictive and generative artificial intelligence for biology. To this end, we use unsupervised learning to train a deep contextual language model on 86 billion amino acids across 250 million protein sequences spanning evolutionary diversity. The resulting model contains information about biological properties in its representations. The representations are learned from sequence data alone. The learned representation space has a multiscale organization
reflecting structure from the level of biochemical properties of amino acids to remote homology of proteins. Information about secondary and tertiary structure is encoded in the representations and can be identified by linear projections. Representation learning
produces features that generalize across a range of applications, enabling state-of-the-art supervised prediction of mutational effect and secondary structure and improving state-of-the-art features for long-range contact prediction.",,Open weights (unrestricted),,Confident,2025-02-17 19:50:12+00:00,"United States of America,United States of America",,,,,,,,,
RoBERTa (modified),Biology,"IBM Research,ETH Zurich","Industry,Academia","Modestas Filipavicius, Matteo Manica, Joris Cadow, Maria Rodriguez Martinez",2020-12-05,Pre-training Protein Language Models with Label-Agnostic Binding Pairs Enhances Performance in Downstream Tasks,https://arxiv.org/abs/2012.03084,19.0,,,,,2.200000000000002e+18,,,"1. Hardware: 4x NVIDIA Tesla P100 SXM2 GPUs (18.7 TFLOP/s per GPU in FP16)
2. Training duration: Not provided
3. Utilization rate: Not explicitly mentioned
4. Calculation: 
   - FLOPs per token = 6 * 93M params = 5.58e8
   - Total tokens = 10M sequences * 400 tokens = 4e9
   - Total FLOPs = 5.58e8 * 4e9 = 2.232e18 FLOPs",,,19000000001.0001,"Total Sequences = STRING (6.67M) + SwissProt (0.504M) + Pfam (31M) = 38.17M sequences
Average tokens per sequence = 500
Total tokens = 38.17M × 500 = 19,085,000,000 ≈ 1.9 × 10^10 tokens",,,,,,,"Less than 1% of protein sequences are structurally and functionally annotated. Natural Language Processing (NLP) community has recently embraced self-supervised learning as a powerful approach to learn representations from unlabeled text, in large part due to the attention-based context-aware Transformer models. In this work we present a modification to the RoBERTa model by inputting during pre-training a mixture of binding and non-binding protein sequences (from STRING database). However, the sequence pairs have no label to indicate their binding status, as the model relies solely on Masked Language Modeling (MLM) objective during pre-training. After fine-tuning, such approach surpasses models trained on single protein sequences for protein-protein binding prediction, TCR-epitope binding prediction, cellular-localization and remote homology classification tasks. We suggest that the Transformer's attention mechanism contributes to protein binding site discovery. Furthermore, we compress protein sequences by 64% with the Byte Pair Encoding (BPE) vocabulary consisting of 10K subwords, each around 3-4 amino acids long. Finally, to expand the model input space to even larger proteins and multi-protein assemblies, we pre-train Longformer models that support 2,048 tokens. Further work in token-level classification for secondary structure prediction is needed. Code available at: this https URL",,,,Unverified,2025-02-17 17:03:46+00:00,"United States of America,Multinational,Switzerland",,,,,,,,,
CPM-Large,Language,"Tsinghua University,Beijing Academy of Artificial Intelligence / BAAI","Academia,Academia","Z Zhang, X Han, H Zhou, P Ke, Y Gu, D Ye, Y Qin, Y Su",2020-12-01,CPM: A Large-scale Generative Chinese Pre-trained Language Model,https://arxiv.org/abs/2012.00413,105.0,SOTA improvement,"""CPM outperforms CDial-GPT with a large margin in the few-shot experiment, showing the generalization ability of our model.""",2600000000.0,"""To the best of our knowledge, CPM, with 2.6 billion parameters and 100GB Chinese training data, is the largest Chinese pre-trained language mode""",1.8e+21,,,"source: https://lair.lighton.ai/akronomicon/

archived: https://github.com/lightonai/akronomicon/tree/main/akrodb",Unspecified unreleased,"we construct a new sub-word vocabulary, containing both words and characters.",16700000000.0,"""language model, with 2.6 billion parameters and 100GB Chinese training data.""

We use the conversion factor 1GB ~ 167M words",,336.0,"""It takes two weeks to train our largest model using 64 NVIDIA V100.""",NVIDIA V100,64.0,Self-supervised learning,"Pre-trained Language Models (PLMs) have proven to be beneficial for various downstream NLP tasks. Recently, GPT-3, with 175 billion parameters and 570GB training data, drew a lot of attention due to the capacity of few-shot (even zero-shot) learning. However, applying GPT-3 to address Chinese NLP tasks is still challenging, as the training corpus of GPT-3 is primarily English, and the parameters are not publicly available. In this technical report, we release the Chinese Pre-trained Language Model (CPM) with generative pre-training on large-scale Chinese training data. To the best of our knowledge, CPM, with 2.6 billion parameters and 100GB Chinese training data, is the largest Chinese pre-trained language model, which could facilitate several downstream Chinese NLP tasks, such as conversation, essay generation, cloze test, and language understanding. Extensive experiments demonstrate that CPM achieves strong performance on many NLP tasks in the settings of few-shot (even zero-shot) learning. The code and parameters are available at this https URL.",,Open weights (unrestricted),,,2025-02-17 19:50:00+00:00,"China,China",,,,,,,,,
Profile Prediction,Biology,"University of Washington,Salesforce Research","Academia,Industry","Pascal Sturmfels, Jesse Vig, Ali Madani, Nazneen Fatema Rajani",2020-12-01,Profile Prediction: An Alignment-Based Pre-Training Task for Protein Sequence Models,https://arxiv.org/abs/2012.00195,21.0,,,,,4.9999999999999993e+20,,,"1. Hardware setup: 8x NVIDIA Tesla V100 GPUs (130 TFLOP/s each)

2. Training duration: 2 weeks (1.2e+6 seconds) - directly provided

3. Utilization rate: 40%

4. Final calculation:
   8 GPUs × 1.30e+14 FLOP/s × 1.2e+6 seconds × 0.4 utilization = 5.0e+20 FLOPs",,,8000000001.000044,"32 million sequences × 250 residues/sequence = 8 billion data points
[32 × 10^6 × 250 = 8 × 10^9]",,,,,,,"For protein sequence datasets, unlabeled data has greatly outpaced labeled data due to the high cost of wet-lab characterization. Recent deep-learning approaches to protein prediction have shown that pre-training on unlabeled data can yield useful representations for downstream tasks. However, the optimal pre-training strategy remains an open question. Instead of strictly borrowing from natural language processing (NLP) in the form of masked or autoregressive language modeling, we introduce a new pre-training task: directly predicting protein profiles derived from multiple sequence alignments. Using a set of five, standardized downstream tasks for protein models, we demonstrate that our pre-training task along with a multi-task objective outperforms masked language modeling alone on all five tasks. Our results suggest that protein sequence models may benefit from leveraging biologically-inspired inductive biases that go beyond existing language modeling techniques in NLP.",,,,Unverified,2025-02-17 17:04:07+00:00,"United States of America,United States of America",,,,,,,,,
AlphaFold 2,Biology,DeepMind,Industry,"John Jumper, Richard Evans, Alexander Pritzel, Tim Green, Michael Figurnov, Kathryn Tunyasuvunakool, Olaf Ronneberger, Russ Bates, Augustin Žídek, Alex Bridgland, Clemens Meyer, Simon A A Kohl, Anna Potapenko, Andrew J Ballard, Andrew Cowie, Bernardino Romera-Paredes, Stanislav Nikolov, Rishub Jain, Jonas Adler, Trevor Back, Stig Petersen, David Reiman, Martin Steinegger, Michalina Pacholska, David Silver, Oriol Vinyals, Andrew W Senior, Koray Kavukcuoglu, Pushmeet Kohli, Demis Hassabis.",2020-11-30,Highly accurate protein structure prediction with AlphaFold,https://www.nature.com/articles/s41586-021-03819-2,21186.0,"Historical significance,Highly cited","""Here we provide the first computational method that can regularly predict protein structures with atomic accuracy even in cases in which no similar structure is known"" [Abstract]

>17790 citations",93000000.0,"https://arxiv.org/abs/2207.05477 reimplements AlphaFold 2 in a more efficient way, and states there are 93M parameters in the original version (Table 1)",2.99e+21,,,"123 teraFLOPS / TPU v3 chip * 128 cores * (1 chip / 2 cores) * 11 days * 40% utilization = 2.99e21 FLOP
https://www.wolframalpha.com/input?i=123+teraFLOPS+*+128+*+11+days+*+0.4

""Training regimen"" section: 
""We train the model on Tensor Processing Unit (TPU) v3 with a batch size of 1 per TPU core, hence the model uses 128 TPU v3 cores. [...] The initial training stage takes approximately 1 week, and the fine-tuning stage takes approximately 4 additional days.""","PDB (Protein Data Bank),UniRef30 (FKA UniClust30),UniRef90,MGnify,BFD (Big Fantastic Dataset),UniProtKB","""Inputs and data sources"" section:
""The following versions of public datasets were used in this study. Our models were trained on a copy of the PDB downloaded on 28 August 2019. For finding template structures at prediction time, we used a copy of the PDB downloaded on 14 May 2020, and the PDB70 clustering database downloaded on 13 May 2020. For MSA lookup at both training and prediction time, we used Uniref90 v.2020_01, BFD, Uniclust30 v.2018_08 and MGnify v.2018_12. For sequence distillation, we used Uniclust30 v.2018_08 to construct a distillation structure dataset. Full details are provided in Supplementary Methods 1.2.""

AlphaFold needs multiple genetic (sequence) databases to run:

BFD,
MGnify,
PDB70,
PDB (structures in the mmCIF format),
PDB seqres – only for AlphaFold-Multimer,
UniRef30 (FKA UniClust30),
UniProt – only for AlphaFold-Multimer,
UniRef90",530000.0,"3 different types of input data to the network:
(1) Amino acid sequence
(2) Multiple sequence alignments (MSA) to sequences from evolutionarily related proteins
(3) Template structures (3D atom coordinates of homologous structures), where available

Training data is processed into the following two datasets that are sampled with different probabilities. 
Supplementary Material, Section 1.2.4. Training data:
""With 75% probability a training example comes from the self-distillation set (see subsection 1.3) and with 25% probability the training example is a known structure from the Protein Data Bank""

Supplementary Material, Section 1.3 Self-distillation dataset:
""This gives a final dataset of 355,993 sequences"". An initial model was used to predict structures for these sequences.

PDB dataset size in 2020: https://www.rcsb.org/stats/growth/growth-released-structures
172788

Therefore, estimate for number of protein structures available for training (for which amino acid sequence, MSA and homologue template info is also available as input to network): 528781 [~530k]",,264.0,7 days pretrain and 4 days finetune,Google TPU v3,,,"Proteins are essential to life, and understanding their structure can facilitate a mechanistic understanding of their function. Through an enormous experimental effort, the structures of around 100,000 unique proteins have been determined, but this represents a small fraction of the billions of known protein sequences. Structural coverage is bottlenecked by the months to years of painstaking effort required to determine a single protein structure. Accurate computational approaches are needed to address this gap and to enable large-scale structural bioinformatics. Predicting the three-dimensional structure that a protein will adopt based solely on its amino acid sequence—the structure prediction component of the ‘protein folding problem’—has been an important open research problem for more than 50 years. Despite recent progress, existing methods fall far short of atomic accuracy, especially when no homologous structure is available. Here we provide the first computational method that can regularly predict protein structures with atomic accuracy even in cases in which no similar structure is known. We validated an entirely redesigned version of our neural network-based model, AlphaFold, in the challenging 14th Critical Assessment of protein Structure Prediction (CASP14), demonstrating accuracy competitive with experimental structures in a majority of cases and greatly outperforming other methods. Underpinning the latest version of AlphaFold is a novel machine learning approach that incorporates physical and biological knowledge about protein structure, leveraging multi-sequence alignments, into the design of the deep learning algorithm.",,Open weights (unrestricted),,Likely,2024-11-11 22:40:36+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
KEPLER,Language,"Tsinghua University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),HEC,CIFAR AI Research,Princeton University,University of Montreal / Université de Montréal","Academia,Academia,Academia,Research collective,Academia,Academia","Xiaozhi Wang, Tianyu Gao, Zhaocheng Zhu, Zhiyuan Liu, Juanzi Li, and Jian Tang.",2020-11-23,KEPLER: A Unified Model for Knowledge Embedding and Pre- trained Language Representation.,https://arxiv.org/abs/1911.06136,568.0,SOTA improvement,"""Experimental results show that KEPLER achieves state-of-the-art performances
on various NLP tasks""",125000000.0,,1.24e+20,,,"From author communication

""About 128 GPU-days using Nvidia V100 (16GB). ""

precision: float16

V100 GPU for float16: 28000000000000 (2.8E+13)

0.4 * 28TFLOP/s * 128 GPU-days * 24h/day * 3600s/h
= 1.24E+20


","Wikipedia,BookCorpus (BooksCorpus, Toronto Book Corpus),Wikidata5M","From author communication

    For the language modeling objective, we use Wikipedia+BookCorpus datasets (about 13GB).    For the knowledge embedding objective, we use Wikidata5m (about 1GB).",3300000000.0,"For BookCorpus + English Wikipedia: 800M + 2500M

For Wikidata5M: 20614279
See table 1. Contains ""entities"", ""relations"", and ""triplets""",,,,,,Self-supervised learning,"Pre-trained language representation models (PLMs) cannot well capture factual knowledge from text. In contrast, knowledge embedding (KE) methods can effectively represent the relational facts in knowledge graphs (KGs) with informative entity embeddings, but conventional KE models cannot take full advantage of the abundant textual information. In this paper, we propose a unified model for Knowledge Embedding and Pre-trained LanguagE Representation (KEPLER), which can not only better integrate factual knowledge into PLMs but also produce effective text-enhanced KE with the strong PLMs. In KEPLER, we encode textual entity descriptions with a PLM as their embeddings, and then jointly optimize the KE and language modeling objectives. Experimental results show that KEPLER achieves state-of-the-art performances on various NLP tasks, and also works remarkably well as an inductive KE model on KG link prediction. Furthermore, for pre-training and evaluating KEPLER, we construct Wikidata5M, a large-scale KG dataset with aligned entity descriptions, and benchmark state-of-the-art KE methods on it. It shall serve as a new KE benchmark and facilitate the research on large KG, inductive KE, and KG with text. The source code can be obtained from this https URL.",,Unreleased,,,2025-02-17 17:04:14+00:00,"China,Canada,France,Canada,United States of America,Canada",,,,,,,,,
AWD-FWM (WT2),Language,"IDSIA,Microsoft Research","Academia,Industry","Imanol Schlag, Tsendsuren Munkhdalai, Jürgen Schmidhuber",2020-11-16,Learning Associative Inference Using Fast Weight Memory,https://arxiv.org/abs/2011.07831,35.0,,,37000000.0,,7.39e+17,,,,WikiText-2,,,,1600.0,,,,,,"Humans can quickly associate stimuli to solve problems in novel contexts. Our novel neural network model learns state representations of facts that can be composed to perform such associative inference. To this end, we augment the LSTM model with an associative memory, dubbed Fast Weight Memory (FWM). Through differentiable operations at every step of a given input sequence, the LSTM updates and maintains compositional associations stored in the rapidly changing FWM weights. Our model is trained end-to-end by gradient descent and yields excellent performance on compositional language reasoning problems, meta-reinforcement-learning for POMDPs, and small-scale word-level language modelling.",AWD-FWM (WT2),Unreleased,,,2024-11-01 14:03:44+00:00,"Switzerland,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Machine learning a model for RNA structure prediction,Biology,"International School for Advanced Studies,Institute of Structural Biology,Technical University of Munich","Academia,Academia,Academia","Nicola Calonaci, Alisha Jones, Francesca Cuturello, Michael Sattler, Giovanni Bussi",2020-11-16,Machine learning a model for RNA structure prediction ,https://academic.oup.com/nargab/article/2/4/lqaa090/5983421,32.0,,,,,1.799999999999987e+18,,,"1. Hardware setup: 
576 CPUs (288 nodes × 2 CPUs/node), Intel Xeon E5-2683 v4
FLOP/s per CPU: 2.688 × 10¹¹ FLOP/s
Total system: 1.548288 × 10¹⁴ FLOP/s

2. Training duration: 
Directly provided: 8 hours = 28,800 seconds

3. Utilization rate: 
40% (0.4)

4. Final calculation:
1.548288 × 10¹⁴ FLOP/s × 28,800s × 0.4 = 1.78 × 10¹⁸ FLOPs",,,4000.9999999999977,"(52 + 388) / 2 = 220 nucleotides per RNA
18 RNA molecules × 220 nucleotides = 3,960 datapoints
Rounded to: 4,000 datapoints",,,,,,,"RNA function crucially depends on its structure. Thermodynamic models currently used for secondary structure prediction rely on computing the partition function of folding ensembles, and can thus estimate minimum free-energy structures and ensemble populations. These models sometimes fail in identifying native structures unless complemented by auxiliary experimental data. Here, we build a set of models that combine thermodynamic parameters, chemical probing data (DMS and SHAPE) and co-evolutionary data (direct coupling analysis) through a network that outputs perturbations to the ensemble free energy. Perturbations are trained to increase the ensemble populations of a representative set of known native RNA structures. In the chemical probing nodes of the network, a convolutional window combines neighboring reactivities, enlightening their structural information content and the contribution of local conformational ensembles. Regularization is used to limit overfitting and improve transferability. The most transferable model is selected through a cross-validation strategy that estimates the performance of models on systems on which they are not trained. With the selected model we obtain increased ensemble populations for native structures and more accurate predictions in an independent validation set. The flexibility of the approach allows the model to be easily retrained and adapted to incorporate arbitrary experimental information.",,,,Unverified,2025-02-17 17:04:21+00:00,"Italy,Germany,Germany",,,,,,,,,
CPCProt,Biology,University of Toronto,Academia,"Amy X. Lu, Haoran Zhang, Marzyeh Ghassemi, Alan Moses",2020-11-10,Self-Supervised Contrastive Learning of Protein Representations By Mutual Information Maximization,https://www.biorxiv.org/content/10.1101/2020.09.04.283929v2.abstract,95.0,,,,,,,,,,,,,,,,,,,"Pretrained embedding representations of biological sequences which capture meaningful properties can alleviate many problems associated with supervised learning in biology. We apply the principle of mutual information maximization between local and global information as a self-supervised pretraining signal for protein embeddings. To do so, we divide protein sequences into fixed size fragments, and train an autoregressive model to distinguish between subsequent fragments from the same protein and fragments from random proteins. Our model, CPCProt, achieves comparable performance to state-of-the-art self-supervised models for protein sequence embeddings on various downstream tasks, but reduces the number of parameters down to 2% to 10% of benchmarked models. Further, we explore how downstream assessment protocols affect embedding evaluation, and the effect of contrastive learning hyperparameters on empirical performance. We hope that these results will inform the development of contrastive learning methods in protein biology and other modalities.",,,,Unverified,2024-10-22 14:18:38+00:00,Canada,,,,,,,,,
SimCLRv2,Vision,Google Brain,Industry,"Ting Chen, Simon Kornblith, Kevin Swersky, Mohammad Norouzi, and Geoffrey Hinton",2020-10-26,Big self- supervised models are strong semi-supervised learners.,https://arxiv.org/abs/2006.10029,2043.0,Highly cited,,795000000.0,"From author communication

We trained different model sizes (from 24M to 795M), and they're summarized in Table 1 of the paper (https://arxiv.org/pdf/2006.10029.pdf).",,,,,,,1280000.0,,,,,,,,"One paradigm for learning from few labeled examples while making best use of a large amount of unlabeled data is unsupervised pretraining followed by supervised fine-tuning. Although this paradigm uses unlabeled data in a task-agnostic way, in contrast to common approaches to semi-supervised learning for computer vision, we show that it is surprisingly effective for semi-supervised learning on ImageNet. A key ingredient of our approach is the use of big (deep and wide) networks during pretraining and fine-tuning. We find that, the fewer the labels, the more this approach (task-agnostic use of unlabeled data) benefits from a bigger network. After fine-tuning, the big network can be further improved and distilled into a much smaller one with little loss in classification accuracy by using the unlabeled examples for a second time, but in a task-specific way. The proposed semi-supervised learning algorithm can be summarized in three steps: unsupervised pretraining of a big ResNet model using SimCLRv2, supervised fine-tuning on a few labeled examples, and distillation with unlabeled examples for refining and transferring the task-specific knowledge. This procedure achieves 73.9% ImageNet top-1 accuracy with just 1% of the labels (≤13 labeled images per class) using ResNet-50, a 10× improvement in label efficiency over the previous state-of-the-art. With 10% of labels, ResNet-50 trained with our method achieves 77.5% top-1 accuracy, outperforming standard supervised training with all of the labels.",,,,,2024-11-01 14:03:44+00:00,United States of America,,,,,,,,,
HiPPO-LegS,Vision,"Stanford University,University at Buffalo","Academia,Academia","Albert Gu, Tri Dao, Stefano Ermon, Atri Rudra, Christopher Re",2020-10-23,HiPPO: Recurrent Memory with Optimal Polynomial Projections,https://arxiv.org/abs/2008.07669,,,,,,,,,,P-MNIST,,,,,,,NVIDIA P100,,,"A central problem in learning from sequential data is representing cumulative history in an incremental fashion as more data is processed. We introduce a general framework (HiPPO) for the online compression of continuous signals and discrete time series by projection onto polynomial bases. Given a measure that specifies the importance of each time step in the past, HiPPO produces an optimal solution to a natural online function approximation problem. As special cases, our framework yields a short derivation of the recent Legendre Memory Unit (LMU) from first principles, and generalizes the ubiquitous gating mechanism of recurrent neural networks such as GRUs. This formal framework yields a new memory update mechanism (HiPPO-LegS) that scales through time to remember all history, avoiding priors on the timescale. HiPPO-LegS enjoys the theoretical benefits of timescale robustness, fast updates, and bounded gradients. By incorporating the memory dynamics into recurrent neural networks, HiPPO RNNs can empirically capture complex temporal dependencies. On the benchmark permuted MNIST dataset, HiPPO-LegS sets a new state-of-the-art accuracy of 98.3%. Finally, on a novel trajectory classification task testing robustness to out-of-distribution timescales and missing data, HiPPO-LegS outperforms RNN and neural ODE baselines by 25-40% accuracy.",,Open weights (unrestricted),,Unknown,2025-01-03 16:49:47+00:00,"United States of America,United States of America",,,,,,,,,
ViT-Huge/14,Vision,"Google Brain,Google Research","Industry,Industry","Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby",2020-10-22,An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale,https://arxiv.org/abs/2010.11929,30079.0,Highly cited,,632000000.0,Table 1 https://arxiv.org/pdf/2010.11929.pdf,4.262e+21,,,"Table 6: 4.262e21 FLOPs

Agrees with Table 2 (2.5k TPUv3-core days), if MFU is around 0.32. 

2500 * 24 * 3600 * (0.5 * 1.23e14) * 0.32 = 4.25e21","ImageNet-1k,ImageNet21k,JFT-300M","To explore model scalability, we use the ILSVRC-2012 ImageNet dataset with 1k classes and 1.3M images (we refer to it as ImageNet in what follows), its superset ImageNet-21k with 21k classes and 14M images (Deng et al., 2009), and JFT (Sun et al., 2017) with 18k classes and 303M high-resolution images. ",1280000.0,,14.0,,,Google TPU v3,,,"While the Transformer architecture has become the de-facto standard for natural language processing tasks, its applications to computer vision remain limited. In vision, attention is either applied in conjunction with convolutional networks, or used to replace certain components of convolutional networks while keeping their overall structure in place. We show that this reliance on CNNs is not necessary and a pure transformer applied directly to sequences of image patches can perform very well on image classification tasks. When pre-trained on large amounts of data and transferred to multiple mid-sized or small image recognition benchmarks (ImageNet, CIFAR-100, VTAB, etc.), Vision Transformer (ViT) attains excellent results compared to state-of-the-art convolutional networks while requiring substantially fewer computational resources to train.",,Open weights (unrestricted),0.32,Confident,2024-11-15 14:29:39+00:00,"United States of America,Multinational,United States of America",,,,,,,,,
wave2vec 2.0 LARGE,Speech,Facebook,Industry,"Alexei Baevski, Henry Zhou, Abdelrahman Mohamed, Michael Auli",2020-10-22,wav2vec 2.0: A Framework for Self-Supervised Learning of Speech Representations,https://arxiv.org/abs/2006.11477,4623.0,"Highly cited,SOTA improvement","Arguably an ""important"" paper? 

Abstract: 
""We show for the first time that learning powerful representations from speech audio alone followed by fine-tuning on transcribed speech can outperform the best semi-supervised methods while being conceptually simpler.""",317000000.0,"Section 5.1:
""We consider two model sizes: BASE (95m parameters) and LARGE (317m parameters)
",1.9e+21,,,"From surveying the authors:

We trained the base model on 64 V100 GPUs for 400k updates. This takes about 3 days to complete. The large model is trained on 128 V100 GPUs for 1 million updates, and this takes about 7 days to complete.

V100 GPU peak: 125TFLOP/s (https://www.nvidia.com/en-gb/data-center/tesla-v100/)
Assume 40% utilization based on default for non-Language domain (https://epoch.ai/blog/estimating-training-compute)

64 GPUs * 40% * 125TFLOP/s * 7 days * 24h/day * 3600s/h
~= 1.9E+21 FLOP","LibriSpeech,LibriLight",,727776000.0,"pg 4, section 4.1

""As unlabeled data we consider the Librispeech corpus [40] without transcriptions containing 960 hours of audio (LS-960) or the audio data from LibriVox (LV-60k). For the latter we follow the preprocessing of [27] resulting in 53.2k hours of audio.""

53.2k h * 13,680 words/h = 727776000 words",,,,NVIDIA Tesla V100 DGXS 32 GB,,Self-supervised learning,"We show for the first time that learning powerful representations from speech audio alone followed by fine-tuning on transcribed speech can outperform the best semi-supervised methods while being conceptually simpler. wav2vec 2.0 masks the speech input in the latent space and solves a contrastive task defined over a quantization of the latent representations which are jointly learned. Experiments using all labeled data of Librispeech achieve 1.8/3.3 WER on the clean/other test sets. When lowering the amount of labeled data to one hour, wav2vec 2.0 outperforms the previous state of the art on the 100 hour subset while using 100 times less labeled data. Using just ten minutes of labeled data and pre-training on 53k hours of unlabeled data still achieves 4.8/8.2 WER. This demonstrates the feasibility of speech recognition with limited amounts of labeled data.",,Open weights (unrestricted),,,2025-02-17 17:04:30+00:00,United States of America,,,,,,,,,
ViT-Base/32,Vision,Google Brain,Industry,"Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby",2020-10-22,An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale,https://arxiv.org/abs/2010.11929,30079.0,Highly cited,,86000000.0,Table 1 https://arxiv.org/pdf/2010.11929.pdf,,,,,JFT-300M,,,,7.0,,,,,,"While the Transformer architecture has become the de-facto standard for natural language processing tasks, its applications to computer vision remain limited. In vision, attention is either applied in conjunction with convolutional networks, or used to replace certain components of convolutional networks while keeping their overall structure in place. We show that this reliance on CNNs is not necessary and a pure transformer applied directly to sequences of image patches can perform very well on image classification tasks. When pre-trained on large amounts of data and transferred to multiple mid-sized or small image recognition benchmarks (ImageNet, CIFAR-100, VTAB, etc.), Vision Transformer (ViT) attains excellent results compared to state-of-the-art convolutional networks while requiring substantially fewer computational resources to train.",,,,,2025-02-03 19:06:31+00:00,United States of America,,,,,,,,,
CryptoGRU,Language,Indiana University Bloomington,Academia,"Bo Feng, Qian Lou, Lei Jiang, Geoffrey C. Fox",2020-10-22,CryptoGRU: Low Latency Privacy-Preserving Text Analysis With GRU,https://arxiv.org/abs/2010.11796,12.0,,improves latency but not accuracy compared to other cryptographic models,,,,,,,Penn TreeBank,,,,,,,,,,"Billions of text analysis requests containing private emails, personal text messages, and sensitive online reviews, are processed by recurrent neural networks (RNNs) deployed on public clouds every day. Although prior secure networks combine homomorphic encryption (HE) and garbled circuit (GC) to preserve users' privacy, naively adopting the HE and GC hybrid technique to implement RNNs suffers from long inference latency due to slow activation functions. In this paper, we present a HE and GC hybrid gated recurrent unit (GRU) network, CryptoGRU, for low-latency secure inferences. CryptoGRU replaces computationally expensive GC-based tanh with fast GC-based ReLU, and then quantizes sigmoid and ReLU with a smaller bit length to accelerate activations in a GRU. We evaluate CryptoGRU with multiple GRU models trained on 4 public datasets. Experimental results show CryptoGRU achieves top-notch accuracy and improves the secure inference latency by up to 138× over one of state-of-the-art secure networks on the Penn Treebank dataset.",CryptoGRU,Unreleased,,Unknown,2024-09-09 17:28:43+00:00,United States of America,,,,,,,,,
GBERT-Large,Language,"deepset,Bayerische Staatsbibliothek Muenchen","Industry,Government","Branden Chan, Stefan Schweter, Timo Möller",2020-10-21,German's Next Language Model,https://arxiv.org/abs/2010.10906,244.0,SOTA improvement,'we were able to attain SoTA performance across a set of document classification and named entity recognition (NER) tasks for both models of base and large size.',335000000.0,335M from Table 5,2.2444646e+21,,,"flops = (64) * (123* 10**12) * (11 * 24 * 3600) * (0.3) = 2.24e21
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

'large models were trained on pods of 16 TPUs v3 (128 cores).' - from section 4.1it was trained for 11 days from Table 2","Wikipedia,OPUS,OSCAR,OpenLegalData",Table 1 in the paper,27287800000.0,"163.4GB from Table 1 in the paper
assuming 167M words per GB (German Language) we have 163.4 * 167M = 27287800000.0",,264.0,11 days from Table 2,Google TPU v3,64.0,,"In this work we present the experiments which lead to the creation of our BERT and ELECTRA based German language models, GBERT and GELECTRA. By varying the input training data, model size, and the presence of Whole Word Masking (WWM) we were able to attain SoTA performance across a set of document classification and named entity recognition (NER) tasks for both models of base and large size. We adopt an evaluation driven approach in training these models and our results indicate that both adding more data and utilizing WWM improve model performance. By benchmarking against existing German models, we show that these models are the best German models to date. Our trained models will be made publicly available to the research community. ",,Open weights (unrestricted),,Likely,2025-02-17 17:04:36+00:00,"Germany,Germany",,,,,,,2048.0,,
German ELECTRA Large,Language,"deepset,Bayerische Staatsbibliothek Muenchen","Industry,Government","Branden Chan, Stefan Schweter, Timo Möller",2020-10-21,German's Next Language Model,https://arxiv.org/abs/2010.10906,244.0,SOTA improvement,'we were able to attain SoTA performance across a set of document classification and named entity recognition (NER) tasks for both models of base and large size.',335000000.0,335M from Table 5,1.42829568e+21,,,"flops = (64) * (123* 10**12) * (7 * 24 * 3600) * (0.3) = 1.4e21
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

'large models were trained on pods of 16 TPUs v3 (128 cores).' - from section 4.1 it was trained for 7 days from Table 2

Agrees with 6CN:
Tokens seen: 512 (seq len) * 1024 (batch size) * 1 million (steps) = 5.24e11
FLOPs: 6 * 335M * 5.24e11 = 1.05e21","Wikipedia,OPUS,OSCAR,OpenLegalData",Table 1 in the paper,36383733333.333336,"163.4GB from Table 1 in the paper
assuming 167M words per GB (German Language) we have 163.4 * 167M * 4/3 tokens per word = 36,383,733,333",,168.0,7 days from Table 2,Google TPU v3,64.0,,"In this work we present the experiments which lead to the creation of our BERT and ELECTRA based German language models, GBERT and GELECTRA. By varying the input training data, model size, and the presence of Whole Word Masking (WWM) we were able to attain SoTA performance across a set of document classification and named entity recognition (NER) tasks for both models of base and large size. We adopt an evaluation driven approach in training these models and our results indicate that both adding more data and utilizing WWM improve model performance. By benchmarking against existing German models, we show that these models are the best German models to date. Our trained models will be made publicly available to the research community. ",,Open weights (unrestricted),,Confident,2025-02-17 17:04:50+00:00,"Germany,Germany",,,,,,,,,
Conformer + Wav2vec 2.0 + Noisy Student,Speech,"Google,Google Research,Google Brain","Industry,Industry,Industry","Yu Zhang, James Qin, Daniel S. Park, Wei Han, Chung-Cheng Chiu, Ruoming Pang, Quoc V. Le, Yonghui Wu",2020-10-20,Pushing the Limits of Semi-Supervised Learning for Automatic Speech Recognition,https://arxiv.org/abs/2010.10504v2,294.0,SOTA improvement,"""By doing so, we are able to achieve
word-error-rates (WERs) 1.4%/2.6% on the LibriSpeech test/test-other sets against
the current state-of-the-art WERs 1.7%/3.3%.""",1000000000.0,1B for XXL model,7.6e+21,,,"""We train with global batch size 2048 on 256/512 Google TPU V3 cores for 3-4 days for the XL/XXL models respectively...
We fine-tune the pre-trained checkpoints (400k steps) with global batch
size 1024/512 on 256/512 Google TPU v3 cores for 1-3 days for the XL/XXL models""

TPU v3 chips are 123 teraflop/s. 2 chips per core

512 cores * 7 days * 24 * 3600 * 123 tflops * (1 chip/2 cores) * 0.4 (assumed utilization) = 7.6e21",LibriLight,"""We pre-train the Conformer encoder akin to wav2vec 2.0 pre-training [6] with 60k hours of unlabeled audio from the ""unlab-60k"" subset of Libri-Light. Unlike in the original work which takes raw waveforms as input, we use log-mel spectrograms... 

The 960h of transcribed audio of the LibriSpeech dataset is used as the supervised data""",,,,168.0,7 days,Google TPU v3,256.0,,"We employ a combination of recent developments in semi-supervised learning for automatic speech recognition to obtain state-of-the-art results on LibriSpeech utilizing the unlabeled audio of the Libri-Light dataset. More precisely, we carry out noisy student training with SpecAugment using giant Conformer models pre-trained using wav2vec 2.0 pre-training. By doing so, we are able to achieve word-error-rates (WERs) 1.4%/2.6% on the LibriSpeech test/test-other sets against the current state-of-the-art WERs 1.7%/3.3%.",,Unreleased,,Confident,2025-02-17 17:05:03+00:00,"United States of America,Multinational,United States of America,United States of America",,,,,,,,,
mT5-XXL,Language,"Google,Google Research","Industry,Industry","Linting Xue, Noah Constant, Adam Roberts, Mihir Kale, Rami Al-Rfou, Aditya Siddhant, Aditya Barua, Colin Raffel",2020-10-20,mT5: A Massively Multilingual Pre-trained Text-to-Text Transformer,https://aclanthology.org/2021.naacl-main.41/,2122.0,"Highly cited,SOTA improvement","""Table 2 presents our main results, with perlanguage breakdowns for each task given in Appendix B. Our largest model mT5-XXL exceeds state-of-the-art on all classification and QA tasks and is near SOTA on NER (69.2 vs. 70.1).""",13000000000.0,13 billion,8.2e+22,,,"""We pre-train our mT5 model variants for 1 million steps on batches of 1024 length-1024 input sequences, corresponding to roughly 1 trillion input tokens total.""

1 million steps * 1024 batchsize * 1024 length * 13 billion params * 6 = 8.2e22

Ignores fine-tuning compute; this is likely a small fraction of pre-training compute.",mC4,"""The C4 dataset was explicitly designed to be English only: any page that was not given a probability of at least 99% of being English by langdetect2 was discarded. In contrast, for mC4 we use cld33 to identify over 100 languages.
Since some of these languages are relatively scarce on the internet, we make use of all of the 71 monthly web scrapes released so far by Common Crawl. This is dramatically more source data than was used for C4, for which the April 2019 web scrape alone was enough to provide plenty of English-language data.""",1000000000000.0,"The model was trained on a subset of 1 trillion tokens.
Full mC4 corpus has data ""totaling 6.6B pages and 6.3T tokens""
Distribution by language is in Appendix A.",1.0,,,,,,"The recent “Text-to-Text Transfer Transformer” (T5) leveraged a unified text-to-text format and scale to attain state-of-the-art results on a wide variety of English-language NLP tasks. In this paper, we introduce mT5, a multilingual variant of T5 that was pre-trained on a new Common Crawl-based dataset covering 101 languages. We detail the design and modified training of mT5 and demonstrate its state-of-the-art performance on many multilingual benchmarks. We also describe a simple technique to prevent “accidental translation” in the zero-shot setting, where a generative model chooses to (partially) translate its prediction into the wrong language. All of the code and model checkpoints used in this work are publicly available.",,Open weights (unrestricted),,Confident,2024-12-22 19:26:01+00:00,"United States of America,Multinational,United States of America",,,,,,,1048576.0,"""We pre-train our mT5 model variants for 1 million steps on batches of 1024 length-1024 input sequences, corresponding to roughly 1 trillion input tokens total.""",
Memformer (4 encoder + 16 decoder),Language,"UC Davis,Westlake University,Facebook AI","Academia,Academia,Industry","Qingyang Wu, Zhenzhong Lan, Kun Qian, Jing Gu, Alborz Geramifard, Zhou Yu",2020-10-14,Memformer: A Memory-Augmented Transformer for Sequence Modeling,https://arxiv.org/abs/2010.06891,41.0,,,76200000.0,,1.2e+19,,,,WikiText-103,,,,11.93,,,,,,"Transformers have reached remarkable success in sequence modeling. However, these models have efficiency issues as they need to store all the history token-level representations as memory. We present Memformer, an efficient neural network for sequence modeling, that utilizes an external dynamic memory to encode and retrieve past information. Our model achieves linear time complexity and constant memory space complexity when processing long sequences. We also propose a new optimization scheme, memory replay back-propagation (MRBP), which promotes long-range back-propagation through time with a significantly reduced memory requirement. Experimental results show that Memformer has achieved comparable performance compared to the baselines by using 8.1x less memory space and 3.2x faster on inference. Analysis of the attention pattern shows that our external memory slots can encode and retain important information through timesteps.",Memformer (4 encoder + 16 decoder),Unreleased,,,2024-11-01 14:03:45+00:00,"United States of America,China,United States of America",,,,,,,,,
LUKE,Language,"University of Washington,National Institute of Informatics",Academia,"Ikuya Yamada, Akari Asai, Hiroyuki Shindo, Hideaki Takeda, Yuji Matsumoto",2020-10-02,LUKE: Deep Contextualized Entity Representations with Entity-aware Self-attention,https://arxiv.org/abs/2010.01057v1,611.0,SOTA improvement,"from abstract ""In particular, it obtains state-of-the-art results on five well-known datasets: Open Entity (entity typing), TACRED (relation classification), CoNLL-2003 (named entity recognition), ReCoRD (cloze-style question answering), and SQuAD 1.1 (extractive question answering).""",483000000.0,"""The total number of parameters is approximately 483 M, consisting of 355 M in RoBERTa and 128 M in our entity embeddings""",1.8144e+22,,,"Uses RoBERTa Large as a base model, which used 1.66e22 FLOPs in training.

LUKE's additional training was:
(16) * (1.25e14) * (30 * 24 * 3600) * (0.3) = 1.5552e21
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

from appendix A: ""Werun the pretraining on NVIDIA’s PyTorch Docker
container 19.02 hosted on a server with two Intel Xeon Platinum 8168 CPUs and 16 NVIDIA Tesla V100 GPUs. The training takes approximately 30 days.""

Assuming 16 bit tensor core computations, 1.25e14 FLOP/s per V100

Total: 1.65888e22 + 1.5552e21 = 1.8144e22",Wikipedia,"""As input corpus for pretraining, we use the December 2018 version of Wikipedia, comprising approximately 3.5 billion words and 11 million entity annotations. """,3500000000.0,"""As input corpus for pretraining, we use the December 2018 version of Wikipedia, comprising approximately 3.5 billion words and 11 million entity annotations. """,119.46,720.0,see compute notes,NVIDIA V100,16.0,,"Entity representations are useful in natural language tasks involving entities. In this paper, we propose new pretrained contextualized representations of words and entities based on the bidirectional transformer. The proposed model treats words and entities in a given text as independent tokens, and outputs contextualized representations of them. Our model is trained using a new pretraining task based on the masked language model of BERT. The task involves predicting randomly masked words and entities in a large entity-annotated corpus retrieved from Wikipedia. We also propose an entity-aware self-attention mechanism that is an extension of the self-attention mechanism of the transformer, and considers the types of tokens (words or entities) when computing attention scores. The proposed model achieves impressive empirical performance on a wide range of entity-related tasks. In particular, it obtains state-of-the-art results on five well-known datasets: Open Entity (entity typing), TACRED (relation classification), CoNLL-2003 (named entity recognition), ReCoRD (cloze-style question answering), and SQuAD 1.1 (extractive question answering). Our source code and pretrained representations are available at this https://github.com/studio-ousia/luke",,Open weights (unrestricted),,Likely,2025-02-17 17:05:22+00:00,"United States of America,Japan",RoBERTa Large,,"LUKE's additional training was:
(16) * (1.25e14) * (30 * 24 * 3600) * (0.3) = 1.5552e21
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

from appendix A: ""Werun the pretraining on NVIDIA’s PyTorch Docker
container 19.02 hosted on a server with two Intel Xeon Platinum 8168 CPUs and 16 NVIDIA Tesla V100 GPUs. The training takes approximately 30 days.""

Assuming 16 bit tensor core computations, 1.25e14 FLOP/s per V100LUKE's additional training was:LUKE's additional training was:
(16) * (1.25e14) * (30 * 24 * 3600) * (0.3) = 1.5552e21(16) * (1.25e14) * (30 * 24 * 3600) * (0.3) = 1.5552e21
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

from appendix A: ""Werun the pretraining on NVIDIA’s PyTorch Dockerfrom appendix A: ""Werun the pretraining on NVIDIA’s PyTorch Docker
container 19.02 hosted on a server with two Intel Xeon Platinum 8168 CPUs and 16 NVIDIA Tesla V100 GPUs. The training takes approximately 30 days.""container 19.02 hosted on a server with two Intel Xeon Platinum 8168 CPUs and 16 NVIDIA Tesla V100 GPUs. The training takes approximately 30 days.""

Assuming 16 bit tensor core computations, 1.25e14 FLOP/s per V100Assuming 16 bit tensor core computations, 1.25e14 FLOP/s per V100",,,,2048.0,table in appendix A,
Frage-AWD-LSTM-MemoryAug-NeuralCache (WT2),Language,"Johns Hopkins University,Xiaomi Corp","Academia,Industry","Ke Li, Daniel Povey, Sanjeev Khudanpur",2020-09-29,Neural Language Modeling With Implicit Cache Pointers,https://arxiv.org/abs/2009.13774,4.0,,,33000000.0,,,,,,,,,,,,,,,,"A cache-inspired approach is proposed for neural language models (LMs) to improve long-range dependency and better predict rare words from long contexts. This approach is a simpler alternative to attention-based pointer mechanism that enables neural LMs to reproduce words from recent history. Without using attention and mixture structure, the method only involves appending extra tokens that represent words in history to the output layer of a neural LM and modifying training supervisions accordingly. A memory-augmentation unit is introduced to learn words that are particularly likely to repeat. We experiment with both recurrent neural network- and Transformer-based LMs. Perplexity evaluation on Penn Treebank and WikiText-2 shows the proposed model outperforms both LSTM and LSTM with attention-based pointer mechanism and is more effective on rare words. N-best rescoring experiments on Switchboard indicate that it benefits both very rare and frequent words. However, it is challenging for the proposed model as well as two other models with attention-based pointer mechanism to obtain good overall WER reductions.",Frage-AWD-LSTM-MemoryAug-NeuralCache (WT2),Unreleased,,,2024-09-09 17:32:17+00:00,"United States of America,China",,,,,,,,,
Integer Transformer,Language,"Northeastern University (China),NiuTrans Research,Chinese Academy of Sciences","Academia,Academia","Ye Lin, Yanyang Li, Tengbo Liu, Tong Xiao, Tongran Liu, Jingbo Zhu, Ye Lin, Yanyang Li, Tengbo Liu, Tong Xiao, Tongran Liu, Jingbo Zhu",2020-09-17,"Towards Fully 8-bit Integer Inference for the Transformer Model, Towards Fully 8-bit Integer Inference for the Transformer Model",https://arxiv.org/abs/2009.08034,74.0,,,247000000.00000003,,,,,,,,,,,,,,,,"8-bit integer inference, as a promising direction in reducing both the latency and storage of deep neural networks, has made great progress recently. On the other hand, previous systems still rely on 32-bit floating point for certain functions in complex models (e.g., Softmax in Transformer), and make heavy use of quantization and de-quantization. In this work, we show that after a principled modification on the Transformer architecture, dubbed Integer Transformer, an (almost) fully 8-bit integer inference algorithm Scale Propagation could be derived. De-quantization is adopted when necessary, which makes the network more efficient. Our experiments on WMT16 En<->Ro, WMT14 En<->De and En->Fr translation tasks as well as the WikiText-103 language modelling task show that the fully 8-bit Transformer system achieves comparable performance with the floating point baseline but requires nearly 4x less memory footprint.","Integer Transformer,Integer Transformer",Unreleased,,,2024-09-09 17:33:50+00:00,"China,China,China",,,,,,,,,
PAR Transformer Large,Language,NVIDIA,Industry,"Swetha Mandava, Szymon Migacz, Alex Fit Florea",2020-09-09,Pay Attention when Required,https://arxiv.org/abs/2009.04534,11.0,,,,,,,,,WikiText-103,,,,,,,,,,"Transformer-based models consist of interleaved feed-forward blocks - that capture content meaning, and relatively more expensive self-attention blocks - that capture context meaning. In this paper, we explored trade-offs and ordering of the blocks to improve upon the current Transformer architecture and proposed PAR Transformer. It needs 35% lower compute time than Transformer-XL achieved by replacing ~63% of the self-attention blocks with feed-forward blocks, and retains the perplexity on WikiText-103 language modelling benchmark. We further validated our results on text8 and enwiki8 datasets, as well as on the BERT model.",PAR Transformer Large,Unreleased,,Unknown,2024-09-09 17:34:15+00:00,United States of America,,,,,,,,,
ProBERTa,Biology,"University of Illinois Urbana-Champaign (UIUC),Reed College","Academia,Academia","Ananthan Nambiar, Maeve Heflin, Simon Liu, Sergei Maslov, Mark Hopkins, Anna Ritz",2020-09-01,"Transforming the Language of Life: Transformer Neural
Networks for Protein Prediction Tasks",https://dl.acm.org/doi/10.1145/3388440.3412467,97.0,SOTA improvement,"""Furthermore, we used embeddings from PRoBERTa for a fundamentally different problem, PPI prediction, using two different
datasets generated from the HIPPIE database and found that with
sufficient data, it substantially outperforms the current state-of-theart method in the conservative scenario.""",44000000.0,"""In total, our model has approximately 44M trainable parameters.""",9.72e+18,,,"""we pre-train PRoBERTa on 4 NVIDIA V100 GPUs in 18 hours""
4 * 125 tFLOP/s * 18 * 3600 * 0.3 (assumed utilization) = 9.72e18",UniProtKB/Swiss-Prot,"""Pre-training data: We use UniProtKB/Swiss-Prot (450K unique sequences with a mean tokenized length of 129.6 tokens), a collection of experimentally annotated and reviewed amino acid sequences""

Fine tuning uses a subset of 313,214 sequences which have annotated labels.",58320000.0,"450k sequences * 129.6 tokens per sequence = 58,320,000 tokens",,18.0,,NVIDIA V100,4.0,Self-supervised learning,"The scientific community is rapidly generating protein sequence information, but only a fraction of these proteins can be experimentally characterized. While promising deep learning approaches for protein prediction tasks have emerged, they have computational limitations or are designed to solve a specific task. We present a Transformer neural network that pre-trains task-agnostic sequence representations. This model is fine-tuned to solve two different protein prediction tasks: protein family classification and protein interaction prediction. Our method is comparable to existing state-of-the-art approaches for protein family classification while being much more general than other architectures. Further, our method outperforms all other approaches for protein interaction prediction. These results offer a promising framework for fine-tuning the pre-trained sequence representations for other protein prediction tasks.",,,,Confident,2025-02-17 17:05:27+00:00,"United States of America,United States of America",,,,,,,,,
Transformer+Recurrent Windows of Context,Language,"Toyota Technological Institute at Chicago,University of Chicago","Academia,Academia","Davis Yoshida, Allyson Ettinger, Kevin Gimpel",2020-08-16,Adding Recurrence to Pretrained Transformers for Improved Efficiency and Context Size,https://arxiv.org/abs/2008.07027,7.0,,,124000000.0,,1.17e+20,,,,,,,,2.0,,,,,,"Fine-tuning a pretrained transformer for a downstream task has become a standard method in NLP in the last few years. While the results from these models are impressive, applying them can be extremely computationally expensive, as is pretraining new models with the latest architectures. We present a novel method for applying pretrained transformer language models which lowers their memory requirement both at training and inference time. An additional benefit is that our method removes the fixed context size constraint that most transformer models have, allowing for more flexible use. When applied to the GPT-2 language model, we find that our method attains better perplexity than an unmodified GPT-2 model on the PG-19 and WikiText-103 corpora, for a given amount of computation or memory.",Transformer+Recurrent Windows of Context,Unreleased,,,2024-11-01 14:03:45+00:00,"United States of America,United States of America",,,,,,,,,
ERNIE-GEN (large),Language,Baidu,Industry,"Dongling Xiao, Han Zhang, Yukun Li, Yu Sun, Hao Tian, Hua Wu, Haifeng Wang",2020-08-06,ERNIE-GEN: An Enhanced Multi-Flow Pre-training and Fine-tuning Framework for Natural Language Generation,https://arxiv.org/abs/2001.11314,118.0,SOTA improvement,"""Empirically, ERNIE-GEN is particularly effective and
achieves state-of-the-art results on a range of NLG tasks
including abstractive summarization (Gigaword and CNN/DailyMail), question generation (SQuAD), dialogue response generation (Persona-Chat) and generative question answering (CoQA)""",340000000.0,"""We train a base model ERNIEGENBASE (L=12, H=768, A=12, Total Parameters=110M)1
and a large model ERNIE-GENLARGE (L=24, H=1024,
A=16, Total Parameters=340M) with parameters initialized
by BERTBASE and BERTLARGE respectively""",2e+20,,,"430GB text for 1 epoch

approx 430 * 200 million words = 86B words, or 100B tokens per https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.ieihc08p8dn0

6 * 340 million params * 100 billion tokens ~= 2e20","CC-News,BookCorpus (BooksCorpus, Toronto Book Corpus),WebText2,Wikipedia,C4","""Recent works for pre-training verify that larger scaled pretraining corpora can improve the performances on downstream tasks. We pre-train ERNIE-GENLARGE model on
the 430GB text corpora with 1 epoch and 1M training steps.
Our 430GB text corpora is extracted from the corpus used by
RoBERTa [Liu et al., 2019], T5 [Raffel et al., 2019] and ALBERT [Lan et al., 2020]. We fine-tune ERNIE-GENLARGE
on two abstractive summarization datasets including Gigaword and CNN/Daily Mail, the evaluation results are reported
in Table 9""

RoBERTa and T5 datasets are CC-News, BookCorpus, Wikipedia, WebText2, and C4",86000000000.0,"approx 430 * 200 million words = ~86B words, per https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.ieihc08p8dn0",,,,,,,,,Open weights (non-commercial),,Speculative,2025-02-17 17:14:04+00:00,China,,,,,,,,,
DeLighT,Language,"University of Washington,Allen Institute for AI,Facebook AI Research","Academia,Research collective,Industry","Sachin Mehta, Marjan Ghazvininejad, Srinivasan Iyer, Luke Zettlemoyer, Hannaneh Hajishirzi",2020-08-03,DeLighT: Deep and Light-weight Transformer,https://arxiv.org/abs/2008.00623,98.0,SOTA improvement,"""Comparison with state-of-the-art methods on machine translation corpora. DeLighT delivers
similar or better performance than state-of-the-art models with fewer parameters.""",99000000.0,,2.4e+19,,,,WikiText-103,,,,62.14,,,,,,"We introduce a deep and light-weight transformer, DeLighT, that delivers similar or better performance than standard transformer-based models with significantly fewer parameters. DeLighT more efficiently allocates parameters both (1) within each Transformer block using the DeLighT transformation, a deep and light-weight transformation, and (2) across blocks using block-wise scaling, which allows for shallower and narrower DeLighT blocks near the input and wider and deeper DeLighT blocks near the output. Overall, DeLighT networks are 2.5 to 4 times deeper than standard transformer models and yet have fewer parameters and operations. Experiments on benchmark machine translation and language modeling tasks show that DeLighT matches or improves the performance of baseline Transformers with 2 to 3 times fewer parameters on average. Our source code is available at: \url{this https URL}",DeLight,Unreleased,,,2024-09-10 19:58:08+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
mBART-50,Language,Facebook AI,Industry,"Yuqing Tang, Chau Tran, Xian Li, Peng-Jen Chen, Naman Goyal, Vishrav Chaudhary, Jiatao Gu, Angela Fan",2020-08-02,"Multilingual Translation with Extensible Multilingual Pretraining and Finetuning
","https://arxiv.org/abs/2008.00401

https://huggingface.co/facebook/mbart-large-50",398.0,,,610000000.0,"610M
from https://github.com/facebookresearch/fairseq/tree/main/examples/mbart",1.45152e+22,,,"flops = (256) * (125000000000000) * (2.5 * 7 * 24 * 3600) * (0.3) = 1.45152e+22
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)


""mBART trained for 2.5 weeks on 256 Nvidia V100 GPUs""
V100 have peak flop 28.26 TFLOPS  from https://www.techpowerup.com/gpu-specs/tesla-v100-pcie-16-gb.c2957",,"multiple sources
Table 6 in the appendix
additionally XLMR from section 5.1
",,"multiple sources
203686055 sentences - summing column 2 in Table 6 in the appendixadditionally XLMR from section 5.1
There are multiple languages so it is hard to estimate number of words.",,420.0,"""mBART trained for 2.5 weeks on 256 Nvidia V100 GPUs""",NVIDIA V100,256.0,,"Recent work demonstrates the potential of multilingual pretraining of creating one model that can be used for various tasks in different languages. Previous work in multilingual pretraining has demonstrated that machine translation systems can be created by finetuning on bitext. In this work, we show that multilingual translation models can be created through multilingual finetuning. Instead of finetuning on one direction, a pretrained model is finetuned on many directions at the same time. Compared to multilingual models trained from scratch, starting from pretrained models incorporates the benefits of large quantities of unlabeled monolingual data, which is particularly important for low resource languages where bitext is not available. We demonstrate that pretrained models can be extended to incorporate additional languages without loss of performance. We double the number of languages in mBART to support multilingual machine translation models of 50 languages. Finally, we create the ML50 benchmark, covering low, mid, and high resource languages, to facilitate reproducible research by standardizing training and evaluation data. On ML50, we demonstrate that multilingual finetuning improves on average 1 BLEU over the strongest baselines (being either multilingual from scratch or bilingual finetuning) while improving 9.3 BLEU on average over bilingual baselines from scratch. ",,Open weights (unrestricted),,Confident,2025-02-17 17:14:29+00:00,United States of America,,,,,,,,,
Grown to Prune Two-layer stacked LSTM,Language,"University of Chicago,Toyota Technological Institute at Chicago","Academia,Academia","Xin Yuan, Pedro Savarese, Michael Maire",2020-07-30,Growing Efficient Deep Networks by Structured Continuous Sparsification,https://arxiv.org/abs/2007.15353,39.0,,,,,,,,,,,,,,,,,,,"We develop an approach to growing deep network architectures over the course of training, driven by a principled combination of accuracy and sparsity objectives. Unlike existing pruning or architecture search techniques that operate on full-sized models or supernet architectures, our method can start from a small, simple seed architecture and dynamically grow and prune both layers and filters. By combining a continuous relaxation of discrete network structure optimization with a scheme for sampling sparse subnetworks, we produce compact, pruned networks, while also drastically reducing the computational expense of training. For example, we achieve 49.7% inference FLOPs and 47.4% training FLOPs savings compared to a baseline ResNet-50 on ImageNet, while maintaining 75.2% top-1 accuracy -- all without any dedicated fine-tuning stage. Experiments across CIFAR, ImageNet, PASCAL VOC, and Penn Treebank, with convolutional networks for image classification and semantic segmentation, and recurrent networks for language modeling, demonstrate that we both train faster and produce more efficient networks than competing architecture pruning or search methods.",Grown to Prune Two-layer stacked LSTM,Unreleased,,Unknown,2024-11-01 14:03:33+00:00,"United States of America,United States of America",,,,,,,,,
TransformerXL-LayerFusion-CA,Language,"University of Liverpool,University of Southern California","Academia,Academia","James O' Neill, Greg Ver Steeg, Aram Galstyan",2020-07-29,Compressing Deep Neural Networks via Layer Fusion,https://arxiv.org/abs/2007.14917,5.0,,,,,,,,,,,,,,,,,,,"This paper proposes \textit{layer fusion} - a model compression technique that discovers which weights to combine and then fuses weights of similar fully-connected, convolutional and attention layers. Layer fusion can significantly reduce the number of layers of the original network with little additional computation overhead, while maintaining competitive performance. From experiments on CIFAR-10, we find that various deep convolution neural networks can remain within 2\% accuracy points of the original networks up to a compression ratio of 3.33 when iteratively retrained with layer fusion. For experiments on the WikiText-2 language modelling dataset where pretrained transformer models are used, we achieve compression that leads to a network that is 20\% of its original size while being within 5 perplexity points of the original network. We also find that other well-established compression techniques can achieve competitive performance when compared to their original networks given a sufficient number of retraining steps. Generally, we observe a clear inflection point in performance as the amount of compression increases, suggesting a bound on the amount of compression that can be achieved before an exponential degradation in performance.",TransformerXL-LayerFusion-CA,Unreleased,,Unknown,2024-09-09 17:40:56+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
GPT2-LayerFusion-WS,Language,"University of Liverpool,University of Southern California","Academia,Academia","James O' Neill, Greg Ver Steeg, Aram Galstyan",2020-07-29,Compressing Deep Neural Networks via Layer Fusion,https://arxiv.org/abs/2007.14917,5.0,,,,,,,,,,,,,,,,,,,"This paper proposes \textit{layer fusion} - a model compression technique that discovers which weights to combine and then fuses weights of similar fully-connected, convolutional and attention layers. Layer fusion can significantly reduce the number of layers of the original network with little additional computation overhead, while maintaining competitive performance. From experiments on CIFAR-10, we find that various deep convolution neural networks can remain within 2\% accuracy points of the original networks up to a compression ratio of 3.33 when iteratively retrained with layer fusion. For experiments on the WikiText-2 language modelling dataset where pretrained transformer models are used, we achieve compression that leads to a network that is 20\% of its original size while being within 5 perplexity points of the original network. We also find that other well-established compression techniques can achieve competitive performance when compared to their original networks given a sufficient number of retraining steps. Generally, we observe a clear inflection point in performance as the amount of compression increases, suggesting a bound on the amount of compression that can be achieved before an exponential degradation in performance.",GPT2-LayerFusion-WS,Unreleased,,Unknown,2024-09-09 17:41:23+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
EfficientDet,Vision,Google Brain,Industry,"Mingxing Tan, Ruoming Pang, Quoc V. Le",2020-07-27,EfficientDet: Scalable and Efficient Object Detection,https://arxiv.org/abs/1911.09070,4701.0,"Highly cited,SOTA improvement","""EfficientDet-D7 achieves stateof-the-art 55.1 AP on COCO test-dev with 77M parameters and 410B FLOPs""",77000000.0,"""EfficientDet-D7 achieves stateof-the-art 55.1 AP on COCO test-dev with 77M parameters and 410B FLOPs""",,,,,COCO 2017,,,,600.0,,,,,,"Model efficiency has become increasingly important in computer vision. In this paper, we systematically study neural network architecture design choices for object detection and propose several key optimizations to improve efficiency. First, we propose a weighted bi-directional feature pyramid network (BiFPN), which allows easy and fast multiscale feature fusion; Second, we propose a compound scaling method that uniformly scales the resolution, depth, and width for all backbone, feature network, and box/class prediction networks at the same time. Based on these optimizations and better backbones, we have developed a new family of object detectors, called EfficientDet, which consistently achieve much better efficiency than prior art across a wide spectrum of resource constraints. In particular, with single model and single-scale, our EfficientDet-D7 achieves state-of-the-art 55.1 AP on COCO test-dev with 77M parameters and 410B FLOPs, being 4x - 9x smaller and using 13x - 42x fewer FLOPs than previous detectors. Code is available at this https URL.",,Open weights (unrestricted),,,2025-02-03 19:18:44+00:00,United States of America,,,,,,,,,
Hopfield Networks (2020),"Biology,Vision,Language,Medicine","Johannes Kepler University Linz,Institute of Advanced Research in Artificial Intelligence,University of Oslo","Academia,Academia,Academia","Hubert Ramsauer, Bernhard Schäfl, Johannes Lehner, Philipp Seidl, Michael Widrich, Thomas Adler, Lukas Gruber, Markus Holzleitner, Milena Pavlović, Geir Kjetil Sandve, Victor Greiff, David Kreil, Michael Kopp, Günter Klambauer, Johannes Brandstetter, Sepp Hochreiter",2020-07-16,Hopfield Networks is All You Need,https://arxiv.org/abs/2008.02217,345.0,SOTA improvement,"""Hopfield layers yielded a new state-ofthe-art when compared to different machine learning methods. Finally, Hopfield
layers achieved state-of-the-art on two drug design datasets""",,,,,,,"BACE,SIDER","""We test the Hopfield layer HopfieldLayer, on four drug
design datasets. These datasets represent four main areas of modeling tasks in drug design, concretely
to develop accurate models for predicting a) new anti-virals (HIV) by the Drug Therapeutics Program
(DTP) AIDS Antiviral Screen, b) new protein inhibitors, concretely human β-secretase (BACE) inhibitors by Subramanian et al. (2016), c) metabolic effects as blood-brain barrier permeability (BBBP)
(Martins et al., 2012) and d) side effects of a chemical compound from the Side Effect Resource
(SIDER) Kuhn et al. (2016). """,,,,,,,,,"We introduce a modern Hopfield network with continuous states and a corresponding update rule. The new Hopfield network can store exponentially (with the dimension of the associative space) many patterns, retrieves the pattern with one update, and has exponentially small retrieval errors. It has three types of energy minima (fixed points of the update): (1) global fixed point averaging over all patterns, (2) metastable states averaging over a subset of patterns, and (3) fixed points which store a single pattern. The new update rule is equivalent to the attention mechanism used in transformers. This equivalence enables a characterization of the heads of transformer models. These heads perform in the first layers preferably global averaging and in higher layers partial averaging via metastable states. The new modern Hopfield network can be integrated into deep learning architectures as layers to allow the storage of and access to raw input data, intermediate results, or learned prototypes. These Hopfield layers enable new ways of deep learning, beyond fully-connected, convolutional, or recurrent networks, and provide pooling, memory, association, and attention mechanisms. We demonstrate the broad applicability of the Hopfield layers across various domains. Hopfield layers improved state-of-the-art on three out of four considered multiple instance learning problems as well as on immune repertoire classification with several hundreds of thousands of instances. On the UCI benchmark collections of small classification tasks, where deep learning methods typically struggle, Hopfield layers yielded a new state-of-the-art when compared to different machine learning methods. Finally, Hopfield layers achieved state-of-the-art on two drug design datasets. The implementation is available at: this https URL",,Open weights (unrestricted),,Unknown,2025-02-03 19:06:45+00:00,"Austria,Austria,Norway",,,,,,,,,
1-layer-LSTM,Language,Harvard University,Academia,"H. T. Kung, Bradley McDanel, Sai Qian Zhang",2020-07-13,Term Revealing: Furthering Quantization at Run Time on Quantized DNNs,https://arxiv.org/abs/2007.06389,9.0,,,86500000.0,,,,,,,,,,,,,,,,"We present a novel technique, called Term Revealing (TR), for furthering quantization at run time for improved performance of Deep Neural Networks (DNNs) already quantized with conventional quantization methods. TR operates on power-of-two terms in binary expressions of values. In computing a dot-product computation, TR dynamically selects a fixed number of largest terms to use from the values of the two vectors in the dot product. By exploiting normal-like weight and data distributions typically present in DNNs, TR has a minimal impact on DNN model performance (i.e., accuracy or perplexity). We use TR to facilitate tightly synchronized processor arrays, such as systolic arrays, for efficient parallel processing. We show an FPGA implementation that can use a small number of control bits to switch between conventional quantization and TR-enabled quantization with a negligible delay. To enhance TR efficiency further, we use a signed digit representation (SDR), as opposed to classic binary encoding with only nonnegative power-of-two terms. To perform conversion from binary to SDR, we develop an efficient encoding method called HESE (Hybrid Encoding for Signed Expressions) that can be performed in one pass looking at only two bits at a time. We evaluate TR with HESE encoded values on an MLP for MNIST, multiple CNNs for ImageNet, and an LSTM for Wikitext-2, and show significant reductions in inference computations (between 3-10x) compared to conventional quantization for the same level of model performance.",1-layer-LSTM,Unreleased,,,2024-09-09 17:46:00+00:00,United States of America,,,,,,,,,
SemExp,Robotics,"Carnegie Mellon University (CMU),Facebook AI Research","Academia,Industry","Devendra Singh Chaplot, Dhiraj Gandhi, Abhinav Gupta, Ruslan Salakhutdinov",2020-07-02,Object Goal Navigation using Goal-Oriented Semantic Exploration,https://proceedings.neurips.cc/paper/2020/file/2c75cf2681788adaca63aa95ae028b22-Paper.pdf,428.0,SOTA improvement,"""Our method achieves state-of-the-art performance on the object goal navigation task and won the CVPR2020 Habitat ObjectNav challenge""",,,,,,,"Gibson,Matterport3D (MP3D)","""We use the Gibson [46] and Matterport3D (MP3D) [6] datasets""",,"""Our training and test set consists of a total of 86 scenes (25 Gibson tiny and 61 MP3D) and 16 scenes (5 Gibson tiny and 11 MP3D), respectively""",,,,,,Reinforcement learning,"This work studies the problem of object goal navigation which involves navigating to an instance of the given object category in unseen environments. End-to-end learning-based navigation methods struggle at this task as they are ineffective at exploration and long-term planning. We propose a modular system called, ‘GoalOriented Semantic Exploration’ which builds an episodic semantic map and uses it to explore the environment efficiently based on the goal object category. Empirical results in visually realistic simulation environments show that the proposed model outperforms a wide range of baselines including end-to-end learning-based methods as well as modular map-based methods and led to the winning entry of the CVPR2020 Habitat ObjectNav Challenge. Ablation analysis indicates that the proposed model learns semantic priors of the relative arrangement of objects in a scene, and uses them to explore efficiently. Domain-agnostic module design allows us to transfer our model to a mobile robot platform and achieve similar performance for object goal navigation in the real-world.",,Open weights (unrestricted),,Unknown,2024-11-01 14:03:32+00:00,"United States of America,United States of America",,,,,,,,,
DLRM-2021,Recommendation,Facebook AI,Industry,"Dheevatsa Mudigere, Yuchen Hao, Jianyu Huang, Zhihao Jia, Andrew Tulloch,
Srinivas Sridharan, Xing Liu, Mustafa Ozdal, Jade Nie, Jongsoo Park, Liang Luo, Jie (Amy) Yang, Leon Gao, Dmytro Ivchenko, Aarti Basant, Yuxi Hu, Jiyan Yang, Ehsan K. Ardestani, Xiaodong Wang, Rakesh Komuravelli, Ching-Hsiang Chu, Serhat Yilmaz, Huayu Li, Jiyuan Qian, Zhuobo Feng, Yinbin Ma, Junjie Yang, Ellie Wen, Hong Li, Lin Yang, Chonglin Sun, Whitney Zhao, Dimitry Melts, Krishna Dhulipala, KR Kishore, Tyler Graf, Assaf Eisenman, Kiran Kumar Matam, Adi Gangidi, Guoqiang Jerry Chen, Manoj Krishnan, Avinash Nayak, Krishnakumar Nair, Bharath Muthiah, Mahmoud khorashadi, Pallab Bhattacharya, Petr Lapukhov, Maxim Naumov, Ajit Mathews, Lin Qiao, Mikhail Smelyanskiy, Bill Jia, Vijay Rao",2020-07-01,"High-performance, Distributed Training of Large scale Deep Learning Recommendation Models",https://www.arxiv-vanity.com/papers/2104.05158/,10.0,,,1000000000000.0,"Figure 1

https://arxiv.org/abs/2104.05158",3e+20,,,"Figure 1

https://arxiv.org/abs/2104.05158",,,,,,,,,,,"Deep learning recommendation models (DLRMs) are used across many business-critical services at Facebookand are the single largest AI application in terms of infrastructure demand in its data-centers. In this paper we discuss the SW/HW co-designed solution for high-performance distributed training of large-scale DLRMs. We introduce a high-performance scalable software stack based on PyTorch and pair it with the new evolution of Zion platform, namely ZionEX. We demonstrate the capability to train very large DLRMs with up to 12 Trillion parameters and show that we can attain 40 × speedup in terms of time to solution over previous systems. We achieve this by (i) designing the ZionEX platform with dedicated scale-out network, provisioned with high bandwidth, optimal topology and efficient transport (ii) implementing an optimized PyTorch-based training stack supporting both model and data parallelism (iii) developing sharding algorithms capable of hierarchical partitioning of the embedding tables along row, column dimensions and load balancing them across multiple workers; (iv) adding high-performance core operators while retaining flexibility to support optimizers with fully deterministic updates (v) leveraging reduced precision communications, multi-level memory hierarchy (HBM+DDR+SSD) and pipelining. Furthermore, we develop and briefly comment on distributed data ingestion and other supporting services that are required for the robust and efficient end-to-end training in production environments.",,,,,2025-02-17 19:49:55+00:00,United States of America,,,,,,,,,
GShard (dense),Language,Google,Industry,"Dmitry Lepikhin, HyoukJoong Lee, Yuanzhong Xu, Dehao Chen, Orhan Firat, Yanping Huang, Maxim Krikun, Noam Shazeer, Zhifeng Chen",2020-06-30,GShard: Scaling Giant Models with Conditional Computation and Automatic Sharding,https://arxiv.org/abs/2006.16668,881.0,SOTA improvement,"""such a giant model can efficiently be trained on 2048 TPU v3 accelerators in 4 days to achieve far superior quality for translation from 100 languages to English compared to the prior art""",2300000000.0,"""Our best quality dense single Transformer model (2.3B parameters) achieving ∆BLEU of 6.1, was trained with GPipe [15] on 2048 TPU v3 cores for 6 weeks or total of 235.5 TPU v3 core-years.""",4.765e+22,,,"Trained for a total of 235.5 TPU v3 core-years.
Hardware estimate: 235.5 * 365.25 * 24 * 3600 * (1.23e14 / 2) * 0.3 = 1.371e23

Footnote 10 indicates 300k steps and 4M tokens/step -> 1.2T tokens
Arithmetic estimate: 6 * 2.3B * 1.2T = 1.656e22 FLOPs

Geometric mean: sqrt(1.371e23 * 1.656e22) = 4.765e22",,,346666666666.6667,"""We focus on improving the translation quality (measured in terms of BLEU score [48]) from all 100 languages to English. This resulted in approximately 13 billion training examples to be used for model training""

Each example is a sentence pair. Assuming 20 words per sentence and 4/3 tokens per word, that is 13*20*4/3 billion tokens",,1008.0,6 weeks = 1008 hours,Google TPU v3,1024.0,Self-supervised learning,"Neural network scaling has been critical for improving the model quality in many real-world machine learning applications with vast amounts of training data and compute. Although this trend of scaling is affirmed to be a sure-fire approach for better model quality, there are challenges on the path such as the computation cost, ease of programming, and efficient implementation on parallel devices. GShard is a module composed of a set of lightweight annotation APIs and an extension to the XLA compiler. It provides an elegant way to express a wide range of parallel computation patterns with minimal changes to the existing model code. GShard enabled us to scale up multilingual neural machine translation Transformer model with Sparsely-Gated Mixture-of-Experts beyond 600 billion parameters using automatic sharding. We demonstrate that such a giant model can efficiently be trained on 2048 TPU v3 accelerators in 4 days to achieve far superior quality for translation from 100 languages to English compared to the prior art.",,Unreleased,,Confident,2025-02-17 17:16:58+00:00,United States of America,,,,,,,4000000.0,"Table 3, bolded row is best model",
GShard (600B),Language,Google,Industry,"Dmitry Lepikhin, HyoukJoong Lee, Yuanzhong Xu, Dehao Chen, Orhan Firat, Yanping Huang, Maxim Krikun, Noam Shazeer, Zhifeng Chen",2020-06-30,GShard: Scaling Giant Models with Conditional Computation and Automatic Sharding,https://arxiv.org/abs/2006.16668,881.0,,this is the smaller model in this paper,600000000000.0,"""The 600B parameters model that achieved the best translation quality was trained with 2048 TPU v3 cores for 4 days, a total cost of 22 TPU v3 core-years.""",1.33e+22,,,"https://arxiv.org/ftp/arxiv/papers/2104/2104.10350.pdf
Table 4",,,346666666667.0,"""We focus on improving the translation quality (measured in terms of BLEU score [48]) from all 100 languages to English. This resulted in approximately 13 billion training examples to be used for model training""

Each example is a sentence pair. Assuming 20 words per sentence and 4/3 tokens per word, that is 13*20*4/3 billion tokens",,74.4,https://arxiv.org/pdf/2104.10350 Table 4 gives 3.1 days,,,Self-supervised learning,"Neural network scaling has been critical for improving the model quality in many real-world machine learning applications with vast amounts of training data and compute. Although this trend of scaling is affirmed to be a sure-fire approach for better model quality, there are challenges on the path such as the computation cost, ease of programming, and efficient implementation on parallel devices. GShard is a module composed of a set of lightweight annotation APIs and an extension to the XLA compiler. It provides an elegant way to express a wide range of parallel computation patterns with minimal changes to the existing model code. GShard enabled us to scale up multilingual neural machine translation Transformer model with Sparsely-Gated Mixture-of-Experts beyond 600 billion parameters using automatic sharding. We demonstrate that such a giant model can efficiently be trained on 2048 TPU v3 accelerators in 4 days to achieve far superior quality for translation from 100 languages to English compared to the prior art.",,Unreleased,,,2025-02-17 20:43:46+00:00,United States of America,,,,,,,,,
GPT-3 6.7B,Language,OpenAI,Industry,"Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, Dario Amodei",2020-06-22,Language Models are Few-Shot Learners,https://arxiv.org/abs/2005.14165,,,,6660000000.0,"6.7B
",1.2e+22,,,"Table D.1
https://arxiv.org/abs/2005.14165","Common Crawl,WebText2,Wikipedia,Books1,Books2",Table 2.2 (other datasets also used),300000000000.0,"300b, per table d.1",,,,NVIDIA Tesla V100 DGXS 32 GB,,,"Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions - something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.",,,,Confident,2024-12-30 19:43:25+00:00,United States of America,,,,Microsoft,,,2000000.0,"2M, per table 2.1",
GPT-3 XL,Language,OpenAI,Industry,"Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, Dario Amodei",2020-06-22,Language Models are Few-Shot Learners,https://arxiv.org/abs/2005.14165,,,,1320000000.0, 1.3B,2.38e+21,,,"Table D.1
https://arxiv.org/abs/2005.14165","Common Crawl,WebText2,Wikipedia,Books1,Books2",Table 2.2 (other datasets also used),300000000000.0,"300b, per table d.1",,,,NVIDIA Tesla V100 DGXS 32 GB,,,"Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions - something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.",,,,Confident,2024-12-30 19:55:15+00:00,United States of America,,,,Microsoft,,,1000000.0,"1M, per table 2.1",
GPT-3 Small,Language,OpenAI,Industry,"Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, Dario Amodei",2020-06-22,Language Models are Few-Shot Learners,https://arxiv.org/abs/2005.14165,,,,125000000.0,125M,2.25e+20,,,"Table D.1
https://arxiv.org/abs/2005.14165","Common Crawl,WebText2,Wikipedia,Books1,Books2",Table 2.2 (other datasets also used),300000000000.0,"300b, per table d.1",,,,NVIDIA Tesla V100 DGXS 32 GB,,,"Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions - something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.",,,,Confident,2024-12-22 19:16:19+00:00,United States of America,,,,Microsoft,,,500000.0," 0.5M, per table 2.1",
GPT-3 Medium,Language,OpenAI,Industry,"Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, Dario Amodei",2020-06-22,Language Models are Few-Shot Learners,https://arxiv.org/abs/2005.14165,,,,356000000.0,350M,6.41e+20,,,"Table D.1
https://arxiv.org/abs/2005.14165","Common Crawl,WebText2,Wikipedia,Books1,Books2",Table 2.2 (other datasets also used),300000000000.0,"300b, per table d.1",,,,NVIDIA Tesla V100 DGXS 32 GB,,,"Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions - something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.",,,,Confident,2024-12-30 19:45:36+00:00,United States of America,,,,Microsoft,,,500000.0," 0.5M, per table 2.1",
GPT-3 Large,Language,OpenAI,Industry,"Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, Dario Amodei",2020-06-22,Language Models are Few-Shot Learners,https://arxiv.org/abs/2005.14165,,,,760000000.0,760M,1.37e+21,,,"Table D.1
https://arxiv.org/abs/2005.14165","Common Crawl,WebText2,Wikipedia,Books1,Books2",Table 2.2 (other datasets also used),300000000000.0,"300b, per table d.1",,,,NVIDIA Tesla V100 DGXS 32 GB,,,"Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions - something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.",,,,Confident,2024-12-22 19:16:19+00:00,United States of America,,,,Microsoft,,,500000.0," 0.5M, per table 2.1",
GPT-3 2.7B,Language,OpenAI,Industry,"Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, Dario Amodei",2020-06-22,Language Models are Few-Shot Learners,https://arxiv.org/abs/2005.14165,,,,2650000000.0,"2.7B
",4.77e+21,,,"Table D.1
https://arxiv.org/abs/2005.14165","Common Crawl,WebText2,Wikipedia,Books1,Books2",Table 2.2 (other datasets also used),300000000000.0,"300b, per table d.1",,,,NVIDIA Tesla V100 DGXS 32 GB,,,"Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions - something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.",,,,Confident,2024-12-22 19:16:19+00:00,United States of America,,,,Microsoft,,,2000000.0,"2M, per table 2.1",
GPT-3 13B,Language,OpenAI,Industry,"Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, Dario Amodei",2020-06-22,Language Models are Few-Shot Learners,https://arxiv.org/abs/2005.14165,,,,12850000000.0,13B,2.31e+22,,,"Table D.1
https://arxiv.org/abs/2005.14165","Common Crawl,WebText2,Wikipedia,Books1,Books2",Table 2.2 (other datasets also used),300000000000.0,"300b, per table d.1",,,,NVIDIA Tesla V100 DGXS 32 GB,,,"Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions - something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.",,,,Confident,2024-12-22 19:16:19+00:00,United States of America,,,,Microsoft,,,1000000.0,"1M , per table 2.1",
iGPT-XL,"Vision,Image generation",OpenAI,Industry,"Mark Chen, Alec Radford, Rewon Child, Jeff Wu, Heewoo Jun, Prafulla Dhariwal, David Luan, Ilya Sutskever",2020-06-17,Generative Pretraining from Pixels,https://openai.com/research/image-gpt,1339.0,Highly cited,,6801000000.0,source: https://openai.com/blog/image-gpt/#rfref53,3.3e+22,,,"Taken from here
https://www.lesswrong.com/posts/wfpdejMWog4vEDLDg/ai-and-compute-trend-isn-t-predictive-of-what-is-happening",ILSVRC 2012 subset of ImageNet,,1229920.32,"""We use the ImageNet ILSVRC 2012 training dataset, splitting off 4% as our experimental validation set and report results on the ILSVRC 2012 validation set as our test set.""

https://image-net.org/challenges/LSVRC/2012/

""The goal of this competition is to estimate the content of photographs for the purpose of retrieval and automatic annotation using a subset of the large hand-labeled ImageNet dataset (10,000,000 labeled images depicting 10,000+ object categories) as training.""
",,,,NVIDIA Tesla V100 DGXS 32 GB,,Self-supervised learning,"Inspired by progress in unsupervised representation learning for natural language, we examine whether similar models can learn useful representations for images. We train a sequence Transformer to auto-regressively predict pixels, without incorporating knowledge of the 2D input structure. Despite training on low-resolution ImageNet without labels, we find that a GPT-2 scale model learns strong image representations as measured by linear probing, fine-tuning, and low-data classification. On CIFAR-10, we achieve 96.3% accuracy with a linear probe, outperforming a supervised Wide ResNet, and 99.0% accuracy with full finetuning, matching the top supervised pre-trained models. An even larger model trained on a mixture of ImageNet and web images is competitive with self-supervised benchmarks on ImageNet, achieving 72.0% top-1 accuracy on a linear probe of our features.",,Open weights (unrestricted),,,2025-02-17 19:49:41+00:00,United States of America,,,,,,,,,
iGPT-L,"Image generation,Vision",OpenAI,Industry,"Mark Chen, Alec Radford, Rewon Child, Jeff Wu, Heewoo Jun, Prafulla Dhariwal, David Luan, Ilya Sutskever",2020-06-17,Generative Pretraining from Pixels,https://openai.com/blog/image-gpt/,1339.0,Highly cited,,1362000000.0,source: https://openai.com/blog/image-gpt/#rfref53,8.91e+21,,,"We have that ""iGPT-L was trained for roughly 2500 V100-days"" [1]

I assume this is the NVIDIA Tesla V100 GPU. In the specifications, the NVIDIA Tesla V100 has 7 to 8.2 TFLOPS of peak double precision performance and 14 to 16.4 TFLOPS of peak single precision performance and 112 to 130 TFLOPS of peak tensor performance [2].

I suppose the one that makes sense using if peak tensor performance, for ~125 TFLOPS peak tensor performance more or less.
Following OpenAIs AI and compute we apply a 0.33 utitilization factor [3].

In total we get 2500 V100-days * (24*60*60) seconds/day * 125 TFLOPS * 0.33 = 8.91e+21 FLOPS = 89.1 PF-days.

[1] https://openai.com/blog/image-gpt/
[2] https://images.nvidia.com/content/technologies/volta/pdf/volta-v100-datasheet-update-us-1165301-r5.pdf
[3] https://openai.com/blog/ai-and-compute/",ILSVRC 2012 subset of ImageNet,,1229920.32,"""We use the ImageNet ILSVRC 2012 training dataset, splitting off 4% as our experimental validation set and report results on the ILSVRC 2012 validation set as our test set.""

https://image-net.org/challenges/LSVRC/2012/

""The goal of this competition is to estimate the content of photographs for the purpose of retrieval and automatic annotation using a subset of the large hand-labeled ImageNet dataset (10,000,000 labeled images depicting 10,000+ object categories) as training.""
",,,,NVIDIA Tesla V100 DGXS 32 GB,,Self-supervised learning,"Inspired by progress in unsupervised representation learning for natural language, we examine whether similar models can learn useful representations for images. We train a sequence Transformer to auto-regressively predict pixels, without incorporating knowledge of the 2D input structure. Despite training on low-resolution ImageNet without labels, we find that a GPT-2 scale model learns strong image representations as measured by linear probing, fine-tuning, and low-data classification. On CIFAR-10, we achieve 96.3% accuracy with a linear probe, outperforming a supervised Wide ResNet, and 99.0% accuracy with full finetuning, matching the top supervised pre-trained models. An even larger model trained on a mixture of ImageNet and web images is competitive with self-supervised benchmarks on ImageNet, achieving 72.0% top-1 accuracy on a linear probe of our features.",,Open weights (unrestricted),,,2025-02-17 17:17:28+00:00,United States of America,,,,,,,,,
Transformer-XL+AdamP,Language,"Naver AI Lab,Naver Clova","Industry,Industry","Byeongho Heo, Sanghyuk Chun, Seong Joon Oh, Dongyoon Han, Sangdoo Yun, Gyuwan Kim, Youngjung Uh, Jung-Woo Ha",2020-06-15,AdamP: Slowing Down the Slowdown for Momentum Optimizers on Scale-invariant Weights,https://arxiv.org/abs/2006.08217,114.0,,,257000000.0,,,,,,,,,,,,,,,,"Normalization techniques are a boon for modern deep learning. They let weights converge more quickly with often better generalization performances. It has been argued that the normalization-induced scale invariance among the weights provides an advantageous ground for gradient descent (GD) optimizers: the effective step sizes are automatically reduced over time, stabilizing the overall training procedure. It is often overlooked, however, that the additional introduction of momentum in GD optimizers results in a far more rapid reduction in effective step sizes for scale-invariant weights, a phenomenon that has not yet been studied and may have caused unwanted side effects in the current practice. This is a crucial issue because arguably the vast majority of modern deep neural networks consist of (1) momentum-based GD (e.g. SGD or Adam) and (2) scale-invariant parameters. In this paper, we verify that the widely-adopted combination of the two ingredients lead to the premature decay of effective step sizes and sub-optimal model performances. We propose a simple and effective remedy, SGDP and AdamP: get rid of the radial component, or the norm-increasing direction, at each optimizer step. Because of the scale invariance, this modification only alters the effective step sizes without changing the effective update directions, thus enjoying the original convergence properties of GD optimizers. Given the ubiquity of momentum GD and scale invariance in machine learning, we have evaluated our methods against the baselines on 13 benchmarks. They range from vision tasks like classification (e.g. ImageNet), retrieval (e.g. CUB and SOP), and detection (e.g. COCO) to language modelling (e.g. WikiText) and audio classification (e.g. DCASE) tasks. We verify that our solution brings about uniform gains in those benchmarks. Source code is available at this https URL.",Transformer-XL+AdamP,Unreleased,,,2024-09-09 17:51:33+00:00,"Korea (Republic of),Korea (Republic of)",,,,,,,,,
Transformer-XL+WN+AdamP,Language,"Naver AI Lab,Naver Clova","Industry,Industry","Byeongho Heo, Sanghyuk Chun, Seong Joon Oh, Dongyoon Han, Sangdoo Yun, Gyuwan Kim, Youngjung Uh, Jung-Woo Ha",2020-06-15,AdamP: Slowing Down the Slowdown for Momentum Optimizers on Scale-invariant Weights,https://arxiv.org/abs/2006.08217,114.0,,,257000000.0,,,,,,,,,,,,,,,,"Normalization techniques are a boon for modern deep learning. They let weights converge more quickly with often better generalization performances. It has been argued that the normalization-induced scale invariance among the weights provides an advantageous ground for gradient descent (GD) optimizers: the effective step sizes are automatically reduced over time, stabilizing the overall training procedure. It is often overlooked, however, that the additional introduction of momentum in GD optimizers results in a far more rapid reduction in effective step sizes for scale-invariant weights, a phenomenon that has not yet been studied and may have caused unwanted side effects in the current practice. This is a crucial issue because arguably the vast majority of modern deep neural networks consist of (1) momentum-based GD (e.g. SGD or Adam) and (2) scale-invariant parameters. In this paper, we verify that the widely-adopted combination of the two ingredients lead to the premature decay of effective step sizes and sub-optimal model performances. We propose a simple and effective remedy, SGDP and AdamP: get rid of the radial component, or the norm-increasing direction, at each optimizer step. Because of the scale invariance, this modification only alters the effective step sizes without changing the effective update directions, thus enjoying the original convergence properties of GD optimizers. Given the ubiquity of momentum GD and scale invariance in machine learning, we have evaluated our methods against the baselines on 13 benchmarks. They range from vision tasks like classification (e.g. ImageNet), retrieval (e.g. CUB and SOP), and detection (e.g. COCO) to language modelling (e.g. WikiText) and audio classification (e.g. DCASE) tasks. We verify that our solution brings about uniform gains in those benchmarks. Source code is available at this https URL.",Transformer-XL+WN+AdamP,Unreleased,,,2024-09-09 17:53:18+00:00,"Korea (Republic of),Korea (Republic of)",,,,,,,,,
SqueezeBERT,Language,University of California (UC) Berkeley,Academia,"Forrest N. Iandola, Albert E. Shaw, Ravi Krishna, Kurt W. Keutzer",2020-06-10,SqueezeBERT: What can computer vision teach NLP about efficient neural networks?,https://arxiv.org/abs/2006.11316,111.0,,,51100000.0,Rados,,,,,,,,,,,,,,,,,,,,2024-11-01 14:03:32+00:00,United States of America,,,,,,,,,
6-Layer-Tensor-Transformer+AdaHessian,Language,"NERSC, Lawrence Berkeley National Laboratory,University of California (UC) Berkeley","Government,Academia","Zhewei Yao, Amir Gholami, Sheng Shen, Mustafa Mustafa, Kurt Keutzer, Michael W. Mahoney",2020-06-01,ADAHESSIAN: An Adaptive Second Order Optimizer for Machine Learning,https://arxiv.org/abs/2006.00719,229.0,,"""We show that AdaHessian achieves new state-of-the-art results by a large margin as compared
to other adaptive optimization methods, including variants of Adam""",85300000.0,,1.58e+18,,,,WikiText-103,,,,30.0,,,,,,"We introduce ADAHESSIAN, a second order stochastic optimization algorithm which dynamically incorporates the curvature of the loss function via ADAptive estimates of the HESSIAN. Second order algorithms are among the most powerful optimization algorithms with superior convergence properties as compared to first order methods such as SGD and Adam. The main disadvantage of traditional second order methods is their heavier per iteration computation and poor accuracy as compared to first order methods. To address these, we incorporate several novel approaches in ADAHESSIAN, including: (i) a fast Hutchinson based method to approximate the curvature matrix with low computational overhead; (ii) a root-mean-square exponential moving average to smooth out variations of the Hessian diagonal across different iterations; and (iii) a block diagonal averaging to reduce the variance of Hessian diagonal elements. We show that ADAHESSIAN achieves new state-of-the-art results by a large margin as compared to other adaptive optimization methods, including variants of Adam. In particular, we perform extensive tests on CV, NLP, and recommendation system tasks and find that ADAHESSIAN: (i) achieves 1.80%/1.45% higher accuracy on ResNets20/32 on Cifar10, and 5.55% higher accuracy on ImageNet as compared to Adam; (ii) outperforms AdamW for transformers by 0.13/0.33 BLEU score on IWSLT14/WMT14 and 2.7/1.0 PPL on PTB/Wikitext-103; (iii) outperforms AdamW for SqueezeBert by 0.41 points on GLUE; and (iv) achieves 0.032% better score than Adagrad for DLRM on the Criteo Ad Kaggle dataset. Importantly, we show that the cost per iteration of ADAHESSIAN is comparable to first order methods, and that it exhibits robustness towards its hyperparameters.",6-Layer-Tensor-Transformer+AdaHessian,Unreleased,,,2024-11-01 14:03:33+00:00,"United States of America,United States of America",,,,,,,,,
GPT-3 175B (davinci),Language,OpenAI,Industry,"Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, Dario Amodei",2020-05-28,Language Models are Few-Shot Learners,https://arxiv.org/abs/2005.14165,32643.0,"Highly cited,Training cost",,175000000000.0,"""we train GPT-3, an autoregressive language model with 175 billion parameters""",3.14e+23,,,"Table D.1
https://arxiv.org/abs/2005.14165","Common Crawl,WebText2,Wikipedia,Books1,Books2",Table 2.2 (other datasets also used),374000000000.0,"From table 2.2, we determine that there are 410 + 19 + 12 + 55 + 3 = 499 billion tokens. 

We multiply this by 0.75 to give 374B words. 

3.74e11

========================
[Anson: I think the calculation below doesn't look at all the data, the CommonCrawl data only constitutes 60% of the data. Multiplying by 5/3 gives 4.75e11]

""The CommonCrawl data was downloaded from 41 shards of monthly CommonCrawl covering 2016 to 2019, constituting 45TB of compressed plaintext before filtering and 570GB after filtering, roughly equivalent to 400 billion byte-pair-encoded tokens. ""

Converted to words using 
http://extraconversion.com/data-storage/gigabits/gigabits-to-words.html

2.85e11",0.6,355.2,14.8 days according to https://arxiv.org/ftp/arxiv/papers/2104/2104.10350.pdf,NVIDIA Tesla V100 DGXS 32 GB,10000.0,Self-supervised learning,"Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions - something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.",GPT-3 175B (davinci),API access,0.1968,Confident,2025-02-03 18:47:08+00:00,United States of America,,,,Microsoft,,,3200000.0,"3.2M, per table 2.1",True
GPT3-6.7B (rerun of original),Language,"Microsoft,OpenAI","Industry,Industry","Greg Yang, Edward J. Hu, Igor Babuschkin, Szymon Sidor, Xiaodong Liu, David Farhi, Nick Ryder, Jakub Pachocki, Weizhu Chen, Jianfeng Gao",2020-05-28,Tensor Programs V: Tuning Large Neural Networks via Zero-Shot Hyperparameter Transfer,https://arxiv.org/abs/2203.03466,120.0,,,6700000000.0,,1.2e+22,,,,,,,,1.0,,,,,,"Hyperparameter (HP) tuning in deep learning is an expensive process, prohibitively so for neural networks (NNs) with billions of parameters. We show that, in the recently discovered Maximal Update Parametrization (muP), many optimal HPs remain stable even as model size changes. This leads to a new HP tuning paradigm we call muTransfer: parametrize the target model in muP, tune the HP indirectly on a smaller model, and zero-shot transfer them to the full-sized model, i.e., without directly tuning the latter at all. We verify muTransfer on Transformer and ResNet. For example, 1) by transferring pretraining HPs from a model of 13M parameters, we outperform published numbers of BERT-large (350M parameters), with a total tuning cost equivalent to pretraining BERT-large once; 2) by transferring from 40M parameters, we outperform published numbers of the 6.7B GPT-3 model, with tuning cost only 7% of total pretraining cost. A Pytorch implementation of our technique can be found at this http URL and installable via `pip install mup`.",GPT3-6.7B (rerun of original),Unreleased,,,2024-11-01 14:03:32+00:00,"United States of America,United States of America",,,,,,GPT3-6.7B (rerun of original),,,
DETR,Vision,Facebook,Industry,"Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, Sergey Zagoruyko",2020-05-26,End-to-End Object Detection with Transformers,https://arxiv.org/abs/2005.12872,10594.0,Highly cited,,60000000.0,60M per Table 1,4e+20,,,"""Training the baseline model for 300 epochs on 16 V100 GPUs takes 3 days, with 4 images per GPU (hence a total batch size of 64). For the longer schedule used to compare with Faster R-CNN we train for 500 epochs with learning rate drop after 400 epochs. This schedule adds 1.5 AP compared to the shorter schedule.""

48 V100-days for baseline DETR model. Larger model had 1.5x the params and 5/3 as many epochs, so required ~2.5x as much training compute.

125 teraflop/s * 2.5 * 48 * 24 * 3600 * 0.3 (assumed utilization) ~ 4e20",COCO 2017,"""We perform experiments on COCO 2017 detection and panoptic segmentation datasets [24,18], containing 118k training images and 5k validation images""",123000.0,,500.0,,,NVIDIA V100,,Supervised,"Abstract. We present a new method that views object detection as a
direct set prediction problem. Our approach streamlines the detection
pipeline, effectively removing the need for many hand-designed components like a non-maximum suppression procedure or anchor generation
that explicitly encode our prior knowledge about the task. The main
ingredients of the new framework, called DEtection TRansformer or
DETR, are a set-based global loss that forces unique predictions via bipartite matching, and a transformer encoder-decoder architecture. Given
a fixed small set of learned object queries, DETR reasons about the relations of the objects and the global image context to directly output
the final set of predictions in parallel. The new model is conceptually
simple and does not require a specialized library, unlike many other
modern detectors. DETR demonstrates accuracy and run-time performance on par with the well-established and highly-optimized Faster RCNN baseline on the challenging COCO object detection dataset. Moreover, DETR can be easily generalized to produce panoptic segmentation
in a unified manner. We show that it significantly outperforms competitive baselines. Training code and pretrained models are available at
https://github.com/facebookresearch/detr.",,Open weights (unrestricted),,Confident,2025-02-17 17:21:59+00:00,United States of America,,,,,,,64.0,,
Retrieval-Augmented Generator,Language,"Facebook,New York University (NYU),University College London (UCL)","Industry,Academia,Academia","Patrick Lewis, Ethan Perez, Aleksandra Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal, Heinrich Küttler, Mike Lewis, Wen-tau Yih, Tim Rocktäschel, Sebastian Riedel, Douwe Kiela",2020-05-22,Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks,https://arxiv.org/abs/2005.11401v4,3572.0,"Highly cited,SOTA improvement","""Our RAG models achieve state-of-the-art results on open Natural Questions [29], WebQuestions [3] and CuratedTrec [2] """,626000000.0,"""Our RAG models contain the trainable parameters for the BERT-base query and document encoder of DPR, with 110M parameters each (although we do not train the document encoder ourselves) and 406M trainable parameters from BART-large, 406M parameters, making a total of 626M trainable parameters""",,,,"not enough info, e.g. no training time reported:

""We train with mixed precision floating point arithmetic [40], distributing training across 8, 32GB NVIDIA V100 GPUs, though training and inference can be run on one GPU""","Wikipedia,NQ (Natural Questions)",,,,,,,NVIDIA Tesla V100 PCIe 32 GB,,,"Large pre-trained language models have been shown to store factual knowledge in their parameters, and achieve state-of-the-art results when fine-tuned on downstream NLP tasks. However, their ability to access and precisely manipulate knowledge is still limited, and hence on knowledge-intensive tasks, their performance lags behind task-specific architectures. Additionally, providing provenance for their decisions and updating their world knowledge remain open research problems. Pre-trained models with a differentiable access mechanism to explicit non-parametric memory can overcome this issue, but have so far been only investigated for extractive downstream tasks. We explore a general-purpose fine-tuning recipe for retrieval-augmented generation (RAG) -- models which combine pre-trained parametric and non-parametric memory for language generation. We introduce RAG models where the parametric memory is a pre-trained seq2seq model and the non-parametric memory is a dense vector index of Wikipedia, accessed with a pre-trained neural retriever. We compare two RAG formulations, one which conditions on the same retrieved passages across the whole generated sequence, the other can use different passages per token. We fine-tune and evaluate our models on a wide range of knowledge-intensive NLP tasks and set the state-of-the-art on three open domain QA tasks, outperforming parametric seq2seq models and task-specific retrieve-and-extract architectures. For language generation tasks, we find that RAG models generate more specific, diverse and factual language than a state-of-the-art parametric-only seq2seq baseline.",,Open weights (unrestricted),,Confident,2024-11-01 14:03:33+00:00,"United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
rTop-k(distributed setting),Language,Stanford University,Academia,"Leighton Pate Barnes, Huseyin A. Inan, Berivan Isik, Ayfer Ozgur",2020-05-21,rTop-k: A Statistical Estimation Approach to Distributed SGD,https://arxiv.org/abs/2005.10761,56.0,,,69000000.0,,1.46e+16,,,,,,,,38.0,,,,,,"The large communication cost for exchanging gradients between different nodes significantly limits the scalability of distributed training for large-scale learning models. Motivated by this observation, there has been significant recent interest in techniques that reduce the communication cost of distributed Stochastic Gradient Descent (SGD), with gradient sparsification techniques such as top-k and random-k shown to be particularly effective. The same observation has also motivated a separate line of work in distributed statistical estimation theory focusing on the impact of communication constraints on the estimation efficiency of different statistical models. The primary goal of this paper is to connect these two research lines and demonstrate how statistical estimation models and their analysis can lead to new insights in the design of communication-efficient training techniques. We propose a simple statistical estimation model for the stochastic gradients which captures the sparsity and skewness of their distribution. The statistically optimal communication scheme arising from the analysis of this model leads to a new sparsification technique for SGD, which concatenates random-k and top-k, considered separately in the prior literature. We show through extensive experiments on both image and language domains with CIFAR-10, ImageNet, and Penn Treebank datasets that the concatenated application of these two sparsification methods consistently and significantly outperforms either method applied alone.",rTop-k(distributed setting),Unreleased,,,2024-11-01 14:03:32+00:00,United States of America,,,,,,,,,
Decay RNN,Language,Indian Institute of Technology Delhi,Academia,"Gantavya Bhatt, Hritik Bansal, Rishubh Singh, Sumeet Agarwal",2020-05-17,How much complexity does an RNN architecture need to learn syntax-sensitive dependencies?,https://arxiv.org/abs/2005.08199,7.0,,,1400000.0,,,,,,Lizen et al 2016,,,,,,,,,,"Long short-term memory (LSTM) networks and their variants are capable of encapsulating long-range dependencies, which is evident from their performance on a variety of linguistic tasks. On the other hand, simple recurrent networks (SRNs), which appear more biologically grounded in terms of synaptic connections, have generally been less successful at capturing long-range dependencies as well as the loci of grammatical errors in an unsupervised setting. In this paper, we seek to develop models that bridge the gap between biological plausibility and linguistic competence. We propose a new architecture, the Decay RNN, which incorporates the decaying nature of neuronal activations and models the excitatory and inhibitory connections in a population of neurons. Besides its biological inspiration, our model also shows competitive performance relative to LSTMs on subject-verb agreement, sentence grammaticality, and language modeling tasks. These results provide some pointers towards probing the nature of the inductive biases required for RNN architectures to model linguistic phenomena successfully.",Decay RNN,Unreleased,,,2024-09-09 17:56:20+00:00,India,,,,,,,,,
Conformer,Speech,Google,Industry,"Anmol Gulati, James Qin, Chung-Cheng Chiu, Niki Parmar, Yu Zhang, Jiahui Yu, Wei Han, Shibo Wang, Zhengdong Zhang, Yonghui Wu, Ruoming Pang",2020-05-16,Conformer: Convolution-augmented Transformer for Speech Recognition,https://arxiv.org/abs/2005.08100v1,2655.0,"Highly cited,SOTA improvement","""Conformer significantly outperforms the previous Transformer and CNN based models achieving state-of-the-art accuracies. On the widely used LibriSpeech benchmark, our model achieves WER of 2.1%/4.3% without using a language model and 1.9%/3.9% with an external language model on test/testother""",118800000.0,118.8M for Conformer(L),,,,,LibriSpeech,,,,,,,,,,"Recently Transformer and Convolution neural network (CNN) based models have shown promising results in Automatic Speech Recognition (ASR), outperforming Recurrent neural networks (RNNs). Transformer models are good at capturing content-based global interactions, while CNNs exploit local features effectively. In this work, we achieve the best of both worlds by studying how to combine convolution neural networks and transformers to model both local and global dependencies of an audio sequence in a parameter-efficient way. To this regard, we propose the convolution-augmented transformer for speech recognition, named Conformer. Conformer significantly outperforms the previous Transformer and CNN based models achieving state-of-the-art accuracies. On the widely used LibriSpeech benchmark, our model achieves WER of 2.1%/4.3% without using a language model and 1.9%/3.9% with an external language model on test/testother. We also observe competitive performance of 2.7%/6.3% with a small model of only 10M parameters.",,Unreleased,,Confident,2024-11-01 14:03:32+00:00,United States of America,,,,,,,,,
ONLSTM-SYD,Language,"Westlake University,Institute for Advanced Study,McGill University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),CIFAR AI Research,University of Montreal / Université de Montréal","Academia,Academia,Academia,Academia,Research collective,Academia","Wenyu Du, Zhouhan Lin, Yikang Shen, Timothy J. O'Donnell, Yoshua Bengio, Yue Zhang",2020-05-12,Exploiting Syntactic Structure for Better Language Modeling: A Syntactic Distance Approach,https://arxiv.org/abs/2005.05864,15.0,,,25000000.0,,1.3899999999999998e+17,,,,Penn TreeBank,,,,1000.0,,,,,,"It is commonly believed that knowledge of syntactic structure should improve language modeling. However, effectively and computationally efficiently incorporating syntactic structure into neural language models has been a challenging topic. In this paper, we make use of a multi-task objective, i.e., the models simultaneously predict words as well as ground truth parse trees in a form called ""syntactic distances"", where information between these two separate objectives shares the same intermediate representation. Experimental results on the Penn Treebank and Chinese Treebank datasets show that when ground truth parse trees are provided as additional training signals, the model is able to achieve lower perplexity and induce trees with better quality.",ONLSTM-SYD,Unreleased,,,2024-09-09 17:56:54+00:00,"China,United States of America,Canada,Canada,Canada,Canada",,,,,,,,,
ContextNet,Speech,Google,Industry,"Wei Han, Zhengdong Zhang, Yu Zhang, Jiahui Yu, Chung-Cheng Chiu, James Qin, Anmol Gulati, Ruoming Pang, Yonghui Wu",2020-05-07,ContextNet: Improving Convolutional Neural Networks for Automatic Speech Recognition with Global Context,https://arxiv.org/abs/2005.03191v3,237.0,SOTA improvement,"""We demonstrate that on the widely used Librispeech
benchmark, ContextNet achieves a word error rate (WER) of
2.1%/4.6% without external language model (LM), 1.9%/4.1%
with LM and 2.9%/7.0% with only 10M parameters on the
clean/noisy LibriSpeech test sets. This compares to the
best previously published model of 2.0%/4.6% with LM and
3.9%/11.3% with 20M parameters""",112700000.0,Table 5,,,,"Uses pre-trained joint network from https://arxiv.org/pdf/1811.06621, so total training compute should factor this in.",LibriSpeech,,1710000000.0,"970 hours of speech in the LibreSpeech experiments. There is mention of a ""large scale experiment"" which trained on audio from YouTube videos. Tracing the references, it appears to be similar to the dataset used in https://arxiv.org/abs/1610.09975, which has 125,000 hours of transcribed audio for training. However, they mention in footnote 2 that the training and evaluation set have changed from previous experiments.
125k hours at 13,680 words per hour = 1.71B words",,,,,,,"Convolutional neural networks (CNN) have shown promising results for end-to-end speech recognition, albeit still behind other state-of-the-art methods in performance. In this paper, we study how to bridge this gap and go beyond with a novel CNN-RNN-transducer architecture, which we call ContextNet. ContextNet features a fully convolutional encoder that incorporates global context information into convolution layers by adding squeeze-and-excitation modules. In addition, we propose a simple scaling method that scales the widths of ContextNet that achieves good trade-off between computation and accuracy. We demonstrate that on the widely used LibriSpeech benchmark, ContextNet achieves a word error rate (WER) of 2.1%/4.6% without external language model (LM), 1.9%/4.1% with LM and 2.9%/7.0% with only 10M parameters on the clean/noisy LibriSpeech test sets. This compares to the previous best published system of 2.0%/4.6% with LM and 3.9%/11.3% with 20M parameters. The superiority of the proposed ContextNet model is also verified on a much larger internal dataset.",,Unreleased,,Likely,2024-11-01 14:03:32+00:00,United States of America,,,,,,,,,
NAS+ESS (156M),Language,"Northeastern University (China),Chinese Academy of Sciences,NiuTrans Research,Kingsoft","Academia,Academia,Industry","Yinqiao Li, Chi Hu, Yuhao Zhang, Nuo Xu, Yufan Jiang, Tong Xiao, Jingbo Zhu, Tongran Liu, Changliang Li",2020-05-06,Learning Architectures from an Extended Search Space for Language Modeling,https://arxiv.org/abs/2005.02593,12.0,SOTA improvement,"""Our ESS method
achieves state-of-the-art result on the PTB task""",156000000.0,,2.89e+18,,,,Penn TreeBank,,,,30.0,,,,,,"Neural architecture search (NAS) has advanced significantly in recent years but most NAS systems restrict search to learning architectures of a recurrent or convolutional cell. In this paper, we extend the search space of NAS. In particular, we present a general approach to learn both intra-cell and inter-cell architectures (call it ESS). For a better search result, we design a joint learning method to perform intra-cell and inter-cell NAS simultaneously. We implement our model in a differentiable architecture search system. For recurrent neural language modeling, it outperforms a strong baseline significantly on the PTB and WikiText data, with a new state-of-the-art on PTB. Moreover, the learned architectures show good transferability to other systems. E.g., they improve state-of-the-art systems on the CoNLL and WNUT named entity recognition (NER) tasks and CoNLL chunking task, indicating a promising line of research on large-scale pre-learned architectures.",NAS+ESS (156M),Unreleased,,,2024-09-09 17:57:45+00:00,"China,China,China,China",,,,,,,,,
UnifiedQA,Language,"Allen Institute for AI,University of Washington","Research collective,Academia","Daniel Khashabi, Sewon Min, Tushar Khot, Ashish Sabharwal, Oyvind Tafjord, Peter Clark, Hannaneh Hajishirzi",2020-05-02,UnifiedQA: Crossing Format Boundaries With a Single QA System,https://arxiv.org/abs/2005.00700v3,674.0,SOTA improvement,"""We then introduce UNIFIEDQA (§3.2) that is a QA system
trained on datasets in multiple formats, indicating
new state-of-the-art results on 10 datasets and generalization to unseen datasets.""",11000000000.0,11B (based on T5-11B),1.65e+19,,,"A.2: ""In the experiments, we use v3-8 TPUs for T5 models... pretraining UNIFIEDQA approximately takes about 36 hours on T5(11B)""

4 * 1.23e14 * 36 * 3600 * 0.3 = 1.91e19

Alternatively, input (ouput) size of 512 (100) tokens, batch size of 8, trained for 100k steps. Input tokens only need the forward pass.
((2 * 11B * 512 * 8) + (6 * 11B * 100 * 8)) * 100k = 1.43e19

Took geometric mean of these estimates:
sqrt(1.91e19*1.43e19) = 1.65e19",,"""We empirically chose the following 8 seed datasets for training UNIFIEDQA, 3 based on their effectiveness in our pilot study (details deferred to Section 5) assessing which datasets are most valuable for out-of-format training:
• EX: SQuAD 1.1, SQuAD 2.0
• AB: NarrativeQA
• MC: RACE, ARC, OBQA, MCTest
• YN: BoolQ""",97309860.0,"Table 2:
SQuAD 1.1: 87k examples, avg total length of 136.2 + 3.0
SQuAD 2.0: 130k examples, avg total length of 139.9 + 2.6
NarrativeQA: 65k examples, avg total length of 563.6 + 6.2
RACE: 87k examples, avg total length of 317.9 + 6.9
ARC (easy): 2k examples, avg total length of 39.4 + 3.7
ARC (hard): 1k examples, avg total length of  47.4 + 5.0
OBQA: 4k examples, avg total length of 28.7 + 3.6
MCTest: 1.4k examples, avg total length of 245.4 + 4.0
BoolQ: 9k examples, avg total length of 105.1 + 1.0

Total tokens: 97,309,860",1.88,36.0,"""pretraining UNIFIEDQA approximately takes about 36 and 55 hours, on T5(11B) and BART models, respectively.""",Google TPU v3,8.0,,"Question answering (QA) tasks have been posed using a variety of formats, such as extractive span selection, multiple choice, etc. This has led to format-specialized models, and even to an implicit division in the QA community. We argue that such boundaries are artificial and perhaps unnecessary, given the reasoning abilities we seek to teach are not governed by the format. As evidence, we use the latest advances in language modeling to build a single pre-trained QA model, UnifiedQA, that performs surprisingly well across 17 QA datasets spanning 4 diverse formats. UnifiedQA performs on par with 9 different models that were trained on individual datasets themselves. Even when faced with 12 unseen datasets of observed formats, UnifiedQA performs surprisingly well, showing strong generalization from its out-of-format training data. Finally, simply fine-tuning this pre-trained QA model into specialized models results in a new state of the art on 6 datasets, establishing UnifiedQA as a strong starting point for building QA systems.",,Unreleased,,Confident,2025-01-03 20:53:05+00:00,"United States of America,United States of America",T5-11B,3.8e+19,"""• Infrastructure: In the experiments, we use v3-8 TPUs for T5 models, and eight 32GB GPUs for
BART models.
• Time spent to build UNIFIEDQA: pretraining UNIFIEDQA approximately takes about 36 and 55
hours, on T5(11B) and BART models, respectively.""

8 * 123 TFLOPS * 36 * 3600 * 0.3 (utilization assumption) = 3.8e19",,,,27.0,,
ATLAS,Language,"Allen Institute for AI,University of Washington","Research collective,Academia","Daniel Khashabi, Sewon Min, Tushar Khot, Ashish Sabharwal, Oyvind Tafjord, Peter Clark, Hannaneh Hajishirzi",2020-05-02,UnifiedQA: Crossing Format Boundaries With a Single QA System,https://arxiv.org/abs/2005.00700,674.0,SOTA improvement,"from abstract: ""Finally, simply fine-tuning this pre-trained QA model into specialized models results in a new state of the art on 6 datasets""",11000000000.0,"11B from appendix A.2 : Model sizes: ""Most of the experiments are done on T5(11B) which has 11 billion parameters. We also report experiments with BART (large) with 440 million parameters.""",3.825792e+19,,,"flops = (8) * (123 * 10**12) * (36 * 3600) * (0.3)
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

from Appendix A.2: ""Time spent to build UNIFIEDQA: pretraining UNIFIEDQA approximately takes about 36 and 55 hours, on T5(11B) and BART models, respectively.""
so 36h for T5

""Infrastructure: In the experiments, we use v3-8 TPUs for T5 models, and eight 32GB GPUs for BART models.""

from https://cloud.google.com/tpu/docs/system-architecture-tpu-vm#tpu_chip
tpu chip have peak flops 123 teraflops
so 8 chips have peak flops 123 * 8",SQuAD 1.1,"from appendix A.1 - multiple QA datasets, In section 3 there is description how batches are created from multiple datasets.",,"from appendix A.1 - multiple QA datasets - it may be possible to estimate by summing sizes of all datasets
I am not sure if all data is used as system is trained for 100K steps (from appendix A.2)
with batch size 8 (appendix A.1)",,36.0,"Appendix A.2: Time spent to build UNIFIEDQA: pretraining UNIFIEDQA approximately takes about 36 and 55 hours, on T5(11B) and BART models, respectively.",Google TPU v3,,,"Question answering (QA) tasks have been posed using a variety of formats, such as extractive span selection, multiple choice, etc. This has led to format-specialized models, and even to an implicit division in the QA community. We argue that such boundaries are artificial and perhaps unnecessary, given the reasoning abilities we seek to teach are not governed by the format. As evidence, we use the latest advances in language modeling to build a single pre-trained QA model, UnifiedQA, that performs surprisingly well across 17 QA datasets spanning 4 diverse formats. UnifiedQA performs on par with 9 different models that were trained on individual datasets themselves. Even when faced with 12 unseen datasets of observed formats, UnifiedQA performs surprisingly well, showing strong generalization from its out-of-format training data. Finally, simply fine-tuning this pre-trained QA model into specialized models results in a new state of the art on 6 datasets, establishing UnifiedQA as a strong starting point for building QA systems.",,Open weights (unrestricted),,Confident,2025-01-03 20:52:48+00:00,"United States of America,United States of America",,,,,,,,,
"Segatron XL large, M=384",Language,"University of Waterloo,Peking University,RSVP.ai","Academia,Academia,Industry","He Bai, Peng Shi, Jimmy Lin, Yuqing Xie, Luchen Tan, Kun Xiong, Wen Gao, Ming Li",2020-04-30,Segatron: Segment-Aware Transformer for Language Modeling and Understanding,https://arxiv.org/abs/2004.14996,13.0,,,257000000.0,,2.65e+19,,,,WikiText-103,,,,167.02,,,,,,"Transformers are powerful for sequence modeling. Nearly all state-of-the-art language models and pre-trained language models are based on the Transformer architecture. However, it distinguishes sequential tokens only with the token position index. We hypothesize that better contextual representations can be generated from the Transformer with richer positional information. To verify this, we propose a segment-aware Transformer (Segatron), by replacing the original token position encoding with a combined position encoding of paragraph, sentence, and token. We first introduce the segment-aware mechanism to Transformer-XL, which is a popular Transformer-based language model with memory extension and relative position encoding. We find that our method can further improve the Transformer-XL base model and large model, achieving 17.1 perplexity on the WikiText-103 dataset. We further investigate the pre-training masked language modeling task with Segatron. Experimental results show that BERT pre-trained with Segatron (SegaBERT) can outperform BERT with vanilla Transformer on various NLP tasks, and outperforms RoBERTa on zero-shot sentence representation learning.","Segatron XL large, M=384",Open weights (non-commercial),,,2024-09-27 21:38:11+00:00,"Canada,China,China",,,,,,,,,
Once for All,Vision,"MIT-IBM Watson AI Lab,Massachusetts Institute of Technology (MIT),IBM","Academia,Industry,Academia,Industry","Han Cai, Chuang Gan, Tianzhe Wang, Zhekai Zhang, and Song Han",2020-04-29,Once for all: Train one network and specialize it for efficient deployment.,https://arxiv.org/abs/1908.09791,1157.0,SOTA improvement,"""In particular, OFA achieves a new SOTA 80.0% ImageNet top-1 accuracy under the mobile setting""",7700000.0,,1.78428096e+21,,,"4.2k V100-hours (table 1)
0.33 utilization rate
",ImageNet,,,,180.0,,,NVIDIA V100,,,"We address the challenging problem of efficient inference across many devices and resource constraints, especially on edge devices. Conventional approaches either manually design or use neural architecture search (NAS) to find a specialized neural network and train it from scratch for each case, which is computationally prohibitive (causing CO2 emission as much as 5 cars' lifetime) thus unscalable. In this work, we propose to train a once-for-all (OFA) network that supports diverse architectural settings by decoupling training and search, to reduce the cost. We can quickly get a specialized sub-network by selecting from the OFA network without additional training. To efficiently train OFA networks, we also propose a novel progressive shrinking algorithm, a generalized pruning method that reduces the model size across many more dimensions than pruning (depth, width, kernel size, and resolution). It can obtain a surprisingly large number of sub-networks (>1019) that can fit different hardware platforms and latency constraints while maintaining the same level of accuracy as training independently. On diverse edge devices, OFA consistently outperforms state-of-the-art (SOTA) NAS methods (up to 4.0% ImageNet top1 accuracy improvement over MobileNetV3, or same accuracy but 1.5x faster than MobileNetV3, 2.6x faster than EfficientNet w.r.t measured latency) while reducing many orders of magnitude GPU hours and CO2 emission. In particular, OFA achieves a new SOTA 80.0% ImageNet top-1 accuracy under the mobile setting (<600M MACs). OFA is the winning solution for the 3rd Low Power Computer Vision Challenge (LPCVC), DSP classification track and the 4th LPCVC, both classification track and detection track. Code and 50 pre-trained models (for many devices & many latency constraints) are released at this https URL.",,Open weights (unrestricted),,,2025-02-17 17:21:52+00:00,"United States of America,United States of America,United States of America",,,,Amazon Web Services,,,,,
Go-explore,Games,"Uber AI,OpenAI","Industry,Industry","Adrien Ecoffet, Joost Huizinga, Joel Lehman, Kenneth O. Stanley, Jeff Clune",2020-04-27,"First return, then explore",https://arxiv.org/abs/2004.12919,314.0,SOTA improvement,"""GoExplore solves all heretofore unsolved Atari games (meaning those for which algorithms could not previously
outperform humans when evaluated following current community standards for Atari3) and surpasses the state
of the art on all hard-exploration games""",,,,,,,,,,,,,,,,,"The promise of reinforcement learning is to solve complex sequential decision problems autonomously by specifying a high-level reward function only. However, reinforcement learning algorithms struggle when, as is often the case, simple and intuitive rewards provide sparse and deceptive feedback. Avoiding these pitfalls requires thoroughly exploring the environment, but creating algorithms that can do so remains one of the central challenges of the field. We hypothesise that the main impediment to effective exploration originates from algorithms forgetting how to reach previously visited states (""detachment"") and from failing to first return to a state before exploring from it (""derailment""). We introduce Go-Explore, a family of algorithms that addresses these two challenges directly through the simple principles of explicitly remembering promising states and first returning to such states before intentionally exploring. Go-Explore solves all heretofore unsolved Atari games and surpasses the state of the art on all hard-exploration games, with orders of magnitude improvements on the grand challenges Montezuma's Revenge and Pitfall. We also demonstrate the practical potential of Go-Explore on a sparse-reward pick-and-place robotics task. Additionally, we show that adding a goal-conditioned policy can further improve Go-Explore's exploration efficiency and enable it to handle stochasticity throughout training. The substantial performance gains from Go-Explore suggest that the simple principles of remembering states, returning to them, and exploring from them are a powerful and general approach to exploration, an insight that may prove critical to the creation of truly intelligent learning agents.",,Unreleased,,Unknown,2025-01-06 16:35:48+00:00,"United States of America,United States of America",,,,,,,,,
Cube-Space AutoEncoder,"Vision,Search",MIT-IBM Watson AI Lab,"Academia,Industry","Masataro Asai, Christian Muise",2020-04-27,Learning Neural-Symbolic Descriptive Planning Models via Cube-Space Priors: The Voyage Home (to STRIPS),https://arxiv.org/abs/2004.12850,56.0,,,,It may be possible to estimate from section 4.,1.0660896e+17,,,"(1) * (4113 * 10**9) * (24 * 3600) * (0.3) = 106608960000000000
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate) = 

""For each domain, we searched for 100 iterations (≈15min/iter, 24 hours total) on a Tesla K80""
4.113 TFLOPS from https://www.techpowerup.com/gpu-specs/tesla-k80.c2616


",,"""Finally, we tested Mandrill 15-puzzle, a significantly more
challenging 4x4 variant of the sliding tile puzzle (Figure 1).
We trained the network with more hyperparameter tuning it-
erations (300) and a larger training set (50000). We gener-
ated l = 14, 21 instances (20 each) and ran the system (Ta-
ble 2, bottom right). """,50000.0,"""Finally, we tested Mandrill 15-puzzle, a significantly more
challenging 4x4 variant of the sliding tile puzzle (Figure 1).
We trained the network with more hyperparameter tuning it-
erations (300) and a larger training set (50000). We gener-
ated l = 14, 21 instances (20 each) and ran the system (Ta-
ble 2, bottom right). """,,24.0,"""For each domain, we searched for 100 iterations (≈15min/iter, 24 hours total) on a Tesla K80""",NVIDIA Tesla K80,1.0,,"We achieved a new milestone in the difficult task of enabling agents to learn about their environment autonomously. Our neuro-symbolic architecture is trained end-to-end to produce a succinct and effective discrete state transition model from images alone. Our target representation (the Planning Domain Definition Language) is already in a form that off-the-shelf solvers can consume, and opens the door to the rich array of modern heuristic search capabilities. We demonstrate how the sophisticated innate prior we place on the learning process significantly reduces the complexity of the learned representation, and reveals a connection to the graph-theoretic notion of ""cube-like graphs"", thus opening the door to a deeper understanding of the ideal properties for learned symbolic representations. We show that the powerful domain-independent heuristics allow our system to solve visual 15-Puzzle instances which are beyond the reach of blind search, without resorting to the Reinforcement Learning approach that requires a huge amount of training on the domain-dependent reward information.",,,,Confident,2025-02-17 17:22:05+00:00,United States of America,,,,,,,,,
CURL,Games,University of California (UC) Berkeley,Academia,"A Srinivas, M Laskin, P Abbeel",2020-04-08,CURL: Contrastive Unsupervised Representations for Reinforcement Learning,https://arxiv.org/abs/2004.04136v4,978.0,SOTA improvement,,907264.0,,,,,,,"RL on Atari:

""We measure the data-efficiency and performance of our
method and baselines at 100k and 500k environment steps
on DMControl and 100k interaction steps (400k environment steps with action repeat of 4) on Atari, which we will
henceforth refer to as DMControl100k, DMControl500k
and Atari100k for clarity. While Atari100k benchmark has been common practice when investigating data-efficiency
on Atari (Kaiser et al., 2019; van Hasselt et al., 2019; Kielak,
2020), the DMControl benchmark was set at 500k environment steps because state-based RL approaches asymptotic
performance on many environments at this point, and 100k
steps to measure the speed of initial learning. A broader
motivation is that while RL algorithms can achieve superhuman performance on Atari games, they are still far less
efficient than a human learner. Training for 100-500k environment steps corresponds to a few hours of human time.""",,,,,,,,,,,Open weights (unrestricted),,,2024-11-01 14:03:33+00:00,United States of America,,,,,,,,,
MobileBERT,Language,"Carnegie Mellon University (CMU),Google Brain","Academia,Industry","Zhiqing Sun, Hongkun Yu, Xiaodan Song, Renjie Liu, Yiming Yang, Denny Zhou",2020-04-06,MobileBERT: a Compact Task-Agnostic BERT for Resource-Limited Devices,https://arxiv.org/abs/2004.02984,708.0,,,25300000.0,Rados,,,,,,,,,,,,,,,,,,,,2024-11-01 14:03:32+00:00,"United States of America,United States of America",,,,,,,,,
DiffStk-MRNN,Language,"Pennsylvania State University,Rochester Institute of Technology","Academia,Academia","Ankur Mali, Alexander Ororbia, Daniel Kifer, Clyde Lee Giles",2020-04-04,Recognizing Long Grammatical Sequences Using Recurrent Networks Augmented With An External Differentiable Stack,https://arxiv.org/abs/2004.07623,13.0,,,1010000.0,,282000000000000.0,,,,,,,,50.0,,,,,,"Recurrent neural networks (RNNs) are a widely used deep architecture for sequence modeling, generation, and prediction. Despite success in applications such as machine translation and voice recognition, these stateful models have several critical shortcomings. Specifically, RNNs generalize poorly over very long sequences, which limits their applicability to many important temporal processing and time series forecasting problems. For example, RNNs struggle in recognizing complex context free languages (CFLs), never reaching 100% accuracy on training. One way to address these shortcomings is to couple an RNN with an external, differentiable memory structure, such as a stack. However, differentiable memories in prior work have neither been extensively studied on CFLs nor tested on sequences longer than those seen in training. The few efforts that have studied them have shown that continuous differentiable memory structures yield poor generalization for complex CFLs, making the RNN less interpretable. In this paper, we improve the memory-augmented RNN with important architectural and state updating mechanisms that ensure that the model learns to properly balance the use of its latent states with external memory. Our improved RNN models exhibit better generalization performance and are able to classify long strings generated by complex hierarchical context free grammars (CFGs). We evaluate our models on CGGs, including the Dyck languages, as well as on the Penn Treebank language modelling task, and achieve stable, robust performance across these benchmarks. Furthermore, we show that only our memory-augmented networks are capable of retaining memory for a longer duration up to strings of length 160.",DiffStk-MRNN,Unreleased,,,2024-09-09 18:09:44+00:00,"United States of America,United States of America",,,,,,,,,
Agent57,Games,DeepMind,Industry,"AP Badia, B Piot, S Kapturowski",2020-03-30,Agent57: Outperforming the Atari Human Benchmark,https://arxiv.org/abs/2003.13350,485.0,SOTA improvement,"""We propose Agent57, the first deep RL agent that outperforms the standard human benchmark on all 57 Atari games""",,,,,,,,,,,,,,,,,,,Unreleased,,Unknown,2024-11-01 14:03:32+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
MetNet,Earth science,Google,Industry,"Casper Kaae Sønderby, Lasse Espeholt, Jonathan Heek, Mostafa Dehghani, Avital Oliver, Tim Salimans, Shreya Agrawal, Jason Hickey, Nal Kalchbrenner",2020-03-24,MetNet: A Neural Weather Model for Precipitation Forecasting,https://arxiv.org/abs/2003.12140,250.0,SOTA improvement,"""MetNet improves upon the current operational NWP system HRRR for up to 8 hours of lead time""
... 
""Numerical Weather Prediction is the most successful framework to perform medium- and longrange (up to 6 days with high confidence) forecast to date (Bauer et al., 2015).""",,,,,,,,"""Precipitation provides a benchmark for a highly varying and densely measured target (Agrawal
et al.). We cast precipitation forecasting as a structured prediction problem where the output comes
in the form of a three-dimensional tensor. Each value of the tensor corresponds to a time and a
location and indicates the corresponding rate of precipitation measured in mm/h. Target precipitation rates are estimated by the Multi Radar Multi Sensor (MRMS) ground based radars as a
function of the returned radar echoes (Zhang et al., 2016). The spatial size obtained from MRMS
is 7000 × 2500 covering the continental United States. Each pixel covers 0.01◦ of longitude and
latitude corresponding to approximately 1 km2
. In addition to MRMS frames, the available input
data include the 16 spectral bands of the optical Geostationary Operational Environmental Satellite
16 (GOES-16). Figure 1 contains examples of MRMS and GOES-16 frames.""",,,,,,,,,,,Unreleased,,Unknown,2024-11-01 14:03:32+00:00,United States of America,,,,,,,,,
ELECTRA,Language,"Stanford University,Google,Google Brain","Academia,Industry,Industry","Kevin Clark, Minh-Thang Luong, Quoc V. Le, Christopher D. Manning",2020-03-23,ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators,https://arxiv.org/abs/2003.10555v1,2968.0,Highly cited,,335000000.0,https://github.com/google-research/electra,3.1e+21,,,"Table 8: ""ELECTRA-1.75M"" used 3.1e21 train FLOPs. Note that the actual parameter count is 335M. The 1.75M refers to the number of training steps.

This doesn't quite line up with a 6ND estimate, 
6 * 335M * (1.75M * 2048 * 128) = 9.22e20 FLOPs
I'm inferring 128 sequence length, possibly this is 256 or 512?","BookCorpus (BooksCorpus, Toronto Book Corpus),Wikipedia,ClueWeb,Gigaword","""For most experiments we pre-train on the same data as BERT, which consists
of 3.3 Billion tokens from Wikipedia and BooksCorpus (Zhu et al., 2015). However, for our Large
model we pre-trained on the data used for XLNet (Yang et al., 2019), which extends the BERT
dataset to 33B tokens by including data from ClueWeb (Callan et al., 2009), CommonCrawl, and
Gigaword (Parker et al., 2011).""",25000000000.0,"33B tokens or ~25B words

""For most experiments we pre-train on the same data as BERT, which consists
of 3.3 Billion tokens from Wikipedia and BooksCorpus (Zhu et al., 2015). However, for our Large
model we pre-trained on the data used for XLNet (Yang et al., 2019), which extends the BERT
dataset to 33B tokens by including data from ClueWeb (Callan et al., 2009), CommonCrawl, and
Gigaword (Parker et al., 2011).""",,,table 1,,,Self-supervised learning,"Masked language modeling (MLM) pre-training methods such as BERT corrupt the input by replacing some tokens with [MASK] and then train a model to reconstruct the original tokens. While they produce good results when transferred to downstream NLP tasks, they generally require large amounts of compute to be effective. As an alternative, we propose a more sample-efficient pre-training task called replaced token detection. Instead of masking the input, our approach corrupts it by replacing some tokens with plausible alternatives sampled from a small generator network. Then, instead of training a model that predicts the original identities of the corrupted tokens, we train a discriminative model that predicts whether each token in the corrupted input was replaced by a generator sample or not. Thorough experiments demonstrate this new pre-training task is more efficient than MLM because the task is defined over all input tokens rather than just the small subset that was masked out. As a result, the contextual representations learned by our approach substantially outperform the ones learned by BERT given the same model size, data, and compute. The gains are particularly strong for small models; for example, we train a model on one GPU for 4 days that outperforms GPT (trained using 30x more compute) on the GLUE natural language understanding benchmark. Our approach also works well at scale, where it performs comparably to RoBERTa and XLNet while using less than 1/4 of their compute and outperforms them when using the same amount of compute.",,Open weights (unrestricted),,,2025-02-17 17:22:37+00:00,"United States of America,United States of America,United States of America",,,,,,,262144.0,,
Tensor-Transformer(1core)+PN (WT103),Language,University of California (UC) Berkeley,Academia,"Sheng Shen, Zhewei Yao, Amir Gholami, Michael W. Mahoney, Kurt Keutzer",2020-03-17,PowerNorm: Rethinking Batch Normalization in Transformers,https://arxiv.org/abs/2003.07845,60.0,SOTA improvement,"""The results are reported in Table 1. In the first section of
rows, we report state-of-the-art results for these two tasks with comparable model sizes""",85300000.0,,1.58e+18,,,,WikiText-103,,,,30.0,,,,,,"The standard normalization method for neural network (NN) models used in Natural Language Processing (NLP) is layer normalization (LN). This is different than batch normalization (BN), which is widely-adopted in Computer Vision. The preferred use of LN in NLP is principally due to the empirical observation that a (naive/vanilla) use of BN leads to significant performance degradation for NLP tasks; however, a thorough understanding of the underlying reasons for this is not always evident. In this paper, we perform a systematic study of NLP transformer models to understand why BN has a poor performance, as compared to LN. We find that the statistics of NLP data across the batch dimension exhibit large fluctuations throughout training. This results in instability, if BN is naively implemented. To address this, we propose Power Normalization (PN), a novel normalization scheme that resolves this issue by (i) relaxing zero-mean normalization in BN, (ii) incorporating a running quadratic mean instead of per batch statistics to stabilize fluctuations, and (iii) using an approximate backpropagation for incorporating the running statistics in the forward pass. We show theoretically, under mild assumptions, that PN leads to a smaller Lipschitz constant for the loss, compared with BN. Furthermore, we prove that the approximate backpropagation scheme leads to bounded gradients. We extensively test PN for transformers on a range of NLP tasks, and we show that it significantly outperforms both LN and BN. In particular, PN outperforms LN by 0.4/0.6 BLEU on IWSLT14/WMT14 and 5.6/3.0 PPL on PTB/WikiText-103. We make our code publicly available at \url{this https URL}.",Tensor-Transformer(1core)+PN (WT103),Open weights (unrestricted),,,2024-09-10 21:19:53+00:00,United States of America,,,,,,,,,
ProGen,Biology,"Salesforce Research,Stanford University","Industry,Academia","Ali Madani, Bryan McCann, Nikhil Naik, Nitish Shirish Keskar, Namrata Anand, Raphael R. Eguchi,  View ORCID ProfilePo-Ssu Huang, Richard Socher",2020-03-13,ProGen: Language Modeling for Protein Generation,https://www.biorxiv.org/content/10.1101/2020.03.07.982272v2,241.0,,,1200000000.0,"""We train a 1.2B-parameter language model, ProGen, on ∼280M protein sequences""",3.7e+20,,,"Our model was implemented in TensorFlow (Abadi et al.,
2016) and trained with a global batch size of 64 distributed
across 256 cores of a Cloud TPU v3 Pod for 1M iterations. Training took approximately two weeks using Adagrad (Duchi et al., 2011)

4.00E+12*256*60**2*24*14*0.3 = 3.7e20

7.6E+21 FLOPs from Table 9 https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1",,,1049000000000.0," 1,049B from Table 9 https://www.biorxiv.org/content/10.1101/2023.07.05.547496v1",5.0,,,,,Self-supervised learning,"Generative modeling for protein engineering is key to solving fundamental problems in synthetic biology, medicine, and material science. We pose protein engineering as an unsupervised sequence generation problem in order to leverage the exponentially growing set of proteins that lack costly, structural annotations. We train a 1.2B-parameter language model, ProGen, on ∼280M protein sequences conditioned on taxonomic and keyword tags such as molecular function and cellular component. This provides ProGen with an unprecedented range of evolutionary sequence diversity and allows it to generate with fine-grained control as demonstrated by metrics based on primary sequence similarity, secondary structure accuracy, and conformational energy.",,,,Likely,2025-02-19 17:55:13+00:00,"United States of America,United States of America",,,,,,,,,
Routing Transformer (WT-103),Language,Google Research,Industry,"Aurko Roy, Mohammad Saffar, Ashish Vaswani, David Grangier",2020-03-12,Efficient Content-Based Sparse Attention with Routing Transformers,https://arxiv.org/abs/2003.05997,519.0,SOTA improvement,"""Additionally, we set a new state-of-the-art on the newly released PG-19 data-set, obtaining a test perplexity of 33.2 with a 22 layer Routing Transformer model trained on sequences of length 8192""",79500000.0,,,,,,WikiText-103,,,,,,,,,,"Self-attention has recently been adopted for a wide range of sequence modeling problems. Despite its effectiveness, self-attention suffers from quadratic compute and memory requirements with respect to sequence length. Successful approaches to reduce this complexity focused on attending to local sliding windows or a small set of locations independent of content. Our work proposes to learn dynamic sparse attention patterns that avoid allocating computation and memory to attend to content unrelated to the query of interest. This work builds upon two lines of research: it combines the modeling flexibility of prior work on content-based sparse attention with the efficiency gains from approaches based on local, temporal sparse attention. Our model, the Routing Transformer, endows self-attention with a sparse routing module based on online k-means while reducing the overall complexity of attention to O(n1.5d) from O(n2d) for sequence length n and hidden dimension d. We show that our model outperforms comparable sparse attention models on language modeling on Wikitext-103 (15.8 vs 18.3 perplexity) as well as on image generation on ImageNet-64 (3.43 vs 3.44 bits/dim) while using fewer self-attention layers. Additionally, we set a new state-of-the-art on the newly released PG-19 data-set, obtaining a test perplexity of 33.2 with a 22 layer Routing Transformer model trained on sequences of length 8192.",Routing Transformer,Open weights (unrestricted),,,2024-11-01 14:03:32+00:00,"Multinational,United States of America",,,,,,,,,
TransformerXL + spectrum control,Language,"University of California Los Angeles (UCLA),JD.com","Academia,Industry","Lingxiao Wang, Jing Huang, Kevin Huang, Ziniu Hu, Guangtao Wang, Quanquan Gu",2020-03-11,Improving Neural Language Generation with Spectrum Control,https://openreview.net/forum?id=ByxY8CNtvr,80.0,SOTA improvement,"""We demonstrate that our spectrum control method outperforms the state-of-the-art Transformer-XL modeling for language model""",151000000.0,,4.6e+17,,,,WikiText-103,,,,250.0,,,,,,"Recent Transformer-based models such as Transformer-XL and BERT have achieved huge success on various natural language processing tasks. However, contextualized embeddings at the output layer of these powerful models tend to degenerate and occupy an anisotropic cone in the vector space, which is called the representation degeneration problem. In this paper, we propose a novel spectrum control approach to address this degeneration problem. The core idea of our method is to directly guide the spectra training of the output embedding matrix with a slow-decaying singular value prior distribution through a reparameterization framework. We show that our proposed method encourages isotropy of the learned word representations while maintains the modeling power of these contextual neural models. We further provide a theoretical analysis and insight on the benefit of modeling singular value distribution. We demonstrate that our spectrum control method outperforms the state-of-the-art Transformer-XL modeling for language model, and various Transformer-based models for machine translation, on common benchmark datasets for these tasks.",TransformerXL + spectrum control,Unreleased,,,2024-11-01 14:03:32+00:00,"United States of America,China",,,,,,,,,
MuPIPR,Biology,"University of California Los Angeles (UCLA),University of Pennsylvania","Academia,Academia","Guangyu Zhou, Muhao Chen, Chelsea J T Ju, Zheng Wang, Jyun-Yu Jiang, Wei Wang",2020-03-05,"Mutation effect estimation on protein–protein
interactions using deep contextualized representation
learning",https://academic.oup.com/nargab/article/2/2/lqaa015/5781175,65.0,,,,,,,,,,,21000001.00000001,"STRING Database: 66,235 sequences × 300 amino acids = 19,870,500 tokens
SKEMPI Dataset: 5,004 sequences × 300 amino acids = 1,501,200 tokens
Total = 19,870,500 + 1,501,200 = 21,371,700 tokens ≈ 2.1 × 10^7",,,,,,,"The functional impact of protein mutations is reflected on the alteration of conformation and thermodynamics of protein–protein interactions (PPIs). Quantifying the changes of two interacting proteins upon mutations is commonly carried out by computational approaches. Hence, extensive research efforts have been put to the extraction of energetic or structural features on proteins, followed by statistical learning methods to estimate the effects of mutations on PPI properties. Nonetheless, such features require extensive human labors and expert knowledge to obtain, and have limited abilities to reflect point mutations. We present an end-to-end deep learning framework, MuPIPR (Mutation Effects in Protein–protein Interaction PRediction Using Contextualized Representations), to estimate the effects of mutations on PPIs. MuPIPR incorporates a contextualized representation mechanism of amino acids to propagate the effects of a point mutation to surrounding amino acid representations, therefore amplifying the subtle change in a long protein sequence. On top of that, MuPIPR leverages a Siamese residual recurrent convolutional neural encoder to encode a wild-type protein pair and its mutation pair. Multi-layer perceptron regressors are applied to the protein pair representations to predict the quantifiable changes of PPI properties upon mutations. Experimental evaluations show that, with only sequence information, MuPIPR outperforms various state-of-the-art systems on estimating the changes of binding affinity for SKEMPI v1, and offers comparable performance on SKEMPI v2. Meanwhile, MuPIPR also demonstrates state-of-the-art performance on estimating the changes of buried surface areas. The software implementation is available at https://github.com/guangyu-zhou/MuPIPR.",,,,Unverified,2025-01-30 05:04:16+00:00,"United States of America,United States of America",,,,,,,,,
LSTM-3-layer+Gadam,Language,"University of Oxford,University of Bristol,University of Cambridge","Academia,Academia,Academia","Diego Granziol, Xingchen Wan, Samuel Albanie, Stephen Roberts",2020-03-02,Iterative Averaging in the Quest for Best Test Error,https://arxiv.org/abs/2003.01247,5.0,,,24000000.0,,2.68e+16,,,,,,,,200.0,,,,,,"We analyse and explain the increased generalisation performance of iterate averaging using a Gaussian process perturbation model between the true and batch risk surface on the high dimensional quadratic. We derive three phenomena \latestEdits{from our theoretical results:} (1) The importance of combining iterate averaging (IA) with large learning rates and regularisation for improved regularisation. (2) Justification for less frequent averaging. (3) That we expect adaptive gradient methods to work equally well, or better, with iterate averaging than their non-adaptive counterparts. Inspired by these results\latestEdits{, together with} empirical investigations of the importance of appropriate regularisation for the solution diversity of the iterates, we propose two adaptive algorithms with iterate averaging. These give significantly better results compared to stochastic gradient descent (SGD), require less tuning and do not require early stopping or validation set monitoring. We showcase the efficacy of our approach on the CIFAR-10/100, ImageNet and Penn Treebank datasets on a variety of modern and classical network architectures.",LSTM-3-layer+Gadam,Unreleased,,,2024-09-09 18:22:52+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
TCAN (WT2),Language,"Nanjing University,Ant Group","Academia,Industry","Hongyan Hao, Yan Wang, Yudi Xia, Jian Zhao, Furao Shen",2020-02-28,Temporal Convolutional Attention-based Network For Sequence Modeling,https://arxiv.org/abs/2002.12530,36.0,SOTA improvement,"""We improve the state-of-theart results of ... 9.20 on WikiText-2""",33000000.0,,,,,,WikiText-2,,,,,,,,,,"With the development of feed-forward models, the default model for sequence modeling has gradually evolved to replace recurrent networks. Many powerful feed-forward models based on convolutional networks and attention mechanism were proposed and show more potential to handle sequence modeling tasks. We wonder that is there an architecture that can not only achieve an approximate substitution of recurrent network, but also absorb the advantages of feed-forward models. So we propose an exploratory architecture referred to Temporal Convolutional Attention-based Network (TCAN) which combines temporal convolutional network and attention mechanism. TCAN includes two parts, one is Temporal Attention (TA) which captures relevant features inside the sequence, the other is Enhanced Residual (ER) which extracts shallow layer's important information and transfers to deep layers. We improve the state-of-the-art results of bpc/perplexity to 30.28 on word-level PTB, 1.092 on character-level PTB, and 9.20 on WikiText-2.",Temporal Convolutional Attention-based Network(TCAN) (WT2),Unreleased,,,2024-11-01 14:03:33+00:00,"China,China",,,,,,,,,
Feedback Transformer,Language,"LORIA,University of Lorraine,Facebook AI Research","Academia,Academia,Industry","Angela Fan, Thibaut Lavril, Edouard Grave, Armand Joulin, Sainbayar Sukhbaatar",2020-02-21,Addressing Some Limitations of Transformers with Feedback Memory,https://arxiv.org/abs/2002.09402,41.0,SOTA improvement,"""As shown in Table 4, the Feedback
Transformer model achieves a new SOTA performance (on Enwiki8) of 0.96 bit-per-byte despite its small size.""",126000000.0,,4.41e+19,,,,WikiText-103,,,,267.23,,,,,,"Transformers have been successfully applied to sequential, auto-regressive tasks despite being feedforward networks. Unlike recurrent neural networks, Transformers use attention to capture temporal relations while processing input tokens in parallel. While this parallelization makes them computationally efficient, it restricts the model from fully exploiting the sequential nature of the input. The representation at a given layer can only access representations from lower layers, rather than the higher level representations already available. In this work, we propose the Feedback Transformer architecture that exposes all previous representations to all future representations, meaning the lowest representation of the current timestep is formed from the highest-level abstract representation of the past. We demonstrate on a variety of benchmarks in language modeling, machine translation, and reinforcement learning that the increased representation capacity can create small, shallow models with much stronger performance than comparable Transformers.",Feedback Transformer,Unreleased,,,2024-09-09 18:24:53+00:00,"France,France,United States of America",,,,,,,,,
SimCLR,Vision,Google Brain,Industry,"Ting Chen, Simon Kornblith, Mohammad Norouzi, Geoffrey Hinton",2020-02-13,A Simple Framework for Contrastive Learning of Visual Representations,https://arxiv.org/abs/2002.05709,16017.0,Highly cited,,375000000.0,source: https://openai.com/blog/image-gpt/,,,,,ILSVRC 2012 subset of ImageNet,"""Dataset and Metrics. Most of our study for unsupervised
pretraining (learning encoder network f without labels) is done using the ImageNet ILSVRC-2012 dataset (Russakovsky et al., 2015). Some additional pretraining experiments on CIFAR-10 (Krizhevsky & Hinton, 2009) can be found in Appendix B.9.""",,,1000.0,,,Google TPU v3,,,"This paper presents SimCLR: a simple framework for contrastive learning of visual representations. We simplify recently proposed contrastive self-supervised learning algorithms without requiring specialized architectures or a memory bank. In order to understand what enables the contrastive prediction tasks to learn useful representations, we systematically study the major components of our framework. We show that (1) composition of data augmentations plays a critical role in defining effective predictive tasks, (2) introducing a learnable nonlinear transformation between the representation and the contrastive loss substantially improves the quality of the learned representations, and (3) contrastive learning benefits from larger batch sizes and more training steps compared to supervised learning. By combining these findings, we are able to considerably outperform previous methods for self-supervised and semi-supervised learning on ImageNet. A linear classifier trained on self-supervised representations learned by SimCLR achieves 76.5% top-1 accuracy, which is a 7% relative improvement over previous state-of-the-art, matching the performance of a supervised ResNet-50. When fine-tuned on only 1% of the labels, we achieve 85.8% top-5 accuracy, outperforming AlexNet with 100X fewer labels.",,Open weights (unrestricted),,,2025-02-03 20:06:47+00:00,United States of America,,,,,,,,,
Turing-NLG,Language,Microsoft,Industry,Corby Rosset,2020-02-13,Turing-NLG: A 17-billion-parameter language model by Microsoft,https://www.microsoft.com/en-us/research/blog/turing-nlg-a-17-billion-parameter-language-model-by-microsoft/,114.0,SOTA improvement,"from paper: ""Turing Natural Language Generation (T-NLG) is a 17 billion parameter language model by Microsoft that outperforms the state of the art on many downstream NLP tasks""",17000000000.0,,1.57e+22,,,"source: https://lair.lighton.ai/akronomicon/
157 PF-days * 3600 * 24 * 10^15  = 1.35648e+22

archived: https://github.com/lightonai/akronomicon/tree/main/akrodb

6ND=6*17000000000*46400000000=4.7328e+21 (confidence regarding dataset size - likely)",,,46400000000.0,"Authors say they pretrain on the same data as for Megatron-LM. 

From the Megatron-LM paper: https://arxiv.org/pdf/1909.08053.pdf

""The resulting aggregate corpus contains 174 GB of deduplicated text.""

174GB * 2e8words/GB = 3.48e10 words
3.48e10 words (if english) *4/3 = 46400000000 tokens

confidence - likely",3.39,,,NVIDIA Tesla V100 DGXS 32 GB,256.0,Self-supervised learning,"Turing Natural Language Generation (T-NLG) is a 17 billion parameter language model by Microsoft that outperforms the state of the art on many downstream NLP tasks. We present a demo of the model, including its freeform generation, question answering, and summarization capabilities, to academics for feedback and research purposes. <|endoftext|>",Turing-NLG,Unreleased,,Likely,2025-02-17 19:49:17+00:00,United States of America,,,,,,,524288.0,,
ALBERT-xxlarge,Language,"Toyota Technological Institute at Chicago,Google","Academia,Industry","Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, and Radu Soricut",2020-02-09,ALBERT: A Lite BERT for Self-supervised Learning of Language Representations.,https://arxiv.org/abs/1909.11942,5901.0,Highly cited,,235000000.0,,2.39e+21,,,"32 hours of training
512 TPU V3s
0.33 utilization rate
","Wikipedia,BookCorpus (BooksCorpus, Toronto Book Corpus)","""To keep the comparison as meaningful as possible, we follow the BERT (Devlin et al., 2019) setup in using the BOOKCORPUS (Zhu et al., 2015) and English Wikipedia (Devlin et al., 2019) for pretraining baseline models. These two corpora consist of around 16GB of uncompressed text. W""",3300000000.0,"Pretraining same as for BERT - Wikipedia and BookCorpus

""For the pre-training corpus we
use the BooksCorpus (800M words) (Zhu et al., 2015) and English Wikipedia (2,500M words)""",79.4,32.0,,Google TPU v3,512.0,Self-supervised learning,"Increasing model size when pretraining natural language representations often results in improved performance on downstream tasks. However, at some point further model increases become harder due to GPU/TPU memory limitations and longer training times. To address these problems, we present two parameter-reduction techniques to lower memory consumption and increase the training speed of BERT. Comprehensive empirical evidence shows that our proposed methods lead to models that scale much better compared to the original BERT. We also use a self-supervised loss that focuses on modeling inter-sentence coherence, and show it consistently helps downstream tasks with multi-sentence inputs. As a result, our best model establishes new state-of-the-art results on the GLUE, RACE, and \squad benchmarks while having fewer parameters compared to BERT-large. The code and the pretrained models are available at this https URL.",,Open weights (unrestricted),,,2025-02-13 20:35:34+00:00,"United States of America,United States of America",,,,,,,2097152.0,"Sequences are capped at 512 tokens; 10% of the time they'll use an input less than 512 long. Batches are over 4096 sequences. Tokens per batch: 2,097,152",
Perceiver IO (optical flow),"Multimodal,Language,Vision",DeepMind,Industry,"Andrew Jaegle, Sebastian Borgeaud, Jean-Baptiste Alayrac, Carl Doersch, Catalin Ionescu, David Ding, Skanda Koppula, Daniel Zoran, Andrew Brock, Evan Shelhamer, Olivier Hénaff,
Matthew M. Botvinick, Andrew Zisserman, Oriol Vinyals, João Carreira",2020-02-08,Perceiver IO: A General Architecture for Structured Inputs & Outputs,https://arxiv.org/abs/2107.14795,505.0,SOTA improvement,"""Perceiver IO... achieves state-of-the-art performance on Sintel optical flow estimation""",27900000.0,"Optical flow model (SOTA) was 27.9M params. There are other, larger models described in this paper, e.g. for language.

""For the pixel- and patch-based models, total computational
complexity for a forward pass on a 368 × 496 image is roughly 987 billion FLOPs, and there are
roughly 27.9 million parameters.""",,,,,AutoFlow,"""In all cases, we train on the AutoFlow dataset (Sun et al., 2021), which consists of 400, 000 image pairs, for 480 epochs using a cosine learning rate schedule which starts at a learning rate of 4e-4.
We use a batch size of 512. We use the LAMB (You et al., 2021) optimizer.""",,,480.0,,,,,,"A central goal of machine learning is the development of systems that can solve many problems in as many data domains as possible. Current architectures, however, cannot be applied beyond a small set of stereotyped settings, as they bake in domain & task assumptions or scale poorly to large inputs or outputs. In this work, we propose Perceiver IO, a general-purpose architecture that handles data from arbitrary settings while scaling linearly with the size of inputs and outputs. Our model augments the Perceiver with a flexible querying mechanism that enables outputs of various sizes and semantics, doing away with the need for task-specific architecture engineering. The same architecture achieves strong results on tasks spanning natural language and visual understanding, multi-task and multi-modal reasoning, and StarCraft II. As highlights, Perceiver IO outperforms a Transformer-based BERT baseline on the GLUE language benchmark despite removing input tokenization and achieves state-of-the-art performance on Sintel optical flow estimation with no explicit mechanisms for multiscale correspondence.",,Unreleased,,,2025-02-03 20:13:00+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
TaLK Convolution,Language,Carleton University,Academia,"Vasileios Lioutas, Yuhong Guo",2020-02-08,Time-aware Large Kernel Convolutions,https://arxiv.org/abs/2002.03184,28.0,SOTA improvement,"""[We] set a new state-of-the-art result on the
IWSLT De-En and CNN-DailyMail datasets""",240000000.0,Table 5,2.78e+19,,,,WikiText-103,,,,187.43,,,,,,"To date, most state-of-the-art sequence modeling architectures use attention to build generative models for language based tasks. Some of these models use all the available sequence tokens to generate an attention distribution which results in time complexity of O(n2). Alternatively, they utilize depthwise convolutions with softmax normalized kernels of size k acting as a limited-window self-attention, resulting in time complexity of O(k⋅n). In this paper, we introduce Time-aware Large Kernel (TaLK) Convolutions, a novel adaptive convolution operation that learns to predict the size of a summation kernel instead of using a fixed-sized kernel matrix. This method yields a time complexity of O(n), effectively making the sequence encoding process linear to the number of tokens. We evaluate the proposed method on large-scale standard machine translation, abstractive summarization and language modeling datasets and show that TaLK Convolutions constitute an efficient improvement over other attention/convolution based approaches.",TaLK Convolution,Unreleased,,,2024-09-10 19:55:17+00:00,Canada,,,,,,,,,
Theseus 6/768,Language,"University of California San Diego,Beihang University,Microsoft","Academia,Academia,Industry","Canwen Xu, Wangchunshu Zhou, Tao Ge, Furu Wei, Ming Zhou",2020-02-07,BERT-of-Theseus: Compressing BERT by Progressive Module Replacing,https://arxiv.org/abs/2002.02925,188.0,SOTA improvement,"""Our approach outperforms existing knowledge distillation approaches on GLUE benchmark""",66000000.0,"66M, Table 1",,,,,GLUE,"fine-tuned on training sets from GLUE benchmark:

""We test our approach under a task-specific compression setting (Sun et al., 2019; Turc et al., 2019)
instead of a pretraining compression setting (Sanh
et al., 2019; Sun et al., 2020). That is to say, we use
no external unlabeled corpus but only the training set of each task in GLUE to compress the
model. """,,,,,,NVIDIA V100,,,,,Open weights (unrestricted),,,2024-11-01 14:03:32+00:00,"United States of America,China,United States of America",BERT-Large,2.7e+18,"Actually BERT-base, 110M params. Up to 20 V100-hours depending on task. 

125 trillion * 20 * 3600 * 0.3 (utilization assumption) = 2.7e18",,,,,,
Meena,Language,Google Brain,Industry,"Dongling Xiao, Han Zhang, Yukun Li, Yu Sun, Hao Tian, Hua Wu, Haifeng Wang",2020-01-28,Towards a Human-like Open-Domain Chatbot,https://arxiv.org/abs/2001.09977,879.0,SOTA improvement,"""We also propose a human evaluation metric called Sensibleness and
Specificity Average (SSA)... the full version of Meena (with a filtering mechanism and tuned decoding) scores 79% SSA, 23% higher in absolute SSA than the existing chatbots we evaluated""",2600000000.0,"""We present Meena, a multi-turn open-domain chatbot trained end-to-end on data mined and filtered from public domain social media conversations. This 2.6B parameter neural network is simply trained to minimize perplexity of the next token.""",1.12e+23,,,"https://arxiv.org/ftp/arxiv/papers/2104/2104.10350.pdf
Table 4

In the paper: ""We trained our best model for 30 days on a TPUv3 Pod (2,048 TPU cores) on the Meena dataset containing 40B words (or 61B BPE tokens) [...] by the end of training, the model had traversed the full
training set 164 times (or epochs) and observed a total of about 10T tokens""

Hardware: 30 * 24 * 3600 * (2048/2) * 1.23e14 * 0.3 = 9.794e22
Ops counting: 6 * 10T * 2.6B = 1.56E23
Geometric mean: sqrt(9.79e22*1.56E23) = 1.24e23, very close to the figure in the link above.",,,40000000000.0,"""The final Meena dataset contains 341GB of text
(40B words)""

Converting from GB to words yields 6.8e10, which is in the same OOM",164.0,720.0,"We trained our best model for 30 days on a TPUv3 Pod (2,048 TPU cores)",Google TPU v3,1024.0,Self-supervised learning,"We present Meena, a multi-turn open-domain chatbot trained end-to-end on data mined and filtered from public domain social media conversations. This 2.6B parameter neural network is simply trained to minimize perplexity of the next token. We also propose a human evaluation metric called Sensibleness and Specificity Average (SSA), which captures key elements of a human-like multi-turn conversation. Our experiments show strong correlation between perplexity and SSA. The fact that the best perplexity end-to-end trained Meena scores high on SSA (72% on multi-turn evaluation) suggests that a human-level SSA of 86% is potentially within reach if we can better optimize perplexity. Additionally, the full version of Meena (with a filtering mechanism and tuned decoding) scores 79% SSA, 23% higher in absolute SSA than the existing chatbots we evaluated.",,Unreleased,0.34306622,Confident,2025-02-17 19:48:56+00:00,United States of America,,,,,,,82655.0,"61B tokens over 738k training steps, or 82655 tokens per batch on average. Not certain about warmup, etc",
ContextNet + Noisy Student,Speech,Google,Industry,"Daniel S. Park, Yu Zhang, Ye Jia, Wei Han, Chung-Cheng Chiu, Bo Li, Yonghui Wu, Quoc V. Le",2020-01-19,Improved Noisy Student Training for Automatic Speech Recognition,https://arxiv.org/abs/2005.09629v2,225.0,SOTA improvement,"""We are thus able to improve upon the previous state-of-the-art clean/noisy test WERs achieved on LibriSpeech 100h (4.74%/12.20%) and LibriSpeech (1.9%/4.1%)""",,,8.16e+21,,,"""We train 6 generations of models numbered 0 to 5, where
we count the baseline model trained with the supervised set
as the zeroth generation. Each generation is trained ... on 32 Google
Cloud TPU chips for 10 days.""

The TPU version is likely v3 given this is a 2020 paper.

we get 6 * 10 * 24 * 3600 * 32 * 123 tflops * 0.4  (assumed utilization) = 8.16e21","LibriSpeech,LibriLight","""LibriSpeech 100-860 is a semi-supervised task where the clean 100h subset of LibriSpeech [6] is taken to be the supervised set, while the remaining 860h of audio is taken to be the unlabeled set. The unlabeled audio consists of 360h of clean data and 500h of noisy data. We tokenize the transcripts using a WPM model [37] with vocabulary size 16k constructed from the clean 100h subset transcripts.""

Inputs are mel-spectrograms, but unclear the duration of each.",,,,1440.0,roughly 10 days,Google TPU v3,,,"Recently, a semi-supervised learning method known as ""noisy student training"" has been shown to improve image classification performance of deep networks significantly. Noisy student training is an iterative self-training method that leverages augmentation to improve network performance. In this work, we adapt and improve noisy student training for automatic speech recognition, employing (adaptive) SpecAugment as the augmentation method. We find effective methods to filter, balance and augment the data generated in between self-training iterations. By doing so, we are able to obtain word error rates (WERs) 4.2%/8.6% on the clean/noisy LibriSpeech test sets by only using the clean 100h subset of LibriSpeech as the supervised set and the rest (860h) as the unlabeled set. Furthermore, we are able to achieve WERs 1.7%/3.4% on the clean/noisy LibriSpeech test sets by using the unlab-60k subset of LibriLight as the unlabeled set for LibriSpeech 960h. We are thus able to improve upon the previous state-of-the-art clean/noisy test WERs achieved on LibriSpeech 100h (4.74%/12.20%) and LibriSpeech (1.9%/4.1%).",,Unreleased,,Confident,2025-02-17 17:24:01+00:00,United States of America,,,,,,,,,
AlphaFold,Biology,DeepMind,Industry,"Andrew W. Senior, Richard Evans, John Jumper, James Kirkpatrick, Laurent Sifre, Tim Green, Chongli Qin, Augustin Žídek, Alexander W. R. Nelson, Alex Bridgland, Hugo Penedones, Stig Petersen, Karen Simonyan, Steve Crossan, Pushmeet Kohli, David T. Jones, David Silver, Koray Kavukcuoglu, Demis Hassabis",2020-01-15,Improved protein structure prediction using potentials from deep learning,https://www.nature.com/articles/s41586-019-1923-7,2773.0,"SOTA improvement,Highly cited","""AlphaFold represents a considerable advance
in protein-structure prediction."" [Abstract]",16340840.0,"""Neural network hyperparameters"" section of https://www.nature.com/articles/s41586-019-1923-7:
“7 × 4 Blocks with 256 channels, cycling through dilations 1, 2, 4, 8”
“48 × 4 Blocks with 128 channels, cycling through dilations 1, 2, 4, 8”

""Distogram prediction"" section:
""For the final layer, a position-specific bias was used""

Extended Data Fig.1 (b): 
Shows that each block consists of 9 layers:
(1) Batch norm
(2) Elu
(3) Project down (halves number of dimensions)
(4) Batch norm
(5) Elu
(6) 3x3 kernel with dilation
(7) Batch norm
(8) Elu
(9) Project up (doubles number of dimensions)

Dilations don't change the number of parameters in each filter
Assuming that projection layers are convolutional layers with 1x1 kernels

Parameter estimate for each layer in a 256 channel block:
(1) 256*2            = 512
(2) 0
(3) 1*1*256*128 = 32768
(4) 128*2            = 256 
(5) 0
(6) 3*3*128*128 = 147456
(7) 128*2            = 256 
(8) 0
(9) 1*1*128*256 + 256 = 33024
Total                             = 214272

Parameter estimate for each layer in a 128 channel block:
(1) 128*2            = 256
(2) 0
(3) 1*1*128*64   = 8192
(4) 64*2              = 128
(5) 0
(6) 3*3*64*64     = 36864
(7) 64*2              = 128
(8) 0
(9) 1*1*64*128 + 128 = 8320
Total                   = 53897

Estimate total network = 7*4*214272 + 48*4*53897 = 5992616 + 10348224
                                     = 16340840
                                     ~ 16e6

Within a factor of 2 of the estimate of 21M parameters stated in: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7305407/

[Previous approximation: 7 * 4 * 256 * 3 * 3 * 256 + 48 * 4 * 128 * 3 * 3 * 128 = 44826624]",1e+20,,,"Estimated in the blogpost below

https://www.lesswrong.com/posts/wfpdejMWog4vEDLDg/ai-and-compute-trend-isn-t-predictive-of-what-is-happening

""AlphaFold: they say they trained on GPU and not TPU. Assuming V100 GPU, it's 5 days * 24 hours/day * 3600 sec/hour * 8 V100 GPU * 100*10^12 FLOP/s * 33% actual GPU utilization = 10^20 FLOP.""","PDB (Protein Data Bank),UniRef30 (FKA UniClust30)","""Our models are trained on structures extracted from the PDB"" [""Data"" section]

""For each training sequence, we searched for and aligned to the training sequence similar protein sequences in the Uniclust3035 dataset"" [""Data"" section]",300000000.99999946,"Training Domains: 29,427
Average Residues per Domain: 100
Data Points per Domain: 100 × 100 = 10,000
Total Data Points = 29,427 × 10,000 = 294,270,000 ≈ 3.0 × 10⁸",,120.0,"""Training time: about 5 days for 600,000 steps""",,,Self-supervised learning,"Protein structure prediction can be used to determine the three-dimensional shape of a protein from its amino acid sequence. This problem is of fundamental importance as the structure of a protein largely determines its function; however, protein structures can be difficult to determine experimentally. Considerable progress has recently been made by leveraging genetic information. It is possible to infer which amino acid residues are in contact by analysing covariation in homologous sequences, which aids in the prediction of protein structures. Here we show that we can train a neural network to make accurate predictions of the distances between pairs of residues, which convey more information about the structure than contact predictions. Using this information, we construct a potential of mean force that can accurately describe the shape of a protein. We find that the resulting potential can be optimized by a simple gradient descent algorithm to generate structures without complex sampling procedures. The resulting system, named AlphaFold, achieves high accuracy, even for sequences with fewer homologous sequences. In the recent Critical Assessment of Protein Structure Prediction (CASP13)—a blind assessment of the state of the field—AlphaFold created high-accuracy structures (with template modelling (TM) scores of 0.7 or higher) for 24 out of 43 free modelling domains, whereas the next best method, which used sampling and contact information, achieved such accuracy for only 14 out of 43 domains. AlphaFold represents a considerable advance in protein-structure prediction. We expect this increased accuracy to enable insights into the function and malfunction of proteins, especially in cases for which no structures for homologous proteins have been experimentally determined.",,Unreleased,,Speculative,2025-02-17 20:03:18+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
"MicroNet (Adaptive, Cache)",Language,"Massachusetts Institute of Technology (MIT),Harvard University","Academia,Academia","Zhongxia Yan, Hanrui Wang, Demi Guo, Song Han",2020-01-01,MicroNet for Efficient Language Modeling,http://proceedings.mlr.press/v123/yan20a.html?ref=https://githubhelp.com,8.0,,,8300000.000000001,,,,,,WikiText-103,,,,,,,,,,"It is important to design compact language models for efficient deployment. We improve upon recent advances in both the language modeling domain and the model-compression domain to construct parameter and computation efficient language models. We use an efficient transformer-based architecture with adaptive embedding and softmax, differentiable non-parametric cache, Hebbian softmax, knowledge distillation, network pruning, and low-bit quantization. In this paper, we provide the winning solution to the NeurIPS 2019 MicroNet Challenge in the language modeling track. Compared to the baseline language model provided by the MicroNet Challenge, our model is 90 times more parameter-efficient and 36 times more computation-efficient while achieving the required test perplexity of 35 on the Wikitext-103 dataset. We hope that this work will aid future research into efficient language models, and we have released our full source code at {https://github.com/mit-han-lab/neurips-micronet}.","MicroNet (Adaptive, Cache)",Open weights (unrestricted),,,2024-09-09 18:27:32+00:00,"United States of America,United States of America",,,,,,,,,
Big Transfer (BiT-L),Vision,Google Brain,Industry,"A Kolesnikov, L Beyer, X Zhai, J Puigcerver, J Yung",2019-12-24,Large scale learning of general visual representations for transfer,https://arxiv.org/abs/1912.11370,1098.0,SOTA improvement,"""We transfer BiT to many diverse tasks... These tasks include ImageNet’s ILSVRC-2012 [10], CIFAR-10/100 [27], Oxford-IIIT Pet [41], Oxford
Flowers-102 [39] (including few-shot variants), and the 1000-sample VTAB-1k benchmark [66], which consists of 19 diverse datasets. BiT-L attains state-ofthe-art performance on many of these tasks",928000000.0,,,,,,JFT-300M,"""We train networks on three different scales of datasets. The largest, BiT-L
is trained on the JFT-300M dataset [51], which contains 300 M noisily labelled images""",,,40.0,,,Google TPU v3,,,"Transfer of pre-trained representations improves sample efficiency and simplifies hyperparameter tuning when training deep neural networks for vision. We revisit the paradigm of pre-training on large supervised datasets and fine-tuning the model on a target task. We scale up pre-training, and propose a simple recipe that we call Big Transfer (BiT). By combining a few carefully selected components, and transferring using a simple heuristic, we achieve strong performance on over 20 datasets. BiT performs well across a surprisingly wide range of data regimes -- from 1 example per class to 1M total examples. BiT achieves 87.5% top-1 accuracy on ILSVRC-2012, 99.4% on CIFAR-10, and 76.3% on the 19 task Visual Task Adaptation Benchmark (VTAB). On small datasets, BiT attains 76.8% on ILSVRC-2012 with 10 examples per class, and 97.0% on CIFAR-10 with 10 examples per class. We conduct detailed analysis of the main components that lead to high transfer performance.",,Unreleased,,,2024-11-01 14:03:15+00:00,United States of America,,,,,,,,,
DD-PPO,Robotics,"Georgia Institute of Technology,Facebook AI Research,Oregon State University,Simon Fraser University","Academia,Industry,Academia,Academia","Erik Wijmans, Abhishek Kadian, Ari Morcos, Stefan Lee, Irfan Essa, Devi Parikh, Manolis Savva, Dhruv Batra",2019-12-19,DD-PPO: Learning Near-Perfect PointGoal Navigators from 2.5 Billion Frames,https://openreview.net/forum?id=H1gX8C4YPr,411.0,SOTA improvement,"""This agent achieves state-of-art on the Habitat Challenge 2019 RGB track (rank 2 entry has 0.89 SPL).""",,"no parameter count but some architecture details: ""The policy is parameterized by a 2-layer LSTM with a 512-dimensional hidden state. It takes three inputs: the previous action, the target relative to the current state, and the output of the visual encoder. The LSTM’s output is used to produce a softmax distribution over the action space and an estimate of the value function. See Appendix C for full details.""",7.8e+20,,,"""Using DD-PPO, we train agents for 2.5 Billion steps of experience with 64 Tesla V100 GPUs in 2.75 days – 180 GPU-days of training""

125 teraFLOP/s (exact V100 model not specified) * 180 * 24 * 3600 * 0.4 (assumed utilization) = 7.8e20",,"""We experiment with several different sources of data. First, we utilize the training data released
as part of the Habitat Challenge 2019, consisting of 72 scenes from the Gibson dataset (Xia et al.,
2018). We then augment this with all 90 scenes in the Matterport3D dataset (Chang et al., 2017) to
create a larger training set (note that Matterport3D meshes tend to be larger and of better quality).2
Furthermore, Savva et al. (2019) curated the Gibson dataset by rating every mesh reconstruction on
a quality scale of 0 to 5 and then filtered all splits such that each only contains scenes with a rating of
4 or above (Gibson-4+), leaving all scenes with a lower rating previously unexplored. We examine
training on the 332 scenes from the original train split with a rating of 2 or above (Gibson-2+).""",,,,66.0,2.75 days,NVIDIA V100,64.0,Reinforcement learning,"We present Decentralized Distributed Proximal Policy Optimization (DD-PPO), a method for distributed reinforcement learning in resource-intensive simulated environments. DD-PPO is distributed (uses multiple machines), decentralized (lacks a centralized server), and synchronous (no computation is ever ""stale""), making it conceptually simple and easy to implement. In our experiments on training virtual robots to navigate in Habitat-Sim, DD-PPO exhibits near-linear scaling -- achieving a speedup of 107x on 128 GPUs over a serial implementation. We leverage this scaling to train an agent for 2.5 Billion steps of experience (the equivalent of 80 years of human experience) -- over 6 months of GPU-time training in under 3 days of wall-clock time with 64 GPUs. ",,Unreleased,,Likely,2025-02-17 17:24:07+00:00,"United States of America,United States of America,United States of America,Canada",,,,,,,,,
SeqVec,Biology,Technical University of Munich,Academia,"Michael Heinzinger, Ahmed Elnaggar, Yu Wang, Christian Dallago, Dmitrii Nechaev, Florian Matthes & Burkhard Rost ",2019-12-17,Modeling aspects of the language of life through transfer-learning protein sequences,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-019-3220-8,,,,93000000.0,"""The model had about 93 M (mega/million) free parameters""",4.1e+19,,,"3 weeks, 5 NVIDIA Titan GPUs (Assuming NVIDIA Titan V and 30% utilization rate for calculation) with 12 GB memory, ",UniRef50,UniRef50,9500000000.0,"""We found UniRef50 to contain almost ten times more tokens (9.5 billion amino acids) than the largest existing NLP corpus (1 billion words)""
Elsewhere notes 9.6B, possibly one figure is rounded.",,508.0,,NVIDIA Titan V,5.0,,"Background
Predicting protein function and structure from sequence is one important challenge for computational biology. For 26 years, most state-of-the-art approaches combined machine learning and evolutionary information. However, for some applications retrieving related proteins is becoming too time-consuming. Additionally, evolutionary information is less powerful for small families, e.g. for proteins from the Dark Proteome. Both these problems are addressed by the new methodology introduced here.
Results
We introduced a novel way to represent protein sequences as continuous vectors (embeddings) by using the language model ELMo taken from natural language processing. By modeling protein sequences, ELMo effectively captured the biophysical properties of the language of life from unlabeled big data (UniRef50). We refer to these new embeddings as SeqVec (Sequence-to-Vector) and demonstrate their effectiveness by training simple neural networks for two different tasks. At the per-residue level, secondary structure (Q3 = 79% ± 1, Q8 = 68% ± 1) and regions with intrinsic disorder (MCC = 0.59 ± 0.03) were predicted significantly better than through one-hot encoding or through Word2vec-like approaches. At the per-protein level, subcellular localization was predicted in ten classes (Q10 = 68% ± 1) and membrane-bound were distinguished from water-soluble proteins (Q2 = 87% ± 1). Although SeqVec embeddings generated the best predictions from single sequences, no solution improved over the best existing method using evolutionary information. Nevertheless, our approach improved over some popular methods using evolutionary information and for some proteins even did beat the best. Thus, they prove to condense the underlying principles of protein sequences. Overall, the important novelty is speed: where the lightning-fast HHblits needed on average about two minutes to generate the evolutionary information for a target protein, SeqVec created embeddings on average in 0.03 s. As this speed-up is independent of the size of growing sequence databases, SeqVec provides a highly scalable approach for the analysis of big data in proteomics, i.e. microbiome or metaproteome analysis.
Conclusion
Transfer-learning succeeded to extract information from unlabeled sequence databases relevant for various protein prediction tasks. SeqVec modeled the language of life, namely the principles underlying protein sequences better than any features suggested by textbooks and prediction methods. The exception is evolutionary information, however, that information is not available on the level of a single sequence.",,Open weights (unrestricted),,Confident,2025-02-17 17:24:11+00:00,Germany,,,,,,,,,
OpenAI Five,Games,OpenAI,Industry,"Christopher Berner, Greg Brockman, Brooke Chan, Vicki Cheung, Przemysław Dębiak, Christy Dennison, David Farhi, Quirin Fischer, Shariq Hashme, Chris Hesse, Rafal Józefowicz, Scott Gray, Catherine Olsson, Jakub Pachocki, Michael Petrov, Henrique P. d.O. Pinto, Jonathan Raiman, Tim Salimans, Jeremy Schlatter, Jonas Schneider, Szymon Sidor, Ilya Sutskever, Jie Tang, Filip Wolski, Susan Zhang",2019-12-13,Dota 2 with Large Scale Deep Reinforcement Learning,https://arxiv.org/abs/1912.06680,1629.0,"Highly cited,SOTA improvement","""On April 13th, 2019, OpenAI Five became the first AI system to defeat the world champions at an esports game.""",159000000.0,"""We define a policy (π) as a function from the history of observations to a probability distribution over actions, which we parameterize as a recurrent neural network with approximately 159 million parameters (θ)."" pg. 3 of paper

source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",6.7e+22,,,"""770±50 PFlops/s·days of compute"" for the model that played against world champions. They did a single training run that took 10 months.

While the model was playing against world champions, they continued training for a few days, so that the resulting model used even more training compute: 820±50 PFlops/s·days.

Finally, they also trained a Rerun model with 150±5 PFlops/s·days of compute.

Source: Dota 2 with Large Scale Deep Reinforcement Learning
https://arxiv.org/abs/1912.06680

You cannot multiply the hardware quantity by training time to get the quantity of GPU-hours! Page 5: "" the number of GPUs (up to 1536 at the peak)""

From this NVIDIA blogpost, it appears they were using P100s:
https://developer.nvidia.com/blog/ai-learns-to-play-dota-2-with-human-precision/#:~:text=AI%20Learns%20to%20Play%20Dota,The%20neural",,,454321373184.0,"""Although the Dota 2 engine runs at 30 frames per second, OpenAI Five only acts on every 4th
frame which we call a timestep""
--> 7.5 timesteps/s

""OpenAI Five is a single training run that ran from June 30th, 2018 to April 22nd, 2019. "" --> 296 days

296 * 24*3600 * 7.5 = 1.92e8

This number seems a little low? The DQN paper had 1e7 timesteps. Might be to do with sample efficiency?

EDIT 14/06/2022
Multiple copies of OpenAI Five were trained in parallel, so the total training time is much higher than 296 days.
Table 1 shows 220,000 GPU iterations, each iteration has a batch size of between 1M and 3M timesteps (Table 2), so the total number of episodes is on the order of 2e11",,7104.0,"""OpenAI Five is a single training run that ran from June 30th, 2018 to April 22nd, 2019. "" --> 296 days",NVIDIA P100,1536.0,Self-supervised learning,"On April 13th, 2019, OpenAI Five became the first AI system to defeat the world champions at an esports game. The game of Dota 2 presents novel challenges for AI systems such as long time horizons, imperfect information, and complex, continuous state-action spaces, all challenges which will become increasingly central to more capable AI systems. OpenAI Five leveraged existing reinforcement learning techniques, scaled to learn from batches of approximately 2 million frames every 2 seconds. We developed a distributed training system and tools for continual training which allowed us to train OpenAI Five for 10 months. By defeating the Dota 2 world champion (Team OG), OpenAI Five demonstrates that self-play reinforcement learning can achieve superhuman performance on a difficult task.
",,Unreleased,,Confident,2025-03-01 00:45:58+00:00,United States of America,,,,,,,,,
OpenAI Five Rerun,Games,OpenAI,Industry,"Christopher Berner, Greg Brockman, Brooke Chan, Vicki Cheung,
Przemysław “Psyho"" Dębiak, Christy Dennison, David Farhi, Quirin Fischer, Shariq Hashme, Chris Hesse, Rafal Józefowicz, Scott Gray, Catherine Olsson, Jakub Pachocki, Michael Petrov, Henrique Pondé de Oliveira Pinto, Jonathan Raiman, Tim Salimans, Jeremy Schlatter, Jonas Schneider, Szymon Sidor, Ilya Sutskever, Jie Tang, Filip Wolski, Susan Zhang",2019-12-13,Dota 2 with Large Scale Deep Reinforcement Learning,https://cdn.openai.com/dota-2.pdf,1629.0,"Highly cited,SOTA improvement","""On April 13th, 2019, OpenAI Five became the first AI system to defeat the world champions at an esports game.""",159000000.0,"""We define a policy (π) as a function from the history of observations to a probability distribution
over actions, which we parameterize as a recurrent neural network with approximately 159 million
parameters (θ)."" pg. 3 of paper

source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",1.3e+22,,,"THIS CALCULATION IS FOR RERUN

source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",,,53084160000.0,"54k iterations (Fig 7)
with a batch size of 983040 (Table 2)",,,,NVIDIA P100,512.0,Self-supervised learning,"On April 13th, 2019, OpenAI Five became the first AI system to defeat the world champions at an esports game. The game of Dota 2 presents novel challenges for AI systems such as long time horizons, imperfect information, and complex, continuous state-action spaces, all challenges which will become increasingly central to more capable AI systems. OpenAI Five leveraged existing reinforcement learning techniques, scaled to learn from batches of approximately 2 million frames every 2 seconds. We developed a distributed training system and tools for continual training which allowed us to train OpenAI Five for 10 months. By defeating the Dota 2 world champion (Team OG), OpenAI Five demonstrates that self-play reinforcement learning can achieve superhuman performance on a difficult task.",,Unreleased,,,2025-03-01 00:32:46+00:00,United States of America,,,,,,,,,
MMLSTM,Language,"Beijing University of Posts and Telecommunications,University of West London","Academia,Academia","Kai Shuang, Rui Li, Mengyu Gu, Jonathan Loo, Sen Su",2019-12-05,Major–Minor Long Short-Term Memory for Word-Level Language Model,http://repository.uwl.ac.uk/id/eprint/6490/1/Loo_etal_IEEE_TNNLS_2019_Major-minor_long_short-term_memory_for_word-level_language_model.pdf,17.0,SOTA improvement,"""In experiments, we demonstrate the language model with MMLSTMs surpasses the existing state-of-the-art model on Penn Treebank (PTB) and WikiText-2 (WT2) datasets""",75000000.0,,2.32e+18,,,,WikiText-103,,,,50.0,,,,,,"Abstract—Language model plays an important role in natural
language processing (NLP) systems like machine translation,
speech recognition, learning token embeddings, natural language
generation and text classification. Recently, the multi-layer Long
Short-Term Memory (LSTM) models have been demonstrated to
achieve promising performance on word-level language modeling.
For each LSTM layer, larger hidden size usually means more
diverse semantic features, which enables the language model to
perform better. However, we have observed that when a certain
LSTM layer reaches a sufficiently large scale, the promotion
of overall effect will slow down as its hidden size increases. In
this paper, we analyze that an important factor leading to this
phenomenon is the high correlation between the newly extended
hidden states and original hidden states, which hinders diverse
feature expression of the LSTM. As a result, when the scale
is large enough, simply lengthening the LSTM hidden states
will cost tremendous extra parameters but has little effect. We
propose a simple yet effective improvement on each LSTM
layer consisting of a large-scale Major LSTM and a smallscale Minor LSTM to break the high correlation between the
two parts of hidden states, which we call Major-Minor LSTMs
(MMLSTMs). In experiments, we demonstrate the language
model with MMLSTMs surpasses the existing state-of-the-art
model on Penn Treebank (PTB) and WikiText-2 (WT2) datasets,
and outperforms the baseline by 3.3 points in perplexity on
WikiText-103 dataset without increasing model parameter counts.",MMLSTM,Unreleased,,,2024-11-01 14:03:15+00:00,"China,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
StarGAN v2,"Vision,Image generation","NAVER,Yonsei University,Swiss Federal Institute of Technology","Industry,Academia,Academia","Yunjey Choi, Youngjung Uh, Jaejun Yoo, Jung-Woo Ha",2019-12-04,StarGAN v2: Diverse Image Synthesis for Multiple Domains,https://arxiv.org/abs/1912.01865,1560.0,"Highly cited,SOTA improvement","""Votes from AMT workers for the most preferred method
regarding visual quality and style reflection (%). StarGAN v2 outperforms the baselines with remarkable margins in all aspects.""",,,,,,,"CelebA,AFHQ","""Datasets. We evaluate StarGAN v2 on CelebA-HQ [21] and our new AFHQ dataset (Appendix A)""",,,,,,,,,"A good image-to-image translation model should learn a mapping between different visual domains while satisfying the following properties: 1) diversity of generated images and 2) scalability over multiple domains. Existing methods address either of the issues, having limited diversity or multiple models for all domains. We propose StarGAN v2, a single framework that tackles both and shows significantly improved results over the baselines. Experiments on CelebA-HQ and a new animal faces dataset (AFHQ) validate our superiority in terms of visual quality, diversity, and scalability. To better assess image-to-image translation models, we release AFHQ, high-quality animal faces with large inter- and intra-domain differences. The code, pretrained models, and dataset can be found at this https URL.",,Open weights (non-commercial),,Unknown,2025-02-03 20:25:33+00:00,"Korea (Republic of),Korea (Republic of),Switzerland",,,,,,,,,
bRSM + cache,Language,"Numenta,Incubator 491",Industry,"Jeremy Gordon, David Rawlinson, Subutai Ahmad",2019-12-02,Long Distance Relationships without Time Travel: Boosting the Performance of a Sparse Predictive Autoencoder in Sequence Modeling,https://arxiv.org/abs/1912.01116,4.0,,,2550000.0,,213000000000000.0,,,,Penn TreeBank,,,,15.0,,,,,,"In sequence learning tasks such as language modelling, Recurrent Neural Networks must learn relationships between input features separated by time. State of the art models such as LSTM and Transformer are trained by backpropagation of losses into prior hidden states and inputs held in memory. This allows gradients to flow from present to past and effectively learn with perfect hindsight, but at a significant memory cost. In this paper we show that it is possible to train high performance recurrent networks using information that is local in time, and thereby achieve a significantly reduced memory footprint. We describe a predictive autoencoder called bRSM featuring recurrent connections, sparse activations, and a boosting rule for improved cell utilization. The architecture demonstrates near optimal performance on a non-deterministic (stochastic) partially-observable sequence learning task consisting of high-Markov-order sequences of MNIST digits. We find that this model learns these sequences faster and more completely than an LSTM, and offer several possible explanations why the LSTM architecture might struggle with the partially observable sequence structure in this task. We also apply our model to a next word prediction task on the Penn Treebank (PTB) dataset. We show that a 'flattened' RSM network, when paired with a modern semantic word embedding and the addition of boosting, achieves 103.5 PPL (a 20-point improvement over the best N-gram models), beating ordinary RNNs trained with BPTT and approaching the scores of early LSTM implementations. This work provides encouraging evidence that strong results on challenging tasks such as language modelling may be possible using less memory intensive, biologically-plausible training regimes",bRSM + cache,Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Transformer-XL DeFINE (141M),Language,"University of Washington,Allen Institute for AI","Academia,Research collective","Sachin Mehta, Rik Koncel-Kedziorski, Mohammad Rastegari, Hannaneh Hajishirzi",2019-11-27,DeFINE: DEep Factorized INput Token Embeddings for Neural Sequence Modeling,https://arxiv.org/abs/1911.12385,22.0,SOTA improvement,"""Compared to state-of-the-art methods including adaptive input representations,
this technique results in a 6% to 20% drop in perplexity""",141000000.0,,6.2e+18,,,,"WikiText-103,Penn TreeBank",,,,20.0,,,,,,"For sequence models with large vocabularies, a majority of network parameters lie in the input and output layers. In this work, we describe a new method, DeFINE, for learning deep token representations efficiently. Our architecture uses a hierarchical structure with novel skip-connections which allows for the use of low dimensional input and output layers, reducing total parameters and training time while delivering similar or better performance versus existing methods. DeFINE can be incorporated easily in new or existing sequence models. Compared to state-of-the-art methods including adaptive input representations, this technique results in a 6% to 20% drop in perplexity. On WikiText-103, DeFINE reduces the total parameters of Transformer-XL by half with minimal impact on performance. On the Penn Treebank, DeFINE improves AWD-LSTM by 4 points with a 17% reduction in parameters, achieving comparable performance to state-of-the-art methods with fewer parameters. For machine translation, DeFINE improves the efficiency of the Transformer model by about 1.4 times while delivering similar performance.",Transformer-XL DeFINE (141M),Unreleased,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America",,,,,,,,,
Photo-Geometric Autoencoder,"3D modeling,Vision",University of Oxford,Academia,"Shangzhe Wu, Christian Rupprecht, Andrea Vedaldi
",2019-11-25,Unsupervised Learning of Probably Symmetric Deformable 3D Objects From Images in the Wild,https://arxiv.org/abs/1911.11130,292.0,SOTA improvement,"""Our model outperforms a
current state-of-the-art 3D reconstruction method that uses 2D keypoint supervision""",,,,,,,"CelebA,3DFAW,BFM","""We test our method on three human face datasets: CelebA [35], 3DFAW [21, 27, 73, 69] and BFM [47]""",,,30.0,,,,,,"We propose a method to learn 3D deformable object categories from raw single-view images, without external supervision. The method is based on an autoencoder that factors each input image into depth, albedo, viewpoint and illumination. In order to disentangle these components without supervision, we use the fact that many object categories have, at least in principle, a symmetric structure. We show that reasoning about illumination allows us to exploit the underlying object symmetry even if the appearance is not symmetric due to shading. Furthermore, we model objects that are probably, but not certainly, symmetric by predicting a symmetry probability map, learned end-to-end with the other components of the model. Our experiments show that this method can recover very accurately the 3D shape of human faces, cat faces and cars from single-view images, without any supervision or a prior shape model. On benchmarks, we demonstrate superior accuracy compared to another method that uses supervision at the level of 2D image correspondences.",,Open weights (unrestricted),,Unknown,2025-02-03 23:37:36+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
FastSpeech,Speech,"Zhejiang University,Microsoft Research","Academia,Industry","Yi Ren, Yangjun Ruan, Xu Tan, Tao Qin, Sheng Zhao, Zhou Zhao, Tie-Yan Liu",2019-11-20,"FastSpeech: Fast, Robust and Controllable Text to Speech",https://arxiv.org/abs/1905.09263,,,,30100000.0,30.1M,7.1712e+18,,,125000000000000*53.12*3600*0.3 = 7.1712e+18,LJSpeech,"We conduct experiments on LJSpeech dataset [10], which contains 13,100 English audio clips and the corresponding text transcripts, with the total audio length of approximate 24 hours. We randomly split the dataset into 3 sets: 12500 samples for training, 300 samples for validation and 300 samples for testing.",,,,,53.12 h (Table 2 https://arxiv.org/pdf/2006.04558),NVIDIA V100,4.0,,"Neural network based end-to-end text to speech (TTS) has significantly improved the quality of synthesized speech. Prominent methods (e.g., Tacotron 2) usually first generate mel-spectrogram from text, and then synthesize speech from the mel-spectrogram using vocoder such as WaveNet. Compared with traditional concatenative and statistical parametric approaches, neural network based end-to-end models suffer from slow inference speed, and the synthesized speech is usually not robust (i.e., some words are skipped or repeated) and lack of controllability (voice speed or prosody control). In this work, we propose a novel feed-forward network based on Transformer to generate mel-spectrogram in parallel for TTS. Specifically, we extract attention alignments from an encoder-decoder based teacher model for phoneme duration prediction, which is used by a length regulator to expand the source phoneme sequence to match the length of the target mel-spectrogram sequence for parallel mel-spectrogram generation. Experiments on the LJSpeech dataset show that our parallel model matches autoregressive models in terms of speech quality, nearly eliminates the problem of word skipping and repeating in particularly hard cases, and can adjust voice speed smoothly. Most importantly, compared with autoregressive Transformer TTS, our model speeds up mel-spectrogram generation by 270x and the end-to-end speech synthesis by 38x. Therefore, we call our model FastSpeech.",,Unreleased,,Likely,2024-12-02 20:40:08+00:00,"China,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
MuZero,Games,DeepMind,Industry,"J Schrittwieser, I Antonoglou, T Hubert, K Simonyan",2019-11-19,Mastering Atari Go Chess and Shogi by Planning with a Learned Model,https://arxiv.org/abs/1911.08265v2,1768.0,"Highly cited,SOTA improvement",,36864000.0,"Both the representation and dynamics function use the same architecture asAlphaZero, but with 16 instead of20 residual blocks [15]. We use 3x3 kernels and 256 hidden planes for each convolution.

Previous downsampling:
•  1 convolution with stride 2 and 128 output planes, output resolution 48x48.•  2 residual blocks with 128 planes•  1 convolution with stride 2 and 256 output planes, output resolution 24x24.•  3 residual blocks with 256 planes.•  Average pooling with stride 2, output resolution 12x12.•  3 residual blocks with 256 planes.•  Average pooling with stride 2, output resolution 6x6.",4.8e+19,,,"third-generation Google Cloud TPU
(For each board game, we used 16 TPUs for training and 1000 TPUs for self-play)
For each game in Atari, we used 8 TPUs for training and 32 TPUs for self-play
Training for 12 hours (for Atari)
Data from Parameter, Compute and Data Trends in Machine Learning
Google v3 TPU: 1.23E+14 FLOP/s (although with the caveat that it might be not applicable)
Utilization rate 
In LaMDA: Language Models for Dialog Applications, they report for TPU V3: 56.5%
Calculations for Atari:
12 hours → 43200 seconds
(8 TPUs for training) * (1.23*10^14 FLOP/s) * (43.2 *10^3 s) * (0.565 utilization rate) = 2.4017472 * 10^19 FLOP
Training time missing for boardgames
Assumption also 12 hours 
Also: 2.4017472 * 10^19 FLOP
Total cost ≈ 4.8 * 10^19 FLOP",,,20000000000.0,"Table 1
https://arxiv.org/pdf/1911.08265.pdf",,,,,,Self-supervised learning,"Constructing agents with planning capabilities has long been one of the main challenges in the pursuit of artificial intelligence. Tree-based planning methods have enjoyed huge success in challenging domains, such as chess and Go, where a perfect simulator is available. However, in real-world problems the dynamics governing the environment are often complex and unknown. In this work we present the MuZero algorithm which, by combining a tree-based search with a learned model, achieves superhuman performance in a range of challenging and visually complex domains, without any knowledge of their underlying dynamics. MuZero learns a model that, when applied iteratively, predicts the quantities most directly relevant to planning: the reward, the action-selection policy, and the value function. When evaluated on 57 different Atari games - the canonical video game environment for testing AI techniques, in which model-based planning approaches have historically struggled - our new algorithm achieved a new state of the art. When evaluated on Go, chess and shogi, without any knowledge of the game rules, MuZero matched the superhuman performance of the AlphaZero algorithm that was supplied with the game rules.",,Unreleased,,,2025-02-17 19:46:56+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Transformer - LibriVox + Decoding/Rescoring,Speech,Facebook,Industry,"Gabriel Synnaeve, Qiantong Xu, Jacob Kahn, Tatiana Likhomanenko, Edouard Grave, Vineel Pratap, Anuroop Sriram, Vitaliy Liptchinsky, Ronan Collobert",2019-11-19,End-to-end ASR: from Supervised to Semi-Supervised Learning with Modern Architectures,https://arxiv.org/abs/1911.08460v3,238.0,SOTA improvement,"""Results with decoding/rescoring are shown in Table 2, where we reach 2.09% and 4.11% on test-clean and test-other , respectively, and are further improvements on the state-of-the-art.""",296000000.0,Table 2,,,,"""Models are trained on 64 GPUs each with an overall batch size of 256 for ResNet and TDS and 320 for Transformer. With only LIBRISPEECH, all models converged in under a week; with pseudo-labels from LIBRIVOX, training required 2-3 weeks""

GPU not specified","LibriSpeech,LibriVox","""LIBRIVOX2
is a large collection of freely-available audio books. Using tools provided with the LIBRILIGHT dataset [26], we select 72K hours of read speech from English book listings and run several preprocessing
steps. After filtering samples to remove readings of duplicate text and corrupted audio, we remove all audio for which
the speaker has overlap with a sample in LIBRISPEECH... the resulting audio corpus contains 53.8K hours of read speech.""",,"""the resulting audio corpus contains 53.8K hours of read speech""",,,,,,,"We study pseudo-labeling for the semi-supervised training of ResNet, Time-Depth Separable ConvNets, and Transformers for speech recognition, with either CTC or Seq2Seq loss functions. We perform experiments on the standard LibriSpeech dataset, and leverage additional unlabeled data from LibriVox through pseudo-labeling. We show that while Transformer-based acoustic models have superior performance with the supervised dataset alone, semi-supervision improves all models across architectures and loss functions and bridges much of the performance gaps between them. In doing so, we reach a new state-of-the-art for end-to-end acoustic models decoded with an external language model in the standard supervised learning setting, and a new absolute state-of-the-art with semi-supervised training. Finally, we study the effect of leveraging different amounts of unlabeled audio, propose several ways of evaluating the characteristics of unlabeled audio which improve acoustic modeling, and show that acoustic models trained with more audio rely less on external language models.",,Open weights (unrestricted),,Confident,2024-11-01 14:03:14+00:00,United States of America,,,,,,,,,
MoCo,"Vision,Image generation",Facebook AI,Industry,"Kaiming He, Haoqi Fan, Yuxin Wu, Saining Xe, Ross Girshick",2019-11-13,Momentum Contrast for Unsupervised Visual Representation Learning,https://arxiv.org/abs/1911.05722,10711.0,Highly cited,,375000000.0,https://openai.com/blog/image-gpt/#rfref53,,,,,"ImageNet,Instagram-1B","""We study unsupervised training performed in:
ImageNet-1M (IN-1M): This is the ImageNet [11] training set that has ∼1.28 million images in 1000 classes (often
called ImageNet-1K; we count the image number instead,
as classes are not exploited by unsupervised learning). This
dataset is well-balanced in its class distribution, and its images generally contain iconic view of objects.
Instagram-1B (IG-1B): Following [44], this is a dataset
of ∼1 billion (940M) public images from Instagram. The
images are from ∼1500 hashtags [44] that are related to the
ImageNet categories. This dataset is relatively uncurated
comparing to IN-1M, and has a long-tailed, unbalanced
distribution of real-world data. This dataset contains both
iconic objects and scene-level images.""",,,,,,,,,"We present Momentum Contrast (MoCo) for unsupervised visual representation learning. From a perspective on contrastive learning as dictionary look-up, we build a dynamic dictionary with a queue and a moving-averaged encoder. This enables building a large and consistent dictionary on-the-fly that facilitates contrastive unsupervised learning. MoCo provides competitive results under the common linear protocol on ImageNet classification. More importantly, the representations learned by MoCo transfer well to downstream tasks. MoCo can outperform its supervised pre-training counterpart in 7 detection/segmentation tasks on PASCAL VOC, COCO, and other datasets, sometimes surpassing it by large margins. This suggests that the gap between unsupervised and supervised representation learning has been largely closed in many vision tasks.
",,Open weights (non-commercial),,,2025-02-03 20:44:55+00:00,United States of America,,,,,,,,,
Long-range sequence Compressive Transformers,Language,DeepMind,Industry,"Jack W. Rae, Anna Potapenko, Siddhant M. Jayakumar, Timothy P. Lillicrap",2019-11-13,Compressive Transformers for Long-Range Sequence Modelling,https://arxiv.org/abs/1911.05507,541.0,,,,,1.6e+20,,,,WikiText-103,,,,328.32,,,,,,"We present the Compressive Transformer, an attentive sequence model which compresses past memories for long-range sequence learning. We find the Compressive Transformer obtains state-of-the-art language modelling results in the WikiText-103 and Enwik8 benchmarks, achieving 17.1 ppl and 0.97 bpc respectively. We also find it can model high-frequency speech effectively and can be used as a memory mechanism for RL, demonstrated on an object matching task. To promote the domain of long-range sequence learning, we propose a new open-vocabulary language modelling benchmark derived from books, PG-19.",Compressive Transformers for Long-Range Sequence Modelling,Unreleased,,,2024-11-01 14:03:14+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Noisy Student (L2),Vision,"Carnegie Mellon University (CMU),Google","Academia,Industry","Q Xie, MT Luong, E Hovy, QV Lee",2019-11-11,Self-training with Noisy Student improves ImageNet classification,https://arxiv.org/abs/1911.04252v4,2217.0,"Highly cited,SOTA improvement","""Noisy Student Training achieves 88.4% top-1 accuracy on ImageNet, which is 2.0% better than the state-of-the-art model""",480000000.0,,2.612e+22,,,"""Our largest model, EfficientNet-L2, needs to be trained for 6 days on a Cloud TPU v3 Pod, which has 2048 cores, if the unlabeled batch size is 14x the labeled batch size""
TPU v3 gets 1.23e14 FLOP/s per chip, with 2 cores per chip

1024 * 1.23e14 * 6 * 24 * 3600 * 0.4 = 2.612e22","ImageNet,JFT",,81000000.0,"""Due to duplications, there are only 81M unique images among these 130M images.""",,144.0,6 days,Google TPU v3,1024.0,,"We present Noisy Student Training, a semi-supervised learning approach that works well even when labeled data is abundant. Noisy Student Training achieves 88.4% top-1 accuracy on ImageNet, which is 2.0% better than the state-of-the-art model that requires 3.5B weakly labeled Instagram images. On robustness test sets, it improves ImageNet-A top-1 accuracy from 61.0% to 83.7%, reduces ImageNet-C mean corruption error from 45.7 to 28.3, and reduces ImageNet-P mean flip rate from 27.8 to 12.2.
Noisy Student Training extends the idea of self-training and distillation with the use of equal-or-larger student models and noise added to the student during learning. On ImageNet, we first train an EfficientNet model on labeled images and use it as a teacher to generate pseudo labels for 300M unlabeled images. We then train a larger EfficientNet as a student model on the combination of labeled and pseudo labeled images. We iterate this process by putting back the student as the teacher. During the learning of the student, we inject noise such as dropout, stochastic depth, and data augmentation via RandAugment to the student so that the student generalizes better than the teacher. Models are available at this https URL. Code is available at this https URL.",,Unreleased,,,2025-02-17 17:24:36+00:00,"United States of America,United States of America",,,,,,,,,
Sandwich Transformer,Language,"Allen Institute for AI,Facebook AI Research","Research collective,Industry","Ofir Press, Noah A. Smith, Omer Levy",2019-11-10,Improving Transformer Models by Reordering their Sublayers,https://arxiv.org/abs/1911.03864,82.0,SOTA improvement,"""Sandwich transformers achieve state-of-the-art results on the enwik8 character-level language modeling dataset and on an additional word-level corpus,
but have no significant effect on machine translation""",209000000.0,209M,1.58e+20,,,,"BookCorpus (BooksCorpus, Toronto Book Corpus),enwik8,text8",,,,180.0,,,,,,"Multilayer transformer networks consist of interleaved self-attention and feedforward sublayers. Could ordering the sublayers in a different pattern lead to better performance? We generate randomly ordered transformers and train them with the language modeling objective. We observe that some of these models are able to achieve better performance than the interleaved baseline, and that those successful variants tend to have more self-attention at the bottom and more feedforward sublayers at the top. We propose a new transformer pattern that adheres to this property, the sandwich transformer, and show that it improves perplexity on multiple word-level and character-level language modeling benchmarks, at no cost in parameters, memory, or training time. However, the sandwich reordering pattern does not guarantee performance gains across every task, as we demonstrate on machine translation models. Instead, we suggest that further exploration of task-specific sublayer reorderings is needed in order to unlock additional gains.",Sandwich Transformer,Unreleased,,,2024-11-01 14:03:14+00:00,"United States of America,United States of America",,,,,,,,,
CamemBERT,Language,"Facebook,INRIA,Sorbonne University","Industry,Academia,Academia","Louis Martin, Benjamin Muller, Pedro Javier Ortiz Suárez, Yoann Dupont, Laurent Romary, Éric Villemonte de la Clergerie, Djamé Seddah, Benoît Sagot",2019-11-10,CamemBERT: a Tasty French Language Model,https://arxiv.org/abs/1911.03894,990.0,SOTA improvement,"""Our best performing model CamemBERT reaches or improves the state of the art in all four downstream tasks."" (part-of-speech tagging, dependency parsing, named entity recognition and natural language inference tasks)",335000000.0,"CamemBERT Large, Table 4",8.3e+20,,,"""Unless otherwise specified, our models use the BASE architecture, and are pretrained for 100k backpropagation steps on 256 Nvidia V100 GPUs (32GB each) for a day""

256 V100-days

256 * 125 teraflops * 24 * 3600 * 0.3 (assumed utilization)
= 8.3e20


""Following (Liu et al., 2019), we optimize the model using Adam (Kingma and Ba, 2014) (β1 = 0.9, β2 = 0.98) for 100k steps with large batch sizes of 8192 sequences, each sequence containing at most 512 tokens""

Using compute = 6*N*D, that's 6 * (100k * 8192 * 512) * 335M= 8.43e20",CCNet,"""we train another model with the LARGE architecture, referred to as CamemBERTLARGE, for a fair comparison with XLM-RLARGE. This model is trained with the CCNet corpus, described in Sec. 6, for 100k steps""

Other models in paper are trained with the French portion of OSCAR. See footnote 12.",31900000000.0," 31.9B tokens, Table 6.",13.0,24.0,1 day for each model (may not have been a full 24 hours),NVIDIA V100,,,"Pretrained language models are now ubiquitous in Natural Language Processing. Despite their success, most available models have either been trained on English data or on the concatenation of data in multiple languages. This makes practical use of such models --in all languages except English-- very limited. In this paper, we investigate the feasibility of training monolingual Transformer-based language models for other languages, taking French as an example and evaluating our language models on part-of-speech tagging, dependency parsing, named entity recognition and natural language inference tasks. We show that the use of web crawled data is preferable to the use of Wikipedia data. More surprisingly, we show that a relatively small web crawled dataset (4GB) leads to results that are as good as those obtained using larger datasets (130+GB). Our best performing model CamemBERT reaches or improves the state of the art in all four downstream tasks.",,Open weights (unrestricted),,Confident,2025-02-17 17:27:22+00:00,"United States of America,France,France",,,,,,,,,
Self-Attention and Convolutional Layers,Vision,Ecole Polytechnique F´ed´erale de Lausanne (EPFL),Academia,"Jean-Baptiste Cordonnier, Andreas Loukas & Martin Jaggi",2019-11-08,On the Relationship between Self-Attention and Convolutional Layers,https://arxiv.org/abs/1911.03584,550.0,,,29500000.0,from Table 1,6.75e+17,,,"(15e9) * (300) * (50000) * 3 = 6.75e+17
(inference compute) * (epochs) * (dataset size) * (constant to account for backpropagation)
 
epochs from appendix B table 2
inference compute from table 1",CIFAR-10,"Figure 2 in the paper
and line 29 from https://github.com/epfml/attention-cnn/blob/master/train.py (access date 30.01.2024)",50000.0,size of CIFAR-10,300.0,,,,,,"Recent trends of incorporating attention mechanisms in vision have led researchers to reconsider the supremacy of convolutional layers as a primary building block. Beyond helping CNNs to handle long-range dependencies, Ramachandran et al. (2019) showed that attention can completely replace convolution and achieve state-of-the-art performance on vision tasks. This raises the question: do learned attention layers operate similarly to convolutional layers? This work provides evidence that attention layers can perform convolution and, indeed, they often learn to do so in practice. Specifically, we prove that a multi-head self-attention layer with sufficient number of heads is at least as expressive as any convolutional layer. Our numerical experiments then show that self-attention layers attend to pixel-grid patterns similarly to CNN layers, corroborating our analysis. Our code is publicly available. ",,Unreleased,,Confident,2025-02-17 17:27:35+00:00,Switzerland,,,,,,,,,
XLM-RoBERTa,Language,Facebook AI,Industry,"Alexis Conneau, Kartikay Khandelwal, Naman Goyal, Vishrav Chaudhary, Guillaume Wenzek, Francisco Guzmán, Edouard Grave, Myle Ott, Luke Zettlemoyer, Veselin Stoyanov
",2019-11-05,Unsupervised Cross-lingual Representation Learning at Scale,https://arxiv.org/abs/1911.02116,5668.0,"Highly cited,SOTA improvement","citation ""which obtains state-of-the-art perfor-
mance on cross-lingual classification, sequence la-
beling and question answering""",550000000.0,"The number of parameters in the model is specified as ""550M params"" for XLM-R.",2.076e+22,,,"""We use the multilingual MLM loss and train our XLM-R model for
1.5 Million updates on five-hundred 32GB Nvidia
V100 GPUs with a batch size of 8192. ""

6ND:
Sequence length was probably 512, based on follow up paper (XLM-R XXL)
6 * 550e6 * 1.5e6 * 8192 * 512 = 2.076e22
",CC100,"The training dataset and size are mentioned as ""using more than two terabytes of filtered CommonCrawl data"" and the model being trained on ""100 languages"".",125250000000.0,size of CC100 - copied from other rows,,,,NVIDIA Tesla V100 DGXS 32 GB,500.0,,"This paper shows that pretraining multilingual language models at scale leads to significant performance gains for a wide range of cross-lingual transfer tasks. We train a Transformer-based masked language model on one hundred languages, using more than two terabytes of filtered CommonCrawl data. Our model, dubbed XLM-R, significantly outperforms multilingual BERT (mBERT) on a variety of cross-lingual benchmarks, including +14.6% average accuracy on XNLI, +13% average F1 score on MLQA, and +2.4% F1 score on NER. XLM-R performs particularly well on low-resource languages, improving 15.7% in XNLI accuracy for Swahili and 11.4% for Urdu over previous XLM models. We also present a detailed empirical analysis of the key factors that are required to achieve these gains, including the trade-offs between (1) positive transfer and capacity dilution and (2) the performance of high and low resource languages at scale. Finally, we show, for the first time, the possibility of multilingual modeling without sacrificing per-language performance; XLM-R is very competitive with strong monolingual models on the GLUE and XNLI benchmarks. We will make our code, data and models publicly available.",,Open weights (non-commercial),,Confident,2025-02-17 17:27:44+00:00,United States of America,,,,,,,,,
Base LM + kNN LM + Continuous Cache,Language,"Stanford University,Facebook AI Research","Academia,Industry","Urvashi Khandelwal, Omer Levy, Dan Jurafsky, Luke Zettlemoyer, Mike Lewis",2019-11-01,Generalization through Memorization: Nearest Neighbor Language Models,https://arxiv.org/abs/1911.00172,721.0,SOTA improvement,"""GNN-LM achieves a new state-of-the-art perplexity of 14.8 on WikiText-103""",247000000.00000003,,7.3e+18,,,,WikiText-103,,,,200.0,,,,,,"We introduce kNN-LMs, which extend a pre-trained neural language model (LM) by linearly interpolating it with a k-nearest neighbors (kNN) model. The nearest neighbors are computed according to distance in the pre-trained LM embedding space, and can be drawn from any text collection, including the original LM training data. Applying this augmentation to a strong Wikitext-103 LM, with neighbors drawn from the original training set, our kNN-LM achieves a new state-of-the-art perplexity of 15.79 - a 2.9 point improvement with no additional training. We also show that this approach has implications for efficiently scaling up to larger training sets and allows for effective domain adaptation, by simply varying the nearest neighbor datastore, again without further training. Qualitatively, the model is particularly helpful in predicting rare patterns, such as factual knowledge. Together, these results strongly suggest that learning similarity between sequences of text is easier than predicting the next word, and that nearest neighbor search is an effective approach for language modeling in the long tail.",Base LM + kNN LM + Continuous Cache,Unreleased,,,2024-11-01 14:03:14+00:00,"United States of America,United States of America",,,,,,,,,
AlphaStar,Games,DeepMind,Industry,"Oriol Vinyals,Igor Babuschkin,Wojciech M. Czarnecki,Michaël Mathieu,Andrew Dudzik,Junyoung Chung,David H. Choi,Richard Powell,Timo Ewalds,Petko Georgiev,Junhyuk Oh,Dan Horgan,Manuel Kroiss,Ivo Danihelka,Aja Huang,Laurent Sifre,Trevor Cai,John P. Agapiou,Max Jaderberg,Alexander S. Vezhnevets,Rémi Leblond,Tobias Pohlen,Valentin Dalibard,David Budden,Yury Sulsky,James Molloy,Tom L. Paine,Caglar Gulcehre,Ziyu Wang,Tobias Pfaff,Yuhuai Wu,Roman Ring,Dani Yogatama,Dario Wünsch,Katrina McKinney,Oliver Smith,Tom Schaul,Timothy Lillicrap,Koray Kavukcuoglu,Demis Hassabis,Chris Apps,David Silver",2019-10-30,Grandmaster level in StarCraft II using multi-agent reinforcement learning,https://www.deepmind.com/blog/alphastar-grandmaster-level-in-starcraft-ii-using-multi-agent-reinforcement-learning,3296.0,Highly cited,,139000000.0,"AlphaStar has 139 million weights, but only 55 million weights are required during inference.",5.9250000000001e+22,,,"384 TPUv3 chips for 44 days. Assume 33% utilization.
https://www.wolframalpha.com/input?i=123+teraFLOPS+*+384+*+0.33+*+44+days",,,,"Multiple data types. First supervised learning, then other stuff",,1056.0,"""Each agent was trained using 32 third-generation tensor
processing units (TPUs) over 44 days""",Google TPU v3,384.0,,"Many real-world applications require artificial agents to compete and coordinate with other agents in complex environments. As a stepping stone to this goal, the domain of StarCraft has emerged as an important challenge for artificial intelligence research, owing to its iconic and enduring status among the most difficult professional esports and its relevance to the real world in terms of its raw complexity and multi-agent challenges. Over the course of a decade and numerous competitions1–3, the strongest agents have simplified important aspects of the game, utilized superhuman capabilities, or employed hand-crafted sub-systems4. Despite these advantages, no previous agent has come close to matching the overall skill of top StarCraft players. We chose to address the challenge of StarCraft using generalpurpose learning methods that are in principle applicable to other complex domains: a multi-agent reinforcement learning algorithm that uses data from both human and agent games within a diverse league of continually adapting strategies and counter-strategies, each represented by deep neural networks5,6. We evaluated our agent, AlphaStar, in the full game of StarCraft II, through a series of online games against human players. AlphaStar was rated at Grandmaster level for all three StarCraft races and above 99.8% of officially ranked human players.",,Unreleased,,,2025-02-13 20:37:20+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
BART-large,Language,Facebook AI,Industry,"Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov, Luke Zettlemoyer",2019-10-29,"BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",https://arxiv.org/abs/1910.13461,9464.0,Highly cited,,406291456.0,"""In total, BART contains roughly 10% more parameters than the equivalently sized BERT model.""

I counted the parameters in the huggingface model
https://huggingface.co/facebook/bart-large/tree/main

from transformers import AutoTokenizer, AutoModel
tokenizer = AutoTokenizer.from_pretrained(""facebook/bart-large"")
model = AutoModel.from_pretrained(""facebook/bart-large"")
sum(p.numel() for p in model.parameters() if p.requires_grad)",,,,,Wikipedia,"""All models are of comparable size and are trained for 1M steps
on a combination of books and Wikipedia data""",,,,,,,,,"We present BART, a denoising autoencoder for pretraining sequence-to-sequence models. BART is trained by (1) corrupting text with an arbitrary noising function, and (2) learning a model to reconstruct the original text. It uses a standard Tranformer-based neural machine translation architecture which, despite its simplicity, can be seen as generalizing BERT (due to the bidirectional encoder), GPT (with the left-to-right decoder), and many other more recent pretraining schemes. We evaluate a number of noising approaches, finding the best performance by both randomly shuffling the order of the original sentences and using a novel in-filling scheme, where spans of text are replaced with a single mask token. BART is particularly effective when fine tuned for text generation but also works well for comprehension tasks. It matches the performance of RoBERTa with comparable training resources on GLUE and SQuAD, achieves new state-of-the-art results on a range of abstractive dialogue, question answering, and summarization tasks, with gains of up to 6 ROUGE. BART also provides a 1.1 BLEU increase over a back-translation system for machine translation, with only target language pretraining. We also report ablation experiments that replicate other pretraining schemes within the BART framework, to better measure which factors most influence end-task performance.",,Open weights (unrestricted),,,2024-11-01 14:03:15+00:00,United States of America,,,,,,,,,
Amended-DARTS,Language,"Tsinghua University,Huawei,Tongji University","Academia,Industry,Academia","Kaifeng Bi, Changping Hu, Lingxi Xie, Xin Chen, Longhui Wei, Qi Tian",2019-10-25,Stabilizing DARTS with Amended Gradient Estimation on Architectural Parameters,https://arxiv.org/abs/1910.11831,48.0,,,23000000.0,,,,,,,,,,,,,,,,"DARTS is a popular algorithm for neural architecture search (NAS). Despite its great advantage in search efficiency, DARTS often suffers weak stability, which reflects in the large variation among individual trials as well as the sensitivity to the hyper-parameters of the search process. This paper owes such instability to an optimization gap between the super-network and its sub-networks, namely, improving the validation accuracy of the super-network does not necessarily lead to a higher expectation on the performance of the sampled sub-networks. Then, we point out that the gap is due to the inaccurate estimation of the architectural gradients, based on which we propose an amended estimation method. Mathematically, our method guarantees a bounded error from the true gradients while the original estimation does not. Our approach bridges the gap from two aspects, namely, amending the estimation on the architectural gradients, and unifying the hyper-parameter settings in the search and re-training stages. Experiments on CIFAR10 and ImageNet demonstrate that our approach largely improves search stability and, more importantly, enables DARTS-based approaches to explore much larger search spaces that have not been investigated before.",Amended-DARTS,Unreleased,,,2024-09-05 18:08:31+00:00,"China,China,China",,,,,,,,,
T5-3B,Language,Google,Industry,"Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter J. Liu",2019-10-23,Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer,https://arxiv.org/abs/1910.10683,16685.0,Highly cited,,2800000000.0,"page 37, 3B and 11B. ""To further explore what kind of performance is possible when using larger models, we consider two additional variants. In both cases, we use d_model = 1024, a 24 layer encoder and decoder, and dkv = 128. For the “3B” variant, we use dff = 16,384 with 32-headed attention, which results in around 2.8 billion parameters; for “11B” we use dff = 65,536 with 128-headed attention producing a model with about 11 billion parameters""",9.0000000001e+21,,,"Akronomicon states 1.04e+22 FLOP. Archived source: https://github.com/lightonai/akronomicon/tree/main/akrodb
However, this seems dubiously high.

""We pre-train each model for 2^19 = 524,288 steps on C4 before fine-tuning.""
""In total, this batch size and number of steps corresponds to pre-training on 2^35 ≈ 34B tokens.""
""To compare these mixing strategies on equal footing with our baseline pre-train-then-fine-tune results, we train multi-task models for the same total number of steps: 2^19 + 2^18 = 786,432""
Using the 6DN approximation gives: 6 FLOP/token/param * 2^35 pretrain tokens * (1+1/2 finetune tokens per pretrain token) * 1 iteration of training data* 2.8 billion parameters = 8.659e20 FLOP
https://www.wolframalpha.com/input?i=6+*+2%5E35+*+2.8+billion+*+1.5

update: 9.0E+21 per FLAN paper from Google 
https://arxiv.org/pdf/2210.11416.pdf",C4,,25500000000.0,"""This produces a collection of text that is not only orders of magnitude larger than most data sets used for pre-training (about 750 GB) but also
comprises reasonably clean and natural English text. We dub this data set the “Colossal Clean Crawled Corpus” (or C4 for short) and release it as part of TensorFlow Datasets""
750GB * 200M word/GB = 1.5e11

""In total, this batch size and number of steps corresponds to pre-training on 2^35 ≈ 34B tokens.""
""Note that 2^35 tokens only covers a fraction of the entire C4 data set, so we never repeat any data during pre-training.""
The fraction is 25.5 billion / 150 billion = 0.17 epochs.",0.17,,,Google TPU v3,,Self-supervised learning,"Transfer learning, where a model is first pre-trained on a data-rich task before being fine-tuned on a downstream task, has emerged as a powerful technique in natural language processing (NLP). The effectiveness of transfer learning has given rise to a diversity of approaches, methodology, and practice. In this paper, we explore the landscape of transfer learning techniques for NLP by introducing a unified framework that converts all text-based language problems into a text-to-text format. Our systematic study compares pre-training objectives, architectures, unlabeled data sets, transfer approaches, and other factors on dozens of language understanding tasks. By combining the insights from our exploration with scale and our new ``Colossal Clean Crawled Corpus'', we achieve state-of-the-art results on many benchmarks covering summarization, question answering, text classification, and more. To facilitate future work on transfer learning for NLP, we release our data set, pre-trained models, and code.",,Open weights (unrestricted),,Confident,2025-02-17 20:02:30+00:00,United States of America,,,,,,,,,
T5-11B,Language,Google,Industry,"Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter J. Liu",2019-10-23,Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer,https://arxiv.org/abs/1910.10683,16685.0,Highly cited,,11000000000.0,The full 11-billion parameter model,3.3e+22,,,"https://arxiv.org/ftp/arxiv/papers/2104/2104.10350.pdf
Table 4, 4.05e22

update: 3.3e22 per FLAN paper from Google 
https://arxiv.org/pdf/2210.11416.pdf

6ND rule suggests somewhat more FLOPs:
6 * 1T * 11B = 6.6e22",C4,,200000000000.0,"""This produces a collection of text that is not only
orders of magnitude larger than most data sets used for pre-training (about 750 GB) but also comprises reasonably clean and natural English text. We dub this data set the “Colossal Clean Crawled Corpus” (or C4 for short) and release it as part of TensorFlow Datasets""

750GB * 200M word/GB * 4/3 tokens per word = 2e11.

Total tokens seen is about 1T:  ""We therefore pre-train our models for 1 million steps on a batch size of 2^11 sequences of length 512, corresponding to a total of about 1 trillion pre-training tokens""",,481.9,"4.05*10^22 FLOP at 37.073% utilization on 512 TPU v3 chips (123 TFLOPS) -> 482 hours
https://www.wolframalpha.com/input?i=4.05*10%5E22+seconds+%2F+%28512*123*10%5E12%29+*%28123%2F45.6%29",Google TPU v3,512.0,Self-supervised learning,"Transfer learning, where a model is first pre-trained on a data-rich task before being fine-tuned on a downstream task, has emerged as a powerful technique in natural language processing (NLP). The effectiveness of transfer learning has given rise to a diversity of approaches, methodology, and practice. In this paper, we explore the landscape of transfer learning techniques for NLP by introducing a unified framework that converts all text-based language problems into a text-to-text format. Our systematic study compares pre-training objectives, architectures, unlabeled data sets, transfer approaches, and other factors on dozens of language understanding tasks. By combining the insights from our exploration with scale and our new ``Colossal Clean Crawled Corpus'', we achieve state-of-the-art results on many benchmarks covering summarization, question answering, text classification, and more. To facilitate future work on transfer learning for NLP, we release our data set, pre-trained models, and code.",,Open weights (unrestricted),0.3707,Confident,2025-02-17 20:44:49+00:00,United States of America,,,,,,,65536.0,"""We use a maximum sequence length of 512 and a batch size of 128 sequences. Whenever possible, we “pack” multiple sequences into each entry of the batch10 so that our batches contain roughly 2^16 = 65,536 tokens""",
LSTM(large)+Sememe+cell,Language,"Tsinghua University,Beijing University of Posts and Telecommunications,Huawei Noah's Ark Lab","Academia,Academia,Industry","Yujia Qin, Fanchao Qi, Sicong Ouyang, Zhiyuan Liu, Cheng Yang, Yasheng Wang, Qun Liu, Maosong Sun",2019-10-20,Improving Sequence Modeling Ability of Recurrent Neural Networks via Sememes,https://arxiv.org/abs/1910.08910,19.0,,,48000000.0,,2.4e+16,,,,WikiText-2,,,,40.0,,,,,,"Sememes, the minimum semantic units of human languages, have been successfully utilized in various natural language processing applications. However, most existing studies exploit sememes in specific tasks and few efforts are made to utilize sememes more fundamentally. In this paper, we propose to incorporate sememes into recurrent neural networks (RNNs) to improve their sequence modeling ability, which is beneficial to all kinds of downstream tasks. We design three different sememe incorporation methods and employ them in typical RNNs including LSTM, GRU and their bidirectional variants. In evaluation, we use several benchmark datasets involving PTB and WikiText-2 for language modeling, SNLI for natural language inference and another two datasets for sentiment analysis and paraphrase detection. Experimental results show evident and consistent improvement of our sememe-incorporated models compared with vanilla RNNs, which proves the effectiveness of our sememe incorporation methods. Moreover, we find the sememe-incorporated models have higher robustness and outperform adversarial training in defending adversarial attack. All the code and data of this work can be obtained at this https URL.",LSTM(large)+Sememe+cell,Unreleased,,,2024-09-05 18:08:31+00:00,"China,China,China",,,,,,,,,
Rubik's cube ADR robot,Robotics,OpenAI,Industry,"Ilge Akkaya, Marcin Andrychowicz, Maciek Chociej, Mateusz Litwin, Bob McGrew, Arthur Petron, Alex Paino, Matthias Plappert, Glenn Powell, Raphael Ribas, Jonas Schneider, Nikolas Tezak, Jerry Tworek, Peter Welinder, Lilian Weng, Qiming Yuan, Wojciech Zaremba, Lei Zhang
",2019-10-15,Solving Rubik’s Cube with a Robot Hand,https://arxiv.org/abs/1910.07113,1098.0,,,27769565.0,"Table 13 on pg. 44 of the Cube paper, saved in ""RL papers"" folder. Sum of all the trainable parameters (dominated by the value and policy networks).

source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",8.54e+20,,,source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389,,,146250000000.0,""" The cumulative amount of experience over that period used for training on the
Rubik’s cube is roughly 13 thousand years, which is on the same order of magnitude as the 40 thousand years used by
OpenAI Five""

13/40 * 1.92e8 = 6.24e7

EDIT 2024-05-30:
OpenAI Five entry was updated in 2022 to reflect a better understanding of dataset, true size is on the order of 4.5e11

13/40 * 4.5e11 = 1.46e11",,,,NVIDIA Tesla V100 DGXS 32 GB,,,"We demonstrate that models trained only in simulation can be used to solve a manipulation problem of unprecedented complexity on a real robot. This is made possible by two key components: a novel algorithm, which we call automatic domain randomization (ADR) and a robot platform built for machine learning. ADR automatically generates a distribution over randomized environments of ever-increasing difficulty. Control policies and vision state estimators trained with ADR exhibit vastly improved sim2real transfer. For control policies, memory-augmented models trained on an ADR-generated distribution of environments show clear signs of emergent meta-learning at test time. The combination of ADR with our custom robot platform allows us to solve a Rubik's cube with a humanoid robot hand, which involves both control and state estimation problems. Videos summarizing our results are available: this https URL",,Unreleased,,,2025-02-17 19:46:33+00:00,United States of America,,,,,,,,,
dense-IndRNN+dynamic eval,Language,"Shandong University,University of Wollongong","Academia,Academia","Shuai Li, Wanqing Li, Chris Cook, Yanbo Gao",2019-10-11,Deep Independently Recurrent Neural Network (IndRNN),https://arxiv.org/abs/1910.06251,48.0,,,44100000.0,,,,,,Penn TreeBank,,,,,,,,,,"Recurrent neural networks (RNNs) are known to be difficult to train due to the gradient vanishing and exploding problems and thus difficult to learn long-term patterns and construct deep networks. To address these problems, this paper proposes a new type of RNNs with the recurrent connection formulated as Hadamard product, referred to as independently recurrent neural network (IndRNN), where neurons in the same layer are independent of each other and connected across layers. Due to the better behaved gradient backpropagation, IndRNN with regulated recurrent weights effectively addresses the gradient vanishing and exploding problems and thus long-term dependencies can be learned. Moreover, an IndRNN can work with non-saturated activation functions such as ReLU (rectified linear unit) and be still trained robustly. Different deeper IndRNN architectures, including the basic stacked IndRNN, residual IndRNN and densely connected IndRNN, have been investigated, all of which can be much deeper than the existing RNNs. Furthermore, IndRNN reduces the computation at each time step and can be over 10 times faster than the commonly used Long short-term memory (LSTM). Experimental results have shown that the proposed IndRNN is able to process very long sequences and construct very deep networks. Better performance has been achieved on various tasks with IndRNNs compared with the traditional RNN, LSTM and the popular Transformer.",dense-IndRNN+dynamic eval,Unreleased,,,2024-11-01 14:03:15+00:00,"China,Australia",,,,,,,,,
M4-50B,Language,Google,Industry,"Ankur Bapna, Orhan Firat",2019-10-11,"Exploring Massively Multilingual, Massive Neural Machine Translation",https://blog.research.google/2019/10/exploring-massively-multilingual.html,,SOTA improvement,,50000000000.0,"(sparse architecture)

""By modifying the Transformer architecture through the substitution of the vanilla feed-forward layers with sparsely-gated mixture of experts, we drastically scale up the model capacity, allowing us to successfully train and pass 50 billion parameters, which further improved translation quality across the board.""",,,,"Sparse architecture, so training compute is uncertain",,"""we push the limits of research on multilingual NMT by training a single NMT model on 25+ billion sentence pairs, from 100+ languages to and from English, with 50+ billion parameters.""",,25+ billion sentence pairs,,,,,,,"Over the last few years there has been enormous progress in the quality of machine translation (MT) systems, breaking language barriers around the world thanks to the developments in neural machine translation (NMT). The success of NMT however, owes largely to the great amounts of supervised training data. But what about languages where data is scarce, or even absent? Multilingual NMT, with the inductive bias that “the learning signal from one language should benefit the quality of translation to other languages”, is a potential remedy.",,Unreleased,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
AlphaX-1,Vision,"Facebook AI Research,Brown University","Industry,Academia","Linnan Wang, Yiyang Zhao, Yuu Jinnai, Yuandong Tian, Rodrigo Fonseca1",2019-10-02,AlphaX: eXploring Neural Architectures with Deep Neural Networks and Monte Carlo Tree Search,https://arxiv.org/abs/1903.11059,92.0,SOTA improvement,"""In 12 GPU days and 1000 samples, AlphaX found an architecture that reaches 97.84\% top-1 accuracy on CIFAR-10, and 75.5\% top-1 accuracy on ImageNet, exceeding SOTA NAS methods in both the accuracy and sampling efficiency""",579000000.0,"Table 3: multiadds for AlphaX-1 579M, parameters 5.4M",7.6e+18,,,,"ImageNet,COCO","12800000 + 200000=1480000
I assume they used 1,281,167 training images when referred to Imagenet and 200 000 when referred to MS COCO

""We set up the ImageNet training using
the standard mobile configuration with the input image size
of (224 × 224)[45]. More details are available in the appendix. AlphaX sampled 1000 networks, and we selected
the top 20 networks in the pre-training to fine-tune another
530 epochs. 

We use AlphaX-1 model pre-trained on ImageNet
dataset. The training dataset is MSCOCO for object
detection[15] which contains 90 classes of objects. Each
image is scaled to 300 × 300 in RGB channels. We trained
the model with 200k iterations with 0.04 initial learning rate
and the batch size is set to 24. We applied the exponential learning rate decay schedule with the 0.95 decay factor. Our
model uses momentum optimizer with momentum rate set
to 0.9. We also use the L2 weight decay for training. We
process each image with random horizontal flip and random
crop[22]. We set the matched threshold to 0.5, which means
only the probability of an object over 0.5 is effective to appear on the image. We use 8000 subsets of validation images in MSCOCO validation set and report the mean average precision (mAP) as computed with the standard COCO metric library[16].""
",1480000.0,,,,,NVIDIA GeForce GTX 1080 Ti,,,"Neural Architecture Search (NAS) has shown great success in automating the design of neural networks, but the prohibitive amount of computations behind current NAS methods requires further investigations in improving the sample efficiency and the network evaluation cost to get better results in a shorter time. In this paper, we present a novel scalable Monte Carlo Tree Search (MCTS) based NAS agent, named AlphaX, to tackle these two aspects. AlphaX improves the search efficiency by adaptively balancing the exploration and exploitation at the state level, and by a Meta-Deep Neural Network (DNN) to predict network accuracies for biasing the search toward a promising region. To amortize the network evaluation cost, AlphaX accelerates MCTS rollouts with a distributed design and reduces the number of epochs in evaluating a network by transfer learning guided with the tree structure in MCTS. In 12 GPU days and 1000 samples, AlphaX found an architecture that reaches 97.84\% top-1 accuracy on CIFAR-10, and 75.5\% top-1 accuracy on ImageNet, exceeding SOTA NAS methods in both the accuracy and sampling efficiency. Particularly, we also evaluate AlphaX on NASBench-101, a large scale NAS dataset; AlphaX is 3x and 2.8x more sample efficient than Random Search and Regularized Evolution in finding the global optimum. Finally, we show the searched architecture improves a variety of vision applications from Neural Style Transfer, to Image Captioning and Object Detection.",,Unreleased,,,2025-02-03 20:45:11+00:00,"United States of America,United States of America",,,,,,,,,
DistilBERT,Language,Hugging Face,Industry,"Victor Sanh, Lysandre Debut, Julien Chaumond, Thomas Wolf",2019-10-02,"DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter",https://arxiv.org/abs/1910.01108,6345.0,Highly cited,,66000000.0,Table 3,1.24416e+19,,,"Section 3: DistilBERT was trained on 8 16GB V100 GPUs for approximately 90 hours.

1.6e13*8*60**2*90*0.3 = 1.2e19","Wikipedia,BookCorpus (BooksCorpus, Toronto Book Corpus)","Section 3: We train DistilBERT on the same corpus as the original BERT model: a concatenation of English Wikipedia and Toronto Book Corpus [Zhu et al., 2015].",,,,,,,,,,,Open weights (unrestricted),,,2025-02-17 17:27:51+00:00,"Multinational,United States of America",,,,,,,,,
ALBERT,Language,"Toyota Technological Institute at Chicago,Google Research","Academia,Industry","Z Lan, M Chen, S Goodman, K Gimpel",2019-09-26,ALBERT: A Lite BERT for Self-supervised Learning of Language Representations,https://arxiv.org/abs/1909.11942,5901.0,Highly cited,,18000000.0,Section 3.2 of paper,,,,,"BookCorpus (BooksCorpus, Toronto Book Corpus),Wikipedia",,3300000000.0,"Pretraining same as for BERT - Wikipedia and BookCorpus

""For the pre-training corpus we
use the BooksCorpus (800M words) (Zhu et al., 2015) and English Wikipedia (2,500M words)""",79.4,,,Google TPU v3,,,"Increasing model size when pretraining natural language representations often results in improved performance on downstream tasks. However, at some point further model increases become harder due to GPU/TPU memory limitations and longer training times. To address these problems, we present two parameter-reduction techniques to lower memory consumption and increase the training speed of BERT. Comprehensive empirical evidence shows that our proposed methods lead to models that scale much better compared to the original BERT. We also use a self-supervised loss that focuses on modeling inter-sentence coherence, and show it consistently helps downstream tasks with multi-sentence inputs. As a result, our best model establishes new state-of-the-art results on the GLUE, RACE, and \squad benchmarks while having fewer parameters compared to BERT-large. The code and the pretrained models are available at this https URL.",,Open weights (unrestricted),,,2024-11-01 14:03:15+00:00,"United States of America,Multinational,United States of America",,,,,,,2097152.0,,
Adaptive Inputs + LayerDrop,Language,"Facebook AI Research,LORIA","Industry,Academia","Angela Fan, Edouard Grave, Armand Joulin",2019-09-25,Reducing Transformer Depth on Demand with Structured Dropout,https://arxiv.org/abs/1909.11556,547.0,SOTA improvement,"""In neural machine translation on newstest2014, our 12 encoder layer Transformer model with LayerDrop further improves the state of the art, reaching 30.2 BLEU""",423000000.00000006,,,,,,WikiText-103,,,,,,,,,,"Overparameterized transformer networks have obtained state of the art results in various natural language processing tasks, such as machine translation, language modeling, and question answering. These models contain hundreds of millions of parameters, necessitating a large amount of computation and making them prone to overfitting. In this work, we explore LayerDrop, a form of structured dropout, which has a regularization effect during training and allows for efficient pruning at inference time. In particular, we show that it is possible to select sub-networks of any depth from one large network without having to finetune them and with limited impact on performance. We demonstrate the effectiveness of our approach by improving the state of the art on machine translation, language modeling, summarization, question answering, and language understanding benchmarks. Moreover, we show that our approach leads to small BERT-like models of higher quality compared to training from scratch or using distillation.",Adaptive Inputs + LayerDrop,Open weights (unrestricted),,,2024-11-01 14:03:14+00:00,"United States of America,France",,,,,,,,,
Transformer-XL+AdamGapAware(GA),Language,Technion - Israel Institute of Technology,Academia,"Saar Barkai, Ido Hakimi, Assaf Schuster",2019-09-24,Gap Aware Mitigation of Gradient Staleness,https://arxiv.org/abs/1909.10802,20.0,,,257000000.0,,,,,,,,,,,,,,,,"Cloud computing is becoming increasingly popular as a platform for distributed training of deep neural networks. Synchronous stochastic gradient descent (SSGD) suffers from substantial slowdowns due to stragglers if the environment is non-dedicated, as is common in cloud computing. Asynchronous SGD (ASGD) methods are immune to these slowdowns but are scarcely used due to gradient staleness, which encumbers the convergence process. Recent techniques have had limited success mitigating the gradient staleness when scaling up to many workers (computing nodes). In this paper we define the Gap as a measure of gradient staleness and propose Gap-Aware (GA), a novel asynchronous-distributed method that penalizes stale gradients linearly to the Gap and performs well even when scaling to large numbers of workers. Our evaluation on the CIFAR, ImageNet, and WikiText-103 datasets shows that GA outperforms the currently acceptable gradient penalization method, in final test accuracy. We also provide convergence rate proof for GA. Despite prior beliefs, we show that if GA is applied, momentum becomes beneficial in asynchronous environments, even when the number of workers scales up.",Transformer-XL+AdamGapAware(GA),Unreleased,,,2024-11-01 14:03:14+00:00,Israel,,,,,,,,,
Alleviated TOI 10 (WT103),Language,"Ecole Polytechnique F´ed´erale de Lausanne (EPFL),Swisscom,University of Freiburg","Academia,Industry,Academia","Noémien Kocher, Christian Scuito, Lorenzo Tarantino, Alexandros Lazaridis, Andreas Fischer, Claudiu Musat",2019-09-18,Alleviating Sequence Information Loss with Data Overlapping and Prime Batch Sizes,https://arxiv.org/abs/1909.08700,0.0,,,,,,,,,WikiText-103,,,,1000.0,,,,,,"In sequence modeling tasks the token order matters, but this information can be partially lost due to the discretization of the sequence into data points. In this paper, we study the imbalance between the way certain token pairs are included in data points and others are not. We denote this a token order imbalance (TOI) and we link the partial sequence information loss to a diminished performance of the system as a whole, both in text and speech processing tasks. We then provide a mechanism to leverage the full token order information -Alleviated TOI- by iteratively overlapping the token composition of data points. For recurrent networks, we use prime numbers for the batch size to avoid redundancies when building batches from overlapped data points. The proposed method achieved state of the art performance in both text and speech related tasks.",Alleviated TOI 10 (WT103),Unreleased,,Unknown,2024-09-05 18:08:31+00:00,"Switzerland,Switzerland,Germany",,,,,,,,,
Megatron-BERT,Language,NVIDIA,Industry,"Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper, Bryan Catanzaro",2019-09-17,Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism,https://arxiv.org/abs/1909.08053,1501.0,"Highly cited,SOTA improvement","""Our BERT model achieves SOTA results on the RACE dataset""",3900000000.0,"2.1Source: https://lair.lighton.ai/akronomicon/

Archive on GitHub: https://github.com/lightonai/akronomicon/tree/main/akrodb",2.2e+22,,,"A third-party source: https://lair.lighton.ai/akronomicon/ claims 5.7e22

The authors report experimenting on 1 V100 GPU and achieving throughput of 39 TFLOPS which is 30% of the peak throughput. Therefore the GPU has a peak throughput of 130 TFLOPS so it is specifically the NVIDIA V100S PCIe.
https://images.nvidia.com/content/technologies/volta/pdf/volta-v100-datasheet-update-us-1165301-r5.pdf

Param-based calculation:
6ND = 6*3.9e9*(2e6+1e4)*1024*512 = 2.5e22 FLOP

1024 is the batch size, 512 is the sequence length (not explicitly stated but they say non-specified hyperparameters follow cited papers).

Time-based calculation:
The 8.3B GPT-like arch took 2.1 days per epoch on 512 GPUs, batch size 512. An epoch was 68.5k iterations with sequence length 1024.

Halving the model size should ~halve the iteration time.
Doubling the batch size should ~double the iteration time.
Halving the sequence length should ~quarter the iteration time (quadratic scaling).

Hence 3.1e-5 days/iteration * 2 * 1/2 * 1/4 = 7.8e-6 days/iteration.

2e6 iterations => seems like 15.6 days training.

On 512 GPUs they achieve a peak throughput of 15.1 PFLOPS.
C=15.1 PFLOPS * 58 days = 2.0e22 FLOP.

If we disregard the Akronomicon estimate and aggregate our two, geometric mean is 2.2e22 FLOP",,,46400000000.0,"""The resulting aggregate corpus contains 174 GB of deduplicated text.""
174e9 bytes * (1 word / 5 bytes) * (4 tokens / 3 words) = 4.64e10 tokens",,374.0,"The 8.3B GPT-like arch took 2.1 days per epoch on 512 GPUs, batch size 512, sequence length 1024. An epoch was 68.5k iterations.

BERT: batch size 1024, sequence length 512, 2e6 iterations total.

Halving the model size should ~halve the iteration time.
Doubling the batch size should ~double the iteration time.
Halving the sequence length should ~quarter the iteration time (quadratic scaling).

Hence 3.1e-5 days/iteration * 2 * 1/2 * 1/4 = 7.8e-6 days/iteration.

2e6 iterations => seems like 15.6 days training.",NVIDIA Tesla V100S PCIe 32 GB,512.0,Self-supervised learning,"Recent work in language modeling demonstrates that training large transformer models advances the state of the art in Natural Language Processing applications. However, very large models can be quite difficult to train due to memory constraints. In this work, we present our techniques for training very large transformer models and implement a simple, efficient intra-layer model parallel approach that enables training transformer models with billions of parameters. Our approach does not require a new compiler or library changes, is orthogonal and complimentary to pipeline model parallelism, and can be fully implemented with the insertion of a few communication operations in native PyTorch. We illustrate this approach by converging transformer based models up to 8.3 billion parameters using 512 GPUs. We sustain 15.1 PetaFLOPs across the entire application with 76% scaling efficiency when compared to a strong single GPU baseline that sustains 39 TeraFLOPs, which is 30% of peak FLOPs. To demonstrate that large language models can further advance the state of the art (SOTA), we train an 8.3 billion parameter transformer language model similar to GPT-2 and a 3.9 billion parameter model similar to BERT. We show that careful attention to the placement of layer normalization in BERT-like models is critical to achieving increased performance as the model size grows. Using the GPT-2 model we achieve SOTA results on the WikiText103 (10.8 compared to SOTA perplexity of 15.8) and LAMBADA (66.5% compared to SOTA accuracy of 63.2%) datasets. Our BERT model achieves SOTA results on the RACE dataset (90.9% compared to SOTA accuracy of 89.4%).",,Unreleased,0.2269,Confident,2025-02-17 17:29:03+00:00,United States of America,,,,,,,524288.0,"""we set the batch size to 1024 and use a learning rate of 1.0e4 warmed up over 10,000 iterations and decayed linearly
over 2 million iterations. Other training parameters are kept
the same as (Devlin et al., 2018).""

in Devlin et al (BERT), sequences are 512 tokens",
Megatron-LM (8.3B),Language,NVIDIA,Industry,"Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper, Bryan Catanzaro",2019-09-17,Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism,https://arxiv.org/abs/1909.08053,1501.0,"Highly cited,SOTA improvement","""Using the GPT-2 model we achieve SOTA results on the WikiText103 (10.8 compared to SOTA perplexity of 15.8) and LAMBADA"" 

GPT-2 model here meaning model similar to GPT-2",8300000000.0,"Source: https://lair.lighton.ai/akronomicon/

Archived source: https://web.archive.org/web/20211220142906/https://lair.lighton.ai/akronomicon/

Data also available on GitHub: https://github.com/lightonai/akronomicon/blob/main/akrodb/NVIDIA/Megatron-LM.json",9.1e+21,,,"source: https://lair.lighton.ai/akronomicon/

archived: https://github.com/lightonai/akronomicon/tree/main/akrodb


other estimates:

8.3B is a GPT-2-based model (Table 2). ""For GPT-2 models, all training is performed with sequences of 1024 subword units at a batch size of 512 for 300k iterations"" 

I interpret the above as 1024*512*300k = 157B training tokens 

6 * 157 billion * 8.3 billion  = 7.8e21

Also, their training setup achieved 15.1 petaFLOPS or 1.5e16 FLOPS.
(512 V100s is 512 * 125 teraflops = 64 petaFLOPS so they had ~25% utilization)
2.1 days per epoch, ~4.4 epochs
2.1 * 4.4 * 24 * 3600 * 1.5e16 = 1.197e22

These are both close to the akronomicon estimate",,"""we aggregate several of the largest language
modeling datasets. We create an aggregate dataset consisting of Wikipedia (Devlin et al., 2018), CC-Stories (Trinh &
Le, 2018), RealNews (Zellers et al., 2019), and OpenWebtext (Radford et al., 2019). To avoid training set leakage
into our downstream tasks we remove the Wikipedia articles
present in the WikiText103 test set (Merity et al., 2016).""",34800000000.0,"""The resulting aggregate
corpus contains 174 GB of deduplicated text.""",4.4,327.0,"Reported throughput is 15.1 teraFLOPS per GPU on 512 GPUs
Assume total compute is 9.1e21 FLOP.
Then training time is 327 hours.
https://www.wolframalpha.com/input?i=9.1*10%5E21+FLOP+%2F+%28512*15.1+teraFLOPS%29",NVIDIA Tesla V100 DGXS 32 GB,512.0,Self-supervised learning,"Recent work in language modeling demonstrates that training large transformer models advances the state of the art in Natural Language Processing applications. However, very large models can be quite difficult to train due to memory constraints. In this work, we present our techniques for training very large transformer models and implement a simple, efficient intra-layer model parallel approach that enables training transformer models with billions of parameters. Our approach does not require a new compiler or library changes, is orthogonal and complimentary to pipeline model parallelism, and can be fully implemented with the insertion of a few communication operations in native PyTorch. We illustrate this approach by converging transformer based models up to 8.3 billion parameters using 512 GPUs. We sustain 15.1 PetaFLOPs across the entire application with 76% scaling efficiency when compared to a strong single GPU baseline that sustains 39 TeraFLOPs, which is 30% of peak FLOPs. To demonstrate that large language models can further advance the state of the art (SOTA), we train an 8.3 billion parameter transformer language model similar to GPT-2 and a 3.9 billion parameter model similar to BERT. We show that careful attention to the placement of layer normalization in BERT-like models is critical to achieving increased performance as the model size grows. Using the GPT-2 model we achieve SOTA results on the WikiText103 (10.8 compared to SOTA perplexity of 15.8) and LAMBADA (66.5% compared to SOTA accuracy of 63.2%) datasets. Our BERT model achieves SOTA results on the RACE dataset (90.9% compared to SOTA accuracy of 89.4%).",Megatron-LM (8.3B),Unreleased,0.2269,Likely,2025-02-17 17:30:03+00:00,United States of America,,,,,,,,,
Hide and Seek,Games,OpenAI,Industry,"B Baker, I Kanitscheider, T Markov, Y Wu",2019-09-17,Emergent Tool Use From Multi-Agent Autocurricula,https://openai.com/blog/emergent-tool-use/,600.0,,,1600000.0,"""The default model, which uses a batch size of 64,000 and 1.6 million parameters,..."" pg. 7 of the Hide and Seek paper, stored in ""RL papers""

source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",1.15e+18,,,"1.6e6 * 2 * 120e9 * 3 ~= 1.15e18 FLOP. We assume the single convolution on the lidar input is negligible, and the rest of the model (which consists of MLPs, self-attention and LSTM) has roughly 1 multiply-add per parameter. The following source has a similar estimate but does not adjust for the full number of episodes: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",,,120000000000.0,"""The default model, which uses a batch size of 64,000 and 1.6 million parameters, requires 132.3 million episodes (31.7 billion frames) over 34 hours of training to reach stage 4 of the skill progression, i.e. ramp defense."" But the full number of episodes, e.g. Figure 1, is 500 million. 500 / 132.3 * 31.7B ~= 120B.",,,,,,,,,Unreleased,,,2025-02-17 19:46:26+00:00,United States of America,,,,,,,,,
Xiaoice,"Language,Vision,Multimodal",Microsoft Research Asia,Industry,"Li Zhou, Jianfeng Gao, Di Li, Heung-Yeung Shum",2019-09-14,"The Design and Implementation of XiaoIce, an Empathetic Social Chatbot",https://arxiv.org/abs/1812.08989,,,,,,,,,,,,,,,,,,,,"This paper describes the development of Microsoft XiaoIce, the most popular social chatbot in the world. XiaoIce is uniquely designed as an AI companion with an emotional connection to satisfy the human need for communication, affection, and social belonging. We take into account both intelligent quotient (IQ) and emotional quotient (EQ) in system design, cast human-machine social chat as decision-making over Markov Decision Processes (MDPs), and optimize XiaoIce for long-term user engagement, measured in expected Conversation-turns Per Session (CPS). We detail the system architecture and key components including dialogue manager, core chat, skills, and an empathetic computing module. We show how XiaoIce dynamically recognizes human feelings and states, understands user intent, and responds to user needs throughout long conversations. Since her launch in 2014, XiaoIce has communicated with over 660 million active users and succeeded in establishing long-term relationships with many of them. Analysis of large scale online logs shows that XiaoIce has achieved an average CPS of 23, which is significantly higher than that of other chatbots and even human conversations.",,Hosted access (no API),,Unknown,2024-09-05 18:08:31+00:00,China,,,,,,,,,
ResNet-152 + ObjectNet,Vision,Massachusetts Institute of Technology (MIT),Academia,"Andrei Barbu, David Mayo, Julian Alverio, William Luo, Christopher Wang, Dan Gutfre- und, Josh Tenenbaum, and Boris Katz",2019-09-06,Objectnet: A large-scale bias-controlled dataset for pushing the limits of object recognition models,https://papers.nips.cc/paper/2019/file/97af07a14cacba681feacf3012730892-Paper.pdf,2393.0,Highly cited,,38000000.0,,1.94e+19,,,"3-5 days of training (say, 4.5), 50 teraFLOP/second at 50% utilization rate (reported) = 1.94E19",ObjectNet,,50000.0,"In total, 95,824 images were collected from 5,982 workers out of which 50,000 images were retained
after validation and included in the dataset",,,,,,,"We collect a large real-world test set, ObjectNet, for object recognition with controls where object backgrounds, rotations, and imaging viewpoints are random. Most scientific experiments have controls, confounds which are removed from the data, to ensure that subjects cannot perform a task by exploiting trivial correlations in the data. Historically, large machine learning and computer vision datasets have lacked such controls. This has resulted in models that must be fine-tuned for new datasets and perform better on datasets than in real-world applications. When tested on ObjectNet, object detectors show a 40-45% drop in performance, with respect to their performance on other benchmarks, due to the controls for biases. Controls make ObjectNet robust to fine-tuning showing only small performance increases. We develop a highly automated platform that enables gathering datasets with controls by crowdsourcing image capturing and annotation. ObjectNet is the same size as the ImageNet test set (50,000 images), and by design does not come paired with a training set in order to encourage generalization. The dataset is both easier than ImageNet – objects are largely centered and unoccluded – and harder, due to the controls. Although we focus on object recognition here, data with controls can be gathered at scale using automated tools throughout machine learning to generate datasets that exercise models in new ways thus providing valuable feedback to researchers. This work opens up new avenues for research in generalizable, robust, and more human-like computer vision and in creating datasets where results are predictive of real-world performance.",,Unreleased,,,2025-02-17 17:30:19+00:00,United States of America,,,,,,,,,
"Mogrifier (d2, MoS2, MC) + dynamic eval",Language,"DeepMind,University of Oxford","Industry,Academia","Gábor Melis, Tomáš Kočiský, Phil Blunsom",2019-09-04,Mogrifier LSTM,https://arxiv.org/abs/1909.01792,109.0,SOTA improvement,"""We establish a new state of the art on all datasets with the exception of Enwik8""",35000000.0,,,,,,WikiText-2,,,,145.0,,,,,,"Many advances in Natural Language Processing have been based upon more expressive models for how inputs interact with the context in which they occur. Recurrent networks, which have enjoyed a modicum of success, still lack the generalization and systematicity ultimately required for modelling language. In this work, we propose an extension to the venerable Long Short-Term Memory in the form of mutual gating of the current input and the previous output. This mechanism affords the modelling of a richer space of interactions between inputs and their context. Equivalently, our model can be viewed as making the transition function given by the LSTM context-dependent. Experiments demonstrate markedly improved generalization on language modelling in the range of 3-4 perplexity points on Penn Treebank and Wikitext-2, and 0.01-0.05 bpc on four character-based datasets. We establish a new state of the art on all datasets with the exception of Enwik8, where we close a large gap between the LSTM and Transformer models.","Mogrifier (d2, MoS2, MC) + dynamic eval",Unreleased,,,2024-09-05 18:08:31+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
UDSMProt,Biology,Fraunhofer Heinrich Hertz Institute,Research collective,"Nils Strodthoff, Patrick Wagner, Markus Wenzel, and Wojciech Samek",2019-09-04,UDSMProt: Universal Deep Sequence Models for Protein Classification,https://www.biorxiv.org/content/10.1101/704874v2.full.pdf,,SOTA improvement,"""The proposed method performs on par with state-of-the-art algorithms that were tailored to these specific tasks or, for two out of three tasks, even outperforms them.""",28303800.0,"Python code:  
# Given LSTM parameters
emb_sz = 400  # embedding size, typically equal to the input size for the first layer
nh = 1150     # number of hidden units
nl = 3        # number of layers

# The formula for a single LSTM layer parameters is:
# P = 4 * ((input_dim + hidden_dim) * hidden_dim + hidden_dim)

# First layer parameters (input_dim is the embedding size)
first_layer_params = 4 * ((emb_sz + nh) * nh + nh)

# For subsequent layers, input_dim is equal to hidden_dim (nh)
subsequent_layer_params = 4 * ((nh + nh) * nh + nh)

# Total parameters for all layers
total_params = first_layer_params + (nl - 1) * subsequent_layer_params

print(total_params)",6.37e+17,,,"Pretraining:
Table 7 gives max of 499k sequences each at (seemingly) L=1024:
499k * 1024 * 28.3M * 6 = 8.7e16

Finetuning:
Largest downstream task has 104940 sequences (Table 5), each sequence has L=1024 residues, 28.3M parameters, and 30 epochs.
105k * 1024 * 30 * 28.3 * 6 = 5.5e17.","SwissProt,a subset of UniProtKB",,,560K proteins,30.0,,,,,Self-supervised learning,"Motivation: Inferring the properties of a protein from its amino acid sequence is one of the key problems in bioinformatics. Most state-of-the-art approaches for protein classification tasks are tailored to single classi- fication tasks and rely on handcrafted features such as position-specific-scoring matrices from expensive database searches. We argue that this level of performance can be reached or even be surpassed by learning a task-agnostic representation once, using self-supervised language modeling, and transferring it to specific tasks by a simple finetuning step.
Results: We put forward a universal deep sequence model that is pretrained on unlabeled protein se- quences from Swiss-Prot and finetuned on protein classification tasks. We apply it to three prototypical tasks, namely enzyme class prediction, gene ontology prediction and remote homology and fold detection. The proposed method performs on par with state-of-the-art algorithms that were tailored to these specific tasks or, for two out of three tasks, even outperforms them. These results stress the possibility of inferring protein properties from the sequence alone and, on more general grounds, the prospects of modern natural language processing methods in omics.",,Open weights (unrestricted),,Likely,2025-02-17 17:30:31+00:00,Germany,,,,,,,,,
"DEQ-Transformer (Medium, Adaptive Embedding)",Language,"Carnegie Mellon University (CMU),Intel Labs","Academia,Industry","Shaojie Bai, J. Zico Kolter, Vladlen Koltun",2019-09-03,Deep Equilibrium Models,https://arxiv.org/abs/1909.01377,596.0,,,110000000.0,,8.16e+17,,,,,,,,12.0,,,,,,"We present a new approach to modeling sequential data: the deep equilibrium model (DEQ). Motivated by an observation that the hidden layers of many existing deep sequence models converge towards some fixed point, we propose the DEQ approach that directly finds these equilibrium points via root-finding. Such a method is equivalent to running an infinite depth (weight-tied) feedforward network, but has the notable advantage that we can analytically backpropagate through the equilibrium point using implicit differentiation. Using this approach, training and prediction in these networks require only constant memory, regardless of the effective ""depth"" of the network. We demonstrate how DEQs can be applied to two state-of-the-art deep sequence models: self-attention transformers and trellis networks. On large-scale language modeling tasks, such as the WikiText-103 benchmark, we show that DEQs 1) often improve performance over these state-of-the-art models (for similar parameter counts); 2) have similar computational requirements to existing models; and 3) vastly reduce memory consumption (often the bottleneck for training large sequence models), demonstrating an up-to 88% memory reduction in our experiments. The code is available at this https URL .","DEQ-Transformer (Medium, Adaptive Embedding)",Open weights (unrestricted),,,2024-11-01 14:03:15+00:00,"United States of America,Multinational,United States of America",,,,,,,,,
LSTM-Large+Behaviorial-Gating,Language,University of Southern California,Academia,"Prashanth Gurunath Shivakumar, Shao-Yen Tseng, Panayiotis Georgiou, Shrikanth Narayanan",2019-08-31,Behavior Gated Language Models,https://arxiv.org/abs/1909.00107,3.0,,,67000000.0,,,,,,,,,,,,,,,,"Most current language modeling techniques only exploit co-occurrence, semantic and syntactic information from the sequence of words. However, a range of information such as the state of the speaker and dynamics of the interaction might be useful. In this work we derive motivation from psycholinguistics and propose the addition of behavioral information into the context of language modeling. We propose the augmentation of language models with an additional module which analyzes the behavioral state of the current context. This behavioral information is used to gate the outputs of the language model before the final word prediction output. We show that the addition of behavioral context in language models achieves lower perplexities on behavior-rich datasets. We also confirm the validity of the proposed models on a variety of model architectures and improve on previous state-of-the-art models with generic domain Penn Treebank Corpus.",LSTM-Large+Behaviorial-Gating,Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
TripletRes,Biology,University of Michigan,Academia,"Yang Li, Chengxin Zhang, Eric W. Bell, Dong-Jun Yu, Yang Zhang",2019-08-13,Ensembling multiple raw coevolutionary features with deep residual neural networks for contact-map prediction in CASP13,https://onlinelibrary.wiley.com/doi/10.1002/prot.25798,,,,,,,,,"4 GPUs, 50 epochs, batch size between 1-4 depending on sequence length",SCOPe 2.07,"""7,671 non-redundant domains, sequence length 30-400, with sequences for which PDB structure resolution is good""",,,50.0,,,,,,"We report the results of residue-residue contact prediction of a new pipeline built purely on the learning of coevolutionary features in the CASP13 experiment. For a query sequence, the pipeline starts with the collection of multiple sequence alignments (MSAs) from multiple genome and metagenome sequence databases using two complementary Hidden Markov Model (HMM)-based searching tools. Three profile matrices, built on covariance, precision, and pseudolikelihood maximization respectively, are then created from the MSAs, which are used as the input features of a deep residual convolutional neural network architecture for contact-map training and prediction. Two ensembling strategies have been proposed to integrate the matrix features through end-to-end training and stacking, resulting in two complementary programs called TripletRes and ResTriplet, respectively. For the 31 free-modeling domains that do not have homologous templates in the PDB, TripletRes and ResTriplet generated comparable results with an average accuracy of 0.640 and 0.646, respectively, for the top L/5 long-range predictions, where 71% and 74% of the cases have an accuracy above 0.5. Detailed data analyses showed that the strength of the pipeline is due to the sensitive MSA construction and the advanced strategies for coevolutionary feature ensembling. Domain splitting was also found to help enhance the contact prediction performance. Nevertheless, contact models for tail regions, which often involve a high number of alignment gaps, and for targets with few homologous sequences are still suboptimal. Development of new approaches where the model is specifically trained on these regions and targets might help address these problems.",,Unreleased,,Unknown,2024-10-21 15:22:55+00:00,United States of America,,,,,,,,,
L_UL-seq,Language,"New York University (NYU),Facebook AI Research,CIFAR AI Research","Academia,Industry,Research collective","Sean Welleck, Ilia Kulikov, Stephen Roller, Emily Dinan, Kyunghyun Cho, Jason Weston",2019-08-12,Neural Text Generation with Unlikelihood Training,https://arxiv.org/abs/1908.04319,517.0,,"""We empirically showed that
unlikelihood training - both at the token and sequence levels - substantially reduced degeneration
according to automatic metrics, and outperformed likelihood-trained models with various decoding
methods according to human evaluation, being superior to the current state-of-the-art approaches.""",247000000.00000003,,,,,,WikiText-103,,,,,,,,,,"Neural text generation is a key tool in natural language applications, but it is well known there are major problems at its core. In particular, standard likelihood training and decoding leads to dull and repetitive outputs. While some post-hoc fixes have been proposed, in particular top-k and nucleus sampling, they do not address the fact that the token-level probabilities predicted by the model are poor. In this paper we show that the likelihood objective itself is at fault, resulting in a model that assigns too much probability to sequences containing repeats and frequent words, unlike those from the human training distribution. We propose a new objective, unlikelihood training, which forces unlikely generations to be assigned lower probability by the model. We show that both token and sequence level unlikelihood training give less repetitive, less dull text while maintaining perplexity, giving superior generations using standard greedy or beam search. According to human evaluations, our approach with standard beam search also outperforms the currently popular decoding methods of nucleus sampling or beam blocking, thus providing a strong alternative to existing techniques.",L_UL-seq,Open weights (non-commercial),,,2024-11-01 14:03:15+00:00,"United States of America,United States of America,Canada",,,,,,,,,
EN^2AS with performance reward,Language,"Beijing Institute of Technology,University of Technology Sydney,Monash University","Academia,Academia,Academia","Miao Zhang, Huiqi Li, Shirui Pan, Taoping Liu, Steven Su",2019-07-22,Efficient Novelty-Driven Neural Architecture Search,https://arxiv.org/abs/1907.09109,1.0,SOTA improvement,"""The best architecture obtained by our algorithm with
the same search space achieves the state-of-the-art test error rate of 2.51% on CIFAR-10""",23000000.0,,,,,,,,,,,,,,,,"One-Shot Neural architecture search (NAS) attracts broad attention recently due to its capacity to reduce the computational hours through weight sharing. However, extensive experiments on several recent works show that there is no positive correlation between the validation accuracy with inherited weights from the supernet and the test accuracy after re-training for One-Shot NAS. Different from devising a controller to find the best performing architecture with inherited weights, this paper focuses on how to sample architectures to train the supernet to make it more predictive. A single-path supernet is adopted, where only a small part of weights are optimized in each step, to reduce the memory demand greatly. Furthermore, we abandon devising complicated reward based architecture sampling controller, and sample architectures to train supernet based on novelty search. An efficient novelty search method for NAS is devised in this paper, and extensive experiments demonstrate the effectiveness and efficiency of our novelty search based architecture sampling method. The best architecture obtained by our algorithm with the same search space achieves the state-of-the-art test error rate of 2.51\% on CIFAR-10 with only 7.5 hours search time in a single GPU, and a validation perplexity of 60.02 and a test perplexity of 57.36 on PTB. We also transfer these search cell structures to larger datasets ImageNet and WikiText-2, respectively.",EN^2AS with performance reward,Unreleased,,,2024-09-05 18:08:31+00:00,"China,Australia,Australia",,,,,,,,,
LSTM+Adam+Lookahead,Language,University of Toronto,Academia,"Michael R. Zhang, James Lucas, Geoffrey Hinton, Jimmy Ba",2019-07-19,"Lookahead Optimizer: k steps forward, 1 step back",https://arxiv.org/abs/1907.08610,678.0,,,7190000.0,,,,,,,,,,,,,,,,"The vast majority of successful deep neural networks are trained using variants of stochastic gradient descent (SGD) algorithms. Recent attempts to improve SGD can be broadly categorized into two approaches: (1) adaptive learning rate schemes, such as AdaGrad and Adam, and (2) accelerated schemes, such as heavy-ball and Nesterov momentum. In this paper, we propose a new optimization algorithm, Lookahead, that is orthogonal to these previous approaches and iteratively updates two sets of weights. Intuitively, the algorithm chooses a search direction by looking ahead at the sequence of fast weights generated by another optimizer. We show that Lookahead improves the learning stability and lowers the variance of its inner optimizer with negligible computation and memory cost. We empirically demonstrate Lookahead can significantly improve the performance of SGD and Adam, even with their default hyperparameter settings on ImageNet, CIFAR-10/100, neural machine translation, and Penn Treebank.",LSTM+Adam+Lookahead,Unreleased,,,2024-11-01 14:03:14+00:00,Canada,,,,,,,,,
RNN + char4-MS-vec,Language,"NTT Communication Science Laboratories,Tohoku University","Industry,Academia","Sho Takase, Jun Suzuki, Masaaki Nagata",2019-07-17,Character n-Gram Embeddings to Improve RNN Language Models,https://arxiv.org/abs/1906.05506,26.0,,,226000000.0,226M,,,,"unknown amount of epochs, total training time and exact type of hardware",WikiText-103,,103000000.0,size of WT103,,,char4-MS-vec 165.46 seconds per epoch,NVIDIA Tesla P100 PCIe 16GB,,,"This paper proposes a novel Recurrent Neural Network (RNN) language model that takes advantage of character information. We focus on character n-grams based on research in the field of word embedding construction (Wieting et al. 2016). Our proposed method constructs word embeddings from character ngram embeddings and combines them with ordinary word embeddings. We demonstrate that the proposed method achieves the best perplexities on the language modeling datasets: Penn Treebank, WikiText-2, and WikiText-103. Moreover, we conduct experiments on application tasks: machine translation and headline generation. The experimental results indicate that our proposed method also positively affects these tasks",RNN + char4-MS-vec,Unreleased,,Confident,2024-09-24 21:22:59+00:00,"Japan,Japan",,,,,,,,,
Graph-based Semi-Supervised Learning (GSSL) Model on MNIST,Vision,West Virginia University,Academia,"Fariborz Taherkhani, Hadi Kazemi, Nasser M. Nasrabadi",2019-07-17,Matrix Completion for Graph-Based Deep Semi-Supervised Learning,https://ojs.aaai.org/index.php/AAAI/article/view/4438,,,,,"""There are 64 number of filters in the first convolutional layer
and 128 number of filters in the second and third convolutional
layers, respectively. The size filters in this architecture
are 3  3 and the convolution stride is set to 1 pixel. To
preserve spatial resolution after convolution, spatial padding
of the convolutional layer is fixed to 1 pixel for all 3  3
convolutional layers. The max-pooling layers are placed after
each convolutional layers, respectively; the max-pooling
is carried out on a 2  2 pixel window with a stride of 2.""

Amount of parameters could be estimated based on model architecture",,,,,MNIST,"""MNIST is handwritten digits of 10 different classes dataset which contains a training set of 60,000 samples, and a test set of 10,000 samples. The digits have been size normalized and centered in a fixed-size ( 28  28) images.
We select 100 samples in the training set as labeled and remaining of it as unlabeled.""",60000.0,"batch size: 128
training steps and epochs unknown",,,,NVIDIA GeForce GTX TITAN X,2.0,,"Convolutional Neural Networks (CNNs) have provided promising achievements for image classification problems. However, training a CNN model relies on a large number of labeled data. Considering the vast amount of unlabeled data available on the web, it is important to make use of these data in conjunction with a small set of labeled data to train a deep learning model. In this paper, we introduce a new iterative Graph-based Semi-Supervised Learning (GSSL) method to train a CNN-based classifier using a large amount of unlabeled data and a small amount of labeled data. In this method, we first construct a similarity graph in which the nodes represent the CNN features corresponding to data points (labeled and unlabeled) while the edges tend to connect the data points with the same class label. In this graph, the missing label of unsupervised nodes is predicted by using a matrix completion method based on rank minimization criterion. In the next step, we use the constructed graph to calculate triplet regularization loss which is added to the supervised loss obtained by initially labeled data to update the CNN network parameters.",,Unreleased,,Unknown,2024-10-15 01:38:47+00:00,United States of America,,,,,,,,,
R-Transformer,Language,"Michigan State University,TAL Education Group (Xueersi)","Academia,Industry","Zhiwei Wang, Yao Ma, Zitao Liu, Jiliang Tang",2019-07-12,R-Transformer: Recurrent Neural Network Enhanced Transformer,https://arxiv.org/abs/1907.05572,97.0,,,15800000.0,,8400000000000000.0,,,,Penn TreeBank,,,,100.0,,,,,,"Recurrent Neural Networks have long been the dominating choice for sequence modeling. However, it severely suffers from two issues: impotent in capturing very long-term dependencies and unable to parallelize the sequential computation procedure. Therefore, many non-recurrent sequence models that are built on convolution and attention operations have been proposed recently. Notably, models with multi-head attention such as Transformer have demonstrated extreme effectiveness in capturing long-term dependencies in a variety of sequence modeling tasks. Despite their success, however, these models lack necessary components to model local structures in sequences and heavily rely on position embeddings that have limited effects and require a considerable amount of design efforts. In this paper, we propose the R-Transformer which enjoys the advantages of both RNNs and the multi-head attention mechanism while avoids their respective drawbacks. The proposed model can effectively capture both local structures and global long-term dependencies in sequences without any use of position embeddings. We evaluate R-Transformer through extensive experiments with data from a wide range of domains and the empirical results show that R-Transformer outperforms the state-of-the-art methods by a large margin in most of the tasks. We have made the code publicly available at \url{this https URL}.",R-Transformer,Unreleased,,,2024-11-01 14:03:15+00:00,"United States of America,China",,,,,,,,,
Pluribus,Games,Facebook AI Research,Industry,"Noam Brown, Tuomas Sandholm",2019-07-11,Superhuman AI for multiplayer poker,https://www.science.org/cms/asset/910714a7-ee2a-486e-9970-42fb893b08d9/pap.pdf,651.0,SOTA improvement,"first to beat humans at multiplayer poker: ""Developing a superhuman AI for multiplayer poker was the widely,recognized main remaining milestone. In this paper we describe Pluribus, an AI capable of defeating elite human professionals in six-player no-limit Texas hold’em poker, the most commonly played poker format in the world.""",,,6.6e+16,,,"Trained in 8 days on a 64 core CPU
https://ai.facebook.com/blog/pluribus-first-ai-to-beat-pros-in-6-player-poker/

""We trained the blueprint strategy for Pluribus in eight days on a 64-core server and required less than 512 GB of RAM. No GPUs were used. At typical cloud computing instance rates, it would cost less than $150 to train.""

Guess: trained on i7 Intel CPU, approx 5e9 FLOP/s for each core.

 https://epoch.ai/blog/estimating-training-compute
8 days, 64 cores, 5e9 FLOP/s, 30% utilization",,,,,,,,,,,,,Unreleased,,,2025-02-17 17:30:46+00:00,United States of America,,,,,,,,,
BigBiGAN,"Vision,Image generation",Google,Industry,"Jeff Donahue, Karen Simonyan",2019-07-04,Large Scale Adversarial Representation Learning,https://arxiv.org/abs/1907.02544,525.0,SOTA improvement,"""BigBiGAN, an unsupervised learning approach based purely on generative models, achieves state-of-the-art results in image representation learning on ImageNet""",86000000.0,https://openai.com/blog/image-gpt/#rfref53,,,,,ImageNet,"""We train a BigBiGAN on unlabeled ImageNet, freeze its learned
representation, and then train a linear classifier on its outputs, fully supervised using all of the training
set labels""",,,,,,,,,"Adversarially trained generative models (GANs) have recently achieved compelling image synthesis results. But despite early successes in using GANs for unsupervised representation learning, they have since been superseded by approaches based on self-supervision. In this work we show that progress in image generation quality translates to substantially improved representation learning performance. Our approach, BigBiGAN, builds upon the state-of-the-art BigGAN model, extending it to representation learning by adding an encoder and modifying the discriminator. We extensively evaluate the representation learning and generation capabilities of these BigBiGAN models, demonstrating that these generation-based models achieve the state of the art in unsupervised representation learning on ImageNet, as well as in unconditional image generation. Pretrained BigBiGAN models -- including image generators and encoders -- are available on TensorFlow Hub (this https URL).",,Open weights (unrestricted),,,2025-02-03 20:45:51+00:00,United States of America,,,,,,,,,
All-attention network + adaptive span,Language,Facebook AI Research,Industry,"Sainbayar Sukhbaatar, Edouard Grave, Guillaume Lample, Herve Jegou, Armand Joulin",2019-07-02,Augmenting Self-attention with Persistent Memory,https://arxiv.org/abs/1907.01470,121.0,,,133000000.0,,4.6e+19,,,,WikiText-103,,,,,,,,,,"Transformer networks have lead to important progress in language modeling and machine translation. These models include two consecutive modules, a feed-forward layer and a self-attention layer. The latter allows the network to capture long term dependencies and are often regarded as the key ingredient in the success of Transformers. Building upon this intuition, we propose a new model that solely consists of attention layers. More precisely, we augment the self-attention layers with persistent memory vectors that play a similar role as the feed-forward layer. Thanks to these vectors, we can remove the feed-forward layer without degrading the performance of a transformer. Our evaluation shows the benefits brought by our model on standard character and word level language modeling benchmarks.",All-attention network + adaptive span,Unreleased,,,2024-11-01 14:03:14+00:00,United States of America,,,,,,,,,
RoBERTa Large,Language,"Facebook,University of Washington","Industry,Academia","Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov",2019-07-01,RoBERTa: A Robustly Optimized BERT Pretraining Approach,https://arxiv.org/abs/1907.11692,21512.0,Highly cited,,355000000.0,,8.5067e+21,,,"Section 5: We pretrain our model using 1024 V100 GPUs for approximately one day.

Note this is the base pretraining comparable to BERT, 100k steps. Subsequently they do more: ""increasing the number of pretraining steps
from 100K to 300K, and then further to 500K"".

So assume 5x the 1024 V100 GPUs for 1d estimate. Mixed precision tensor cores get 1.25e14 FLOP/s.

1024 * 1.25e14 * 5 * 24 * 3600 * 0.3 = 1.65888e22

6ND estimate: batches are 8k sequences of 512 tokens; 500k updates means the model saw 500k * 8k * 512 = 2.048T tokens
6 * 2.048T * 355M = 4.36224e21

geometric mean: sqrt(1.65888e22 * 4.36224e21) = 8.5067e21","CC-News,BookCorpus (BooksCorpus, Toronto Book Corpus),WebText2,Wikipedia","""We consider five English-language corpora of
varying sizes and domains, totaling over 160GB
of uncompressed text. We use the following text
corpora:
• BOOKCORPUS (Zhu et al., 2015) plus English
WIKIPEDIA. This is the original data used to
train BERT. (16GB).
• CC-NEWS, which we collected from the English portion of the CommonCrawl News
dataset (Nagel, 2016). The data contains 63
million English news articles crawled between
September 2016 and February 2019. (76GB after filtering).4
• OPENWEBTEXT (Gokaslan and Cohen, 2019),
an open-source recreation of the WebText corpus described in Radford et al. (2019). The text
is web content extracted from URLs shared on
Reddit with at least three upvotes. (38GB).5
• STORIES, a dataset introduced in Trinh and Le
(2018) containing a subset of CommonCrawl
data filtered to match the story-like style of
Winograd schemas. (31GB).""",32000000000.0,160GB*200M words/GB * (4 words / 3 tokens) = 3.2e10 tokens,,120.0,"First the model is pretrained for 100k steps on 1024 GPUs for 1 day, then pretraining is increased to 500k steps, so assuming they used the same number of GPUs, this would have taken 5 days.",NVIDIA Tesla V100 DGXS 32 GB,1024.0,,"Language model pretraining has led to significant performance gains but careful comparison between different approaches is challenging. Training is computationally expensive, often done on private datasets of different sizes, and, as we will show, hyperparameter choices have significant impact on the final results. We present a replication study of BERT pretraining (Devlin et al., 2019) that carefully measures the impact of many key hyperparameters and training data size. We find that BERT was significantly undertrained, and can match or exceed the performance of every model published after it. Our best model achieves state-of-the-art results on GLUE, RACE and SQuAD. These results highlight the importance of previously overlooked design choices, and raise questions about the source of recently reported improvements. We release our models and code.",,Open weights (unrestricted),,Confident,2025-02-17 17:31:01+00:00,"United States of America,United States of America",,,,,,,,,
Tensorized Transformer (257M),Language,"Tianjin University,Microsoft Research Asia,Beijing Institute of Technology","Academia,Industry,Academia","Xindian Ma, Peng Zhang, Shuai Zhang, Nan Duan, Yuexian Hou, Ming Zhou, Dawei Song",2019-06-24,A Tensorized Transformer for Language Modeling,https://arxiv.org/abs/1906.09777,154.0,SOTA improvement,"""Table 2: Results and compression with state-of-the-art results on PTB and WikiText-103""",257000000.0,,4.76e+18,,,,WikiText-103,,,,30.0,,,,,,"Latest development of neural models has connected the encoder and decoder through a self-attention mechanism. In particular, Transformer, which is solely based on self-attention, has led to breakthroughs in Natural Language Processing (NLP) tasks. However, the multi-head attention mechanism, as a key component of Transformer, limits the effective deployment of the model to a resource-limited setting. In this paper, based on the ideas of tensor decomposition and parameters sharing, we propose a novel self-attention model (namely Multi-linear attention) with Block-Term Tensor Decomposition (BTD). We test and verify the proposed attention method on three language modeling tasks (i.e., PTB, WikiText-103 and One-billion) and a neural machine translation task (i.e., WMT-2016 English-German). Multi-linear attention can not only largely compress the model parameters but also obtain performance improvements, compared with a number of language modeling approaches, such as Transformer, Transformer-XL, and Transformer with tensor train decomposition.",Tensorized Transformer (257M),Unreleased,,,2024-11-01 14:03:15+00:00,"China,China,China",,,,,,,,,
Walking Minotaur robot,Robotics,"University of California (UC) Berkeley,Google Brain","Academia,Industry","Tuomas Haarnoja, Sehoon Ha, Aurick Zhou, Jie Tan, George Tucker, Sergey Levine",2019-06-19,Learning to Walk via Deep Reinforcement Learning,https://arxiv.org/abs/1812.11103,404.0,SOTA improvement,,,,,,,,,,,,,,,,,Reinforcement learning,"Deep reinforcement learning (deep RL) holds the promise of automating the acquisition of complex controllers that can map sensory inputs directly to low-level actions. In the domain of robotic locomotion, deep RL could enable learning locomotion skills with minimal engineering and without an explicit model of the robot dynamics. Unfortunately, applying deep RL to real-world robotic tasks is exceptionally difficult, primarily due to poor sample complexity and sensitivity to hyperparameters. While hyperparameters can be easily tuned in simulated domains, tuning may be prohibitively expensive on physical systems, such as legged robots, that can be damaged through extensive trial-and-error learning. In this paper, we propose a sample-efficient deep RL algorithm based on maximum entropy RL that requires minimal per-task tuning and only a modest number of trials to learn neural network policies. We apply this method to learning walking gaits on a real-world Minitaur robot. Our method can acquire a stable gait from scratch directly in the real world in about two hours, without relying on any model or simulation, and the resulting policy is robust to moderate variations in the environment. We further show that our algorithm achieves state-of-the-art performance on simulated benchmarks with a single set of hyperparameters. Videos of training and the learned policy can be found on the project website.",,Unreleased,,Unknown,2024-11-01 14:03:14+00:00,"United States of America,United States of America",,,,,,,,,
TAPE Transformer,Biology,"University of California (UC) Berkeley,Covariant,Google,Chan Zuckerberg Initiative","Academia,Industry,Industry,Research collective","Roshan Rao, Nicholas Bhattacharya, Neil Thomas, Yan Duan, Xi Chen, John Canny, Pieter Abbeel, Yun S. Song",2019-06-19,Evaluating Protein Transfer Learning with TAPE,https://arxiv.org/abs/1906.08230,697.0,,,38000000.0,"""We use a 12-layer Transformer with a hidden size of 512 units and 8 attention heads, leading to a 38M-parameter model""",3e+19,,,"""All self-supervised models are trained on four NVIDIA V100 GPUs for one week""

(7 * 24 * 3600) s * 4 GPUs * 3.1e13 FLOP/s * 0.4 (utilization assumption) = 3e19",Pfam,"""We use Pfam [33], a database of thirty-one million protein domains used extensively in bioinformatics, as the pretraining corpus for TAPE""",9660000001.000006,"N = 32.2 million sequences
L = 300 residues per sequence
Total datapoints = N × L = 32,200,000 × 300 = 9.66e9 residues",,168.0,,NVIDIA V100,4.0,Self-supervised learning,"Protein modeling is an increasingly popular area of machine learning research. Semi-supervised learning has emerged as an important paradigm in protein modeling due to the high cost of acquiring supervised protein labels, but the current literature is fragmented when it comes to datasets and standardized evaluation techniques. To facilitate progress in this field, we introduce the Tasks Assessing Protein Embeddings (TAPE), a set of five biologically relevant semi-supervised learning tasks spread across different domains of protein biology. We curate tasks into specific training, validation, and test splits to ensure that each task tests biologically relevant generalization that transfers to real-life scenarios. We benchmark a range of approaches to semi-supervised protein representation learning, which span recent work as well as canonical sequence learning techniques. We find that self-supervised pretraining is helpful for almost all models on all tasks, more than doubling performance in some cases. Despite this increase, in several cases features learned by self-supervised pretraining still lag behind features extracted by state-of-the-art non-neural techniques. This gap in performance suggests a huge opportunity for innovative architecture design and improved modeling paradigms that better capture the signal in biological sequences. TAPE will help the machine learning community focus effort on scientifically relevant problems. Toward this end, all data and code used to run these experiments are available at https://github.com/songlab-cal/tape.",,Open weights (unrestricted),,Confident,2025-01-30 05:04:29+00:00,"United States of America,United States of America,United States of America,United States of America",,,,,,,,,
Stacked-LSTM+PruningNo,Language,"University of Electronic Science and Technology of China,Chinese University of Hong Kong (CUHK),Peng Cheng Laboratory","Academia,Academia,Academia","Liangjian Wen, Xuanyang Zhang, Haoli Bai, Zenglin Xu",2019-06-17,Structured Pruning of Recurrent Neural Networks through Neuron Selection,https://arxiv.org/abs/1906.06847,34.0,,,6160000.0,,,,,,,,,,,,,,,,"Recurrent neural networks (RNNs) have recently achieved remarkable successes in a number of applications. However, the huge sizes and computational burden of these models make it difficult for their deployment on edge devices. A practically effective approach is to reduce the overall storage and computation costs of RNNs by network pruning techniques. Despite their successful applications, those pruning methods based on Lasso either produce irregular sparse patterns in weight matrices, which is not helpful in practical speedup. To address these issues, we propose structured pruning method through neuron selection which can reduce the sizes of basic structures of RNNs. More specifically, we introduce two sets of binary random variables, which can be interpreted as gates or switches to the input neurons and the hidden neurons, respectively. We demonstrate that the corresponding optimization problem can be addressed by minimizing the L0 norm of the weight matrix. Finally, experimental results on language modeling and machine reading comprehension tasks have indicated the advantages of the proposed method in comparison with state-of-the-art pruning competitors. In particular, nearly 20 x practical speedup during inference was achieved without losing performance for language model on the Penn TreeBank dataset, indicating the promising performance of the proposed method",Stacked-LSTM+Pruning,Unreleased,,,2024-09-05 18:08:31+00:00,"China,Hong Kong,China,China",,,,,,,,,
LaNet-L (CIFAR-10),Vision,"Brown University,Facebook","Academia,Industry","Linnan Wang, Saining Xie, Teng Li, Rodrigo Fonseca, Yuandong Tian",2019-06-17,Sample-Efficient Neural Architecture Search by Learning Action Space,https://arxiv.org/abs/1906.06832,44.0,SOTA improvement,"""In practice, LaNAS finds a network that achieves SOTA 99.0% accuracy on CIFAR-10""",44100000.0,44.1M,,,,"LaNet-L was trained on 150 GPU-days, however the GPU was not specified",CIFAR-10,"Trained on CIFAR-10, no pretraining",60000.0,,600.0,,,,,Supervised,"Neural Architecture Search (NAS) has emerged as a promising technique for automatic neural network design. However, existing MCTS based NAS approaches often utilize manually designed action space, which is not directly related to the performance metric to be optimized (e.g., accuracy), leading to sample-inefficient explorations of architectures. To improve the sample efficiency, this paper proposes Latent Action Neural Architecture Search (LaNAS), which learns actions to recursively partition the search space into good or bad regions that contain networks with similar performance metrics. During the search phase, as different action sequences lead to regions with different performance, the search efficiency can be significantly improved by biasing towards the good regions. On three NAS tasks, empirical results demonstrate that LaNAS is at least an order more sample efficient than baseline methods including evolutionary algorithms, Bayesian optimizations, and random search. When applied in practice, both one-shot and regular LaNAS consistently outperform existing results. Particularly, LaNAS achieves 99.0% accuracy on CIFAR-10 and 80.8% top1 accuracy at 600 MFLOPS on ImageNet in only 800 samples, significantly outperforming AmoebaNet with 33x fewer samples. Our code is publicly available at this https URL.",,Open weights (non-commercial),,Confident,2024-09-11 18:30:37+00:00,"United States of America,United States of America",,,,,,,,,
PG-SWGAN,Image generation,ETH Zurich,Academia,"Jiqing Wu, Zhiwu Huang, Dinesh Acharya, Wen Li, Janine Thoma, Danda Pani Paudel, Luc Van Gool",2019-06-15,Sliced Wasserstein Generative Models,https://openaccess.thecvf.com/content_CVPR_2019/html/Wu_Sliced_Wasserstein_Generative_Models_CVPR_2019_paper.html,115.0,SOTA improvement,"""For fair comparison, we equip the same progressive growing architecture with our proposed SWGAN objective and its dual
SWD blocks (PG-SWGAN). As shown in Fig. 3 (Right)
and Fig. 5, our PG-SWGAN can outperform PG-WGAN in
terms of both qualitative and quantitative comparison on the
CelebA-HQ and LSUN datasets""",,,,,,,"CIFAR-10,LSUN,CelebA",,,,,,,,,,"In generative modeling, the Wasserstein distance (WD) has emerged as a useful metric to measure the discrepancy between generated and real data distributions. Unfortunately, it is challenging to approximate the WD of high-dimensional distributions. In contrast, the sliced Wasserstein distance (SWD) factorizes high-dimensional distributions into their multiple one-dimensional marginal distributions and is thus easier to approximate. In this paper, we introduce novel approximations of the primal and dual SWD. Instead of using a large number of random projections, as it is done by conventional SWD approximation methods, we propose to approximate SWDs with a small number of parameterized orthogonal projections in an end-to-end deep learning fashion. As concrete applications of our SWD approximations, we design two types of differentiable SWD blocks to equip modern generative frameworks---Auto-Encoders (AE) and Generative Adversarial Networks (GAN). In the experiments, we not only show the superiority of the proposed generative models on standard image synthesis benchmarks, but also demonstrate the state-of-the-art performance on challenging high resolution image and video generation in an unsupervised manner.",,Unreleased,,Unknown,2024-09-11 18:31:42+00:00,Switzerland,,,,,,,,,
FixRes ResNeXt-101 WSL,Vision,Facebook AI,Industry,"Hugo Touvron, Andrea Vedaldi, Matthijs Douze, Hervé Jégou",2019-06-14,Fixing the train-test resolution discrepancy,https://arxiv.org/abs/1906.06423,405.0,SOTA improvement,"""To the best of our knowledge our ResNeXt-101 32x48d surpasses all other models available in the literature""",829000000.0,,,,,,ImageNet,,940000000.0,"""Conversely, when training a ResNeXt-101 32x48d pre-trained in weakly-supervised fashion on 940 million public images at resolution 224x224 and further optimizing for test resolution 320x320, we obtain a test top-1 accuracy of 86.4% (top-5: 98.0%) (single-crop)""",,,,,,,"Data-augmentation is key to the training of neural networks for image classification. This paper first shows that existing augmentations induce a significant discrepancy between the typical size of the objects seen by the classifier at train and test time. We experimentally validate that, for a target test resolution, using a lower train resolution offers better classification at test time.
We then propose a simple yet effective and efficient strategy to optimize the classifier performance when the train and test resolutions differ. It involves only a computationally cheap fine-tuning of the network at the test resolution. This enables training strong classifiers using small training images. For instance, we obtain 77.1% top-1 accuracy on ImageNet with a ResNet-50 trained on 128x128 images, and 79.8% with one trained on 224x224 image. In addition, if we use extra training data we get 82.5% with the ResNet-50 train with 224x224 images.
Conversely, when training a ResNeXt-101 32x48d pre-trained in weakly-supervised fashion on 940 million public images at resolution 224x224 and further optimizing for test resolution 320x320, we obtain a test top-1 accuracy of 86.4% (top-5: 98.0%) (single-crop). To the best of our knowledge this is the highest ImageNet single-crop, top-1 and top-5 accuracy to date.",,Open weights (non-commercial),,,2025-02-03 20:46:08+00:00,United States of America,,,,,,,,,
Char-CNN-BiLSTM,Language,Capital One,Industry,"Chris Larson, Tarek Lahlou, Diana Mingels, Zachary Kulis, Erik Mueller",2019-06-13,Telephonetic: Making Neural Language Models Robust to ASR and Semantic Noise,https://arxiv.org/abs/1906.05678,2.0,SOTA improvement,"""Notably, our language model achieves a test perplexity of 37.49 on PTB, which to our knowledge is state-of-the-art among models trained only on PTB.""",,,,,,,,,,,,,,,,,"Speech processing systems rely on robust feature extraction to handle phonetic and semantic variations found in natural language. While techniques exist for desensitizing features to common noise patterns produced by Speech-to-Text (STT) and Text-to-Speech (TTS) systems, the question remains how to best leverage state-of-the-art language models (which capture rich semantic features, but are trained on only written text) on inputs with ASR errors. In this paper, we present Telephonetic, a data augmentation framework that helps robustify language model features to ASR corrupted inputs. To capture phonetic alterations, we employ a character-level language model trained using probabilistic masking. Phonetic augmentations are generated in two stages: a TTS encoder (Tacotron 2, WaveGlow) and a STT decoder (DeepSpeech). Similarly, semantic perturbations are produced by sampling from nearby words in an embedding space, which is computed using the BERT language model. Words are selected for augmentation according to a hierarchical grammar sampling strategy. Telephonetic is evaluated on the Penn Treebank (PTB) corpus, and demonstrates its effectiveness as a bootstrapping technique for transferring neural language models to the speech domain. Notably, our language model achieves a test perplexity of 37.49 on PTB, which to our knowledge is state-of-the-art among models trained only on PTB.",Char-CNN-BiLSTM,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
AWD-LSTM + MoS + Partial Shuffled,Language,University of Texas at Austin,Academia,"Dilin Wang, Chengyue Gong, Qiang Liu",2019-06-10,Improving Neural Language Modeling via Adversarial Training,https://arxiv.org/abs/1906.03805,112.0,SOTA improvement,"""our method improves on the single model state-of-the-art results for language modeling on Penn Treebank (PTB) and Wikitext-2, achieving test perplexity scores of 46.01 and 38.07, respectively""",35000000.0,,3.28e+17,,,,WikiText-2,,,,750.0,,,,,,"Recently, substantial progress has been made in language modeling by using deep neural networks. However, in practice, large scale neural language models have been shown to be prone to overfitting. In this paper, we present a simple yet highly effective adversarial training mechanism for regularizing neural language models. The idea is to introduce adversarial noise to the output embedding layer while training the models. We show that the optimal adversarial noise yields a simple closed-form solution, thus allowing us to develop a simple and time efficient algorithm. Theoretically, we show that our adversarial mechanism effectively encourages the diversity of the embedding vectors, helping to increase the robustness of models. Empirically, we show that our method improves on the single model state-of-the-art results for language modeling on Penn Treebank (PTB) and Wikitext-2, achieving test perplexity scores of 46.01 and 38.07, respectively. When applied to machine translation, our method improves over various transformer-based translation baselines in BLEU scores on the WMT14 English-German and IWSLT14 German-English tasks.",AWD-LSTM + MoS + Partial Shuffled,Open weights (non-commercial),,,2024-11-01 14:03:15+00:00,United States of America,,,,,,,,,
Transformer-XL Large + Phrase Induction,Language,"Massachusetts Institute of Technology (MIT),University of Illinois Urbana-Champaign (UIUC)","Academia,Academia","Hongyin Luo, Lan Jiang, Yonatan Belinkov, James Glass",2019-06-04,"Improving Neural Language Models by Segmenting, Attending, and Predicting the Future",https://arxiv.org/abs/1906.01702,12.0,SOTA improvement,"""We achieved a new state-of-the-art performance of 17.4 perplexity on the Wikitext-103 dataset""",257000000.0,,1.1058826e+19,,,"Fine-tuned from pre-trained Transformer-XL Large (1.09e19 FLOP). Additional 1.6e17 FLOP of fine-tuning from one epoch on WikiText-103:
6 * 257M * 103M = 1.588e17.

Total: 1.11e19",WikiText-103,,,,1.0,,,,,,"Common language models typically predict the next word given the context. In this work, we propose a method that improves language modeling by learning to align the given context and the following phrase. The model does not require any linguistic annotation of phrase segmentation. Instead, we define syntactic heights and phrase segmentation rules, enabling the model to automatically induce phrases, recognize their task-specific heads, and generate phrase embeddings in an unsupervised learning manner. Our method can easily be applied to language models with different network architectures since an independent module is used for phrase induction and context-phrase alignment, and no change is required in the underlying language modeling network. Experiments have shown that our model outperformed several strong baseline models on different data sets. We achieved a new state-of-the-art performance of 17.4 perplexity on the Wikitext-103 dataset. Additionally, visualizing the outputs of the phrase induction module showed that our model is able to learn approximate phrase-level structural knowledge without any annotation.",Transformer-XL Large + Phrase Induction,Unreleased,,,2025-03-07 05:43:44+00:00,"United States of America,United States of America",Transformer-XL (257M),,,,,,,,
AMDIM,"Vision,Image generation",Microsoft Research,Industry,"Philip Bachman, R Devon Hjelm, William Buchwalter",2019-06-03,Learning Representations by Maximizing Mutual Information Across Views,https://arxiv.org/abs/1906.00910,1371.0,Highly cited,,626000000.0,source: https://openai.com/blog/image-gpt/#rfref13e,,,,,"ImageNet,CIFAR-10","""We evaluate our model using standard datasets: CIFAR10, CIFAR100, STL10 [Coates et al., 2011], ImageNet1 [Russakovsky et al., 2015], and Places205 [Zhou et al., 2014].""",,,,,,,,,"We propose an approach to self-supervised representation learning based on maximizing mutual information between features extracted from multiple views of a shared context. For example, one could produce multiple views of a local spatio-temporal context by observing it from different locations (e.g., camera positions within a scene), and via different modalities (e.g., tactile, auditory, or visual). Or, an ImageNet image could provide a context from which one produces multiple views by repeatedly applying data augmentation. Maximizing mutual information between features extracted from these views requires capturing information about high-level factors whose influence spans multiple views -- e.g., presence of certain objects or occurrence of certain events.
Following our proposed approach, we develop a model which learns image representations that significantly outperform prior methods on the tasks we consider. Most notably, using self-supervised learning, our model learns representations which achieve 68.1% accuracy on ImageNet using standard linear evaluation. This beats prior results by over 12% and concurrent results by 7%. When we extend our model to use mixture-based representations, segmentation behaviour emerges as a natural side-effect. Our code is available online: this https URL.
",,Open weights (unrestricted),,,2025-02-03 20:46:18+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
XLNet,Language,"Carnegie Mellon University (CMU),Google Brain","Academia,Industry","Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, Quoc V. Le",2019-06-01,XLNet: Generalized Autoregressive Pretraining for Language Understanding,https://arxiv.org/abs/1906.08237,7785.0,Highly cited,,340000000.0,"Same size as BERT-Large, which was 340M",6.19e+21,,,"""Specifically, we train on 512 TPU v3 chips for 500K steps with an Adam weight decay optimizer, linear learning rate decay, and a batch size of 8192, which takes about 5.5 days.""

123 teraflops * 5.5 days * 24 * 3600 * 512 * 0.3 utilization (assumption) ~= 8977858560*10^12=8.9*10^21

Alternatively, 500k steps * batch size 8192 * sequence length 512 = 2.1T training passes. 340 million * 6 * 2 trillion = 4.3e21 FLOP. 

Geometric mean: sqrt(8.9e21 * 4.3e21) = 6.19e21","Wikipedia,BookCorpus (BooksCorpus, Toronto Book Corpus)","""Following BERT [10], we use the BooksCorpus [40] and English Wikipedia as part of our pretraining
data, which have 13GB plain text combined. In addition, we include Giga5 (16GB text) [26],
ClueWeb 2012-B (extended from [5]), and Common Crawl [6] for pretraining. We use heuristics
to aggressively filter out short or low-quality articles for ClueWeb 2012-B and Common Crawl,
which results in 19GB and 110GB text respectively. After tokenization with SentencePiece [17], we
obtain 2.78B, 1.09B, 4.75B, 4.30B, and 19.97B subword pieces for Wikipedia, BooksCorpus, Giga5,
ClueWeb, and Common Crawl respectively, which are 32.89B in total.""",,,63.7626026148,,,Google TPU v3,,,"With the capability of modeling bidirectional contexts, denoising autoencoding based pretraining like BERT achieves better performance than pretraining approaches based on autoregressive language modeling. However, relying on corrupting the input with masks, BERT neglects dependency between the masked positions and suffers from a pretrain-finetune discrepancy. In light of these pros and cons, we propose XLNet, a generalized autoregressive pretraining method that (1) enables learning bidirectional contexts by maximizing the expected likelihood over all permutations of the factorization order and (2) overcomes the limitations of BERT thanks to its autoregressive formulation. Furthermore, XLNet integrates ideas from Transformer-XL, the state-of-the-art autoregressive model, into pretraining. Empirically, under comparable experiment settings, XLNet outperforms BERT on 20 tasks, often by a large margin, including question answering, natural language inference, sentiment analysis, and document ranking.",,Open weights (unrestricted),,Confident,2024-12-12 18:09:33+00:00,"United States of America,United States of America",,,,,,,8192.0,,
XLM,Language,Facebook,Industry,"Guillaume Lample, Alexis Conneau",2019-06-01,Cross-lingual Language Model Pretraining,https://arxiv.org/abs/1901.07291,2588.0,"Highly cited,SOTA improvement","""On supervised machine translation, we obtain a new state of the art of 38.5 BLEU on WMT’16 Romanian-English, outperforming the previous best approach by more
than 4 BLEU""",665000000.0,,,,,,,"subset of Wikipedia: ""We use WikiExtractor2
to extract raw sentences
from Wikipedia dumps and use them as monolingual data for the CLM and MLM objectives.""",,,,,,,,,"Recent studies have demonstrated the efficiency of generative pretraining for English natural language understanding. In this work, we extend this approach to multiple languages and show the effectiveness of cross-lingual pretraining. We propose two methods to learn cross-lingual language models (XLMs): one unsupervised that only relies on monolingual data, and one supervised that leverages parallel data with a new cross-lingual language model objective. We obtain state-of-the-art results on cross-lingual classification, unsupervised and supervised machine translation. On XNLI, our approach pushes the state of the art by an absolute gain of 4.9% accuracy. On unsupervised machine translation, we obtain 34.3 BLEU on WMT'16 German-English, improving the previous state of the art by more than 9 BLEU. On supervised machine translation, we obtain a new state of the art of 38.5 BLEU on WMT'16 Romanian-English, outperforming the previous best approach by more than 4 BLEU. Our code and pretrained models will be made publicly available.",,Open weights (non-commercial),,,2024-11-01 14:03:14+00:00,United States of America,,,,,,,,,
DLRM-2020,Recommendation,Facebook AI,Industry,"Maxim Naumov, Dheevatsa Mudigere, Hao-Jun Michael Shi, Jianyu Huang, Narayanan Sundaraman, Jongsoo Park, Xiaodong Wang, Udit Gupta, Carole-Jean Wu, Alisson G. Azzolini, Dmytro Dzhulgakov, Andrey Mallevich, Ilia Cherniavskii, Yinghai Lu, Raghuraman Krishnamoorthi, Ansha Yu, Volodymyr Kondratenko, Stephanie Pereira, Xianjie Chen, Wenlin Chen, Vijay Rao, Bill Jia, Liang Xiong, Misha Smelyanskiy",2019-05-31,Deep Learning Recommendation Model for Personalization and Recommendation Systems,https://arxiv.org/abs/1906.00091,644.0,SOTA improvement,"""In this paper, we develop a state-of-the-art deep learning recommendation model
(DLRM)""",100000000000.0,"Figure 1

https://arxiv.org/abs/2104.05158",4e+18,,,"Figure 1

https://arxiv.org/abs/2104.05158",,,,,,,,,,,"With the advent of deep learning, neural network-based recommendation models have emerged as an important tool for tackling personalization and recommendation tasks. These networks differ significantly from other deep learning networks due to their need to handle categorical features and are not well studied or understood. In this paper, we develop a state-of-the-art deep learning recommendation model (DLRM) and provide its implementation in both PyTorch and Caffe2 frameworks. In addition, we design a specialized parallelization scheme utilizing model parallelism on the embedding tables to mitigate memory constraints while exploiting data parallelism to scale-out compute from the fully-connected layers. We compare DLRM against existing recommendation models and characterize its performance on the Big Basin AI platform, demonstrating its usefulness as a benchmark for future algorithmic experimentation and system co-design.",,Unreleased,,,2025-02-17 19:45:52+00:00,United States of America,,,,,,,,,
Grover-Mega,Language,University of Washington,Academia,"R Zellers, A Holtzman, H Rashkin, Y Bisk",2019-05-29,Defending Against Neural Fake News,https://arxiv.org/abs/1905.12616,906.0,,,1500000000.0,"""Our largest model, Grover-Mega, has 48 layers and 1.5 billion parameters, on par with GPT2""",5.7e+21,,,"""We trained Grover-Mega for 800k iterations, using a batch size of 512 and 256 TPU v3 cores. Training time was two weeks.""

TPUv3 is 123 teraflops, but for 2 cores. 

So 256/2 * 123 teraflops * 14 days * 24 * 3600 * 0.3 (utilization assumption) = 5.7e21",,,,,,,,,,,"Recent progress in natural language generation has raised dual-use concerns. While applications like summarization and translation are positive, the underlying technology also might enable adversaries to generate neural fake news: targeted propaganda that closely mimics the style of real news.
Modern computer security relies on careful threat modeling: identifying potential threats and vulnerabilities from an adversary's point of view, and exploring potential mitigations to these threats. Likewise, developing robust defenses against neural fake news requires us first to carefully investigate and characterize the risks of these models. We thus present a model for controllable text generation called Grover. Given a headline like `Link Found Between Vaccines and Autism,' Grover can generate the rest of the article; humans find these generations to be more trustworthy than human-written disinformation.
Developing robust verification techniques against generators like Grover is critical. We find that best current discriminators can classify neural fake news from real, human-written, news with 73% accuracy, assuming access to a moderate level of training data. Counterintuitively, the best defense against Grover turns out to be Grover itself, with 92% accuracy, demonstrating the importance of public release of strong generators. We investigate these results further, showing that exposure bias -- and sampling strategies that alleviate its effects -- both leave artifacts that similar discriminators can pick up on. We conclude by discussing ethical issues regarding the technology, and plan to release Grover publicly, helping pave the way for better detection of neural fake news.",,Open weights (unrestricted),,,2025-02-17 17:31:30+00:00,United States of America,,,,,,,,,
MnasNet-A3,Vision,Google,Industry,"Mingxing Tan, Bo Chen, Ruoming Pang, Vijay Vasudevan, Mark Sandler, Andrew Howard, Quoc V. Le",2019-05-29,MnasNet: Platform-Aware Neural Architecture Search for Mobile,https://arxiv.org/abs/1807.11626,2788.0,Highly cited,,5200000.0,From https://arxiv.org/pdf/1807.11626.pdf,1.5e+21,,,"""each architecture search takes 4.5 days on 64 TPUv2 devices""
This seems to be referring to a TPUv2 pod, consisting of 64 four-chip modules. The total performance is 11.5 petaFLOPS.
https://en.wikipedia.org/wiki/Tensor_Processing_Unit#Second_generation_TPU
Assuming a 33% utilization rate:

4.5 days * 64 * 180 teraFLOPS * 0.33 = 1.48*10^21 FLOP

However, it is unclear if ""64 TPUv2 devices"" refers to chips or modules, so the true compute might be 1/4 of this amount.",ImageNet,,1280000.0,"""In this paper, we directly perform our architecture search on the ImageNet training set but with fewer training steps (5 epochs). As a common practice, we reserve randomly selected 50K images from the training set as the fixed validation set. """,,108.0,,Google TPU v3,256.0,,"Designing convolutional neural networks (CNN) for mobile devices is challenging because mobile models need to be small and fast, yet still accurate. Although significant efforts have been dedicated to design and improve mobile CNNs on all dimensions, it is very difficult to manually balance these trade-offs when there are so many architectural possibilities to consider. In this paper, we propose an automated mobile neural architecture search (MNAS) approach, which explicitly incorporate model latency into the main objective so that the search can identify a model that achieves a good trade-off between accuracy and latency. Unlike previous work, where latency is considered via another, often inaccurate proxy (e.g., FLOPS), our approach directly measures real-world inference latency by executing the model on mobile phones. To further strike the right balance between flexibility and search space size, we propose a novel factorized hierarchical search space that encourages layer diversity throughout the network. Experimental results show that our approach consistently outperforms state-of-the-art mobile CNN models across multiple vision tasks. On the ImageNet classification task, our MnasNet achieves 75.2% top-1 accuracy with 78ms latency on a Pixel phone, which is 1.8x faster than MobileNetV2 [29] with 0.5% higher accuracy and 2.3x faster than NASNet [36] with 1.2% higher accuracy. Our MnasNet also achieves better mAP quality than MobileNets for COCO object detection. Code is at this https URL",,Open weights (unrestricted),,Speculative,2024-12-16 15:48:11+00:00,United States of America,,,,,,,,,
MnasNet-A1 + SSDLite,Vision,Google,Industry,"Mingxing Tan, Bo Chen, Ruoming Pang, Vijay Vasudevan, Mark Sandler, Andrew Howard, Quoc V. Le",2019-05-29,MnasNet: Platform-Aware Neural Architecture Search for Mobile,https://arxiv.org/abs/1807.11626,2788.0,Highly cited,,4900000.0,From https://arxiv.org/pdf/1807.11626.pdf,1.5e+21,,,"""each architecture search takes 4.5 days on 64 TPUv2 devices""
This seems to be referring to a TPUv2 pod, consisting of 64 four-chip modules. The total performance is 11.5 petaFLOPS.
https://en.wikipedia.org/wiki/Tensor_Processing_Unit#Second_generation_TPU
Assuming a 33% utilization rate:

4.5 days * 64 * 180 teraFLOPS * 0.33 = 1.48*10^21 FLOP

However, it is unclear if ""64 TPUv2 devices"" refers to chips or modules, so the true compute might be 1/4 of this amount.",COCO,,118000.0,,,108.0,,Google TPU v3,256.0,,"Designing convolutional neural networks (CNN) for mobile devices is challenging because mobile models need to be small and fast, yet still accurate. Although significant efforts have been dedicated to design and improve mobile CNNs on all dimensions, it is very difficult to manually balance these trade-offs when there are so many architectural possibilities to consider. In this paper, we propose an automated mobile neural architecture search (MNAS) approach, which explicitly incorporate model latency into the main objective so that the search can identify a model that achieves a good trade-off between accuracy and latency. Unlike previous work, where latency is considered via another, often inaccurate proxy (e.g., FLOPS), our approach directly measures real-world inference latency by executing the model on mobile phones. To further strike the right balance between flexibility and search space size, we propose a novel factorized hierarchical search space that encourages layer diversity throughout the network. Experimental results show that our approach consistently outperforms state-of-the-art mobile CNN models across multiple vision tasks. On the ImageNet classification task, our MnasNet achieves 75.2% top-1 accuracy with 78ms latency on a Pixel phone, which is 1.8x faster than MobileNetV2 [29] with 0.5% higher accuracy and 2.3x faster than NASNet [36] with 1.2% higher accuracy. Our MnasNet also achieves better mAP quality than MobileNets for COCO object detection. Code is at this https URL",,Open weights (unrestricted),,Speculative,2024-12-16 15:48:04+00:00,United States of America,,,,,,,,,
EfficientNet-L2,Vision,Google,Industry,"Mingxing Tan, Quoc V. Le",2019-05-28,EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks,https://arxiv.org/abs/1905.11946,15327.0,Highly cited,,480000000.0,,,,,,ImageNet,,,,,,,,,,"Convolutional Neural Networks (ConvNets) are commonly developed at a fixed resource budget, and then scaled up for better accuracy if more resources are available. In this paper, we systematically study model scaling and identify that carefully balancing network depth, width, and resolution can lead to better performance. Based on this observation, we propose a new scaling method that uniformly scales all dimensions of depth/width/resolution using a simple yet highly effective compound coefficient. We demonstrate the effectiveness of this method on scaling up MobileNets and ResNet.
To go even further, we use neural architecture search to design a new baseline network and scale it up to obtain a family of models, called EfficientNets, which achieve much better accuracy and efficiency than previous ConvNets. In particular, our EfficientNet-B7 achieves state-of-the-art 84.3% top-1 accuracy on ImageNet, while being 8.4x smaller and 6.1x faster on inference than the best existing ConvNet. Our EfficientNets also transfer well and achieve state-of-the-art accuracy on CIFAR-100 (91.7%), Flowers (98.8%), and 3 other transfer learning datasets, with an order of magnitude fewer parameters. Source code is at this https URL.",,Open weights (unrestricted),,,2025-02-04 00:22:05+00:00,United States of America,,,,,,,,,
RSM,Language,Cerenaut,,"David Rawlinson, Abdelrahman Ahmed, Gideon Kowadlo",2019-05-28,Learning distant cause and effect using only local and immediate credit assignment,https://arxiv.org/abs/1905.11589,3.0,,,,,,,,,,,,,,,,,,,"We present a recurrent neural network memory that uses sparse coding to create a combinatoric encoding of sequential inputs. Using several examples, we show that the network can associate distant causes and effects in a discrete stochastic process, predict partially-observable higher-order sequences, and enable a DQN agent to navigate a maze by giving it memory. The network uses only biologically-plausible, local and immediate credit assignment. Memory requirements are typically one order of magnitude less than existing LSTM, GRU and autoregressive feed-forward sequence learning models. The most significant limitation of the memory is generalization to unseen input sequences. We explore this limitation by measuring next-word prediction perplexity on the Penn Treebank dataset.",RSM,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,Australia,,,,,,,,,
CPC v2,"Vision,Image generation","DeepMind,University of California (UC) Berkeley","Industry,Academia","Olivier J. Hénaff, Aravind Srinivas, Jeffrey De Fauw, Ali Razavi, Carl Doersch, S. M. Ali Eslami, Aaron van den Oord",2019-05-22,Data-Efficient Image Recognition with Contrastive Predictive Coding,https://arxiv.org/abs/1905.09272,491.0,SOTA improvement,"""this unsupervised representation substantially improves transfer learning to object detection on the
PASCAL VOC dataset, surpassing fully supervised pre-trained ImageNet classifiers""",303000000.0,source: https://openai.com/blog/image-gpt/#rfref25d,,,,,ImageNet,"""In all cases, the dataset of unlabeled images Du we pre-train
on is the full ImageNet ILSVRC 2012 training set""",,,,,,,,,"Human observers can learn to recognize new categories of images from a handful of examples, yet doing so with artificial ones remains an open challenge. We hypothesize that data-efficient recognition is enabled by representations which make the variability in natural signals more predictable. We therefore revisit and improve Contrastive Predictive Coding, an unsupervised objective for learning such representations. This new implementation produces features which support state-of-the-art linear classification accuracy on the ImageNet dataset. When used as input for non-linear classification with deep neural networks, this representation allows us to use 2-5x less labels than classifiers trained directly on image pixels. Finally, this unsupervised representation substantially improves transfer learning to object detection on the PASCAL VOC dataset, surpassing fully supervised pre-trained ImageNet classifiers.",,Unreleased,,,2025-02-04 00:22:20+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
AWD-LSTM-DRILL + dynamic evaluation† (WT2),Language,IDIAP,Academia,"Nikolaos Pappas, James Henderson",2019-05-14,Deep Residual Output Layers for Neural Language Generation,https://arxiv.org/abs/1905.05513,7.0,SOTA improvement,"""our models improve over the state-of-the-art by +1.6 perplexity on PennTreebank and by +3.9 perplexity on
Wikitext-2""",34000000.0,,4.24e+17,,,,WikiText-2,,,,1000.0,,,,,,"Many tasks, including language generation, benefit from learning the structure of the output space, particularly when the space of output labels is large and the data is sparse. State-of-the-art neural language models indirectly capture the output space structure in their classifier weights since they lack parameter sharing across output labels. Learning shared output label mappings helps, but existing methods have limited expressivity and are prone to overfitting. In this paper, we investigate the usefulness of more powerful shared mappings for output labels, and propose a deep residual output mapping with dropout between layers to better capture the structure of the output space and avoid overfitting. Evaluations on three language generation tasks show that our output label mapping can match or improve state-of-the-art recurrent and self-attention architectures, and suggest that the classifier does not necessarily need to be high-rank to better model natural language if it is better at capturing the structure of the output space.",AWD-LSTM-DRILL + dynamic evaluation† (WT2),Open weights (unrestricted),,,2024-09-10 21:22:25+00:00,Switzerland,,,,,,,,,
ResNet-50 Billion-scale,Vision,Facebook AI,Industry,"I. Zeki Yalniz, Hervé Jégou, Kan Chen, Manohar Paluri, Dhruv Mahajan",2019-05-02,Billion-scale semi-supervised learning for image classification,https://arxiv.org/abs/1905.00546,436.0,Highly cited,,25000000.0,25M parameters vanilla ResNet50,,,,,"YFCC-100M,IG-1B-Targeted","""The following web-scale datasets are used for
semi-supervised learning experiments involving an unlabeled dataset U.
• YFCC-100M [38] is a publicly available dataset of about
90 million images from Flickr website with associated
tags. After removing duplicates, we use this data for
most experiments and ablations.
• IG-1B-Targeted: Following [27], we collected a dataset
of 1B public images with associated hashtags from a
social media website. We consider images tagged with
at least one of the 1500 hashtags associated with one of
the 1000 ImageNet-1k classes.""",1090000000.0,"1 billion + 90 million, per above",,,,,,,,,Open weights (non-commercial),,,2025-01-21 19:22:28+00:00,United States of America,,,,,,,,,
ResNeXt-101 Billion-scale,Vision,Facebook AI,Industry,"I. Zeki Yalniz, Hervé Jégou, Kan Chen, Manohar Paluri, Dhruv Mahajan",2019-05-02,Billion-scale semi-supervised learning for image classification,https://arxiv.org/abs/1905.00546,436.0,SOTA improvement,"""We demonstrate the performance of our method on popular classification benchmarks for both images and videos and significantly outperforms the state of the art.""",193000000.0,,,,,,YFCC-100M,,,,,,,,,,"This paper presents a study of semi-supervised learning with large convolutional networks. We propose a pipeline, based on a teacher/student paradigm, that leverages a large collection of unlabelled images (up to 1 billion). Our main goal is to improve the performance for a given target architecture, like ResNet-50 or ResNext. We provide an extensive analysis of the success factors of our approach, which leads us to formulate some recommendations to produce high-accuracy models for image classification with semi-supervised learning. As a result, our approach brings important gains to standard architectures for image, video and fine-grained classification. For instance, by leveraging one billion unlabelled images, our learned vanilla ResNet-50 achieves 81.2% top-1 accuracy on the ImageNet benchmark.",,Open weights (non-commercial),,,2025-02-04 00:22:37+00:00,United States of America,,,,,,,,,
RaptorX-Contact,Biology,Toyota Technological Institute at Chicago,Academia,"Jinbo Xu, Sheng Wang",2019-05-02,Analysis of distance-based protein structure prediction by deep learning in CASP13,https://www.biorxiv.org/content/biorxiv/early/2019/05/02/624460.full.pdf,,,,,,,,,,PDB25 and UniProt,,450000000.9999997,"Calculation steps:
1. Training proteins = 11,410 - 900 = 10,510 proteins
2. Residue pairs per protein = (300 × 299)/2 = 44,850 pairs
3. Total data points = 10,510 × 44,850 = 4.73 × 10⁸
Final estimate ≈ 4.5 × 10⁸ data points",,,,,,,"This paper reports the CASP13 results of distance-based contact prediction, threading and folding methods implemented in three RaptorX servers, which are built upon the powerful deep convolutional residual neural network (ResNet) method initiated by us for contact prediction in CASP12. On the 32 CASP13 FM (free-modeling) targets with a median MSA (multiple sequence alignment) depth of 36, RaptorX yielded the best contact prediction among 46 groups and almost the best 3D structure modeling among all server groups without time-consuming conformation sampling. In particular, RaptorX achieved top L/5, L/2 and L long-range contact precision of 70%, 58% and 45%, respectively, and predicted correct folds (TMscore>0.5) for 18 of 32 targets. Although on average underperforming AlphaFold in 3D modeling, RaptorX predicted correct folds for all FM targets with >300 residues (T0950-D1, T0969-D1 and T1000-D2) and generated the best 3D models for T0950-D1 and T0969-D1 among all groups. This CASP13 test confirms our previous findings: (1) predicted distance is more useful than contacts for both template-based and free modeling; and (2) structure modeling may be improved by integrating alignment and co- evolutionary information via deep learning. This paper will discuss progress we have made since CASP12, the strength and weakness of our methods, and why deep learning performed much better in CASP13.",,Unreleased,,Unknown,2025-01-30 05:05:11+00:00,United States of America,,,,,,,,,
Neuro-Symbolic Concept Learner,"Vision,Language","Massachusetts Institute of Technology (MIT),Tsinghua University,MIT-IBM Watson AI Lab,DeepMind","Academia,Academia,Academia,Industry,Industry","Jiayuan Mao, Chuang Gan, Pushmeet Kohli, Joshua B. Tenenbaum, Jiajun Wu",2019-04-26,"The Neuro-Symbolic Concept Learner: Interpreting Scenes, Words, and Sentences From Natural Supervision",https://arxiv.org/abs/1904.12584,695.0,SOTA improvement,"""NS-CL’s modularized design enables interpretable, robust, and accurate visual reasoning: it achieves state-of-the-art performance on the CLEVR datase""",,,,,,,"CLEVR,VQS,ImageNet","CLEVR, ImageNet, VQS
5000 in CLEVR
64509 in VQS
and whole ImageNet for pretraining
""We train NS-CL on 5K images (<10% of CLEVR’s 70K training images). We generate 20 questions for each image for the entire curriculum learning process""

section 4.3 ""All models use a pre-trained semantic parser on the full CLEVR dataset""

""The only extra supervision of the visual perception module comes from the pre-training of the perception modules on ImageNet (Deng et al., 2009). To quantify the influence of this pre-training""

In appendix G.2 (VQS Dataset):""All models are trained on the first 63,509 images of the training set, and tested on the test split. For hyper-parameter tuning and model selection, the rest 5,000 images from the training set are used for validation.",,"CLEVR, ImageNet, VQS
5000 in CLEVR
64509 in VQS
and whole ImageNet for pretraining
""We train NS-CL on 5K images (<10% of CLEVR’s 70K training images). We generate 20 questions for each image for the entire curriculum learning process""

section 4.3 ""All models use a pre-trained semantic parser on the full CLEVR dataset""

""The only extra supervision of the visual perception module comes from the pre-training of the perception modules on ImageNet (Deng et al., 2009). To quantify the influence of this pre-training""

In appendix G.2 (VQS Dataset):
""All models are trained on the first 63,509 images of the training set, and tested on the test split. For hyper-parameter tuning and model selection, the rest 5,000 images from the training set are used for validation.",,,,,,,"We propose the Neuro-Symbolic Concept Learner (NS-CL), a model that learns visual concepts, words, and semantic parsing of sentences without explicit supervision on any of them; instead, our model learns by simply looking at images and reading paired questions and answers. Our model builds an object-based scene representation and translates sentences into executable, symbolic programs. To bridge the learning of two modules, we use a neuro-symbolic reasoning module that executes these programs on the latent scene representation. Analogical to human concept learning, the perception module learns visual concepts based on the language description of the object being referred to. Meanwhile, the learned visual concepts facilitate learning new words and parsing new sentences. We use curriculum learning to guide the searching over the large compositional space of images and language. Extensive experiments demonstrate the accuracy and efficiency of our model on learning visual concepts, word representations, and semantic parsing of sentences. Further, our method allows easy generalization to new object attributes, compositions, language concepts, scenes and questions, and even new program domains. It also empowers applications including visual question answering and bidirectional image-text retrieval.",,Unreleased,,Unknown,2024-09-11 18:34:07+00:00,"United States of America,China,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
MuseNet,Audio,OpenAI,Industry,OpenAI,2019-04-25,MuseNet,https://openai.com/index/musenet/,,Significant use,,2038431744.0,"From article:
72 Layers
24 Attention heads

Assumptions: 
D_head = 64 (GPT-2)
D_model = 24*64=1536 (based on D_head)
D_mlp = 4*1536=6144

Attention: H*(W*(2*D+N)+N*M)
24*(1536*(2*64+64)+64*1536)=9437184
MLP: 1536*6144+6144*1536=18874368
Total parameters: 72*(9437184+18874368)=2038431744
",2.208301056e+20,,,"From article:
72 Layers
24 Attention heads
4096 ctx length

Assumptions: 
D_head = 64 (GPT-2)
D_model = 24*64=1536 (based on D_head)
D_mlp = 4*1536=6144
Average sequence length: 5000
Epochs: 5
Training data: 500000

Forward FLOP:
Attention: 2*H*(W*(2*D+N)+L*(D+N)+N*M)
2*24*(1536*(2*64+64)+4096*(64+64)+64*1536)=44040192
MLP: 2*(1536*6144+6144*1536)=37748736
Total forward flop: 72*(44040192+37748736)=5888802816
Training compute
5888802816*3*500000*5000*5=220830105600000000000=2.2e20
",,,500000.0,“hundreds of thousands of MIDI files”,,,,,,,"We’ve created MuseNet, a deep neural network that can generate 4-minute musical compositions with 10 different instruments, and can combine styles from country to Mozart to the Beatles. MuseNet was not explicitly programmed with our understanding of music, but instead discovered patterns of harmony, rhythm, and style by learning to predict the next token in hundreds of thousands of MIDI files. MuseNet uses the same general-purpose unsupervised technology as GPT-2⁠, a large-scale transformer⁠(opens in a new window) model trained to predict the next token in a sequence, whether audio or text.",,Unreleased,,Unverified,2025-02-17 17:31:44+00:00,United States of America,,,,,,,,,
DANet,Vision,Chinese Academy of Sciences,Academia,"Jun Fu, Jing Liu, Haijie Tian, Yong Li, Yongjun Bao, Zhiwei Fang, Hanqing Lu",2019-04-21,Dual Attention Network for Scene Segmentation,https://openaccess.thecvf.com/content_CVPR_2019/html/Fu_Dual_Attention_Network_for_Scene_Segmentation_CVPR_2019_paper.html,4620.0,Highly cited,,,,,,,,"Cityscapes,COCO-Stuff,PASCAL-Context",,,,,,,,,,"In this paper, we address the scene segmentation task by capturing rich contextual dependencies based on the self-attention mechanism. Unlike previous works that capture contexts by multi-scale features fusion, we propose a Dual Attention Networks (DANet) to adaptively integrate local features with their global dependencies. Specifically, we append two types of attention modules on top of traditional dilated FCN, which model the semantic interdependencies in spatial and channel dimensions respectively. The position attention module selectively aggregates the features at each position by a weighted sum of the features at all positions. Similar features would be related to each other regardless of their distances. Meanwhile, the channel attention module selectively emphasizes interdependent channel maps by integrating associated features among all channel maps. We sum the outputs of the two attention modules to further improve feature representation which contributes to more precise segmentation results. We achieve new state-of-the-art segmentation performance on three challenging scene segmentation datasets, i.e., Cityscapes, PASCAL Context and COCO Stuff dataset. In particular, a Mean IoU score of 81.5% on Cityscapes test set is achieved without using coarse data.
",,Open weights (unrestricted),,Unknown,2025-02-04 00:22:49+00:00,China,,,,,,,,,
BERT-Large-CAS (PTB+WT2+WT103),Language,Amazon,Industry,"Chenguang Wang, Mu Li, Alexander J. Smola",2019-04-20,Language Models with Transformers,https://arxiv.org/abs/1904.09408,110.0,SOTA improvement,"""CAS achieves perplexities between 20.42 and 34.11 on all problems, i.e. on average an improvement of 12.0 perplexity units compared to state-of-the-art LSTMs""",395000000.0,,5.21e+20,,,,"Penn TreeBank,WikiText-2,WikiText-103",,,,50.0,,,,,,"The Transformer architecture is superior to RNN-based models in computational efficiency. Recently, GPT and BERT demonstrate the efficacy of Transformer models on various NLP tasks using pre-trained language models on large-scale corpora. Surprisingly, these Transformer architectures are suboptimal for language model itself. Neither self-attention nor the positional encoding in the Transformer is able to efficiently incorporate the word-level sequential context crucial to language modeling.
In this paper, we explore effective Transformer architectures for language model, including adding additional LSTM layers to better capture the sequential context while still keeping the computation efficient. We propose Coordinate Architecture Search (CAS) to find an effective architecture through iterative refinement of the model. Experimental results on the PTB, WikiText-2, and WikiText-103 show that CAS achieves perplexities between 20.42 and 34.11 on all problems, i.e. on average an improvement of 12.0 perplexity units compared to state-of-the-art LSTMs. The source code is publicly available.",BERT-Large-CAS (PTB+WT2+WT103),Unreleased,,,2024-09-09 21:50:16+00:00,United States of America,,,,,,,,,
SpecAugment,Language,Google Brain,Industry," Daniel S. Park, William Chan, Yu Zhang, Chung-Cheng Chiu, Barret Zoph, Ekin D. Cubuk, Quoc V. Le",2019-04-18,SpecAugment: A Simple Data Augmentation Method for Automatic Speech Recognition,https://arxiv.org/abs/1904.08779,3207.0,Highly cited,,,,,,,,"LibriSpeech,Switchboard,Fisher",,,,,,,,,,,,Unreleased,,Unknown,2024-11-01 14:03:03+00:00,United States of America,,,,,,,,,
LTM,Language,Murdoch University,Academia,"Anupiya Nugaliyadde, Kok Wai Wong, Ferdous Sohel, Hong Xie",2019-04-18,Language Modeling through Long Term Memory Network,https://arxiv.org/abs/1904.08936,19.0,,,,,,,,,,,,,,,,,,,"Recurrent Neural Networks (RNN), Long Short-Term Memory Networks (LSTM), and Memory Networks which contain memory are popularly used to learn patterns in sequential data. Sequential data has long sequences that hold relationships. RNN can handle long sequences but suffers from the vanishing and exploding gradient problems. While LSTM and other memory networks address this problem, they are not capable of handling long sequences (50 or more data points long sequence patterns). Language modelling requiring learning from longer sequences are affected by the need for more information in memory. This paper introduces Long Term Memory network (LTM), which can tackle the exploding and vanishing gradient problems and handles long sequences without forgetting. LTM is designed to scale data in the memory and gives a higher weight to the input in the sequence. LTM avoid overfitting by scaling the cell state after achieving the optimal results. The LTM is tested on Penn treebank dataset, and Text8 dataset and LTM achieves test perplexities of 83 and 82 respectively. 650 LTM cells achieved a test perplexity of 67 for Penn treebank, and 600 cells achieved a test perplexity of 77 for Text8. LTM achieves state of the art results by only using ten hidden LTM cells for both datasets.",LTM,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,Australia,,,,,,,,,
Transformer-XL + RMS dynamic eval,Language,University of Edinburgh,Academia,"Ben Krause, Emmanuel Kahembwe, Iain Murray, Steve Renals",2019-04-17,Dynamic Evaluation of Transformer Language Models,https://arxiv.org/abs/1904.08378,40.0,SOTA improvement,"""By applying dynamic evaluation to Transformer-XL models, we improve the state of the art on enwik8 from 0.99 to 0.94 bits/char, text8 from 1.08 to 1.04 bits/char, and WikiText-103 from 18.3 to 16.4 perplexity points.""",257000000.0,,,,,,WikiText-103,,,,,,,,,,"This research note combines two methods that have recently improved the state of the art in language modeling: Transformers and dynamic evaluation. Transformers use stacked layers of self-attention that allow them to capture long range dependencies in sequential data. Dynamic evaluation fits models to the recent sequence history, allowing them to assign higher probabilities to re-occurring sequential patterns. By applying dynamic evaluation to Transformer-XL models, we improve the state of the art on enwik8 from 0.99 to 0.94 bits/char, text8 from 1.08 to 1.04 bits/char, and WikiText-103 from 18.3 to 16.4 perplexity points.",Transformer-XL + RMS dynamic eval,Unreleased,,,2024-09-11 18:42:30+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
True-Regularization+Finetune,Language,"Mobvoi,Williams College","Industry,Academia","Yangyang Shi, Mei-Yuh Hwang, Xin Lei, Haoyu Sheng",2019-04-08,Knowledge Distillation For Recurrent Neural Network Language Modeling With Trust Regularization,https://arxiv.org/abs/1904.04163,24.0,,not the best model in this paper,7000000.0,,,,,,,,,,,,,,,,"Recurrent Neural Networks (RNNs) have dominated language modeling because of their superior performance over traditional N-gram based models. In many applications, a large Recurrent Neural Network language model (RNNLM) or an ensemble of several RNNLMs is used. These models have large memory footprints and require heavy computation. In this paper, we examine the effect of applying knowledge distillation in reducing the model size for RNNLMs. In addition, we propose a trust regularization method to improve the knowledge distillation training for RNNLMs. Using knowledge distillation with trust regularization, we reduce the parameter size to a third of that of the previously published best model while maintaining the state-of-the-art perplexity result on Penn Treebank data. In a speech recognition N-bestrescoring task, we reduce the RNNLM model size to 18.5% of the baseline system, with no degradation in word error rate(WER) performance on Wall Street Journal data set.",True-Regularization+Finetune,Unreleased,,,2024-09-05 18:08:31+00:00,"China,United States of America",,,,,,,,,
True-Regularization+Finetune+Dynamic-Eval,Language,"Mobvoi,Williams College","Industry,Academia","Yangyang Shi, Mei-Yuh Hwang, Xin Lei, Haoyu Sheng",2019-04-08,Knowledge Distillation For Recurrent Neural Network Language Modeling With Trust Regularization,https://arxiv.org/abs/1904.04163,24.0,SOTA improvement,"""In the first experiment, the student model achieves state-of-the-art perplexity results on the Penn Treebank dataset [1] with a model size one third of that of the
previously published best model""",7000000.0,,,,,,Penn TreeBank,,,,,,,,,,"Recurrent Neural Networks (RNNs) have dominated language modeling because of their superior performance over traditional N-gram based models. In many applications, a large Recurrent Neural Network language model (RNNLM) or an ensemble of several RNNLMs is used. These models have large memory footprints and require heavy computation. In this paper, we examine the effect of applying knowledge distillation in reducing the model size for RNNLMs. In addition, we propose a trust regularization method to improve the knowledge distillation training for RNNLMs. Using knowledge distillation with trust regularization, we reduce the parameter size to a third of that of the previously published best model while maintaining the state-of-the-art perplexity result on Penn Treebank data. In a speech recognition N-bestrescoring task, we reduce the RNNLM model size to 18.5% of the baseline system, with no degradation in word error rate(WER) performance on Wall Street Journal data set.",True-Regularization+Finetune+Dynamic-Eval,Unreleased,,,2024-09-05 18:08:31+00:00,"China,United States of America",,,,,,,,,
WeNet (WT2),Language,Amazon,Industry,"Zhiheng Huang, Bing Xiang",2019-04-08,WeNet: Weighted Networks for Recurrent Network Architecture Search,https://arxiv.org/abs/1904.03819,5.0,,,33000000.0,,,,,,WikiText-2,,,,6000.0,,,,,,"In recent years, there has been increasing demand for automatic architecture search in deep learning. Numerous approaches have been proposed and led to state-of-the-art results in various applications, including image classification and language modeling. In this paper, we propose a novel way of architecture search by means of weighted networks (WeNet), which consist of a number of networks, with each assigned a weight. These weights are updated with back-propagation to reflect the importance of different networks. Such weighted networks bear similarity to mixture of experts. We conduct experiments on Penn Treebank and WikiText-2. We show that the proposed WeNet can find recurrent architectures which result in state-of-the-art performance.",WeNet (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
WeNet (Penn Treebank),Language,Amazon,Industry,"Zhiheng Huang, Bing Xiang",2019-04-08,WeNet: Weighted Networks for Recurrent Network Architecture Search,https://arxiv.org/abs/1904.03819,5.0,SOTA improvement,"""We show that an architecture found by WeNets arXiv:1904.03819v1 [cs.NE] 8 Apr 2019 WeNet: Weighted Networks for Recurrent Network Architecture Search achieves state-of-the-art results on the Penn Treebank language dataset""",23000000.0,Table 1,7.30000001e+17,,,"PTB has 912344 tokens. The model has 23M parameters and was trained for 6k epochs. If the model was dense, 6 FLOP/token/param/epoch * 6k epochs * 23M params * 912k tokens = 1.05e18 FLOP.

Alternatively, the model was trained on 1 V100 GPU and ""In terms of efficiency, the overall cost... is within 1 GPU day"" so the training time was around or below 24 hours. Half precision and 30% utilization would be a pretty good match for the arithmetic estimate: 24 hours * 30% * 28 TFLOPS = 7.3e17 FLOP.",Penn TreeBank,,,,6000.0,24.0,,NVIDIA V100,1.0,,,WeNet (WT2),Unreleased,,Likely,2025-02-17 17:32:06+00:00,United States of America,,,,,,,70000.0,"They use BPTT with length 35. During architecture search data batch size is 20 and network batch size is 100. While training the architecture they end up finding, batch size is 64. So effective batch size is 35 * 20 * 100 = 70,000 during architecture search, and 35 * 64 = 2,240 during final training. ",
Cross-lingual alignment,Language,"Tel Aviv University,Massachusetts Institute of Technology (MIT)","Academia,Academia","Tal Schuster, Ori Ram, Regina Barzilay, and Amir Globerson.",2019-04-04,"Cross-lingual alignment of contextual word embeddings, with applications to zero- shot dependency parsing.",https://arxiv.org/abs/1902.09492,201.0,SOTA improvement,"""our method consistently outperforms the previous state-of-the-art on 6 tested languages""",,,2.56e+18,,,"From author communication:

Precision: float32

Hardware: 4 GPU  NVIDIA 1080Ti

NVIDIA 1080Ti: 1.06E+13

Compute: 7 GPU-days

0.4 * 1.06E+13 FLOP/s * 7 days * 24h/day * 3600s/h
= 2.56E+18","Wikipedia,CoNLL2017",,,,,,,NVIDIA GeForce GTX 1080 Ti,,,,,Open weights (unrestricted),,,2025-02-17 17:32:13+00:00,"Israel,United States of America",ELMo,,,,,,,,
FAIRSEQ Adaptive Inputs,Language,"Facebook AI Research,Google Brain","Industry,Industry","Myle Ott, Sergey Edunov, Alexei Baevski, Angela Fan, Sam Gross, Nathan Ng, David Grangier, Michael Auli",2019-04-01,"fairseq: A Fast, Extensible Toolkit for Sequence Modeling",https://arxiv.org/abs/1904.01038,2991.0,Highly cited,,247000000.00000003,,7.3e+18,,,,WikiText-103,,,,,,,,,,"fairseq is an open-source sequence modeling toolkit that allows researchers and developers to train custom models for translation, summarization, language modeling, and other text generation tasks. The toolkit is based on PyTorch and supports distributed training across multiple GPUs and machines. We also support fast mixed-precision training and inference on modern GPUs. A demo video can be found at this https URL",FAIRSEQ Adaptive Inputs,Unreleased,,,2024-11-01 14:03:04+00:00,"United States of America,United States of America",,,,,,,,,
UniRep,Biology,Harvard University,Academia,"Ethan C. Alley, Grigory Khimulya, Surojit Biswas, Mohammed AlQuraishi & George M. Church  ",2019-03-26,Unified rational protein engineering with sequence-based deep representation learning,https://www.nature.com/articles/s41592-019-0598-1,812.0,,,18200000.0,"""1,900-dimensional single-layer multiplicative LSTM (~18.2 million parameters)""",2.2e+19,,,"""Training was performed using data parallelism on four Nvidia K80 GPUs (mLSTM-1,900) or two Nvidia K-40s (4× mLSTM-256, 4× mLSTM-64). The mLSTM-1,900 model was trained for ~770,000 weight updates, or ~3.5 weeks wall clock time, corresponding to ~1 epoch."" [Methods - Unsupervised training dataset]

Assuming 30% utilization rate and single-precision performance

Estimate: 3.5 weeks * 7 days/week * 24 hours/day * 60 min/hour * 60 sec/min * 4 GPUs *8.73e12 FLOP/sec * 0.3",UniRef50,"""we use a recurrent neural network (RNN) to learn statistical representations of proteins from ~24 million UniRef50 (ref. 22) sequences""",,~24M protein sequences,1.0,588.0,,NVIDIA Tesla K80,4.0,Self-supervised learning,"Rational protein engineering requires a holistic understanding of protein function. Here, we apply deep learning to unlabeled amino-acid sequences to distill the fundamental features of a protein into a statistical representation that is semantically rich and structurally, evolutionarily and biophysically grounded. We show that the simplest models built on top of this unified representation (UniRep) are broadly applicable and generalize to unseen regions of sequence space. Our data-driven approach predicts the stability of natural and de novo designed proteins, and the quantitative function of molecularly diverse mutants, competitively with the state-of-the-art methods. UniRep further enables two orders of magnitude efficiency improvement in a protein engineering task. UniRep is a versatile summary of fundamental protein features that can be applied across protein engineering informatics.",,Open weights (non-commercial),,Likely,2025-02-17 17:32:19+00:00,United States of America,,,,,,,,,
SciBERT,Language,Allen Institute for AI,Research collective,"Iz Beltagy, Kyle Lo, Arman Cohan",2019-03-26,SciBERT: A Pretrained Language Model for Scientific Text,https://arxiv.org/abs/1903.10676,2808.0,"Highly cited,SOTA improvement","""We demon-
strate statistically significant improvements
over BERT and achieve new state-of-the-
art results on several of these tasks""",110000000.0,"110M
size of bert base from https://huggingface.co/google-bert/bert-base-uncased
relevant citation: 
""We use the original BERT code to
train SCIBERT on our corpus with the same con-
figuration and size as BERT-Base. We train 4
different versions of SCIBERT: (i) cased or un-
cased and (ii) BASEVOCAB or SCIVOCAB. The
two models that use BASEVOCAB are finetuned
from the corresponding BERT-Base models. The
other two models that use the new SCIVOCAB are
trained from scratch.""",8.926848e+19,,,"4*123e12*0.3*(7*24*3600) = 8.926848e+19
(num gpu) * (peak compute) * (assumed utilization rate) * (time in seconds)
We have:
 4 TPUv3 chips.123teraFLOPS per chip.
7 days of training
""We use a single TPU v3 with 8 cores. Training the SCIVOCAB models from scratch on our corpus takes 1 week (5 days with max length 128, then 2 days with max length 512). ""

If this compute estimate is accurate and BERT is approximately dense, then C=6eND -> e=C/6ND ~= 40 epochs.",,"""We train SCIBERT on a random
sample of 1.14M papers from Semantic
Scholar (Ammar et al., 2018). """,3300000000.0,"""The average paper length is 154 sentences (2,769 tokens) resulting in a corpus size of 3.17B tokens, similar to the 3.3B tokens on which BERT was trained.""",,168.0,1 week,Google TPU v3,4.0,,"Obtaining large-scale annotated data for NLP tasks in the scientific domain is challenging and expensive. We release SciBERT, a pretrained language model based on BERT (Devlin et al., 2018) to address the lack of high-quality, large-scale labeled scientific data. SciBERT leverages unsupervised pretraining on a large multi-domain corpus of scientific publications to improve performance on downstream scientific NLP tasks. We evaluate on a suite of tasks including sequence tagging, sentence classification and dependency parsing, with datasets from a variety of scientific domains. We demonstrate statistically significant improvements over BERT and achieve new state-of-the-art results on several of these tasks. The code and pretrained models are available at this https://github.com/allenai/scibert/",,Open weights (unrestricted),,Confident,2025-01-03 20:53:10+00:00,United States of America,,,,,,,,,
DOC + Finetune∗ + Partial Shuffle (WT2),Language,University of Washington,Academia,Ofir Press,2019-03-11,Partially Shuffling the Training Data to Improve Language Models,https://arxiv.org/abs/1903.04167,6.0,,,67300000.0,,,,,,WikiText-2,,,,,,,,,,"Although SGD requires shuffling the training data between epochs, currently none of the word-level language modeling systems do this. Naively shuffling all sentences in the training data would not permit the model to learn inter-sentence dependencies. Here we present a method that partially shuffles the training data between epochs. This method makes each batch random, while keeping most sentence ordering intact. It achieves new state of the art results on word-level language modeling on both the Penn Treebank and WikiText-2 datasets.",DOC + Finetune∗ + Partial Shuffle (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
NMT Transformer 437M,Language,"Google,Bar-Ilan University","Industry,Academia","Roee Aharoni, Melvin Johnson, Orhan Firat",2019-02-28,Massively Multilingual Neural Machine Translation,https://arxiv.org/abs/1903.00089,520.0,SOTA improvement,"""We report results on the publicly available TED talks multilingual corpus where we show that massively multilingual many-to-many models are effective in low resource settings, outperforming the previous state-of-the-art while supporting up to 59 languages.""",437700000.0,"""Regarding the model, for these experiments we
use a larger Transformer model with 6 layers in
both the encoder and the decoder, model dimension set to 1024, hidden dimension size of 8192,
and 16 attention heads. This results in a model
with approximately 473.7M parameters.""",,,,,,"""Since we are not aware of a publicly available resource for this purpose, we construct an in-house
dataset. This dataset includes 102 language pairs
which we “mirror” to-and-from English, with up
to one million examples per language pair. This
results in 103 languages in total, and 204 translation directions which we train simultaneously.""

96M total examples, per Table 4",,"96M total examples, per Table 4. One sentence per example?",,,,,,,"Multilingual neural machine translation (NMT) enables training a single model that supports translation from multiple source languages into multiple target languages. In this paper, we push the limits of multilingual NMT in terms of number of languages being used. We perform extensive experiments in training massively multilingual NMT models, translating up to 102 languages to and from English within a single model. We explore different setups for training such models and analyze the trade-offs between translation quality and various modeling decisions. We report results on the publicly available TED talks multilingual corpus where we show that massively multilingual many-to-many models are effective in low resource settings, outperforming the previous state-of-the-art while supporting up to 59 languages. Our experiments on a large-scale dataset with 102 languages to and from English and up to one million examples per direction also show promising results, surpassing strong bilingual baselines and encouraging future work on massively multilingual NMT.",,Unreleased,,Confident,2024-09-05 18:08:31+00:00,"United States of America,Israel",,,,,,,,,
KataGo,Games,Jane Street,Industry,David J. Wu,2019-02-27,Accelerating Self-Play Learning in Go,https://arxiv.org/abs/1902.10565,85.0,SOTA improvement,Better than ELF OpenGo while using 1/50th the compute.,2500000.0,https://arxiv.org/abs/2210.00849 gives parameter count for AlphaZero in Fig 1b.,2.32e+19,,,"""[KataGo] surpasses the strength of ELF OpenGo after training on about 27 V100 GPUs for 19 days""
14.13 teraFLOP/s * 19 days = 2.32e+19 FLOP",,"Self-play: ""In total, KataGo’s main run lasted for 19 days using a maximum of 28 V100 GPUs at any time (averaging 26-27) and generated about 241 million training samples across 4.2 million games.""",241000000.0,241 million training samples across 4.2 million games,,456.0,27 processors for 19 days,NVIDIA Tesla V100 DGXS 16 GB,,Self-supervised learning,"By introducing several improvements to the AlphaZero process and architecture, we greatly accelerate self-play learning in Go, achieving a 50x reduction in computation over comparable methods. Like AlphaZero and replications such as ELF OpenGo and Leela Zero, our bot KataGo only learns from neural-net-guided Monte Carlo tree search self-play. But whereas AlphaZero required thousands of TPUs over several days and ELF required thousands of GPUs over two weeks, KataGo surpasses ELF's final model after only 19 days on fewer than 30 GPUs. Much of the speedup involves non-domain-specific improvements that might directly transfer to other problems. Further gains from domain-specific techniques reveal the remaining efficiency gap between the best methods and purely general methods such as AlphaZero. Our work is a step towards making learning in state spaces as large as Go possible without large-scale computational resources.",,Open weights (unrestricted),,Speculative,2025-02-17 17:32:27+00:00,"Multinational,United States of America",,,,,,,,,
ProxylessNAS,Vision,Massachusetts Institute of Technology (MIT),Academia,"Han Cai, Ligeng Zhu, and Song Han",2019-02-23,ProxylessNAS: Direct neural architecture search on target task and hardware,https://arxiv.org/abs/1812.00332,1806.0,Highly cited,,,,3.70656e+19,,,"For their searched Imagenet models, they used 200 GPU hours on a V100 GPU.

At FP32, a V100 GPU has a peak performance of 1.56E+14 FLOPS.

Utilization rate of 0.33.",ImageNet,,1280000.0,,,,,NVIDIA V100,,,"Neural architecture search (NAS) has a great impact by automatically designing effective neural network architectures. However, the prohibitive computational demand of conventional NAS algorithms (e.g. 104 GPU hours) makes it difficult to \emph{directly} search the architectures on large-scale tasks (e.g. ImageNet). Differentiable NAS can reduce the cost of GPU hours via a continuous representation of network architecture but suffers from the high GPU memory consumption issue (grow linearly w.r.t. candidate set size). As a result, they need to utilize~\emph{proxy} tasks, such as training on a smaller dataset, or learning with only a few blocks, or training just for a few epochs. These architectures optimized on proxy tasks are not guaranteed to be optimal on the target task. In this paper, we present \emph{ProxylessNAS} that can \emph{directly} learn the architectures for large-scale target tasks and target hardware platforms. We address the high memory consumption issue of differentiable NAS and reduce the computational cost (GPU hours and GPU memory) to the same level of regular training while still allowing a large candidate set. Experiments on CIFAR-10 and ImageNet demonstrate the effectiveness of directness and specialization. On CIFAR-10, our model achieves 2.08\% test error with only 5.7M parameters, better than the previous state-of-the-art architecture AmoebaNet-B, while using 6× fewer parameters. On ImageNet, our model achieves 3.1\% better top-1 accuracy than MobileNetV2, while being 1.2× faster with measured GPU latency. We also apply ProxylessNAS to specialize neural architectures for hardware with direct hardware metrics (e.g. latency) and provide insights for efficient CNN architecture design.",,Open weights (unrestricted),,,2025-02-17 17:33:03+00:00,United States of America,,,,,,,,,
SSA,Biology,Massachusetts Institute of Technology (MIT),Academia,"Tristan Bepler, Bonnie Berger",2019-02-22,Learning protein sequence embeddings using information from structure,https://arxiv.org/abs/1902.08661,338.0,,,,,3.2e+18,,,"""All models were implemented in PyTorch and trained on a single NVIDIA Tesla V100 GPU. Each model took roughly 3 days to train and required 16 GB of GPU RAM""",,,3940001.000000001,"22,408 sequences × 176 residues/sequence = 3,943,808 tokens

Final estimate: 3.94 million unique datapoints",,72.0,"""Each model took roughly 3 days to train and required 16 GB of GPU RAM""",,,,"Inferring the structural properties of a protein from its amino acid sequence is a challenging yet important problem in biology. Structures are not known for the vast majority of protein sequences, but structure is critical for understanding function. Existing approaches for detecting structural similarity between proteins from sequence are unable to recognize and exploit structural patterns when sequences have diverged too far, limiting our ability to transfer knowledge between structurally related proteins. We newly approach this problem through the lens of representation learning. We introduce a framework that maps any protein sequence to a sequence of vector embeddings --- one per amino acid position --- that encode structural information. We train bidirectional long short-term memory (LSTM) models on protein sequences with a two-part feedback mechanism that incorporates information from (i) global structural similarity between proteins and (ii) pairwise residue contact maps for individual proteins. To enable learning from structural similarity information, we define a novel similarity measure between arbitrary-length sequences of vector embeddings based on a soft symmetric alignment (SSA) between them. Our method is able to learn useful position-specific embeddings despite lacking direct observations of position-level correspondence between sequences. We show empirically that our multi-task framework outperforms other sequence-based methods and even a top-performing structure-based alignment method when predicting structural similarity, our goal. Finally, we demonstrate that our learned embeddings can be transferred to other protein sequence problems, improving the state-of-the-art in transmembrane domain prediction.",,,,Unverified,2025-02-17 17:33:08+00:00,United States of America,,,,,,,,,
code2seq,Language,"Technion - Israel Institute of Technology,Facebook AI Research","Academia,Industry","Uri Alon, Shaked Brody, Omer Levy, Eran Yahav",2019-02-21,code2seq: Generating Sequences from Structured Representations of Code,https://arxiv.org/abs/1808.01400,,,,37000000.0,while our code2seq model had only 37M,1.1513908e+19,,,6*37*10^6*997393280*52 = 1.1513908e+19,,,997393280.0,"Java-large – A new dataset of the 9500 top-starred Java projects from GitHub that were created since January 2007. We randomly select 9000 projects for training, 250 for validation and 300 for testing. This dataset contains about 16M examples and we make it publicly available.

Table 5: average code length is 65 tokens
size of Java Large is 15,344,512 examples

15,344,512 * 65 = 997393280 tokens
",52.0,,,,,,"The ability to generate natural language sequences from source code snippets has a variety of applications such as code summarization, documentation, and retrieval. Sequence-to-sequence (seq2seq) models, adopted from neural machine translation (NMT), have achieved state-of-the-art performance on these tasks by treating source code as a sequence of tokens. We present CODE2SEQ: an alternative approach that leverages the syntactic structure of programming languages to better encode source code. Our model represents a code snippet as the set of compositional paths in its abstract syntax tree (AST) and uses attention to select the relevant paths while decoding. We demonstrate the effectiveness of our approach for two tasks, two programming languages, and four datasets of up to 16M examples. Our model significantly outperforms previous models that were specifically designed for programming languages, as well as state-of-the-art NMT models. An interactive online demo of our model is available at this http URL. Our code, data and trained models are available at this http URL.",,Open weights (unrestricted),,Confident,2024-10-28 17:47:30+00:00,"Israel,United States of America",,,,,,,,,
GPT-2 (1.5B),Language,OpenAI,Industry,"Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, Ilya Sutskever",2019-02-14,Language Models are Unsupervised Multitask Learners,https://openai.com/blog/better-language-models/,19228.0,Highly cited,,1500000000.0,"""GPT-2 is a large transformer-based language model with 1.5 billion parameters""",1.920000000001e+21,,,"Estimating based on compute = 6 FLOP/token/param * epochs * parameters * tokens.

40GB dataset is approximately 8B words, or 1/0.75 * 8B = 10.66B tokens.

The number of epochs is not reported, but another paper [1] claims in table 1 that it is 20 or 100 epochs, and another paper [2] claims 12 epochs based on communication with the GPT-2 authors (page 4).

12 epochs is the modal, most credible value. Mean of probability mass is probably around 20 epochs, so calculating from that value:

6 * (40 * 200 million * 1/0.75 * 20) * 1.5 billion parameters = 1.92e21
https://www.wolframalpha.com/input?i=6+FLOP+*+20+*+%2840+billion+%2F+5+*+%284%2F3%29%29+*+1.5+billion

[1] https://arxiv.org/abs/1906.06669 One Epoch Is All You Need
[2] https://www.usenix.org/system/files/sec21-carlini-extracting.pdf Extracting Data From Large Language Models

It also appears the model was trained on TPU v3 chips:
https://huggingface.co/openai-community/gpt2",WebText,,10666666666.666666,"“All results presented in this paper use a preliminary version of WebText which does not include links created after Dec 2017 and which after de-duplication and some heuristic based cleaning contains slightly over 8 million documents for a total of 40 GB of text.”
40GB is approximately 8e9 words.
",20.0,,,Google TPU v3,,Self-supervised learning,"Natural language processing tasks, such as question answering, machine translation, reading comprehension, and summarization, are typically approached with supervised learning on taskspecific datasets. We demonstrate that language models begin to learn these tasks without any explicit supervision when trained on a new dataset of millions of webpages called WebText. When conditioned on a document plus questions, the answers generated by the language model reach 55 F1 on the CoQA dataset - matching or exceeding the performance of 3 out of 4 baseline systems without using the 127,000+ training examples. The capacity of the language model is essential to the success of zero-shot task transfer and increasing it improves performance in a log-linear fashion across tasks. Our largest model, GPT-2, is a 1.5B parameter Transformer that achieves state of the art results on 7 out of 8 tested language modeling datasets in a zero-shot setting but still underfits WebText. Samples from the model reflect these improvements and contain coherent paragraphs of text. These findings suggest a promising path towards building language processing systems which learn to perform tasks from their naturally occurring demonstrations.",GPT-2 (1542M),Open weights (unrestricted),,,2025-03-07 01:31:17+00:00,United States of America,,,,,,,,,
Compress-LSTM (66M),Language,"Samsung R&D Institute Russia,National Research University Higher School of Economics","Industry,Academia","Artem M. Grachev, Dmitry I. Ignatov, Andrey V. Savchenko",2019-02-06,Compression of Recurrent Neural Networks for Efficient Language Modeling,https://arxiv.org/abs/1902.02380,38.0,,,66000000.0,,3.31e+16,,,,,,,,90.0,,,,,,"Recurrent neural networks have proved to be an effective method for statistical language modeling. However, in practice their memory and run-time complexity are usually too large to be implemented in real-time offline mobile applications. In this paper we consider several compression techniques for recurrent neural networks including Long-Short Term Memory models. We make particular attention to the high-dimensional output problem caused by the very large vocabulary size. We focus on effective compression methods in the context of their exploitation on devices: pruning, quantization, and matrix decomposition approaches (low-rank factorization and tensor train decomposition, in particular). For each model we investigate the trade-off between its size, suitability for fast inference and perplexity. We propose a general pipeline for applying the most suitable methods to compress recurrent neural networks for language modeling. It has been shown in the experimental study with the Penn Treebank (PTB) dataset that the most efficient results in terms of speed and compression-perplexity balance are obtained by matrix decomposition techniques.",Compress-LSTM (66M),Unreleased,,,2024-11-01 14:03:04+00:00,"Russia,Russia",,,,,,,,,
Hanabi 4 player,Games,"DeepMind,University of Oxford,Carnegie Mellon University (CMU),Google Brain","Industry,Academia,Academia,Industry",,2019-02-01,The Hanabi Challenge: A New Frontier for AI Research,https://arxiv.org/abs/1902.00506,229.0,Historical significance,Adapted some SOTA RL algorithms to a new task that posed research challenges,764000.0,source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389,4.3e+18,,,14.13e+12 FLOP/s * 7 days * 86400 s/day * 0.50 utilization = 4.3e+18 FLOP,,,,,,,,,,,,,Unreleased,,,2025-02-17 17:33:28+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland,United States of America,United States of America",,,,,,,,,
MT-DNN,Language,Microsoft,Industry,"X Liu, P He, W Chen, J Gao",2019-01-31,Multi-Task Deep Neural Networks for Natural Language Understanding,https://arxiv.org/abs/1901.11504,1217.0,"Highly cited,SOTA improvement","""MT-DNN extends the model proposed in Liu et al. (2015) by incorporating a pre-trained bidirectional transformer language model, known as BERT (Devlin et al., 2018). MT-DNN obtains new state-of-the-art results on ten NLU tasks, including SNLI, SciTail, and eight out of nine GLUE tasks, pushing the GLUE benchmark to 82.7% (2.2% absolute improvement)""",330000000.0,,,,,,"GLUE,SciTail","GLUE, SNLI, and SciTail ",,,,,,,,,"In this paper, we present a Multi-Task Deep Neural Network (MT-DNN) for learning representations across multiple natural language understanding (NLU) tasks. MT-DNN not only leverages large amounts of cross-task data, but also benefits from a regularization effect that leads to more general representations in order to adapt to new tasks and domains. MT-DNN extends the model proposed in Liu et al. (2015) by incorporating a pre-trained bidirectional transformer language model, known as BERT (Devlin et al., 2018). MT-DNN obtains new state-of-the-art results on ten NLU tasks, including SNLI, SciTail, and eight out of nine GLUE tasks, pushing the GLUE benchmark to 82.7% (2.2% absolute improvement). We also demonstrate using the SNLI and SciTail datasets that the representations learned by MT-DNN allow domain adaptation with substantially fewer in-domain labels than the pre-trained BERT representations. The code and pre-trained models are publicly available at this https URL.",,Open weights (unrestricted),,,2025-01-03 16:47:24+00:00,United States of America,,,,,,,,,
TSLM+MoS (WT2),Language,"Tianjin University,Beijing Institute of Technology","Academia,Academia","Lipeng Zhang, Peng Zhang, Xindian Ma, Shuqin Gu, Zhan Su, Dawei Song",2019-01-31,A Generalized Language Model in Tensor Space,https://arxiv.org/abs/1901.11167,21.0,,,9120000.0,,,,,,,,,,,,,,,,"In the literature, tensors have been effectively used for capturing the context information in language models. However, the existing methods usually adopt relatively-low order tensors, which have limited expressive power in modeling language. Developing a higher-order tensor representation is challenging, in terms of deriving an effective solution and showing its generality. In this paper, we propose a language model named Tensor Space Language Model (TSLM), by utilizing tensor networks and tensor decomposition. In TSLM, we build a high-dimensional semantic space constructed by the tensor product of word vectors. Theoretically, we prove that such tensor representation is a generalization of the n-gram language model. We further show that this high-order tensor representation can be decomposed to a recursive calculation of conditional probability for language modeling. The experimental results on Penn Tree Bank (PTB) dataset and WikiText benchmark demonstrate the effectiveness of TSLM.",TSLM+MoS (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,"China,China",,,,,,,,,
H-LSTM+wg+rcp+rcg+wp,Language,"Princeton University,Alibaba","Academia,Industry","Hongxu Yin, Guoyang Chen, Yingmin Li, Shuai Che, Weifeng Zhang, Niraj K. Jha",2019-01-30,"Hardware-Guided Symbiotic Training for Compact, Accurate, yet Execution-Efficient LSTM",https://arxiv.org/abs/1901.10997,10.0,,,800000.0,,,,,,,,,,,,,,,,"Many long short-term memory (LSTM) applications need fast yet compact models. Neural network compression approaches, such as the grow-and-prune paradigm, have proved to be promising for cutting down network complexity by skipping insignificant weights. However, current compression strategies are mostly hardware-agnostic and network complexity reduction does not always translate into execution efficiency. In this work, we propose a hardware-guided symbiotic training methodology for compact, accurate, yet execution-efficient inference models. It is based on our observation that hardware may introduce substantial non-monotonic behavior, which we call the latency hysteresis effect, when evaluating network size vs. inference latency. This observation raises question about the mainstream smaller-dimension-is-better compression strategy, which often leads to a sub-optimal model architecture. By leveraging the hardware-impacted hysteresis effect and sparsity, we are able to achieve the symbiosis of model compactness and accuracy with execution efficiency, thus reducing LSTM latency while increasing its accuracy. We have evaluated our algorithms on language modeling and speech recognition applications. Relative to the traditional stacked LSTM architecture obtained for the Penn Treebank dataset, we reduce the number of parameters by 18.0x (30.5x) and measured run-time latency by up to 2.4x (5.2x) on Nvidia GPUs (Intel Xeon CPUs) without any accuracy degradation. For the DeepSpeech2 architecture obtained for the AN4 dataset, we reduce the number of parameters by 7.0x (19.4x), word error rate from 12.9% to 9.9% (10.4%), and measured run-time latency by up to 1.7x (2.4x) on Nvidia GPUs (Intel Xeon CPUs). Thus, our method yields compact, accurate, yet execution-efficient inference models.",H-LSTM+wg+rcp+rcg+wp,Unreleased,,,2024-09-05 18:08:31+00:00,"United States of America,China",,,,,,,,,
Mono3D++,"3D modeling,Vision","University of California Los Angeles (UCLA),Megvii Inc","Academia,Industry","Tong He, Stefano Soatto",2019-01-11,Mono3D++: Monocular 3D Vehicle Detection with Two-Scale 3D Hypotheses and Task Priors,https://arxiv.org/abs/1901.03446,124.0,,,,,4.85606016e+18,,,"(4) * (6.691 * 10**12) * (168* 3600) * (0.3) = 
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate) = 

training time - about one week = 168 hours from
""It takes about one week to train the 2D bounding box net-work, and two hours for the orientation/3D scale network
on KITTI with 4 TITAN-X GPUs. The landmark detector is
trained on Pascal3D. The training process for the monocu-
lar depth estimation network is unsupervised using KITTI
stereo-pairs, which takes around 5 to 12 hours depending
on the amount of data available. ""

gpu flops - FP32 (float) 6.691 TFLOPS from https://www.techpowerup.com/gpu-specs/geforce-gtx-titan-x.c2632",KITTI,"""t takes about one week to train the 2D bounding box net-
work, and two hours for the orientation/3D scale network
on KITTI with 4 TITAN-X GPUs. The landmark detector is
trained on Pascal3D. The training process for the monocu-
lar depth estimation network is unsupervised using KITTI
stereo-pairs, which takes around 5 to 12 hours depending
on the amount of data available. ""


""We evaluate our method on the KITTI object detection
benchmark. This dataset contains 7, 481 training images """,7481.0,"""We evaluate our method on the KITTI object detection benchmark. This dataset contains 7, 481 training images """,,168.0,"""about one week"" from section 3.4 ",NVIDIA GeForce GTX TITAN X,4.0,,"We present a method to infer 3D pose and shape of vehicles from a single image. To tackle this ill-posed problem, we optimize two-scale projection consistency between the generated 3D hypotheses and their 2D pseudo-measurements. Specifically, we use a morphable wireframe model to generate a fine-scaled representation of vehicle shape and pose. To reduce its sensitivity to 2D landmarks, we jointly model the 3D bounding box as a coarse representation which improves robustness. We also integrate three task priors, including unsupervised monocular depth, a ground plane constraint as well as vehicle shape priors, with forward projection errors into an overall energy function. ",,Unreleased,,Confident,2025-01-22 17:17:07+00:00,"United States of America,China",,,,,,,,,
Transformer-XL (257M),Language,"Carnegie Mellon University (CMU),Google Brain","Academia,Industry","Zihang Dai, Zhilin Yang, Yiming Yang, Jaime Carbonell, Quoc V. Le, Ruslan Salakhutdinov",2019-01-09,Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context,https://arxiv.org/abs/1901.02860,3430.0,Highly cited,,257000000.0,"Transformer-XL Large, Table 1",1.09e+19,,,,WikiText-103,,,,,,,,,,"Transformers have a potential of learning longer-term dependency, but are limited by a fixed-length context in the setting of language modeling. We propose a novel neural architecture Transformer-XL that enables learning dependency beyond a fixed length without disrupting temporal coherence. It consists of a segment-level recurrence mechanism and a novel positional encoding scheme. Our method not only enables capturing longer-term dependency, but also resolves the context fragmentation problem. As a result, Transformer-XL learns dependency that is 80% longer than RNNs and 450% longer than vanilla Transformers, achieves better performance on both short and long sequences, and is up to 1,800+ times faster than vanilla Transformers during evaluation. Notably, we improve the state-of-the-art results of bpc/perplexity to 0.99 on enwiki8, 1.08 on text8, 18.3 on WikiText-103, 21.8 on One Billion Word, and 54.5 on Penn Treebank (without finetuning). When trained only on WikiText-103, Transformer-XL manages to generate reasonably coherent, novel text articles with thousands of tokens. Our code, pretrained models, and hyperparameters are available in both Tensorflow and PyTorch.",Transformer-XL Large,Open weights (unrestricted),,,2024-11-01 14:03:04+00:00,"United States of America,United States of America",,,,,,,,,
Decoupled weight decay regularization,Vision,University of Freiburg,Academia,Ilya Loshchilov and Frank Hutter,2019-01-04,Decoupled weight decay regularization.,https://arxiv.org/abs/1711.05101,2061.0,Highly cited,,36500000.0,"From author communication

WideResNet 28-10 models with 36.5 million parameters (3.65E+07)",2.47e+18,,,"From author communication

Per image: 5.24 billion FLOPs (5.24E+09)  Per training run: 50k times 5.24E+09 times 1800 epochs = 2.47E+18 FLOPs",CIFAR-10,,50000.0,,,,,,,,"L2 regularization and weight decay regularization are equivalent for standard stochastic gradient descent (when rescaled by the learning rate), but as we demonstrate this is \emph{not} the case for adaptive gradient algorithms, such as Adam. While common implementations of these algorithms employ L2 regularization (often calling it ""weight decay"" in what may be misleading due to the inequivalence we expose), we propose a simple modification to recover the original formulation of weight decay regularization by \emph{decoupling} the weight decay from the optimization steps taken w.r.t. the loss function. We provide empirical evidence that our proposed modification (i) decouples the optimal choice of weight decay factor from the setting of the learning rate for both standard SGD and Adam and (ii) substantially improves Adam's generalization performance, allowing it to compete with SGD with momentum on image classification datasets (on which it was previously typically outperformed by the latter). Our proposed decoupled weight decay has already been adopted by many researchers, and the community has implemented it in TensorFlow and PyTorch; the complete source code for our experiments is available at this https URL",,Open weights (unrestricted),,,2025-02-17 17:33:47+00:00,Germany,,,,,,,,,
Transformer ELMo,Language,"Allen Institute for AI,University of Washington","Research collective,Academia","ME Peters, M Neumann, L Zettlemoyer, W Yih",2019-01-01,Dissecting Contextual Word Embeddings: Architecture and Representation,https://www.semanticscholar.org/paper/Dissecting-Contextual-Word-Embeddings%3A-Architecture-Peters-Neumann/ac11062f1f368d97f4c826c317bf50dcc13fdb59,406.0,SOTA improvement,"""Our model is the Reconciled Span Parser (RSP; Joshi et al., 2018), which, using ELMo representations, achieved state of the art performance for this
task. As shown in Table 2, the LSTM based models demonstrate the best performance with a 0.2% and 1.0% improvement over the Transformer and CNN models, respectively""",56000000.0,,,,,,,More info on this is extractable with some time,,,,,,,,,,,Unreleased,,,2024-11-01 14:03:04+00:00,"United States of America,United States of America",,,,,,,,,
Transformer + Average Attention Network,Language,University of Electronic Science and Technology of China,Academia,"Jian Guo Zhang, Jian Ping Li, Huang Li",2019-01-01,Language Modeling with Transformer,https://ieeexplore.ieee.org/abstract/document/9067534,126.0,,,,,,,,,WikiText-103,,,,,,,,,,"To date, the main method of language modeling is based on recurrent neural networks or convolutional neural networks. We show that two simple models which get inspiration from Transformer [1]. Compare to other attention network, the Transformer which just use self-attention and FFN (feedforward network) are highly efficient in training. We apply the idea which from the mechanism of Transformer to language module. We predict the future elements by the long-term dependence of context words which through the ANN (average attention network) and self-attention mechanism. We test our model on WikiText-103 where our model achieves 22.13 perplexity and on the Google Billion Word benchmark, which we achieve 26.31 perplexity.",Transformer + Average Attention Network,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,China,,,,,,,,,
DMPFold,Biology,University College London (UCL),Academia,"Joe G. Greener, Shaun M. Kandathil and David T. Jones",2018-11-29,Deep learning extends de novo protein modelling coverage of genomes using iteratively predicted structural constraints,https://www.nature.com/articles/s41467-019-11994-0,174.0,,,3800000.0,"Based on Fig. 9:

Distance predictor network: [Total = 17684]
(1) Maxout2D: 0 parameters
(2) ResBlock x 18: 2*64*18 = 16384 parameters (a shift and scale parameter for every InstanceNorm2D layer)
(3) Conv2D 1x1: 64*20 + 20 = 1300 parameters
(4) Softmax: 0 parameters

Hydrogen bond predictor network: [Total = 3691073]
(1) Maxout2D: 0 parameters
(2) ResBlock x 18: (2*64*2 + 5*5*64*64*2)*18 = 3 691 008 parameters
(3) Conv2D 1x1: 64*1 + 1 = 65 parameters
(4) Sigmoid: 0 parameters

Torsion angles and errors network [Total = 115459]
(1) Maxout2D: 0 parameters
(2) ResBlock x 18: 2*64*18 = 16384 parameters (a shift and scale parameter for every InstanceNorm2D layer)
(3) BLSTM: 4×2×(N+M)×M where M is 128 (hidden units in BLSTM layer) and N is 64 (input dimensionality) = 98304
(4) Conv1D 1x1: 256*3 + 3 = 771 parameters

Estimate total parameters = 3.8e6 parameters

[See Section 'Additional constraint types and iterative predictions': ""a bidirectional recurrent LSTM layer with 128 hidden units (BLSTM in Fig. 9c), which embeds each row of the final 2-D 64-channel feature map in a single 256-D vector (concatenation of 128-D final timestep output states of the forward and reverse direction LSTM passes)""]",,,,"""Training of all models was performed using the Adam optimiser for 75
epochs with default parameters""

""The training set here was based on the same 6729 protein chains, ≤500 residues in length, with non-redundancy at the 25% sequence identity level and no unresolved main chain atoms""

Estimate = 2 * 3.8e6 * 3 * 6729 * 75 * 486 ~ 5.59e15 FLOP

This seems likely to be too low.",PSICOV150,"First published in Jones et al. 2012: https://academic.oup.com/bioinformatics/article/28/2/184/198108

""All other aspects of training, including data augmentation procedures were out as
previously described for DMP. The training set here was based on the same 6729 protein chains, ≤500 residues in length""

In DMP publication: (https://academic.oup.com/bioinformatics/article/34/19/3308/4987145?login=false)
""We assessed the mean precision achieved by DeepCov on the now standard PSICOV150 set of proteins and alignments, described in Jones et al. (2012).""",3270294.0,"""The training set here was based on the same 6729 protein chains""
Each chain is <= 500 residues long, per this paper, average animal protein is 486 amino acids long.
6729 * 486 = 3,270,294 residues total",75.0,,,,,,"The inapplicability of amino acid covariation methods to small protein families has limited their use for structural annotation of whole genomes. Recently, deep learning has shown promise in allowing accurate residue-residue contact prediction even for shallow sequence alignments. Here we introduce DMPfold, which uses deep learning to predict inter-atomic distance bounds, the main chain hydrogen bond network, and torsion angles, which it uses to build models in an iterative fashion. DMPfold produces more accurate models than two popular methods for a test set of CASP12 domains, and works just as well for transmembrane proteins. Applied to all Pfam domains without known structures, confident models for 25% of these so-called dark families were produced in under a week on a small 200 core cluster. DMPfold provides models for 16% of human proteome UniProt entries without structures, generates accurate models with fewer than 100 sequences in some cases, and is freely available.",,Open weights (unrestricted),,Likely,2024-10-21 15:22:55+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
GPipe (Transformer),Language,Google,Industry,"Y Huang, Y Cheng, A Bapna, O Firat",2018-11-16,GPipe: Efficient Training of Giant Neural Networks using Pipeline Parallelism,https://arxiv.org/abs/1811.06965,1218.0,"Highly cited,SOTA improvement","""We train a single 6-billion-parameter,
128-layer Transformer model on a corpus spanning over 100 languages and achieve better quality than all bilingual models.""",6000000000.0,Section 5: ,,,,,,,20000000000.0,"[WORDS]

Section 5: ""We use a
corpus of parallel documents over 102 languages and English, containing a total of 25 billion training examples, ranging from 10^4 to 10^9 per language""

10^9 sentences * 20 words per sentence",,,,,,Self-supervised learning,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
GPipe (Amoeba),Vision,Google,Industry,"Yanping Huang, Youlong Cheng, Ankur Bapna, Orhan Firat, Mia Xu Chen, Dehao Chen, HyoukJoong Lee, Jiquan Ngiam, Quoc V. Le, Yonghui Wu, Zhifeng Chen",2018-11-16,GPipe: Efficient Training of Giant Neural Networks using Pipeline Parallelism,https://arxiv.org/abs/1811.06965,1218.0,Highly cited,,557000000.0,Section 4,,,,,ImageNet,,1281167.0,Table 4,,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Multi-cell LSTM,Language,University of Hyderabad,Academia,"Thomas Cherian, Akshay Badola, Vineet Padmanabhan",2018-11-15,Multi-cell LSTM Based Neural Language Model,https://arxiv.org/abs/1811.06477,6.0,SOTA improvement,"""The proposed multi-cell LSTM language models outperform the state-of-the-art results on well-known Penn Treebank (PTB) setup""",7200000.0,,2010000000000000.0,,,,,,,,50.0,,,,,,"Language models, being at the heart of many NLP problems, are always of great interest to researchers. Neural language models come with the advantage of distributed representations and long range contexts. With its particular dynamics that allow the cycling of information within the network, `Recurrent neural network' (RNN) becomes an ideal paradigm for neural language modeling. Long Short-Term Memory (LSTM) architecture solves the inadequacies of the standard RNN in modeling long-range contexts. In spite of a plethora of RNN variants, possibility to add multiple memory cells in LSTM nodes was seldom explored. Here we propose a multi-cell node architecture for LSTMs and study its applicability for neural language modeling. The proposed multi-cell LSTM language models outperform the state-of-the-art results on well-known Penn Treebank (PTB) setup.",Multi-cell LSTM,Unreleased,,,2024-09-05 18:08:31+00:00,India,,,,,,,,,
Fine-tuned-AWD-LSTM-DOC (fin),Language,Samsung R&D Institute Russia,Industry,"Vadim Popov, Mikhail Kudinov",2018-11-12,Fine-tuning of Language Models with Discriminator,https://arxiv.org/abs/1811.04623,2.0,SOTA improvement,"""The novel approach that we propose allows us to reach state-of-theart quality on Penn Treebank: perplexity decreases from 52.4 to 52.1.""",46000000.0,"This is the model trained on Penn Treebank, which uses as a base model the 23M model from Table 7 in https://aclanthology.org/D18-1489.pdf

They additionally train a discriminator with the same architecture, so total parameters is 2*23M = 46M",5.188e+16,,,"Base model uses 4.323e16 FLOPs.
They then train a discriminator using the same architecture for 30 epochs, and then use the discriminator to fine-tune the base model for another 15 epochs. Both of these latter training steps require running forward passes on both the discriminator and the language model, but only doing a backward pass on one of them.

Discriminator training: 
2*23M*30*1044112 + 6*23M*30*1044112 = 5.763e15

LM fine-tuning:
2*23M*15*1044112 + 6*23M*15*1044112 = 2.882e15

Total:
4.323e16 + 5.763e15 + 2.882e15 = 5.188e16",Penn TreeBank,,1044112.0,"Per https://arxiv.org/pdf/1904.04733:
""The most common split of this corpus, where sections from 0 to 18 are used for training (38 219 sentences, 912 344 tokens), sections from 19 to 21 are used for validation (5 527 sentences, 131 768 tokens), and sections from 22 to 24 are used for testing (5 462 sentences, 129 654 tokens).""

So dev set is 912,344 + 131768 = 1,044,112",15.0,,,,,,"Cross-entropy loss is a common choice when it comes to multiclass classification tasks and language modeling in particular. Minimizing this loss results in language models of very good quality. We show that it is possible to fine-tune these models and make them perform even better if they are fine-tuned with sum of cross-entropy loss and reverse Kullback-Leibler divergence. The latter is estimated using discriminator network that we train in advance. During fine-tuning probabilities of rare words that are usually underestimated by language models become bigger. The novel approach that we propose allows us to reach state-of-the-art quality on Penn Treebank: perplexity decreases from 52.4 to 52.1. Our fine-tuning algorithm is rather fast, scales well to different architectures and datasets and requires almost no hyperparameter tuning: the only hyperparameter that needs to be tuned is learning rate.",Fine-tuned-AWD-LSTM-DOC(fin),Unreleased,,Confident,2025-02-17 17:34:08+00:00,Russia,AWD-LSTM-DOC (fin) (23M),,,,,,,,
Discriminator-tuned LSTM,Language,Samsung R&D Institute Russia,Industry,"Vadim Popov, Mikhail Kudinov",2018-11-12,Fine-tuning of Language Models with Discriminator,https://arxiv.org/abs/1811.04623,,,Smaller model trained on Penn Treebank gets SOTA; this is a larger experiment but does not challenge any well-known benchmark.,111920000.0,"The largest experiment is the model trained in section 4.3 (""Large scale experiment""). The dataset here has a vocabulary of 100k words. They use a single-layer LSTM with 500 hidden units, with differentiated softmax for the output layer. d_k for distributed softmax varies from 16-150 depending on the relative frequency of the output word. 

Input layer:
100k * 500 = 50M parameters

LSTM:
4 * (500 + 500) * 500 = 2M parameters

Output layer:
Here we need to assume the structure of differentiated softmax. Let's (somewhat arbitrarily) assume the top 10k words get 150-dim embeddings, the middle 30k get 50-dim embeddings, and the bottom 60k get 16-dim embeddings. Then we have:
(10k * 150) + (30k * 50) + (60k * 16) = 3.96M parameters

So in total, we have
50M + 2M + 3.96M = 55.96M

In other experiments, the authors use the same architecture for the discriminator as for the language model. So total parameter count would appear to be 2 x 55.96M = 111.92M",,,,"We can estimate the compute used to train the discriminator and to fine-tune the language model. These trained for 320M and 160M tokens, respectively; note that for each of these steps you're doing forward passes on both the discriminator and language model, but only doing backward passes on the component being trained.

However, they don't say how long they pre-trained the language model, which likely constitutes the majority of training.",,"""we trained our model on consisted of 4Gb of English texts gathered from the Internet (blogs, news articles, forums, etc.) Vocabulary consisted of top 100k words from training corpus. Validation and test sets’ sizes were around 100Mb.""",,"4GB of text * 200M words/GB * (0.75 words/token)^-1 = 1,066,666,667 tokens  
  
However, it's unclear whether they train over all of this. They break the data into 20MB chunks and say that each ""epoch"" corresponds to training on one chunk. Training the discriminator and fine-tuning the language model takes 60 and 30 ""epochs"" each, i.e.  
(60 + 30) * 0.02 * 200M * 4/3 = 480M tokens  
  
They appear to have pre-trained their own LSTM language model on the same data, but they don't say how many ""epochs"" or tokens it took to train that model.",,,,,,Self-supervised learning,"Cross-entropy loss is a common choice when it comes to multiclass classification tasks and language modeling in particular. Minimizing this loss results in language models of very good quality. We show that it is possible to fine-tune these models and make them perform even better if they are fine-tuned with sum of cross-entropy loss and reverse Kullback-Leibler divergence. The latter is estimated using discriminator network that we train in advance. During fine-tuning probabilities of rare words that are usually underestimated by language models become bigger. The novel approach that we propose allows us to reach state-of-the-art quality on Penn Treebank: perplexity decreases from 52.4 to 52.1. Our fine-tuning algorithm is rather fast, scales well to different architectures and datasets and requires almost no hyperparameter tuning: the only hyperparameter that needs to be tuned is learning rate.",,,,Likely,2024-10-09 00:19:05+00:00,Russia,,,,,,,,,
Mesh-TensorFlow Transformer 4.9B (language),Language,Google Brain,Industry,"Noam Shazeer, Youlong Cheng, Niki Parmar, Dustin Tran, Ashish Vaswani, Penporn Koanantakool, Peter Hawkins, Hyoukjoong Mingsheng Lee, Cliff Hong, Ryan Young, Blake Sepassi,  Hechtman",2018-11-05,Mesh-TensorFlow: Deep Learning for Supercomputers,https://arxiv.org/abs/1811.02084,357.0,SOTA improvement,"'Using TPU meshes of up to 512 cores, we train Transformer models with up to 5 billion parameters, surpassing state of the art results on WMT'14 English-to-French translation task and the one-billion-word language modeling benchmark.'",4900000000.0,4.9B from section 9.1 : ''The largest model (4.9B parameters) took 13 hours to train on a 512-core TPUv2 cluster.',1.617408e+20,,,"flops = (256) * ( 45 * 10**12) * (13 * 3600) * (0.3) = 1.6e20
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

from section 9.1 : ''The largest model (4.9B parameters) took 13 hours to train on a 512-core TPUv2 cluster.'
from https://en.wikipedia.org/wiki/Tensor_Processing_Unit 
45TFLOPs per chips","Wikipedia,One Billion Word benchmark",from section 9.1 Wikipedia and one-billion-word language modeling benchmark.,6333333333.333333,"from section 9.1. Experiments done on a ""billion word benchmark"" and a 5B token wikipedia dataset. At 4/3 tokens per word, 1.3B tokens in the first.",10.0,13.0,"from section 9.1 ""For the billion-word language modeling benchmark, we trained the models for 10 epochs. The largest model (4.9B parameters) took 13 hours to train on a 512-core TPUv2 cluster.""",Google TPU v2,256.0,,"Batch-splitting (data-parallelism) is the dominant distributed Deep Neural Network (DNN) training strategy, due to its universal applicability and its amenability to Single-Program-Multiple-Data (SPMD) programming. However, batch-splitting suffers from problems including the inability to train very large models (due to memory constraints), high latency, and inefficiency at small batch sizes. All of these can be solved by more general distribution strategies (model-parallelism). Unfortunately, efficient model-parallel algorithms tend to be complicated to discover, describe, and to implement, particularly on large clusters. We introduce Mesh-TensorFlow, a language for specifying a general class of distributed tensor computations. Where data-parallelism can be viewed as splitting tensors and operations along the ""batch"" dimension, in Mesh-TensorFlow, the user can specify any tensor-dimensions to be split across any dimensions of a multi-dimensional mesh of processors. A Mesh-TensorFlow graph compiles into a SPMD program consisting of parallel operations coupled with collective communication primitives such as Allreduce. We use Mesh-TensorFlow to implement an efficient data-parallel, model-parallel version of the Transformer sequence-to-sequence model. Using TPU meshes of up to 512 cores, we train Transformer models with up to 5 billion parameters, surpassing state of the art results on WMT'14 English-to-French translation task and the one-billion-word language modeling benchmark. Mesh-Tensorflow is available at this https URL .",,Unreleased,,Confident,2025-02-17 17:34:23+00:00,United States of America,,,,,,,,,
Mesh-TensorFlow Transformer 2.9B (translation),Language,Google Brain,Industry,"Noam Shazeer, Youlong Cheng, Niki Parmar, Dustin Tran, Ashish Vaswani, Penporn Koanantakool, Peter Hawkins, Hyoukjoong Mingsheng Lee, Cliff Hong, Ryan Young, Blake Sepassi,  Hechtman",2018-11-05,Mesh-TensorFlow: Deep Learning for Supercomputers,https://arxiv.org/abs/1811.02084,357.0,SOTA improvement,"'Using TPU meshes of up to 512 cores, we train Transformer models with up to 5 billion parameters, surpassing state of the art results on WMT'14 English-to-French translation task and the one-billion-word language modeling benchmark.'",2900000000.0,"2.9B from section 9.1 : ""On the WMT14 En-Fr translation tasks (3), we trained the models for 3 epochs. The largest model
(2.9B parameters) was trained for 22 hours on a 128-core TPUv2 cluster.""",6.84288e+19,,,"flops = (64) * ( 45 * 10**12) * (22 * 3600) * (0.3) = 6.8e19
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate)

from section 9.1 : ""On the WMT14 En-Fr translation tasks (3), we trained the models for 3 epochs. The largest model
(2.9B parameters) was trained for 22 hours on a 128-core TPUv2 cluster.""
from https://en.wikipedia.org/wiki/Tensor_Processing_Unit 
45TFLOPs per chips",WMT14,"from section 9.1 ""On the WMT14 En-Fr translation tasks (3), we trained the models for 3 epochs. The largest model
(2.9B parameters) was trained for 22 hours on a 128-core TPUv2 cluster.""",1800000000.0,"Per Attention is All You Need, WMT 2014 En-Fr is ~36 million sentence pairs. If the average sentence is ~25 tokens (ballpark), dataset size is 
36M * 25 * 2 = 1.8B tokens",10.0,22.0,"from section 9.1 ""On the WMT14 En-Fr translation tasks (3), we trained the models for 3 epochs. The largest model
(2.9B parameters) was trained for 22 hours on a 128-core TPUv2 cluster.""",Google TPU v2,64.0,,"Batch-splitting (data-parallelism) is the dominant distributed Deep Neural Network (DNN) training strategy, due to its universal applicability and its amenability to Single-Program-Multiple-Data (SPMD) programming. However, batch-splitting suffers from problems including the inability to train very large models (due to memory constraints), high latency, and inefficiency at small batch sizes. All of these can be solved by more general distribution strategies (model-parallelism). Unfortunately, efficient model-parallel algorithms tend to be complicated to discover, describe, and to implement, particularly on large clusters. We introduce Mesh-TensorFlow, a language for specifying a general class of distributed tensor computations. Where data-parallelism can be viewed as splitting tensors and operations along the ""batch"" dimension, in Mesh-TensorFlow, the user can specify any tensor-dimensions to be split across any dimensions of a multi-dimensional mesh of processors. A Mesh-TensorFlow graph compiles into a SPMD program consisting of parallel operations coupled with collective communication primitives such as Allreduce. We use Mesh-TensorFlow to implement an efficient data-parallel, model-parallel version of the Transformer sequence-to-sequence model. Using TPU meshes of up to 512 cores, we train Transformer models with up to 5 billion parameters, surpassing state of the art results on WMT'14 English-to-French translation task and the one-billion-word language modeling benchmark. Mesh-Tensorflow is available at this https URL .",,Unreleased,,Likely,2025-02-17 17:34:16+00:00,United States of America,,,,,,,,,
MemoReader,Language,"Samsung,Korea University","Industry,Academia","Seohyun Back, Seunghak Yu, Sathish Indurthi, Jihie Kim, Jaegul Choo",2018-10-31,"MemoReader: Large-Scale Reading Comprehension through Neural Memory Controller
",https://aclanthology.org/D18-1237/,17.0,SOTA improvement,"""TriviaQA. As shown in Table 2, our model,
even without DEBS, outperforms the existing
state-of-the-art method such as ‘BiDAF + SA +
SN’ by a large margin in all the cases""",,,,,,"""Our model does require more memory than existing methods, but a single GPU (e.g., M40 with 12GB memory) was enough to train model within a reasonable amount of time""

""Reasonable"" could mean anything, maybe hours to a few days.",TriviaQA,,,,,,"""reasonable amount of time"" with a single GPU",NVIDIA M40,,,"Machine reading comprehension helps machines learn to utilize most of the human
knowledge written in the form of text. Existing approaches made a significant progress comparable to human-level performance, but they
are still limited in understanding, up to a few paragraphs, failing to properly comprehend
lengthy document. In this paper, we propose a novel deep neural network architecture to handle a long-range dependency in RC tasks. In
detail, our method has two novel aspects: (1) an advanced memory-augmented architecture
and (2) an expanded gated recurrent unit with dense connections that mitigate potential information distortion occurring in the memory.
Our proposed architecture is widely applicable
to other models. We have performed extensive experiments with well-known benchmark
datasets such as TriviaQA, QUASAR-T, and
SQuAD. The experimental results demonstrate
that the proposed method outperforms existing
methods, especially for lengthy documents.",,Unreleased,,Unknown,2024-10-08 17:36:16+00:00,"Korea (Republic of),Korea (Republic of)",,,,,,,,,
code2vec,Language,"Technion - Israel Institute of Technology,Facebook AI Research","Academia,Industry","Uri Alon, Meital Zilberstein, Omer Levy, Eran Yahav",2018-10-30,code2vec: Learning Distributed Representations of Code,https://arxiv.org/abs/1803.09473,,,,,,3.1593888e+17,,,8126000000000.000 * 36 * 3600 * 0.3 = 3.1593888e+17,GitHub,,,"We used a data set of 10, 072 Java GitHub repositories, originally introduced by Alon et al. [2018].
In this dataset, the files from all the projects are shuffled and split to
14,162,842 training (66GB), 415, 046 validation and 413, 915 of test methods

""the average method length is 7 lines"" [of code]",12.0,36.0,"When training on a single Tesla K80 GPU, we achieve a training
throughput of more than 1000 methods per second. Therefore, a single training epoch takes about 3 hours, and it takes about 1.5 days to completely train a model.

36/3 = 12 epochs",NVIDIA Tesla K80,,,"We present a neural model for representing snippets of code as continuous distributed vectors (""code embeddings""). The main idea is to represent a code snippet as a single fixed-length code vector, which can be used to predict semantic properties of the snippet. This is performed by decomposing code to a collection of paths in its abstract syntax tree, and learning the atomic representation of each path simultaneously with learning how to aggregate a set of them. We demonstrate the effectiveness of our approach by using it to predict a method's name from the vector representation of its body. We evaluate our approach by training a model on a dataset of 14M methods. We show that code vectors trained on this dataset can predict method names from files that were completely unobserved during training. Furthermore, we show that our model learns useful method name vectors that capture semantic similarities, combinations, and analogies. Comparing previous techniques over the same data set, our approach obtains a relative improvement of over 75%, being the first to successfully predict method names based on a large, cross-project, corpus. Our trained model, visualizations and vector similarities are available as an interactive online demo at this http URL. The code, data, and trained models are available at this https URL.",,Open weights (unrestricted),,Confident,2024-10-28 17:28:42+00:00,"Israel,United States of America",,,,,,,,,
TrellisNet,Language,"Carnegie Mellon University (CMU),Bosch Center for Artificial Intelligence,Intel Labs","Academia,Industry,Industry","Shaojie Bai, J. Zico Kolter, Vladlen Koltun",2018-10-15,Trellis Networks for Sequence Modeling,https://arxiv.org/abs/1810.06682,138.0,SOTA improvement,"""Experiments demonstrate that trellis networks outperform the current state of the art methods on a variety of challenging benchmarks, including word-level language modeling and character-level language modeling
tasks""",180000000.0,"180M, Table 2",2.78e+18,,,,WikiText-103,,,,25.0,,,,,,"We present trellis networks, a new architecture for sequence modeling. On the one hand, a trellis network is a temporal convolutional network with special structure, characterized by weight tying across depth and direct injection of the input into deep layers. On the other hand, we show that truncated recurrent networks are equivalent to trellis networks with special sparsity structure in their weight matrices. Thus trellis networks with general weight matrices generalize truncated recurrent networks. We leverage these connections to design high-performing trellis networks that absorb structural and algorithmic elements from both recurrent and convolutional models. Experiments demonstrate that trellis networks outperform the current state of the art methods on a variety of challenging benchmarks, including word-level language modeling and character-level language modeling tasks, and stress tests designed to evaluate long-term memory retention. The code is available at this https URL .",TrellisNet,Unreleased,,,2024-09-10 21:15:55+00:00,"United States of America,Germany,Multinational,United States of America",,,,,,,,,
BERT-Large,Language,Google,Industry,"J Devlin, MW Chang, K Lee, K Toutanova",2018-10-11,BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding,https://arxiv.org/abs/1810.04805,83567.0,Highly cited,,340000000.0,,2.85e+20,,,more info here https://docs.google.com/document/d/1B8x6XYcmB1u6Tmq3VcbAtj5bzhDaj2TcIPyK6Wpupx4/edit?usp=sharing,,,3300000000.0,"""For the pre-training corpus we
use the BooksCorpus (800M words) (Zhu et al., 2015) and English Wikipedia (2,500M words)""",40.0,96.0,"from appendix A.2: ""Training of BERTLARGE was performed
on 16 Cloud TPUs (64 TPU chips total). Each pre-
training took 4 days to complete.""",Google TPU v2,64.0,Self-supervised learning,"We introduce a new language representation model called BERT, which stands for Bidirectional Encoder Representations from Transformers. Unlike recent language representation models, BERT is designed to pre-train deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers. As a result, the pre-trained BERT model can be fine-tuned with just one additional output layer to create state-of-the-art models for a wide range of tasks, such as question answering and language inference, without substantial task-specific architecture modifications. BERT is conceptually simple and empirically powerful. It obtains new state-of-the-art results on eleven natural language processing tasks, including pushing the GLUE score to 80.5% (7.7% point absolute improvement), MultiNLI accuracy to 86.7% (4.6% absolute improvement), SQuAD v1.1 question answering Test F1 to 93.2 (1.5 point absolute improvement) and SQuAD v2.0 Test F1 to 83.1 (5.1 point absolute improvement).",,Open weights (unrestricted),0.2801,,2025-03-10 17:20:35+00:00,United States of America,,,,,,,128000.0,,
MetaMimic,Robotics,Google,Industry,"Tom Le Paine, Sergio Gomez",2018-10-11,One-Shot High-Fidelity Imitation: Training Large-Scale Deep Nets with RL,https://arxiv.org/abs/1810.05017,26.0,SOTA improvement,"""By retaining and taking advantage of all its experiences,
MetaMimic also substantially outperforms the state-of-the-art D4PG RL agent, when D4PG
uses only the current task experiences.""",22000000.0,"""This representational demand motivates the introduction of high-capacity deep neural networks. We found the architecture, shown in Figure 3, with residual connections, 20 convolution layers with 512 channels
for a total of 22 million parameters, and instance normalization to drastically improve performance, as shown in Figure 6 of the Experiments section.""",,,,,,,,,,,,,,Reinforcement learning,"Humans are experts at high-fidelity imitation -- closely mimicking a demonstration, often in one attempt. Humans use this ability to quickly solve a task instance, and to bootstrap learning of new tasks. Achieving these abilities in autonomous agents is an open problem. In this paper, we introduce an off-policy RL algorithm (MetaMimic) to narrow this gap. MetaMimic can learn both (i) policies for high-fidelity one-shot imitation of diverse novel skills, and (ii) policies that enable the agent to solve tasks more efficiently than the demonstrators. MetaMimic relies on the principle of storing all experiences in a memory and replaying these to learn massive deep neural network policies by off-policy RL. This paper introduces, to the best of our knowledge, the largest existing neural networks for deep RL and shows that larger networks with normalization are needed to achieve one-shot high-fidelity imitation on a challenging manipulation task. The results also show that both types of policy can be learned from vision, in spite of the task rewards being sparse, and without access to demonstrator actions.",,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
DeepConPred2,Biology,Tsinghua University,Academia,"Wenze Ding, Wenzhi Mao, Di Shao, Wenxuan Zhang, Haipeng Gong",2018-10-11,DeepConPred2: An Improved Method for the Prediction of Protein Residue Contacts,https://www.sciencedirect.com/science/article/pii/S2001037018301466,31.0,,,,,,,,,SCOPe 2.05,"""Specifically, all proteins in the training set of this work came from the SCOPe 2.05 version""",38000000.99999999,"3,443 proteins × (150 × 149)/2 pairs/protein = 3.84 × 10⁷ datapoints ≈ 3.8 × 10⁷",,,,,,,"Information of residue-residue contacts is essential for understanding the mechanism of protein folding, and has been successfully applied as special topological restraints to simplify the conformational sampling in de novo protein structure prediction. Prediction of protein residue contacts has experienced amazingly rapid progresses recently, with prediction accuracy approaching impressively high levels in the past two years. In this work, we introduce a second version of our residue contact predictor, DeepConPred2, which exhibits substantially improved performance and sufficiently reduced running time after model re-optimization and feature updates. When testing on the CASP12 free modeling targets, our program reaches at least the same level of prediction accuracy as the best contact predictors so far and provides information complementary to other state-of-the-art methods in contact-assisted folding",,,,Unverified,2025-01-30 05:04:17+00:00,China,,,,,,,,,
BigGAN-deep 512x512,Image generation,"Heriot-Watt University,DeepMind","Academia,Industry","Andrew Brock, Jeff Donahue, Karen Simonyan",2018-09-28,Large Scale GAN Training for High Fidelity Natural Image Synthesis,https://arxiv.org/abs/1809.11096,4925.0,Highly cited,,112694781.0,"I used the publicly available implementation available at [1]

There I loaded the biggan-deep512/1 model, and ran script [2] to compute the number of parameters

[1] https://colab.research.google.com/github/tensorflow/hub/blob/master/examples/colab/biggan_generation_with_tf_hub.ipynb

[2]
n_params = 0
for var in module.variables:
  n_params += np.prod(var.shape.as_list())
  pass

print(n_params)",1.8e+21,,,"3e21, estimate taken from:

https://www.lesswrong.com/posts/wfpdejMWog4vEDLDg/ai-and-compute-trend-isn-t-predictive-of-what-is-happening",JFT-300M,,292000000.0,"""To confirm that our design choices are effective for even larger and more complex and diverse datasets, we also present results of our system on a subset of JFT-300M (Sun et al., 2017). The full JFT-300M dataset contains 300M real-world images labeled with 18K categories. Since the category distribution is heavily long-tailed, we subsample the dataset to keep only images with the 8.5K most common labels. The resulting dataset contains 292M images – two orders of magnitude larger than ImageNet. """,,48.0,"""We train on a Google TPU v3 Pod, with the number of cores proportional to the resolution: 128 for 128×128, 256 for 256×256, and 512 for 512×512. Training takes between 24 and 48 hours for most models""",Google TPU v3,256.0,,"Despite recent progress in generative image modeling, successfully generating high-resolution, diverse samples from complex datasets such as ImageNet remains an elusive goal. To this end, we train Generative Adversarial Networks at the largest scale yet attempted, and study the instabilities specific to such scale. We find that applying orthogonal regularization to the generator renders it amenable to a simple ""truncation trick,"" allowing fine control over the trade-off between sample fidelity and variety by reducing the variance of the Generator's input. Our modifications lead to models which set the new state of the art in class-conditional image synthesis. When trained on ImageNet at 128x128 resolution, our models (BigGANs) achieve an Inception Score (IS) of 166.5 and Frechet Inception Distance (FID) of 7.4, improving over the previous best IS of 52.52 and FID of 18.6.",,Open weights (unrestricted),,Likely,2025-02-17 19:41:51+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Transformer (Adaptive Input Embeddings) WT103,Language,Facebook AI Research,Industry,"Alexei Baevski, Michael Auli",2018-09-28,Adaptive Input Representations for Neural Language Modeling,https://arxiv.org/abs/1809.10853,366.0,SOTA improvement,"""On the WikiText-103 benchmark we achieve 18.7 perplexity, an improvement of 10.5 perplexity compared to the previously best published result""",247000000.0,Table 2,4.47e+19,,,"8 V100s * 67 hours per Table 2.
125e12 FLOP/sec * 8 * 67 * 3600 * 0.3 (utilization assumption) = 7.2e19 FLOP

They also say they trained for 286k steps in batches of 65,536 tokens.
6 * 247M * (286k * 65536) = 2.78e19

geometric mean: sqrt(7.2e19 * 2.78e19) = 4.47e19",WikiText-103,"The training data of WIKITEXT-103 comprises about 100M tokens""",100000000.0,"""The training data of WIKITEXT-103 comprises about 100M tokens""
Datasets are not combined but used to train separate models",,67.0,,NVIDIA V100,8.0,,"We introduce adaptive input representations for neural language modeling which extend the adaptive softmax of Grave et al. (2017) to input representations of variable capacity. There are several choices on how to factorize the input and output layers, and whether to model words, characters or sub-word units. We perform a systematic comparison of popular choices for a self-attentional architecture. Our experiments show that models equipped with adaptive embeddings are more than twice as fast to train than the popular character input CNN while having a lower number of parameters. On the WIKITEXT-103 benchmark we achieve 18.7 perplexity, an improvement of 10.5 perplexity compared to the previously best published result and on the BILLION WORD benchmark, we achieve 23.02 perplexity.",Transformer (Adaptive Input Embeddings),Open weights (unrestricted),,Confident,2025-02-17 17:37:37+00:00,United States of America,,,,,,,,,
LSTM+NeuralCache,Language,"KU Leuven,ESAT - PSI,Apple","Academia,Academia,Industry","Lyan Verwimp, Joris Pelemans, Hugo Van hamme, Patrick Wambacq",2018-09-24,Information-Weighted Neural Cache Language Models for ASR,https://arxiv.org/abs/1809.08826,3.0,SOTA improvement,"""We obtain a 29.9%/32.1% (validation/test set) relative improvement in perplexity with respect to a baseline LSTM LM on the WikiText-2 dataset, outperforming previous work on neural cache LMs"" 
... 

""we observe that neural cache models
consistently outperform regular cache models on this dataset.""",2100000.0,,1020000000000000.0,,,,,,,,39.0,,,,,,"Neural cache language models (LMs) extend the idea of regular cache language models by making the cache probability dependent on the similarity between the current context and the context of the words in the cache. We make an extensive comparison of 'regular' cache models with neural cache models, both in terms of perplexity and WER after rescoring first-pass ASR results. Furthermore, we propose two extensions to this neural cache model that make use of the content value/information weight of the word: firstly, combining the cache probability and LM probability with an information-weighted interpolation and secondly, selectively adding only content words to the cache. We obtain a 29.9%/32.1% (validation/test set) relative improvement in perplexity with respect to a baseline LSTM LM on the WikiText-2 dataset, outperforming previous work on neural cache LMs. Additionally, we observe significant WER reductions with respect to the baseline model on the WSJ ASR task.",LSTM+NeuralCache,Unreleased,,,2024-09-05 18:08:31+00:00,"Belgium,Belgium,United States of America",,,,,,,,,
"AWD-LSTM-MoS + dynamic evaluation (WT2, 2018)",Language,"Peking University,Microsoft Research Asia","Academia,Industry","Chengyue Gong, Di He, Xu Tan, Tao Qin, Liwei Wang, Tie-Yan Liu",2018-09-18,FRAGE: Frequency-Agnostic Word Representation,https://arxiv.org/abs/1809.06858,152.0,SOTA improvement,"""Specifically, in language modeling and machine translation, we achieve better performance than the state-of-the-art results on PTB, WT2
and WMT14 English-German datasets.""",35000000.0,,,,,,WikiText-2,,,,,,,,,,"Continuous word representation (aka word embedding) is a basic building block in many neural network-based models used in natural language processing tasks. Although it is widely accepted that words with similar semantics should be close to each other in the embedding space, we find that word embeddings learned in several tasks are biased towards word frequency: the embeddings of high-frequency and low-frequency words lie in different subregions of the embedding space, and the embedding of a rare word and a popular word can be far from each other even if they are semantically similar. This makes learned word embeddings ineffective, especially for rare words, and consequently limits the performance of these neural network models. In this paper, we develop a neat, simple yet effective way to learn \emph{FRequency-AGnostic word Embedding} (FRAGE) using adversarial training. We conducted comprehensive studies on ten datasets across four natural language processing tasks, including word similarity, language modeling, machine translation and text classification. Results show that with FRAGE, we achieve higher performance than the baselines in all tasks.","AWD-LSTM-MoS + dynamic evaluation (WT2, 2018)",Unreleased,,,2024-09-11 18:45:00+00:00,"China,China",,,,,,,,,
Transformer + Simple Recurrent Unit,Language,"ASAPP,Cornell University,Google,Princeton University","Industry,Academia,Industry,Academia","Tao Lei, Yu Zhang, Sida I. Wang, Hui Dai, Yoav Artzi",2018-09-17,Simple Recurrent Units for Highly Parallelizable Recurrence,https://arxiv.org/abs/1709.02755v5,293.0,SOTA improvement,"""We use the state-of-the-art Transformer
model of Vaswani et al. (2017) as our base architecture... When SRU is incorporated into the architecture,
both the 4-layer and 5-layer model outperform the
Transformer base model""",90000000.0,"5-layer model, Table 3",1.1e+19,,,"""We use a single NVIDIA Tesla V100 GPU for each model. The published results were obtained
using 8 GPUs in parallel, which provide a large effective batch size during training. To approximate
the setup, we update the model parameters every 5×5120 tokens and use 16,000 warm-up steps
following OpenNMT suggestions. We train each
model for 40 epochs (250,000 steps), and perform
3 independent trials for each model configuration.
A single run takes about 3.5 days with a Tesla V100 GPU.""

125 trillion * 3.5 * 24 * 3600 * 0.3 = 1.1e19",WMT English-German,"""We train translation models on the WMT English→German dataset, a standard
benchmark for translation systems (Peitz et al.,
2014; Li et al., 2014; Jean et al., 2015). The
dataset consists of 4.5 million sentence pairs""",,,40.0,,,NVIDIA V100,8.0,,"Common recurrent neural architectures scale poorly due to the intrinsic difficulty in parallelizing their state computations. In this work, we propose the Simple Recurrent Unit (SRU), a light recurrent unit that balances model capacity and scalability. SRU is designed to provide expressive recurrence, enable highly parallelized implementation, and comes with careful initialization to facilitate training of deep models. We demonstrate the effectiveness of SRU on multiple NLP tasks. SRU achieves 5--9x speed-up over cuDNN-optimized LSTM on classification and question answering datasets, and delivers stronger results than LSTM and convolutional models. We also obtain an average of 0.7 BLEU improvement over the Transformer model on translation by incorporating SRU into the architecture.",,Unreleased,,Confident,2025-02-17 19:40:52+00:00,"United States of America,United States of America,United States of America,United States of America",,,,,,,,,
ESRGAN,"Vision,Image generation","Chinese University of Hong Kong (CUHK),Chinese Academy of Sciences,Nanyang Technological University","Academia,Academia,Academia","Xintao Wang, Ke Yu, Shixiang Wu, Jinjin Gu, Yihao Liu, Chao Dong, Chen Change Loy, Yu Qiao, Xiaoou Tang",2018-09-01,ESRGAN: Enhanced Super-Resolution Generative Adversarial Networks,https://arxiv.org/abs/1809.00219,3266.0,Highly cited,,,,,,,,"DIV2K,Flickr2K,OutdoorSceneTraining (OST)",,,,,,,,,,"The Super-Resolution Generative Adversarial Network (SRGAN) is a seminal work that is capable of generating realistic textures during single image super-resolution. However, the hallucinated details are often accompanied with unpleasant artifacts. To further enhance the visual quality, we thoroughly study three key components of SRGAN - network architecture, adversarial loss and perceptual loss, and improve each of them to derive an Enhanced SRGAN (ESRGAN). In particular, we introduce the Residual-in-Residual Dense Block (RRDB) without batch normalization as the basic network building unit. Moreover, we borrow the idea from relativistic GAN to let the discriminator predict relative realness instead of the absolute value. Finally, we improve the perceptual loss by using the features before activation, which could provide stronger supervision for brightness consistency and texture recovery. Benefiting from these improvements, the proposed ESRGAN achieves consistently better visual quality with more realistic and natural textures than SRGAN and won the first place in the PIRM2018-SR Challenge. The code is available at this https URL .",,,,Unknown,2025-02-04 00:52:46+00:00,"Hong Kong,China,China,Singapore",,,,,,,,,
(ensemble): AWD-LSTM-DOC (fin) × 5 (WT2),Language,"NTT Communication Science Laboratories,Tohoku University","Industry,Academia","Sho Takase, Jun Suzuki, Masaaki Nagata",2018-08-30,Direct Output Connection for a High-Rank Language Model,https://arxiv.org/abs/1808.10143,36.0,SOTA improvement,"""The proposed method improves the current state-of-the-art language model and achieves the best score on the Penn Treebank and WikiText-2, which are the standard benchmark datasets""",185000000.0,,6.93e+17,,,,WikiText-2,,,,300.0,,,,,,"This paper proposes a state-of-the-art recurrent neural network (RNN) language model that combines probability distributions computed not only from a final RNN layer but also from middle layers. Our proposed method raises the expressive power of a language model based on the matrix factorization interpretation of language modeling introduced by Yang et al. (2018). The proposed method improves the current state-of-the-art language model and achieves the best score on the Penn Treebank and WikiText-2, which are the standard benchmark datasets. Moreover, we indicate our proposed method contributes to two application tasks: machine translation and headline generation. Our code is publicly available at: this https URL.",(ensemble): AWD-LSTM-DOC (fin) × 5 (WT2),Open weights (unrestricted),,,2024-09-10 21:20:08+00:00,"Japan,Japan",,,,,,,,,
Big Transformer for Back-Translation,Language,"Facebook AI Research,Google Brain","Industry,Industry","Sergey Edunov, Myle Ott, Michael Auli, David Grangier",2018-08-28,Understanding Back-Translation at Scale,https://arxiv.org/abs/1808.09381,1155.0,"Highly cited,SOTA improvement","""Finally, we scale to hundreds of millions of monolingual sentences and achieve a new state of the art of 35 BLEU on the WMT'14 English-German test set. """,,"""We re-implemented the Transformer model in py-
torch using the fairseq toolkit.1 All experiments
are based on the Big Transformer architecture with
6 blocks in the encoder and decoder. We use the
same hyper-parameters for all experiments, i.e.,
word representations of size 1024, feed-forward
layers with inner dimension 4096. ""

I am not sure what authors mean by 'Big Transformer architecture'",4.7808e+20,,,"(128) * (1.25e14) * (27*3600 + 40*60) * (0.3)  = 4.7808e20
(number of gpus) * (peak flops) * (seconds) * (assumed utilization rate)  

""We run experiments on DGX-1 machines with 8Nvidia V100 GPUs and machines are interconnected by Infiniband. Experiments are run on 16
machines and we perform 30K synchronous updates.""
""We also use the NCCL2 library [...] with 16-bit floating point
operations""

NCCL2 supported tensor core operations at 1.25e14 FLOP/s on a V100 for FP16 

in section 5.6 we have

""train this system we perform 300K training up-
dates in 27h 40min on 128 GPUs;""",WMT English-German,"""Finally, for WMT English-German we train
on all 226M available monolingual training sen-
tences and perform 250K updates in 22.5 hours on 128 GPUs. """,3390000000.0,"""Finally, for WMT English-German we train on all 226M available monolingual training sentences and perform 250K updates in 22.5 hours on 128 GPUs.""

We assume that 1 sentence have 15 words",,27.666,"""training updates in 27h 40min on 128 GPUs""",NVIDIA Tesla V100 DGXS 16 GB,128.0,Supervised,"An effective method to improve neural machine translation with monolingual data is to augment the parallel training corpus with back-translations of target language sentences. This work broadens the understanding of back-translation and investigates a number of methods to generate synthetic source sentences. We find that in all but resource poor settings back-translations obtained via sampling or noised beam outputs are most effective. Our analysis shows that sampling or noisy synthetic data gives a much stronger training signal than data generated by beam or greedy search. We also compare how synthetic data compares to genuine bitext and study various domain effects. Finally, we scale to hundreds of millions of monolingual sentences and achieve a new state of the art of 35 BLEU on the WMT'14 English-German test set. ",,Open weights (unrestricted),,Likely,2025-02-17 17:38:31+00:00,"United States of America,United States of America",,,,,,,,,
AWD-LSTM-MoS+PDR + dynamic evaluation (WT2),Language,IBM,Industry,Siddhartha Brahma,2018-08-14,Improved Language Modeling by Decoding the Past,https://arxiv.org/abs/1808.05908,6.0,SOTA improvement,"""our Past Decode Regularization (PDR) method achieves a word level perplexity of 55.6 on the Penn Treebank and 63.5 on the WikiText-2 datasets using a single softmax. We also show gains by using PDR in combination with a mixture-of-softmaxes, achieving a word level perplexity of 53.8 and 60.5 on these datasets. In addition, our method achieves 1.169 bits-per-character on the Penn Treebank Character dataset for character level language modeling. These results constitute a new state-of-the-art in their respective settings.""",35000000.0,,,,,,WikiText-2,,,,,,,,,,"Highly regularized LSTMs achieve impressive results on several benchmark datasets in language modeling. We propose a new regularization method based on decoding the last token in the context using the predicted distribution of the next token. This biases the model towards retaining more contextual information, in turn improving its ability to predict the next token. With negligible overhead in the number of parameters and training time, our Past Decode Regularization (PDR) method achieves a word level perplexity of 55.6 on the Penn Treebank and 63.5 on the WikiText-2 datasets using a single softmax. We also show gains by using PDR in combination with a mixture-of-softmaxes, achieving a word level perplexity of 53.8 and 60.5 on these datasets. In addition, our method achieves 1.169 bits-per-character on the Penn Treebank Character dataset for character level language modeling. These results constitute a new state-of-the-art in their respective settings.",AWD-LSTM-MoS+PDR + dynamic evaluation (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
RGC+ASQ (WT2),Language,"Tsinghua University,University of California Los Angeles (UCLA)","Academia,Academia","Jiarui Fang, Haohuan Fu, Guangwen Yang, Cho-Jui Hsieh",2018-08-13,RedSync : Reducing Synchronization Traffic for Distributed Deep Learning,https://arxiv.org/abs/1808.04357,28.0,,,209000000.0,,,,,,,,,,,,,,,,"Data parallelism has become a dominant method to scale Deep Neural Network (DNN) training across multiple nodes. Since synchronizing a large number of gradients of the local model can be a bottleneck for large-scale distributed training, compressing communication data has gained widespread attention recently. Among several recent proposed compression algorithms, Residual Gradient Compression (RGC) is one of the most successful approaches---it can significantly compress the transmitting message size (0.1\% of the gradient size) of each node and still achieve correct accuracy and the same convergence speed. However, the literature on compressing deep networks focuses almost exclusively on achieving good theoretical compression rate, while the efficiency of RGC in real distributed implementation has been less investigated. In this paper, we develop an RGC-based system that is able to reduce the end-to-end training time on real-world multi-GPU systems. Our proposed design called RedSync, which introduces a set of optimizations to reduce communication bandwidth requirement while introducing limited overhead. We evaluate the performance of RedSync on two different multiple GPU platforms, including 128 GPUs of a supercomputer and an 8-GPU server. Our test cases include image classification tasks on Cifar10 and ImageNet, and language modeling tasks on Penn Treebank and Wiki2 datasets. For DNNs featured with high communication to computation ratio, which have long been considered with poor scalability, RedSync brings significant performance improvements.",RGC+ASQ (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,"China,United States of America",,,,,,,,,
Big-Little Net,Vision,IBM,Industry,"Chun-Fu Chen, Quanfu Fan, Neil Mallinar, Tom Sercu, and Rogerio Feris",2018-07-10,Big-Little Net: An Efficient Multi-Scale Feature Representation for Visual and Speech Recognition,https://arxiv.org/abs/1807.03848,92.0,SOTA improvement,"""On object recognition task, we demonstrated that our approach provides approximately 2× speedup over baselines while
improving accuracy, and the result significantly outperforms the state-of-the-art networks by a large margin in terms of accuracy and FLOPs reduction""",77360000.0,Table 2,2.46048e+17,,,"Using the 6ND formula: 
6×number of tokens×number of parameters×number of epochs
6×1.28×10^6×77360000×110=6.5353728e+16 FLOPs

9.32*10^9 (flops per inference)*1.28×10^6(dataset size)/16 (batch size) * 110 epochs * 3 (to account for backpropagation)= 2.46048e+17 FLOPs",ImageNet,,1280000.0,,110.0,,,NVIDIA Tesla K80,,,"In this paper, we propose a novel Convolutional Neural Network (CNN) architecture for learning multi-scale feature representations with good tradeoffs between speed and accuracy. This is achieved by using a multi-branch network, which has different computational complexity at different branches. Through frequent merging of features from branches at distinct scales, our model obtains multi-scale features while using less computation. The proposed approach demonstrates improvement of model efficiency and performance on both object recognition and speech recognition tasks,using popular architectures including ResNet and ResNeXt. For object recognition, our approach reduces computation by 33% on object recognition while improving accuracy with 0.9%. Furthermore, our model surpasses state-of-the-art CNN acceleration approaches by a large margin in accuracy and FLOPs reduction. On the task of speech recognition, our proposed multi-scale CNNs save 30% FLOPs with slightly better word error rates, showing good generalization across domains.",,Open weights (unrestricted),,Likely,2025-02-04 18:04:41+00:00,United States of America,,,,,,,256.0,"""All the models were trained with 110 epochs, batch size 256""",
Big-Little Net (vision),Vision,IBM,Industry,"Chun-Fu (Richard) Chen, Quanfu Fan, Neil Mallinar, Tom Sercu, Rogerio Feris",2018-07-10,BIG-LITTLE NET: AN EFFICIENT MULTI-SCALE FEATURE REPRESENTATION FOR VISUAL AND SPEECH RECOGNITION,https://arxiv.org/abs/1807.03848,97.0,,,77360000.0,Table 2 - fifth row,6.2988288e+19,,,"number of epochs (appendix A1) times flops per inference (from table 2) times dataset size times 3 (to account for backpropagation)
110 * 9.32e9 FLOPs * 256/16 * 1280000 * 3 = 6.3e19",ImageNet,section 4.1,1280000.0,size of ImageNet,110.0,,,,,,"In this paper, we propose a novel Convolutional Neural Network (CNN) architecture for learning multi-scale feature representations with good tradeoffs between speed and accuracy. This is achieved by using a multi-branch network, which has different computational complexity at different branches. Through frequent merging of features from branches at distinct scales, our model obtains multi-scale features while using less computation. The proposed approach demonstrates improvement of model efficiency and performance on both object recognition and speech recognition tasks,using popular architectures including ResNet and ResNeXt. For object recognition, our approach reduces computation by 33% on object recognition while improving accuracy with 0.9%. Furthermore, our model surpasses state-of-the-art CNN acceleration approaches by a large margin in accuracy and FLOPs reduction. On the task of speech recognition, our proposed multi-scale CNNs save 30% FLOPs with slightly better word error rates, showing good generalization across domains. The codes are available at https://github.com/IBM/BigLittleNet.",,Open weights (unrestricted),,Confident,2025-03-06 20:00:18+00:00,United States of America,,,,,,,,,
Big-Little Net (speech),Speech,IBM,Industry,"Chun-Fu (Richard) Chen, Quanfu Fan, Neil Mallinar, Tom Sercu, Rogerio Feris",2018-07-10,Big-Little Net: An Efficient Multi-Scale Feature Representation for Visual and Speech Recognition,https://arxiv.org/abs/1807.03848,92.0,SOTA improvement,"""Furthermore, our model surpasses state-of-the-art CNN acceleration approaches by a large margin in accuracy and FLOPs reduction. On the task of speech recognition, our proposed multi-scale CNNs save 30% FLOPs with slightly better word error rates, showing good generalization across domains.""",3320000.0,table 3,4.290048e+17,,,980000000 (number of FLOPs from table 3) * 27360000 (dataset size) * 16 (number of epochs from appendix B.1) = 429004800000000000,"Switchboard,Fisher","""We train ResNet style acoustic models in the hybrid framework on Switchboard+Fisher (2000h) and provide results on Hub5 (Switchboard and Call Home portions). Switchboard is a large dataset with 2000 hours of transcribed speech from 28, 000 speakers""",27360000.0,"""We train ResNet style acoustic models in the hybrid framework on Switchboard+Fisher (2000h) and provide results on Hub5 (Switchboard and Call Home portions). Switchboard is a large dataset with 2000 hours of transcribed speech from 28, 000 speakers""

2000h * 13680 words per hour = 27360000

https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit#heading=h.3pbt0hfgv7pq",16.0,,,,,,"In this paper, we propose a novel Convolutional Neural Network (CNN) architecture for learning multi-scale feature representations with good tradeoffs between speed and accuracy. This is achieved by using a multi-branch network, which has different computational complexity at different branches. Through frequent merging of features from branches at distinct scales, our model obtains multi-scale features while using less computation. The proposed approach demonstrates improvement of model efficiency and performance on both object recognition and speech recognition tasks,using popular architectures including ResNet and ResNeXt. For object recognition, our approach reduces computation by 33% on object recognition while improving accuracy with 0.9%. Furthermore, our model surpasses state-of-the-art CNN acceleration approaches by a large margin in accuracy and FLOPs reduction. On the task of speech recognition, our proposed multi-scale CNNs save 30% FLOPs with slightly better word error rates, showing good generalization across domains. The codes are available at https://github.com/IBM/BigLittleNet.",,Open weights (unrestricted),,Speculative,2025-03-06 20:00:13+00:00,United States of America,,,,,,,,,
RCAN,"Image generation,Vision",Northeastern University,Academia," Yulun Zhang, Kunpeng Li, Kai Li, Lichen Wang, Bineng Zhong, Yun Fu",2018-07-08,Image Super-Resolution Using Very Deep Residual Channel Attention Networks,https://openaccess.thecvf.com/content_ECCV_2018/html/Yulun_Zhang_Image_Super-Resolution_Using_ECCV_2018_paper.html,3889.0,Highly cited,,16000000.0,"""EDSR has much larger number of parameters (43 M) than ours
(16 M), but our RCAN obtains much better performance.""",,,,,DIV2K,,,,,,,,,,"Convolutional neural network (CNN) depth is of crucial importance for image super-resolution (SR). However, we observe that deeper networks for image SR are more difficult to train. The low-resolution (LR) inputs and features contain abundant low-frequency information, which is treated equally across channels, hence hindering the representational ability of CNNs. To solve these problems, we propose the very deep residual channel attention networks (RCAN). Specifically, we propose residual in residual (RIR) structure to form very deep network, which consists of several residual groups with long skip connections. Each residual group contains some residual blocks with short skip connections. Meanwhile, RIR allows abundant low-frequency information to be bypassed through multiple skip connections, making the main network focus on learning high-frequency information. Furthermore, we propose channel attention mechanism to adaptively rescale channel-wise features by considering interdependencies among channels. Extensive experiments show that our RCAN achieves better accuracy and visual improvements against state-of-the-art methods.",,,,Unknown,2025-02-04 01:07:06+00:00,United States of America,,,,,,,,,
FTW,Games,DeepMind,Industry,"Max Jaderberg, Wojciech M. Czarnecki, Iain Dunning, Luke Marris, Guy Lever, Antonio Garcia Castaneda, Charles Beattie, Neil C. Rabinowitz, Ari S. Morcos, Avraham Ruderman, Nicolas Sonnerat, Tim Green, Louise Deason, Joel Z. Leibo, David Silver, Demis Hassabis, Koray Kavukcuoglu, Thore Graepel",2018-07-03,Human-level performance in first-person multiplayer games with population-based deep reinforcement learning,https://arxiv.org/abs/1807.01281,680.0,SOTA improvement,"""In this work, we demonstrate for the first time that an agent can achieve human-level in a popular 3D multiplayer first-person video game, Quake III Arena Capture the Flag (28), using only pixels and game points as input.""",126001330.0,"Architecture described in figure S11 of the supplement

The architecture includes modules for visual embedding, reward prediction, recurrent processing, policy, baseline and pixel control.

Input is 84x84x3 pixels as seen in figure S10 of the supplement

""We elected to use a resolution of 84x84 pixels as in previous related work in this environment. Each pixel is represented by a triple of three bytes""

Visual embedding (84x84x3 -> 256)
32*(8*8*3+1)+64*(4*4*32+1)+64*(3*3*64+1)+64*(3*3*64+1) + (84/(S^4)*84/(S^4)*64+1)*256
Note there is no information about the stride S used in the convolutions; we assume S = 1

Reward prediction (256 -> 3)
(256+1)*128 + (128+1)*3

Recurrent processing (n-> 512)
VU1 (256 -> 512)
4*(799+2*32)*((512+(32*2) + 3*32 + 5*2 + 3)+(799+2*32)+1) + 2*(256+1)*256

VU2 (512 -> 512)
4*(512+2*32)*((512+(32*2) + 3*32 + 5*2 + 3)+(512+2*32)+1) + 2*(256+1)*256

LSTMs usually have 4*(n*m+n*n+n) parameters, where n=input size and m=output size.

This DNS + LSTM takes as input the concatenation of the previous layer of size n and R read vectors of size W=32; and outputs m units plus an interface vector of size (W*R) + 3*W + 5*R + 3, for a total of about 4*(n+R*W)*((m+(W*R) + 3*W + 5*R + 3)+(n+R*32)+1) parameters

I assume R=2 since that seems implied by the previous paper (?)

The first VU has as input the visual embedding (size 256), the previous action (size 540) and the previous reward (size 3), for a total size of 256+540+3 = 799. The output is size 512.

The second VU has input size 512 and output size 512

The DNC memory architecture is described in https://www.nature.com/articles/nature20101.epdf

Policy (512 -> 5x3x3x3x2x2)
6*(512+1)*256 + (256+1)*5 + 3*(256+1)*3 + 2*(256+1)*2

Baseline
(512+1)*256 + (256+1)*1

Pixel control
(512+1)*32*7*7 + 32*(9*9+1) + 5*(4*4+1) + 3*2*(4*4+1) + 2*2*(4*4+1) + 1*(4*4+1)
""we trained independent pixel control policies for each of the six action groups""",7.869493248e+18,,,"Image S10
They are most likely using padding to keep the image size identical, otherwise the skip connections wouldn’t work
1st CNN layer: 2*84*84*8*8*3*32=86704128
2nd CNN layer: 2*84*84*4*4*32*64=462422016
3rd CNN layer: 2*84*84*3*3*64*64=520224768
1st FC layer: 2*84*84*64*256=231211008
LSTM layer: 4*2*(256+256)*256=1048576
1st DCNN layer: 2*32*7*7*9*9*32=8128512
2nd DCNN layers: 2*32*15*15*4*4*8=1843200
Total forward FLOP: 86704128+462422016+520224768+231211008+1048576+8128512+1843200=1311582208
Agents were trained for two billion steps, corresponding to approximately 450K games.
Total training compute: 1311582208*3*2000000000=7869493248000000000=7.9e18
",,,,,,,,,,Self-supervised learning,,,Unreleased,,Unverified,2025-02-17 17:39:10+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Population-based DRL,Games,DeepMind,Industry,"Max Jaderberg, Wojciech M. Czarnecki, Iain Dunning, Luke Marris, Guy Lever, Antonio Garcia Castaneda, Charles Beattie, Neil C. Rabinowitz, Ari S. Morcos, Avraham Ruderman, Nicolas Sonnerat, Tim Green, Louise Deason, Joel Z. Leibo, David Silver, Demis Hassabis, Koray Kavukcuoglu, Thore Graepel",2018-07-03,Human-level performance in first-person multiplayer games with population-based deep reinforcement learning,https://arxiv.org/abs/1807.01281,680.0,SOTA improvement,"Qualitatively clearly SOTA: ""In this work, we demonstrate for the first time that an agent can achieve human-level in a popular 3D multiplayer first-person video game, Quake III Arena Capture the Flag (28), using only pixels and game points as input... proved far stronger than existing state-of-the-art agents""",122000000.0,"Calculated from the architecture schematic in Figure S11 on pg 55 of the Capture the Flag supplementary materials. This is dominated by the size of the vision module, which is 116 million parameters, followed by the temporal processors which is 4.3 million parameters. The RL policy itself is only 0.79 million parameters. Also, I'm pretty uncertain if I'm right about how I calculated these parameters.

Source: 
https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",3.49e+19,,,"Source: 
https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",,,,,,,,,,Self-supervised learning,"Recent progress in artificial intelligence through reinforcement learning (RL) has shown great success on increasingly complex single-agent environments and two-player turn-based games. However, the real-world contains multiple agents, each learning and acting independently to cooperate and compete with other agents, and environments reflecting this degree of complexity remain an open challenge. In this work, we demonstrate for the first time that an agent can achieve human-level in a popular 3D multiplayer first-person video game, Quake III Arena Capture the Flag, using only pixels and game points as input. These results were achieved by a novel two-tier optimisation process in which a population of independent RL agents are trained concurrently from thousands of parallel matches with agents playing in teams together and against each other on randomly generated environments. Each agent in the population learns its own internal reward signal to complement the sparse delayed reward from winning, and selects actions using a novel temporally hierarchical representation that enables the agent to reason at multiple timescales. During game-play, these agents display human-like behaviours such as navigating, following, and defending based on a rich learned representation that is shown to encode high-level game knowledge. In an extensive tournament-style evaluation the trained agents exceeded the win-rate of strong human players both as teammates and opponents, and proved far stronger than existing state-of-the-art agents. These results demonstrate a significant jump in the capabilities of artificial agents, bringing us closer to the goal of human-level intelligence.",,Unreleased,,,2025-02-17 19:38:24+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
ShuffleNet v2,Vision,"Tsinghua University,Megvii Inc","Academia,Industry","Ningning Ma, Xiangyu Zhang, Hai-Tao Zheng, Jian Sun",2018-06-30,ShuffleNet V2: Practical Guidelines for Efficient CNN Architecture Design,https://arxiv.org/abs/1807.11164,4380.0,Highly cited,,2280000.0,,,,,,,,,,,,,,,,"Currently, the neural network architecture design is mostly guided by the \emph{indirect} metric of computation complexity, i.e., FLOPs. However, the \emph{direct} metric, e.g., speed, also depends on the other factors such as memory access cost and platform characterics. Thus, this work proposes to evaluate the direct metric on the target platform, beyond only considering FLOPs. Based on a series of controlled experiments, this work derives several practical \emph{guidelines} for efficient network design. Accordingly, a new architecture is presented, called \emph{ShuffleNet V2}. Comprehensive ablation experiments verify that our model is the state-of-the-art in terms of speed and accuracy tradeoff.",,,,,2024-11-01 14:02:49+00:00,"China,China",,,,,,,,,
QT-Opt,"Robotics,Vision","Google Brain,University of California (UC) Berkeley","Industry,Academia","Dmitry Kalashnikov, Alex Irpan, Peter Pastor, Julian Ibarz, Alexander Herzog, Eric Jang, Deirdre Quillen, Ethan Holly, Mrinal Kalakrishnan, Vincent Vanhoucke, Sergey Levine",2018-06-27,QT-Opt: Scalable Deep Reinforcement Learning for Vision-Based Robotic Manipulation,https://arxiv.org/abs/1806.10293,1442.0,Highly cited,,1200000.0,"""The Q-function Qθ(s, a) is represented in our system by a large convolutional neural network with 1.2M parameters""",3.4875e+19,,,"""We distribute training across 10 GPUs, using asynchronous SGD with momentum... This system allows us to train the Q-function at 40 steps per second with a batch size of 32 across 10 NVIDIA P100 GPUs.""

""We found empirically that a large number of gradient steps (up to 15M) were needed to train an effective Q-function...""

15M steps * 0.025 seconds/step *  9.30E+12 FLOP/sec/GPU * 10 GPU = 3.4875E+19",,"""... we collected over 580k grasps over the course of several weeks across 7 robots""
",5984870.0,"Observations take up 4TB of disk space, and the input space is a 472x472 RGB image.

Assuming 24 bit depth color (8 bits per channel), that suggests 472 * 472 * 3 * 8 bits = 668.352 kB per image (this could be off by a factor of 2 depending on actual bit depth)

4 TB / 668.352 kB = 5,984,870 images; around 10 per grasp attempt.

15M gradient steps with batchsize 32 implies:
15M steps * 32 images/step * 1/5984870 images ~= each image seen 80 times",80.0,104.2,"""We distribute training across 10 GPUs, using asynchronous SGD with momentum... This system allows us to train the Q-function at 40 steps per second with a batch size of 32 across 10 NVIDIA P100 GPUs.""

""We found empirically that a large number of gradient steps (up to 15M) were needed to train an effective Q-function...""

15M steps * 0.025 seconds/step *  1/3600 hours/second = 104.2 hours",NVIDIA P100,,Reinforcement learning,"In this paper, we study the problem of learning vision-based dynamic manipulation skills using a scalable reinforcement learning approach. We study this problem in the context of grasping, a longstanding challenge in robotic manipulation. In contrast to static learning behaviors that choose a grasp point and then execute the desired grasp, our method enables closed-loop vision-based control, whereby the robot continuously updates its grasp strategy based on the most recent observations to optimize long-horizon grasp success. To that end, we introduce QT-Opt, a scalable self-supervised vision-based reinforcement learning framework that can leverage over 580k real-world grasp attempts to train a deep neural network Q-function with over 1.2M parameters to perform closed-loop, real-world grasping that generalizes to 96% grasp success on unseen objects. Aside from attaining a very high success rate, our method exhibits behaviors that are quite distinct from more standard grasping systems: using only RGB vision-based perception from an over-the-shoulder camera, our method automatically learns regrasping strategies, probes objects to find the most effective grasps, learns to reposition objects and perform other non-prehensile pre-grasp manipulations, and responds dynamically to disturbances and perturbations.",,Unreleased,,Likely,2025-02-17 17:39:24+00:00,"United States of America,United States of America",,,,,,,,,
S + I-Attention (3),Language,"National Research University Higher School of Economics,Samsung R&D Institute Russia","Academia,Industry","Artyom Gadetsky, Ilya Yakubovskiy, Dmitry Vetrov",2018-06-26,Conditional Generators of Words Definitions,https://arxiv.org/abs/1806.10090,63.0,,,,,,,,,Oxford Dictionary,,,,35.0,,,,,,"We explore recently introduced definition modeling technique that provided the tool for evaluation of different distributed vector representations of words through modeling dictionary definitions of words. In this work, we study the problem of word ambiguities in definition modeling and propose a possible solution by employing latent variable modeling and soft attention mechanisms. Our quantitative and qualitative evaluation and analysis of the model shows that taking into account words ambiguity and polysemy leads to performance improvement.",S + I-Attention (3),Unreleased,,Unknown,2024-11-01 14:02:50+00:00,"Russia,Russia",,,,,,,,,
DARTS,Language,"DeepMind,Carnegie Mellon University (CMU)","Industry,Academia","Hanxiao Liu, Karen Simonyan, Yiming Yang",2018-06-24,DARTS: Differentiable Architecture Search,https://arxiv.org/abs/1806.09055,4045.0,Highly cited,,33000000.0,,1.1e+16,,,,WikiText-2,,,,300.0,,,,,,"This paper addresses the scalability challenge of architecture search by formulating the task in a differentiable manner. Unlike conventional approaches of applying evolution or reinforcement learning over a discrete and non-differentiable search space, our method is based on the continuous relaxation of the architecture representation, allowing efficient search of the architecture using gradient descent. Extensive experiments on CIFAR-10, ImageNet, Penn Treebank and WikiText-2 show that our algorithm excels in discovering high-performance convolutional architectures for image classification and recurrent architectures for language modeling, while being orders of magnitude faster than state-of-the-art non-differentiable techniques. Our implementation has been made publicly available to facilitate further research on efficient architecture search algorithms.",DARTS,Unreleased,,,2024-11-01 14:02:49+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
MobileNetV2,Vision,Google,Industry,"M Sandler, A Howard, M Zhu",2018-06-18,MobileNetV2: Inverted Residuals and Linear Bottlenecks,https://ieeexplore.ieee.org/document/8578572,16899.0,Highly cited,,3400000.0,Rados,,,,,,,,,,,,,,,"In this paper we describe a new mobile architecture, MobileNetV2, that improves the state of the art performance of mobile models on multiple tasks and benchmarks as well as across a spectrum of different model sizes. We also describe efficient ways of applying these mobile models to object detection in a novel framework we call SSDLite. Additionally, we demonstrate how to build mobile semantic segmentation models through a reduced form of DeepLabv3 which we call Mobile DeepLabv3. is based on an inverted residual structure where the shortcut connections are between the thin bottleneck layers. The intermediate expansion layer uses lightweight depthwise convolutions to filter features as a source of non-linearity. Additionally, we find that it is important to remove non-linearities in the narrow layers in order to maintain representational power. We demonstrate that this improves performance and provide an intuition that led to this design. Finally, our approach allows decoupling of the input/output domains from the expressiveness of the transformation, which provides a convenient framework for further analysis. We measure our performance on ImageNet [1] classification, COCO object detection [2], VOC image segmentation [3]. We evaluate the trade-offs between accuracy, and number of operations measured by multiply-adds (MAdd), as well as actual latency, and the number of parameters.",,,,,2025-02-04 01:12:18+00:00,United States of America,,,,,,,,,
Relational Memory Core,Language,"DeepMind,University College London (UCL)","Industry,Academia","Adam Santoro, Ryan Faulkner, David Raposo, Jack Rae, Mike Chrzanowski, Theophane Weber, Daan Wierstra, Oriol Vinyals, Razvan Pascanu, Timothy Lillicrap",2018-06-05,Relational recurrent neural networks,https://arxiv.org/abs/1806.01822,235.0,SOTA improvement,"""Finally, we test the RMC on a suite of tasks that may profit from more capable relational reasoning across sequential information, and show large gains in RL domains (e.g. Mini PacMan), program evaluation, and language modeling, achieving state-of-the-art results on the WikiText-103, Project Gutenberg, and GigaWord datasets.""",,,,,,,WikiText-103,,,,,,,,,,"Memory-based neural networks model temporal data by leveraging an ability to remember information for long periods. It is unclear, however, whether they also have an ability to perform complex relational reasoning with the information they remember. Here, we first confirm our intuitions that standard memory architectures may struggle at tasks that heavily involve an understanding of the ways in which entities are connected -- i.e., tasks involving relational reasoning. We then improve upon these deficits by using a new memory module -- a \textit{Relational Memory Core} (RMC) -- which employs multi-head dot product attention to allow memories to interact. Finally, we test the RMC on a suite of tasks that may profit from more capable relational reasoning across sequential information, and show large gains in RL domains (e.g. Mini PacMan), program evaluation, and language modeling, achieving state-of-the-art results on the WikiText-103, Project Gutenberg, and GigaWord datasets.",Relational Memory Core,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
GPT-1,Language,OpenAI,Industry,"A Radford, K Narasimhan, T Salimans, I Sutskever",2018-06-01,Improving Language Understanding by Generative Pre-Training,https://openai.com/blog/language-unsupervised/,10079.0,Highly cited,,117000000.0,"""The model had 117M parameters in total.""

source: https://medium.com/walmartglobaltech/the-journey-of-open-ai-gpt-models-32d95b7b7fb2",1.7578125e+19,,,"COMPUTE = FORWARD COMPUTE PER TOKEN * 3 BACKWARD FORWARD ADJUSTMENT * EPOCHS * DATASET SIZE

""We train for 100 epochs on minibatches of 64 randomly sampled, contiguous sequences of 512 tokens.""
","BookCorpus (BooksCorpus, Toronto Book Corpus)","""We use the BooksCorpus dataset [71] for training the language model""",1000000000.0,"""BookCorpus is a large collection of free novel books written by unpublished authors, which contains 11,038 books (around 74M sentences and 1G words) of 16 different sub-genres (e.g., Romance, Historical, Adventure, etc.).""
https://paperswithcode.com/dataset/bookcorpus

BookCorpus seems to have about 5000MB of content
source: https://huggingface.co/datasets/bookcorpusopen

Assuming a byte-pair encoder similar to GPT-2, there are 8 bytes / token.

So approximately 5000MB / 8 bytes / token = 5e9 / 8 tokens",,720.0,"""1 month on 8 GPUs."" from the reference link",NVIDIA Quadro P600,8.0,Self-supervised learning,"Natural language understanding comprises a wide range of diverse tasks such as textual entailment, question answering, semantic similarity assessment, and document classification. Although large unlabeled text corpora are abundant, labeled data for learning these specific tasks is scarce, making it challenging for discriminatively trained models to perform adequately. We demonstrate that large gains on these tasks can be realized by generative pre-training of a language model on a diverse corpus of unlabeled text, followed by discriminative fine-tuning on each specific task. In contrast to previous approaches, we make use of task-aware input transformations during fine-tuning to achieve effective transfer while requiring minimal changes to the model architecture. We demonstrate the effectiveness of our approach on a wide range of benchmarks for natural language understanding. Our general task-agnostic model outperforms discriminatively trained models that use architectures specifically crafted for each task, significantly improving upon the state of the art in 9 out of the 12 tasks studied. For instance, we achieve absolute improvements of 8.9% on commonsense reasoning (Stories Cloze Test), 5.7% on question answering (RACE), and 1.5% on textual entailment (MultiNLI).",,Open weights (unrestricted),,,2025-02-17 17:39:33+00:00,United States of America,,,,,,,,,
2-layer skip-LSTM + dropout tuning (WT2),Language,DeepMind,Industry,"Gábor Melis, Charles Blundell, Tomáš Kočiský, Karl Moritz Hermann, Chris Dyer, Phil Blunsom",2018-05-23,Pushing the bounds of dropout,https://arxiv.org/abs/1805.09208,14.0,,,5400000.0,,,,,,WikiText-2,,,,,,,,,,"We show that dropout training is best understood as performing MAP estimation concurrently for a family of conditional models whose objectives are themselves lower bounded by the original dropout objective. This discovery allows us to pick any model from this family after training, which leads to a substantial improvement on regularisation-heavy language modelling. The family includes models that compute a power mean over the sampled dropout masks, and their less stochastic subvariants with tighter and higher lower bounds than the fully stochastic dropout objective. We argue that since the deterministic subvariant's bound is equal to its objective, and the highest amongst these models, the predominant view of it as a good approximation to MC averaging is misleading. Rather, deterministic dropout is the best available approximation to the true objective.",2-layer skip-LSTM + dropout tuning (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
RHN+HSG(depth=40),Language,Ben-Gurion University,Academia,"Ron Shoham, Haim Permuter",2018-05-23,Highway State Gating for Recurrent Highway Networks: improving information flow through time,https://arxiv.org/abs/1805.09238,0.0,,,,,,,,,,,,,300.0,,,,,,"Recurrent Neural Networks (RNNs) play a major role in the field of sequential learning, and have outperformed traditional algorithms on many benchmarks. Training deep RNNs still remains a challenge, and most of the state-of-the-art models are structured with a transition depth of 2-4 layers. Recurrent Highway Networks (RHNs) were introduced in order to tackle this issue. These have achieved state-of-the-art performance on a few benchmarks using a depth of 10 layers. However, the performance of this architecture suffers from a bottleneck, and ceases to improve when an attempt is made to add more layers. In this work, we analyze the causes for this, and postulate that the main source is the way that the information flows through time. We introduce a novel and simple variation for the RHN cell, called Highway State Gating (HSG), which allows adding more layers, while continuing to improve performance. By using a gating mechanism for the state, we allow the net to ""choose"" whether to pass information directly through time, or to gate it. This mechanism also allows the gradient to back-propagate directly through time and, therefore, results in a slightly faster convergence. We use the Penn Treebank (PTB) dataset as a platform for empirical proof of concept. Empirical results show that the improvement due to Highway State Gating is for all depths, and as the depth increases, the improvement also increases.",RHN+HSG(depth=40),Unreleased,,Unknown,2024-09-05 18:08:31+00:00,Israel,,,,,,,,,
RHN(depth=40),Language,Ben-Gurion University,Academia,"Ron Shoham, Haim Permuter",2018-05-23,Highway State Gating for Recurrent Highway Networks: improving information flow through time,https://arxiv.org/abs/1805.09238,0.0,,,,,,,,,,,,,300.0,,,,,,"Recurrent Neural Networks (RNNs) play a major role in the field of sequential learning, and have outperformed traditional algorithms on many benchmarks. Training deep RNNs still remains a challenge, and most of the state-of-the-art models are structured with a transition depth of 2-4 layers. Recurrent Highway Networks (RHNs) were introduced in order to tackle this issue. These have achieved state-of-the-art performance on a few benchmarks using a depth of 10 layers. However, the performance of this architecture suffers from a bottleneck, and ceases to improve when an attempt is made to add more layers. In this work, we analyze the causes for this, and postulate that the main source is the way that the information flows through time. We introduce a novel and simple variation for the RHN cell, called Highway State Gating (HSG), which allows adding more layers, while continuing to improve performance. By using a gating mechanism for the state, we allow the net to ""choose"" whether to pass information directly through time, or to gate it. This mechanism also allows the gradient to back-propagate directly through time and, therefore, results in a slightly faster convergence. We use the Penn Treebank (PTB) dataset as a platform for empirical proof of concept. Empirical results show that the improvement due to Highway State Gating is for all depths, and as the depth increases, the improvement also increases.",RHN(depth=40),Unreleased,,Unknown,2024-09-05 18:08:31+00:00,Israel,,,,,,,,,
aLSTM(depth-2)+RecurrentPolicy (WT2),Language,"University of Manchester,Alan Turing Institute","Academia,Government","Sebastian Flennerhag, Hujun Yin, John Keane, Mark Elliot",2018-05-22,Breaking the Activation Function Bottleneck through Adaptive Parameterization,https://arxiv.org/abs/1805.08574,12.0,SOTA improvement,"""Without tuning for WT2, both outperform previously published results in 150 epochs (table 3) and converge to new state of the art performance in 190 epochs""",32000000.0,,7.59e+16,,,,,,,,190.0,,,,,,"Standard neural network architectures are non-linear only by virtue of a simple element-wise activation function, making them both brittle and excessively large. In this paper, we consider methods for making the feed-forward layer more flexible while preserving its basic structure. We develop simple drop-in replacements that learn to adapt their parameterization conditional on the input, thereby increasing statistical efficiency significantly. We present an adaptive LSTM that advances the state of the art for the Penn Treebank and WikiText-2 word-modeling tasks while using fewer parameters and converging in less than half as many iterations.",aLSTM(depth-2)+RecurrentPolicy (WT2),Unreleased,,,2024-09-10 21:38:28+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Dropout-LSTM+Noise(Bernoulli) (WT2),Language,"Columbia University,New York University (NYU),Princeton University","Academia,Academia,Academia","Adji B. Dieng, Rajesh Ranganath, Jaan Altosaar, David M. Blei",2018-05-03,Noisin: Unbiased Regularization for Recurrent Neural Networks,https://arxiv.org/abs/1805.01500,26.0,SOTA improvement,"this is the best model in this paper per Table 4
""On language modeling benchmarks, Noisin improves over dropout by as much as 12.2% on the Penn Treebank and 9.4% on the Wikitext-2 dataset""",51000000.0,,1.27e+17,,,,,,,,200.0,,,,,,"Recurrent neural networks (RNNs) are powerful models of sequential data. They have been successfully used in domains such as text and speech. However, RNNs are susceptible to overfitting; regularization is important. In this paper we develop Noisin, a new method for regularizing RNNs. Noisin injects random noise into the hidden states of the RNN and then maximizes the corresponding marginal likelihood of the data. We show how Noisin applies to any RNN and we study many different types of noise. Noisin is unbiased--it preserves the underlying RNN on average. We characterize how Noisin regularizes its RNN both theoretically and empirically. On language modeling benchmarks, Noisin improves over dropout by as much as 12.2% on the Penn Treebank and 9.4% on the Wikitext-2 dataset. We also compared the state-of-the-art language model of Yang et al. 2017, both with and without Noisin. On the Penn Treebank, the method with Noisin more quickly reaches state-of-the-art performance.",Dropout-LSTM+Noise(Bernoulli) (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
LSTM+Noise(Beta),Language,"Columbia University,New York University (NYU),Princeton University","Academia,Academia,Academia","Adji B. Dieng, Rajesh Ranganath, Jaan Altosaar, David M. Blei",2018-05-03,Noisin: Unbiased Regularization for Recurrent Neural Networks,https://arxiv.org/abs/1805.01500,26.0,,not the best model in this paper,51000000.0,,1.27e+17,,,,,,,,200.0,,,,,,"Recurrent neural networks (RNNs) are powerful models of sequential data. They have been successfully used in domains such as text and speech. However, RNNs are susceptible to overfitting; regularization is important. In this paper we develop Noisin, a new method for regularizing RNNs. Noisin injects random noise into the hidden states of the RNN and then maximizes the corresponding marginal likelihood of the data. We show how Noisin applies to any RNN and we study many different types of noise. Noisin is unbiased--it preserves the underlying RNN on average. We characterize how Noisin regularizes its RNN both theoretically and empirically. On language modeling benchmarks, Noisin improves over dropout by as much as 12.2% on the Penn Treebank and 9.4% on the Wikitext-2 dataset. We also compared the state-of-the-art language model of Yang et al. 2017, both with and without Noisin. On the Penn Treebank, the method with Noisin more quickly reaches state-of-the-art performance.",LSTM+Noise(Beta),Unreleased,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
ResNeXt-101 32x48d,Vision,Facebook,Industry,"Dhruv Mahajan, Ross Girshick, Vignesh Ramanathan, Kaiming He, Manohar Paluri, Yixuan Li, Ashwin Bharambe, Laurens van der Maaten",2018-05-02,Exploring the Limits of Weakly Supervised Pretraining,https://arxiv.org/abs/1805.00932,1300.0,"Highly cited,SOTA improvement","""We show improvements on several image classification and object detection tasks, and report the highest ImageNet-1k single-crop, top-1 accuracy to date: 85.4%",829000000.0,"Table 6
",8.74395e+21,,,"Table 6: 153e9 mult-adds.
Section 2.4: ""minibatches of 8,064 images"".

Compute = 2 * 3 * mult-adds * dataset size = 2 * 3 * 153e9 * 9525e6 = 8.74e21 FLOP

Likely trained on V100s, since Facebook had just upgraded their Big Basin GPU cluster to V100s as of March 2018. The previous iteration of Big Basin had 32 clusters of 8xP100s, while Big Basin v2 had 42 clusters of 8xV100s, which matches the 336 GPUs used in this paper.","ImageNet,Instagram","Instagram images, captioned with hashtags",9525000000.0,Table 3: (300+1925+300+7000) million images,,496.0,"""Mahajan et al. (2018) required 19 GPU years to train their ResNeXt101-32x48d"" https://arxiv.org/abs/2103.00020
Models were trained on 336 GPUs, so that suggests 20.65 days or 496 hours",NVIDIA V100,336.0,,,,Open weights (non-commercial),,Confident,2025-03-01 01:38:49+00:00,United States of America,,,,,,,,,
TF-LM-discourse LSTM (WT2),Language,ESAT - PSI,Academia,"Lyan Verwimp, Hugo Van hamme, Patrick Wambacq",2018-05-01,TF-LM: TensorFlow-based Language Modeling Toolkit,https://aclanthology.org/L18-1470.pdf,12.0,,,,,,,,,,,,,39.0,,,,,,"Recently, an abundance of deep learning toolkits has been made freely available. These toolkits typically offer the building blocks and sometimes simple example scripts, but designing and training a model still takes a considerable amount of time and knowledge. We present language modeling scripts based on TensorFlow that allow one to train and test competitive models directly, by using a pre-defined configuration or changing it to their needs. There are several options for input features (words, characters, words combined with characters, character n-grams) and for batching (sentence- or discourse-level). The models can be used to test the perplexity, predict the next word(s), re-score hypotheses or generate debugging files for interpolation with n-gram models. Additionally, we make available LSTM language models trained on a variety of Dutch texts and English benchmarks, that can be used immediately, thereby avoiding the time and computationally expensive training process. The toolkit is open source and can be found at https://github.com/lverwimp/tf-lm",TF-LM-discourse LSTM (WT2),Open weights (unrestricted),,Unknown,2024-09-05 18:08:31+00:00,Belgium,,,,,,,,,
TF-LM-discourse LSTM (PTB),Language,ESAT - PSI,Academia,"Lyan Verwimp, Hugo Van hamme, Patrick Wambacq",2018-05-01,TF-LM: TensorFlow-based Language Modeling Toolkit,https://aclanthology.org/L18-1470.pdf,12.0,,,,,,,,,,,,,39.0,,,,,,,TF-LM-discourse LSTM (PTB),Open weights (unrestricted),,Unknown,2024-09-05 18:08:31+00:00,Belgium,,,,,,,,,
DNCON2,Biology,University of Missouri,Academia,"Badri Adhikari, Jie Hou, Jianlin Cheng",2018-05-01,DNCON2: improved protein contact prediction using two-level deep convolutional neural networks,https://academic.oup.com/bioinformatics/article/34/9/1466/4708303?login=false,173.0,,,,,9.5e+16,,,"""Our training was conducted on Tesla K20 Nvidia GPUs each having 5 GB of GPU memory, on which, training one model took around 12 h.""

""We train each CNN for a total of 1600 epochs with each epoch of training taking around 2 min.""

Assumptions:
peakFLOP rate 3.52e12FLOP/s (from: https://www.techpowerup.com/gpu-specs/tesla-k20c.c564)
30% utilization rate
1 GPU

Estimate 1: ""training one model took around 12h"" => unclear how many GPUs
(12 *3600) s * 3.52e12 FLOP/s * 0.3 = 4.5e16 FLOP

Estimate 2: ""We train each CNN for a total of 1600 epochs with each epoch of training taking around 2 min.""
(1600 epochs * 2 min/epoch * 60 s/min) * 3.52e12 FLOP/s * 0.3 =  2e17 FLOP

Geometric mean: 9.5e16",PDB (Protein Data Bank),"""We used the original DNCON dataset consisting of 1426 proteins having length between 30 and 300 residues curated before the CASP10 experiment to train and test DNCON2. The protein structures in the dataset were obtained from the Protein Data Bank (PDB)""",1426.0,"""Our raw feature files for all 1426 training proteins""",1600.0,12.0,"""training one model took around 12 h""",,,,"Motivation
Significant improvements in the prediction of protein residue–residue contacts are observed in the recent years. These contacts, predicted using a variety of coevolution-based and machine learning methods, are the key contributors to the recent progress in ab initio protein structure prediction, as demonstrated in the recent CASP experiments. Continuing the development of new methods to reliably predict contact maps is essential to further improve ab initio structure prediction.

Results
In this paper we discuss DNCON2, an improved protein contact map predictor based on two-level deep convolutional neural networks. It consists of six convolutional neural networks—the first five predict contacts at 6, 7.5, 8, 8.5 and 10 Å distance thresholds, and the last one uses these five predictions as additional features to predict final contact maps. On the free-modeling datasets in CASP10, 11 and 12 experiments, DNCON2 achieves mean precisions of 35, 50 and 53.4%, respectively, higher than 30.6% by MetaPSICOV on CASP10 dataset, 34% by MetaPSICOV on CASP11 dataset and 46.3% by Raptor-X on CASP12 dataset, when top L/5 long-range contacts are evaluated. We attribute the improved performance of DNCON2 to the inclusion of short- and medium-range contacts into training, two-level approach to prediction, use of the state-of-the-art optimization and activation functions, and a novel deep learning architecture that allows each filter in a convolutional layer to access all the input features of a protein of arbitrary length.",,Open weights (unrestricted),,Likely,2025-02-17 17:40:31+00:00,United States of America,,,,,,,,,
RNNLM + Dynamic KL Regularization (WT2),Language,Northwestern University,Academia,"Thanapon Noraset, David Demeter, Doug Downey",2018-04-27,Controlling Global Statistics in Recurrent Neural Network Text Generation,https://ojs.aaai.org/index.php/AAAI/article/view/11993,8.0,,,87600000.0,,2.19e+16,,,,,,,,20.0,,,,,,"Recurrent neural network language models (RNNLMs) are an essential component for many language generation tasks such as machine translation, summarization, and automated conversation. Often, we would like to subject the text generated by the RNNLM to constraints, in order to overcome systemic errors (e.g. word repetition) or achieve application-specific goals (e.g. more positive sentiment). In this paper, we present a method for training RNNLMs to simultaneously optimize likelihood and follow a given set of statistical constraints on text generation.  The problem is challenging because the statistical constraints are defined over aggregate model behavior, rather than model parameters, meaning that a straightforward parameter regularization approach is insufficient.  We solve this problem using a dynamic regularizer that updates as training proceeds, based on the generative behavior of the RNNLMs.  Our experiments show that the dynamic regularizer outperforms both generic training and a static regularization baseline.  The approach is successful at improving word-level repetition statistics by a factor of four in RNNLMs on a definition modeling task.  It also improves model perplexity when the statistical constraints are $n$-gram statistics taken from a large corpus.",RNNLM + Dynamic KL Regularization (WT2),Unreleased,,,2025-02-18 15:52:24+00:00,United States of America,,,,,,,,,
RNMT+,Language,Google AI,Industry,"Mia Xu Chen, Orhan Firat, Ankur Bapna, Melvin Johnson, Wolfgang Macherey, George Foster, Llion Jones, Niki Parmar, Mike Schuster, Zhifeng Chen, Yonghui Wu, Macduff Hughes",2018-04-26,The Best of Both Worlds: Combining Recent Advances in Neural Machine Translation,https://arxiv.org/abs/1804.09849,504.0,,,378900000.0,from Table 3 RNMT+ ,1.83e+19,,,"32 * 9.3 TFLOPS * (120 * 3600) * 0.3 = 3.86e19
(number of gpus) * (peak flops) * (seconds) * (assumed utilization rate)
""All models were trained with synchronous training. RNMT+ and ConvS2S were trained with 32 NVIDIA P100 GPUs"", training time is 120h from Table 1.

Alternatively, typical inference is 2.81e10 FLOP, there are 36.3M examples in the dataset, and they train for 8.5 epochs: 2.81e10 * 36.3M * 8.5 = 8.7e18

Geometric mean: sqrt(3.86e19 * 8.7e18) = 1.83e19",WMT14,"""Table 1 shows our results on the WMT’14 En→Fr task.""",36300000.0,"""We train our models on the standard WMT’14 En→Fr and En→De datasets that comprise 36.3M and 4.5M sentence pairs, respectively""
""For RNMT+, we use sentence-level cross entropy loss.""",8.5,120.0,from Table 1,NVIDIA P100,32.0,Supervised,"The past year has witnessed rapid advances in sequence-to-sequence (seq2seq) modeling for Machine Translation (MT). The classic RNN-based approaches to MT were first out-performed by the convolutional seq2seq model, which was then out-performed by the more recent Transformer model. Each of these new approaches consists of a fundamental architecture accompanied by a set of modeling and training techniques that are in principle applicable to other seq2seq architectures. In this paper, we tease apart the new architectures and their accompanying techniques in two ways. First, we identify several key modeling and training techniques, and apply them to the RNN architecture, yielding a new RNMT+ model that outperforms all of the three fundamental architectures on the benchmark WMT'14 English to French and English to German tasks. Second, we analyze the properties of each fundamental seq2seq architecture and devise new hybrid architectures intended to combine their strengths. Our hybrid models obtain further improvements, outperforming the RNMT+ model on both benchmark datasets. ",,Unreleased,,Likely,2025-03-06 20:00:08+00:00,"Multinational,United States of America",,,,,,,,,
Diffractive Deep Neural Network,Vision,University of California Los Angeles (UCLA),Academia,"Xing Lin, Yair Rivenson, Nezih T Yardimci, Muhammed Veli, Yi Luo, Mona Jarrahi, and Aydogan Ozcan",2018-04-14,All-Optical Machine Learning Using Diffractive Deep Neural Networks,https://arxiv.org/abs/1804.08711,1464.0,Highly cited,,8000000000.0,"""For example, using five 3D-printed transmission layers, containing a total of 0.2 million neurons and ~8.0 billion connections that are trained using deep learning, we experimentally demonstrated the function of a handwritten digit classifier.""

My understanding is that every connection correspond to the parameter to learn.",,,,,MNIST,"""For this task, phase-only transmission masks were designed by training a 5-layer D2NN with ~55,000 images from MNIST handwritten digit database (14). """,55000.0,"size of MNIST
""For this task, phase-only transmission masks were designed by training a 5-layer D2NN with ~55,000 images from MNIST handwritten digit database (14). """,,,,,,Supervised,"We introduce an all-optical Diffractive Deep Neural Network (D2NN) architecture that can learn to implement various functions after deep learning-based design of passive diffractive layers that work collectively. We experimentally demonstrated the success of this framework by creating 3D-printed D2NNs that learned to implement handwritten digit classification and the function of an imaging lens at terahertz spectrum. With the existing plethora of 3D-printing and other lithographic fabrication methods as well as spatial-light-modulators, this all-optical deep learning framework can perform, at the speed of light, various complex functions that computer-based neural networks can implement, and will find applications in all-optical image analysis, feature detection and object classification, also enabling new camera designs and optical components that can learn to perform unique tasks using D2NNs.",,,,Likely,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
YOLOv3,Vision,University of Washington,Academia,"Joseph Redmon, Ali Farhadi",2018-04-08,YOLOv3: An Incremental Improvement,https://arxiv.org/abs/1804.02767,19207.0,Highly cited,,56933216.0,"Feature extractor (ignoring biases)
32*3*3*3 +
64*3*3*32 +
32*1*1*64 +
64*3*3*32 +
128*3*3*64 +
2*(64*1*1*128 +
128*3*3*64) +
256*3*3*128 +
8*(128*1*1*256 +
256*3*3*128) +
512*3*3*256 + 
8*(256*1*1*512 + 
512*3*3*256) + 
1024*3*3*512 + 
4*(512*1*1*1024 +
1024*3*3*512) +
4*4*1024*1000

source: table 1
This is assuming the average pooling step changes the output size from 8x8 to 4x4.

The weights file is 237MB. If the weights are saved as float32, 4 bytes per weight, then there are approximately 237M/4=59M parameters, consistent with the calculation above.",5.093919992e+19,,,"We use the formula training_compute = ops_per_forward_pass * 3.5 * n_epochs * n_examples

Assuming 160 epochs of training as in https://arxiv.org/pdf/1612.08242.pdf",ImageNet,,1281167.0,Source: https://image-net.org/download.php,,,,"NVIDIA M40,NVIDIA GeForce GTX TITAN X",,,"We present some updates to YOLO! We made a bunch of little design changes to make it better. We also trained this new network that's pretty swell. It's a little bigger than last time but more accurate. It's still fast though, don't worry. At 320x320 YOLOv3 runs in 22 ms at 28.2 mAP, as accurate as SSD but three times faster. When we look at the old .5 IOU mAP detection metric YOLOv3 is quite good. It achieves 57.9 mAP@50 in 51 ms on a Titan X, compared to 57.5 mAP@50 in 198 ms by RetinaNet, similar performance but 3.8x faster. As always, all the code is online at this https URL",,Unreleased,,,2025-02-17 17:40:50+00:00,United States of America,,,,,,,,,
"LSTM (Hebbian, Cache, MbPA)",Language,"DeepMind,University College London (UCL)","Industry,Academia","Jack W Rae, Chris Dyer, Peter Dayan, Timothy P Lillicrap",2018-03-27,Fast Parametric Learning with Activation Memorization,https://arxiv.org/abs/1803.10049,46.0,SOTA improvement,"""We also show improved performance for word-based language models on news reports (GigaWord), books (Project Gutenberg) and Wikipedia articles (WikiText-103) --- the latter achieving a state-of-the-art perplexity of 29.2.""",530442240.0,"Single layer LSTM with hidden dimension of 2048. Vocabulary for Gutenberg is 242,621; input and output embeddings are tied.

Embedding layer (tied): 242,621 * 2048 = 496,887,808
LSTM layer: 4 * (2048 + 2048) * 2048 = 33,554,432

Total: 496,887,808 + 33,554,432 = 530,442,240",3.33e+19,,,"They do training runs on a vision task and three language datasets. The largest dataset by size is GigaWord, but the largest training run is on the Gutenberg dataset, at 15B tokens. 

I assume the input embedding is done with an embedding lookup for efficiency rather than a dense matrix multiplication, so we only count FLOPs on the de-embedding.

Ops counting:
6 * 15B * 530,442,240 = 4.774e19

Hardware:
(8 * 1.87e13) * (6 * 24 * 3600) * 0.3 = 2.327e19

Geometric mean: sqrt(4.774e19 * 2.327e19) = 3.33e19

(Note they say 15B steps, but they also say it is 80 epochs on a 175M token dataset, and that it took 6 days on 8 P100s, both of which would agree with 15B tokens, not 15B steps)",Project Gutenberg,"They also do training runs on Omniglot, Wikitext-103, and GigaWord.",175181505.0,"Omniglot: 32k images
Wikitext-103: ""Over 100 million tokens""
Gutenberg: 175,181,505 tokens
GigaWord v5: 4B tokens

Gigaword is the largest dataset, but the largest training run uses Project Gutenberg.",80.0,144.0,6 days,NVIDIA P100,8.0,,"Neural networks trained with backpropagation often struggle to identify classes that have been observed a small number of times. In applications where most class labels are rare, such as language modelling, this can become a performance bottleneck. One potential remedy is to augment the network with a fast-learning non-parametric model which stores recent activations and class labels into an external memory. We explore a simplified architecture where we treat a subset of the model parameters as fast memory stores. This can help retain information over longer time intervals than a traditional memory, and does not require additional space or compute. In the case of image classification, we display faster binding of novel classes on an Omniglot image curriculum task. We also show improved performance for word-based language models on news reports (GigaWord), books (Project Gutenberg) and Wikipedia articles (WikiText-103) --- the latter achieving a state-of-the-art perplexity of 29.2.","LSTM (Hebbian, Cache, MbPA)",Unreleased,,Confident,2025-02-17 17:41:11+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,51200.0,"Sequence length of 100, total of 512 batches. Batches are split between 8 GPUs.",
4 layer QRNN (h=2500),Language,Salesforce Research,Industry,"Stephen Merity, Nitish Shirish Keskar, Richard Socher",2018-03-22,An Analysis of Neural Language Modeling at Multiple Scales,https://arxiv.org/abs/1803.08240,183.0,SOTA improvement,"""QRNNs achieve stateof-the-art results on character-level (Penn Treebank, enwik8) and word-level (WikiText-103)
datasets, respectively""",26000000.0,,2.4e+17,,,,WikiText-103,,,,14.0,,,,,,"Many of the leading approaches in language modeling introduce novel, complex and specialized architectures. We take existing state-of-the-art word level language models based on LSTMs and QRNNs and extend them to both larger vocabularies as well as character-level granularity. When properly tuned, LSTMs and QRNNs achieve state-of-the-art results on character-level (Penn Treebank, enwik8) and word-level (WikiText-103) datasets, respectively. Results are obtained in only 12 hours (WikiText-103) to 2 days (enwik8) using a single modern GPU.",4 layer QRNN (h=2500),Unreleased,,,2024-09-10 21:37:24+00:00,United States of America,,,,,,,,,
Rotation,"Image generation,Vision",École des Ponts ParisTech,Academia,"Spyros Gidaris, Praveer Singh, Nikos Komodakis",2018-03-21,Unsupervised Representation Learning by Predicting Image Rotations,https://arxiv.org/abs/1803.07728,3080.0,Highly cited,,86000000.0,https://openai.com/blog/image-gpt/#rfref53,,,,,CIFAR-10,,,,,,,,,,"Over the last years, deep convolutional neural networks (ConvNets) have transformed the field of computer vision thanks to their unparalleled capacity to learn high level semantic image features. However, in order to successfully learn those features, they usually require massive amounts of manually labeled data, which is both expensive and impractical to scale. Therefore, unsupervised semantic feature learning, i.e., learning without requiring manual annotation effort, is of crucial importance in order to successfully harvest the vast amount of visual data that are available today. In our work we propose to learn image features by training ConvNets to recognize the 2d rotation that is applied to the image that it gets as input. We demonstrate both qualitatively and quantitatively that this apparently simple task actually provides a very powerful supervisory signal for semantic feature learning. We exhaustively evaluate our method in various unsupervised feature learning benchmarks and we exhibit in all of them state-of-the-art performance. Specifically, our results on those benchmarks demonstrate dramatic improvements w.r.t. prior state-of-the-art approaches in unsupervised representation learning and thus significantly close the gap with supervised feature learning. For instance, in PASCAL VOC 2007 detection task our unsupervised pre-trained AlexNet model achieves the state-of-the-art (among unsupervised methods) mAP of 54.4% that is only 2.4 points lower from the supervised case. We get similarly striking results when we transfer our unsupervised learned features on various other tasks, such as ImageNet classification, PASCAL classification, PASCAL segmentation, and CIFAR-10 classification. The code and models of our paper will be published on: this https URL .",,,,,2025-02-04 17:49:25+00:00,France,,,,,,,,,
LSTM (2018),Language,"Intel Labs,Carnegie Mellon University (CMU)","Industry,Academia","Shaojie Bai, J. Zico Kolter, Vladlen Koltun",2018-03-04,An Empirical Evaluation of Generic Convolutional and Recurrent Networks for Sequence Modeling,https://arxiv.org/abs/1803.01271,4110.0,Highly cited,,13000000.0,,,,,,Penn TreeBank,,,,,,,,,,"For most deep learning practitioners, sequence modeling is synonymous with recurrent networks. Yet recent results indicate that convolutional architectures can outperform recurrent networks on tasks such as audio synthesis and machine translation. Given a new sequence modeling task or dataset, which architecture should one use? We conduct a systematic evaluation of generic convolutional and recurrent architectures for sequence modeling. The models are evaluated across a broad range of standard tasks that are commonly used to benchmark recurrent networks. Our results indicate that a simple convolutional architecture outperforms canonical recurrent networks such as LSTMs across a diverse range of tasks and datasets, while demonstrating longer effective memory. We conclude that the common association between sequence modeling and recurrent networks should be reconsidered, and convolutional networks should be regarded as a natural starting point for sequence modeling tasks. To assist related work, we have made code available at this http URL .",LSTM (2018),Open weights (unrestricted),,,2024-11-01 14:02:50+00:00,"Multinational,United States of America,United States of America",,,,,,,,,
Chinese - English translation,Language,Microsoft,Industry,"H Hassan, A Aue, C Chen, V Chowdhary",2018-03-01,Achieving Human Parity on Automatic Chinese to English News Translation,https://www.microsoft.com/en-us/research/publication/achieving-human-parity-on-automatic-chinese-to-english-news-translation/,593.0,SOTA improvement,"""We find that our latest neural machine translation system has reached a new state-of-the-art, and that the translation quality is at human parity when compared to professional human translations""",,,,,,,,,,,,,,,,Self-supervised learning,,,,,Unknown,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
Residual Dense Network,"Vision,Image generation","Northeastern University,University of Rochester","Academia,Academia"," Yulun Zhang, Yapeng Tian, Yu Kong, Bineng Zhong, Yun Fu",2018-02-24,Residual Dense Network for Image Super-Resolution,https://arxiv.org/abs/1802.08797v2,3046.0,Highly cited,,,,,,,,DIV2K,,,,200.0,,,,,,"A very deep convolutional neural network (CNN) has recently achieved great success for image super-resolution (SR) and offered hierarchical features as well. However, most deep CNN based SR models do not make full use of the hierarchical features from the original low-resolution (LR) images, thereby achieving relatively-low performance. In this paper, we propose a novel residual dense network (RDN) to address this problem in image SR. We fully exploit the hierarchical features from all the convolutional layers. Specifically, we propose residual dense block (RDB) to extract abundant local features via dense connected convolutional layers. RDB further allows direct connections from the state of preceding RDB to all the layers of current RDB, leading to a contiguous memory (CM) mechanism. Local feature fusion in RDB is then used to adaptively learn more effective features from preceding and current local features and stabilizes the training of wider network. After fully obtaining dense local features, we use global feature fusion to jointly and adaptively learn global hierarchical features in a holistic way. Extensive experiments on benchmark datasets with different degradation models show that our RDN achieves favorable performance against state-of-the-art methods.",,,,Unknown,2025-02-04 17:45:48+00:00,"United States of America,United States of America",,,,,,,,,
Spectrally Normalized GAN,Image generation,"Preferred Networks Inc,Ritsumeikan University,National Institute of Informatics","Industry,Academia","Takeru Miyato, Toshiki Kataoka, Masanori Koyama, Yuichi Yoshida",2018-02-16,Spectral Normalization for Generative Adversarial Networks,https://arxiv.org/abs/1802.05957,4162.0,Highly cited,,,,,,,,CIFAR-10,,,,,,,,,,"One of the challenges in the study of generative adversarial networks is the instability of its training. In this paper, we propose a novel weight normalization technique called spectral normalization to stabilize the training of the discriminator. Our new normalization technique is computationally light and easy to incorporate into existing implementations. We tested the efficacy of spectral normalization on CIFAR10, STL-10, and ILSVRC2012 dataset, and we experimentally confirmed that spectrally normalized GANs (SN-GANs) is capable of generating images of better or equal quality relative to the previous training stabilization techniques.",,,,Unknown,2025-02-04 17:53:09+00:00,"Japan,Japan,Japan",,,,,,,,,
Multipop Adaptive Continuous Stack (WT2),Language,"DeepMind,University of Oxford","Industry,Academia","Dani Yogatama, Yishu Miao, Gabor Melis, Wang Ling, Adhiguna Kuncoro, Chris Dyer, Phil Blunsom",2018-02-15,Memory Architectures in Recurrent Neural Network Language Models,https://openreview.net/forum?id=SkFqf0lAZ,63.0,,,26000000.0,,,,,,,,,,,,,,,,"We compare and analyze sequential, random access, and stack memory architectures for recurrent neural network language models. Our experiments on the Penn Treebank and Wikitext-2 datasets show that stack-based memory architectures consistently achieve the best performance in terms of held out perplexity. We also propose a generalization to existing continuous stack models (Joulin & Mikolov,2015; Grefenstette et al., 2015)  to allow a variable number of pop operations more naturally that further improves performance. We further evaluate these language models in terms of their ability to capture non-local syntactic dependencies on a subject-verb agreement dataset  (Linzen et al., 2016) and establish new state of the art results using memory augmented language models. Our results demonstrate the value of stack-structured memory for explaining the distribution of words in natural language, in line with linguistic theories claiming a context-free backbone for natural language.",Multipop Adaptive Continuous Stack (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
TCN (148M),Language,"Carnegie Mellon University (CMU),Intel Labs","Academia,Industry","Shaojie Bai, J. Zico Kolter, Vladlen Koltun",2018-02-15,Convolutional Sequence Modeling Revisited,https://openreview.net/forum?id=rk8wKk-R-,64.0,,,148000000.0,,,,,,WikiText-103,,,,,,,,,,"This paper revisits the problem of sequence modeling using convolutional 
architectures.  Although both convolutional and recurrent architectures have a
long history in sequence prediction, the current ""default"" mindset in much of
the deep learning community is that generic sequence modeling is best handled using recurrent networks.  The goal of this paper is to question this assumption. Specifically, we consider a simple generic temporal convolution network (TCN), which adopts features from modern ConvNet architectures such as a dilations and residual connections.  We show that on a variety of sequence modeling tasks, including many frequently used as benchmarks for evaluating recurrent networks, the TCN outperforms baseline RNN methods (LSTMs, GRUs, and vanilla RNNs) and sometimes even highly specialized approaches.  We further show that the potential ""infinite memory"" advantage that RNNs have over TCNs is largely absent in practice: TCNs indeed exhibit longer effective history sizes than their recurrent counterparts.   As a whole, we argue that it may be time to (re)consider ConvNets as the default ""go to"" architecture for sequence modeling.",TCN (148M),Unreleased,,,2024-09-05 18:08:31+00:00,"United States of America,Multinational,United States of America",,,,,,,,,
TCN (P-MNIST),Language,"Carnegie Mellon University (CMU),Intel Labs","Academia,Industry","Shaojie Bai, J. Zico Kolter, Vladlen Koltun",2018-02-15,Convolutional Sequence Modeling Revisited,https://openreview.net/forum?id=rk8wKk-R-,64.0,SOTA improvement,"""For the permuted sequential MNIST, TCNs outperform state of the art results using recurrent nets (95.9%) with Zoneout+Recurrent BatchNorm (Cooijmans et al., 2016; Krueger et al., 2017), a highly optimized method for regularizing RNNs""",42000.0,,,,,,P-MNIST,,,,,,,,,,,,,,Confident,2024-09-05 18:08:31+00:00,"United States of America,Multinational,United States of America",,,,,,,,,
ENAS,Language,"Google Brain,Carnegie Mellon University (CMU),Stanford University","Industry,Academia,Academia","Hieu Pham, Melody Y. Guan, Barret Zoph, Quoc V. Le, Jeff Dean",2018-02-09,Efficient Neural Architecture Search via Parameter Sharing,https://arxiv.org/abs/1802.03268,2760.0,Highly cited,,24000000.0,,2.01e+16,,,,Penn TreeBank,,,,150.0,,,,,,"We propose Efficient Neural Architecture Search (ENAS), a fast and inexpensive approach for automatic model design. In ENAS, a controller learns to discover neural network architectures by searching for an optimal subgraph within a large computational graph. The controller is trained with policy gradient to select a subgraph that maximizes the expected reward on the validation set. Meanwhile the model corresponding to the selected subgraph is trained to minimize a canonical cross entropy loss. Thanks to parameter sharing between child models, ENAS is fast: it delivers strong empirical performances using much fewer GPU-hours than all existing automatic model design approaches, and notably, 1000x less expensive than standard Neural Architecture Search. On the Penn Treebank dataset, ENAS discovers a novel architecture that achieves a test perplexity of 55.8, establishing a new state-of-the-art among all methods without post-training processing. On the CIFAR-10 dataset, ENAS designs novel architectures that achieve a test error of 2.89%, which is on par with NASNet (Zoph et al., 2018), whose test error is 2.65%.",ENAS,Unreleased,,,2024-09-10 21:41:12+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
DeepLabV3+,Vision,Google,Industry,"Liang-Chieh Chen, Yukun Zhu, George Papandreou, Florian Schroff, Hartwig Adam",2018-02-07,Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation,https://arxiv.org/abs/1802.02611v3,11558.0,Highly cited,,,,,,,,"ImageNet-1k,COCO,JFT-300M",,,,,,,,,,"Spatial pyramid pooling module or encode-decoder structure are used in deep neural networks for semantic segmentation task. The former networks are able to encode multi-scale contextual information by probing the incoming features with filters or pooling operations at multiple rates and multiple effective fields-of-view, while the latter networks can capture sharper object boundaries by gradually recovering the spatial information. In this work, we propose to combine the advantages from both methods. Specifically, our proposed model, DeepLabv3+, extends DeepLabv3 by adding a simple yet effective decoder module to refine the segmentation results especially along object boundaries. We further explore the Xception model and apply the depthwise separable convolution to both Atrous Spatial Pyramid Pooling and decoder modules, resulting in a faster and stronger encoder-decoder network. We demonstrate the effectiveness of the proposed model on PASCAL VOC 2012 and Cityscapes datasets, achieving the test set performance of 89.0\% and 82.1\% without any post-processing. Our paper is accompanied with a publicly available reference implementation of the proposed models in Tensorflow at \url{this https URL}.",,,,Unknown,2025-02-04 17:58:46+00:00,United States of America,,,,,,,,,
AmoebaNet-A (F=448),Vision,Google Brain,Industry,"Esteban Real, Alok Aggarwal, Yanping Huang, Quoc V Le",2018-02-05,Regularized Evolution for Image Classifier Architecture Search,https://arxiv.org/abs/1802.01548,2823.0,Highly cited,,469000000.0,Table 2,3.85296912e+20,,,"450 K40 GPUs for 20k models (approx. 7 days).
(From Imagenet paper-data, Besiroglu et al., forthcoming) ",ImageNet-1k,,1280000.0,,,168.0,"""Each experiment ran on 450 K40 GPUs for 20k models (approx. 7 days).""",NVIDIA Tesla K40s,450.0,,"The effort devoted to hand-crafting neural network image classifiers has motivated the use of architecture search to discover them automatically. Although evolutionary algorithms have been repeatedly applied to neural network topologies, the image classifiers thus discovered have remained inferior to human-crafted ones. Here, we evolve an image classifier---AmoebaNet-A---that surpasses hand-designs for the first time. To do this, we modify the tournament selection evolutionary algorithm by introducing an age property to favor the younger genotypes. Matching size, AmoebaNet-A has comparable accuracy to current state-of-the-art ImageNet models discovered with more complex architecture-search methods. Scaled to larger size, AmoebaNet-A sets a new state-of-the-art 83.9% / 96.6% top-5 ImageNet accuracy. In a controlled comparison against a well known reinforcement learning algorithm, we give evidence that evolution can obtain results faster with the same hardware, especially at the earlier stages of the search. This is relevant when fewer compute resources are available. Evolution is, thus, a simple method to effectively discover high-quality architectures.",,Unreleased,,,2025-01-13 17:31:42+00:00,United States of America,,,,,,,,,
AmoebaNet-A (F=190),Vision,Google Brain,Industry,"E Real, A Aggarwal, Y Huang, QV Le",2018-02-05,Regularized Evolution for Image Classifier Architecture Search,https://arxiv.org/abs/1802.01548,2823.0,Highly cited,,87000000.0,Table 2,,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
IMPALA,Games,DeepMind,Industry,"Lasse Espeholt, Hubert Soyer, Remi Munos, Karen Simonyan, Volodymir Mnih, Tom Ward, Yotam Doron, Vlad Firoiu, Tim Harley, Iain Dunning, Shane Legg, Koray Kavukcuoglu",2018-02-05,IMPALA: Scalable Distributed Deep-RL with Importance Weighted Actor-Learner Architectures,https://arxiv.org/abs/1802.01561,1477.0,"Highly cited,SOTA improvement","""IMPALA is able to achieve better performance than previous agents with less data""",1600000.0,"""Figure 3 in the paper states that the large architecture has 1.6 million parameters. I am using the large model because it was the only one trained on all the Atari games at once, which seems like the most impressive task in the suite.""

Source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",1.68e+20,,,"Source: Ajeya Cotra and Tom Davidson, https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",,,240000000000.0,"From fig 6, there were 1e10 environment frames, and 24 agents. Thus we note down 2.4e11 for the ""dataset size""",,100.0,Maximum training time for IMPALA is 100 hours according to Figure 6. This seems to refer to the 1 GPU model. The 8 GPU model looks to have been trained about 1/8 as long.,NVIDIA P100,1.0,Self-supervised learning,"In this work we aim to solve a large collection of tasks using a single reinforcement learning agent with a single set of parameters. A key challenge is to handle the increased amount of data and extended training time. We have developed a new distributed agent IMPALA (Importance Weighted Actor-Learner Architecture) that not only uses resources more efficiently in single-machine training but also scales to thousands of machines without sacrificing data efficiency or resource utilisation. We achieve stable learning at high throughput by combining decoupled acting and learning with a novel off-policy correction method called V-trace. We demonstrate the effectiveness of IMPALA for multi-task reinforcement learning on DMLab-30 (a set of 30 tasks from the DeepMind Lab environment (Beattie et al., 2016)) and Atari-57 (all available Atari games in Arcade Learning Environment (Bellemare et al., 2013a)). Our results show that IMPALA is able to achieve better performance than previous agents with less data, and crucially exhibits positive transfer between tasks as a result of its multi-task approach.",,Unreleased,,,2025-02-17 19:34:28+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
ELMo,Language,"University of Washington,Allen Institute for AI","Academia,Research collective","Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, Luke Zettlemoyer",2018-02-01,Deep contextualized word representations,https://arxiv.org/abs/1802.05365,11108.0,Highly cited,,94000000.0,,,,,3300e12 - https://github.com/amirgholami/ai_and_memory_wall,,,,,,,,,,Self-supervised learning,"We introduce a new type of deep contextualized word representation that models both (1) complex characteristics of word use (e.g., syntax and semantics), and (2) how these uses vary across linguistic contexts (i.e., to model polysemy). Our word vectors are learned functions of the internal states of a deep bidirectional language model (biLM), which is pre-trained on a large text corpus. We show that these representations can be easily added to existing models and significantly improve the state of the art across six challenging NLP problems, including question answering, textual entailment and sentiment analysis. We also present an analysis showing that exposing the deep internals of the pre-trained network is crucial, allowing downstream models to mix different types of semi-supervision signals.",,,,,2024-11-01 14:02:50+00:00,"United States of America,United States of America",,,,,,,,,
QRNN,Language,Salesforce Research,Industry,"Stephen Merity, Nitish Shirish Keskar, James Bradbury, Richard Socher",2018-02-01,Scalable Language Modeling: WikiText-103 on a Single GPU in 12 hours,https://mlsys.org/Conferences/doc/2018/50.pdf,4.0,SOTA improvement,"""we reduce our per-epoch time substantially and achieve a new state-of-the-art on WikiText-103 despite training for 14 epochs""",135000000.0,,3.6e+17,,,,WikiText-103,,,,14.0,,,,,,"Word-level language modeling (WLM) is one the foundational tasks of unsupervised natural language processing. Most modern architectures for WLM use several LSTM layers, followed by a softmax layer. Even with larger batch sizes and a multi-GPU setup, training of these networks on large-vocabulary corpora is slow due to increased computation involving the softmax and the high cost of recurrence computation. We propose a model architecture and training strategy that enables us to achieve state-of-the-art performance on the WikiText-103 data set using a single GPU while being
substantially faster than an NVIDIA cuDNN LSTM-based model by utilizing the Quasi-Recurrent Neural Network (QRNN), an adaptive softmax with weight tying, and longer sequences within batches.",QRNN,Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
ULM-FiT,Language,"University of San Francisco,Insight Centre NUI Galway,Fast.ai","Academia,Academia","Jeremy Howard, Sebastian Ruder",2018-01-18,Universal Language Model Fine-tuning for Text Classification,https://arxiv.org/abs/1801.06146,1940.0,Highly cited,,441000000.0,https://files.fast.ai/models/wt103/?C=S;O=D,2.72538e+17,,,=103000000*441000000*6=2.72538e+17,"IMDb,Yelp,Trec-6,DBpedia,AG news,WikiText-103",,103000000.0,"We pretrain the language model on Wikitext-103
(Merity et al., 2017b) consisting of 28,595 preprocessed Wikipedia articles and 103 million words.

Fine-tuning datasets:
TREC-6 Question 5.5k
IMDb Sentiment 25k
Yelp-bi Sentiment 560k
Yelp-full Sentiment 650k
AG Topic 120k
DBpedia Topic 560k

560+120+650+560+25+5.5=1920.5k = 1920500",,,,,,,"Inductive transfer learning has greatly impacted computer vision, but existing approaches in NLP still require task-specific modifications and training from scratch. We propose Universal Language Model Fine-tuning (ULMFiT), an effective transfer learning method that can be applied to any task in NLP, and introduce techniques that are key for fine-tuning a language model. Our method significantly outperforms the state-of-the-art on six text classification tasks, reducing the error by 18-24% on the majority of datasets. Furthermore, with only 100 labeled examples, it matches the performance of training from scratch on 100x more data. We open-source our pretrained models and code.",,Open weights (unrestricted),,Speculative,2025-02-17 17:40:57+00:00,"United States of America,Ireland",AWD-LSTM,,,,,,,,
Refined Part Pooling,Vision,"Tsinghua University,University of Technology Sydney,University of Texas at San Antonio","Academia,Academia,Academia","Yifan Sun, Liang Zheng, Yi Yang, Qi Tian, Shengjin Wang",2018-01-09,Beyond Part Models: Person Retrieval with Refined Part Pooling (and a Strong Convolutional Baseline),https://arxiv.org/abs/1711.09349,2046.0,Highly cited,,,,2.6244e+16,,,12150000000000*3600*2*0.3=2.6244e+16 FLOP,"ImageNet-1k,Market-1501",,,,,1.0,"""With two NVIDIA TITAN XP GPUs and Pytorch as the platform, training an IDE model and a standard
PCB on Market-1501 (12,936 training images) consumes
about 40 and 50 minutes, respectively""",NVIDIA TITAN Xp,2.0,,"Employing part-level features for pedestrian image description offers fine-grained information and has been verified as beneficial for person retrieval in very recent literature. A prerequisite of part discovery is that each part should be well located. Instead of using external cues, e.g., pose estimation, to directly locate parts, this paper lays emphasis on the content consistency within each part.
Specifically, we target at learning discriminative part-informed features for person retrieval and make two contributions. (i) A network named Part-based Convolutional Baseline (PCB). Given an image input, it outputs a convolutional descriptor consisting of several part-level features. With a uniform partition strategy, PCB achieves competitive results with the state-of-the-art methods, proving itself as a strong convolutional baseline for person retrieval.
(ii) A refined part pooling (RPP) method. Uniform partition inevitably incurs outliers in each part, which are in fact more similar to other parts. RPP re-assigns these outliers to the parts they are closest to, resulting in refined parts with enhanced within-part consistency. Experiment confirms that RPP allows PCB to gain another round of performance boost. For instance, on the Market-1501 dataset, we achieve (77.4+4.2)% mAP and (92.3+1.5)% rank-1 accuracy, surpassing the state of the art by a large margin.",,,,Confident,2025-02-04 18:09:03+00:00,"China,Australia,United States of America",,,,,,,,,
Tacotron 2,Speech,"Google,University of California (UC) Berkeley","Industry,Academia","Jonathan Shen, Ruoming Pang, Ron J. Weiss, Mike Schuster, Navdeep Jaitly, Zongheng Yang, Zhifeng Chen, Yu Zhang, Yuxuan Wang, RJ Skerry-Ryan, Rif A. Saurous, Yannis Agiomyrgiannakis, Yonghui Wu",2017-12-19,Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Prediction,https://arxiv.org/abs/1712.05884,2886.0,Highly cited,,,"some architecture details:

""Input characters are represented using a learned 512-dimensional
character embedding, which are passed through a stack of 3 convolutional layers each containing 512 filters with shape 5 × 1, i.e., where
each filter spans 5 characters, followed by batch normalization [18]
and ReLU activations. As in Tacotron, these convolutional layers
model longer-term context (e.g., N-grams) in the input character
sequence. The output of the final convolutional layer is passed into a
single bi-directional [19] LSTM [20] layer containing 512 units (256
in each direction) to generate the encoded features.""",,,,,,"""We train all models on an internal US English dataset[12], which
contains 24.6 hours of speech from a single professional female
speaker.""",340000.0,"""We train all models on an internal US English dataset[12], which contains 24.6 hours of speech from a single professional female speaker.""

13,680 words/hour * 24.6 = 336528 words",,,,,,,"This paper describes Tacotron 2, a neural network architecture for speech synthesis directly from text. The system is composed of a recurrent sequence-to-sequence feature prediction network that maps character embeddings to mel-scale spectrograms, followed by a modified WaveNet model acting as a vocoder to synthesize timedomain waveforms from those spectrograms. Our model achieves a mean opinion score (MOS) of 4.53 comparable to a MOS of 4.58 for professionally recorded speech. To validate our design choices, we present ablation studies of key components of our system and evaluate the impact of using mel spectrograms as the input to WaveNet instead of linguistic, duration, and F0 features. We further demonstrate that using a compact acoustic intermediate representation enables significant simplification of the WaveNet architecture.",,,,Confident,2024-09-05 18:08:31+00:00,"United States of America,United States of America",,,,,,,,,
AlphaZero,Games,DeepMind,Industry,"David Silver, Thomas Hubert, Julian Schrittwieser, Ioannis Antonoglou, Matthew Lai, Arthur Guez, Marc Lanctot, Laurent Sifre, Dharshan Kumaran, Thore Graepel, Timothy Lillicrap, Karen Simonyan, Demis Hassabis",2017-12-05,Mastering Chess and Shogi by Self-Play with a General Reinforcement Learning Algorithm,https://arxiv.org/abs/1712.01815,1594.0,Highly cited,,,,3.667927300468287e+22,,,Extracted from AI and Compute (https://openai.com/blog/ai-and-compute/) charts by using https://automeris.io/WebPlotDigitizer/.,,,700000.0,"""We trained a separate instance of AlphaZero for each game. Training proceeded
for 700,000 steps""",,24.0,,"Google TPU v2,Google TPU v1",5064.0,Self-supervised learning,"The game of chess is the most widely-studied domain in the history of artificial intelligence. The strongest programs are based on a combination of sophisticated search techniques, domain-specific adaptations, and handcrafted evaluation functions that have been refined by human experts over several decades. In contrast, the AlphaGo Zero program recently achieved superhuman performance in the game of Go, by tabula rasa reinforcement learning from games of self-play. In this paper, we generalise this approach into a single AlphaZero algorithm that can achieve, tabula rasa, superhuman performance in many challenging domains. Starting from random play, and given no domain knowledge except the game rules, AlphaZero achieved within 24 hours a superhuman level of play in the games of chess and shogi (Japanese chess) as well as Go, and convincingly defeated a world-champion program in each case.",,Unreleased,,,2025-02-17 19:34:04+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
2-layer-LSTM+Deep-Gradient-Compression,Language,"Tsinghua University,Stanford University,NVIDIA","Academia,Academia,Industry","Yujun Lin, Song Han, Huizi Mao, Yu Wang, William J. Dally",2017-12-05,Deep Gradient Compression: Reducing the Communication Bandwidth for Distributed Training,https://arxiv.org/abs/1712.01887,1298.0,Highly cited,,6020000.0,,1340000000000000.0,,,,,,,,40.0,,,,,,"Large-scale distributed training requires significant communication bandwidth for gradient exchange that limits the scalability of multi-node training, and requires expensive high-bandwidth network infrastructure. The situation gets even worse with distributed training on mobile devices (federated learning), which suffers from higher latency, lower throughput, and intermittent poor connections. In this paper, we find 99.9% of the gradient exchange in distributed SGD is redundant, and propose Deep Gradient Compression (DGC) to greatly reduce the communication bandwidth. To preserve accuracy during compression, DGC employs four methods: momentum correction, local gradient clipping, momentum factor masking, and warm-up training. We have applied Deep Gradient Compression to image classification, speech recognition, and language modeling with multiple datasets including Cifar10, ImageNet, Penn Treebank, and Librispeech Corpus. On these scenarios, Deep Gradient Compression achieves a gradient compression ratio from 270x to 600x without losing accuracy, cutting the gradient size of ResNet-50 from 97MB to 0.35MB, and for DeepSpeech from 488MB to 0.74MB. Deep gradient compression enables large-scale distributed training on inexpensive commodity 1Gbps Ethernet and facilitates distributed training on mobile. Code is available at: this https URL.",2-layer-LSTM+Deep-Gradient-Compression,Unreleased,,,2024-11-01 14:02:36+00:00,"China,United States of America,United States of America",,,,,,,,,
PNAS-net,Vision,"Johns Hopkins University,Google AI,Stanford University","Academia,Industry,Academia","C Liu, B Zoph, M Neumann, J Shlens",2017-12-02,Progressive Neural Architecture Search,https://arxiv.org/abs/1712.00559,1911.0,Highly cited,,86000000.0,,,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:36+00:00,"United States of America,Multinational,United States of America,United States of America",,,,,,,,,
PNASNet-5,Vision,"Johns Hopkins University,Google AI,Stanford University","Academia,Industry,Academia","C Liu, B Zoph, M Neumann, J Shlens",2017-12-02,Progressive Neural Architecture Search,https://arxiv.org/abs/1712.00559,1911.0,Highly cited,,,,6.62904e+19,,,"8 times less compute than Zoph (2018), which used 500 p100s for 4 days.
(From Imagenet paper-data, Besiroglu et al., forthcoming) ",ImageNet-1k,,1280000.0,,,,,,,,"We propose a new method for learning the structure of convolutional neural networks (CNNs) that is more efficient than recent state-of-the-art methods based on reinforcement learning and evolutionary algorithms. Our approach uses a sequential model-based optimization (SMBO) strategy, in which we search for structures in order of increasing complexity, while simultaneously learning a surrogate model to guide the search through structure space. Direct comparison under the same search space shows that our method is up to 5 times more efficient than the RL method of Zoph et al. (2018) in terms of number of models evaluated, and 8 times faster in terms of total compute. The structures we discover in this way achieve state of the art classification accuracies on CIFAR-10 and ImageNet.",,,,,2025-02-19 19:04:17+00:00,"United States of America,Multinational,United States of America,United States of America",,,,,,,,,
DL scaling speech,Speech,Baidu,Industry,"Joel Hestness, Sharan Narang, Newsha Ardalani, G. Diamos, Heewoo Jun, Hassan Kianinejad, Md. Mostofa Ali Patwary, Yang Yang, Yanqi Zhou",2017-12-01,"Deep Learning Scaling is Predictable, Empirically",https://www.semanticscholar.org/paper/Deep-Learning-Scaling-is-Predictable%2C-Empirically-Hestness-Narang/a1c922be467d1c0c64b963e65dae41778b81b2a0,,Training cost,,193000000.0,,,,,,,,14786496.0,"8M utterances, 11940 hours, trained for up to 2048h
Estimated number of words: 11940*120*60=85968000
Training size: 2048/11940=0.172
Training words: 85968000*0.172=14786496",,,,,,Supervised,"Deep learning (DL) creates impactful advances following a virtuous recipe: model architecture search, creating large training data sets, and scaling computation. It is widely believed that growing training sets and models should improve accuracy and result in better products. As DL application domains grow, we would like a deeper understanding of the relationships between training set size, computational scale, and model accuracy improvements to advance the state-of-the-art. This paper presents a large scale empirical characterization of generalization error and model size growth as training sets grow. We introduce a methodology for this measurement and test four machine learning domains: machine translation, language modeling, image processing, and speech recognition. Our empirical results show power-law generalization error scaling across a breadth of factors, resulting in power-law exponents---the ""steepness"" of the learning curve---yet to be explained by theoretical work. Further, model improvements only shift the error but do not appear to affect the power-law exponent. We also show that model size scales sublinearly with data size. These scaling relationships have significant implications on deep learning research, practice, and systems. They can assist model debugging, setting accuracy targets, and decisions about data set growth. They can also guide computing system design and underscore the importance of continued computational scaling.",,Unreleased,,Unverified,2024-11-27 11:57:46+00:00,China,,,,,,,,,
DL scaling LM,Language,Baidu,Industry,"Joel Hestness, Sharan Narang, Newsha Ardalani, G. Diamos, Heewoo Jun, Hassan Kianinejad, Md. Mostofa Ali Patwary, Yang Yang, Yanqi Zhou",2017-12-01,"Deep Learning Scaling is Predictable, Empirically",https://www.semanticscholar.org/paper/Deep-Learning-Scaling-is-Predictable%2C-Empirically-Hestness-Narang/a1c922be467d1c0c64b963e65dae41778b81b2a0,,Historical significance,,177000000.0,,,,,,One Billion Word benchmark,,400000000.0," We train the models on shards ranging from
0.1% up to 40% of the Billion Word Dataset.
",,,,,,Supervised,"Deep learning (DL) creates impactful advances following a virtuous recipe: model architecture search, creating large training data sets, and scaling computation. It is widely believed that growing training sets and models should improve accuracy and result in better products. As DL application domains grow, we would like a deeper understanding of the relationships between training set size, computational scale, and model accuracy improvements to advance the state-of-the-art. This paper presents a large scale empirical characterization of generalization error and model size growth as training sets grow. We introduce a methodology for this measurement and test four machine learning domains: machine translation, language modeling, image processing, and speech recognition. Our empirical results show power-law generalization error scaling across a breadth of factors, resulting in power-law exponents---the ""steepness"" of the learning curve---yet to be explained by theoretical work. Further, model improvements only shift the error but do not appear to affect the power-law exponent. We also show that model size scales sublinearly with data size. These scaling relationships have significant implications on deep learning research, practice, and systems. They can assist model debugging, setting accuracy targets, and decisions about data set growth. They can also guide computing system design and underscore the importance of continued computational scaling.",,Unreleased,,Unverified,2024-12-05 13:33:11+00:00,China,,,,,,,,,
DL scaling Image,Vision,Baidu,Industry,"Joel Hestness, Sharan Narang, Newsha Ardalani, G. Diamos, Heewoo Jun, Hassan Kianinejad, Md. Mostofa Ali Patwary, Yang Yang, Yanqi Zhou",2017-12-01,"Deep Learning Scaling is Predictable, Empirically",https://www.semanticscholar.org/paper/Deep-Learning-Scaling-is-Predictable%2C-Empirically-Hestness-Narang/a1c922be467d1c0c64b963e65dae41778b81b2a0,,Training cost,,121000000.0,,,,,,ImageNet,,800000.0,,,,,,,Supervised,"Deep learning (DL) creates impactful advances following a virtuous recipe: model architecture search, creating large training data sets, and scaling computation. It is widely believed that growing training sets and models should improve accuracy and result in better products. As DL application domains grow, we would like a deeper understanding of the relationships between training set size, computational scale, and model accuracy improvements to advance the state-of-the-art. This paper presents a large scale empirical characterization of generalization error and model size growth as training sets grow. We introduce a methodology for this measurement and test four machine learning domains: machine translation, language modeling, image processing, and speech recognition. Our empirical results show power-law generalization error scaling across a breadth of factors, resulting in power-law exponents---the ""steepness"" of the learning curve---yet to be explained by theoretical work. Further, model improvements only shift the error but do not appear to affect the power-law exponent. We also show that model size scales sublinearly with data size. These scaling relationships have significant implications on deep learning research, practice, and systems. They can assist model debugging, setting accuracy targets, and decisions about data set growth. They can also guide computing system design and underscore the importance of continued computational scaling.",,Unreleased,,Unverified,2025-02-04 18:09:34+00:00,China,,,,,,,,,
TriNet,Video,"Visual Computing Institute,RWTH Aachen University",Academia,"Alexander Hermans, Lucas Beyer, Bastian Leibe",2017-11-21,In Defense of the Triplet Loss for Person Re-Identification,https://arxiv.org/abs/1703.07737,3038.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:28+00:00,"Germany,Germany",,,,,,,,,
"AWD-LSTM-MoS + dynamic evaluation (WT2, 2017)",Language,Carnegie Mellon University (CMU),Academia,"Zhilin Yang, Zihang Dai, Ruslan Salakhutdinov, William W. Cohen",2017-11-10,Breaking the Softmax Bottleneck: A High-Rank RNN Language Model,https://arxiv.org/abs/1711.03953,358.0,SOTA improvement,"""Experimental results confirm that the
proposed method significantly improves state-of-the-art language models, achieving a perplexity of 55.31 and 62.89 on
the test set of Penn Treebank and WikiText-2""",35000000.0,,4.37e+17,,,,,,,,1000.0,,,,,,"We formulate language modeling as a matrix factorization problem, and show that the expressiveness of Softmax-based models (including the majority of neural language models) is limited by a Softmax bottleneck. Given that natural language is highly context-dependent, this further implies that in practice Softmax with distributed word embeddings does not have enough capacity to model natural language. We propose a simple and effective method to address this issue, and improve the state-of-the-art perplexities on Penn Treebank and WikiText-2 to 47.69 and 40.68 respectively. The proposed method also excels on the large-scale 1B Word dataset, outperforming the baseline by over 5.6 points in perplexity.","AWD-LSTM-MoS + dynamic evaluation (WT2, 2017)",Unreleased,,,2024-09-10 21:21:12+00:00,United States of America,,,,,,,,,
VQ-VAE,Vision,DeepMind,Industry,"Aäron van den Oord, O. Vinyals, K. Kavukcuoglu",2017-11-02,Neural Discrete Representation Learning,https://www.semanticscholar.org/paper/Neural-Discrete-Representation-Learning-Oord-Vinyals/f466157848d1a7772fb6d02cdac9a7a5e7ef982e,,Highly cited,,,,,,,,,,,,,,,,,,"Learning useful representations without supervision remains a key challenge in machine learning. In this paper, we propose a simple yet powerful generative model that learns such discrete representations. Our model, the Vector Quantised-Variational AutoEncoder (VQ-VAE), differs from VAEs in two key ways: the encoder network outputs discrete, rather than continuous, codes; and the prior is learnt rather than static. In order to learn a discrete latent representation, we incorporate ideas from vector quantisation (VQ). Using the VQ method allows the model to circumvent issues of ""posterior collapse"" -- where the latents are ignored when they are paired with a powerful autoregressive decoder -- typically observed in the VAE framework. Pairing these representations with an autoregressive prior, the model can generate high quality images, videos, and speech as well as doing high quality speaker conversion and unsupervised learning of phonemes, providing further evidence of the utility of the learnt representations.",,,,Unverified,2025-02-04 18:12:16+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Fraternal dropout + AWD-LSTM 3-layer (WT2),Language,"Jagiellonian University,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms),University of Montreal / Université de Montréal","Academia,Academia,Academia","Konrad Zolna, Devansh Arpit, Dendi Suhubdy, Yoshua Bengio",2017-10-31,Fraternal Dropout,https://arxiv.org/abs/1711.00066,55.0,SOTA improvement,"""We evaluate our model and achieve state-of-the-art results in sequence
modeling tasks on two benchmark datasets – Penn Treebank and Wikitext-2""",34000000.0,,9.85e+16,,,,WikiText-2,,,,520.0,,,,,,"Recurrent neural networks (RNNs) are important class of architectures among neural networks useful for language modeling and sequential prediction. However, optimizing RNNs is known to be harder compared to feed-forward neural networks. A number of techniques have been proposed in literature to address this problem. In this paper we propose a simple technique called fraternal dropout that takes advantage of dropout to achieve this goal. Specifically, we propose to train two identical copies of an RNN (that share parameters) with different dropout masks while minimizing the difference between their (pre-softmax) predictions. In this way our regularization encourages the representations of RNNs to be invariant to dropout mask, thus being robust. We show that our regularization term is upper bounded by the expectation-linear dropout objective which has been shown to address the gap due to the difference between the train and inference phases of dropout. We evaluate our model and achieve state-of-the-art results in sequence modeling tasks on two benchmark datasets - Penn Treebank and Wikitext-2. We also show that our approach leads to performance improvement by a significant margin in image captioning (Microsoft COCO) and semi-supervised (CIFAR-10) tasks.",Fraternal dropout + AWD-LSTM 3-layer (WT2),Unreleased,,,2024-09-10 21:37:48+00:00,"Poland,Canada,Canada",,,,,,,,,
DCN+,Language,Salesforce Research,Industry,"Caiming Xiong, Victor Zhong, Richard Socher",2017-10-31,DCN+: Mixed Objective and Deep Residual Coattention for Question Answering,https://arxiv.org/abs/1711.00106v2,121.0,SOTA improvement,"""On the Stanford Question Answering Dataset, our model achieves state-of-the-art results with 75.1% exact match accuracy and 83.1% F1, while the ensemble obtains 78.9% exact match accuracy and 86.0% F1. ""
https://paperswithcode.com/paper/dcn-mixed-objective-and-deep-residual
",,"Not directly repoted - It may be possible to extract number from:
https://github.com/lmn-extracts/dcn_plus/tree/master/question_answering",,,,"in Figure 4 we see that network was trained on 140k iterations
from https://github.com/lmn-extracts/dcn_plus/tree/master we see that batch size is 64
It should be possible to compute inference FLOPs from repository and estimate training compute",SQuAD,"From start of section 3: ""We train and evaluate our model on the Stanford Question Answering Dataset (SQuAD). ""

",107785.0,"from https://paperswithcode.com/dataset/squad SQuAD have 107,785 question-answer pairs
download-ed dataset from: https://www.kaggle.com/datasets/stanfordu/stanford-question-answering-dataset?resource=download
wc -w on train-v.1.1 returns 4017471 words so around 5.4M tokens

Looks like they probably trained on each token in SQuAD rather than QA pairs, but uncertain.",,,,,,,"Traditional models for question answering optimize using cross entropy loss, which encourages exact answers at the cost of penalizing nearby or overlapping answers that are sometimes equally accurate. We propose a mixed objective that combines cross entropy loss with self-critical policy learning. The objective uses rewards derived from word overlap to solve the misalignment between evaluation metric and optimization objective. In addition to the mixed objective, we improve dynamic coattention networks (DCN) with a deep residual coattention encoder that is inspired by recent work in deep self-attention and residual networks. Our proposals improve model performance across question types and input lengths, especially for long questions that requires the ability to capture long-term dependencies. On the Stanford Question Answering Dataset, our model achieves state-of-the-art results with 75.1% exact match accuracy and 83.1% F1, while the ensemble obtains 78.9% exact match accuracy and 86.0% F1. ",,Unreleased,,Confident,2024-09-18 22:09:06+00:00,United States of America,,,,,,,,,
S-Norm,Language,"University of Washington,Allen Institute for AI","Academia,Research collective","Christopher Clark, Matt Gardner",2017-10-29,Simple and Effective Multi-Paragraph Reading Comprehension,https://arxiv.org/abs/1710.10723v2,453.0,SOTA improvement,"""Overall, we are able to achieve a score of 71.3 F1 on the web portion of TriviaQA, a large improvement from the 56.7 F1 of the previous best system.""",,Not stated. Probably obtainable from github: https://github.com/allenai/document-qa/tree/master,,,,,TriviaQA,,2000000000.0,"""530k question-document training pairs""

average question length of 14 words and document length of 2895 words, per
 https://www.cs.utexas.edu/~eunsol/files/papers/acl17jcwz.pdf

530,000 * 2895 words on average * 1.33 tokens/word = ~2,000,000,000",1.0,,,,,,"We consider the problem of adapting neural paragraph-level question answering models to the case where entire documents are given as input. Our proposed solution trains models to produce well calibrated confidence scores for their results on individual paragraphs. We sample multiple paragraphs from the documents during training, and use a shared-normalization training objective that encourages the model to produce globally correct output. We combine this method with a state-of-the-art pipeline for training models on document QA data. Experiments demonstrate strong performance on several document QA datasets. Overall, we are able to achieve a score of 71.3 F1 on the web portion of TriviaQA, a large improvement from the 56.7 F1 of the previous best system.",,,,Confident,2024-09-05 18:08:31+00:00,"United States of America,United States of America",,,,,,,,,
PhraseCond,Language,"Carnegie Mellon University (CMU),University of Pittsburgh","Academia,Academia","Rui Liu, Wei Wei, Weiguang Mao, Maria Chikina",2017-10-28,Phase Conductor on Multi-layered Attentions for Machine Comprehension,https://arxiv.org/abs/1710.10504v2,22.0,SOTA improvement,"""We demonstrate the effectiveness of our proposed model PhaseCond on the SQuAD dataset, showing that our model significantly outperforms both state-of-the-art single-layered and multiple-layered attention models.""",,Unclear how many layers they use for self-attention (N) and fusion (L and K). Could calculate if these were known.,,,,,SQuAD 1.1,"from start of section 3: ""This paper focuses on the Stanford Question Answering Dataset (SQuAD) (Rajpurkar et al., 2016) to train and evaluate our model. SQuAD, which has gained a significant attention recently, is a largescale dataset consisting of more than 100,000 questions manually created through crowdsourcing on 536 Wikipedia articles. The dataset is randomly partitioned into a training set (80%), a development set (10%), and a blinded test set (10%).""",90000.0,"10% held out for test, so 100k * 0.9 = 90k",,,,,,,"Attention models have been intensively studied to improve NLP tasks such as machine comprehension via both question-aware passage attention model and self-matching attention model. Our research proposes phase conductor (PhaseCond) for attention models in two meaningful ways. First, PhaseCond, an architecture of multi-layered attention models, consists of multiple phases each implementing a stack of attention layers producing passage representations and a stack of inner or outer fusion layers regulating the information flow. Second, we extend and improve the dot-product attention function for PhaseCond by simultaneously encoding multiple question and passage embedding layers from different perspectives. We demonstrate the effectiveness of our proposed model PhaseCond on the SQuAD dataset, showing that our model significantly outperforms both state-of-the-art single-layered and multiple-layered attention models. We deepen our results with new findings via both detailed qualitative analysis and visualized examples showing the dynamic changes through multi-layered attention models.",,,,Confident,2024-09-23 16:45:29+00:00,"United States of America,United States of America",,,,,,,,,
ProgressiveGAN,Vision,NVIDIA,Industry,"Tero Karras, Timo Aila, Samuli Laine, Jaakko Lehtinen",2017-10-27,"Progressive Growing of GANs for Improved Quality, Stability, and Variation",https://arxiv.org/abs/1710.10196,6778.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:36+00:00,United States of America,,,,,,,,,
CapsNet (MultiMNIST),Vision,Google Brain,Industry,"S Sabour, N Frosst, GE Hinton",2017-10-26,Dynamic Routing Between Capsules,https://arxiv.org/abs/1710.09829,4316.0,Highly cited,,11360000.0,"""This model has 24.56M parameters which is 2 times more parameters
than CapsNet with 11.36M parameters.""",,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:36+00:00,United States of America,,,,,,,,,
CapsNet (MNIST),Vision,Google Brain,Industry,"S Sabour, N Frosst, GE Hinton",2017-10-26,Dynamic Routing Between Capsules,https://arxiv.org/abs/1710.09829,4316.0,Highly cited,,8200000.0,"""In terms of number of parameters the baseline has 35.4M while CapsNet
has 8.2M parameters and 6.8M parameters without the reconstruction subnetwork""",,,,"It should be feasible to estimate this from the information in the paper, but it would require carefully checking the FLOP involved for capsules.",MNIST,,60000.0,Section 5: The dataset has 60K and 10K images for training and testing respectively.,,,,,,,,,,,,2024-11-01 14:02:29+00:00,United States of America,,,,,,,,,
LRSO-GAN,Vision,University of Technology Sydney,Academia,"Zhedong Zheng, Liang Zheng, Yi Yang",2017-10-22,Unlabeled Samples Generated by GAN Improve the Person Re-identification Baseline in vitro,https://arxiv.org/abs/1701.07717,1809.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:29+00:00,Australia,,,,,,,,,
AlphaGo Master,Games,DeepMind,Industry,"D Silver, J Schrittwieser, K Simonyan, I Antonoglou",2017-10-19,Mastering the game of Go without human knowledge,https://www.nature.com/articles/nature24270,8795.0,Highly cited,,,,2.00010000000001e+23,,,"This is a guess. There was no single journal publication that accompanied this model, that gave information about architecture/model training time etc. All I could find was that it has the same architecture as AlphaGo Zero, and that it had roughly the same power consumption as AGZ. See for instance: 
https://deepmind.com/blog/article/alphago-zero-starting-scratch

Since AGZ reaches the ELO of AlphaGo Master in about 25-30 days (60-75% of the total training time), I estimate the compute to be around 60-75% that of AGZ. I round this to 2e23, and I expect this to only be accurate within an OOM.",,,,,,72.0,"""Training started from completely random behaviour and continued without human intervention for approximately three days.""",Google TPU v1,,,"A long-standing goal of artificial intelligence is an algorithm that learns, tabula rasa, superhuman proficiency in challenging domains. Recently, AlphaGo became the first program to defeat a world champion in the game of Go. The tree search in AlphaGo evaluated positions and selected moves using deep neural networks. These neural networks were trained by supervised learning from human expert moves, and by reinforcement learning from self-play. Here we introduce an algorithm based solely on reinforcement learning, without human data, guidance or domain knowledge beyond game rules. AlphaGo becomes its own teacher: a neural network is trained to predict AlphaGo's own move selections and also the winner of AlphaGo's games. This neural network improves the strength of the tree search, resulting in higher quality move selection and stronger self-play in the next iteration. Starting tabula rasa, our new program AlphaGo Zero achieved superhuman performance, winning 100-0 against the previously published, champion-defeating AlphaGo. © 2017 Macmillan Publishers Limited, part of Springer Nature. All rights reserved.",,Unreleased,,,2025-02-19 19:04:52+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
AlphaGo Zero,Games,DeepMind,Industry,"D Silver, J Schrittwieser, K Simonyan, I Antonoglou",2017-10-18,Mastering the game of Go without human knowledge,https://www.nature.com/articles/nature24270,8795.0,Highly cited,,46400244.0,Quick calculation,3.41e+23,,,"source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389


AGZ had two models, one of which was small and another of which was large. The compute for AGZ is for the large model, which has 40 residual blocks instead of 20.

A second way of looking at this... we believe multiple TPUs were used for training. 29 million games * 211 moves per game on average * 0.8 seconds per move = 4.8952E+09 seconds of player-time across all TPUs.

4.8952E+09 seconds of player-time / (40 days * 24 * 60 * 60 seconds of real time) ~= 1,416 players

4 TPUs per player => 4.8952E+09 * 4 = 1.95808E+10 TPU-seconds
Total compute = 1.95808E+10 TPU-seconds * 92E+12 FLOP/(TPU-second) * 0.4 = 7.2e23 FLOP

So similar to the Cotra and Davidson estimate (within a factor of 2).",,,5800000000.0,"""Over the course of training, 29 million games of self-play were generated""

Approx 200 moves per Go game on average

https://homepages.cwi.nl/~aeb/go/misc/gostat.html

Thus 200 * 29e6 = 5.8e9",,480.0,,Google TPU v1,,Self-supervised learning,"A long-standing goal of artificial intelligence is an algorithm that learns, tabula rasa, superhuman proficiency in challenging domains. Recently, AlphaGo became the first program to defeat a world champion in the game of Go. The tree search in AlphaGo evaluated positions and selected moves using deep neural networks. These neural networks were trained by supervised learning from human expert moves, and by reinforcement learning from self-play. Here we introduce an algorithm based solely on reinforcement learning, without human data, guidance or domain knowledge beyond game rules. AlphaGo becomes its own teacher: a neural network is trained to predict AlphaGo's own move selections and also the winner of AlphaGo's games. This neural network improves the strength of the tree search, resulting in higher quality move selection and stronger self-play in the next iteration. Starting tabula rasa, our new program AlphaGo Zero achieved superhuman performance, winning 100-0 against the previously published, champion-defeating AlphaGo. © 2017 Macmillan Publishers Limited, part of Springer Nature. All rights reserved.",,Unreleased,,,2025-02-17 20:35:25+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
AWD-LSTM+WT+Cache+IOG (WT2),Language,NTT Communication Science Laboratories,Industry,"Sho Takase, Jun Suzuki, Masaaki Nagata",2017-09-26,Input-to-Output Gate to Improve RNN Language Models,https://arxiv.org/abs/1709.08907,7.0,SOTA improvement,"""IOG achieves comparable scores to the state-of-the-art on the Penn Treebank
dataset and outperforms the WikiText-2 dataset""",53000000.0,,3310000000000000.0,,,,,,,,5.0,,,,,,"This paper proposes a reinforcing method that refines the output layers of existing Recurrent Neural Network (RNN) language models. We refer to our proposed method as Input-to-Output Gate (IOG). IOG has an extremely simple structure, and thus, can be easily combined with any RNN language models. Our experiments on the Penn Treebank and WikiText-2 datasets demonstrate that IOG consistently boosts the performance of several different types of current topline RNN language models.",AWD-LSTM+WT+Cache+IOG (WT2),Unreleased,,,2024-09-11 15:37:37+00:00,Japan,,,,,,,,,
LSTM + dynamic eval,Language,University of Edinburgh,Academia,"Ben Krause, Emmanuel Kahembwe, Iain Murray, Steve Renals",2017-09-21,Dynamic Evaluation of Neural Sequence Models,https://arxiv.org/abs/1709.07432,131.0,SOTA improvement,"""Dynamic evaluation outperforms existing adaptation approaches in our comparisons. Dynamic evaluation improves the state-of-the-art word-level perplexities on the Penn Treebank and WikiText-2 datasets to 51.1 and 44.3 respectively""",50000000.0,table 2,,,,,WikiText-2,,,,,,,,,,"We present methodology for using dynamic evaluation to improve neural sequence models. Models are adapted to recent history via a gradient descent based mechanism, causing them to assign higher probabilities to re-occurring sequential patterns. Dynamic evaluation outperforms existing adaptation approaches in our comparisons. Dynamic evaluation improves the state-of-the-art word-level perplexities on the Penn Treebank and WikiText-2 datasets to 51.1 and 44.3 respectively, and the state-of-the-art character-level cross-entropies on the text8 and Hutter Prize datasets to 1.19 bits/char and 1.08 bits/char respectively.",LSTM + dynamic eval,Unreleased,,,2024-11-01 14:02:36+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
ISS,Language,"Duke University,Microsoft","Academia,Industry","Wei Wen, Yuxiong He, Samyam Rajbhandari, Minjia Zhang, Wenhan Wang, Fang Liu, Bin Hu, Yiran Chen, Hai Li",2017-09-15,Learning Intrinsic Sparse Structures within Long Short-Term Memory,https://arxiv.org/abs/1709.05027,146.0,SOTA improvement,"""Moreover, ISS learning can find a
smaller RHN model with width 726, meanwhile improve the state-of-the-art perplexity as shown by the second entry in Table 2.""",11100000.000000002,,3400000000000000.0,,,,,,,,55.0,,,,,,"Model compression is significant for the wide adoption of Recurrent Neural Networks (RNNs) in both user devices possessing limited resources and business clusters requiring quick responses to large-scale service requests. This work aims to learn structurally-sparse Long Short-Term Memory (LSTM) by reducing the sizes of basic structures within LSTM units, including input updates, gates, hidden states, cell states and outputs. Independently reducing the sizes of basic structures can result in inconsistent dimensions among them, and consequently, end up with invalid LSTM units. To overcome the problem, we propose Intrinsic Sparse Structures (ISS) in LSTMs. Removing a component of ISS will simultaneously decrease the sizes of all basic structures by one and thereby always maintain the dimension consistency. By learning ISS within LSTM units, the obtained LSTMs remain regular while having much smaller basic structures. Based on group Lasso regularization, our method achieves 10.59x speedup without losing any perplexity of a language modeling of Penn TreeBank dataset. It is also successfully evaluated through a compact model with only 2.69M weights for machine Question Answering of SQuAD dataset. Our approach is successfully extended to non- LSTM RNNs, like Recurrent Highway Networks (RHNs). Our source code is publicly available at this https URL",ISS,Unreleased,,,2024-09-11 15:37:22+00:00,"United States of America,United States of America",,,,,,,,,
PyramidNet,Vision,Korea Advanced Institute of Science and Technology (KAIST),Academia,"Dongyoon Han, Jiwhan Kim, Junmo Kim",2017-09-06,Deep Pyramidal Residual Networks,https://arxiv.org/abs/1610.02915v4,718.0,SOTA improvement,"""In tests using CIFAR-10, CIFAR-100, and ImageNet1k datasets, our PyramidNets outperform all previous state-of-the-art deep network architectures.""",26000000.0,best model had 26M params,2340000000000000.0,,,6ND=6*26000000*50000*300=2.34e+15,"CIFAR-10,CIFAR-100","""Our PyramidNets are trained using backpropagation [15] by Stochastic Gradient Descent (SGD) with Nesterov momentum for 300 epochs on CIFAR-10 and CIFAR-100 datasets.""
"" CIFAR-10 and CIFAR-100 each contain 32×32-pixel color images, consists of 50,000 training images and 10,000 testing images.""",50000.0,,300.0,,,,,,"Deep convolutional neural networks (DCNNs) have shown remarkable performance in image classification tasks in recent years. Generally, deep neural network architectures are stacks consisting of a large number of convolutional layers, and they perform downsampling along the spatial dimension via pooling to reduce memory usage. Concurrently, the feature map dimension (i.e., the number of channels) is sharply increased at downsampling locations, which is essential to ensure effective performance because it increases the diversity of high-level attributes. This also applies to residual networks and is very closely related to their performance. In this research, instead of sharply increasing the feature map dimension at units that perform downsampling, we gradually increase the feature map dimension at all units to involve as many locations as possible. This design, which is discussed in depth together with our new insights, has proven to be an effective means of improving generalization ability. Furthermore, we propose a novel residual unit capable of further improving the classification accuracy with our new network architecture. Experiments on benchmark CIFAR-10, CIFAR-100, and ImageNet datasets have shown that our network architecture has superior generalization ability compared to the original residual networks. Code is available at this https URL}",,Open weights (unrestricted),,Likely,2025-02-17 17:41:23+00:00,Korea (Republic of),,,,,,,,,
SENet (ImageNet),Vision,"Chinese Academy of Sciences,University of Oxford","Academia,Academia","Jie Hu, Li Shen, Samuel Albanie, Gang Sun, Enhua Wu",2017-09-05,Squeeze-and-Excitation Networks,https://arxiv.org/abs/1709.01507,23150.0,Highly cited,,28100000.0,Table 16,,,,,ImageNet,,,,,,,,,,,,,,,2024-11-01 14:02:36+00:00,"China,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
GL-LWGC-AWD-MoS-LSTM + dynamic evaluation (WT2),Language,Ben-Gurion University of the Negev,Academia,"Ziv Aharoni, Gal Rattner, Haim Permuter",2017-08-29,Gradual Learning of Recurrent Neural Networks,https://arxiv.org/abs/1708.08863,4.0,SOTA improvement,"""Our GL-LSTM model
overcame the state-of-the-art results with only two layers and 19M parameters, and further improved
the state-of-the-art results with the third layer phase""",38000000.0,,4.74e+17,,,,WikiText-2,,,,1000.0,,,,,,"Recurrent Neural Networks (RNNs) achieve state-of-the-art results in many sequence-to-sequence modeling tasks. However, RNNs are difficult to train and tend to suffer from overfitting. Motivated by the Data Processing Inequality (DPI), we formulate the multi-layered network as a Markov chain, introducing a training method that comprises training the network gradually and using layer-wise gradient clipping. We found that applying our methods, combined with previously introduced regularization and optimization methods, resulted in improvements in state-of-the-art architectures operating in language modeling tasks.",GL-LWGC-AWD-MoS-LSTM + dynamic evaluation (WT2),Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
NMM(LSTM+RNN),Language,Saarland University,Academia,"Youssef Oualil, Dietrich Klakow",2017-08-23,A Neural Network Approach for Mixing Language Models,https://arxiv.org/abs/1708.06989,10.0,,,5180000.0,,,,,,,,,,,,,,,,"The performance of Neural Network (NN)-based language models is steadily improving due to the emergence of new architectures, which are able to learn different natural language characteristics. This paper presents a novel framework, which shows that a significant improvement can be achieved by combining different existing heterogeneous models in a single architecture. This is done through 1) a feature layer, which separately learns different NN-based models and 2) a mixture layer, which merges the resulting model features. In doing so, this architecture benefits from the learning capabilities of each model with no noticeable increase in the number of model parameters or the training time. Extensive experiments conducted on the Penn Treebank (PTB) and the Large Text Compression Benchmark (LTCB) corpus showed a significant reduction of the perplexity when compared to state-of-the-art feedforward as well as recurrent neural network architectures.",NMM(LSTM+RNN),Unreleased,,,2024-09-05 18:08:31+00:00,Germany,,,,,,,,,
D-LSRC(200)+KN5,Language,Saarland University,Academia,"Youssef Oualil, Mittul Singh, Clayton Greenberg, Dietrich Klakow",2017-08-22,Long-Short Range Context Neural Networks for Language Modeling,https://arxiv.org/abs/1708.06555,19.0,,,7160000.0,,,,,,Penn TreeBank,,,,,,,,,,"The goal of language modeling techniques is to capture the statistical and structural properties of natural languages from training corpora. This task typically involves the learning of short range dependencies, which generally model the syntactic properties of a language and/or long range dependencies, which are semantic in nature. We propose in this paper a new multi-span architecture, which separately models the short and long context information while it dynamically merges them to perform the language modeling task. This is done through a novel recurrent Long-Short Range Context (LSRC) network, which explicitly models the local (short) and global (long) context using two separate hidden states that evolve in time. This new architecture is an adaptation of the Long-Short Term Memory network (LSTM) to take into account the linguistic properties. Extensive experiments conducted on the Penn Treebank (PTB) and the Large Text Compression Benchmark (LTCB) corpus showed a significant reduction of the perplexity when compared to state-of-the-art language modeling techniques.",D-LSRC(200)+KN5,Unreleased,,,2024-09-05 18:08:31+00:00,Germany,,,,,,,,,
Libratus,Games,Carnegie Mellon University (CMU),Academia,"N Brown, T Sandholm, S Machine",2017-08-19,Libratus: The Superhuman AI for No-Limit Poker,https://www.ijcai.org/proceedings/2017/0772.pdf,97.0,SOTA improvement,Claims to be first ML system to reach superhuman level at No Limit Poker Texas Hold Em,,,5.51e+20,,,"""In total, Libratus used about 25 million core hours. Of those, about 13 million core hours were used for exploratory experiments and evaluation. About 6 million core hours were spent on the initial abstraction and equilibrium finding component, another 3 million were used for nested subgame solving, and about 3 million were used on the self-improvement algorithm.""

""Like many data-centric supercomputers, Bridges offers a relatively a modest number of FLOPS, but lots of memory: 895 teraflops and 130 TB, respectively.""

I just used the first bullet point (as those are usually independent systems and you only benchmark one of them).
The first system has 752 nodes a 2CPUs a 14cores each.

source: https://www.top500.org/news/bridges-supercomputer-boots-up-at-pittsburgh/



1. 12M core hours for 196 cores
2. We have  895 TFLOPS for 752 nodes a 2 CPUs a 14 cores
2.1 That's 42.5 GFLOPS per core.
3. Running this for 12M h
3.1 12 * 10^6 * 60 * 60 * 42.5 * 10^9 FLOP/S = 1.823e21 FLOPs
4. Assuming 30% utilization
 1.823e21 * 0.3
→ 5.51e20 FLOPs",,,,,,,"""In total, Libratus used about 25 million core hours. Of those, about 13 million core hours were used for exploratory experiments and evaluation. About 6 million core hours were spent on the initial abstraction and equilibrium finding component, another 3 million were used for nested subgame solving, and about 3 million were used on the self-improvement algorithm.""",,,,"No-limit Texas Hold’em is the most popular variant of poker in the world. Heads-up no-limit Texas Hold’em is the main benchmark challenge for AI in imperfect-information games. We present Libratus, the first—and so far only—AI to defeat top human professionals in that game. Libratus’s architecture features three main modules, each of which has new algorithms: pre-computing a solution to an abstraction of the game which provides a high-level blueprint for the strategy of the AI, a new nested subgame-solving algorithm which repeatedly calculates a more detailed strategy as play progresses, and a self-improving module which augments the pre-computed blueprint over time.",,Unreleased,,,2025-02-18 15:55:15+00:00,United States of America,,,,,,,,,
GRU + p-tHSM (pretrain via Brown) (WT103),Language,"Beihang University,University of Montreal / Université de Montréal,Chongqing University","Academia,Academia,Academia","Nan Jiang, Wenge Rong, Min Gao, Yikang Shen, Zhang Xiong",2017-08-19,Exploration of Tree-based Hierarchical Softmax for Recurrent Language Models,https://www.ijcai.org/proceedings/2017/271,6.0,,,206000000.0,,,,,,WikiText-103,,,,,,,,,,"Recently, variants of neural networks for computational linguistics have been proposed and successfully applied to neural language modeling and neural machine translation. These neural models can leverage knowledge from massive corpora but they are extremely slow as they predict candidate words from a large vocabulary during training and inference. As an alternative to gradient approximation and softmax with class decomposition, we explore the tree-based hierarchical softmax method and reform its architecture, making it compatible with modern GPUs and introducing a compact tree-based loss function. When combined with several word hierarchical clustering algorithms, improved performance is achieved in language modelling task with intrinsic evaluation criterions on PTB, WikiText-2 and WikiText-103 datasets.",GRU + p-tHSM (pretrain via Brown) (WT103),Unreleased,,,2024-09-05 18:08:31+00:00,"China,Canada,China",,,,,,,,,
Adversarial Joint Adaptation Network (ResNet),Vision,"Tsinghua University,University of California (UC) Berkeley","Academia,Academia","Mingsheng Long, Han Zhu, Jianmin Wang, Michael I. Jordan",2017-08-17,Deep Transfer Learning with Joint Adaptation Networks,https://arxiv.org/abs/1605.06636,2482.0,Highly cited,,60000000.0,"Model is based on ResNet (60m params), might have more parameters though

""We implement all deep methods based on the Caffe framework, and fine-tune from Caffe-provided models of AlexNet (Krizhevsky et al., 2012) and ResNet (He et al., 2016), both are pre-trained on the ImageNet 2012 dataset.""",,,,,"Office-31,ILSVRC 2012 subset of ImageNet","""Office-31 (Saenko et al., 2010) is a standard benchmark for
domain adaptation in computer vision, comprising 4,652
images and 31 categories collected from three distinct domains: Amazon (A), which contains images downloaded
from amazon.com, Webcam (W) and DSLR (D)... We evaluate all
methods across three transfer tasks A → W, D → W and W
→ D, which are widely adopted by previous deep transfer
learning methods""

""We implement all deep methods based on the Caffe framework, and fine-tune from Caffe-provided models of AlexNet
(Krizhevsky et al., 2012) and ResNet (He et al., 2016), both
are pre-trained on the ImageNet 2012 dataset.""",4652.0,,,,,,,,"Deep networks have been successfully applied to learn transferable features for adapting models from a source domain to a different target domain. In this paper, we present joint adaptation networks (JAN), which learn a transfer network by aligning the joint distributions of multiple domain-specific layers across domains based on a joint maximum mean discrepancy (JMMD) criterion. Adversarial training strategy is adopted to maximize JMMD such that the distributions of the source and target domains are made more distinguishable. Learning can be performed by stochastic gradient descent with the gradients computed by back-propagation in linear-time. Experiments testify that our model yields state of the art results on standard datasets.",,,,Speculative,2025-01-21 18:55:45+00:00,"China,United States of America",,,,,,,,,
NeuMF (Pinterest),Recommendation,"Shandong University,Texas A&M,National University of Singapore,Columbia University","Academia,Academia,Academia,Academia","X He, L Liao, H Zhang, L Nie, X Hu",2017-08-16,Neural Collaborative Filtering,https://arxiv.org/abs/1708.05031,5427.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:29+00:00,"China,United States of America,Singapore,United States of America",,,,,,,,,
Cutout-regularized net,Vision,"University of Guelph,Vector Institute,CIFAR AI Research","Academia,Academia,Research collective"," Terrance DeVries, Graham W. Taylor",2017-08-15,Improved Regularization of Convolutional Neural Networks with Cutout,https://arxiv.org/abs/1708.04552,3446.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:36+00:00,"Canada,Canada,Canada",,,,,,,,,
EI-REHN-1000D,Language,Korea Advanced Institute of Science and Technology (KAIST),Academia,"Hyunsin Park, Chang D. Yoo",2017-08-14,Early Improving Recurrent Elastic Highway Network,https://arxiv.org/abs/1708.04116,6.0,SOTA improvement,"""The proposed networks showed better performance than other state-of-the-art recurrent networks in all three experiments.""",19000000.0,,1.06e+16,,,,,,,,100.0,,,,,,"To model time-varying nonlinear temporal dynamics in sequential data, a recurrent network capable of varying and adjusting the recurrence depth between input intervals is examined. The recurrence depth is extended by several intermediate hidden state units, and the weight parameters involved in determining these units are dynamically calculated. The motivation behind the paper lies on overcoming a deficiency in Recurrent Highway Networks and improving their performances which are currently at the forefront of RNNs: 1) Determining the appropriate number of recurrent depth in RHN for different tasks is a huge burden and just setting it to a large number is computationally wasteful with possible repercussion in terms of performance degradation and high latency. Expanding on the idea of adaptive computation time (ACT), with the use of an elastic gate in the form of a rectified exponentially decreasing function taking on as arguments as previous hidden state and input, the proposed model is able to evaluate the appropriate recurrent depth for each input. The rectified gating function enables the most significant intermediate hidden state updates to come early such that significant performance gain is achieved early. 2) Updating the weights from that of previous intermediate layer offers a richer representation than the use of shared weights across all intermediate recurrence layers. The weight update procedure is just an expansion of the idea underlying hypernetworks. To substantiate the effectiveness of the proposed network, we conducted three experiments: regression on synthetic data, human activity recognition, and language modeling on the Penn Treebank dataset. The proposed networks showed better performance than other state-of-the-art recurrent networks in all three experiments.",EI-REHN-1000D,Unreleased,,,2024-09-05 18:08:31+00:00,Korea (Republic of),,,,,,,,,
OpenAI TI7 DOTA 1v1,Games,OpenAI,Industry,,2017-08-11,Dota 2,https://openai.com/research/dota-2,,"Historical significance,SOTA improvement",,,"Section 4 states: ""we used a model with over 150 million parameters"" but this is for the 5v5 agent, not the 1v1.",6.046095222592002e+20,,,Extracted from AI and Compute (https://openai.com/blog/ai-and-compute/) charts by using https://automeris.io/WebPlotDigitizer/.,,,,,,,,,,,"We’ve created a bot which beats the world’s top professionals at 1v1 matches of Dota 2 under standard tournament rules. The bot learned the game from scratch by self-play, and does not use imitation learning or tree search. This is a step towards building AI systems which accomplish well-defined goals in messy, complicated situations involving real humans.",,,,,2025-02-17 19:33:50+00:00,United States of America,,,,,,,,,
RetinaNet-R50,Vision,Facebook AI Research,Industry,"TY Lin, P Goyal, R Girshick, K He",2017-08-07,Focal loss for dense object detection,https://arxiv.org/abs/1708.02002,16437.0,Highly cited,,34000000.0,source: table 2 in https://arxiv.org/pdf/1911.09070.pdf,,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
RetinaNet-R101,Vision,Facebook AI Research,Industry,"TY Lin, P Goyal, R Girshick, K He, P Dollar",2017-08-07,Focal loss for dense object detection,https://arxiv.org/abs/1708.02002,16437.0,Highly cited,,53000000.0,source: table 2 in https://arxiv.org/pdf/1911.09070.pdf,2.065392e+18,,,"""We use synchronized SGD over 8 GPUs with a total of 16 images per minibatch (2 images per GPU). Unless otherwise specified, all models are trained for 90k iterations with an initial learning rate of 0.01, which is then divided by 10 at 60k and again at 80k iterations. We use horizontal image flipping as the only form of data augmentation unless otherwise noted. Weight decay of 0.0001 and momentum of 0.9 are used. The training loss is the sum the focal loss and the standard smooth L1 loss used for box regression [10]. Training time ranges between 10 and 35 hours for the models in Table 1e.""

NVIDIA M40 GPU

35*60**2*0.3*8*6.83E+12 = 2.07e18",COCO,,135000.0,trainval135k split,,35.0,"""We use synchronized SGD over 8 GPUs with a total of 16 images per minibatch (2 images per GPU). Unless otherwise specified, all models are trained for 90k iterations with an initial learning rate of 0.01, which is then divided by 10 at 60k and again at 80k iterations. We use horizontal image flipping as the only form of data augmentation unless otherwise noted. Weight decay of 0.0001 and momentum of 0.9 are used. The training loss is the sum the focal loss and the standard smooth L1 loss used for box regression [10]. Training time ranges between 10 and 35 hours for the models in Table 1e.""

NVIDIA M40 GPU

35*60**2*0.3*8*6.83E+12 = 2.07e18",NVIDIA M40,8.0,,,,,,,2025-02-19 17:47:51+00:00,United States of America,,,,,,,,,
AWD-LSTM - 3-layer LSTM (tied) + continuous cache pointer (WT2),Language,Salesforce Research,Industry,"Stephen Merity, Nitish Shirish Keskar, Richard Socher",2017-08-07,Regularizing and Optimizing LSTM Language Models,https://arxiv.org/abs/1708.02182,1176.0,"Highly cited,SOTA improvement","""we achieve an even lower state-of-the-art perplexity of 52.8 on Penn Treebank and 52.0 on WikiText-2.""",33000000.0,,3.09e+17,,,,WikiText-2,,,,750.0,,,,,,"Recurrent neural networks (RNNs), such as long short-term memory networks (LSTMs), serve as a fundamental building block for many sequence learning tasks, including machine translation, language modeling, and question answering. In this paper, we consider the specific problem of word-level language modeling and investigate strategies for regularizing and optimizing LSTM-based models. We propose the weight-dropped LSTM which uses DropConnect on hidden-to-hidden weights as a form of recurrent regularization. Further, we introduce NT-ASGD, a variant of the averaged stochastic gradient method, wherein the averaging trigger is determined using a non-monotonic condition as opposed to being tuned by the user. Using these and other regularization strategies, we achieve state-of-the-art word level perplexities on two data sets: 57.3 on Penn Treebank and 65.8 on WikiText-2. In exploring the effectiveness of a neural cache in conjunction with our proposed model, we achieve an even lower state-of-the-art perplexity of 52.8 on Penn Treebank and 52.0 on WikiText-2.",AWD-LSTM - 3-layer LSTM (tied) + continuous cache pointer (WT2),Unreleased,,,2024-09-25 17:14:55+00:00,United States of America,,,,,,,,,
GSM,Language,"Peking University,Microsoft Research","Academia,Industry","Wenhui Wang, Nan Yang, Furu Wei, Baobao Chang, Ming Zhou",2017-07-30,Gated Self-Matching Networks for Reading Comprehension and Question Answering,https://aclanthology.org/P17-1018/,806.0,SOTA improvement,"""At the time of submission of the paper, our model holds the first place on the SQuAD leaderboard for both single and ensemble model.""",,It could be possible to estimate it from section 3.,,,,,SQuAD,"""We specially focus on the SQuAD dataset to train and evaluate our model, """,4000000.0,"from https://paperswithcode.com/dataset/squad SQuAD have 107,785 question-answer pairs
download-ed dataset from: https://www.kaggle.com/datasets/stanfordu/stanford-question-answering-dataset?resource=download
wc -w on train-v.1.1 returns 4017471 words so around 4M words",,,,,,,"In this paper, we present the gated self-matching networks for reading comprehension style question answering, which aims to answer questions from a given passage. We first match the question and passage with gated attention-based recurrent networks to obtain the question-aware passage representation. Then we propose a self-matching attention mechanism to refine the representation by matching the passage against itself, which effectively encodes information from the whole passage. We finally employ the pointer networks to locate the positions of answers from the passages. We conduct extensive experiments on the SQuAD dataset. The single model achieves 71.3% on the evaluation metrics of exact match on the hidden test set, while the ensemble model further boosts the results to 75.9%. At the time of submission of the paper, our model holds the first place on the SQuAD leaderboard for both single and ensemble model.",,,,Likely,2024-09-05 18:08:31+00:00,"China,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
ConvS2S (ensemble of 8 models),Language,Meta AI,Industry,"Jonas Gehring, Michael Auli, David Grangier, Denis Yarats, Yann N. Dauphin",2017-07-25,Convolutional Sequence to Sequence Learning,https://arxiv.org/abs/1705.03122,,"Highly cited,SOTA improvement","""We achieve a new state of the art on several public translation benchmark data sets. On the WMT’16 EnglishRomanian task we outperform the previous best result by 1.9 BLEU, on WMT’14 English-French translation we improve over the LSTM model of Wu et al. (2016) by 1.6 BLEU in a comparable setting, and on WMT’14 EnglishGerman translation we ouperform the same model by 0.5
BLEU""",,,5.64e+19,5.65000000001e+19,,"All models are implemented in Torch (Collobert et al., 2011) and trained on a single Nvidia M40 GPU except for WMT’14 English-French for which we use a multi-GPU setup on a single
machine. We train on up to eight GPUs synchronously by
maintaining copies of the model on each card and split the
batch so that each worker computes 1/8-th of the gradients;
at the end we sum the gradients via Nvidia NCCL.

1. English-Romanian: ""Training took between 6 and 7.5 days on a single GPU.""
7 days * 24 * 3600 * 6.8e12 FLOP/s (Nvidia M40, fp32) * 0.3 = 1.2e18 FLOP

2. English-German: "" We trained this model on a single GPU over a
period of 18.5 days with a batch size of 48"".
18.5 days * 24 * 3600 * 6.8e12 FLOP/s (Nvidia M40, fp32) * 0.3 = 3.3e18 FLOP

3. English-French: ""Our results are based on training
with 8 GPUs for about 37 days and batch size 32 on each
worker.6 ""
37 days * 24 * 3600 * 8 * 6.8e12 FLOP/s (Nvidia M40, fp32) * 0.3 = 5.2e19 FLOP

the minimum compute needed to train ensemble model: 1.2e18 FLOP + 3.3e18 FLOP + 5.2e19 FLOP = 5.65e19 FLOP

I am not sure how much to add more (they say ensemble model consists of 8 models), probably summarization training takes at least 1.2e18 FLOP more. 

","WMT English-German,WMT14,Gigaword",,46600000.0," 2.8M + 4.5M + 35.5M + 3.8M = 46.6M

We consider three major WMT translation tasks as well as
a text summarization task.

WMT’16 English-Romanian. We use the same data and pre-processing as Sennrich et al. (2016b) but remove sentences with more than 175 words. This results in 2.8M sentence pairs for training and we evaluate on newstest2016.2

WMT’14 English-German. We use the same setup as Luong et al. (2015) which comprises 4.5M sentence pairs for training and we test on newstest2014.

WMT’14 English-French. We use the full training set of
36M sentence pairs, and remove sentences longer than 175
words as well as pairs with a source/target length ratio exceeding 1.5. This results in 35.5M sentence-pairs for training.

Abstractive summarization. We train on the Gigaword
corpus (Graff et al., 2003) and pre-process it identically
to Rush et al. (2015) resulting in 3.8M training examples
and 190K for validation.",,,,NVIDIA M40,,,"The prevalent approach to sequence to sequence learning maps an input sequence to a variable length output sequence via recurrent neural networks. We introduce an architecture based entirely on convolutional neural networks. Compared to recurrent models, computations over all elements can be fully parallelized during training and optimization is easier since the number of non-linearities is fixed and independent of the input length. Our use of gated linear units eases gradient propagation and we equip each decoder layer with a separate attention module. We outperform the accuracy of the deep LSTM setup of Wu et al. (2016) on both WMT'14 English-German and WMT'14 English-French translation at an order of magnitude faster speed, both on GPU and CPU.",,,,Likely,2025-02-17 17:42:56+00:00,United States of America,,,,,,,,,
NASNet-A,Vision,Google Brain,Industry,"B Zoph, V Vasudevan, J Shlens",2017-07-21,Learning Transferable Architectures for Scalable Image Recognition,https://arxiv.org/abs/1707.07012,5306.0,Highly cited,,89000000.0,,,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:28+00:00,United States of America,,,,,,,,,
PSPNet,Vision,Chinese University of Hong Kong (CUHK),Academia,"Hengshuang Zhao, Jianping Shi, Xiaojuan Qi, Xiaogang Wang, Jiaya Jia",2017-07-21,Pyramid Scene Parsing Network,https://ieeexplore.ieee.org/document/8100143,10876.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:36+00:00,"Hong Kong,China",,,,,,,,,
Densely Connected LSTM + Var. Dropout,Language,Ghent University,Academia,"Fréderic Godin, Joni Dambre, Wesley De Neve",2017-07-19,Improving Language Modeling using Densely Connected Recurrent Neural Networks,https://arxiv.org/abs/1707.06130,7.0,,,23000000.0,,1.28e+16,,,,,,,,100.0,,,,,,"In this paper, we introduce the novel concept of densely connected layers into recurrent neural networks. We evaluate our proposed architecture on the Penn Treebank language modeling task. We show that we can obtain similar perplexity scores with six times fewer parameters compared to a standard stacked 2-layer LSTM model trained with dropout (Zaremba et al. 2014). In contrast with the current usage of skip connections, we show that densely connecting only a few stacked layers with skip connections already yields significant perplexity reductions.",Densely Connected LSTM + Var. Dropout,Unreleased,,,2024-09-05 18:08:31+00:00,Belgium,,,,,,,,,
AWD-LSTM,Language,"DeepMind,University of Oxford","Industry,Academia","Gábor Melis, Chris Dyer, Phil Blunsom",2017-07-18,On the State of the Art of Evaluation in Neural Language Models,https://arxiv.org/abs/1707.05589,555.0,SOTA improvement,"""We establish a new state of the art on the Penn Treebank and Wikitext-2 corpora""",24000000.0,,,,,,WikiText-2,,,,,,,,,,"Ongoing innovations in recurrent neural network architectures have provided a steady influx of apparently state-of-the-art results on language modelling benchmarks. However, these have been evaluated using differing code bases and limited computational resources, which represent uncontrolled sources of experimental variation. We reevaluate several popular architectures and regularisation methods with large-scale automatic black-box hyperparameter tuning and arrive at the somewhat surprising conclusion that standard LSTM architectures, when properly regularised, outperform more recent models. We establish a new state of the art on the Penn Treebank and Wikitext-2 corpora, as well as strong baselines on the Hutter Prize dataset.",AWD-LSTM,Unreleased,,,2024-09-05 18:08:31+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
JFT,Vision,"Google Research,Carnegie Mellon University (CMU)","Industry,Academia","Chen Sun, Abhinav Shrivastava, Saurabh Singh, Abhinav Gupta",2017-07-10,Revisiting Unreasonable Effectiveness of Data in Deep Learning Era.,https://arxiv.org/abs/1707.02968,2194.0,Highly cited,,44654504.0,"Uses ResNet-101 architecture, which has 44,654,504 parameters:
https://resources.wolframcloud.com/NeuralNetRepository/resources/ResNet-101-Trained-on-ImageNet-Competition-Data/",8.43e+20,,,"Tesla K80 performance: 8.13 TFLOP/s

Assume 40% utilization

60 days * 50 GPUs * 40% utilization * 8.13 TFLOP/s/GPU = 8.43*10^20 FLOP",JFT-300M,,300000000.0,,4.0,1440.0,,NVIDIA Tesla K80,50.0,,"The success of deep learning in vision can be attributed to: (a) models with high capacity; (b) increased computational power; and (c) availability of large-scale labeled data. Since 2012, there have been significant advances in representation capabilities of the models and computational capabilities of GPUs. But the size of the biggest dataset has surprisingly remained constant. What will happen if we increase the dataset size by 10x or 100x? This paper takes a step towards clearing the clouds of mystery surrounding the relationship between `enormous data' and visual deep learning. By exploiting the JFT-300M dataset which has more than 375M noisy labels for 300M images, we investigate how the performance of current vision tasks would change if this data was used for representation learning. Our paper delivers some surprising (and some expected) findings. First, we find that the performance on vision tasks increases logarithmically based on volume of training data size. Second, we show that representation learning (or pre-training) still holds a lot of promise. One can improve performance on many vision tasks by just training a better base model. Finally, as expected, we present new state-of-the-art results for different vision tasks including image classification, object detection, semantic segmentation and human pose estimation. Our sincere hope is that this inspires vision community to not undervalue the data and develop collective efforts in building larger datasets.",,,,Confident,2025-02-17 17:43:01+00:00,"Multinational,United States of America,United States of America",,,,,,,32.0,,
ShuffleNet v1,Vision,Megvii Inc,Industry,"X Zhang, X Zhou, M Lin, J Sun",2017-07-03,ShuffleNet: An Extremely Efficient Convolutional Neural Network for Mobile Devices,https://arxiv.org/abs/1707.01083,6137.0,Highly cited,,2430000.0,,,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:28+00:00,China,,,,,,,,,
NoisyNet-Dueling,Games,DeepMind,Industry,"M Fortunato, MG Azar, B Piot, J Menick",2017-06-30,Noisy Networks for Exploration,https://arxiv.org/abs/1706.10295v3,851.0,SOTA improvement,,,,,,,,,,,,,,,,,,,,Unreleased,,Unknown,2024-11-01 14:02:36+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
DeepLabV3,Vision,Google,Industry,"Liang-Chieh Chen, Yukun Zhu, George Papandreou, Florian Schroff, Hartwig Adam",2017-06-17,Rethinking Atrous Convolution for Semantic Image Segmentation,https://arxiv.org/abs/1706.05587,7689.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:36+00:00,United States of America,,,,,,,,,
HRA,Games,"Maluuba,Microsoft","Industry,Industry","H Van Seijen, M Fatemi, J Romoff, R Laroche",2017-06-13,Hybrid Reward Architecture for Reinforcement Learning,https://arxiv.org/abs/1706.04208,243.0,SOTA improvement,"""With the best combination, HRA not only outperforms the state-of-the-art on both metrics, it
also significantly outperforms the human score, convincingly demonstrating the strength of HRA.""",,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:36+00:00,"Canada,United States of America",,,,,,,,,
Transformer,Language,"Google Research,Google Brain","Industry,Industry","Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz Kaiser, Illia Polosukhin",2017-06-12,Attention Is All You Need,https://proceedings.neurips.cc/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf,108604.0,"Highly cited,Historical significance",The original transformer,213000000.0,"This page suggests the transformer has 213M parameters.

""Although there are others architectures that make use of attention layers, none achieves so good results so fast. Not only that, but the only model that can compite against Transformer is the Slicenet22, proposed just fifteen days before. It takes much longer to train, due to the huge amount of parameters it requires (348 million against the 213 millions of Transformer), and the BLEU scores it achieves are slightly worse on average. In short, up to date it offers no profit over Transformer.""

https://ricardokleinklein.github.io/2017/11/16/Attention-is-all-you-need.html",7.4245248e+18,,,"""The model was trained during 300000 steps, roughly 3.5 days, using 8 NVIDIA P100 GPUs.""

source: https://ricardokleinklein.github.io/2017/11/16/Attention-is-all-you-need.html

NVIDIA Tesla P100 has 9.3 teraFLOPS single-precision performance

source: https://www.nvidia.com/en-gb/data-center/tesla-p100/

We assume 0.33 utilization performance, in line with OpenAI's ""AI and compute"" article

source: https://openai.com/blog/ai-and-compute/","WMT English-German,WMT14",,1866666666.6666667,"""We trained on the standard WMT 2014 English-German dataset consisting of about 4.5 million sentence pairs. Sentences were encoded using byte-pair encoding [3], which has a shared source-target vocabulary of about 37000 tokens. For English-French, we used the significantly larger WMT 2014 English-French dataset consisting of 36M sentences and split tokens into a 32000 word-piece vocabulary ""

In total, this is 40.5 million sentence-pairs. Assuming each sentence pair is 15-20 words in each language, this is 1.2-1.6 billion words.

Convert to tokens: 1.4B * 4/3 = 1.87B tokens",3.0,84.0,"We trained our models on one machine with 8 NVIDIA P100 GPUs. For our base models using
the hyperparameters described throughout the paper, each training step took about 0.4 seconds. We trained the base models for a total of 100,000 steps or 12 hours. For our big models,(described on the
bottom line of table 3), step time was 1.0 seconds. The big models were trained for 300,000 steps
(3.5 days).",NVIDIA P100,8.0,Self-supervised learning,,,Unreleased,,Confident,2025-02-17 17:43:10+00:00,"Multinational,United States of America,United States of America",,,,,,,,,
EDSR,"Vision,Image generation",Seoul National University,Academia,"Bee Lim, Sanghyun Son, Heewon Kim, Seungjun Nah, Kyoung Mu Lee",2017-06-10,Enhanced Deep Residual Networks for Single Image Super-Resolution,https://arxiv.org/abs/1707.02921,5348.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:28+00:00,Korea (Republic of),,,,,,,,,
Reading Twice for NLU,Language,DeepMind,Industry,"Dirk Weissenborn, Tomáš Kočiský, Chris Dyer",2017-06-08,Dynamic Integration of Background Knowledge in Neural NLU Systems,https://arxiv.org/abs/1706.02596v3,62.0,SOTA improvement,"""Our results are competi-
tive with the best systems, achieving a new state
of the art on the recent TriviaQA benchmarks.""",,,,,,,"TriviaQA,SQuAD","""We use 2 recent DQA
benchmark training and evaluation datasets,
SQuAD (Rajpurkar et al., 2016) and TriviaQA
(Joshi et al., 2017). """,,"both datasets have around 100k training examples.
SQuAD have around 4M words. TriviaQA is larger
""We use 2 recent DQAbenchmark training and evaluation datasets,
SQuAD (Rajpurkar et al., 2016) and TriviaQA
(Joshi et al., 2017). """,,,,,,,"Common-sense and background knowledge is required to understand natural language, but in most neural natural language understanding (NLU) systems, this knowledge must be acquired from training corpora during learning, and then it is static at test time. We introduce a new architecture for the dynamic integration of explicit background knowledge in NLU models. A general-purpose reading module reads background knowledge in the form of free-text statements (together with task-specific text inputs) and yields refined word representations to a task-specific NLU architecture that reprocesses the task inputs with these representations. Experiments on document question answering (DQA) and recognizing textual entailment (RTE) demonstrate the effectiveness and flexibility of the approach. Analysis shows that our model learns to exploit knowledge in a semantically appropriate way. ",,,,Unknown,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
PointNet++,3D modeling,Stanford University,Academia,"Charles R. Qi, Li Yi, Hao Su, Leonidas J. Guibas",2017-06-07,PointNet++: Deep Hierarchical Feature Learning on Point Sets in a Metric Space,https://arxiv.org/abs/1706.02413,9565.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:36+00:00,United States of America,,,,,,,,,
Inflated 3D ConvNet,3D modeling,"DeepMind,University of Oxford","Industry,Academia","Joao Carreira, Andrew Zisserman",2017-06-01,"Quo Vadis, Action Recognition? A New Model and the Kinetics Dataset",https://arxiv.org/abs/1705.07750,7325.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:29+00:00,"United Kingdom of Great Britain and Northern Ireland,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
SRGAN,"Vision,Image generation",Twitter,Industry,"Christian Ledig, Lucas Theis, Ferenc Huszar, Jose Caballero, Andrew Cunningham, Alejandro Acosta, Andrew Aitken, Alykhan Tejani, Johannes Totz, Zehan Wang, Wenzhe Shi",2017-05-25,Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network,https://openaccess.thecvf.com/content_cvpr_2017/html/Ledig_Photo-Realistic_Single_Image_CVPR_2017_paper.html,11032.0,Highly cited,,,,,,,,,,,,,,,,,,,,Unreleased,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Low-Cost Collaborative Network,Vision,"National University of Singapore,University of Technology Sydney,Qihoo 360 AI Institute","Academia,Academia,Industry","Xuanyi Dong, Junshi Huang, Yi Yang, and Shuicheng Yan",2017-05-15,More is Less: A More Complicated Network with Less Inference Complexity,https://arxiv.org/abs/1703.08651,275.0,,,,,,,,Seems to suggest 400 epochs were used for CIFAR experiments.,"CIFAR-10,CIFAR-100,ImageNet",,1280000.0,,400.0,,,,,,"In this paper, we present a novel and general network structure towards accelerating the inference process of convolutional neural networks, which is more complicated in
network structure yet with less inference complexity. The
core idea is to equip each original convolutional layer
with another low-cost collaborative layer (LCCL), and the
element-wise multiplication of the ReLU outputs of these
two parallel layers produces the layer-wise output. The
combined layer is potentially more discriminative than the
original convolutional layer, and its inference is faster for
two reasons: 1) the zero cells of the LCCL feature maps will
remain zero after element-wise multiplication, and thus it is
safe to skip the calculation of the corresponding high-cost
convolution in the original convolutional layer; 2) LCCL
is very fast if it is implemented as a 1 × 1 convolution or
only a single filter shared by all channels. Extensive experiments on the CIFAR-10, CIFAR-100 and ILSCRC-2012
benchmarks show that our proposed network structure can
accelerate the inference process by 32% on average with
negligible performance drop.",,,,Speculative,2024-11-01 14:02:28+00:00,"Singapore,Australia,China",,,,,,,,,
Mnemonic Reader,Language,"Fudan University,Microsoft Research","Academia,Industry","Minghao Hu, Yuxing Peng, Zhen Huang, Xipeng Qiu, Furu Wei, Ming Zhou",2017-05-08,Reinforced Mnemonic Reader for Machine Reading Comprehension,https://arxiv.org/abs/1705.02798v6,217.0,SOTA improvement,"from the abstract "" Extensive experiments on the Stanford Question Answering Dataset (SQuAD) show that our model achieves state-of-the-art results. Meanwhile, our model outperforms previous systems by over 6% in terms of both Exact Match and F1 metrics on two adversarial SQuAD datasets. """,,may be possible to estimate architecture description,,,,may be possible to estimate from architecture description,SQuAD,"at the start of section 5.1 Implementation Details (page 5) ""We mainly focus on the SQuAD dataset [Rajpurkar et al.,2016] to train and evaluate our model""",107785.0,size of SQuAD,,,,,,,"In this paper, we introduce the Reinforced Mnemonic Reader for machine reading comprehension tasks, which enhances previous attentive readers in two aspects. First, a reattention mechanism is proposed to refine current attentions by directly accessing to past attentions that are temporally memorized in a multi-round alignment architecture, so as to avoid the problems of attention redundancy and attention deficiency. Second, a new optimization approach, called dynamic-critical reinforcement learning, is introduced to extend the standard supervised method. It always encourages to predict a more acceptable answer so as to address the convergence suppression problem occurred in traditional reinforcement learning algorithms. Extensive experiments on the Stanford Question Answering Dataset (SQuAD) show that our model achieves state-of-the-art results. Meanwhile, our model outperforms previous systems by over 6% in terms of both Exact Match and F1 metrics on two adversarial SQuAD datasets. ",,,,Confident,2024-09-05 18:08:31+00:00,"China,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
DeepLab (2017),Vision,"Johns Hopkins University,Google,University College London (UCL)","Academia,Industry,Academia","Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos, Kevin Murphy, Alan L. Yuille",2017-04-27,"DeepLab: Semantic Image Segmentation with Deep Convolutional Nets, Atrous Convolution, and Fully Connected CRFs",https://ieeexplore.ieee.org/abstract/document/7913730,16537.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:28+00:00,"United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
MobileNet,Vision,Google,Industry,"AG Howard, M Zhu, B Chen, D Kalenichenko",2017-04-17,MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications,https://arxiv.org/abs/1704.04861,18770.0,Highly cited,,4200000.0,,,,,,,,,,,,,,,,"We present a class of efficient models called MobileNets for mobile and embedded vision applications. MobileNets are based on a streamlined architecture that uses depth-wise separable convolutions to build light weight deep neural networks. We introduce two simple global hyper-parameters that efficiently trade off between latency and accuracy. These hyper-parameters allow the model builder to choose the right sized model for their application based on the constraints of the problem. We present extensive experiments on resource and accuracy tradeoffs and show strong performance compared to other popular models on ImageNet classification. We then demonstrate the effectiveness of MobileNets across a wide range of applications and use cases including object detection, finegrain classification, face attributes and large scale geo-localization.",,,,,2024-11-01 14:02:28+00:00,United States of America,,,,,,,,,
Tacotron,Speech,Google,Industry,"Yuxuan Wang, RJ Skerry-Ryan, Daisy Stanton, Yonghui Wu, Ron J. Weiss, Navdeep Jaitly, Zongheng Yang, Ying Xiao, Zhifeng Chen, Samy Bengio, Quoc Le, Yannis Agiomyrgiannakis, Rob Clark, Rif A. Saurous",2017-04-06,Tacotron: Towards End-to-End Speech Synthesis,https://arxiv.org/abs/1703.10135,,,,,I am guessing It can be calculated from the hyperparameters (Table 1),,,,,,,,"""We train Tacotron on an internal North American English dataset, which contains about 24.6 hours of speech data spoken by a professional female speaker. The phrases are text normalized, e.g. “16” is converted to “sixteen”""

""We train using a batch size of 32, where all sequences are padded to a max length.""

""frame length: 50 ms;
frame shift: 12.5 ms""

""We use 24 kHz sampling rate for all experiments""

2M steps",,,,,,,"A text-to-speech synthesis system typically consists of multiple stages, such as a text analysis frontend, an acoustic model and an audio synthesis module. Building these components often requires extensive domain expertise and may contain brittle design choices. In this paper, we present Tacotron, an end-to-end generative text-to-speech model that synthesizes speech directly from characters. Given <text, audio> pairs, the model can be trained completely from scratch with random initialization. We present several key techniques to make the sequence-to-sequence framework perform well for this challenging task. Tacotron achieves a 3.82 subjective 5-scale mean opinion score on US English, outperforming a production parametric system in terms of naturalness. In addition, since Tacotron generates speech at the frame level, it's substantially faster than sample-level autoregressive methods.",,Unreleased,,Unknown,2024-11-06 21:33:43+00:00,United States of America,,,,,,,,,
WGAN-GP,Image generation,"Courant Institute of Mathematical Sciences,Mila - Quebec AI (originally Montreal Institute for Learning Algorithms)","Academia,Academia","Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, Aaron Courville",2017-03-31,Improved Training of Wasserstein GANs,https://arxiv.org/abs/1704.00028,8859.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:28+00:00,"United States of America,Canada",,,,,,,,,
Mask R-CNN,Vision,Facebook AI Research,Industry,"Kaiming He, Georgia Gkioxari, Piotr Dollár, Ross Girshick",2017-03-30,Mask R-CNN,https://arxiv.org/abs/1703.06870,24562.0,Highly cited,,,,,,,,COCO,,,,,,"Training with
ResNet-50-FPN on COCO trainval35k takes 32 hours
in our synchronized 8-GPU implementation (0.72s per 16-
image mini-batch), and 44 hours with ResNet-101-FPN",,,,,,,,Unknown,2024-11-01 14:02:36+00:00,United States of America,,,,,,,,,
AlexNet + coordinating filters,Vision,"University of Pittsburgh,Duke University","Academia,Academia","Wei Wen, Cong Xu, Chunpeng Wu, Yandan Wang, Yiran Chen, Hai Li",2017-03-28,Coordinating Filters for Faster Deep Neural Networks,https://arxiv.org/abs/1703.09746,172.0,,,60000000.0,"The paper reimplements ResNet-20, AlexNet and GoogLeNet. The largest from these models is AlexNet. (data for these models taken from this db)
AlexNet has 60000000.00 params.
GoogLeNet has 6797700.00 params.
So max(60000000, 6797700) = 60000000
source ""The effectiveness of our approach is comprehensively evaluated in ResNets, AlexNet, and GoogLeNet. In AlexNet, for example, Force Regularization gains 2x speedup on modern GPU without accuracy loss and 4.05x speedup on CPU by paying small accuracy degradation. """,1.557140125176e+18,,,"The paper reimplements ResNet-20, AlexNet and GoogLeNet. The largest from these models is AlexNet. (data for these models taken from this db)
training of AlexNet taken 470000000000000000.00 FLOPs
training of GoogLeNet taken 1557140125176000000.00 FLOPs
max(1557140125176000000, 470000000000000000) = 1557140125176000000
source ""The effectiveness of our approach is comprehensively evaluated in ResNets, AlexNet, and GoogLeNet. In AlexNet, for example, Force Regularization gains 2x speedup on modern GPU without accuracy loss and 4.05x speedup on CPU by paying small accuracy degradation. ""","ImageNet,CIFAR-10,MNIST","from ""5.1"" Our experiments are performed in Caffe [13] using CIFAR-10 [15] and ILSVRC-2012 ImageNet [3].",1200000.0,size of ImageNet,,,,,,,"Very large-scale Deep Neural Networks (DNNs) have achieved remarkable successes in a large variety of computer vision tasks. However, the high computation intensity of DNNs makes it challenging to deploy these models on resource-limited systems. Some studies used low-rank approaches that approximate the filters by low-rank basis to accelerate the testing. Those works directly decomposed the pre-trained DNNs by Low-Rank Approximations (LRA). How to train DNNs toward lower-rank space for more efficient DNNs, however, remains as an open area. To solve the issue, in this work, we propose Force Regularization, which uses attractive forces to enforce filters so as to coordinate more weight information into lower-rank space. We mathematically and empirically verify that after applying our technique, standard LRA methods can reconstruct filters using much lower basis and thus result in faster DNNs. The effectiveness of our approach is comprehensively evaluated in ResNets, AlexNet, and GoogLeNet. In AlexNet, for example, Force Regularization gains 2x speedup on modern GPU without accuracy loss and 4.05x speedup on CPU by paying small accuracy degradation. Moreover, Force Regularization better initializes the low-rank DNNs such that the fine-tuning can converge faster toward higher accuracy. The obtained lower-rank DNNs can be further sparsified, proving that Force Regularization can be integrated with state-of-the-art sparsity-based acceleration methods. Source code is available in this https URL",,Open weights (unrestricted),,Wrong,2025-02-19 19:05:11+00:00,"United States of America,United States of America",,,,,,,,,
Word-Independent-SRNN+KN5,Language,Saarland University,Academia,"Youssef Oualil, Clayton Greenberg, Mittul Singh, Dietrich Klakow",2017-03-23,Sequential Recurrent Neural Networks for Language Modeling,https://arxiv.org/abs/1703.08068,7.0,,,5320000.0,,,,,,,,,,,,,,,,"Feedforward Neural Network (FNN)-based language models estimate the probability of the next word based on the history of the last N words, whereas Recurrent Neural Networks (RNN) perform the same task based only on the last word and some context information that cycles in the network. This paper presents a novel approach, which bridges the gap between these two categories of networks. In particular, we propose an architecture which takes advantage of the explicit, sequential enumeration of the word history in FNN structure while enhancing each word representation at the projection layer through recurrent context information that evolves in the network. The context integration is performed using an additional word-dependent weight matrix that is also learned during the training. Extensive experiments conducted on the Penn Treebank (PTB) and the Large Text Compression Benchmark (LTCB) corpus showed a significant reduction of the perplexity when compared to state-of-the-art feedforward as well as recurrent neural network architectures.",Word-Independent-SRNN+KN5,Unreleased,,,2024-09-05 18:08:31+00:00,Germany,,,,,,,,,
Prototypical networks,Vision,"University of Toronto,Twitter","Academia,Industry"," Jake Snell, Kevin Swersky, Richard S. Zemel",2017-03-15,Prototypical Networks for Few-shot Learning,https://arxiv.org/abs/1703.05175,7282.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:36+00:00,"Canada,United States of America",,,,,,,,,
SEST,Language,Carnegie Mellon University (CMU),Academia,"Rui Liu, Junjie Hu, Wei Wei, Zi Yang, Eric Nyberg",2017-03-02,Structural Embedding of Syntactic Trees for Machine Comprehension,https://arxiv.org/abs/1703.00572v3,53.0,,,,,,,,,SQuAD,"start of section 4 ""We conducted systematic experiments on the SQuAD dataset""",107785.0,"SQuAD 1.1 contains 107,785 question-answer pairs on 536 articles. The paper isn't super clear on how they train the model, but it looks as though there is a backward pass for each answer (not per token).
",,,,NVIDIA GeForce GTX 1080,1.0,,"Deep neural networks for machine comprehension typically utilizes only word or character embeddings without explicitly taking advantage of structured linguistic information such as constituency trees and dependency trees. In this paper, we propose structural embedding of syntactic trees (SEST), an algorithm framework to utilize structured information and encode them into vector representations that can boost the performance of algorithms for the machine comprehension. We evaluate our approach using a state-of-the-art neural attention model on the SQuAD dataset. Experimental results demonstrate that our model can accurately identify the syntactic boundaries of the sentences and extract answers that are syntactically coherent over the baseline methods. ",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
DnCNN,"Vision,Image generation","Harbin Institute of Technology,Hong Kong Polytechnic University,ULSee Inc.,Xi’an Jiaotong University","Academia,Academia,Industry,Academia","Kai Zhang, Wangmeng Zuo, Yunjin Chen, Deyu Meng, Lei Zhang",2017-02-01,Beyond a Gaussian Denoiser: Residual Learning of Deep CNN for Image Denoising,https://ieeexplore.ieee.org/abstract/document/7839189,6381.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:36+00:00,"China,Hong Kong,China,China,China",,,,,,,,,
VDCNN (on Amazon Review Full dataset),Language,"Facebook AI Research,University of Le Mans","Industry,Academia","Alexis Conneau, Holger Schwenk, Loïc Barrault, Yann Lecun",2017-01-27,Very Deep Convolutional Networks for Text Classification,https://arxiv.org/abs/1606.01781,,,,7800000.0,7.8 M from Table 2.,5.7267e+17,,,5050000000000 [peak FLOPs] * 15 [epochs] * 7 [h] * 3600 [s] * 0.3 [assumed utilization rate] = 5.7267e+17,Amazon Review Data,,3000000.0,Table 3: Amazon Review Full 3 000k,15.0,,"""One epoch took from 24 minutes to 2h45 for depth 9, and from 50 minutes to 7h (on the largest datasets) for depth 29. It took between 10 to 15 epoches to converge.""",NVIDIA Tesla K40s,1.0,,"The dominant approach for many NLP tasks are recurrent neural networks, in particular LSTMs, and convolutional neural networks. However, these architectures are rather shallow in comparison to the deep convolutional networks which have pushed the state-of-the-art in computer vision. We present a new architecture (VDCNN) for text processing which operates directly at the character level and uses only small convolutions and pooling operations. We are able to show that the performance of this model increases with depth: using up to 29 convolutional layers, we report improvements over the state-of-the-art on several public text classification tasks. To the best of our knowledge, this is the first time that very deep convolutional nets have been applied to text processing.",,,,Confident,2025-01-13 17:31:30+00:00,"United States of America,France",,,,,,,128.0,,
MoE-Multi,Language,"Jagiellonian University,Google Brain","Academia,Industry","N Shazeer, A Mirhoseini, K Maziarz, A Davis",2017-01-23,Outrageously Large Neural Networks: The Sparsely-Gated Mixture-of-Experts Layer,https://arxiv.org/abs/1701.06538,2037.0,"Highly cited,SOTA improvement","""On large language modeling and machine translation benchmarks, these models achieve significantly better results than state-of-the-art at lower computational cost""",8700000000.0,"Table 5

https://arxiv.org/abs/1701.06538",9.393905664e+19,,,"12 days 
64 NVIDIA K40 GPUs (see hardware data sheet for performance)
0.33 util rate
 ",,,133000000000.0,"""We constructed a similar training set consisting of shuffled unique sentences from Google’s internal news corpus, totalling roughly 100 billion words""
Assuming 100 words = 133 tokens",,288.0,12 days,NVIDIA Tesla K40t,64.0,,"The capacity of a neural network to absorb information is limited by its number of parameters. Conditional computation, where parts of the network are active on a per-example basis, has been proposed in theory as a way of dramatically increasing model capacity without a proportional increase in computation. In practice, however, there are significant algorithmic and performance challenges. In this work, we address these challenges and finally realize the promise of conditional computation, achieving greater than 1000x improvements in model capacity with only minor losses in computational efficiency on modern GPU clusters. We introduce a Sparsely-Gated Mixture-of-Experts layer (MoE), consisting of up to thousands of feed-forward sub-networks. A trainable gating network determines a sparse combination of these experts to use for each example. We apply the MoE to the tasks of language modeling and machine translation, where model capacity is critical for absorbing the vast quantities of knowledge available in the training corpora. We present model architectures in which a MoE with up to 137 billion parameters is applied convolutionally between stacked LSTM layers. On large language modeling and machine translation benchmarks, these models achieve significantly better results than state-of-the-art at lower computational cost.",,Unreleased,,,2025-01-13 17:31:47+00:00,"Poland,United States of America",,,,,,,1365333.3333333333,"""Training was done synchronously on a cluster of up to 64 GPUs as described in section 3. Each training batch consisted of a set of sentence pairs containing roughly 16000 words per GPU."" Although they appear to use word-level tokenization in other experiments, here they use subword tokens: ""Similar to GNMT, to effectively deal with rare words, we used subword units (also known as “wordpieces"") (Schuster & Nakajima, 2012) for inputs and outputs in our system."" In total 64 GPUs * 16k words/GPU * 4/3 tokens/word = 1,365,333",
OR-WideResNet,Vision,"Duke University,University of Chinese Academy of Sciences","Academia,Academia","Yanzhao Zhou, Qixiang Ye, Qiang Qiu and Jianbin Jiao",2017-01-07,Oriented Response Networks,https://arxiv.org/abs/1701.01833v2,285.0,SOTA improvement,"""In Sec. 4.3, we upgrade the VGG [38], ResNet [18], and the
WideResNet [45] to ORNs, and train them on CIFAR10 and
CIFAR100 [22], showing the state-of-the-art performance
on the natural image classification task.""",18200000.0,18.2M for largest OR-WideResNet model.,,,,,CIFAR-10, CIFAR-10 and CIFAR-100,50000.0,,,,,NVIDIA Tesla K80,,,"Deep Convolution Neural Networks (DCNNs) are capable of learning unprecedentedly effective image representations. However, their ability in handling significant local and global image rotations remains limited. In this paper, we propose Active Rotating Filters (ARFs) that actively rotate during convolution and produce feature maps with location and orientation explicitly encoded. An ARF acts as a virtual filter bank containing the filter itself and its multiple unmaterialised rotated versions. During back-propagation, an ARF is collectively updated using errors from all its rotated versions. DCNNs using ARFs, referred to as Oriented Response Networks (ORNs), can produce within-class rotation-invariant deep features while maintaining inter-class discrimination for classification tasks. The oriented response produced by ORNs can also be used for image and object orientation estimation tasks. Over multiple state-of-the-art DCNN architectures, such as VGG, ResNet, and STN, we consistently observe that replacing regular filters with the proposed ARFs leads to significant reduction in the number of network parameters and improvement in classification performance. We report the best results on several commonly used benchmarks.",,,,Confident,2024-10-08 17:35:43+00:00,"United States of America,China",,,,,,,,,
DeepStack,Games,"University of Alberta,Charles University,Czech Technical University","Academia,Academia,Academia","Matej Moravčík, Martin Schmid, Neil Burch, Viliam Lisý, Dustin Morrill, Nolan Bard, Trevor Davis, Kevin Waugh, Michael Johanson, Michael Bowling",2017-01-06,DeepStack: Expert-Level Artificial Intelligence in No-Limit Poker,https://arxiv.org/abs/1701.01724,855.0,SOTA improvement,"first human-competitive poker AI, confirmed by website: https://www.deepstack.ai/",2500000.0,"Figure 3, p.9

source: https://docs.google.com/spreadsheets/d/1Kj4Q5WADcDXtUJLIOfGTCE3tGvxNczEMwyy8QtgSkHk/edit#gid=54587040&fvid=1361937389",1.446336e+19,,,"The largest source of compute necessary for training seems to be the data generation job on 20 GPUs. We count this towards the training compute because it requires simulation using the network. This is analogous to the AlphaGo systems simulating Go games.

From p.26: ""For the flop network, one million poker flop situations (from after the flop cards are dealt) were generated and solved. These situations were solved using DeepStack’s depth limited solver with the turn network used for the counterfactual values at public states immediately after the turn card. We used a cluster of 20 GPUS and one-half of a GPU year of computation time.""

Assume they used P100 GPUs because they were common at the time (P100 was released in 2016 and this paper was published in 2017).

But assume low utilization of 10% to hedge on (a) lower-performing GPUs being used, (b) non-FLOP computations taking up a lot of the data generation job.

Calculation:
6 months * 30 days * 24 hours * 3600 seconds * 9.3e12 FLOP/s * 0.1 utilization = 1.446336e+19 FLOP.",,,10000000.0,"""The turn network was trained by solving 10 million randomly generated poker turn
games. These turn games used randomly generated ranges, public cards, and a random pot
size (10).""",,218.0,from compute notes - around 9 days  - half a year of GPU compute using 20 GPUs,,20.0,,,,,,Speculative,2025-02-17 17:43:30+00:00,"Canada,Czechia,Czechia",,,,,,,,,
YOLOv2,Vision,"University of Washington,Allen Institute for AI","Academia,Research collective","Joseph Redmon, Ali Farhadi",2016-12-25,"YOLO9000: Better, Faster, Stronger",https://arxiv.org/abs/1612.08242,14397.0,Highly cited,,51000000.0,Source: https://resources.wolframcloud.com/NeuralNetRepository/resources/YOLO-V2-Trained-on-MS-COCO-Data_1,,,,,,,,,,,,,,,"We introduce YOLO9000, a state-of-the-art, real-time object detection system that can detect over 9000 object categories. First we propose various improvements to the YOLO detection method, both novel and drawn from prior work. The improved model, YOLOv2, is state-of-the-art on standard detection tasks like PASCAL VOC and COCO. At 67 FPS, YOLOv2 gets 76.8 mAP on VOC 2007. At 40 FPS, YOLOv2 gets 78.6 mAP, outperforming state-of-the-art methods like Faster RCNN with ResNet and SSD while still running significantly faster. Finally we propose a method to jointly train on object detection and classification. Using this method we train YOLO9000 simultaneously on the COCO detection dataset and the ImageNet classification dataset. Our joint training allows YOLO9000 to predict detections for object classes that don't have labelled detection data. We validate our approach on the ImageNet detection task. YOLO9000 gets 19.7 mAP on the ImageNet detection validation set despite only having detection data for 44 of the 200 classes. On the 156 classes not in COCO, YOLO9000 gets 16.0 mAP. But YOLO can detect more than just 200 classes; it predicts detections for more than 9000 different object categories. And it still runs in real-time.",,Open weights (non-commercial),,,2024-11-01 14:02:50+00:00,"United States of America,United States of America",,,,,,,,,
GCNN-14,Language,Facebook AI Research,Industry,"Yann N. Dauphin, Angela Fan, Michael Auli, David Grangier, Yann N. Dauphin, Angela Fan, Michael Auli, David Grangier",2016-12-23,"Language Modeling with Gated Convolutional Networks, Language Modeling with Gated Convolutional Networks",https://arxiv.org/abs/1612.08083,2179.0,Highly cited,,,,,,,,WikiText-103,,,,35.0,,,,,,"The pre-dominant approach to language modeling to date is based on recurrent neural networks. Their success on this task is often linked to their ability to capture unbounded context. In this paper we develop a finite context approach through stacked convolutions, which can be more efficient since they allow parallelization over sequential tokens. We propose a novel simplified gating mechanism that outperforms Oord et al (2016) and investigate the impact of key architectural decisions. The proposed approach achieves state-of-the-art on the WikiText-103 benchmark, even though it features long-term dependencies, as well as competitive results on the Google Billion Words benchmark. Our model reduces the latency to score a sentence by an order of magnitude compared to a recurrent baseline. To our knowledge, this is the first time a non-recurrent approach is competitive with strong recurrent models on these large scale language tasks.","GCNN-14,GCNN-14",Unreleased,,Unknown,2024-11-01 14:02:49+00:00,United States of America,,,,,,,,,
EnhanceNet,Vision,Max Planck Institute for Intelligent Systems,Academia,"Mehdi S. M. Sajjadi, B. Scholkopf, M. Hirsch",2016-12-23,EnhanceNet: Single Image Super-Resolution Through Automated Texture Synthesis,https://www.semanticscholar.org/paper/EnhanceNet%3A-Single-Image-Super-Resolution-Through-Sajjadi-Scholkopf/fddc32f3880688238847077fd927ab3025db7a6a,,"SOTA improvement,Highly cited",https://paperswithcode.com/sota/image-super-resolution-on-ffhq-256-x-256-4x ,814464.0,"2*3*3*3*64+22*3*3*64*64=814464
24 CNN layers with 3x3 kernels and 64 channels and 3 input/output channels (see Table 1)
",1.3079231999999998e+17,,,"Compute: 0.3*24*60*60*5046000000000=130792319999999980
K40 FLOPs: 5046000000000
""We trained all models for a maximum of 24 hours on an Nvidia K40 GPU""",,"""For training, we use all color images in MSCOCO""",200000.0,"""resulting in roughly 200k images""",,24.0,"""We trained all models for a maximum of 24 hours on an Nvidia K40 GPU""",NVIDIA Tesla K40c,1.0,Supervised,"Single image super-resolution is the task of inferring a high-resolution image from a single low-resolution input. Traditionally, the performance of algorithms for this task is measured using pixel-wise reconstruction measures such as peak signal-to-noise ratio (PSNR) which have been shown to correlate poorly with the human perception of image quality. As a result, algorithms minimizing these metrics tend to produce over-smoothed images that lack highfrequency textures and do not look natural despite yielding high PSNR values.,,We propose a novel application of automated texture synthesis in combination with a perceptual loss focusing on creating realistic textures rather than optimizing for a pixelaccurate reproduction of ground truth images during training. By using feed-forward fully convolutional neural networks in an adversarial training setting, we achieve a significant boost in image quality at high magnification ratios. Extensive experiments on a number of datasets show the effectiveness of our approach, yielding state-of-the-art results in both quantitative and qualitative benchmarks.",,Open weights (unrestricted),,Unverified,2025-02-04 18:14:39+00:00,Germany,,,,,,,,,
"GCRN-M1, dropout",Language,Ecole Polytechnique F´ed´erale de Lausanne (EPFL),Academia,"Youngjoo Seo, Michaël Defferrard, Pierre Vandergheynst, Xavier Bresson",2016-12-22,Structured Sequence Modeling with Graph Convolutional Recurrent Networks,https://arxiv.org/abs/1612.07659,684.0,,,42000000.0,,3040000000000000.0,,,,,,,,13.0,,,,,,"This paper introduces Graph Convolutional Recurrent Network (GCRN), a deep learning model able to predict structured sequences of data. Precisely, GCRN is a generalization of classical recurrent neural networks (RNN) to data structured by an arbitrary graph. Such structured sequences can represent series of frames in videos, spatio-temporal measurements on a network of sensors, or random walks on a vocabulary graph for natural language modeling. The proposed model combines convolutional neural networks (CNN) on graphs to identify spatial structures and RNN to find dynamic patterns. We study two possible architectures of GCRN, and apply the models to two practical problems: predicting moving MNIST data, and modeling natural language with the Penn Treebank dataset. Experiments show that exploiting simultaneously graph spatial and dynamic information about data can improve both precision and learning speed.","GCRN-M1, dropout",Unreleased,,,2024-11-01 14:02:49+00:00,Switzerland,,,,,,,,,
3DMM-CNN,Vision,University of Southern California,Academia,"A. Tran, Tal Hassner, I. Masi, G. Medioni",2016-12-15,Regressing Robust and Discriminative 3D Morphable Models with a very Deep Neural Network,https://www.semanticscholar.org/paper/Regressing-Robust-and-Discriminative-3D-Morphable-a-Tran-Hassner/d49d2f13f2ce692b8263b30511edc163264eaca6,,SOTA improvement,https://paperswithcode.com/sota/3d-face-reconstruction-on-florence ,44500000.0,Based on ResNet 101 architecture,,,,,,Trained on 3D reconstructions from CASIA images,10000.0,Multi image 3DMM reconstruction is performed by first estimating 3DMM parameters from the 500k single images in CASIA. 3DMM estimates for images of the same subject are then aggregated into a single 3DMM per subject (∼10k subjects),,,,NVIDIA GeForce GTX 590,1.0,Supervised,"The 3D shapes of faces are well known to be discriminative. Yet despite this, they are rarely used for face recognition and always under controlled viewing conditions. We claim that this is a symptom of a serious but often overlooked problem with existing methods for single view 3D face reconstruction: when applied in the wild, their 3D estimates are either unstable and change for different photos of the same subject or they are over-regularized and generic. In response, we describe a robust method for regressing discriminative 3D morphable face models (3DMM). We use a convolutional neural network (CNN) to regress 3DMM shape and texture parameters directly from an input photo. We overcome the shortage of training data required for this purpose by offering a method for generating huge numbers of labeled examples. The 3D estimates produced by our CNN surpass state of the art accuracy on the MICC data set. Coupled with a 3D-3D face matching pipeline, we show the first competitive face recognition results on the LFW, YTF and IJB-A benchmarks using 3D face shapes as representations, rather than the opaque deep feature vectors used by other modern systems.",,Open weights (unrestricted),,Unverified,2024-12-12 14:47:56+00:00,United States of America,,,,,,,,,
Diabetic Retinopathy Detection Net,Vision,"UT Austin,University of California (UC) Berkeley,Google","Academia,Academia,Industry","V Gulshan, L Peng, M Coram, MC Stumpe, D Wu",2016-12-13,Development and Validation of a Deep Learning Algorithm for Detection of Diabetic Retinopathy in Retinal Fundus Photographs,https://jamanetwork.com/journals/jama/article-abstract/2588763,3540.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Neural cache model (size=2000) (300M),Language,Facebook AI Research,Industry,"Edouard Grave, Armand Joulin, Nicolas Usunier",2016-12-13,Improving Neural Language Models with a Continuous Cache,https://arxiv.org/abs/1612.04426,302.0,,,300000000.0,,,,,,WikiText-103,,,,,,,,,,"We propose an extension to neural network language models to adapt their prediction to the recent history. Our model is a simplified version of memory augmented networks, which stores past hidden activations as memory and accesses them through a dot product with the current hidden activation. This mechanism is very efficient and scales to very large memory sizes. We also draw a link between the use of external memory in neural network and cache models used with count based language models. We demonstrate on several language model datasets that our approach performs significantly better than recent memory augmented networks.",Neural cache model (size=2000) (300M),Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
HR-ResNet101,Vision,Carnegie Mellon University (CMU),Academia,"Peiyun Hu, Deva Ramanan",2016-12-13,Finding Tiny Faces,https://www.semanticscholar.org/paper/Finding-Tiny-Faces-Hu-Ramanan/71f51e1b6691343ed031c1ed42efc96a7f1a0619,,SOTA improvement,https://paperswithcode.com/sota/face-detection-on-wider-face-medium ,44500000.0,ResNet 101 ,7.077e+18,,,"ResNet-101 training compute: 7004000000000000000
Finetune compute: 73422840000000000
Total compute: 7004000000000000000+73422840000000000=7.0774228e+18",ILSVRC 2012 subset of ImageNet,"ResNet-101 training data (imageNet)
Finetune data: WIDER face dataset with 32203 images",1312203.0,"WIDER face dataset: 32203 images
ImageNet size: 1280000
Total data: 1280000+32203=1312203",170.0,,,,,Supervised,"Though tremendous strides have been made in object recognition, one of the remaining open challenges is detecting small objects. We explore three aspects of the problem in the context of finding small faces: the role of scale invariance, image resolution, and contextual reasoning. While most recognition approaches aim to be scale-invariant, the cues for recognizing a 3px tall face are fundamentally different than those for recognizing a 300px tall face. We take a different approach and train separate detectors for different scales. To maintain efficiency, detectors are trained in a multi-task fashion: they make use of features extracted from multiple layers of single (deep) feature hierarchy. While training detectors for large objects is straightforward, the crucial challenge remains training detectors for small objects. We show that context is crucial, and define templates that make use of massively-large receptive fields (where 99% of the template extends beyond the object of interest). Finally, we explore the role of scale in pre-trained deep networks, providing ways to extrapolate networks tuned for limited scales to rather extreme ranges. We demonstrate state-of-the-art results on massively-benchmarked face datasets (FDDB and WIDER FACE). In particular, when compared to prior art on WIDER FACE, our results reduce error by a factor of 2 (our models produce an AP of 82% while prior art ranges from 29-64%).",,Open weights (unrestricted),,Unverified,2025-02-19 17:46:50+00:00,United States of America,ResNet-101 (ImageNet),7.342284e+16,50*32203*3*15200000000=73422840000000000,,,,,,
GAN-Advancer,Vision,OpenAI,Industry,"Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, Xi Chen",2016-12-05,Improved Techniques for Training GANs,https://dl.acm.org/doi/10.5555/3157096.3157346,8353.0,Highly cited,,,,,,,,,,,,,,,,,,,,Unreleased,,Unknown,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
Elastic weight consolidation,"Vision,Games",DeepMind,Industry,"James Kirkpatrick, Razvan Pascanu, Neil Rabinowitz, Joel Veness, Guillaume Desjardins, Andrei A. Rusu, Kieran Milan, John Quan, Tiago Ramalho, Agnieszka Grabska-Barwinska, Demis Hassabis, Claudia Clopath, Dharshan Kumaran, Raia Hadsell",2016-12-02,Overcoming catastrophic forgetting in neural networks,https://arxiv.org/abs/1612.00796,6340.0,Highly cited,,,,,,,,,,,,,,,,,,"The ability to learn tasks in a sequential fashion is crucial to the development of artificial intelligence. Neural networks are not, in general, capable of this and it has been widely thought that catastrophic forgetting is an inevitable feature of connectionist models. We show that it is possible to overcome this limitation and train networks that can maintain expertise on tasks which they have not experienced for a long time. Our approach remembers old tasks by selectively slowing down learning on the weights important for those tasks. We demonstrate our approach is scalable and effective by solving a set of classification tasks based on the MNIST hand written digit dataset and by learning several Atari 2600 games sequentially.",,,,Unknown,2024-11-01 14:02:49+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
PointNet,3D modeling,Stanford University,Academia,"CR Qi, H Su, K Mo, LJ Guibas",2016-12-02,PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation,https://arxiv.org/abs/1612.00593,12651.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
Image-to-image cGAN,"Vision,Image generation",University of California (UC) Berkeley,Academia,"Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, Alexei A. Efros",2016-11-21,Image-to-Image Translation with Conditional Adversarial Networks,https://arxiv.org/abs/1611.07004,18207.0,Highly cited,,,,,,,,,,,,,,,,,,"We investigate conditional adversarial networks as a general-purpose solution to image-to-image translation problems. These networks not only learn the mapping from input image to output image, but also learn a loss function to train this mapping. This makes it possible to apply the same generic approach to problems that traditionally would require very different loss formulations. We demonstrate that this approach is effective at synthesizing photos from label maps, reconstructing objects from edge maps, and colorizing images, among other tasks. Indeed, since the release of the pix2pix software associated with this paper, a large number of internet users (many of them artists) have posted their own experiments with our system, further demonstrating its wide applicability and ease of adoption without the need for parameter tweaking. As a community, we no longer hand-engineer our mapping functions, and this work suggests we can achieve reasonable results without hand-engineering our loss functions either.",,,,Unknown,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
RefineNet,Vision,"University of Adelaide,Australian Centre for Robotic Vision",Academia,"Guosheng Lin, Anton Milan, Chunhua Shen, Ian Reid",2016-11-20,RefineNet: Multi-Path Refinement Networks for High-Resolution Semantic Segmentation,https://arxiv.org/abs/1611.06612v3,2736.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,"Australia,Australia",,,,,,,,,
PolyNet,Vision,Chinese University of Hong Kong (CUHK),Academia,"X Zhang, Z Li, C Change Loy",2016-11-17,PolyNet: A Pursuit of Structural Diversity in Very Deep Networks,https://arxiv.org/abs/1611.05725,282.0,SOTA improvement,"""The Very Deep PolyNet, designed following this direction, demonstrates substantial improvements over the state-of-the-art on the ILSVRC 2012 benchmark. Compared to Inception-ResNet-v2, it reduces the top-5 validation error on single crops from 4.9% to 4.25%, and that on multi-crops from 3.7% to 3.45%.""",92000000.0,,6.4e+19,,,"Section 5: ""ResNet-500 [has] similar computation
costs to our Very Deep PolyNet"".

ResNet-152 has 11.3e9 FLOP per forward pass (https://arxiv.org/abs/1512.03385, Table 1). Hence ResNet-500 has approx 3.7e10 = 11.3e9*500/152 FLOP per forward pass.

560k iterations, batch size 512:
Train compute = 3.7e10*3*2*560e3 * 512 = 6.4e19",ImageNet,Section 4,1280000.0,,,,,NVIDIA GeForce GTX TITAN X,32.0,,,,,,Likely,2025-03-06 20:00:33+00:00,"Hong Kong,China",,,,,,,,,
ResNeXt-50,Vision,"University of California San Diego,Facebook","Academia,Industry","Saining Xie, Ross Girshick, Piotr Dollár, Zhuowen Tu, Kaiming He",2016-11-16,Aggregated Residual Transformations for Deep Neural Networks,https://arxiv.org/abs/1611.05431,9583.0,Highly cited,,25000000.0,"""If you’re thinking about ResNets, yes, they are related. ResNeXt-50 has 25M parameters (ResNet-50 has 25.5M).""

https://towardsdatascience.com/illustrated-10-cnn-architectures-95d78ace614d",,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:50+00:00,"United States of America,United States of America",,,,,,,,,
DAC-CSR,Vision,Jiangnan University,Academia,"Zhen-Hua Feng, Josef Kittler, William Christmas, Patrik Huber, Xiao-Jun Wu",2016-11-16,Dynamic Attention-controlled Cascaded Shape Regression Exploiting Training Data Augmentation and Fuzzy-set Sample Weighting,https://arxiv.org/abs/1611.05396,,SOTA improvement,https://paperswithcode.com/sota/face-alignment-on-aflw-19 ,,,,,,,,AFLW,20000.0,AFLW-full splits the 24386 images into 20000/4386 for training/testing.,,,,,,Supervised,"We present a new Cascaded Shape Regression (CSR) architecture, namely Dynamic Attention-Controlled CSR (DAC-CSR), for robust facial landmark detection on unconstrained faces. Our DAC-CSR divides facial landmark detection into three cascaded sub-tasks: face bounding box refinement, general CSR and attention-controlled CSR. The first two stages refine initial face bounding boxes and output intermediate facial landmarks. Then, an online dynamic model selection method is used to choose appropriate domain-specific CSRs for further landmark refinement. The key innovation of our DAC-CSR is the fault-tolerant mechanism, using fuzzy set sample weighting for attention-controlled domain-specific model training. Moreover, we advocate data augmentation with a simple but effective 2D profile face generator, and context-aware feature extraction for better facial feature representation. Experimental results obtained on challenging datasets demonstrate the merits of our DAC-CSR over the state-of-the-art.",,Unreleased,,Unverified,2024-12-12 14:12:30+00:00,China,,,,,,,,,
Deeply-recursive ConvNet,"Vision,Image generation",Seoul National University,Academia,"Jiwon Kim, Jung Kwon Lee, Kyoung Mu Lee",2016-11-11,Deeply-Recursive Convolutional Network for Image Super-Resolution,https://arxiv.org/abs/1511.04491,2395.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:49+00:00,Korea (Republic of),,,,,,,,,
DTN (Domain Transfer Network),Vision,Facebook AI Research,Industry,"Yaniv Taigman, Adam Polyak, Lior Wolf",2016-11-07,Unsupervised Cross-Domain Image Generation,https://arxiv.org/abs/1611.02200,,Highly cited,,,,,,,,,,5000000.0,,,,,,,Supervised,"We study the problem of transferring a sample in one domain to an analog sample in another domain. Given two related domains, S and T, we would like to learn a generative function G that maps an input sample from S to the domain T, such that the output of a given function f, which accepts inputs in either domains, would remain unchanged. Other than the function f, the training data is unsupervised and consist of a set of samples from each domain. The Domain Transfer Network (DTN) we present employs a compound loss function that includes a multiclass GAN loss, an f-constancy component, and a regularizing component that encourages G to map samples from T to themselves. We apply our method to visual domains including digits and face images and demonstrate its ability to generate convincing novel images of previously unseen entities, while preserving their identity. ",,Unreleased,,Unverified,2025-02-04 18:18:17+00:00,United States of America,,,,,,,,,
DLDL,Vision,University of Oxford,Academia,"Bin-Bin Gao, Chao Xing, Chen-Wei Xie, Jianxin Wu, Xin Geng",2016-11-06,Deep Label Distribution Learning With Label Ambiguity,https://www.semanticscholar.org/paper/Deep-Label-Distribution-Learning-With-Label-Gao-Xing/02567fd428a675ca91a0c6786f47f3e35881bcbd,,SOTA improvement,https://paperswithcode.com/sota/multi-label-classification-on-pascal-voc-2007 ,564000000.0,"Finetunes 4 versions of VGG
VGG 16: 138000000
VGG 19: 144000000
Total 2*(138000000+144000000)=564000000
",,,,,PASCAL VOC 2012,,22531.0,,,,,NVIDIA Tesla K40c,1.0,Supervised,"Convolutional neural networks (ConvNets) have achieved excellent recognition performance in various visual recognition tasks. A large labeled training set is one of the most important factors for its success. However, it is difficult to collect sufficient training images with precise labels in some domains, such as apparent age estimation, head pose estimation, multilabel classification, and semantic segmentation. Fortunately, there is ambiguous information among labels, which makes these tasks different from traditional classification. Based on this observation, we convert the label of each image into a discrete label distribution, and learn the label distribution by minimizing a Kullback–Leibler divergence between the predicted and ground-truth label distributions using deep ConvNets. The proposed deep label distribution learning (DLDL) method effectively utilizes the label ambiguity in both feature learning and classifier learning, which help prevent the network from overfitting even when the training set is small. Experimental results show that the proposed approach produces significantly better results than the state-of-the-art methods for age estimation and head pose estimation. At the same time, it also improves recognition performance for multi-label classification and semantic segmentation tasks.",,Open weights (unrestricted),,Unverified,2024-12-12 15:27:25+00:00,United Kingdom of Great Britain and Northern Ireland,"VGG16,VGG19",,,,,,,,
NASv3 (CIFAR-10),Vision,Google Brain,Industry,"Barret Zoph, Quoc V. Le",2016-11-05,Neural Architecture Search with Reinforcement Learning,https://arxiv.org/abs/1611.01578,5098.0,Highly cited,,37400000.0,Table 1,2.2e+21,,,"50 epochs * 50,000 images * 10.0 GFLOPSs * 12800 networks * 2 add-multiply * 3 backward pass 
= 1.9e6 PF = 22 pfs-days

source: https://openai.com/blog/ai-and-compute/",,,50000.0,CIFAR-10 (does not factor in augmentation procedures),,,,,800.0,,"Neural networks are powerful and flexible models that work well for many difficult learning tasks in image, speech and natural language understanding. Despite their success, neural networks are still hard to design. In this paper, we use a recurrent network to generate the model descriptions of neural networks and train this RNN with reinforcement learning to maximize the expected accuracy of the generated architectures on a validation set. On the CIFAR-10 dataset, our method, starting from scratch, can design a novel network architecture that rivals the best human-invented architecture in terms of test set accuracy. Our CIFAR-10 model achieves a test error rate of 3.65, which is 0.09 percent better and 1.05x faster than the previous state-of-the-art model that used a similar architectural scheme. On the Penn Treebank dataset, our model can compose a novel recurrent cell that outperforms the widely-used LSTM cell, and other state-of-the-art baselines. Our cell achieves a test set perplexity of 62.4 on the Penn Treebank, which is 3.6 perplexity better than the previous state-of-the-art model. The cell can also be transferred to the character language modeling task on PTB and achieves a state-of-the-art perplexity of 1.214.",,,,Likely,2025-03-06 20:00:24+00:00,United States of America,,,,,,,,,
NAS with base 8 and shared embeddings,Language,Google Brain,Industry,"Barret Zoph, Quoc V. Le",2016-11-05,Neural Architecture Search with Reinforcement Learning,https://arxiv.org/abs/1611.01578,5098.0,Highly cited,,54000000.0,,1.05e+16,,,,Penn TreeBank,,,,35.0,,,,,,"Neural networks are powerful and flexible models that work well for many difficult learning tasks in image, speech and natural language understanding. Despite their success, neural networks are still hard to design. In this paper, we use a recurrent network to generate the model descriptions of neural networks and train this RNN with reinforcement learning to maximize the expected accuracy of the generated architectures on a validation set. On the CIFAR-10 dataset, our method, starting from scratch, can design a novel network architecture that rivals the best human-invented architecture in terms of test set accuracy. Our CIFAR-10 model achieves a test error rate of 3.65, which is 0.09 percent better and 1.05x faster than the previous state-of-the-art model that used a similar architectural scheme. On the Penn Treebank dataset, our model can compose a novel recurrent cell that outperforms the widely-used LSTM cell, and other state-of-the-art baselines. Our cell achieves a test set perplexity of 62.4 on the Penn Treebank, which is 3.6 perplexity better than the previous state-of-the-art model. The cell can also be transferred to the character language modeling task on PTB and achieves a state-of-the-art perplexity of 1.214.",Neural Architecture Search with base 8 and shared embeddings,Unreleased,,,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
BIDAF,Language,"University of Washington,Allen Institute for AI","Academia,Research collective","Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, Hannaneh Hajishirzi",2016-11-05,Bidirectional Attention Flow for Machine Comprehension,https://arxiv.org/abs/1611.01603v6,2246.0,"Highly cited,SOTA improvement","""Our experimental evaluations show that our model achieves the state-of-the-art results in Stanford Question Answering Dataset (SQuAD) and CNN/DailyMail cloze test. """,2600000.0,"There are two similar models described in sections ""Models details""
citation from the paper about model for SQuAD ""The model has about 2.6 million parameters""
citation about model for cloze test
""The model architecture used for this task is very similar to that for SQuAD (Section 4) with only a few small changes to adapt it to the cloze test. ""
",3.4686144e+18,,,"flops = (8) * (6691 * 10**9) * (60 * 3600) * 3 // 10
(num gpu) * (peak flops) * (time in seconds) * (assumed utilization rate) =

citation from the section about cloze test experiments ""The entire training process takes roughly 60 hours on eight Titan X GPUs. The other hyper-parameters are identical to the model described in Section 4"" (section 4 is about SQuAD experiments and cloze test experiments require more compute and data).
flops  6.691 TFLOPS from https://www.techpowerup.com/gpu-specs/geforce-gtx-titan-x.c2632","SQuAD,DMQA,GloVe","""In a cloze test, the reader is asked to fill in words that have been removed from a passage, for measuring one’s ability to comprehend text. Hermann et al. (2015) have recently compiled a massive Cloze-style comprehension dataset, consisting of 300k/4k/3k and 879k/65k/53k (train/dev/test)
examples from CNN and DailyMail news articles, respectively. """,47160000.0,"""In a cloze test, the reader is asked to fill in words that have been removed from a passage, for measuring one’s ability to comprehend text. Hermann et al. (2015) have recently compiled a massive Cloze-style comprehension dataset, consisting of 300k/4k/3k and 879k/65k/53k (train/dev/test)
examples from CNN and DailyMail news articles, respectively. ""
assuming 40 words per example we get around 47160000 words (SQuAD have around 40 words per example - so I think it should be similar case for this dataset)",8.0,60.0,see compute notes,NVIDIA GeForce GTX TITAN X,8.0,,"Machine comprehension (MC), answering a query about a given context paragraph, requires modeling complex interactions between the context and the query. Recently, attention mechanisms have been successfully extended to MC. Typically these methods use attention to focus on a small portion of the context and summarize it with a fixed-size vector, couple attentions temporally, and/or often form a uni-directional attention. In this paper we introduce the Bi-Directional Attention Flow (BIDAF) network, a multi-stage hierarchical process that represents the context at different levels of granularity and uses bi-directional attention flow mechanism to obtain a query-aware context representation without early summarization. Our experimental evaluations show that our model achieves the state-of-the-art results in Stanford Question Answering Dataset (SQuAD) and CNN/DailyMail cloze test. ",,Open weights (unrestricted),,Confident,2025-01-03 20:53:23+00:00,"United States of America,United States of America",,,,,,,,,
VD-LSTM+REAL Large,Language,"Salesforce Research,Stanford University","Industry,Academia","Hakan Inan, Khashayar Khosravi, Richard Socher",2016-11-04,Tying Word Vectors and Word Classifiers: A Loss Framework for Language Modeling,https://arxiv.org/abs/1611.01462,397.0,SOTA improvement,"""Our framework leads to state of the art performance on the Penn Treebank""",51000000.0,,2.13e+16,,,,Penn TreeBank,,,,75.0,,,,,,"Recurrent neural networks have been very successful at predicting sequences of words in tasks such as language modeling. However, all such models are based on the conventional classification framework, where the model is trained against one-hot targets, and each word is represented both as an input and as an output in isolation. This causes inefficiencies in learning both in terms of utilizing all of the information and in terms of the number of parameters needed to train. We introduce a novel theoretical framework that facilitates better learning in language modeling, and show that our framework leads to tying together the input embedding and the output projection matrices, greatly reducing the number of trainable variables. Our framework leads to state of the art performance on the Penn Treebank with a variety of network models.",VD-LSTM+REAL Large,Unreleased,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America",,,,,,,,,
SPIDER2,Biology,"Griffith University,University of Iowa,Dezhou University","Academia,Academia,Academia","Yuedong Yang, Rhys Heffernan, Kuldip Paliwal, James Lyons, Abdollah Dehzangi, Alok Sharma, Jihua Wang, Abdul Sattar, and Yaoqi Zhou",2016-10-28,"SPIDER2: A Package to Predict Secondary Structure, Accessible Surface Area, and Main-Chain Torsional Angles by Deep Neural Networks",https://link.springer.com/protocol/10.1007/978-1-4939-6406-2_6,,SOTA improvement,"The method provides state-of-the-art, all-in-one accurate prediction of local structure and solvent accessible surface area. ",409536.0,"Three networks, each three layers. First takes in 459 inputs and outputs 12, second and third take in 459 + (12*17) = 663 inputs.

Network 1: (459 * 150 + 150) + (150 * 150 + 150) + (150 * 150 + 150) + (150 * 12 + 12) = 116,112
Networks 2 and 3: (663 * 150 + 150) + (150 * 150 + 150) + (150 * 150 + 150) + (150 * 12 + 12) = 146,712
Total: 116,112 + (2 * 146,712) = 409,536",1.822e+16,,,"120 epochs, dataset 5789 proteins. There are about 300 residues per protein (115,479 residues / 418 proteins) according to https://www.ncbi.nlm.nih.gov/pmc/articles/PMC22960/. 
First network gets 27 features per residue, second and third get 39.
FLOPs from first: 6 * 116112 * (27 * 300 * 5789 * 120) = 3.92e15
FLOPs from 2nd and 3rd: 2 *6 * 146712 * (39 * 300 * 5789 * 120) = 1.43e16
Total: 1.822E16",Unspecified,,13893600.0,"5,789 nonredundant, high resolution structure.
Assuming ~200 residues per protein, 5,789 * 200 = 1,157,800 residues. Each residue has 12 associated features being predicted on.
1,157,800 * 12 = 13,893,600",120.0,,"The authors had a website where sequences could be submitted for processing through the model: ""Each prediction is usually completed within 10 min, but may take up to a few hours depending on how busy the server is and how long the protein chain is [...] Using an external PSSM file can skip the most time consuming step of generating the evolution profile by PSIBLAST, and the executive time reduce to a few seconds"" 

Rough estimate:
It looks like the PSIBLAST step only needs doing once per input, and this takes the majority of the time. If the inference server uses the same hardware that was used for training, 10 mins * 5789 sequences =  965 hours for PSIBLAST calculation. Then assume training on a sequence takes 3x as long as inference (forward + backward pass uses 6 FLOPs per parameter, vs 2 for forward only), so 120 epochs would take:
3 seconds * 3 * 5789 * 120 = 1,737 hours
Total: around 2,702 hours
(This seems on the long side – probably they had better hardware for training, or else there's an incorrect assumption here)",,,Supervised,"Predicting one-dimensional structure properties has played an important role to improve prediction of protein three-dimensional structures and functions. The most commonly predicted properties are secondary structure and accessible surface area (ASA) representing local and nonlocal structural characteristics, respectively. Secondary structure prediction is further complemented by prediction of continuous main-chain torsional angles. Here we describe a newly developed method SPIDER2 that utilizes three iterations of deep learning neural networks to improve the prediction accuracy of several structural properties simultaneously. For an independent test set of 1199 proteins SPIDER2 achieves 82 % accuracy for secondary structure prediction, 0.76 for the correlation coefficient between predicted and actual solvent accessible surface area, 19° and 30° for mean absolute errors of backbone φ and ψ angles, respectively, and 8° and 32° for mean absolute errors of Cα-based θ and τ angles, respectively. The method provides state-of-the-art, all-in-one accurate prediction of local structure and solvent accessible surface area. The method is implemented, as a webserver along with a standalone package that are available in our website: http://sparks-lab.org.",,Open weights (non-commercial),,Likely,2025-02-17 19:32:35+00:00,"Australia,United States of America,China",,,,,,,,,
Differentiable neural computer,Language,Google DeepMind,Industry,"Alex Graves, Greg Wayne, Malcolm Reynolds, Tim Harley, Ivo Danihelka, Agnieszka Grabska-Barwińska, Sergio Gómez Colmenarejo, Edward Grefenstette, Tiago Ramalho, John Agapiou, Adrià Puigdomènech Badia, Karl Moritz Hermann, Yori Zwols, Georg Ostrovski, Adam Cain, Helen King, Christopher Summerfield, Phil Blunsom, Koray Kavukcuoglu & Demis Hassabis",2016-10-12,Hybrid computing using a neural network with dynamic external memory,https://www.nature.com/articles/nature20101,1521.0,Highly cited,,,,,,,,,,,,,,,,,,"Artificial neural networks are remarkably adept at sensory processing, sequence learning and reinforcement learning, but are limited in their ability to represent variables and data structures and to store data over long timescales, owing to the lack of an external memory. Here we introduce a machine learning model called a differentiable neural computer (DNC), which consists of a neural network that can read from and write to an external memory matrix, analogous to the random-access memory in a conventional computer. Like a conventional computer, it can use its memory to represent and manipulate complex data structures, but, like a neural network, it can learn to do so from data. When trained with supervised learning, we demonstrate that a DNC can successfully answer synthetic questions designed to emulate reasoning and inference problems in natural language. We show that it can learn tasks such as finding the shortest path between specified points and inferring the missing links in randomly generated graphs, and then generalize these tasks to specific graphs such as transport networks and family trees. When trained with reinforcement learning, a DNC can complete a moving blocks puzzle in which changing goals are specified by sequences of symbols. Taken together, our results demonstrate that DNCs have the capacity to solve complex, structured tasks that are inaccessible to neural networks without external read–write memory.",,,,Unknown,2024-11-01 14:03:04+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
GAWWN,Vision,"University of Michigan,Max Planck Institute for Informatics","Academia,Academia","Scott E. Reed, Zeynep Akata, S. Mohan, Samuel Tenka, B. Schiele, Honglak Lee",2016-10-08,Learning What and Where to Draw,https://www.semanticscholar.org/paper/Learning-What-and-Where-to-Draw-Reed-Akata/cad4ac0d2389a89cf1955dd4788278c1e8ac1af9,,SOTA improvement,https://paperswithcode.com/sota/text-to-image-generation-on-cub ,,,,,,,,Caltech-UCSD Birds (CUB),11788.0,,,,,,,Supervised,"Generative Adversarial Networks (GANs) have recently demonstrated the capability to synthesize compelling real-world images, such as room interiors, album covers, manga, faces, birds, and flowers. While existing models can synthesize images based on global constraints such as a class label or caption, they do not provide control over pose or object location. We propose a new model, the Generative Adversarial What-Where Network (GAWWN), that synthesizes images given instructions describing what content to draw in which location. We show high-quality 128 x 128 image synthesis on the Caltech-UCSD Birds dataset, conditioned on both informal text descriptions and also object location. Our system exposes control over both the bounding box around the bird and its constituent parts. By modeling the conditional distributions over part locations, our system also enables conditioning on arbitrary subsets of parts (e.g. only the beak and tail), yielding an efficient interface for picking part locations.",,Unreleased,,Unverified,2024-12-05 12:02:00+00:00,"United States of America,Germany",,,,,,,,,
Xception,Vision,Google,Industry,François Chollet,2016-10-07,Xception: Deep Learning with Depthwise Separable Convolutions,https://arxiv.org/abs/1610.02357,13038.0,Highly cited,,22855952.0,Table 3,4.36e+20,,,60 K80 GPUs * 30 days * 8.5 TFLOPS/GPU * 0.33 utilization  = 4.36e20,JFT,"Also ImageNet, but JFT is significantly larger",350000000.0,"""JFT is an internal Google dataset for large-scale image classification dataset, first introduced by Hinton et al. in [5], which comprises over 350 million high-resolution images annotated with labels from a set of 17,000 classes. To evaluate the performance of a model trained on JFT, we use an auxiliary dataset, FastEval14k""",,720.0,"""while the JFT experiments took over one month each.""",NVIDIA Tesla K80,60.0,,"We present an interpretation of Inception modules in convolutional neural networks as being an intermediate step in-between regular convolution and the depthwise separable convolution operation (a depthwise convolution followed by a pointwise convolution). In this light, a depthwise separable convolution can be understood as an Inception module with a maximally large number of towers. This observation leads us to propose a novel deep convolutional neural network architecture inspired by Inception, where Inception modules have been replaced with depthwise separable convolutions. We show that this architecture, dubbed Xception, slightly outperforms Inception V3 on the ImageNet dataset (which Inception V3 was designed for), and significantly outperforms Inception V3 on a larger image classification dataset comprising 350 million images and 17,000 classes. Since the Xception architecture has the same number of parameters as Inception V3, the performance gains are not due to increased capacity but rather to a more efficient use of model parameters.",,,,Confident,2025-01-27 19:48:22+00:00,United States of America,,,,,,,,,
GNMT,Language,Google,Industry,"Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V. Le, Mohammad Norouzi, Wolfgang Macherey, Maxim Krikun, Yuan Cao, Qin Gao, Klaus Macherey, Jeff Klingner, Apurva Shah, Melvin Johnson, Xiaobing Liu, Łukasz Kaiser, Stephan Gouws, Yoshikiyo Kato, Taku Kudo, Hideto Kazawa, Keith Stevens, George Kurian, Nishant Patil, Wei Wang, Cliff Young, Jason Smith, Jason Riesa, Alex Rudnick, Oriol Vinyals, Greg Corrado, Macduff Hughes, Jeffrey Dean",2016-09-26,Google's Neural Machine Translation System: Bridging the Gap between Human and Machine Translation,https://arxiv.org/abs/1609.08144,6483.0,Highly cited,,278000000.0,"Table 5 in 'Outrageously Large Neural Networks: The Sparsely-Gated Mixture-of-Experts Layer'

https://arxiv.org/abs/1701.06538",6.620000000001e+21,,,"From AI and Compute:
""sqrt(10 * 100) factor added because production model used 2-3 orders of magnitude more data, but only 1 epoch rather than 10.
96 K80 GPU’s * 9 days * 8.5 TFLOPS * 0.33 utilization * sqrt(10 * 100)  
= 6.9e6 PF = 79 pfs-days""
source: https://openai.com/blog/ai-and-compute/

https://www.wolframalpha.com/input?i=96+*+9+days+*+8.5+TFLOPS+*+0.33+*+sqrt%281000%29
",,,388960152200.7108,"[WORDS]
"" On WMT En→Fr, the training set contains 36M sentence pairs. On WMT En→De, the training set contains 5M sentence pairs.""
""we also test GNMT on Google’s translation production corpora, which are two to three decimal orders of magnitudes bigger than the WMT corpora for a given language pair.""

41M sentence pairs * 2 sentences per pair * 15 words/sentence * 10^2.5",1.0,,"Test model used 96 K80 for 9 days, then this was scaled up by 31x for the production model, but unclear how many GPUs were used or how long it was trained for. The production run used 96 * 9 days * sqrt(1000) ~= 655730 chip-hours.",NVIDIA Tesla K80,,Reinforcement learning,"Neural Machine Translation (NMT) is an end-to-end learning approach for automated translation, with the potential to overcome many of the weaknesses of conventional phrase-based translation systems. Unfortunately, NMT systems are known to be computationally expensive both in training and in translation inference. Also, most NMT systems have difficulty with rare words. These issues have hindered NMT's use in practical deployments and services, where both accuracy and speed are essential. In this work, we present GNMT, Google's Neural Machine Translation system, which attempts to address many of these issues. Our model consists of a deep LSTM network with 8 encoder and 8 decoder layers using attention and residual connections. To improve parallelism and therefore decrease training time, our attention mechanism connects the bottom layer of the decoder to the top layer of the encoder. To accelerate the final translation speed, we employ low-precision arithmetic during inference computations. To improve handling of rare words, we divide words into a limited set of common sub-word units (""wordpieces"") for both input and output. This method provides a good balance between the flexibility of ""character""-delimited models and the efficiency of ""word""-delimited models, naturally handles translation of rare words, and ultimately improves the overall accuracy of the system. Our beam search technique employs a length-normalization procedure and uses a coverage penalty, which encourages generation of an output sentence that is most likely to cover all the words in the source sentence. On the WMT'14 English-to-French and English-to-German benchmarks, GNMT achieves competitive results to state-of-the-art. Using a human side-by-side evaluation on a set of isolated simple sentences, it reduces translation errors by an average of 60% compared to Google's phrase-based production system.",,Hosted access (no API),,,2025-02-17 19:32:24+00:00,United States of America,,,,,,,,,
Pointer Sentinel-LSTM (medium),Language,"MetaMind Inc,Salesforce","Industry,Industry","Stephen Merity, Caiming Xiong, James Bradbury, Richard Socher",2016-09-26,Pointer Sentinel Mixture Models,https://arxiv.org/abs/1609.07843,2307.0,"Highly cited,SOTA improvement","""Our pointer sentinel-LSTM model achieves state of the art language modeling performance on the Penn Treebank (70.9 perplexity) while using far fewer parameters than a standard softmax LSTM""",21000000.0,,7490000000000000.0,,,,Penn TreeBank,,,,64.0,,,,,,Recent neural network sequence models with softmax classifiers have achieved their best language modeling performance only with very large hidden states and large vocabularies. Even then they struggle to predict rare or unseen words even if the context makes the prediction unambiguous. We introduce the pointer sentinel mixture architecture for neural sequence models which has the ability to either reproduce a word from the recent context or produce a word from a standard softmax classifier. Our pointer sentinel-LSTM model achieves state of the art language modeling performance on the Penn Treebank (70.9 perplexity) while using far fewer parameters than a standard softmax LSTM. In order to evaluate how well language models can exploit longer contexts and deal with more realistic vocabularies and larger corpora we also introduce the freely available WikiText corpus.,Pointer Sentinel-LSTM (medium),Unreleased,,,2024-11-01 14:02:49+00:00,"United States of America,United States of America",,,,,,,,,
Zoneout + Variational LSTM (WT2),Language,"MetaMind Inc,Salesforce","Industry,Industry","Stephen Merity, Caiming Xiong, James Bradbury, Richard Socher",2016-09-26,Pointer Sentinel Mixture Models,https://arxiv.org/abs/1609.07843,2307.0,Highly cited,,21000000.0,,1.68e+16,,,,WikiText-2,,,,64.0,,,,,,Recent neural network sequence models with softmax classifiers have achieved their best language modeling performance only with very large hidden states and large vocabularies. Even then they struggle to predict rare or unseen words even if the context makes the prediction unambiguous. We introduce the pointer sentinel mixture architecture for neural sequence models which has the ability to either reproduce a word from the recent context or produce a word from a standard softmax classifier. Our pointer sentinel-LSTM model achieves state of the art language modeling performance on the Penn Treebank (70.9 perplexity) while using far fewer parameters than a standard softmax LSTM. In order to evaluate how well language models can exploit longer contexts and deal with more realistic vocabularies and larger corpora we also introduce the freely available WikiText corpus.,Zoneout + Variational LSTM (WT2),Unreleased,,,2024-11-01 14:02:50+00:00,"United States of America,United States of America",,,,,,,,,
Byte-mLSTM+emb+WN+VD,Language,"University of Edinburgh,Toyota Technological Institute at Chicago","Academia,Academia","Ben Krause, Liang Lu, Iain Murray, Steve Renals",2016-09-26,Multiplicative LSTM for sequence modelling,https://arxiv.org/abs/1609.07959,216.0,,,46000000.0,,,,,,,,,,,,,,,,"We introduce multiplicative LSTM (mLSTM), a recurrent neural network architecture for sequence modelling that combines the long short-term memory (LSTM) and multiplicative recurrent neural network architectures. mLSTM is characterised by its ability to have different recurrent transition functions for each possible input, which we argue makes it more expressive for autoregressive density estimation. We demonstrate empirically that mLSTM outperforms standard LSTM and its deep variants for a range of character level language modelling tasks. In this version of the paper, we regularise mLSTM to achieve 1.27 bits/char on text8 and 1.24 bits/char on Hutter Prize. We also apply a purely byte-level mLSTM on the WikiText-2 dataset to achieve a character level entropy of 1.26 bits/char, corresponding to a word level perplexity of 88.8, which is comparable to word level LSTMs regularised in similar ways on the same task.",Byte-mLSTM+emb+WN+VD,Unreleased,,,2024-09-05 18:08:31+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
Knowledge distillation student model,Language,Harvard University,Academia,"Yoon Kim, Alexander M. Rush",2016-09-22,Sequence-Level Knowledge Distillation,https://arxiv.org/abs/1606.07947,,,,84000000.0,84M from Table 1.,1.008e+17,,,6ND = 6 FLOP/param/token * 84000000 parameters * 200000000 tokens = 1.008e+17 FLOP (Speculative confidence since the amount of epochs is unknown),WMT English-German,,200000000.0,"""The training set has 4m sentences"". 

If the average sentence is ~25 tokens (ballpark), dataset size is 
4M * 25 * 2 = 200M tokens",,,,,,,"Neural machine translation (NMT) offers a novel alternative formulation of translation that is potentially simpler than statistical approaches. However to reach competitive performance, NMT models need to be exceedingly large. In this paper we consider applying knowledge distillation approaches (Bucila et al., 2006; Hinton et al., 2015) that have proven successful for reducing the size of neural models in other domains to the problem of NMT. We demonstrate that standard knowledge distillation applied to word-level prediction can be effective for NMT, and also introduce two novel sequence-level versions of knowledge distillation that further improve performance, and somewhat surprisingly, seem to eliminate the need for beam search (even when applied on the original teacher model). Our best student model runs 10 times faster than its state-of-the-art teacher with little loss in performance. It is also significantly better than a baseline model trained without knowledge distillation: by 4.2/1.7 BLEU with greedy decoding/beam search. Applying weight pruning on top of knowledge distillation results in a student model that has 13 times fewer parameters than the original teacher model, with a decrease of 0.4 BLEU.",,,,Speculative,2025-03-04 15:23:23+00:00,United States of America,,,,,,,,,
Wide Residual Network,Vision,Université Paris-Est,Academia,"Sergey Zagoruyko, Nikos Komodakis",2016-09-19,Wide Residual Networks,https://arxiv.org/abs/1605.07146,7455.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:49+00:00,France,,,,,,,,,
MS-CNN,Vision,"IBM,University of California San Diego","Industry,Academia","Zhaowei Cai, Quanfu Fan, Rogerio S. Feris, Nuno Vasconcelos",2016-09-17,A Unified Multi-scale Deep Convolutional Neural Network for Fast Object Detection,https://link.springer.com/chapter/10.1007/978-3-319-46493-0_22,1458.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,"United States of America,United States of America",,,,,,,,,
Stacked hourglass network,Vision,University of Michigan,Academia,"Alejandro Newell, Kaiyu Yang, Jia Deng",2016-09-17,Stacked Hourglass Networks for Human Pose Estimation,https://link.springer.com/chapter/10.1007/978-3-319-46484-8_29,4808.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
TSN,Video,"ETH Zurich,Shenzhen Institute of Advanced Technology,Chinese University of Hong Kong (CUHK)","Academia,Academia","Limin Wang, Yuanjun Xiong, Zhe Wang, Yu Qiao, Dahua Lin, Xiaoou Tang, Luc Van Gool",2016-09-17,Temporal Segment Networks: Towards Good Practices for Deep Action Recognition,https://link.springer.com/chapter/10.1007/978-3-319-46484-8_2,3621.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,"Switzerland,China,Hong Kong,China",,,,,,,,,
ResNet-1001,Vision,Microsoft,Industry,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun",2016-09-17,Identity Mappings in Deep Residual Networks,https://link.springer.com/chapter/10.1007/978-3-319-46493-0_38,9621.0,Highly cited,,10200000.0,,,,,"""On CIFAR, ResNet-1001 takes about 27 h to train on 2 GPUs""","CIFAR-10,CIFAR-100",,,,,,,,,,,,,,,2024-11-01 14:03:03+00:00,United States of America,,,,,,,,,
ResNet-200,Vision,Microsoft Research Asia,Industry,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun",2016-09-17,Identity Mappings in Deep Residual Networks,https://link.springer.com/chapter/10.1007/978-3-319-46493-0_38,9621.0,Highly cited,,,,2.9741645e+19,,,"""ResNet-200 takes about 3 weeks to train on 8 GPUs"". didn't specify which GPU
upd: 
common GPU performance for 2016 is 6.83E+12 FLOPs/s (https://epoch.ai/blog/estimating-training-compute#forward-pass-compute-and-parameter-counts-of-common-layers) 
then 6.83E+12*3*7*24*3600*8*0.3=2.9741645e+19 (Speculative)",ImageNet,,1281167.0,,,500.0,"""about 3 weeks""",,,,"Deep residual networks have emerged as a family of extremely deep architectures showing compelling accuracy and nice convergence behaviors. In this paper, we analyze the propagation formulations behind the residual building blocks, which suggest that the forward and backward signals can be directly propagated from one block to any other block, when using identity mappings as the skip connections and after-addition activation. A series of ablation experiments support the importance of these identity mappings. This motivates us to propose a new residual unit, which makes training easier and improves generalization. We report improved results using a 1001-layer ResNet on CIFAR10 (4.62 % error) and CIFAR-100, and a 200-layer ResNet on ImageNet.",,Unreleased,,Speculative,2025-02-19 17:43:37+00:00,China,,,,,,,,,
Youtube recommendation model,Recommendation,Google,Industry,"Paul Covington, Jay Adams, and Emre Sargin",2016-09-15,Deep Neural Networks for YouTube Recommendations,https://research.google/pubs/pub45530/,2914.0,Highly cited,,,,,,,,,,,,,,,,,,"YouTube represents one of the largest scale and most sophisticated industrial recommendation systems in existence. In this paper, we describe the system at a high level and focus on the dramatic performance improvements brought by deep learning. The paper is split according to the classic two-stage information retrieval dichotomy: first, we detail a deep candidate generation model and then describe a separate deep ranking model. We also provide practical lessons and insights derived from designing, iterating and maintaining a massive recommendation system with enormous user-facing impact.",,,,Unknown,2024-11-01 14:03:03+00:00,United States of America,,,,,,,,,
WaveNet,Speech,Google DeepMind,Industry,"A Oord, S Dieleman, H Zen, K Simonyan",2016-09-12,WaveNet: A Generative Model for Raw Audio,https://arxiv.org/abs/1609.03499,6929.0,Highly cited,,,,,,,,,,,,,,,,,,"This paper introduces WaveNet, a deep neural network for generating raw audio waveforms. The model is fully probabilistic and autoregressive, with the predictive distribution for each audio sample conditioned on all previous ones; nonetheless we show that it can be efficiently trained on data with tens of thousands of samples per second of audio. When applied to text-to-speech, it yields state-of-the-art performance, with human listeners rating it as significantly more natural sounding than the best parametric and concatenative systems for both English and Mandarin. A single WaveNet can capture the characteristics of many different speakers with equal fidelity, and can switch between them by conditioning on the speaker identity. When trained to model music, we find that it generates novel and often highly realistic musical fragments. We also show that it can be employed as a discriminative model, returning promising results for phoneme recognition.",,,,Unknown,2024-11-01 14:03:03+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
MS-ensemble-speech-recognition,Speech,Microsoft,Industry,"Wayne Xiong, J. Droppo, Xuedong Huang, F. Seide, M. Seltzer, A. Stolcke, Dong Yu, G. Zweig",2016-09-12,The microsoft 2016 conversational speech recognition system,https://www.semanticscholar.org/paper/The-microsoft-2016-conversational-speech-system-Xiong-Droppo/ac94ef90be9b0c3bf744d6744e47b38855f9a4c7,,SOTA improvement,https://paperswithcode.com/sota/speech-recognition-on-switchboard-hub500 ,3172117056.0,"Large ensemble
CNNs: 85000000 + 38000000 + 65000000 = 188000000 = 188M
LSTMs: 40 / 140 input - 6*512 layers - 9000 / 27000 output
4*(140+512)*512 + 5*4*(512+512)*512 + 4*(512+27000)*27000=2983117056
LM: 1000*1000 = 1000000 + Embedding
Total: 1000000+2983117056+188000000=3172117056 (underestimate because it doesn't account for embeddings)
",,,,,"Fisher,Switchboard","""We train with the commonly used English CTS (Switchboard and
Fisher) corpora. Evaluation is carried out on the NIST 2000 CTS
test set, which comprises both Switchboard (SWB) and CallHome
(CH) subsets. The Switchboard-1 portion of the NIST 2002 CTS test
set was used for tuning and development. The acoustic training data
is comprised by LDC corpora 97S62, 2004S13, 2005S13, 2004S11
and 2004S09; see [20] for a full description.""",,2000h of audio data + 85M words of text data,,,,,,Supervised,"We describe Microsoft's conversational speech recognition system, in which we combine recent developments in neural-network-based acoustic and language modeling to advance the state of the art on the Switchboard recognition task. Inspired by machine learning ensemble techniques, the system uses a range of convolutional and recurrent neural networks. I-vector modeling and lattice-free MMI training provide significant gains for all acoustic model architectures. Language model rescoring with multiple forward and backward running RNNLMs, and word posterior-based system combination provide a 20% boost. The best single system uses a ResNet architecture acoustic model with RNNLM rescoring, and achieves a word error rate of 6.9% on the NIST 2000 Switchboard task. The combined system has an error rate of 6.2%, representing an improvement over previously reported results on this benchmark task.",,Unreleased,,Unverified,2024-12-05 11:45:32+00:00,United States of America,,,,,,,,,
LF-MMI,Speech,"Johns Hopkins University,Cornell University","Academia,Academia","Daniel Povey, Vijayaditya Peddinti, Daniel Galvez, Pegah Ghahremani, Vimal Manohar, Xingyu Na, Yiming Wang, S. Khudanpur",2016-09-08,Purely sequence-trained neural networks for ASR based on lattice-free MMI,https://www.semanticscholar.org/paper/Purely-Sequence-Trained-Neural-Networks-for-ASR-on-Povey-Peddinti/6ce6a9a30cd69bd2842a4b581cf48c6815bdfdd8,,"Highly cited,SOTA improvement",SOTA on Speech Recognition on WSJ eval92,16600000.0,Largest model: TDNN-A: 16.6 million parameters (Table 2),,,,,Switchboard,,,"300hr of audio, number of words unclear",,,,,,,"In this paper we describe a method to perform sequencediscriminative training of neural network acoustic models without the need for frame-level cross-entropy pre-training. We use the lattice-free version of the maximum mutual information (MMI) criterion: LF-MMI. To make its computation feasible we use a phone n-gram language model, in place of the word language model. To further reduce its space and time complexity we compute the objective function using neural network outputs at one third the standard frame rate. These changes enable us to perform the computation for the forward-backward algorithm on GPUs. Further the reduced output frame-rate also provides a significant speed-up during decoding. We present results on 5 different LVCSR tasks with training data ranging from 100 to 2100 hours. Models trained with LFMMI provide a relative word error rate reduction of ∼11.5%, over those trained with cross-entropy objective function, and ∼8%, over those trained with cross-entropy and sMBR objective functions. A further reduction of ∼2.5%, relative, can be obtained by fine tuning these models with the word-lattice based sMBR objective function.",,Unreleased,,Unverified,2025-01-22 10:56:35+00:00,"United States of America,United States of America",,,,,,,,,
Multi-task Cascaded CNN,Vision,"Chinese Academy of Sciences,Chinese University of Hong Kong (CUHK)","Academia,Academia","Kaipeng Zhang, Zhanpeng Zhang, Zhifeng Li, Yu Qiao",2016-08-26,Joint Face Detection and Alignment using Multitask cascaded convolutional networks,https://arxiv.org/abs/1604.02878,4605.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:04+00:00,"China,Hong Kong,China",,,,,,,,,
DenseNet-264,Vision,"Tsinghua University,Facebook AI Research,Cornell University","Academia,Industry,Academia","G Huang, Z Liu, L Van Der Maaten",2016-08-25,Densely Connected Convolutional Networks,https://arxiv.org/abs/1608.06993,33650.0,Highly cited,,34000000.0,,,,,,,,,,,,,,,,,,,,,2024-11-01 14:03:14+00:00,"China,United States of America,United States of America",,,,,,,,,
SimpleNet,Vision,"Sensifai,Islamic Azad University,Technicolor R&I,Institute for Research in Fundamental Sciences (IPM)","Industry,Academia","Seyyed Hossein Hasanpour, Mohammad Rouhani, Mohsen Fayyaz, Mohammad Sabokrou",2016-08-22,"Lets keep it simple, Using simple architectures to outperform deeper and more complex architectures",https://arxiv.org/abs/1608.06037,117.0,SOTA improvement,"""We achieved state-of-theart result on CIFAR10 outperforming several heavier architectures""",5480000.0,SOTA CIFAR-10 model was 5.48m params,,,,,"CIFAR-10,ImageNet","""We experimented on CIFAR-10/100 Krizhevsky & Hinton (2009), SVHN Netzer et al. (2011), MNIST
Lecun et al. (1998) and ILSVRC 2012 classification task Russakovsky et al. (2015) datasets in order
to evaluate and compare our architecture""",,,,,,NVIDIA GeForce GTX 980,,,"Major winning Convolutional Neural Networks (CNNs), such as AlexNet, VGGNet, ResNet, GoogleNet, include tens to hundreds of millions of parameters, which impose considerable computation and memory overhead. This limits their practical use for training, optimization and memory efficiency. On the contrary, light-weight architectures, being proposed to address this issue, mainly suffer from low accuracy. These inefficiencies mostly stem from following an ad hoc procedure. We propose a simple architecture, called SimpleNet, based on a set of designing principles, with which we empirically show, a well-crafted yet simple and reasonably deep architecture can perform on par with deeper and more complex architectures. SimpleNet provides a good tradeoff between the computation/memory efficiency and the accuracy. Our simple 13-layer architecture outperforms most of the deeper and complex architectures to date such as VGGNet, ResNet, and GoogleNet on several well-known benchmarks while having 2 to 25 times fewer number of parameters and operations. This makes it very handy for embedded systems or systems with computational and memory limitations. We achieved state-of-theart result on CIFAR10 outperforming several heavier architectures, near state of the art on MNIST and highly competitive results on CIFAR100 and SVHN. We also outperformed the much larger and deeper architectures such as VGGNet and popular variants of ResNets among others on the ImageNet dataset. Models are made available at: https://github.com/Coderx7/SimpleNet",,,,Confident,2024-10-08 17:35:33+00:00,"Belgium,Iran (Islamic Republic of),France,Iran (Islamic Republic of)",,,,,,,,,
Attend-Infer-Repeat,Vision,Google DeepMind,Industry,"SM Ali Eslami, Nicolas Heess, Theophane Weber, Yuval Tassa, David Szepesvari, Geoffrey E Hinton",2016-08-12,"Attend, Infer, Repeat: Fast Scene Understanding with Generative Models",https://arxiv.org/abs/1603.08575,560.0,,,82130304.0,from appendix E: The convolutional neural network uses a 64×(5×5)-64×(5×5)-64×(5×5)-512 architecture.,6.448896e+16,,,(peak FLOPs for GPU - 1244 GFLOPs) times (training time - 3600 * 48 second) * (0.3 assumed utilization rate) ,MNIST,images of multiple MNIST digits,60000.0,60000 MNIST images,,48.0,"48 hours for MNIST model, 72 hours for 3D scenes model",NVIDIA Quadro K4000,,,"We present a framework for efficient inference in structured image models that explicitly reason about objects. We achieve this by performing probabilistic inference using a recurrent neural network that attends to scene elements and processes them one at a time. Crucially, the model itself learns to choose the appropriate number of inference steps. We use this scheme to learn to perform inference in partially specified 2D models (variable-sized variational auto-encoders) and fully specified 3D models (probabilistic renderers). We show that such models learn to identify multiple objects – counting, locating and classifying the elements of a scene – without any supervision, e.g., decomposing 3D images with various numbers of objects in a single forward pass of a neural network at unprecedented speed. We
further show that the networks produce accurate inferences when compared to supervised counterparts, and that their structure leads to improved generalization.",,,,Confident,2025-02-17 19:17:08+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Order embeddings with layer norm,Vision,University of Toronto,Academia,"Jimmy Lei Ba, Jamie Ryan Kiros, Geoffrey E. Hinton",2016-07-21,Layer Normalization,https://arxiv.org/abs/1607.06450,,,,,possibly can be calculated based on architecture description,,,,,COCO,,,,,,,,,,"Training state-of-the-art, deep neural networks is computationally expensive. One way to reduce the training time is to normalize the activities of the neurons. A recently introduced technique called batch normalization uses the distribution of the summed input to a neuron over a mini-batch of training cases to compute a mean and variance which are then used to normalize the summed input to that neuron on each training case. This significantly reduces the training time in feed-forward neural networks. However, the effect of batch normalization is dependent on the mini-batch size and it is not obvious how to apply it to recurrent neural networks. In this paper, we transpose batch normalization into layer normalization by computing the mean and variance used for normalization from all of the summed inputs to the neurons in a layer on a single training case. Like batch normalization, we also give each neuron its own adaptive bias and gain which are applied after the normalization but before the non-linearity. Unlike batch normalization, layer normalization performs exactly the same computation at training and test times. It is also straightforward to apply to recurrent neural networks by computing the normalization statistics separately at each time step. Layer normalization is very effective at stabilizing the hidden state dynamics in recurrent networks. Empirically, we show that layer normalization can substantially reduce the training time compared with previously published techniques.",,,,Unverified,2024-09-25 17:11:45+00:00,Canada,Order-Embeddings of Images and Language,,,,,,,,
Layer Normalization: The Attentive Reader,Language,University of Toronto,Academia,"Jimmy Lei Ba, Jamie Ryan Kiros, Geoffrey E. Hinton",2016-07-21,Layer Normalization,https://arxiv.org/abs/1607.06450,,,,,possibly can be calculated based on architecture description,,,,,Question Answering Corpus (CNN + Daily Mail),,,,,,,,,,"Training state-of-the-art, deep neural networks is computationally expensive. One way to reduce the training time is to normalize the activities of the neurons. A recently introduced technique called batch normalization uses the distribution of the summed input to a neuron over a mini-batch of training cases to compute a mean and variance which are then used to normalize the summed input to that neuron on each training case. This significantly reduces the training time in feed-forward neural networks. However, the effect of batch normalization is dependent on the mini-batch size and it is not obvious how to apply it to recurrent neural networks. In this paper, we transpose batch normalization into layer normalization by computing the mean and variance used for normalization from all of the summed inputs to the neurons in a layer on a single training case. Like batch normalization, we also give each neuron its own adaptive bias and gain which are applied after the normalization but before the non-linearity. Unlike batch normalization, layer normalization performs exactly the same computation at training and test times. It is also straightforward to apply to recurrent neural networks by computing the normalization statistics separately at each time step. Layer normalization is very effective at stabilizing the hidden state dynamics in recurrent networks. Empirically, we show that layer normalization can substantially reduce the training time compared with previously published techniques.",,,,Unverified,2024-09-05 18:08:31+00:00,Canada,The Attentive Reader,,,,,,,,
Layer Normalization: Skip Thoughts,Language,University of Toronto,Academia,"Jimmy Lei Ba, Jamie Ryan Kiros, Geoffrey E. Hinton",2016-07-21,Layer Normalization,https://arxiv.org/abs/1607.06450,,,,,possibly can be calculated based on architecture description,,,,,"BookCorpus (BooksCorpus, Toronto Book Corpus)",,,,,,,,,,"Training state-of-the-art, deep neural networks is computationally expensive. One way to reduce the training time is to normalize the activities of the neurons. A recently introduced technique called batch normalization uses the distribution of the summed input to a neuron over a mini-batch of training cases to compute a mean and variance which are then used to normalize the summed input to that neuron on each training case. This significantly reduces the training time in feed-forward neural networks. However, the effect of batch normalization is dependent on the mini-batch size and it is not obvious how to apply it to recurrent neural networks. In this paper, we transpose batch normalization into layer normalization by computing the mean and variance used for normalization from all of the summed inputs to the neurons in a layer on a single training case. Like batch normalization, we also give each neuron its own adaptive bias and gain which are applied after the normalization but before the non-linearity. Unlike batch normalization, layer normalization performs exactly the same computation at training and test times. It is also straightforward to apply to recurrent neural networks by computing the normalization statistics separately at each time step. Layer normalization is very effective at stabilizing the hidden state dynamics in recurrent networks. Empirically, we show that layer normalization can substantially reduce the training time compared with previously published techniques.",,,,Unverified,2024-09-05 18:08:31+00:00,Canada,Skip-Thoughts,,,,,,,,
Layer Normalization: Draw,Image generation,University of Toronto,Academia,"Jimmy Lei Ba, Jamie Ryan Kiros, Geoffrey E. Hinton",2016-07-21,Layer Normalization,https://arxiv.org/abs/1607.06450,,,,,possibly can be calculated based on architecture description,,,,,MNIST,,70000.0,"The dataset has been split into 50,000
training, 10,000 validation and 10,000 test",,,,,,,"Training state-of-the-art, deep neural networks is computationally expensive. One way to reduce the training time is to normalize the activities of the neurons. A recently introduced technique called batch normalization uses the distribution of the summed input to a neuron over a mini-batch of training cases to compute a mean and variance which are then used to normalize the summed input to that neuron on each training case. This significantly reduces the training time in feed-forward neural networks. However, the effect of batch normalization is dependent on the mini-batch size and it is not obvious how to apply it to recurrent neural networks. In this paper, we transpose batch normalization into layer normalization by computing the mean and variance used for normalization from all of the summed inputs to the neurons in a layer on a single training case. Like batch normalization, we also give each neuron its own adaptive bias and gain which are applied after the normalization but before the non-linearity. Unlike batch normalization, layer normalization performs exactly the same computation at training and test times. It is also straightforward to apply to recurrent neural networks by computing the normalization statistics separately at each time step. Layer normalization is very effective at stabilizing the hidden state dynamics in recurrent networks. Empirically, we show that layer normalization can substantially reduce the training time compared with previously published techniques.",,,,Unverified,2024-09-05 18:08:31+00:00,Canada,Draw,,,,,,,,
Layer Normalization: Handwriting sequence generation,Image generation,University of Toronto,Academia,"Jimmy Lei Ba, Jamie Ryan Kiros, Geoffrey E. Hinton",2016-07-21,Layer Normalization,https://arxiv.org/abs/1607.06450,,,,3700000.0," The total number of
weights was increased to approximately 3.7M. ",,,,,IAM Online Handwriting Database (IAM-OnDB),,8525300.0,"12179*700=8525300

There are, in total, 12179 handwriting line sequences. The input
string is typically more than 25 characters and the average handwriting line has a length around 700.",,,,,,,"Training state-of-the-art, deep neural networks is computationally expensive. One way to reduce the training time is to normalize the activities of the neurons. A recently introduced technique called batch normalization uses the distribution of the summed input to a neuron over a mini-batch of training cases to compute a mean and variance which are then used to normalize the summed input to that neuron on each training case. This significantly reduces the training time in feed-forward neural networks. However, the effect of batch normalization is dependent on the mini-batch size and it is not obvious how to apply it to recurrent neural networks. In this paper, we transpose batch normalization into layer normalization by computing the mean and variance used for normalization from all of the summed inputs to the neurons in a layer on a single training case. Like batch normalization, we also give each neuron its own adaptive bias and gain which are applied after the normalization but before the non-linearity. Unlike batch normalization, layer normalization performs exactly the same computation at training and test times. It is also straightforward to apply to recurrent neural networks by computing the normalization statistics separately at each time step. Layer normalization is very effective at stabilizing the hidden state dynamics in recurrent networks. Empirically, we show that layer normalization can substantially reduce the training time compared with previously published techniques.",,,,Speculative,2024-12-02 15:24:05+00:00,Canada,RNN+weight noise+dynamic eval,189261660000000.0,=8525300*3700000*6=1.8926166e+14,,,,,,
Character-enriched word2vec,Language,Facebook AI Research,Industry,"Piotr Bojanowski, Edouard Grave, Armand Joulin, Tomas Mikolov",2016-07-15,Enriching Word Vectors with Subword Information,https://arxiv.org/abs/1607.04606,9415.0,Highly cited,,,,,,,,,,,,,,,,,,"Continuous word representations, trained on large unlabeled corpora are useful for many natural language processing tasks. Popular models that learn such representations ignore the morphology of words, by assigning a distinct vector to each word. This is a limitation, especially for languages with large vocabularies and many rare words. In this paper, we propose a new approach based on the skipgram model, where each word is represented as a bag of character n-grams. A vector representation is associated to each character n-gram; words being represented as the sum of these representations. Our method is fast, allowing to train models on large corpora quickly and allows us to compute word representations for words that did not appear in the training data. We evaluate our word representations on nine different languages, both on word similarity and analogy tasks. By comparing to recently proposed morphological word representations, we show that our vectors achieve state-of-the-art performance on these tasks.",,,,Unknown,2024-11-01 14:03:04+00:00,United States of America,,,,,,,,,
VD-RHN,Language,"ETH Zurich,IDSIA","Academia,Academia","Julian Georg Zilly, Rupesh Kumar Srivastava, Jan Koutník, Jürgen Schmidhuber",2016-07-12,Recurrent Highway Networks,https://arxiv.org/abs/1607.03474,493.0,SOTA improvement,"""On the larger Wikipedia datasets for character prediction (text8 and enwik8), RHNs outperform all previous results and achieve an entropy of 1.27 bits per character.""",32000000.0,,3570000000000000.0,,,,Penn TreeBank,,,,20.0,,,,,,"Many sequential processing tasks require complex nonlinear transition functions from one step to the next. However, recurrent neural networks with 'deep' transition functions remain difficult to train, even when using Long Short-Term Memory (LSTM) networks. We introduce a novel theoretical analysis of recurrent networks based on Gersgorin's circle theorem that illuminates several modeling and optimization issues and improves our understanding of the LSTM cell. Based on this analysis we propose Recurrent Highway Networks, which extend the LSTM architecture to allow step-to-step transition depths larger than one. Several language modeling experiments demonstrate that the proposed architecture results in powerful and efficient models. On the Penn Treebank corpus, solely increasing the transition depth from 1 to 10 improves word-level perplexity from 90.6 to 65.4 using the same number of parameters. On the larger Wikipedia datasets for character prediction (text8 and enwik8), RHNs outperform all previous results and achieve an entropy of 1.27 bits per character.",VD-RHN,Unreleased,,,2024-09-11 15:36:59+00:00,"Switzerland,Switzerland",,,,,,,,,
fastText,Language,Facebook AI Research,Industry,"A Joulin, E Grave, P Bojanowski, T Mikolov",2016-07-06,Bag of Tricks for Efficient Text Classification,https://arxiv.org/abs/1607.01759,4362.0,Highly cited,,,,,,,,,,,,,,,,,,"This paper explores a simple and efficient baseline for text classification. Our experiments show that our fast text classifier fastText is often on par with deep learning classifiers in terms of accuracy, and many orders of magnitude faster for training and evaluation. We can train fastText on more than one billion words in less than ten minutes using a standard multicore~CPU, and classify half a million sentences among~312K classes in less than a minute.",,,,Unknown,2024-11-01 14:03:15+00:00,United States of America,,,,,,,,,
node2vec,Mathematics,Stanford University,Academia,"Aditya Grover, Jure Leskovec",2016-07-03,node2vec: Scalable Feature Learning for Networks,https://arxiv.org/abs/1607.00653,,,,1280000.0,"If a graph has 10,000 nodes and the embeddings are 128-dimensional, then the total number of parameters would be:
P=10,000×128=1,280,000",,,,,,,,,,,,,,,"Prediction tasks over nodes and edges in networks require careful effort in engineering features used by learning algorithms. Recent research in the broader field of representation learning has led to significant progress in automating prediction by learning the features themselves. However, present feature learning approaches are not expressive enough to capture the diversity of connectivity patterns observed in networks. Here we propose node2vec, an algorithmic framework for learning continuous feature representations for nodes in networks. In node2vec, we learn a mapping of nodes to a low-dimensional space of features that maximizes the likelihood of preserving network neighborhoods of nodes. We define a flexible notion of a node's network neighborhood and design a biased random walk procedure, which efficiently explores diverse neighborhoods. Our algorithm generalizes prior work which is based on rigid notions of network neighborhoods, and we argue that the added flexibility in exploring neighborhoods is the key to learning richer representations. We demonstrate the efficacy of node2vec over existing state-of-the-art techniques on multi-label classification and link prediction in several real-world networks from diverse domains. Taken together, our work represents a new way for efficiently learning state-of-the-art task-independent representations in complex networks.",,,,Speculative,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
CCL,Vision,"SenseTime,Chinese University of Hong Kong (CUHK),Chinese Academy of Sciences","Industry,Academia,Academia","Shizhan Zhu, Cheng Li, Chen Change Loy, Xiaoou Tang",2016-06-27,Unconstrained Face Alignment via Cascaded Compositional Learning,https://www.semanticscholar.org/paper/Unconstrained-Face-Alignment-via-Cascaded-Learning-Zhu-Li/4396563ee3ec167932071e7936111f6a8899e905,,SOTA improvement,https://paperswithcode.com/sota/face-alignment-on-aflw-19 ,,The paper trains multiple regressions but the total parameter count is unclear.,,,,,,AFLW,20000.0,Table 1,,,,,,Supervised,"We present a practical approach to address the problem of unconstrained face alignment for a single image. In our unconstrained problem, we need to deal with large shape and appearance variations under extreme head poses and rich shape deformation. To equip cascaded regressors with the capability to handle global shape variation and irregular appearance-shape relation in the unconstrained scenario, we partition the optimisation space into multiple domains of homogeneous descent, and predict a shape as a composition of estimations from multiple domain-specific regressors. With a specially formulated learning objective and a novel tree splitting function, our approach is capable of estimating a robust and meaningful composition. In addition to achieving state-of-the-art accuracy over existing approaches, our framework is also an efficient solution (350 FPS), thanks to the on-the-fly domain exclusion mechanism and the capability of leveraging the fast pixel feature.",,Unreleased,,Unverified,2024-12-12 14:20:30+00:00,"Hong Kong,China,Hong Kong,China,China",,,,,,,,,
Wide & Deep,Recommendation,Google,Industry,"HT Cheng, L Koc, J Harmsen, T Shaked",2016-06-24,Wide & Deep Learning for Recommender Systems,https://arxiv.org/abs/1606.07792,3378.0,Highly cited,,,,,,,,,,,,,,,,,,"Generalized linear models with nonlinear feature transformations are widely used for large-scale regression and classification problems with sparse inputs. Memorization of feature interactions through a wide set of cross-product feature transformations are effective and interpretable, while generalization requires more feature engineering effort. With less feature engineering, deep neural networks can generalize better to unseen feature combinations through low-dimensional dense embeddings learned for the sparse features. However, deep neural networks with embeddings can over-generalize and recommend less relevant items when the user-item interactions are sparse and high-rank. In this paper, we present Wide & Deep learning---jointly trained wide linear models and deep neural networks---to combine the benefits of memorization and generalization for recommender systems. We productionized and evaluated the system on Google Play, a commercial mobile app store with over one billion active users and over one million apps. Online experiment results show that Wide & Deep significantly increased app acquisitions compared with wide-only and deep-only models. We have also open-sourced our implementation in TensorFlow.",,,,Unknown,2024-11-01 14:03:15+00:00,United States of America,,,,,,,,,
R-FCN,Vision,"Tsinghua University,Microsoft Research","Academia,Industry","Jifeng Dai, Y. Li, Kaiming He, and Jian Sun",2016-06-21,R-fcn: Object detection via region-based fully convolutional networks.,https://arxiv.org/abs/1605.06409,5411.0,Highly cited,,,,6.1492939794e+16,,,"1,464  images in 2012 VOC (https://paperswithcode.com/dataset/pascal-voc)/
9,963 images in 2007 VOC (https://www.tensorflow.org/datasets/catalog/voc)
83K training images in MS COCO  (https://paperswithcode.com/dataset/coco)

They used a Nvidia K40 GPU and report training time/image in seconds (table 3)

Assumed a 0.33 util rate","PASCAL VOC 2007,PASCAL VOC 2012,COCO",,94427.0,,,,,,,,,,,,,2025-02-19 17:42:21+00:00,"China,United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
DMN,Language,Salesforce,Industry,"Ankit Kumar, Ozan Irsoy, Peter Ondruska, Mohit Iyyer, James Bradbury, Ishaan Gulrajani, Victor Zhong, Romain Paulus, Richard Socher",2016-06-20,Ask Me Anything: Dynamic Memory Networks for Natural Language Processing,https://arxiv.org/abs/1506.07285,1187.0,Highly cited,,,,,,,,,,,,,,,,,,"Most tasks in natural language processing can be cast into question answering (QA) problems over language input. We introduce the dynamic memory network (DMN), a neural network architecture which processes input sequences and questions, forms episodic memories, and generates relevant answers. Questions trigger an iterative attention process which allows the model to condition its attention on the inputs and the result of previous iterations. These results are then reasoned over in a hierarchical recurrent sequence model to generate answers. The DMN can be trained end-to-end and obtains state-of-the-art results on several types of tasks and datasets: question answering (Facebook's bAbI dataset), text classification for sentiment analysis (Stanford Sentiment Treebank) and sequence modeling for part-of-speech tagging (WSJ-PTB). The training for these different tasks relies exclusively on trained word vector representations and input-question-answer triplets.",,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Segmental RNN,Speech,"University of Edinburgh,Carnegie Mellon University (CMU),University of Washington","Academia,Academia,Academia","Liang Lu, Lingpeng Kong, Chris Dyer, Noah A. Smith, Steve Renals",2016-06-20,Segmental Recurrent Neural Networks for End-to-end Speech Recognition,https://arxiv.org/abs/1603.00223,,SOTA improvement,https://paperswithcode.com/sota/speech-recognition-on-timit,,,,,,,TIMIT,,,,,,,,,Supervised,"We study the segmental recurrent neural network for end-to-end acoustic modelling. This model connects the segmental conditional random field (CRF) with a recurrent neural network (RNN) used for feature extraction. Compared to most previous CRF-based acoustic models, it does not rely on an external system to provide features or segmentation boundaries. Instead, this model marginalises out all the possible segmentations, and features are extracted from the RNN trained together with the segmental CRF. In essence, this model is self-contained and can be trained end-to-end. In this paper, we discuss practical training and decoding issues as well as the method to speed up the training in the context of speech recognition. We performed experiments on the TIMIT dataset. We achieved 17.3 phone error rate (PER) from the first-pass decoding --- the best reported result using CRFs, despite the fact that we only used a zeroth-order CRF and without using any language model. ",,Unreleased,,Unverified,2025-01-30 10:34:17+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America,United States of America",,,,,,,,,
CMS-RCNN,Vision,IEEE,Industry,"Chenchen Zhu, Yutong Zheng, Khoa Luu, M. Savvides",2016-06-17,CMS-RCNN: Contextual Multi-Scale Region-based CNN for Unconstrained Face Detection,https://www.semanticscholar.org/paper/CMS-RCNN%3A-Contextual-Multi-Scale-Region-based-CNN-Zhu-Zheng/e8b2a98f87b7b2593b4a046464c1ec63bfd13b51,,SOTA improvement,https://paperswithcode.com/sota/face-detection-on-wider-face-medium ,138000000.0,"Based on VGG16 architecture, actual parameter count is slightly larger since the model contains some small added layers which are not described in detail.",,,,,,WIDER FACE dataset,12880.0,"159,424 annotated faces collected in 12,880 images",,,,,,Supervised,"Robust face detection in the wild is one of the ultimate components to support various facial related problems, i.e., unconstrained face recognition, facial periocular recognition, facial landmarking and pose estimation, facial expression recognition, 3D facial model construction, etc. Although the face detection problem has been intensely studied for decades with various commercial applications, it still meets problems in some real-world scenarios due to numerous challenges, e.g., heavy facial occlusions, extremely low resolutions, strong illumination, exceptional pose variations, image or video compression artifacts, etc. In this paper, we present a face detection approach named Contextual Multi-Scale Region-based Convolution Neural Network (CMS-RCNN) to robustly solve the problems mentioned above. Similar to the region-based CNNs, our proposed network consists of the region proposal component and the region-of-interest (RoI) detection component. However, far apart of that network, there are two main contributions in our proposed network that play a significant role to achieve the state-of-the-art performance in face detection. First, the multi-scale information is grouped both in region proposal and RoI detection to deal with tiny face regions. Second, our proposed network allows explicit body contextual reasoning in the network inspired from the intuition of human vision system. The proposed approach is benchmarked on two recent challenging face detection databases, i.e., the WIDER FACE Dataset which contains high degree of variability, as well as the Face Detection Dataset and Benchmark (FDDB). The experimental results show that our proposed approach trained on WIDER FACE Dataset outperforms strong baselines on WIDER FACE Dataset by a large margin, and consistently achieves competitive results on FDDB against the recent state-of-the-art face detection methods.",,Unreleased,,Unverified,2024-12-05 09:45:21+00:00,Multinational,VGG16,,,,,,,,
Spatiotemporal fusion ConvNet,Video,"Graz University of Technology,University of Oxford","Academia,Academia","Christoph Feichtenhofer, Axel Pinz, Andrew Zisserman",2016-06-01,Convolutional Two-Stream Network Fusion for Video Action Recognition,https://openaccess.thecvf.com/content_cvpr_2016/html/Feichtenhofer_Convolutional_Two-Stream_Network_CVPR_2016_paper.html,2538.0,Highly cited,,,,,,,,UCF101,,97200.0,"[SECONDS OF VIDEO]

They use UCF101, whose paper says
""We introduce UCF101 which is currently the largest dataset of human actions. It consists of 101 action classes, over 13k clips and 27 hours of video data""",,,,,,,,,,,,2024-11-01 14:03:14+00:00,"Austria,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Part-of-sentence tagging model,Language,Carnegie Mellon University (CMU),Academia,"Xuehe Ma, Eduard Hovy",2016-05-29,End-to-end Sequence Labeling via Bi-directional LSTM-CNNs-CRF,https://arxiv.org/abs/1603.01354,3193.0,Highly cited,,,Architecture described in Table 1,1.454112e+17,,,"12 hours of training for POS tagging
GeForce GTX TITAN X GPU
0.33 utilization rate
","WSJ,Penn TreeBank",WSJ subset of Penn Treebank,912344.0,Table 2,50.0,12.0,"""the model training requires about 12 hours for POS tagging and 8
hours for NER""",NVIDIA GeForce GTX TITAN X,1.0,,"State-of-the-art sequence labeling systems traditionally require large amounts of task-specific knowledge in the form of handcrafted features and data pre-processing. In this paper, we introduce a novel neutral network architecture that benefits from both word- and character-level representations automatically, by using combination of bidirectional LSTM, CNN and CRF. Our system is truly end-to-end, requiring no feature engineering or data preprocessing, thus making it applicable to a wide range of sequence labeling tasks. We evaluate our system on two data sets or two sequence labeling tasks — Penn Treebank WSJ corpus for part-of-speech (POS) tagging and CoNLL 2003 corpus for named entity recognition (NER). We obtain state-of-the-art performance on both datasets — 97.55% accuracy for POS tagging and 91.21% F1 for NER.
",,,,Confident,2025-02-17 19:16:37+00:00,United States of America,,,,,,,,,
Named Entity Recognition model,Language,Carnegie Mellon University (CMU),Academia,"Xuezhe Ma, Eduard Hovy",2016-05-29,Layer Normalization,https://arxiv.org/abs/1603.01354,3100.0,Highly cited,,,Architecture in Table 1,9.69408e+16,,,"8 hours of training for NER
GeForce GTX TITAN X GPU
0.33 utilization rate
",CoNLL2003,Table 2,204567.0,Table 2. 204567 tokens,50.0,8.0,"""the model training requires about 12 hours for POS tagging and 8
hours for NER""",NVIDIA GeForce GTX TITAN X,1.0,,"State-of-the-art sequence labeling systems traditionally require large amounts of task-specific knowledge in the form of handcrafted features and data pre-processing. In this paper, we introduce a novel neutral network architecture that benefits from both word- and character-level representations automatically, by using combination of bidirectional LSTM, CNN and CRF. Our system is truly end-to-end, requiring no feature engineering or data preprocessing, thus making it applicable to a wide range of sequence labeling tasks. We evaluate our system on two data sets or two sequence labeling tasks — Penn Treebank WSJ corpus for part-of-speech (POS) tagging and CoNLL 2003 corpus for named entity recognition (NER). We obtain state-of-the-art performance on both datasets — 97.55% accuracy for POS tagging and 91.21% F1 for NER.
",,,,Confident,2025-02-17 19:16:49+00:00,United States of America,,,,,,,,,
LRR-4X,Vision,UC Irvine,Academia,"Golnaz Ghiasi, Charless C. Fowlkes",2016-05-08,Laplacian Pyramid Reconstruction and Refinement for Semantic Segmentation,https://www.semanticscholar.org/paper/Laplacian-Pyramid-Reconstruction-and-Refinement-for-Ghiasi-Fowlkes/2796c448023b78fd77f3a4b57966f257c5e654c2,,SOTA improvement,https://paperswithcode.com/sota/semantic-segmentation-on-cityscapes,138000000.0,VGG16 with some added layers which are not specified in detail.,,,,,Cityscapes,,2975.0,,,,,,1.0,Supervised,"CNN architectures have terrific recognition performance but rely on spatial pooling which makes it difficult to adapt them to tasks that require dense, pixel-accurate labeling. This paper makes two contributions: (1) We demonstrate that while the apparent spatial resolution of convolutional feature maps is low, the high-dimensional feature representation contains significant sub-pixel localization information. (2) We describe a multi-resolution reconstruction architecture based on a Laplacian pyramid that uses skip connections from higher resolution feature maps and multiplicative gating to successively refine segment boundaries reconstructed from lower-resolution maps. This approach yields state-of-the-art semantic segmentation results on the PASCAL VOC and Cityscapes segmentation benchmarks without resorting to more complex random-field inference or instance detection driven architectures.",,Open weights (unrestricted),,Unverified,2024-12-05 13:24:15+00:00,United States of America,VGG16,,,,,,,,
Gated HORNN (3rd order),Language,York University,Academia,"Rohollah Soltani, Hui Jiang",2016-04-30,Higher Order Recurrent Neural Networks,https://arxiv.org/abs/1605.00064,77.0,SOTA improvement,"""Both FOFEbased pooling and gated HORNNs have achieved the stateof-the-art performance, i.e., 100 in perplexity on this task.
To the best of our knowledge, this is the best reported performance on PTB under the same training condition.""",8970000.0,,,,,,Penn TreeBank,,,,,,,,,,"In this paper, we study novel neural network structures to better model long term dependency in sequential data. We propose to use more memory units to keep track of more preceding states in recurrent neural networks (RNNs), which are all recurrently fed to the hidden layers as feedback through different weighted paths. By extending the popular recurrent structure in RNNs, we provide the models with better short-term memory mechanism to learn long term dependency in sequences. Analogous to digital filters in signal processing, we call these structures as higher order RNNs (HORNNs). Similar to RNNs, HORNNs can also be learned using the back-propagation through time method. HORNNs are generally applicable to a variety of sequence modelling tasks. In this work, we have examined HORNNs for the language modeling task using two popular data sets, namely the Penn Treebank (PTB) and English text8 data sets. Experimental results have shown that the proposed HORNNs yield the state-of-the-art performance on both data sets, significantly outperforming the regular RNNs as well as the popular LSTMs.",Gated HORNN (3rd order),Unreleased,,,2024-09-05 18:08:31+00:00,Canada,,,,,,,,,
Symmetric Residual Encoder-Decoder Net,"Vision,Image generation","Nanjing University,University of Adelaide","Academia,Academia","Xiao-Jiao Mao, Chunhua Shen, Yu-Bin Yang",2016-03-30,Image Restoration Using Very Deep Convolutional Encoder-Decoder Networks with Symmetric Skip Connections,https://arxiv.org/abs/1603.09056v2,1184.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"China,Australia",,,,,,,,,
Binarized Neural Network (MNIST),Vision,"Technion - Israel Institute of Technology,Columbia University,University of Montreal / Université de Montréal","Academia,Academia,Academia","Matthieu Courbariaux, Itay Hubara, Daniel Soudry, Ran El-Yaniv, Yoshua Bengio",2016-03-17,Binarized Neural Networks: Training Neural Networks with Weights and Activations Constrained to +1 or −1,https://arxiv.org/abs/1602.02830,3299.0,Highly cited,,37000000.0,"Parameter count is not explicitly stated, but they give details:

""The MLP we train on MNIST consists of 3 hidden layers of 4096 binary units (see Section 1) and a L2-SVM output layer""

Approximately 37m, based on 784 pixels * 4096 + 2 * 4096^2",,,,,MNIST,,60000.0,"60k training images, 10k test in MNIST",1000.0,,,,,,"We introduce a method to train Binarized Neural Networks (BNNs) - neural networks with binary weights and activations at run-time. At training-time the binary weights and activations are used for computing the parameters gradients. During the forward pass, BNNs drastically reduce memory size and accesses, and replace most arithmetic operations with bit-wise operations, which is expected to substantially improve power-efficiency. To validate the effectiveness of BNNs we conduct two sets of experiments on the Torch7 and Theano frameworks. On both, BNNs achieved nearly state-of-the-art results over the MNIST, CIFAR-10 and SVHN datasets. Last but not least, we wrote a binary matrix multiplication GPU kernel with which it is possible to run our MNIST BNN 7 times faster than with an unoptimized GPU kernel, without suffering any loss in classification accuracy. The code for training and running our BNNs is available on-line.",,,,Speculative,2024-09-05 18:08:31+00:00,"Israel,United States of America,Canada",,,,,,,,,
"Template Adaptation
",Vision,University of Oxford,Academia,"Nate Crosswhite, J. Byrne, C. Stauffer, Omkar M. Parkhi, Qiong Cao, Andrew Zisserman",2016-03-12,Template Adaptation for Face Verification and Identification,https://www.semanticscholar.org/paper/Template-Adaptation-for-Face-Verification-and-Crosswhite-Byrne/42515cd370f5edf4ac6c8d4bc3f6e0d848f6b73a,,SOTA improvement,https://paperswithcode.com/sota/face-verification-on-ijb-a ,138000000.0,Trains SVM on top of VGG-Face (VGG16 architecture). SVM parameters are not included in the estimate.,,,,,,IJB-A protocol,,"""IJB-A contains 5712 images and 2085 videos of 500 subjects, for an average of 11.4 images and 4.2 videos per subject.""
Unclear how the videos were converted to training images.",,,,,,Supervised,"Face recognition performance evaluation has traditionally focused on one-to-one verification, popularized by the Labeled Faces in the Wild dataset [1] for imagery and the YouTubeFaces dataset [2] for videos. In contrast, the newly released IJB-A face recognition dataset [3] unifies evaluation of one-to-many face identification with one-to-one face verification over templates, or sets of imagery and videos for a subject. In this paper, we study the problem of template adaptation, a form of transfer learning to the set of media in a template. Extensive performance evaluations on IJB-A show a surprising result, that perhaps the simplest method of template adaptation, combining deep convolutional network features with template specific linear SVMs, outperforms the state-of-the-art by a wide margin. We study the effects of template size, negative set construction and classifier fusion on performance, then compare template adaptation to convolutional networks with metric learning, 2D and 3D alignment. Our unexpected conclusion is that these other methods, when combined with template adaptation, all achieve nearly the same top performance on IJB-A for templatebased face verification and identification.",,Unreleased,,Unverified,2024-12-12 10:52:58+00:00,United Kingdom of Great Britain and Northern Ireland,VGG-Face,,,,,,,,
Order-Embeddings of Images and Language,Vision,University of Toronto,Academia,"Ivan Vendrov, Ryan Kiros, Sanja Fidler, Raquel Urtasun",2016-03-01,Order-Embeddings of Images and Language,https://arxiv.org/abs/1511.06361,,,,,possibly can be calculated based on architecture description,,,,,COCO,,120000.0,"We use the data splits of Karpathy & Li (2015) for training
(113,287 images), validation (5000 images), and test (5000 images).",,,,,,,"Hypernymy, textual entailment, and image captioning can be seen as special cases of a single visual-semantic hierarchy over words, sentences, and images. In this paper we advocate for explicitly modeling the partial order structure of this hierarchy. Towards this goal, we introduce a general method for learning ordered representations, and show how it can be applied to a variety of tasks involving images and language. We show that the resulting representations improve performance over current approaches for hypernym prediction and image-caption retrieval.",,Open weights (unrestricted),,Unverified,2024-09-05 18:08:31+00:00,Canada,,,,,,,,,
SqueezeNet,Vision,"DeepScale,University of California (UC) Berkeley,Stanford University","Academia,Academia","Forrest N. Iandola, Song Han, Matthew W. Moskewicz, Khalid Ashraf, William J. Dally, Kurt Keutzer",2016-02-24,SqueezeNet: AlexNet-level accuracy with 50x fewer parameters and <0.5MB model size,https://arxiv.org/abs/1602.07360,6976.0,Highly cited,,1200000.0,"The paper says ""SqueezeNet achieves AlexNet-level accuracy on ImageNet with 50x fewer parameters.""

AlexNet has 60 million parameters.",,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:50+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Inception-ResNet-V2,Vision,Google,Industry,"Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi",2016-02-23,"Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning",https://arxiv.org/abs/1602.07261,13208.0,Highly cited,,56000000.0,,,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
Inceptionv4,Vision,Google,Industry,"Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi",2016-02-23,"Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning",https://arxiv.org/abs/1602.07261,13208.0,Highly cited,,43000000.0,"""The folks from Google strike again with Inception-v4, 43M parameters.""

https://towardsdatascience.com/illustrated-10-cnn-architectures-95d78ace614d",,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
BIG LSTM+CNN INPUTS ,Language,Google Brain,Industry,"Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, Yonghui Wu",2016-02-11,Exploring the Limits of Language Modeling,https://arxiv.org/abs/1602.02410,,,,1040000000.0,1.04B (Table 1),1.0220883e+20,,,"assuming (!) 10 days similarly to another model in the paper
240*3600*5046000000000*32*0.3 = 4.1853542e+19

assuming (!) 50 epochs similarly to another model in the paper
6*1.04*10^9*0.8*10^9*50 = 2.496e+20

sqrt(4.1853542e+19*2.496e+20) = 1.0220883e+20",One Billion Word benchmark,,800000000.0,"""The experiments are performed on the 1B Word Benchmark data set introduced by (Chelba et al., 2013), which is
a publicly available benchmark for measuring progress of
statistical language modeling. The data set contains about
0.8B words with a vocabulary of 793471 words, including
sentence boundary markers.""",,,"*I assumed Tesla K40s though they stated it was just one of Tesla K40

""The best model needs about 5 days to get to 35 perplexity and 10 days to 32.5.""

10*24 = 240

This model is not the biggest but has the best performance, I assume it is *likely* to have comparativeley similar training time",NVIDIA Tesla K40s,32.0,,"In this work we explore recent advances in Recurrent Neural Networks for large scale Language Modeling, a task central to language understanding. We extend current models to deal with two key challenges present in this task: corpora and vocabulary sizes, and complex, long term structure of language. We perform an exhaustive study on techniques such as character Convolutional Neural Networks or Long-Short Term Memory, on the One Billion Word Benchmark. Our best single model significantly improves state-of-the-art perplexity from 51.3 down to 30.0 (whilst reducing the number of parameters by a factor of 20), while an ensemble of models sets a new record by improving perplexity from 41.0 down to 23.7. We also release these models for the NLP and ML community to study and improve upon.",,,,Likely,2025-01-13 17:38:12+00:00,United States of America,,,,,,,,,
10 LSTMS + KN-5 (OPTIMAL WEIGHTS),Language,Google Brain,Industry,"Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, Yonghui Wu",2016-02-11,Exploring the Limits of Language Modeling,https://arxiv.org/abs/1602.02410,,,,1040000000.0,1.04B (Table 1),8.7892439e+19,,,504*3600*5046000000000*32*0.3 =8.7892439e+19 ,One Billion Word benchmark,,800000000.0,"""The experiments are performed on the 1B Word Benchmark data set introduced by (Chelba et al., 2013), which is
a publicly available benchmark for measuring progress of
statistical language modeling. The data set contains about
0.8B words with a vocabulary of 793471 words, including
sentence boundary markers.""",,,"*I assumed Tesla K40s though they stated it was just one of Tesla K40

""The best results were achieved after 3 weeks of training.""

21*24 = 504
",NVIDIA Tesla K40s,32.0,,"In this work we explore recent advances in Recurrent Neural Networks for large scale Language Modeling, a task central to language understanding. We extend current models to deal with two key challenges present in this task: corpora and vocabulary sizes, and complex, long term structure of language. We perform an exhaustive study on techniques such as character Convolutional Neural Networks or Long-Short Term Memory, on the One Billion Word Benchmark. Our best single model significantly improves state-of-the-art perplexity from 51.3 down to 30.0 (whilst reducing the number of parameters by a factor of 20), while an ensemble of models sets a new record by improving perplexity from 41.0 down to 23.7. We also release these models for the NLP and ML community to study and improve upon.",,,,Likely,2025-01-13 17:38:37+00:00,United States of America,,,,,,,,,
A3C FF hs,Games,"Google,University of Montreal / Université de Montréal","Industry,Academia","V Mnih, AP Badia, M Mirza, A Graves",2016-02-04,Asynchronous Methods for Deep Reinforcement Learning,http://arxiv.org/abs/1602.01783v2,8277.0,"Highly cited,SOTA improvement",,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:49+00:00,"United States of America,Canada",,,,,,,,,
Convolutional Pose Machines,Vision,Carnegie Mellon University (CMU),Academia,"Shih-En Wei, Varun Ramakrishna, Takeo Kanade, Yaser Sheikh",2016-01-30,Convolutional Pose Machines,https://arxiv.org/abs/1602.00134,2658.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,United States of America,,,,,,,,,
AlphaGo Lee,Games,DeepMind,Industry,"David Silver, Aja Huang, Chris J. Maddison, Arthur Guez, Laurent Sifre, George van den Driessche, Julian Schrittwieser, Ioannis Antonoglou, Veda Panneershelvam, Marc Lanctot, Sander Dieleman, Dominik Grewe, John Nham, Nal Kalchbrenner, Ilya Sutskever, Timothy Lillicrap, Madeleine Leach, Koray Kavukcuoglu, Thore Graepel, Demis Hassabis",2016-01-27,Mastering the game of Go with deep neural networks and tree search,https://www.nature.com/articles/nature16961,16057.0,Highly cited,,,,1.9e+21,,,"This number is pretty uncertain. I expect it to be right to around a factor of 3, at least compared to AlphaGo Fan.

The architecture used was pretty much the same as AlphaGo Fan, but it was ""trained for longer"" and had around 5.33x the number of convolutional layers of AlphaGo Fan (256/48 = 5.33). 

The convolutional layers are the major contributor to the training compute, so I somewhat arbitrarily just multiply the compute for AlphaGo Fan by 5. Thus 3.8e20 * 5 = 1.9e21

Otherwise there has been little said about this model specifically - I've mainly relied on the source for AlphaGo Zero and AlphaGo Fan, linked below

AlphaGo Fan: https://www.nature.com/articles/nature16961

AlphaGo Zero: https://www.nature.com/articles/nature24270.epdf?author_access_token=VJXbVjaSHxFoctQQ4p2k4tRgN0jAjWel9jnR3ZoTv0PVW4gB86EEpGqTRDtpIz-2rmo8-KG06gqVobU5NSCFeHILHcVFUeMsbvwS-lxjqQGg98faovwjxeTUgZAUMnRQ",,,29400000.0,"We trained the policy network pσ to classify positions according to expert moves played in the KGS data set. This data set contains 29.4 million positions from 160,000 games played by KGS 6 to 9 dan human players; 35.4% of the games are handicap games.",,696.0,"Training times are given for several components:
- Policy network classifier: 3 weeks
- Policy network RL: 1 day
- Value network regression: 1 week
- Rollout policy: ""Similar to the policy network, the weights π of the rollout policy are trained from 8 million positions from human games on the Tygem server to maximize log likelihood by stochastic gradient descent. Rollouts execute at approximately 1,000 simulations per second per CPU thread on an empty board."" could suggest (8M sims / 1000 sims/sec) / 3600 sec/hr = 2.2 hours, if each position corresponds to only one simulation (unclear)

Total: 29 days or 696 hours",,,,"The game of Go has long been viewed as the most challenging of classic games for artificial intelligence owing to its enormous search space and the difficulty of evaluating board positions and moves. Here we introduce a new approach to computer Go that uses ‘value networks’ to evaluate board positions and ‘policy networks’ to select moves. These deep neural networks are trained by a novel combination of supervised learning from human expert games, and reinforcement learning from games of self-play. Without any lookahead search, the neural networks play Go at the level of state-of-the-art Monte Carlo tree search programs that simulate thousands of random games of self-play. We also introduce a new search algorithm that combines Monte Carlo simulation with value and policy networks. Using this search algorithm, our program AlphaGo achieved a 99.8% winning rate against other Go programs, and defeated the human European Go champion by 5 games to 0. This is the first time that a computer program has defeated a human professional player in the full-sized game of Go, a feat previously thought to be at least a decade away.",,Unreleased,,Speculative,2025-02-19 19:06:59+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
"Variational (untied weights, MC) LSTM (Large)",Language,University of Cambridge,Academia,"Yarin Gal, Zoubin Ghahramani",2015-12-16,A Theoretically Grounded Application of Dropout in Recurrent Neural Networks,https://arxiv.org/abs/1512.05287?context=stat,1838.0,"Highly cited,SOTA improvement","""The new approach outperforms existing techniques, and to the best of our knowledge improves on the single model state-of-the-art in language modelling with the Penn Treebank (73.4 test perplexity)""",66000000.0,,5620000000000000.0,,,,,,,,16.0,,,,,,"Recurrent neural networks (RNNs) stand at the forefront of many recent developments in deep learning. Yet a major difficulty with these models is their tendency to overfit, with dropout shown to fail when applied to recurrent layers. Recent results at the intersection of Bayesian modelling and deep learning offer a Bayesian interpretation of common deep learning techniques such as dropout. This grounding of dropout in approximate Bayesian inference suggests an extension of the theoretical results, offering insights into the use of dropout with RNN models. We apply this new variational inference based dropout technique in LSTM and GRU models, assessing it on language modelling and sentiment analysis tasks. The new approach outperforms existing techniques, and to the best of our knowledge improves on the single model state-of-the-art in language modelling with the Penn Treebank (73.4 test perplexity). This extends our arsenal of variational tools in deep learning.","Variational (untied weights, MC) LSTM (Large)",Unreleased,,,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Advantage Learning,Games,Google DeepMind,Industry,"MG Bellemare, G Ostrovski, A Guez",2015-12-15,Increasing the Action Gap: New Operators for Reinforcement Learning,http://arxiv.org/abs/1512.04860v1,151.0,SOTA improvement,,,,,,,,,,,,,,,,,,"This paper introduces new optimality-preserving operators on Q-functions. We first describe an operator for tabular representations, the consistent Bellman operator, which incorporates a notion of local policy consistency. We show that this local consistency leads to an increase in the action gap at each state; increasing this gap, we argue, mitigates the undesirable effects of approximation and estimation errors on the induced greedy policies. This operator can also be applied to discretized continuous space and time problems, and we provide empirical results evidencing superior performance in this context. Extending the idea of a locally consistent operator, we then derive sufficient conditions for an operator to preserve optimality, leading to a family of operators which includes our consistent Bellman operator. As corollaries we provide a proof of optimality for Baird's advantage learning algorithm and derive other gap-increasing operators with interesting properties. We conclude with an empirical study on 60 Atari 2600 games illustrating the strong potential of these new operators.",,,,Unknown,2024-11-01 14:02:50+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
BPL,Image generation,"University of Toronto,New York University (NYU),Massachusetts Institute of Technology (MIT)","Academia,Academia,Academia","BM Lake, R Salakhutdinov, JB Tenenbaum",2015-12-11,Human-level concept learning through probabilistic program induction,https://science.sciencemag.org/content/350/6266/1332/,2885.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:49+00:00,"Canada,United States of America,United States of America",,,,,,,,,
ResNet-152 (ImageNet),Vision,Microsoft,Industry,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun",2015-12-10,Deep Residual Learning for Image Recognition,https://arxiv.org/abs/1512.03385,175697.0,Highly cited,,60200000.0,Taken from https://arxiv.org/abs/1605.07146,1.041408e+19,,,"11.3 *10^9 mult-adds per forward pass (Table 1)
2 FLOPS/ mult-add
3 for forward & backward pass
1.2 * 10^6 examples in dataset
128 epochs",ILSVRC 2012 subset of ImageNet,"They won ILSVRC 2015, but actually the classification dataset is the same as 2012",1280000.0,"""We evaluate our method on the ImageNet 2012 classification dataset [36] that consists of 1000 classes. The models are trained on the 1.28 million training images""",120.0,,,,,,"Deeper neural networks are more difficult to train. We present a residual learning framework to ease the training of networks that are substantially deeper than those used previously. We explicitly reformulate the layers as learning residual functions with reference to the layer inputs, instead of learning unreferenced functions. We provide comprehensive empirical evidence showing that these residual networks are easier to optimize, and can gain accuracy from considerably increased depth. On the ImageNet dataset we evaluate residual nets with a depth of up to 152 layers---8x deeper than VGG nets but still having lower complexity. An ensemble of these residual nets achieves 3.57% error on the ImageNet test set. This result won the 1st place on the ILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100 and 1000 layers. The depth of representations is of central importance for many visual recognition tasks. Solely due to our extremely deep representations, we obtain a 28% relative improvement on the COCO object detection dataset. Deep residual nets are foundations of our submissions to ILSVRC & COCO 2015 competitions, where we also won the 1st places on the tasks of ImageNet detection, ImageNet localization, COCO detection, and COCO segmentation.",,,,,2025-02-17 19:16:25+00:00,United States of America,,,,,,,256.0,,
ResNet-110 (CIFAR-10),Vision,Microsoft,Industry,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun",2015-12-10,Deep Residual Learning for Image Recognition,https://arxiv.org/abs/1512.03385,175697.0,Highly cited,,1700000.0,Table 6,,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:49+00:00,United States of America,,,,,,,,,
ResNet-101 (ImageNet),Vision,Microsoft,Industry,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun",2015-12-10,Deep Residual Learning for Image Recognition,https://arxiv.org/abs/1512.03385,175697.0,Highly cited,,44500000.0,Taken from https://arxiv.org/abs/1605.07146,7.004e+18,,,"Forward FLOP: 15200000000
120 epochs
1280000*120*3*15200000000=7.00416e+18
",ILSVRC 2012 subset of ImageNet,,1280000.0,"""We evaluate our method on the ImageNet 2012 classification dataset [36] that consists of 1000 classes. The models are trained on the 1.28 million training images""",120.0,,,,,Supervised,"Deeper neural networks are more difficult to train. We present a residual learning framework to ease the training of networks that are substantially deeper than those used previously. We explicitly reformulate the layers as learning residual functions with reference to the layer inputs, instead of learning unreferenced functions. We provide comprehensive empirical evidence showing that these residual networks are easier to optimize, and can gain accuracy from considerably increased depth. On the ImageNet dataset we evaluate residual nets with a depth of up to 152 layers---8x deeper than VGG nets but still having lower complexity. An ensemble of these residual nets achieves 3.57% error on the ImageNet test set. This result won the 1st place on the ILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100 and 1000 layers. The depth of representations is of central importance for many visual recognition tasks. Solely due to our extremely deep representations, we obtain a 28% relative improvement on the COCO object detection dataset. Deep residual nets are foundations of our submissions to ILSVRC & COCO 2015 competitions, where we also won the 1st places on the tasks of ImageNet detection, ImageNet localization, COCO detection, and COCO segmentation.",,Open weights (unrestricted),,Unverified,2025-02-19 17:41:42+00:00,United States of America,,,,,,,,,
DeepSpeech2 (English),Speech,Baidu Research - Silicon Valley AI Lab,Industry,"Dario Amodei, Rishita Anubhai, Eric Battenberg, Carl Case, Jared Casper, Bryan Catanzaro, Jingdong Chen, Mike Chrzanowski, Adam Coates, Greg Diamos, Erich Elsen, Jesse Engel, Linxi Fan, Christopher Fougner, Tony Han, Awni Hannun, Billy Jun, Patrick LeGresley, Libby Lin, Sharan Narang, Andrew Ng, Sherjil Ozair, Ryan Prenger, Jonathan Raiman, Sanjeev Satheesh, David Seetapun, Shubho Sengupta, Yi Wang, Zhiqian Wang, Chong Wang, Bo Xiao, Dani Yogatama, Jun Zhan, Zhenyao Zhu",2015-12-08,Deep Speech 2: End-to-End Speech Recognition in English and Mandarin,https://arxiv.org/abs/1512.02595,2853.0,Highly cited,,38000000.0,All networks have 38 million parameters.,2.6e+19,,,"1 timestep = (1280 hidden units)^2 * (7 RNN layers * 4 matrices for bidirectional + 2 DNN layers) * (2 for doubling parameters from 36M to 72M) = 98 MFLOP
20 epochs * 12,000 hours * 3600 seconds/hour * 50 samples/sec * 98 MFLOP * 3 add-multiply * 2 backprop 
= 26,000 PF = 0.30 pfs-days

See also AI and Compute by Dario Amodei and OpenAI https://openai.com/research/ai-and-compute",,,163339200.0,"""Our English speech system is trained on 11,940 hours of speech, while the Mandarin system is trained on 9,400 hours.""

11,940 * 13,680 = 163339200",,120.0,"""5 days"" from AI and Compute https://openai.com/index/ai-and-compute/",NVIDIA GeForce GTX TITAN X,16.0,,"We show that an end-to-end deep learning approach can be used to recognize either English or Mandarin Chinese speech--two vastly different languages. Because it replaces entire pipelines of hand-engineered components with neural networks, end-to-end learning allows us to handle a diverse variety of speech including noisy environments, accents and different languages. Key to our approach is our application of HPC techniques, resulting in a 7x speedup over our previous system. Because of this efficiency, experiments that previously took weeks now run in days. This enables us to iterate more quickly to identify superior architectures and algorithms. As a result, in several cases, our system is competitive with the transcription of human workers when benchmarked on standard datasets. Finally, using a technique called Batch Dispatch with GPUs in the data center, we show that our system can be inexpensively deployed in an online setting, delivering low latency when serving users at scale.",,,0.4484,Confident,2025-02-17 20:04:27+00:00,United States of America,,,,,,,,,
SSD,Vision,,,"Wei Liu, Dragomir Anguelov, Dumitru Erhan, Christian Szegedy, Scott Reed, Cheng-Yang Fu, Alexander C. Berg",2015-12-08,SSD: Single Shot MultiBox Detector,https://arxiv.org/pdf/1512.02325,39468.0,Highly cited,Also listed in Denis Panjuta's List of 100+ AI Algorithms,,Can be calculated from the VGG-16 paper and Figure 2,,,,,,,115000.0,"Multiple datasets were used (PASCAL VOC, ILSVRC, COCO) but afaict COCO is the largest. Per this paper https://arxiv.org/abs/1703.06870v1, final paragraph before section 4.1, ""As in previous work [3, 21], we train using the union of 80k train images and a 35k subset of val images (trainval35k), and report ablations on the remaining 5k subset of val images (minival)"". So trainval35k is 80k + 35k = 115k",,,"Note on training hardware below: unclear if the Titan X was for testing or training. ""We measure the speed with batch size 8 using Titan X and cuDNN v4 with Intel Xeon E5-2667v3@3.20GHz."" I don't know if it's common to use the same hardware for both testing and training.

",NVIDIA GeForce GTX TITAN X,,Supervised,"We present a method for detecting objects in images using a single deep neural network. Our approach, named SSD, discretizes the output space of bounding boxes into a set of default boxes over different aspect ratios and scales per feature map location. At prediction time, the network generates scores for the presence of each object category in each default box and produces adjustments to the box to better match the object shape. Additionally, the network combines predictions from multiple feature maps with different resolutions to naturally handle objects of various sizes. Our SSD model is simple relative to methods that require object proposals because it completely eliminates proposal generation and subsequent pixel or feature resampling stage and encapsulates all computation in a single network. This makes SSD easy to train and straightforward to integrate into systems that require a detection component. Experimental results on the PASCAL VOC, MS COCO, and ILSVRC datasets confirm that SSD has comparable accuracy to methods that utilize an additional object proposal step and is much faster, while providing a unified framework for both training and inference. Compared to other single stage methods, SSD has much better accuracy, even with a smaller input image size. For 300×300 input, SSD achieves 72.1% mAP on VOC2007 test at 58 FPS on a Nvidia Titan X and for 500×500 input, SSD achieves 75.1% mAP, outperforming a comparable state of the art Faster R-CNN model. Code is available at this https URL",,Open weights (unrestricted),,Confident,2024-10-08 17:35:28+00:00,,VGG16,,,,,,,,
Inception v3,Vision,"Google,University College London (UCL)","Industry,Academia","Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, Zbigniew Wojna",2015-12-02,Rethinking the inception architecture for computer vision.,https://arxiv.org/abs/1512.00567,25401.0,Highly cited,,23626728.0,Table 3 from Xception paper,,,,,ILSVRC 2012 subset of ImageNet,,1200000.0,"The full dataset is a lot larger and has far more categories. When people say ""ImageNet"" they're usually referring to the subset of the full dataset with 1000 categories and 1.2million images, found here: https://image-net.org/challenges/LSVRC/2012/",,,,,,,,,,,,2024-11-01 14:02:49+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Netflix Recommender System,Recommendation,Netflix,Industry,"CA Gomez-Uribe, N Hunt",2015-12-01,"The Netflix Recommender System: Algorithms, Business Value, and Innovation",https://dl.acm.org/doi/pdf/10.1145/2843948,1092.0,Highly cited,,,,,,,,,,,,,,,,,,"This article discusses the various algorithms that make up the Netflix recommender system, and describes its business purpose. We also describe the role of search and related algorithms, which for us turns into a
recommendations problem as well. We explain the motivations behind and review the approach that we use to improve the recommendation algorithms, combining A/B testing focused on improving member retention and medium term engagement, as well as offline experimentation using historical member engagement data. We discuss some of the issues in designing and interpreting A/B tests. Finally, we describe some current areas of focused innovation, which include making our recommender system global and language aware.",,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Multi-scale Dilated CNN,Vision,"Princeton University,Intel Labs","Academia,Industry","Fisher Yu, Vladlen Koltun",2015-11-23,Multi-Scale Context Aggregation by Dilated Convolutions,https://arxiv.org/abs/1511.07122,7976.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,"United States of America,Multinational,United States of America",,,,,,,,,
Highway Network,Vision,"IDSIA,SUPSI","Academia,Academia","Rupesh Kumar Srivastava, Klaus Greff, Jürgen Schmidhuber",2015-11-23,Training Very Deep Networks,https://arxiv.org/abs/1507.06228,,,,2300000.0,2.3M from Table 2.,,,,,"MNIST,CIFAR-100",,,,,,,,,,"Theoretical and empirical evidence indicates that the depth of neural networks is crucial for their success. However, training becomes more difficult as depth increases, and training of very deep networks remains an open problem. Here we introduce a new architecture designed to overcome this. Our so-called highway networks allow unimpeded information flow across many layers on information highways. They are inspired by Long Short-Term Memory recurrent networks and use adaptive gating units to regulate the information flow. Even with hundreds of layers, highway networks can be trained directly through simple gradient descent. This enables the study of extremely deep and efficient architectures.",,,,Confident,2024-09-05 18:08:31+00:00,"Switzerland,Switzerland",,,,,,,,,
3DDFA,Vision,"Chinese Academy of Sciences,Michigan State University","Academia,Academia","Xiangyu Zhu, Zhen Lei, Xiaoming Liu, Hailin Shi, S. Li",2015-11-23,"Face Alignment in Full Pose Range: A 3D Total Solution
",https://www.semanticscholar.org/paper/Face-Alignment-in-Full-Pose-Range%3A-A-3D-Total-Zhu-Lei/f79332fce3c3cc641c50d777454b1dd4debd3c5a,,SOTA improvement,https://paperswithcode.com/sota/3d-face-reconstruction-on-florence ,5355584.0,"Parameters based on Figure 2:
CNN layers: 4*4*16*6+4*4*32*16=9728
Local CNN: 3*3*48*32*11*11+3*3*64*49*9*9=3958848
FC: 9*9*64*256+234*256=1387008
Total: 9728+3958848+1387008=5355584
",,,,,,300W-LP,97967.0,,,,,,,Supervised,"Face alignment, which fits a face model to an image and extracts the semantic meanings of facial pixels, has been an important topic in CV community. However, most algorithms are designed for faces in small to medium poses (below 45), lacking the ability to align faces in large poses up to 90. The challenges are three-fold: Firstly, the commonly used landmark-based face model assumes that all the landmarks are visible and is therefore not suitable for profile views. Secondly, the face appearance varies more dramatically across large poses, ranging from frontal view to profile view. Thirdly, labelling landmarks in large poses is extremely challenging since the invisible landmarks have to be guessed. In this paper, we propose a solution to the three problems in an new alignment framework, called 3D Dense Face Alignment (3DDFA), in which a dense 3D face model is fitted to the image via convolutional neutral network (CNN). We also propose a method to synthesize large-scale training samples in profile views to solve the third problem of data labelling. Experiments on the challenging AFLW database show that our approach achieves significant improvements over state-of-the-art methods.",,Unreleased,,Unverified,2024-12-12 13:53:05+00:00,"China,United States of America",,,,,,,,,
The Attentive Reader,Language,Google DeepMind,Industry,"Karl Moritz Hermann, Tomáš Kočiský, Edward Grefenstette, Lasse Espeholt, Will Kay, Mustafa Suleyman, Phil Blunsom",2015-11-19,Teaching Machines to Read and Comprehend,https://arxiv.org/abs/1506.03340,,,,,possibly can be calculated based on architecture description,,,,,Question Answering Corpus (CNN + Daily Mail),,1000000.0,This results in a combined corpus of roughly 1M data points (Table 1).,,,,,,,"Teaching machines to read natural language documents remains an elusive challenge. Machine reading systems can be tested on their ability to answer questions posed on the contents of documents that they have seen, but until now large scale training and test datasets have been missing for this type of evaluation. In this work we define a new methodology that resolves this bottleneck and provides large scale supervised reading comprehension data. This allows us to develop a class of attention based deep neural networks that learn to read real documents and answer complex questions with minimal prior knowledge of language structure.",,Open weights (unrestricted),,Unverified,2024-09-05 18:08:31+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
SAF R-CNN,Vision,"Beijing Institute of Technology,Sun Yat-sen University,Panasonic R&D,National University of Singapore","Academia,Academia,Industry,Academia","Jianan Li, Xiaodan Liang, ShengMei Shen, Tingfa Xu, Jiashi Feng, Shuicheng Yan",2015-10-28,Scale-aware Fast R-CNN for Pedestrian Detection,https://arxiv.org/abs/1510.08160,,SOTA improvement,Pedestrian Detection on Caltech benchmark,138000000.0,"Taken from VGG16 base model, ignoring minor architectural changes",1.231108125e+19,,,"Base model: 12291000000000002000
Base model inference FLOP: 15300000000
Finetune for 7 epochs with 62500 training examples
15300000000*3*62500*7=20081250000000000=2e16

Total compute: 12291000000000002000+20081250000000000=12311081250000002000",,Caltech pedestrian dataset,62500.0,"""There are totally 350,000 bounding boxes of about 2,300 unique pedestrians labeled in 250,000 frames""
""We use dense sampling of the training data (every 4th frame""",7.0,,,NVIDIA GeForce GTX TITAN X,1.0,Supervised,"In this work, we consider the problem of pedestrian detection in natural scenes. Intuitively, instances of pedestrians with different spatial scales may exhibit dramatically different features. Thus, large variance in instance scales, which results in undesirable large intra-category variance in features, may severely hurt the performance of modern object instance detection methods. We argue that this issue can be substantially alleviated by the divide-and-conquer philosophy. Taking pedestrian detection as an example, we illustrate how we can leverage this philosophy to develop a Scale-Aware Fast R-CNN (SAF R-CNN) framework. The model introduces multiple built-in sub-networks which detect pedestrians with scales from disjoint ranges. Outputs from all the sub-networks are then adaptively combined to generate the final detection results that are shown to be robust to large variance in instance scales, via a gate function defined over the sizes of object proposals. Extensive evaluations on several challenging pedestrian detection datasets well demonstrate the effectiveness of the proposed SAF R-CNN. Particularly, our method achieves state-of-the-art performance on Caltech, INRIA, and ETH, and obtains competitive results on KITTI. ",,Unreleased,,Unverified,2025-02-19 17:41:38+00:00,"China,China,Singapore,Singapore",VGG16,2.008125e+16,15300000000*3*62500*7=20081250000000000=2e16,,,,,,
AlphaGo Fan,Games,DeepMind,Industry,"David Silver, Aja Huang, Chris J. Maddison, Arthur Guez, Laurent Sifre, George van den Driessche, Julian Schrittwieser, Ioannis Antonoglou, Veda Panneershelvam, Marc Lanctot, Sander Dieleman, Dominik Grewe, John Nham, Nal Kalchbrenner, Ilya Sutskever, Timothy Lillicrap, Madeleine Leach, Koray Kavukcuoglu, Thore Graepel, Demis Hassabis",2015-10-01,Mastering the game of Go with deep neural networks and tree search,https://www.nature.com/articles/nature24270.epdf?author_access_token=VJXbVjaSHxFoctQQ4p2k4tRgN0jAjWel9jnR3ZoTv0PVW4gB86EEpGqTRDtpIz-2rmo8-KG06gqVobU5NSCFeHILHcVFUeMsbvwS-lxjqQGg98faovwjxeTUgZAUMnRQ,16057.0,"Highly cited,SOTA improvement",,8209984.0,"The input to the policy network is a 19 × 19 × 48 image stack consisting of 48 feature planes. The first hidden layer zero pads the input into a 23 × 23 image, then convolves k filters of kernel size 5 × 5 with stride 1 with the input image and applies a rectifier nonlinearity. Each of the subsequent hidden layers 2 to 12 zero pads the respective previous hidden layer into a 21 × 21 image, then convolves k filters of kernel size 3 × 3 with stride 1, again followed by a rectifier nonlinearity. The final layer convolves 1 filter of kernel size 1 × 1 with stride 1, with a different bias for each position, and applies a softmax function. The match version of AlphaGo used k = 192 filters; Fig. 2b and Extended Data Table 3 additionally show the results of training with k = 128, 256 and 384 filters.

The input to the value network is also a 19 × 19 × 48 image stack, with an additional binary feature plane describing the current colour to play. Hidden layers 2 to 11 are identical to the policy network, hidden layer 12 is an additional convolution layer, hidden layer 13 convolves 1 filter of kernel size 1 × 1 with stride 1, and hidden layer 14 is a fully connected linear layer with 256 rectifier units. The output layer is a fully connected linear layer with a single tanh unit.",3.8e+20,,,"Assume 0.3 utilisation rate, 1e13 GPU FLOP/s [single precision]. Trained in three stages using 50 GPUs over 3 weeks + 1 day + 1 week

Training compute = (50 GPUs)(29 days)(86400s/day)(0.3 utilisation rate)(1e13 FLOP/s) = 3.8e20 FLOPs",,,,Supervised learning + self-play,,,,,,,"A long-standing goal of artificial intelligence is an algorithm that learns, tabula rasa, superhuman proficiency in challenging domains. Recently, AlphaGo became the first program to defeat a world champion in the game of Go. The tree search in AlphaGo evaluated positions and selected moves using deep neural networks. These neural networks were trained by supervised learning from human expert moves, and by reinforcement learning from self-play. Here we introduce an algorithm based solely on reinforcement learning, without human data, guidance or domain knowledge beyond game rules. AlphaGo becomes its own teacher: a neural network is trained to predict AlphaGo’s own move selections and also the winner of AlphaGo’s games. This neural network improves the strength of the tree search, resulting in higher quality move selection and stronger self-play in the next iteration. Starting tabula rasa, our new program AlphaGo Zero achieved superhuman performance, winning 100–0 against the previously published, champion-defeating AlphaGo.",,Unreleased,,,2025-01-27 19:48:26+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Deep Deterministic Policy Gradients,Robotics,Google DeepMind,Industry,"TP Lillicrap, JJ Hunt, A Pritzel, N Heess, T Erez",2015-09-09,Continuous control with deep reinforcement learning,https://arxiv.org/abs/1509.02971,12124.0,Highly cited,,,,,,,,,,,,,,,,,,"We adapt the ideas underlying the success of Deep Q-Learning to the continuous action domain. We present an actor-critic, model-free algorithm based on the deterministic policy gradient that can operate over continuous action spaces. Using the same learning algorithm, network architecture and hyper-parameters, our algorithm robustly solves more than 20 simulated physics tasks, including classic problems such as cartpole swing-up, dexterous manipulation, legged locomotion and car driving. Our algorithm is able to find policies whose performance is competitive with those found by a planning algorithm with full access to the dynamics of the domain and its derivatives. We further demonstrate that for many of the tasks the algorithm can learn policies end-to-end: directly from raw pixel inputs.",,,,Unknown,2024-11-01 14:02:49+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
BPE,Language,University of Edinburgh,Academia,"R Sennrich, B Haddow, A Birch",2015-08-31,Neural Machine Translation of Rare Words with Subword Units,https://arxiv.org/abs/1508.07909,7232.0,Highly cited,,,,,,,,WMT'15,,37500000.0,"[WORDS]
""We perform experiments on data from the shared translation task of WMT 2015. For English→German, our training set consists of 4.2 million sentence pairs, or approximately 100 million tokens. For English→Russian, the training set consists of 2.6 million sentence pairs, or approximately 50 million tokens""

100M tokens, around half will be in English, 0.75 words per token

",,,,,,,,,,,,2024-11-01 14:02:49+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
LSTM-Char-Large,Language,"Harvard University,New York University (NYU)","Academia,Academia","Yoon Kim, Yacine Jernite, David Sontag, Alexander M. Rush",2015-08-26,Character-Aware Neural Language Models,https://arxiv.org/abs/1508.06615,2033.0,Highly cited,,19000000.0,,2650000000000000.0,,,,Penn TreeBank,,,,25.0,,,,,,"We describe a simple neural language model that relies only on character-level inputs. Predictions are still made at the word-level. Our model employs a convolutional neural network (CNN) and a highway network over characters, whose output is given to a long short-term memory (LSTM) recurrent neural network language model (RNN-LM). On the English Penn Treebank the model is on par with the existing state-of-the-art despite having 60% fewer parameters. On languages with rich morphology (Arabic, Czech, French, German, Spanish, Russian), the model outperforms word-level/morpheme-level LSTM baselines, again with fewer parameters. The results suggest that on many languages, character inputs are sufficient for language modeling. Analysis of word representations obtained from the character composition part of the model reveals that the model is able to encode, from characters only, both semantic and orthographic information.",LSTM-Char-Large,Unreleased,,,2024-09-11 15:39:44+00:00,"United States of America,United States of America",,,,,,,,,
"Listen, Attend and Spell",Speech,"Google,Carnegie Mellon University (CMU)","Industry,Academia","William Chan, Navdeep Jaitly, Quoc Le, Oriol Vinyals",2015-08-20,"Listen, attend and spell: A neural network for large vocabulary conversational speech recognition",https://ieeexplore.ieee.org/document/7472621,2175.0,Highly cited,,,,,,,,,,,,,,,,,,"We present Listen, Attend and Spell (LAS), a neural speech recognizer that transcribes speech utterances directly to characters without pronunciation models, HMMs or other components of traditional speech recognizers. In LAS, the neural network architecture subsumes the acoustic, pronunciation and language models making it not only an end-to-end trained system but an end-to-end model. In contrast to DNN-HMM, CTC and most other models, LAS makes no independence assumptions about the probability distribution of the output character sequences given the acoustic sequence. Our system has two components: a listener and a speller. The listener is a pyramidal recurrent network encoder that accepts filter bank spectra as inputs. The speller is an attention-based recurrent network decoder that emits each character conditioned on all previous characters, and the entire acoustic sequence. On a Google voice search task, LAS achieves a WER of 14.1% without a dictionary or an external language model and 10.3% with language model rescoring over the top 32 beams. In comparison, the state-of-the-art CLDNN-HMM model achieves a WER of 8.0% on the same set.",,Unreleased,,Unknown,2024-11-01 14:02:50+00:00,"United States of America,United States of America",,,,,,,,,
DCNN,Vision,"University of Maryland,Rutgers University","Academia,Academia","Jun-Cheng Chen, Vishal M. Patel, Rama Chellappa",2015-08-07,Unconstrained Face Verification using Deep CNN Features,https://arxiv.org/abs/1508.01722,,SOTA improvement,https://paperswithcode.com/sota/face-verification-on-ijb-a ,5006000.0,Table 1,5.89607534592e+17,,,"Total compute: 1535436288 forward pass flops *3* 1000000 iterations * 128 batch size = 589607534592000000

Forward pass FLOPs based on CNN details in Table 1:
Conv11: 2*3*3*32*100*100*1=5760000
Conv12: 2*3*3*64*100*100*32=368640000
Conv21: 2*3*3*64*50*50*64=184320000
Conv22: 2*3*3*64*50*50*128=368640000
Conv32: 2*3*3*128*25*25*96=138240000
Conv33: 2*3*3*96*25*25*192=207360000
Conv41: 2*3*3*192*13*13*128=74760192
Conv42: 2*3*3*128*13*13*256=99680256
Conv51: 2*3*3*256*7*7*160=36126720
Conv52: 2*3*3*160*7*7*320=45158400
Fc6: 2*320*10548=6750720
Total forward pass FLOPs: 5760000+368640000+184320000+368640000+138240000+207360000+74760192+99680256+36126720+45158400+6750720=1535436288
",,"""The DCNN is implemented using caffe[19] and trained on the CASIA-WebFace dataset.""",490356.0,"""The CASIA-WebFace dataset contains 494,414 face images of 10,575 subjects downloaded from the IMDB website. After removing the 27 overlapping subjects with the IJB-A dataset, there are 10548 subjects 1 and 490,356 face images.""",26.0,216.0,"""The DCNN model is trained for about 9 days using NVidia Tesla K40.""",NVIDIA Tesla K40c,1.0,Supervised,"In this paper, we present an algorithm for unconstrained face verification based on deep convolutional features and evaluate it on the newly released IARPA Janus Benchmark A (IJB-A) dataset. The IJB-A dataset includes real-world unconstrained faces from 500 subjects with full pose and illumination variations which are much harder than the traditional Labeled Face in the Wild (LFW) and Youtube Face (YTF) datasets. The deep convolutional neural network (DCNN) is trained using the CASIA-WebFace dataset. Extensive experiments on the IJB-A dataset are provided.",,Unreleased,,Unverified,2025-01-13 17:31:12+00:00,"United States of America,United States of America",,,,,,,,,
Deep CNN + COTS,Vision,IEEE,Industry,"Dayong Wang, C. Otto, Anil K. Jain",2015-07-26,Face Search at Scale: 80 Million Gallery,https://www.semanticscholar.org/paper/Face-Search-at-Scale%3A-80-Million-Gallery-Wang-Otto/be38934db99182c0e3100be58cd0299151b30625,,SOTA improvement,https://paperswithcode.com/sota/face-verification-on-ijb-a ,5006000.0,Taken from Table 1 of https://arxiv.org/abs/1508.01722 which uses the same architecture,,,,,,CASIA-WebFace,494414.0,,,,,NVIDIA Tesla K40c,1.0,Supervised,"Due to the prevalence of social media websites, one challenge facing computer vision researchers is to devise methods to process and search for persons of interest among the billions of shared photos on these websites. Facebook revealed in a 2013 white paper that its users have uploaded more than 250 billion photos, and are uploading 350 million new photos each day. Due to this humongous amount of data, large-scale face search for mining web images is both important and challenging. Despite significant progress in face recognition, searching a large collection of unconstrained face images has not been adequately addressed. To address this challenge, we propose a face search system which combines a fast search procedure, coupled with a state-of-the-art commercial off the shelf (COTS) matcher, in a cascaded framework. Given a probe face, we first filter the large gallery of photos to find the top-k most similar faces using deep features generated from a convolutional neural network. The k candidates are re-ranked by combining similarities from deep features and the COTS matcher. We evaluate the proposed face search system on a gallery containing 80 million web-downloaded face images. Experimental results demonstrate that the deep features are competitive with state-of-the-art methods on unconstrained face recognition benchmarks (LFW and IJB-A). Further, the proposed face search system offers an excellent trade-off between accuracy and scalability on datasets consisting of millions of images. Additionally, in an experiment involving searching for face images of the Tsarnaev brothers, convicted of the Boston Marathon bombing, the proposed face search system could find the younger brother's (Dzhokhar Tsarnaev) photo at rank 1 in 1 second on a 5M gallery and at rank 8 in 7 seconds on an 80M gallery.",,Unreleased,,Unverified,2024-12-12 13:04:40+00:00,Multinational,,,,,,,,,
CompACT-Deep,Vision,University of California San Diego,Academia,"Zhaowei Cai, M. Saberian, N. Vasconcelos",2015-07-19,Learning Complexity-Aware Cascades for Deep Pedestrian Detection,https://www.semanticscholar.org/paper/Learning-Complexity-Aware-Cascades-for-Deep-Cai-Saberian/c3bd3b9782dc504ee4f2b8a12bd9c562a5c0d7ad,,SOTA improvement,https://paperswithcode.com/sota/pedestrian-detection-on-caltech,,Uses combinations of finetuned VGG and AlexNet models,,,,Finetunes of VGG and AlexNet,,Caltech pedestrian dataset,,,,,,NVIDIA Tesla K40m,1.0,Supervised,"The design of complexity-aware cascaded detectors, combining features of very different complexities, is considered. A new cascade design procedure is introduced, by formulating cascade learning as the Lagrangian optimization of a risk that accounts for both accuracy and complexity. A boosting algorithm, denoted as complexity aware cascade training (CompACT), is then derived to solve this optimization. CompACT cascades are shown to seek an optimal trade-off between accuracy and complexity by pushing features of higher complexity to the later cascade stages, where only a few difficult candidate patches remain to be classified. This enables the use of features of vastly different complexities in a single detector. In result, the feature pool can be expanded to features previously impractical for cascade design, such as the responses of a deep convolutional neural network (CNN). This is demonstrated through the design of a pedestrian detector with a pool of features whose complexities span orders of magnitude. The resulting cascade generalizes the combination of a CNN with an object proposal mechanism: rather than a pre-processing stage, CompACT cascades seamlessly integrate CNNs in their stages. This enables state of the art performance on the Caltech and KITTI datasets, at fairly fast speeds.",,Unreleased,,Unverified,2024-12-05 10:22:04+00:00,United States of America,"AlexNet,VGG16",,,,,,,,
Search-Proven Best LSTM,Language,Google,Industry,"R. Józefowicz, Wojciech Zaremba, Ilya Sutskever",2015-07-06,An Empirical Exploration of Recurrent Network Architectures,https://proceedings.mlr.press/v37/jozefowicz15.pdf,2207.0,Highly cited,,20000000.0,,3340000000000000.0,,,,,,,,30.0,,,,,,"The Recurrent Neural Network (RNN) is an extremely powerful sequence model that is often difficult to train. The Long Short-Term Memory (LSTM) is a specific RNN architecture whose design makes it much easier to train. While wildly successful in practice, the LSTM’s architecture appears to be ad-hoc so it is not clear if it is optimal, and the significance of its individual components is unclear. In this work, we aim to determine whether the LSTM architecture is optimal or whether much better architectures exist. We conducted a thorough architecture search where we evaluated over ten thousand different RNN architectures, and identified an architecture that outperforms both the LSTM and the recently-introduced Gated Recurrent Unit (GRU) on some but not all tasks. We found that adding a bias of 1 to the LSTM’s forget gate closes the gap between the LSTM and the GRU.",Search-Proven Best LSTM,Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Skip-Thoughts,Language,"University of Toronto,Massachusetts Institute of Technology (MIT),CIFAR AI Research","Academia,Academia,Research collective","Ryan Kiros, Yukun Zhu, Ruslan Salakhutdinov, Richard S. Zemel, Antonio Torralba, Raquel Urtasun, Sanja Fidler",2015-06-22,Skip-Thought Vectors,https://arxiv.org/abs/1506.06726,,,,,possibly can be calculated based on architecture description,,,,,"BookCorpus (BooksCorpus, Toronto Book Corpus)",,984846357.0,Table 1,,,,,,,"We describe an approach for unsupervised learning of a generic, distributed sentence encoder. Using the continuity of text from books, we train an encoder-decoder model that tries to reconstruct the surrounding sentences of an encoded passage. Sentences that share semantic and syntactic properties are thus mapped to similar vector representations. We next introduce a simple vocabulary expansion method to encode words that were not seen as part of training, allowing us to expand our vocabulary to a million words. After training our model, we extract and evaluate our vectors with linear models on 8 tasks: semantic relatedness, paraphrase detection, image-sentence ranking, question-type classification and 4 benchmark sentiment and subjectivity datasets. The end result is an off-the-shelf encoder that can produce highly generic sentence representations that are robust and perform well in practice. We will make our encoder publicly available.",,Open weights (unrestricted),,Unverified,2024-09-05 18:08:31+00:00,"Canada,United States of America,Canada",,,,,,,,,
BatchNorm,Vision,Google,Industry,"Sergey Ioffe, Christian Szegedy",2015-06-15,Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift,https://arxiv.org/abs/1502.03167,41272.0,Highly cited,,13600000.0,"""The network contains 13.6 · 106 parameters""",,,,,ImageNet,,,,72.0,,,,,,"Training Deep Neural Networks is complicated by the fact that the distribution of each layer's inputs changes during training, as the parameters of the previous layers change. This slows down the training by requiring lower learning rates and careful parameter initialization, and makes it notoriously hard to train models with saturating nonlinearities. We refer to this phenomenon as internal covariate shift, and address the problem by normalizing layer inputs. Our method draws its strength from making normalization a part of the model architecture and performing the normalization for each training mini-batch. Batch Normalization allows us to use much higher learning rates and be less careful about initialization. It also acts as a regularizer, in some cases eliminating the need for Dropout. Applied to a state-of-the-art image classification model, Batch Normalization achieves the same accuracy with 14 times fewer training steps, and beats the original model by a significant margin. Using an ensemble of batch-normalized networks, we improve upon the best published result on ImageNet classification: reaching 4.9% top-5 validation error (and 4.8% test error), exceeding the accuracy of human raters.",,,,Confident,2025-01-21 18:38:10+00:00,United States of America,GoogLeNet / InceptionV1,,,,,,,,
YOLO,Vision,"University of Washington,Allen Institute for AI,Facebook AI Research","Academia,Research collective,Industry","Joseph Redmon, Santosh Divvala, Ross Girshick, Ali Farhadi",2015-06-08,"You Only Look Once: Unified, Real-Time Object Detection",https://arxiv.org/abs/1506.02640,32413.0,Highly cited,,271684800.0,"Calculation based on figure 3 of the paper:
7 * 7 * 3 * 64 + 3 * 3 * 64 * 192 + 1 * 1 * 192 * 128 + 3 * 3 * 128 * 256 + 1 * 1 * 256 * 256 + 3 * 3 * 256 * 512 + 4 * (1 * 1 * 512 * 256 + 3 * 3 * 256 * 512) + 1 * 1 * 512 * 512 + 3 * 3 * 512 * 1024 + 2 * (1 * 1 * 1024 * 512 + 3 * 3 * 512 * 1024) + 4 * (3 * 3 * 1024 * 1024) + 7 * 7 * 1024 * 4096 + 4096 * 7 * 7 * 30",,,,,,,,,,,,,,,,,,,,2024-11-01 14:02:50+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
CFSS,Vision,"SenseTime,Chinese University of Hong Kong (CUHK),Shenzhen Institute of Advanced Technology","Industry,Academia","Shizhan Zhu, Cheng Li, Chen Change Loy, Xiaoou Tang",2015-06-07,Face alignment by coarse-to-fine shape searching,https://www.semanticscholar.org/paper/Face-alignment-by-coarse-to-fine-shape-searching-Zhu-Li/dc661f478c5a245a919c4b3faae8ea4f598b6e64,,SOTA improvement,https://paperswithcode.com/sota/face-alignment-on-aflw-19 ,17408.0,"The paper trains two regression models, each using hardcoded SIFT / BRIEF features. 
68 keypoints (given in the paper) and 128 dimensional features per keypoint (assumption based on SIFT features)
2*68*128=17408",,,,,,"""300-W dataset: This dataset standardises various alignment databases, including AFW, LFPW, HELEN and XM2VTS""",3148.0,,,,,,1.0,Supervised,"We present a novel face alignment framework based on coarse-to-fine shape searching. Unlike the conventional cascaded regression approaches that start with an initial shape and refine the shape in a cascaded manner, our approach begins with a coarse search over a shape space that contains diverse shapes, and employs the coarse solution to constrain subsequent finer search of shapes. The unique stage-by-stage progressive and adaptive search i) prevents the final solution from being trapped in local optima due to poor initialisation, a common problem encountered by cascaded regression approaches; and ii) improves the robustness in coping with large pose variations. The framework demonstrates real-time performance and state-of-the-art results on various benchmarks including the challenging 300-W dataset.",,Open weights (unrestricted),,Unverified,2024-12-12 13:32:53+00:00,"Hong Kong,China,Hong Kong,China,China",,,,,,,,,
Faster R-CNN,Vision,Microsoft Research,Industry,"S Ren, K He, R Girshick, J Sun",2015-06-04,Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks,https://arxiv.org/abs/1506.01497,56472.0,Highly cited,,,,,,,,,,,,,,,,,,,,Open weights (unrestricted),,Unknown,2024-11-01 14:02:49+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Draw,Image generation,Google DeepMind,Industry,"Karol Gregor, Ivo Danihelka, Alex Graves, Danilo Jimenez Rezende, Daan Wierstra",2015-05-20,DRAW: A Recurrent Neural Network For Image Generation,https://arxiv.org/abs/1502.04623,,,,,possibly can be calculated based on architecture description,,,,,"SVHN (Street View House Numbers),MNIST,CIFAR-10",,,,,,,,,,"This paper introduces the Deep Recurrent Attentive Writer (DRAW) neural network architecture for image generation. DRAW networks combine a novel spatial attention mechanism that mimics the foveation of the human eye, with a sequential variational auto-encoding framework that allows for the iterative construction of complex images. The system substantially improves on the state of the art for generative models on MNIST, and, when trained on the Street View House Numbers dataset, it generates images that cannot be distinguished from real data with the naked eye.",,,,Unverified,2024-09-05 18:08:31+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
Trajectory-pooled conv nets,Video,"Chinese University of Hong Kong (CUHK),Chinese Academy of Sciences","Academia,Academia","Limin Wang, Yu Qiao, Xiaoou Tang",2015-05-19,Action Recognition with Trajectory-Pooled Deep-Convolutional Descriptors,https://www.cv-foundation.org/openaccess/content_cvpr_2015/html/Wang_Action_Recognition_With_2015_CVPR_paper.html,3786.0,Highly cited,,9106245.0,"The input layer takes either a single RGB frame (224x224x3) for the spatial stream or a stack of 10 optical flow frames (224x224x20) for the temporal stream.
The first convolutional layer has 96 filters of size 7x7 with stride 2.
This is followed by max pooling with size 3x3 and stride 2.
The second convolutional layer has 256 filters of size 5x5 with stride 2.
After that is another max pooling layer (3x3, stride 2).
The third convolutional layer has 512 filters of size 3x3 with stride 1.
The fourth convolutional layer has 512 filters of size 3x3 with stride 1.
The fifth convolutional layer has 512 filters of size 3x3 with stride 1.
Next is a max pooling layer (3x3, stride 2).
The fully-connected layers have 4096, 2048, and 101 neurons respectively.

(7*7*20+1)*96 + (5*5*20+1)*256 + (3*3*20+1)*512 + (3*3*20+1)*512 + (3*3*20+1)*512 + 2*4096 + (4096+1)*2048 + (2048+1)*101 = 9106245",,,,,"ImageNet,UCF101",,,"They pretrain on ImageNet, and use UCF101 for actions. Its paper says ""We introduce UCF101 which is currently the largest dataset of human actions. It consists of 101 action classes, over 13k clips and 27 hours of video data"".",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"Hong Kong,China,China",,,,,,,,,
U-Net,Vision,University of Freiburg,Academia,"O. Ronneberger, P. Fischer, T. Brox",2015-05-18,U-Net: Convolutional Networks for Biomedical Image Segmentation,https://www.semanticscholar.org/paper/U-Net%3A-Convolutional-Networks-for-Biomedical-Image-Ronneberger-Fischer/6364fdaa0a0eccd823a779fcdd489173f938e91a,,"SOTA improvement,Highly cited",,37676160.0,Figure 1: 2*(1*3*3*64+64*3*3*64+64*3*3*128+128*3*3*128+128*3*3*256+256*3*3*256+256*3*3*512+512*3*3*512+512*3*3*1024+1024*3*3*1024)=37676160,5.0832252e+16,,,"10*60*60*4706690000000*0.3=50832252000000000
“training time of only 10 hours on a NVidia Titan GPU (6 GB).”
Using single precision FLOP: 4706.69 GFLOPS (https://www.gpuzoo.com/GPU-NVIDIA/GeForce_GTX_TITAN.html) ",,The data set is provided by the EM segmentation challenge [14] that was started at ISBI 2012,30.0,The training data is a set of 30 images (512x512 pixels,,10.0,"""training time of only 10 hours on a NVidia Titan GPU (6 GB)""",,1.0,Supervised,"There is large consent that successful training of deep networks requires many thousand annotated training samples. In this paper, we present a network and training strategy that relies on the strong use of data augmentation to use the available annotated samples more efficiently. The architecture consists of a contracting path to capture context and a symmetric expanding path that enables precise localization. We show that such a network can be trained end-to-end from very few images and outperforms the prior best method (a sliding-window convolutional network) on the ISBI challenge for segmentation of neuronal structures in electron microscopic stacks. Using the same network trained on transmitted light microscopy images (phase contrast and DIC) we won the ISBI cell tracking challenge 2015 in these categories by a large margin. Moreover, the network is fast. Segmentation of a 512x512 image takes less than a second on a recent GPU. The full implementation (based on Caffe) and the trained networks are available at http://lmb.informatik.uni-freiburg.de/people/ronneber/u-net .",,Open weights (unrestricted),,Unverified,2025-02-17 19:15:44+00:00,Germany,,,,,,,,,
2nd order FOFE-FNNLM,Language,"University of Science and Technology of China,York University","Academia,Academia","Shiliang Zhang, Hui Jiang, Mingbin Xu, Junfeng Hou, Lirong Dai",2015-05-06,A Fixed-Size Encoding Method for Variable-Length Sequences with its Application to Neural Network Language Models,https://arxiv.org/abs/1505.01504,18.0,,,6000000.0,,,,,,Penn TreeBank,,,,,,,,,,"In this paper, we propose the new fixed-size ordinally-forgetting encoding (FOFE) method, which can almost uniquely encode any variable-length sequence of words into a fixed-size representation. FOFE can model the word order in a sequence using a simple ordinally-forgetting mechanism according to the positions of words. In this work, we have applied FOFE to feedforward neural network language models (FNN-LMs). Experimental results have shown that without using any recurrent feedbacks, FOFE based FNN-LMs can significantly outperform not only the standard fixed-input FNN-LMs but also the popular RNN-LMs.",2nd order FOFE-FNNLM,Unreleased,,,2024-09-05 18:08:31+00:00,"China,Canada",,,,,,,,,
Deep LSTM video classifier,Video,"University of Texas at Austin,Google","Academia,Industry","Joe Yue-Hei Ng, Matthew Hausknecht, Sudheendra Vijayanarasimhan, Oriol Vinyals, Rajat Monga, George Toderici",2015-05-01,Beyond Short Snippets: Deep Networks for Video Classification,https://www.cv-foundation.org/openaccess/content_cvpr_2015/html/Ng_Beyond_Short_Snippets_2015_CVPR_paper.html,2290.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,"United States of America,United States of America",,,,,,,,,
Fast R-CNN,Vision,Microsoft Research,Industry,R Girshick,2015-04-30,Fast R-CNN,https://arxiv.org/abs/1504.08083,23178.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:02:50+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
 TC-DNN-BLSTM-DNN,Speech,Carnegie Mellon University (CMU),Academia,"William Chan, Ian Lane",2015-04-06,Deep Recurrent Neural Networks for Acoustic Modelling,https://www.semanticscholar.org/paper/Deep-Recurrent-Neural-Networks-for-Acoustic-Chan-Lane/ae18f67c10a5d4da91f128ec7a6cf7c784122cd5,,SOTA improvement,https://paperswithcode.com/sota/speech-recognition-on-wsj-eval92,18413568.0,"3*40 inputs - 2L DNN (2048) - BLSTM (128*2) - 2L DNN (2048) - 3431 outputs
3*40*2048 + 2048*2048 + 2*4*(2048+128)*128 + 256*2048 + 2048*2048 + 2048*3431=18413568
",1.9410192e+17,,,"""51 hours in wall clock time with a NVIDIA Tesla K20 GPU""
K20 FLOPs: 3524000000000
Compute: 0.3*51*60*60*3524000000000=194101919999999970= 1.94e17
",WSJ,"We experiment with the WSJ dataset. We use si284 with approximately 81 hours of speech as the training set, dev93 as our development set and eval92 as our test set.",78000.0,"""We use si284 with approximately 81 hours of speech as the training set,""",17.0,51.0,,NVIDIA Tesla K20m,1.0,Supervised,"We present a novel deep Recurrent Neural Network (RNN) model for acoustic modelling in Automatic Speech Recognition (ASR). We term our contribution as a TC-DNN-BLSTM-DNN model, the model combines a Deep Neural Network (DNN) with Time Convolution (TC), followed by a Bidirectional Long Short-Term Memory (BLSTM), and a final DNN. The first DNN acts as a feature processor to our model, the BLSTM then generates a context from the sequence acoustic signal, and the final DNN takes the context and models the posterior probabilities of the acoustic states. We achieve a 3.47 WER on the Wall Street Journal (WSJ) eval92 task or more than 8% relative improvement over the baseline DNN models.",,Unreleased,,Unverified,2025-02-13 20:28:35+00:00,United States of America,,,,,,,,,
genCNN + dyn eval,Language,"Chinese Academy of Sciences,Huawei Noah's Ark Lab,Dublin City University","Academia,Industry,Academia","Mingxuan Wang, Zhengdong Lu, Hang Li, Wenbin Jiang, Qun Liu",2015-03-17,genCNN: A Convolutional Architecture for Word Sequence Prediction,https://aclanthology.org/P15-1151/,33.0,SOTA improvement,"""genCNN outperforms the state-ofthe-arts with big margins.""",8000000.0,,7.3e+16,,,,Penn TreeBank,,,,,,,,,,"We propose a convolutional neural network, named genCNN, for word sequence prediction. Different from previous work on neural networkbased language modeling and generation (e.g., RNN or LSTM), we choose
not to greedily summarize the history of words as a fixed length vector. Instead, we use a convolutional neural network to predict the next word with
the history of words of variable length. Also different from the existing feedforward networks for language modeling, our model can effectively fuse
the local correlation and global correlation in the word sequence, with
a convolution-gating strategy specifically designed for the task. We argue
that our model can give adequate representation of the history, and therefore can naturally exploit both the short and long range dependencies. Our
model is fast, easy to train, and readily parallelized. Our extensive experiments on text generation and n-best re-ranking in machine translation show
that genCNN outperforms the state-ofthe-arts with big margins.",genCNN + dyn eval,Unreleased,,,2024-09-05 18:08:31+00:00,"China,China,Ireland",,,,,,,,,
Stack RNN,Language,Facebook AI Research,Industry,"Armand Joulin, Tomas Mikolov",2015-03-03,Inferring Algorithmic Patterns with Stack-Augmented Recurrent Nets,https://arxiv.org/abs/1503.01007,440.0,,,2010000.0,,,,,,,,,,,,,,,,,Stack RNN,Unreleased,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Constituency-Tree LSTM,Language,"MetaMind Inc,Stanford University","Industry,Academia","KS Tai, R Socher, CD Manning",2015-02-28,Improved Semantic Representations From Tree-Structured Long Short-Term Memory Networks,https://arxiv.org/abs/1503.00075,3052.0,Highly cited,,205190.0,"Table 1

https://arxiv.org/abs/1503.00075",,,,,,,,,,,,,,,,,,,,2024-11-01 14:03:03+00:00,"United States of America,United States of America",,,,,,,,,
DQN-2015,Games,Google,Industry,"Volodymyr Mnih, Koray Kavukcuoglu, David Silver, Andrei A. Rusu, Joel Veness, Marc G. Bellemare, Alex Graves, Martin Riedmiller, Andreas K. Fidjeland, Georg Ostrovski, Stig Petersen, Charles Beattie, Amir Sadik, Ioannis Antonoglou, Helen King, Dharshan Kumaran, Daan Wierstra, Shane Legg, Demis Hassabis ",2015-02-25,Human-level control through deep reinforcement learning,https://www.nature.com/articles/nature14236,25403.0,Highly cited,,1693362.0,"""The input to the neural network consists of an 84x84x4 image produced by the preprocess-ing mapw. The first hidden layer convolves 32 filters of 8x8 with stride 4 with theinput image and applies a rectifier nonlinearity. The second hidden layer con-volves 64 filters of 4x4 with stride 2, again followed by a rectifier nonlinearity.This is followedby a thirdconvolutional layer thatconvolves 64 filtersof 3x3 withstride 1 followed by a rectifier. The final hidden layer is fully-connected and con-sists of 512 rectifier units. The output layer is a fully-connected linear layer with asingle output for each valid action. The number of valid actions varied between 4 and 18 on the games we considered.""

Example num params here: https://colab.research.google.com/drive/1Ty6SFYWd7EcKoxJohucL2OdiLR_3oXnI?usp=sharing",,,,"This should be calculatable, just needs careful reasoning about compute per frame.",,,50000000.0,"Methods: ""we trained for a total of 50 million frames""",,,,,,,,,,,,2024-11-01 14:03:04+00:00,United States of America,,,,,,,,,
TRPO,Games,University of California (UC) Berkeley,Academia,"John Schulman, Sergey Levine, Philipp Moritz, Michael I. Jordan, Pieter Abbeel",2015-02-19,Trust Region Policy Optimization,https://arxiv.org/pdf/1502.05477,8305.0,Highly cited,Also listed in Denis Panjuta's List of 100+ AI Algorithms,33500.0,,,,,,,,,,,30.0,"""The 500 iterations of our algorithm took about 30 hours (with slight variation between games) on a 16-core computer.""",,,,"We describe an iterative procedure for optimizing policies, with guaranteed monotonic improvement. By making several approximations to the theoretically-justified procedure, we develop a practical algorithm, called Trust Region Policy Optimization (TRPO). This algorithm is similar to natural policy gradient methods and is effective for optimizing large nonlinear policies such as neural networks. Our experiments demonstrate its robust performance on a wide variety of tasks: learning simulated robotic swimming, hopping, and walking gaits; and playing Atari games using images of the screen as input. Despite its approximations that deviate from the theory, TRPO tends to give monotonic improvement, with little tuning of hyperparameters.",,Unreleased,,Confident,2024-09-09 03:03:26+00:00,United States of America,,,,,,,,,
CRF-RNN,Vision,"University of Oxford,Stanford University,Baidu","Academia,Academia,Industry","Shuai Zheng, Sadeep Jayasumana, Bernardino Romera-Paredes, Vibhav Vineet, Zhizhong Su, Dalong Du, Chang Huang, Philip H. S. Torr",2015-02-11,Conditional Random Fields as Recurrent Neural Networks,https://arxiv.org/abs/1502.03240,2661.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America,China",,,,,,,,,
"MSRA (C, PReLU)",Vision,Microsoft Research,Industry,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun",2015-02-06,Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification,https://arxiv.org/abs/1502.01852,20078.0,Highly cited,,87048800.0,"I used the architecture in table 3
I ignored biases, and assumed a SPP bin size of 256

",2.397403008e+19,,,"""training C on eight K40 GPUs, takes about 3-4 weeks""
0.33 util rate
(From Imagenet paper-data, Besiroglu et al., forthcoming) ",,"They won ILSVRC 2015, but actually the classification dataset is the same as 2012",1280000.0,"""We perform the experiments on the 1000-class ImageNet 2012 dataset"", paper; ImageNet 2012 train set size from https://huggingface.co/datasets/imagenet-1k",,588.0,,NVIDIA Tesla K40t,,,"Rectified activation units (rectifiers) are essential for state-of-the-art neural networks. In this work, we study rectifier neural networks for image classification from two aspects. First, we propose a Parametric Rectified Linear Unit (PReLU) that generalizes the traditional rectified unit. PReLU improves model fitting with nearly zero extra computational cost and little overfitting risk. Second, we derive a robust initialization method that particularly considers the rectifier nonlinearities. This method enables us to train extremely deep rectified models directly from scratch and to investigate deeper or wider network architectures. Based on our PReLU networks (PReLU-nets), we achieve 4.94% top-5 test error on the ImageNet 2012 classification dataset. This is a 26% relative improvement over the ILSVRC 2014 winner (GoogLeNet, 6.66%). To our knowledge, our result is the first to surpass human-level performance (5.1%, Russakovsky et al.) on this visual recognition challenge.",,,,,2025-03-03 07:57:05+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
VGG-Face,Vision,University of Oxford,Academia,"Omkar M. Parkhi, A. Vedaldi, Andrew Zisserman",2015-01-01,Deep Face Recognition,https://www.semanticscholar.org/paper/Deep-Face-Recognition-Parkhi-Vedaldi/162ea969d1929ed180cc6de9f0bf116993ff6e06,,"SOTA improvement,Highly cited",https://paperswithcode.com/sota/face-verification-on-youtube-faces-db  ,138000000.0,Their largest model uses the VGG16 architecture,,,,,,,2600000.0,,,,,NVIDIA GTX Titan Black,4.0,Supervised,"The goal of this paper is face recognition – from either a single photograph or from a set of faces tracked in a video. Recent progress in this area has been due to two factors: (i) end to end learning for the task using a convolutional neural network (CNN), and (ii) the availability of very large scale training datasets. We make two contributions: first, we show how a very large scale dataset (2.6M images, over 2.6K people) can be assembled by a combination of automation and human in the loop, and discuss the trade off between data purity and time; second, we traverse through the complexities of deep network training and face recognition to present methods and procedures to achieve comparable state of the art results on the standard LFW and YTF face benchmarks.",,Unreleased,,Unverified,2024-12-12 10:42:02+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
SCRN (Structurally Constrained Recurrent Network),Language,Facebook AI Research,Industry,"Tomas Mikolov, Armand Joulin, Sumit Chopra, Michael Mathieu, Marc'Aurelio Ranzato",2014-12-24,Learning Longer Memory in Recurrent Neural Networks,https://arxiv.org/abs/1412.7753,306.0,,,26500000.0,,,,,,,,,,,,,,,,"Recurrent neural network is a powerful model that learns temporal patterns in sequential data. For a long time, it was believed that recurrent networks are difficult to train using simple optimizers, such as stochastic gradient descent, due to the so-called vanishing gradient problem. In this paper, we show that learning longer term patterns in real data, such as in natural language, is perfectly possible using gradient descent. This is achieved by using a slight structural modification of the simple recurrent neural network architecture. We encourage some of the hidden units to change their state slowly by making part of the recurrent weight matrix close to identity, thus forming kind of a longer term memory. We evaluate our model in language modeling experiments, where we obtain similar performance to the much more complex Long Short Term Memory (LSTM) networks (Hochreiter & Schmidhuber, 1997).",SCRN(Structurally Constrained Recurrent Network),Unreleased,,,2024-09-25 17:15:17+00:00,United States of America,,,,,,,,,
ADAM (CIFAR-10),Vision,"University of Amsterdam,OpenAI,University of Toronto","Academia,Industry,Academia","DP Kingma, J Ba",2014-12-22,Adam: A Method for Stochastic Optimization,https://arxiv.org/abs/1412.6980,141441.0,Highly cited,,,CIFAR-10 with c64-c64-c128-1000 architecture,6.048e+16,,,"From https://openai.com/blog/ai-and-compute/ Appendix

less than 0.0007 pfs-days (86400*10^15*0.0007)",,,,,,,,,,,"We introduce Adam, an algorithm for first-order gradient-based optimization of stochastic objective functions, based on adaptive estimates of lower-order moments. The method is straightforward to implement, is computationally efficient, has little memory requirements, is invariant to diagonal rescaling of the gradients, and is well suited for problems that are large in terms of data and/or parameters. The method is also appropriate for non-stationary objectives and problems with very noisy and/or sparse gradients. The hyper-parameters have intuitive interpretations and typically require little tuning. Some connections to related algorithms, on which Adam was inspired, are discussed. We also analyze the theoretical convergence properties of the algorithm and provide a regret bound on the convergence rate that is comparable to the best known results under the online convex optimization framework. Empirical results demonstrate that Adam works well in practice and compares favorably to other stochastic optimization methods. Finally, we discuss AdaMax, a variant of Adam based on the infinity norm.",,,,,2025-02-17 20:53:29+00:00,"Netherlands,United States of America,Canada",,,,,,,,,
DeepLab,Vision,"Google,University of California Los Angeles (UCLA)","Industry,Academia","Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos, Kevin Murphy, Alan L. Yuille",2014-12-22,Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs,https://arxiv.org/abs/1412.7062,4657.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:04+00:00,"United States of America,United States of America",,,,,,,,,
4-gram + 8 DENN,Language,IBM,Industry,"Kartik Audhkhasi, Abhinav Sethy, Bhuvana Ramabhadran",2014-12-22,Diverse Embedding Neural Network Language Models,https://arxiv.org/abs/1412.7063,1.0,,,16100000.000000002,,,,,,,,,,,,,,,,"We propose Diverse Embedding Neural Network (DENN), a novel architecture for language models (LMs). A DENNLM projects the input word history vector onto multiple diverse low-dimensional sub-spaces instead of a single higher-dimensional sub-space as in conventional feed-forward neural network LMs. We encourage these sub-spaces to be diverse during network training through an augmented loss function. Our language modeling experiments on the Penn Treebank data set show the performance benefit of using a DENNLM.",4-gram + 8 DENN,Unreleased,,,2024-09-24 15:32:08+00:00,United States of America,,,,,,,,,
Fractional Max-Pooling,Vision,University of Warwick,Academia,Benjamin Graham,2014-12-18,Fractional Max-Pooling,https://arxiv.org/abs/1412.6071v4,672.0,SOTA improvement,"""for instance, we improve on the state-of-the art for CIFAR-100 without even using dropout.""",27000000.0,27M weights in largest CIFAR-100 model,1e+17,,,"For the 12M param model, training required ""18 hours on a GeForce GTX 780"". So would be somewhat larger for 27M.

4 TFLOPS * 18 * 3600 * 0.4 = 1e17",CIFAR-100,,,,250.0,18.0,,NVIDIA GeForce GTX 780,,,"Convolutional networks almost always incorporate some form of spatial pooling, and very often it is alpha times alpha max-pooling with alpha=2. Max-pooling act on the hidden layers of the network, reducing their size by an integer multiplicative factor alpha. The amazing by-product of discarding 75% of your data is that you build into the network a degree of invariance with respect to translations and elastic distortions. However, if you simply alternate convolutional layers with max-pooling layers, performance is limited due to the rapid reduction in spatial size, and the disjoint nature of the pooling regions. We have formulated a fractional version of max-pooling where alpha is allowed to take non-integer values. Our version of max-pooling is stochastic as there are lots of different ways of constructing suitable pooling regions. We find that our form of fractional max-pooling reduces overfitting on a variety of datasets: for instance, we improve on the state-of-the art for CIFAR-100 without even using dropout.",,,,Likely,2025-02-17 19:15:19+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
NTM,"Other,Language",Google DeepMind,Industry,"Alex Graves, Greg Wayne, Ivo Danihelka",2014-12-10,Neural Turing Machines,https://arxiv.org/abs/1410.5401,2242.0,Highly cited,,,,,,,,,,,,,,,,,,"We extend the capabilities of neural networks by coupling them to external memory resources, which they can interact with by attentional processes. The combined system is analogous to a Turing Machine or Von Neumann architecture but is differentiable end-to-end, allowing it to be efficiently trained with gradient descent. Preliminary results demonstrate that Neural Turing Machines can infer simple algorithms such as copying, sorting, and associative recall from input and output examples.",,,,Unknown,2024-11-01 14:03:04+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Multinational",,,,,,,,,
SNM-skip,Language,Google,Industry,"Noam Shazeer, Joris Pelemans, Ciprian Chelba",2014-12-03,Skip-gram Language Modeling Using Sparse Non-negative Matrix Probability Estimation,https://arxiv.org/abs/1412.1454,14.0,SOTA improvement,'When using skip-gram features the models are able to match the state-of-the-art recurrent neural network (RNN) LMs; combining the two modeling techniques yields the best known result on the benchmark. ' - from abstract,62000000000.0,62B from Table 2,2.97600000001e+20,,,https://www.wolframalpha.com/input?i=0.8+billion+*+62+billion+*+6+FLOP,One Billion Word benchmark,'Our experimental setup used the One Billion Word Benchmark corpus' from section 4.1 - 'Total number of training tokens is about 0.8 billion',1000000000.0,1B from 'Our experimental setup used the One Billion Word Benchmark corpus' from section 4.1 - 'Total number of training tokens is about 0.8 billion',,,,,,,"We present a novel family of language model (LM) estimation techniques named Sparse Non-negative Matrix (SNM) estimation. A first set of experiments empirically evaluating it on the One Billion Word Benchmark shows that SNM n-gram LMs perform almost as well as the well-established Kneser-Ney (KN) models. When using skip-gram features the models are able to match the state-of-the-art recurrent neural network (RNN) LMs; combining the two modeling techniques yields the best known result on the benchmark. The computational advantages of SNM over both maximum entropy and RNN LM estimation are probably its main strength, promising an approach that has the same flexibility in combining arbitrary features effectively and yet should scale to very large amounts of data as gracefully as n-gram LMs do. ",,,,Speculative,2025-02-17 19:15:00+00:00,United States of America,,,,,,,,,
TA-CNN,Vision,Chinese University of Hong Kong (CUHK),Academia,"Yonglong Tian, Ping Luo, Xiaogang Wang, Xiaoou Tang",2014-11-29,Pedestrian Detection aided by Deep Learning Semantic Tasks,https://arxiv.org/abs/1412.0069,,SOTA improvement,,706048.0,"Architecture details in Figure 4
Conv1: 3*7*7*32=4704
Conv2: 32*5*5*48=38400Conv3: 48*3*3*64=27648
Conv4: 64*3*3*96=55296
Fc5: 5*2*96*500=480000
Fc6: 500*200=100000
Total: 4704+38400+27648+55296+480000+100000=706048
",1.0854e+16,,,"Training time: 3h
Assumed FP32 GPU FLOPs in 2014: 3.35e+12Assumed utilization: 0.3
Training FLOP: 3*60*60*0.3*3.35e12=10854000000000000=1.08e16
",,Caltech Pedestrian Dataset with 128k training images,128000.0,Followed train test split detailed in Pedestrian Detection: An Evaluation of the State of the Art,,3.0,,,1.0,Supervised,"Deep learning methods have achieved great success in pedestrian detection, owing to its ability to learn features from raw pixels. However, they mainly capture middle-level representations, such as pose of pedestrian, but confuse positive with hard negative samples, which have large ambiguity, e.g. the shape and appearance of `tree trunk' or `wire pole' are similar to pedestrian in certain viewpoint. This ambiguity can be distinguished by high-level representation. To this end, this work jointly optimizes pedestrian detection with semantic tasks, including pedestrian attributes (e.g. `carrying backpack') and scene attributes (e.g. `road', `tree', and `horizontal'). Rather than expensively annotating scene attributes, we transfer attributes information from existing scene segmentation datasets to the pedestrian dataset, by proposing a novel deep model to learn high-level features from multiple tasks and multiple data sources. Since distinct tasks have distinct convergence rates and data from different datasets have different distributions, a multi-task objective function is carefully designed to coordinate tasks and reduce discrepancies among datasets. The importance coefficients of tasks and network parameters in this objective function can be iteratively estimated. Extensive evaluations show that the proposed approach outperforms the state-of-the-art on the challenging Caltech and ETH datasets, where it reduces the miss rates of previous deep models by 17 and 5.5 percent, respectively. ",,Unreleased,,Unverified,2025-02-17 19:14:54+00:00,"Hong Kong,China",,,,,,,,,
Cascaded LNet-ANet,Vision,Chinese University of Hong Kong (CUHK),Academia,"Ziwei Liu, Ping Luo, Xiaogang Wang, Xiaoou Tang",2014-11-28,Deep Learning Face Attributes in the Wild,https://arxiv.org/abs/1411.7766,7710.0,Highly cited,,,,,,,,"ILSVRC 2012 subset of ImageNet,CelebA",,,,,,,,,,"Predicting face attributes in the wild is challenging due to complex face variations. We propose a novel deep learning framework for attribute prediction in the wild. It cascades two CNNs, LNet and ANet, which are fine-tuned jointly with attribute tags, but pre-trained differently. LNet is pre-trained by massive general object categories for face localization, while ANet is pre-trained by massive face identities for attribute prediction. This framework not only outperforms the state-of-the-art with a large margin, but also reveals valuable facts on learning face representation.
(1) It shows how the performances of face localization (LNet) and attribute prediction (ANet) can be improved by different pre-training strategies.
(2) It reveals that although the filters of LNet are fine-tuned only with image-level attribute tags, their response maps over entire images have strong indication of face locations. This fact enables training LNet for face localization with only image-level annotations, but without face bounding boxes or landmarks, which are required by all attribute recognition works.
(3) It also demonstrates that the high-level hidden neurons of ANet automatically discover semantic concepts after pre-training with massive face identities, and such concepts are significantly enriched after fine-tuning with attribute tags. Each attribute can be well explained with a sparse linear combination of these concepts.",,,,Unknown,2024-11-01 14:03:04+00:00,"Hong Kong,China",,,,,,,,,
Fully Convolutional Networks,Vision,University of California (UC) Berkeley,Academia,"J Long, E Shelhamer, T Darrell",2014-11-14,Fully Convolutional Networks for Semantic Segmentation,https://arxiv.org/abs/1411.4038,35588.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:04+00:00,United States of America,,,,,,,,,
SC-NLM,"Multimodal,Vision,Language",University of Toronto,Academia,"Ryan Kiros, R. Salakhutdinov, R. Zemel",2014-11-10,Unifying Visual-Semantic Embeddings with Multimodal Neural Language Models,https://www.semanticscholar.org/paper/Unifying-Visual-Semantic-Embeddings-with-Multimodal-Kiros-Salakhutdinov/2e36ea91a3c8fbff92be2989325531b4002e2afc,,Highly cited,,,,,,,,"COCO,Flickr30K Entities",,600000.0,"Our LSTM encoder and SC-NLM decoder were trained by concatenating the Flickr30K dataset with the recently released Microsoft COCO dataset [46], which combined give us over 100,000 images and over 500,000 descriptions for training",,,,,,,"Inspired by recent advances in multimodal learning and machine translation, we introduce an encoder-decoder pipeline that learns (a): a multimodal joint embedding space with images and text and (b): a novel language model for decoding distributed representations from our space. Our pipeline effectively unifies joint image-text embedding models with multimodal neural language models. We introduce the structure-content neural language model that disentangles the structure of a sentence to its content, conditioned on representations produced by the encoder. The encoder allows one to rank images and sentences while the decoder can generate novel descriptions from scratch. Using LSTM to encode sentences, we match the state-of-the-art performance on Flickr8K and Flickr30K without using object detections. We also set new best results when using the 19-layer Oxford convolutional network. Furthermore we show that with linear encoders, the learned embedding space captures multimodal regularities in terms of vector space arithmetic e.g. *image of a blue car* - ""blue"" + ""red"" is near images of red cars. Sample captions generated for 800 images are made available for comparison.",,,,Confident,2024-09-05 18:08:31+00:00,Canada,,,,,,,,,
LRCN,Video,"UT Austin,University of Massachusetts Lowell,University of California (UC) Berkeley","Academia,Academia,Academia","Jeff Donahue, Lisa Anne Hendricks, Marcus Rohrbach, Subhashini Venugopalan, Sergio Guadarrama, Kate Saenko, Trevor Darrell",2014-11-07,Long-term Recurrent Convolutional Networks for Visual Recognition and Description,https://arxiv.org/abs/1411.4389,5868.0,Highly cited,,142552000.0,"1st model: CaffeNet fc6 feature extractor (4096-length vectors) -> LSTM with 1024 hidden units

2nd model: CaffeNet fc6 feature extractor (4096-length vectors) -> 2 layer LSTM with 1000 hidden units

3rd mode: Like the second, but has encoder and decoder LSTMs (both with 2 layers)

AlexNet (close relative to CaffeNet) has 61M params.

LSTM RNN number of parameters is given by L*(n*m + n^2 + n) where L:= Number of layers, n:= hidden units, m:= input vector length
",,,,,TaCoS,"Largest model is for image captioning:
Pretrained with ILSVRC 2021 (1.2M images)
Trained on 40k video-sentence pairs from TaCoS",40000.0,,,,,,,Reinforcement learning,,,,,,2024-11-01 14:03:04+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Spatially-Sparse CNN,Vision,University of Warwick,Academia,Benjamin Graham,2014-09-23,Spatially-sparse convolutional neural networks,https://arxiv.org/abs/1409.6070v1,260.0,SOTA improvement,SOTA per https://paperswithcode.com/sota/image-classification-on-cifar-10,,Parameter count not stated but is probably derivable from the paper.,,,,,CIFAR-10,,,,,,,,,,"Convolutional neural networks (CNNs) perform well on problems such as handwriting recognition and image classification. However, the performance of the networks is often limited by budget and time constraints, particularly when trying to train deep networks.
Motivated by the problem of online handwriting recognition, we developed a CNN for processing spatially-sparse inputs; a character drawn with a one-pixel wide pen on a high resolution grid looks like a sparse matrix. Taking advantage of the sparsity allowed us more efficiently to train and test large, deep CNNs. On the CASIA-OLHWDB1.1 dataset containing 3755 character classes we get a test error of 3.82%.
Although pictures are not sparse, they can be thought of as sparse by adding padding. Applying a deep convolutional network using sparsity has resulted in a substantial reduction in test error on the CIFAR small picture datasets: 6.28% on CIFAR-10 and 24.30% for CIFAR-100.",,,,Unknown,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Deeply-supervised nets,Vision,Microsoft Research,Industry,"Chen-Yu Lee, Saining Xie, Patrick Gallagher, Zhengyou Zhang, Zhuowen Tu",2014-09-18,Deeply-Supervised Nets,https://arxiv.org/abs/1409.5185,2509.0,"Highly cited,SOTA improvement",,,,,,,,"MNIST,CIFAR-10,CIFAR-100,SVHN (Street View House Numbers)","According to the paper, the Deeply-Supervised Nets (DSN) model was trained and evaluated on these image classification datasets:

MNIST - handwritten digits dataset with 60,000 training images and 10,000 test images.
CIFAR-10 - 60,000 32x32 color images across 10 classes, with 50,000 for training and 10,000 for testing.
CIFAR-100 - similar to CIFAR-10 but with 100 classes and 600 images per class.
SVHN - Street View House Numbers dataset with over 600,000 images of digits for training and 26,000 images for testing.",870000.0,60000+50000+60000+600000,,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
GoogLeNet / InceptionV1,Vision,"Google,University of Michigan,University of North Carolina","Industry,Academia,Academia","Christian Szegedy, Wei Liu, Yangqing Jia, Pierre Sermanet, Scott Reed, Dragomir Anguelov, Dumitru Erhan, Vincent Vanhoucke, Andrew Rabinovich",2014-09-17,Going deeper with convolutions,https://arxiv.org/abs/1409.4842,41425.0,Highly cited,,6797700.0,Computed summing the parameters on table 1 of section 5,1.51e+18,,,"AI and Compute  (https://openai.com/blog/ai-and-compute/) charts imply a value of 1.51e18 (value extracted using WebPlotDigitizer  https://automeris.io/WebPlotDigitizer/ ).

Based on the paper, there are 1.5B multiply-adds per inference, and 1.2M images in the training set, but an unknown number of epochs. They decrease the learning rate by 4% every 8 epochs, so there are likely many. If the figure from AI and Compute is taken as true, there were likely 140 epochs","ILSVRC 2014 subset of ImageNet,ImageNet",,1200000.0,"""The ILSVRC 2014 classification challenge involves the
task of classifying the image into one of 1000 leaf-node categories in the Imagenet hierarchy. There are about 1.2 million images for training, 50,000 for validation and 100,000 images for testing""
...
""We participated in the challenge with no external data used for training.""",827.0,,"""Although we used CPU based implementation only, a rough estimate suggests that the GoogLeNet network could be trained to convergence using few high-end GPUs within a week""",,,,"We propose a deep convolutional neural network architecture codenamed ""Inception"", which was responsible for setting the new state of the art for classification and detection in the ImageNet Large-Scale Visual Recognition Challenge 2014 (ILSVRC 2014). The main hallmark of this architecture is the improved utilization of the computing resources inside the network. This was achieved by a carefully crafted design that allows for increasing the depth and width of the network while keeping the computational budget constant. To optimize quality, the architectural decisions were based on the Hebbian principle and the intuition of multi-scale processing. One particular incarnation used in our submission for ILSVRC 2014 is called GoogLeNet, a 22 layers deep network, the quality of which is assessed in the context of classification and detection.",,,,Confident,2025-02-17 19:14:47+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
SPN-4+KN5,Language,"Singapore University of Technology & Design,DSO National Laboratories","Academia,Government","W. Cheng, Stanley Kok, Hoai Vu Pham, Hai Leong Chieu, K. M. A. Chai",2014-09-14,Language modeling with sum-product networks,https://www.comp.nus.edu.sg/~skok/papers/is14.pdf,102.0,SOTA improvement,"""Our empirical comparisons with
six previous language models indicate that our SPN has superior
performance""",5000000.0,,4.4e+16,,,,Penn TreeBank,,,,,,,,,,"Sum product networks (SPNs) are a new class of deep probabilistic models. They can contain multiple hidden layers while keeping their inference and training times tractable. An SPN consists of interleaving layers of sum nodes and product nodes. A sum node can be interpreted as a hidden variable, and a product node can be viewed as a feature capturing rich interactions among an SPN’s inputs. We show that the ability of SPN to use hidden layers to model complex dependencies among words, and its tractable inference and learning times, make it a suitable framework for a language model. Even though SPNs have been applied to a variety of vision problems [1, 2], we are the first to use it for language modeling. Our empirical comparisons with
six previous language models indicate that our SPN has superior performance.",SPN-4+KN5,Unreleased,,,2025-02-18 15:57:49+00:00,"Singapore,Singapore",,,,,,,,,
Seq2Seq LSTM,Language,Google,Industry,"I Sutskever, O Vinyals, QV Le",2014-09-10,Sequence to Sequence Learning with Neural Networks,https://arxiv.org/abs/1409.3215,19578.0,Highly cited,,1920000000.0,"The resulting LSTM has 384M parameters of which 64M are pure recurrent connections (32M for the “encoder” LSTM and 32M
for the “decoder” LSTM).
The paper uses an ensemble of 5 LSTMs.",5.6e+19,,,"384E+6 parameters * 2 FLOP/parameter * (348E+6 + 304E+6 points per epoch) * 7.5 epochs * 3 FLOP/point ~= 1.126656e+19 FLOP
Times 5 independent models in ensemble => 5.6E+19 FLOP

If we assume NVIDIA K40 (in use at the time): 10 days * 24 * 60 * 60 seconds/day * 8 GPUs * 33% * 5e12 FLOP/s * 5 models in ensemble ~= 5.7E+19 FLOP",WMT14,,652000000.0,"[WORDS]
""We used the WMT’14 English to French dataset. We trained our models on a subset of 12M sentences consisting of 348M French words and 304M English words, which is a clean “selected”
subset from [29].""",,240.0,Training took about 10 days,,,,,,,,,2025-02-17 19:14:27+00:00,United States of America,,,,,,,,,
Large regularized LSTM,Language,"New York University (NYU),Google Brain","Academia,Industry","Wojciech Zaremba, Ilya Sutskever, Oriol Vinyals",2014-09-08,Recurrent Neural Network Regularization,https://arxiv.org/abs/1409.2329,3224.0,Highly cited,,66000000.0,,9.1e+16,,,,Penn TreeBank,,,,55.0,,,,,,"We present a simple regularization technique for Recurrent Neural Networks (RNNs) with Long Short-Term Memory (LSTM) units. Dropout, the most successful technique for regularizing neural networks, does not work well with RNNs and LSTMs. In this paper, we show how to correctly apply dropout to LSTMs, and show that it substantially reduces overfitting on a variety of tasks. These tasks include language modeling, speech recognition, image caption generation, and machine translation.",Large regularized LSTM,Unreleased,,,2024-09-24 14:38:36+00:00,"United States of America,United States of America",,,,,,,,,
VGG16,Vision,University of Oxford,Academia,Karen Simonyan; Andrew Zisserman,2014-09-04,Very Deep Convolutional Networks for Large-Scale Image Recognition,https://arxiv.org/abs/1409.1556,94013.0,Highly cited,,138000000.0,"Source: Table 2
https://arxiv.org/abs/1409.1556",1.2291e+19,,,"3 weeks * 4 Titan Black GPUs * 0.30 utilization

Section 3.3: ""On a system equipped with four NVIDIA Titan Black GPUs, training a single net took 2–3 weeks depending on the architecture.""

Titan Black performance: 5.645 TFLOPS (assuming FP32)

https://www.wolframalpha.com/input?i=5.645+TFLOPS+*+3+weeks+*+4+*+0.3


",ILSVRC 2012 subset of ImageNet,,1300000.0,"""In this section, we present the image classification results achieved by the described ConvNet architectures on the ILSVRC-2012 dataset (which was used for ILSVRC 2012–2014 challenges). The dataset includes images of 1000 classes, and is split into three sets: training (1.3M images), validation (50K images), and testing (100K images with held-out class labels).""

This is confirmed by section 3.1 Training:
""The batch size was set to 256""
""In total, the learning rate was decreased 3 times, and the learning was stopped after 370K iterations (74 epochs)""
256 * 370k/74 = 1.3M",74.0,504.0,,NVIDIA GTX Titan Black,4.0,,,,,,Confident,2025-02-17 19:11:23+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,256.0,,
VGG19,Vision,University of Oxford,Academia,"Karen Simonyan, Andrew Zisserman",2014-09-04,Very Deep Convolutional Networks for Large-Scale Image Recognition,https://arxiv.org/abs/1409.1556,94013.0,Highly cited,,144000000.0,"Source: Table 2
https://arxiv.org/abs/1409.1556",,,,,ILSVRC 2012 subset of ImageNet,,1300000.0,"""In this section, we present the image classification results achieved by the described
ConvNet architectures on the ILSVRC-2012 dataset (which was used for ILSVRC 2012–2014 challenges). The dataset includes images of 1000 classes, and is split into three sets: training (1.3M images), validation (50K images), and testing (100K images with held-out class labels).""",,,,,,,"In this work we investigate the effect of the convolutional network depth on its accuracy in the large-scale image recognition setting. Our main contribution is a thorough evaluation of networks of increasing depth using an architecture with very small (3x3) convolution filters, which shows that a significant improvement on the prior-art configurations can be achieved by pushing the depth to 16-19 weight layers. These findings were the basis of our ImageNet Challenge 2014 submission, where our team secured the first and the second places in the localisation and classification tracks respectively. We also show that our representations generalise well to other datasets, where they achieve state-of-the-art results. We have made our two best-performing ConvNet models publicly available to facilitate further research on the use of deep visual representations in computer vision.",,,,,2024-11-01 14:03:04+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
RNNsearch-50*,Language,"Jacobs University Bremen,University of Montreal / Université de Montréal","Academia,Academia","D Bahdanau, K Cho, Y Bengio",2014-09-01,Neural Machine Translation by Jointly Learning to Align and Translate,https://arxiv.org/abs/1409.0473,26073.0,Highly cited,,,,1.5552e+18,,,"From https://openai.com/blog/ai-and-compute/ Appendix.

0.018 pfs-days
(86400*10^15*0.018)

252 hours in a Quadro K-6000 GPU",WMT'14 + selection,,348000000.0,"[WORDS]
""WMT ’14 contains the following English-French parallel corpora: Europarl (61M words), news
commentary (5.5M), UN (421M) and two crawled corpora of 90M and 272.5M words respectively,
totaling 850M words. Following the procedure described in Cho et al. (2014a), we reduce the size of
the combined corpus to have 348M words using the data selection method by Axelrod et al. (2011).""",,,,NVIDIA Quadro K6000,,,,,,,,2025-03-03 07:43:22+00:00,"Germany,Canada",,,,,,,,,
AdClickNet,Recommendation,Facebook,Industry,"Xinran He, Junfeng Pan, Ou Jin, Tianbing Xu, Bo Liu, Tao Xu, Yanxin Shi, Antoine Atallah, Ralf Herbrich, Stuart Bowers, Joaquin Quiñonero Candela",2014-08-24,Practical Lessons from Predicting Clicks on Ads at Facebook,https://dl.acm.org/doi/10.1145/2648584.2648589,859.0,,,,,,,,,,,,,,,,,,,"Online advertising allows advertisers to only bid and pay for measurable user responses, such as clicks on ads. As a consequence, click prediction systems are central to most online advertising systems. With over 750 million daily active users and over 1 million active advertisers, predicting clicks on Facebook ads is a challenging machine learning task. In this paper we introduce a model which combines decision trees with logistic regression, outperforming either of these methods on its own by over 3%, an improvement with significant impact to the overall system performance. We then explore how a number of fundamental parameters impact the final prediction performance of our system. Not surprisingly, the most important thing is to have the right features: those capturing historical information about the user or ad dominate other types of features. Once we have the right features and the right model (decisions trees plus logistic regression), other factors play small roles (though even small improvements are important at scale). Picking the optimal handling for data freshness, learning rate schema and data sampling improve the model slightly, though much less than adding a high-value feature, or picking the right model to begin with.",,,,Unknown,2024-11-01 14:03:04+00:00,United States of America,,,,,,,,,
NPD,Vision,IEEE,Industry,"Shengcai Liao, Anil K. Jain, S. Li",2014-08-06,A Fast and Accurate Unconstrained Face Detector,https://www.semanticscholar.org/paper/A-Fast-and-Accurate-Unconstrained-Face-Detector-Liao-Jain/fb67880d99ca29125866087dad2934ccc221378a,,SOTA improvement,https://paperswithcode.com/sota/face-detection-on-fddb ,313856.0,"""Our final detector contains 1,226 deep quadratic trees""
""(depth of eight in this paper)""
Parameters of the trained decision trees: 1226*(2^8)=313856
",,,,,,"""The AFLW database contains 25,993 face annotations in 21,997 real-world images collected from Flickr.""",217300.0,"""Together with their mirrored images and perturbations in positions, we had 217,300 face images in total for training.""",,,,,,,"We propose a method to address challenges in unconstrained face detection, such as arbitrary pose variations and occlusions. First, a new image feature called Normalized Pixel Difference (NPD) is proposed. NPD feature is computed as the difference to sum ratio between two pixel values, inspired by the Weber Fraction in experimental psychology. The new feature is scale invariant, bounded, and is able to reconstruct the original image. Second, we propose a deep quadratic tree to learn the optimal subset of NPD features and their combinations, so that complex face manifolds can be partitioned by the learned rules. This way, only a single soft-cascade classifier is needed to handle unconstrained face detection. Furthermore, we show that the NPD features can be efficiently obtained from a look up table, and the detection template can be easily scaled, making the proposed face detector very fast. Experimental results on three public face datasets (FDDB, GENKI, and CMU-MIT) show that the proposed method achieves state-of-the-art performance in detecting unconstrained faces with arbitrary pose variations and occlusions in cluttered scenes.",,Open weights (unrestricted),,Unverified,2024-12-12 09:41:59+00:00,Multinational,,,,,,,,,
ACF-WIDER,Vision,Chinese Academy of Sciences,Academia,"Binh Yang, Junjie Yan, Zhen Lei, S. Li",2014-07-15,Aggregate channel features for multi-view face detection,https://www.semanticscholar.org/paper/Aggregate-channel-features-for-multi-view-face-Yang-Yan/2f04ba0f74df046b0080ca78e56898bd4847898b,,SOTA improvement,https://paperswithcode.com/sota/face-detection-on-wider-face-medium ,6144.0,"The paper trains a decision tree ensemble.
“we choose 2048 as the number of weak classifiers contained in the soft cascade. As each weak classifier is a depth-2 decision tree, it takes only two comparing operations to apply a weak classifier, which is quite fast.”
Parameters: 2048*(2^2-1)=6144
",76380000000000.0,,,"Training compute: 10.2 minutes * 4 * 3.9* 10^9 cycles per second * 16 FLOP per cycle * 0.5 = 7.638*10^13 FLOPs
“on a PC with Intel Core i7-3770 CPU and 16GB RAM”
Ivy Bridge, 4 cores, 3.9GHz, 16 FP32 FLOP/cycle (https://en.wikipedia.org/wiki/Floating_point_operations_per_second ) 
“and 10.2 mins for multi-scale version.”",,AFLW,144448.0,"“there are in total 36, 112 positive samples and 108, 336 negative samples selected from AFLW”
",,,,,1.0,Supervised,"Face detection has drawn much attention in recent decades since the seminal work by Viola and Jones. While many subsequences have improved the work with more powerful learning algorithms, the feature representation used for face detection still can't meet the demand for effectively and efficiently handling faces with large appearance variance in the wild. To solve this bottleneck, we borrow the concept of channel features to the face detection domain, which extends the image channel to diverse types like gradient magnitude and oriented gradient histograms and therefore encodes rich information in a simple form. We adopt a novel variant called aggregate channel features, make a full exploration of feature design, and discover a multi-scale version of features with better performance. To deal with poses of faces in the wild, we propose a multi-view detection approach featuring score re-ranking and detection adjustment. Following the learning pipelines in Viola-Jones framework, the multi-view face detector using aggregate channel features shows competitive performance against state-of-the-art algorithms on AFW and FDDB test-sets, while runs at 42 FPS on VGA images.",,Unreleased,,Unverified,2025-02-13 20:30:37+00:00,China,,,,,,,,,
SmooCT,Games,University College London (UCL),Academia,"Johannes Heinrich, David Silver",2014-07-01,Self-Play Monte-Carlo Tree Search in Computer Poker,https://www.semanticscholar.org/paper/Self-play-Monte-Carlo-tree-search-in-computer-poker-Heinrich-Silver/7b687599b4425aa959036071030e1212a3b359c7,16.0,SOTA improvement,First RL system to achieve superhuman level at Poker Limit Texas Hold Em,,,6.9e+16,,,"""Each three-player agent was trained for about 12 billion episodes, requiring about 48 hours of training time [...] on a modern computer without using parallelization""

Assume an Intel i7 so 400e9 FLOP/s.
6.9e16 = 400e9*60*60*48",,,12000000000.0,"""Each three-player agentwas trained for about 12 billion episodes""

An episode seems to be a round of betting.",,48.0,,,,,"Self-play reinforcement learning has proved to be successful in many perfect information two-player games.
However, research carrying over its theoretical guarantees and practical success to games of imperfect information has been lacking. In this paper, we evaluate selfplay Monte-Carlo Tree Search (MCTS) in limit Texas Hold’em and Kuhn poker. We introduce a variant of the established UCB algorithm and provide first empirical results demonstrating its ability to find approximate Nash equilibria.",,,,,2025-02-17 19:10:58+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Multiresolution CNN,Video,"Google,Stanford University","Industry,Academia","A Karpathy, G Toderici, S Shetty, T Leung",2014-06-23,Large-Scale Video Classification with Convolutional Neural Networks,https://ieeexplore.ieee.org/document/6909619,6254.0,Highly cited,,126125568.0,"""Using shorthand notation, the full [single frame] architecture is C(96, 11, 3)-N-P-C(256, 5, 1)-N-P-C(384, 3, 1)-C(384, 3, 1)-C(256, 3, 1)-P-FC(4096)-FC(4096), where C(d, f, s) indicates a convolutional layer with d filters of spatial size f ×f, applied to the input with stride s""

Two such single-frame architectures are concatenated as shown in figure 2

""Since the input is only of half the
spatial size as the full-frame models, we take out the last
pooling layer to ensure that both streams still terminate in a
layer of size 7×7×256. ""

We assume the input are T=10 frames with C=3 color channels each

2*(256*(10*3*5*5+1) + 384*(256*3*3+1) + 384*(384*3*3+1) + 256*(384*3*3+1)) + (2*7*7*256 + 1)*4096 + (4096+1)*4096



",,,,,,,50000000.0,"""We further estimate the size of our dataset of sampled frames to be on the order of 50 million examples and that our networks have each seen approximately 500 million examples throughout the training period in total.""

So 5e+7 datapoints and 10 epochs.",,,,,,,,,,,,2024-11-01 14:03:14+00:00,"United States of America,United States of America",,,,,,,,,
DeepFace,Vision,"Tel Aviv University,Facebook","Academia,Industry","Y Taigman, M Yang, MA Ranzato",2014-06-23,DeepFace: Closing the Gap to Human-Level Performance in Face Verification,https://ieeexplore.ieee.org/document/6909616,5998.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:15+00:00,"Israel,United States of America",,,,,,,,,
RNN-WER,Speech,"DeepMind,University of Toronto","Industry,Academia","Alex Graves, Navdeep Jaitly",2014-06-22,Towards End-To-End Speech Recognition with Recurrent Neural Networks,https://proceedings.mlr.press/v32/graves14.html,2805.0,"Highly cited,SOTA improvement","""Finally, by combining the new model with a baseline, we
have achieved state-of-the-art accuracy on the Wall Street
Journal corpus for speaker independent recognition.""",26500000.0,"""The network had five levels of bidirectional LSTM hidden layers, with 500 cells in each layer, giving a total of ∼ 26.5M weights.""",,,,,WSJ,"""The experiments were carried out on the Wall Street Journal (WSJ) corpus (available as LDC corpus LDC93S6B
and LDC94S13B). The RNN was trained on both the 14
hour subset ‘train-si84’ and the full 81 hour set""

",1100000.0,"dataset is 81 hours

At 228 wpm (https://docs.google.com/document/d/1G3vvQkn4x_W71MKg0GmHVtzfd9m0y3_Ofcoew0v902Q/edit)
that's 81*228*60 = 1,108,080

another source says WSJ contains 37k sentences, so this would be ~30 words per sentence which seems high but roughly right: https://www.arxiv-vanity.com/papers/1903.00216/",,,,,,Supervised,"This paper presents a speech recognition system that directly transcribes audio data with text, without requiring an intermediate phonetic representation. The system is based on a combination of the deep bidirectional LSTM recurrent neural network architecture and the Connectionist Temporal Classification objective function. A modification to the objective function is introduced that trains the network to minimise the expectation of an arbitrary transcription loss function. This allows a direct optimisation of the word error rate, even in the absence of a lexicon or language model. The system achieves a word error rate of 27.3% on the Wall Street Journal corpus with no prior linguistic information, 21.9% with only a lexicon of allowed words, and 8.2% with a trigram language model. Combining the network with a baseline system further reduces the error rate to 6.7%.",,,,Likely,2024-09-05 18:08:31+00:00,"United Kingdom of Great Britain and Northern Ireland,Canada",,,,,,,,,
Fragment embedding,Multimodal,Stanford University,Academia,"A. Karpathy, Armand Joulin, Li Fei-Fei",2014-06-21,Deep Fragment Embeddings for Bidirectional Image Sentence Mapping,https://www.semanticscholar.org/paper/Deep-Fragment-Embeddings-for-Bidirectional-Image-Karpathy-Joulin/7f1b111f0bb703b0bd97aba505728a9b0d9b2a54,,SOTA improvement,"""Extensive experimental evaluation shows that reasoning on both the global level of images and sentences and the finer level of their respective fragments significantly improves performance on image-sentence retrieval tasks.""",144496000.0,"Model contains a word embedding. a matrix combining two word embeddings, and image embedding (built upon a pretrained RCNN image model.
Word embedding: 400000 * 200 =80000000 (""Here, We is a d × 400, 000 matrix that encodes a 1-of-k vector into a d-dimensional word vector representation (we use d = 200).""
Embedding dimension: 1000 (""The size of the embedded space is cross-validated, and we found that values of approximately 1000 generally work well.""
Word combination matrix: 400* 1000=400000
Image embedding: 4096*1000=4096000 (""We use the Caffe [41] implementation of the ImageNet Detection RCNN model [27] to detect objects in all images. On our machine with a Tesla K40 GPU, the RCNN processes one image in approximately 25 seconds. We discard the predictions for 200 ImageNet detection classes and only keep the 4096-D activations"")
CNN: 60,000,000 ""The CNN architecture is identical to the one described in Girhsick et al. [26]. It contains approximately 60 million parameters""
Total parameters: 4096000+80000000+400000+60000000=144,496,000",,,,,Flickr30K Entities,"The datasets contain 1,000, 8,000 and 30,000 images respectively and each image is annotated using Amazon Mechanical Turk with 5 independent sentences.",150000.0,"Largest experiment uses 30000 training images, 30000 * 5 = 150,000 sentences",20.0,,,,,,"We introduce a model for bidirectional retrieval of images and sentences through a deep, multi-modal embedding of visual and natural language data. Unlike previous models that directly map images or sentences into a common embedding space, our model works on a finer level and embeds fragments of images (objects) and fragments of sentences (typed dependency tree relations) into a common space. We then introduce a structured max-margin objective that allows our model to explicitly associate these fragments across modalities. Extensive experimental evaluation shows that reasoning on both the global level of images and sentences and the finer level of their respective fragments improves performance on image-sentence retrieval tasks. Additionally, our model provides interpretable predictions for the image-sentence retrieval task since the inferred inter-modal alignment of fragments is explicit.",,,,Likely,2025-03-10 17:45:24+00:00,United States of America,,,,,,,,,
SPPNet,Vision,"Microsoft,Xi’an Jiaotong University,University of Science and Technology of China","Industry,Academia,Academia","Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun",2014-06-18,Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition,https://arxiv.org/abs/1406.4729,10365.0,Highly cited,,,,3.411072e+18,,,"""All networks in this paper can be
trained on a single GeForce GTX Titan GPU (6 GB memory) within two to four weeks.""
4.7e12 FLOP/s * 4* 7*24*60*60 seconds * 0.3 utilisation",ImageNet-1k,,1280000.0,"Section 3.1: ""We train the networks on the 1000-category training
set of ImageNet 2012.""",,672.0,"""All networks in this paper can be trained on a single GeForce GTX Titan GPU (6 GB memory) within two to four weeks.""",NVIDIA GeForce GTX TITAN,,,,,,,,2025-02-17 19:10:44+00:00,"United States of America,China,China",,,,,,,,,
GANs,Image generation,University of Montreal / Université de Montréal,Academia,"Ian J. Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, Yoshua Bengio",2014-06-10,Generative Adversarial Networks,https://arxiv.org/abs/1406.2661,36870.0,Highly cited,,,The paper outlines the G-D framework but doesn't provide information about the structures of their generator and discriminator.,5.184e+17,,,"From https://openai.com/blog/ai-and-compute/ Appendix

""Less than 0.006 pfs-days""
(86400*10^15*0.006)

Seems extremely speculative, unless someone at OpenAI privately corresponded with the authors. There is no information about compute or training in the GANs paper.",CIFAR-10,,60000.0,"""We trained adversarial nets an a range of datasets including MNIST[23], the Toronto Face Database (TFD) [28], and CIFAR-10 [21].""

MNIST has 60k images 
https://en.wikipedia.org/wiki/MNIST_database

TFD seems to have 2925 examples (?)
https://www.cs.toronto.edu/~urtasun/courses/CSC411/hw3-411.pdf

CIFAR-10 has 60k images
https://www.cs.toronto.edu/~kriz/cifar.html

",,,,,,,"We propose a new framework for estimating generative models via an adversarial process, in which we simultaneously train two models: a generative model G that captures the data distribution, and a discriminative model D that estimates the probability that a sample came from the training data rather than G. The training procedure for G is to maximize the probability of D making a mistake. This framework corresponds to a minimax two-player game. In the space of arbitrary functions G and D, a unique solution exists, with G recovering the training data distribution and D equal to 1/2 everywhere. In the case where G and D are defined by multilayer perceptrons, the entire system can be trained with backpropagation. There is no need for any Markov chains or unrolled approximate inference networks during either training or generation of samples. Experiments demonstrate the potential of the framework through qualitative and quantitative evaluation of the generated samples.",,,,Speculative,2025-02-17 19:10:37+00:00,Canada,,,,,,,,,
Two-stream ConvNets for action recognition,Video,University of Oxford,Academia,"Karen Simonyan, Andrew Zisserman",2014-06-09,Two-Stream Convolutional Networks for Action Recognition in Videos,https://arxiv.org/abs/1406.2199,7231.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:15+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
GRUs,Language,"University of Montreal / Université de Montréal,Jacobs University,University of Maine","Academia,Academia,Academia","Kyunghyun Cho, Bart van Merrienboer, Caglar Gulcehre, Dzmitry Bahdanau, Fethi Bougares, Holger Schwenk, Yoshua Bengio",2014-06-03,Learning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation,https://arxiv.org/abs/1406.1078,21840.0,Highly cited,,,,,,,,,,,,,,,,,,"In this paper, we propose a novel neural network model called RNN Encoder-Decoder that consists of two recurrent neural networks (RNN). One RNN encodes a sequence of symbols into a fixed-length vector representation, and the other decodes the representation into another sequence of symbols. The encoder and decoder of the proposed model are jointly trained to maximize the conditional probability of a target sequence given a source sequence. The performance of a statistical machine translation system is empirically found to improve by using the conditional probabilities of phrase pairs computed by the RNN Encoder-Decoder as an additional feature in the existing log-linear model. Qualitatively, we show that the proposed model learns a semantically and syntactically meaningful representation of linguistic phrases.",,,,Unknown,2024-11-01 14:03:15+00:00,"Canada,Germany,United States of America",,,,,,,,,
Dropout: SVHN,Vision,University of Toronto,Academia,"Nitish Shrivasta, Geoffrey Hinton, Alex Krizhevsky, Ilya Sutskever, Ruslan Salakhutdinov",2014-06-01,Dropout: A Simple Way to Prevent Neural Networks from Overfitting,https://jmlr.org/papers/v15/srivastava14a.html,37838.0,"Highly cited,SOTA improvement",SOTA on the Street View House Numbers dataset,47795232.0,"""The best architecture that we found uses three convolutional layers each followed by a max-pooling layer. The convolutional layers have 96, 128 and 256 filters respectively. Each convolutional layer has a 5 × 5 receptive field applied with a stride of 1 pixel. Each max pooling layer pools 3 × 3 regions at strides of 2 pixels. The convolutional layers are followed by two fully connected hidden layers having 2048 units each.""
Inputs: 32 x 32 x 3
conv_1: 96 x 5 x 5 x 3 = 7,200
conv_2: 128 x 5 x 5 x 96 = 307,200
conv_3: 256 x 5 x 5 x 128 = 819,200
(output shape after CNN 3 will be: 20 x 20 x 256)

max_pool has no learnable parameters but further reduces output shape to 9 x 9 x 256

FFN_1: (9 x 9 x 256) x 2048 = 42,467,328
FFN_2: 2048 x 2048 = 4,194,304

So total number of parameters appear to be 47,795,232",,,,"Per image input:
1st CNN: 2*32*32*5*5*3*96=14745600
2nd CNN: 2*16*16*5*5*96*128=157286400
3rd CNN: 2*8*8*5*5*128*256=104857600
1st FC: 2*256*4*4*2048=16777216
2nd FC: 2*2048*2048=8388608
Total forward FLOP: 14745600+157286400+104857600+16777216+8388608=302055424


If we assume 1 epoch, the 600k images would require 5e14 FLOPs. However in other datasets they trained for multiple epochs (e.g. MNIST has 60k train images and they trained for 1M weight updates, batch size unstated).",SVHN (Street View House Numbers),,600000.0,"Appendix B.2: ""The SVHN data set consists of approximately 600,000 training images and 26,000 test images""

dimensionality  3072 (32 × 32 color)",,,,,,,"Deep neural nets with a large number of parameters are very powerful machine learning systems. However, overfitting is a serious problem in such networks. Large networks are also slow to use, making it difficult to deal with overfitting by combining the predictions of many different large neural nets at test time. Dropout is a technique for addressing this problem. The key idea is to randomly drop units (along with their connections) from the neural network during training. This prevents units from co-adapting too much. During training, dropout samples from an exponential number of different thinned networks. At test time, it is easy to approximate the effect of averaging the predictions of all these thinned networks by simply using a single unthinned network that has smaller weights. This significantly reduces overfitting and gives major improvements over other regularization methods. We show that dropout improves the performance of neural networks on supervised learning tasks in vision, speech recognition, document classification and computational biology, obtaining state-of-the-art results on many benchmark data sets.",,Unreleased,,Unverified,2024-11-01 14:03:15+00:00,Canada,,,,,,,,,
AdaRNN,Language,Beihang University,Academia,"Li Dong, Furu Wei, Chuanqi Tan, Duyu Tang, M. Zhou, Ke Xu",2014-06-01,Adaptive Recursive Neural Network for Target-dependent Twitter Sentiment Classification,https://www.semanticscholar.org/paper/Adaptive-Recursive-Neural-Network-for-Twitter-Dong-Wei/06e122f475a21d92dba137609c40f35690217475,,Highly cited,,13040.0,"D=25 ""For recursive neural models, the dimension of word vector is set to 25, and f = tanh is used as the nonlinearity function. We employ 10 composition matrices in AdaRNN.""
Composition matrices: ""W ∈ R D×2D is the composition matrix, and b is the bias vector.""
C=10 ""We employ 10 composition matrices in AdaRNN.""
Combination matrix: ""S ∈ R C×(2D+|e|) is the matrix used to determine which composition function we use, vl , vr are the left and right child vectors, and e are external feature vector. In this work, e is a one-hot binary feature vector which indicates what the dependency type is.""
|e| > 4: (see Figure 2)
Weights: 10 * 25 * 50 + 10 * (50+4) =13040 (ignoring embedding to the 25 dimension embedding space)",,,,,,,6248.0,"""Training data consists of 6,248 tweets,""",,,,,,,"We propose Adaptive Recursive Neural Network (AdaRNN) for target-dependent Twitter sentiment classification. AdaRNN adaptively propagates the sentiments of words to target depending on the context and syntactic relationships between them. It consists of more than one composition functions, and we model the adaptive sentiment propagations as distributions over these composition functions. The experimental studies illustrate that AdaRNN improves the baseline methods. Furthermore, we introduce a manually annotated dataset for target-dependent Twitter sentiment analysis.",,,,Confident,2024-09-05 18:08:31+00:00,China,,,,,,,,,
Paragraph Vector,Language,Google,Industry,"Quoc V. Le, Tomas Mikolov",2014-05-14,Distributed Representations of Sentences and Documents,https://www.semanticscholar.org/paper/Distributed-Representations-of-Sentences-and-Le-Mikolov/f3de86aeb442216a8391befcacb49e58b478f512,,Highly cited,,32000000.0," 75000*400+5000*400=32000000
""We learn the word vectors and paragraph vectors using 75,000 training documents""
""In PV-DM, the learned vector representations have 400 dimensions for both words and documents""
Paragraph embedding of dimension number of paragraphs * embedding size
Word embedding of dimension |V|*embedding size
Assuming vocabulary of 5000 since results are compared directly to Maas et. al., 2011",,,,,IMDb,,75000.0,"""25,000 labeled training instances, 25,000 labeled test in-
stances and 50,000 unlabeled training instances.""",,,,,,,"Many machine learning algorithms require the input to be represented as a fixed-length feature vector. When it comes to texts, one of the most common fixed-length features is bag-of-words. Despite their popularity, bag-of-words features have two major weaknesses: they lose the ordering of the words and they also ignore semantics of the words. For example, ""powerful,"" ""strong"" and ""Paris"" are equally distant. In this paper, we propose Paragraph Vector, an unsupervised algorithm that learns fixed-length feature representations from variable-length pieces of texts, such as sentences, paragraphs, and documents. Our algorithm represents each document by a dense vector which is trained to predict words in the document. Its construction gives our algorithm the potential to overcome the weaknesses of bag-of-words models. Empirical results show that Paragraph Vectors outperforms bag-of-words models as well as other techniques for text representations. Finally, we achieve new state-of-the-art results on several text classification and sentiment analysis tasks.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
HyperNEAT,Games,University of Texas at Austin,Academia,"M Hausknecht, J Lehman",2014-03-05,A Neuroevolution Approach to General Atari Game Playing,https://ieeexplore.ieee.org/abstract/document/6756960,195.0,SOTA improvement,"""Neuroevolution ameliorates these problems and evolved policies achieve state-of-the-art results, even surpassing human high scores on three games""",239712.0,"""The ANN consists of three layers (Fig. 3): a substrate layer inwhich information from the game screen (raw pixels, objects, ornoise) is given as input to the network; a processing layer whichadds a nonlinear internal representation; and a nonlinear outputlayer from which actions are read and conveyed to the Atari em-ulator. Both the input and output layers are fully connected tothe processing layer. The substrate dimensionality of the inputand processinglayers is 810 in the case of the object repre-sentation and 1621 for the pixel and noise representations.3The output layer consists of a 33 substrate mirroring the ninepossible directions of the Atari 2600 joystick and a single noderepresenting thefire button""",,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
DBN for NLP,Language,"Microsoft,University of Toronto","Industry,Academia","R Sarikaya, GE Hinton, A Deoras",2014-02-11,Application of Deep Belief Networks for Natural Language Understanding,https://ieeexplore.ieee.org/document/6737243,445.0,,,1021535.0,"Assuming 1000 input features, 35 classes and 3 hidden layers of 500 units each",,,,,,,178000.0,The training data has 27K automatically transcribed utterances amounting to 178K words.,,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,Canada",,,,,,,,,
GloVe (6B),Language,Stanford University,Academia,"J Pennington, R Socher, CD Manning",2014-01-01,GloVe: Global Vectors for Word Representation,https://nlp.stanford.edu/projects/glove/,30643.0,Highly cited,,120000000.0,400k vocab * 300 vector dimensions,,,,"""The total run-time is split between populating X
and training the model. The former depends on
many factors, including window size, vocabulary
size, and corpus size. Though we did not do so,
this step could easily be parallelized across multiple machines (see, e.g., Lebret and Collobert
(2014) for some benchmarks). Using a single
thread of a dual 2.1GHz Intel Xeon E5-2658 machine, populating X with a 10 word symmetric
context window, a 400,000 word vocabulary, and
a 6 billion token corpus takes about 85 minutes.
Given X, the time it takes to train the model depends on the vector size and the number of iterations. For 300-dimensional vectors with the above settings (and using all 32 cores of the above machine), a single iteration takes 14 minutes. See Fig. 4 for a plot of the learning curve""

""We run 50 iterations for vectors smaller than
300 dimensions, and 100 iterations otherwise (see
Section 4.6 for more details about the convergence
rate).""

Details of dual 2.1GHz Intel Xeon E5-2658 machine:
https://www.intel.com/content/www/us/en/products/sku/61428/intel-xeon-processor-e52658-20m-2-10-ghz-8-0-gts-intel-qpi/specifications.html",Gigaword5 + Wikipedia2014,,6000000000.0,"""We trained our model on five corpora of varying sizes: a 2010 Wikipedia dump with 1 billion tokens; a 2014 Wikipedia dump with 1.6 billion tokens; Gigaword 5 which has 4.3 billion tokens; the combination Gigaword5 + Wikipedia2014, which has 6 billion tokens; and on 42 billion tokens of web data, from Common Crawl

[To demonstrate the scalability of the model, we also trained it on a much larger sixth corpus, containing 840 billion tokens of web data, but in this case we did not lowercase the vocabulary, so the results are not directly comparable.]""",,,"Section 4.6 in original paper (https://nlp.stanford.edu/pubs/glove.pdf)

85 min to populate coocurrence matrix
+ 25 training iterations

Each iteration takes 14 minutes on 32 cores ",,,,,,,,,2024-11-01 14:03:15+00:00,United States of America,,,,,,,,,
GloVe (32B),Language,Stanford University,Academia,"J Pennington, R Socher, CD Manning",2014-01-01,GloVe: Global Vectors for Word Representation,https://nlp.stanford.edu/projects/glove/,30643.0,Highly cited,,120000000.0,400k vocab * 300 vector dimensions,,,,"""The total run-time is split between populating X
and training the model. The former depends on
many factors, including window size, vocabulary
size, and corpus size. Though we did not do so,
this step could easily be parallelized across multiple machines (see, e.g., Lebret and Collobert
(2014) for some benchmarks). Using a single
thread of a dual 2.1GHz Intel Xeon E5-2658 machine, populating X with a 10 word symmetric
context window, a 400,000 word vocabulary, and
a 6 billion token corpus takes about 85 minutes.
Given X, the time it takes to train the model depends on the vector size and the number of iterations. For 300-dimensional vectors with the above settings (and using all 32 cores of the above machine), a single iteration takes 14 minutes. See Fig. 4 for a plot of the learning curve""

""We run 50 iterations for vectors smaller than
300 dimensions, and 100 iterations otherwise (see
Section 4.6 for more details about the convergence
rate).""

But we are interested in the 42B token model",Common Crawl,,42000000000.0,"""We trained our model on five corpora of varying sizes: a 2010 Wikipedia dump with 1 billion tokens; a 2014 Wikipedia dump with 1.6 billion tokens; Gigaword 5 which has 4.3 billion tokens; the combination Gigaword5 + Wikipedia2014, which has 6 billion tokens; and on 42 billion tokens of web data, from Common Crawl

[To demonstrate the scalability of the model, we also trained it on a much larger sixth corpus, containing 840 billion tokens of web data, but in this case we did not lowercase the vocabulary, so the results are not directly comparable.]""",,,"Section 4.6 in original paper (https://nlp.stanford.edu/pubs/glove.pdf)

85 min to populate coocurrence matrix
+ 25 training iterations

Each iteration takes 14 minutes on 32 cores ",,,,,,,,,2024-11-01 14:03:15+00:00,United States of America,,,,,,,,,
OverFeat,Vision,New York University (NYU),Academia,"Pierre Sermanet, David Eigen, Xiang Zhang, Michael Mathieu, Rob Fergus, Yann LeCun",2013-12-21,"OverFeat: Integrated Recognition, Localization and Detection using Convolutional Networks",https://arxiv.org/abs/1312.6229,5148.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Image generation,Vision,University of Amsterdam,Academia,"DP Kingma, M Welling",2013-12-20,Auto-Encoding Variational Bayes,https://arxiv.org/abs/1312.6114,21760.0,Highly cited,,,,475200000000000.0,,,"From https://openai.com/blog/ai-and-compute/ Appendix

""less than 0.0000055 pfs-days""
(86400*10^15*0.0000055)",MNIST,,60000.0,"""We trained generative models of images from the MNIST and Frey Face datasets""

MNIST has 60k images
https://en.wikipedia.org/wiki/MNIST_database

Frey Face has 2k images
https://cs.nyu.edu/~roweis/data.html",,,,,,,,,,,,2025-02-17 19:09:58+00:00,Netherlands,,,,,,,,,
DOT(S)-RNN,Language,"Aalto University,University of Montreal / Université de Montréal","Academia,Academia","Razvan Pascanu, Caglar Gulcehre, Kyunghyun Cho, Yoshua Bengio",2013-12-20,How to Construct Deep Recurrent Neural Networks,https://arxiv.org/abs/1312.6026,1255.0,Highly cited,,6160000.0,,,,,,,,,,,,,,,,,DOT(S)-RNN,Unreleased,,,2024-09-15 19:53:38+00:00,"Finland,Canada",,,,,,,,,
DQN,Games,DeepMind,Industry,"V Mnih, K Kavukcuoglu, D Silver, A Graves",2013-12-19,Playing Atari with Deep Reinforcement Learning,https://arxiv.org/abs/1312.5602,11277.0,Highly cited,,836096.0,"""The input to the neural network consists is an 84 × 84 × 4 image produced by φ. The first hidden layer convolves 16 8 × 8 filters with stride 4 with the input image and applies a rectifier nonlinearity [10, 18]. The second hidden layer convolves 32 4 × 4 filters with stride 2, again followed by a rectifier nonlinearity. The final hidden layer is fully-connected and consists of 256 rectifier units. The output layer is a fully connected linear layer with a single output for each valid action. The number of valid actions varied between 4 and 18 on the games we considered.""",2300000000000000.0,,,"Network is 84x84x3 input, 16, 8x8, stride 4, 32 4x4 stride 2, 256 fully connected
First layer: 20*20*3*16*8*8 = 1.23M add-multiplies
Second layer: 9*9*16*32*4*4 = 0.66M add-multiplies
Third layer: 9*9*32*256 = 0.66M add-mutliplies
Total ~ 2.55M add-multiplies
2.5 MFLOPs * 5M updates * 32 batch size * 2 multiply-add * 3 backward pass
= 2.3 PF = 2.7e-5 pfs-days

",,,,,,,,,,,,,,,,2025-02-17 19:09:49+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Network in Network,Vision,National University of Singapore,Academia,"M Lin, Q Chen, S Yan",2013-12-16,Network In Network,https://arxiv.org/abs/1312.4400,6052.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:15+00:00,Singapore,,,,,,,,,
RNN for 1B words,Language,Google,Industry,"Ciprian Chelba, Tomas Mikolov, Mike Schuster, Qi Ge, Thorsten Brants, Phillipp Koehn, Tony Robinson",2013-12-11,One Billion Word Benchmark for Measuring Progress in Statistical Language Modeling,https://arxiv.org/abs/1312.3005,1205.0,"Highly cited,SOTA improvement","from abstract: 'We show performance of several well-known types of language models, with the best results achieved with a recurrent neural network based language model. The baseline unpruned Kneser-Ney 5-gram model achieves perplexity 67.6; a combination of techniques leads to 35% reduction in perplexity, or 10% reduction in cross-entropy (bits), over that baseline. '",20000000000.0,20B from Table 1,,,,"240 hours on 24 CPUs from Table 1. CPU model is not given, but there is mention of using SIMD instructions. 1 SIMD operation is around 4 FLOP. CPU can have around 3e9 operations per second. so around 12e9*24 * 240*3600 = 2.4e17 operations. This estimation doesn't include use of multiple threads. Including use of threads we would probably have around 10 times more operations  so around 2.4e18 FLOPs. This estimation is speculative.",One Billion Word benchmark,"from abstract: ""With almost one billion words of training data, """,1000000000.0,"from abstract: 'With almost one billion words of training data, '",,240.0,"from Table 1,240 hours on 24 CPUs",,24.0,,"We propose a new benchmark corpus to be used for measuring progress in statistical language modeling. With almost one billion words of training data, we hope this benchmark will be useful to quickly evaluate novel language modeling techniques, and to compare their contribution when combined with other advanced techniques. We show performance of several well-known types of language models, with the best results achieved with a recurrent neural network based language model. The baseline unpruned Kneser-Ney 5-gram model achieves perplexity 67.6; a combination of techniques leads to 35% reduction in perplexity, or 10% reduction in cross-entropy (bits), over that baseline.
The benchmark is available as a this http URL project; besides the scripts needed to rebuild the training/held-out data, it also makes available log-probability values for each word in each of ten held-out data sets, for each of the baseline n-gram models. ",,,,Speculative,2025-03-04 15:19:10+00:00,United States of America,,,,,,,,,
DBLSTM,Speech,University of Toronto,Academia,"A Graves, N Jaitly, A Mohamed",2013-12-08,Hybrid speech recognition with Deep Bidirectional LSTM,https://ieeexplore.ieee.org/document/6707742,1597.0,Highly cited,,29900000.0,"""The DBLSTM network had five bidirectional hidden levels, with 500 LSTM cells in each of the forward and backward
layers, and a size 3385 softmax output layer, giving a total of
29.9M weights.""",,,,,,,,,,,,,,,,,,,,2024-11-01 14:03:15+00:00,Canada,,,,,,,,,
TransE,Language,"Universite de Technologie de Compiègne – CNRS,Google","Academia,Industry","Antoine Bordes, Nicolas Usunier, Alberto Garcia- Duran, Jason Weston, and Oksana Yakhnenko",2013-12-05,Translating Embeddings for Modeling Multi- relational Data,https://papers.nips.cc/paper/2013/hash/1cecc7a77928ca8133fa24680a88d2f9-Abstract.html,7039.0,Highly cited,,942000000.0,"Based on the TransE architecture, the authors give a formula for how the model size scales with the dimensionality of the dataset. The model scale is proportional to: k*(n_e+n_r) where k is the embeddings dimension, n_e is the number of entities, and n_r is the number of relationships.

They studied using the TransE model for two datasets: FB15k and FB1M. The FB15k model has 810000 parameters.

FB15k has 14951 entities and 1345 relationships. FB1M has 1000000 entities and 23382 relationships. Therefore, the FB1M model will be bigger than the FB15k model by a factor of (23382e6)/(14951*1345) => N = 8.1e5 * (23382e6)/(14951*1345) = 942e6.",1.340928e+18,,,"8 GPUs (they don't specify which, so I used the average for FP32 for 2017 from the write-up table)
8 hours 
0.33 util rate",,,17000000.0,"""it can be successfully trained on a large scale data set with 1M
entities, 25k relationships and more than 17M training samples""",,,,,,,,,,,Speculative,2025-02-17 19:09:43+00:00,"France,United States of America",,,,,,,,,
DeViSE,Vision,Google,Industry,"Andrea Frome, G. Corrado, Jonathon Shlens, Samy Bengio, J. Dean, Marc'Aurelio Ranzato, Tomas Mikolov",2013-12-05,DeViSE: A Deep Visual-Semantic Embedding Model,https://www.semanticscholar.org/paper/DeViSE%3A-A-Deep-Visual-Semantic-Embedding-Model-Frome-Corrado/4aa4069693bee00d1b0759ca3df35e59284e9845,,"Highly cited,SOTA improvement",,,,,,,,,,5400000000.0,"""We trained a skip-gram text model on a corpus of 5.7 million documents (5.4 billion words) """,,,,,,,"Modern visual recognition systems are often limited in their ability to scale to large numbers of object categories. This limitation is in part due to the increasing difficulty of acquiring sufficient training data in the form of labeled images as the number of object categories grows. One remedy is to leverage data from other sources - such as text data - both to train visual models and to constrain their predictions. In this paper we present a new deep visual-semantic embedding model trained to identify visual objects using both labeled image data as well as semantic information gleaned from unannotated text. We demonstrate that this model matches state-of-the-art performance on the 1000-class ImageNet object recognition challenge while making more semantically reasonable errors, and also show that the semantic information can be exploited to make predictions about tens of thousands of image labels not observed during training. Semantic knowledge improves such zero-shot predictions achieving hit rates of up to 18% across thousands of novel labels never seen by the visual model.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
TensorReasoner,Language,Stanford University,Academia,"R Socher, D Chen, CD Manning, A Ng",2013-12-01,Reasoning With Neural Tensor Networks for Knowledge Base Completion,https://papers.nips.cc/paper/2013/hash/b337e84de8752b27eda3a12363109e80-Abstract.html,1923.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:15+00:00,United States of America,,,,,,,,,
Visualizing CNNs,Vision,New York University (NYU),Academia,"MD Zeiler, R Fergus",2013-11-12,Visualizing and Understanding Convolutional Networks,https://arxiv.org/abs/1311.2901,15232.0,Highly cited,,,,5.32e+17,,,"1 GPU * 12 days * 1.54 TFLOPS/GTX 580 * 0.33 utilization 
= 532 PF = 0.0062 pfs-days

Source: https://openai.com/blog/ai-and-compute",,,,,,,,NVIDIA GeForce GTX 580,,,,,,,,2025-02-17 19:09:33+00:00,United States of America,,,,,,,,,
R-CNN (T-net),Vision,University of California (UC) Berkeley,Academia,"Ross Girshick, Jeff Donahue, Trevor Darrell, Jitendra Malik",2013-11-11,Rich feature hierarchies for accurate object detection and semantic segmentation,https://arxiv.org/abs/1311.2524,24626.0,Highly cited,,69003872.0,"Computed from architecture description in Caffee

https://nbviewer.jupyter.org/github/BVLC/caffe/blob/master/examples/detection.ipynb",,,,,,,,,,,,,,,,,,,,2024-11-01 14:03:14+00:00,United States of America,,,,,,,,,
Word2Vec (small),Language,Google,Industry,"T Mikolov, I Sutskever, K Chen, GS Corrado",2013-10-16,Distributed Representations of Words and Phrases and their Compositionality,https://arxiv.org/abs/1310.4546,32374.0,Highly cited,,207600000.0,"""We discarded from the vocabulary all words that occurred less than 5 times in the training data, which resulted in a vocabulary of size 692K [...] Starting with the same news data as in the previous experiments, we first constructed the phrase based training corpus and then we trained several Skip-gram models using different hyperparameters. As before, we used vector dimensionality 300 and context size 5.""",,,,,,,692000.0,"""For training the Skip-gram models, we have used a large dataset consisting of various news articles (an internal Google dataset with one billion words). We discarded from the vocabulary all words that occurred less than 5 times in the training data, which resulted in a vocabulary of size 692K""",,,,,,,,,,,,2024-11-01 14:03:32+00:00,United States of America,,,,,,,,,
Word2Vec (large),Language,Google,Industry,"T Mikolov, I Sutskever, K Chen, GS Corrado",2013-10-16,Distributed Representations of Words and Phrases and their Compositionality,https://arxiv.org/abs/1310.4546,32374.0,Highly cited,,692000000.0,"""To maximize the accuracy on the phrase analogy task, we increased the amount of the training data by using a dataset with about 33 billion words. We used the hierarchical softmax, dimensionality of 1000, and the entire sentence for the context.""",3.888e+16,,,"From https://openai.com/blog/ai-and-compute/ Appendix.

""less than 0.00045 pfs days""
(86400*10^15*0.00045)",,,33000000000.0,"""For training the Skip-gram models, we have used a large dataset consisting of various news articles (an internal Google dataset with one billion words). We discarded from the vocabulary all words that occurred less than 5 times in the training data, which resulted in a vocabulary of size 692K""",,24.0,"Table 5 appears to call the model ""Skip-Phrase"" and says it took 1 day",,,,,,,,,2025-02-17 19:09:08+00:00,United States of America,,,,,,,,,
RNTN,Language,Stanford University,Academia,"R. Socher, Alex Perelygin, Jean Wu, Jason Chuang, Christopher D. Manning, A. Ng, Christopher Potts",2013-10-01,Recursive Deep Models for Semantic Compositionality Over a Sentiment Treebank,https://www.semanticscholar.org/paper/Recursive-Deep-Models-for-Semantic-Compositionality-Socher-Perelygin/687bac2d3320083eb4530bf18bb8f8f721477600,,Highly cited,,,,1.422e+16,,,"""The RNTN would usually achieve its best performance on the dev set after training for 3 - 5 hours.""
",,"""we introduce a Sentiment Treebank. It includes fine grained sentiment labels for 215,154 phrases in the parse trees of 11,855 sentences""
Average FP32 FLOPS for 2013: 1.58E+12 (https://epoch.ai/blog/estimating-training-compute)
Assuming utilization of 0.5
Compute estimate: 0.5 * 5*60*60 * 1.58e12=1.422e16=14220000000000000
",155063.0,"""The sentences in the treebank were split into a train (8544), dev (1101) and test splits (2210)""
Training data: 215154*(8544/11855)=155063
",,5.0,The RNTN would usually achieve its best performance on the dev set after training for 3 - 5 hours.,,,,"Semantic word spaces have been very useful but cannot express the meaning of longer phrases in a principled way. Further progress towards understanding compositionality in tasks such as sentiment detection requires richer supervised training and evaluation resources and more powerful models of composition. To remedy this, we introduce a Sentiment Treebank. It includes fine grained sentiment labels for 215,154 phrases in the parse trees of 11,855 sentences and presents new challenges for sentiment compositionality. To address them, we introduce the Recursive Neural Tensor Network. When trained on the new treebank, this model outperforms all previous methods on several metrics. It pushes the state of the art in single sentence positive/negative classification from 80% up to 85.4%. The accuracy of predicting fine-grained sentiment labels for all phrases reaches 80.7%, an improvement of 9.7% over bag of features baselines. Lastly, it is the only model that can accurately capture the effects of negation and its scope at various tree levels for both positive and negative phrases.",,Unreleased,,Likely,2024-12-10 15:52:28+00:00,United States of America,,,,,,,,,
RCTM,Language,University of Oxford,Academia,"Nal Kalchbrenner, Phil Blunsom",2013-10-01,Recurrent Continuous Translation Models,https://www.semanticscholar.org/paper/Recurrent-Continuous-Translation-Models-Kalchbrenner-Blunsom/944a1cfd79dbfb6fef460360a0765ba790f4027a,,Highly cited,,,,9331200000000000.0,,,"""The training of an RCTM takes about 15 hours on 3 multicore CPUs""
Given the publication year, a rough estimate for the CPU performance is 16 FP32 per cycle, 4 cores, clock speed 4GHz, utilization of 0.3.
15*60*60*3*4*12*4000000000*0.3=9331200000000000=9.33e15",,"""The training set used for all the experiments comprises a bilingual corpus of 144953 pairs of sentences less than 80 words in length from the news
commentary section of the Eighth Workshop on Machine Translation (WMT) 2013 training data.""",4100000.0,"""The English sentences contain about 4.1M words""",,15.0,The training of an RCTM takes about 15 hours on 3 multicore CPUs.,,3.0,,"We introduce a class of probabilistic continuous translation models called Recurrent Continuous Translation Models that are purely based on continuous representations for words, phrases and sentences and do not rely on alignments or phrasal translation units. The models have a generation and a conditioning aspect. The generation of the translation is modelled with a target Recurrent Language Model, whereas the conditioning on the source sentence is modelled with a Convolutional Sentence Model. Through various experiments, we show first that our models obtain a perplexity with respect to gold translations that is > 43% lower than that of stateof-the-art alignment-based translation models. Secondly, we show that they are remarkably sensitive to the word order, syntax, and meaning of the source sentence despite lacking alignments. Finally we show that they match a state-of-the-art system when rescoring n-best lists of translations.",,,,Likely,2025-02-17 19:08:46+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Mitosis,"Vision,Medicine",IDSIA,Academia,"Dan C. Cireşan, Alessandro Giusti, Luca M. Gambardella, Jürgen Schmidhuber",2013-09-22,Mitosis Detection in Breast Cancer Histology Images with Deep Neural Networks,https://link.springer.com/chapter/10.1007/978-3-642-40763-5_51,1478.0,Highly cited,ICPR 2012 mitosis detection competition winner,37230.0,Sum numbers of weights in Table 1.b,1.37e+17,,,"""Training each network requires one day of computation with an optimized GPU implementation""

Assuming 1.58E+12 FLOP/second on FP32 (from the table in the Estimating compute post), we get

3600*24*1.58E+12 = 1.37E+17 FLOP",,,1000000.0,"The dataset is built in two stages. First a classifier is trained on small sample, and used to curate a more representative larger dataset.

The final dataset has 1M instances

""We build the actual training set, composed by 1 million instances, which includes
all mitosis pixels (6.6% of the training instances). The remaining 95.4% is sampled
from non-mitosis pixels by assigning to each pixel p a weight D(p).""",,24.0,"""Training each network requires one day of computation with an optimized GPU implementation""",,,,,,,,,2025-02-17 19:08:37+00:00,Switzerland,,,,,,,,,
RNN+weight noise+dynamic eval,Language,University of Toronto,Academia,Alex Graves,2013-08-04,Generating Sequences With Recurrent Neural Networks,https://arxiv.org/abs/1308.0850,4734.0,Highly cited,,54000000.0,,4210000000000000.0,,,,IAM Online Handwriting Database (IAM-OnDB),,,,14.0,,,,,,"This paper shows how Long Short-term Memory recurrent neural networks can be used to generate complex sequences with long-range structure, simply by predicting one data point at a time. The approach is demonstrated for text (where the data are discrete) and online handwriting (where the data are real-valued). It is then extended to handwriting synthesis by allowing the network to condition its predictions on a text sequence. The resulting system is able to generate highly realistic cursive handwriting in a wide variety of styles.",RNN+weight noise+dynamic eval,Unreleased,,,2024-09-15 20:29:13+00:00,Canada,,,,,,,,,
Hierarchical Scene Labeling,Vision,New York University (NYU),Academia,Clement Farabet; Camille Couprie; Laurent Najman; Yann LeCun,2013-08-01,Learning Hierarchical Features for Scene Labeling,https://ieeexplore.ieee.org/document/6338939,,"Highly cited,Historical significance",,51609600.0,"Figure 1 details architecture, weights are shared between scales
“The network is then applied to each 3-dimension input map Xs. This input is transformed into a 16-dimension feature map, using a bank of 16 filters, 10 connected to the Y channel, the 6 others connected to the U and V channels. The second layer transforms this 16-dimension feature map into a 64-dimension feature map, each map being produced by a combination of 8 randomly selected feature maps from the previous layer. Finally the 64-dimension feature map is transformed into a 256-dimension feature map, each map being produced by a combination of 32 randomly selected feature maps from the previous layer.”
L1: 1*7*7*10+2*7*7*6=1078
L2: 8*64*7*7=25088
FC head is split for the three networks (assumption)
FC: 32*80*60*256+32*40*30*256+32*20*15*256=51609600

This is a very different estimate to the 0.5M trainable parameters mentioned in the paper(!) ""The convolutional network has roughly 0.5 million trainable parameters""",2.3774688e+17,,,"Forward FLOP
Split for the three sizes
F1:
L1: 2*1*7*7*10*320*240+2*2*7*7*6*320*240=165580800
L2: 2*8*64*7*7*160*120=963379200
FC: 2*32*80*60*256=78643200
F2:
L1: 2*1*7*7*10*160*120+2*2*7*7*6*160*120=41395200
L2: 2*8*64*7*7*80*60=240844800
FC: 2*32*40*30*256=19660800
F3:
L1: 2*1*7*7*10*80*60+2*2*7*7*6*80*60=10348800
L2: 2*8*64*7*7*40*30=60211200
FC: 2*32*20*15*256=4915200
Total: 165580800+963379200+78643200+41395200+240844800+19660800+10348800+60211200+4915200=1584979200

Training compute: 1584979200*3*50000000=237746880000000000=2.4e17
",,"Identical models were trained on three datasets: Sift Flow Dataset (33 classes), the Barcelona Dataset (170 classes) and the Stanford Background Dataset (8 classes),",,,,,,,1.0,Supervised,"Scene labeling consists of labeling each pixel in an image with the category of the object it belongs to. We propose a method that uses a multiscale convolutional network trained from raw pixels to extract dense feature vectors that encode regions of multiple sizes centered on each pixel. The method alleviates the need for engineered features, and produces a powerful representation that captures texture, shape, and contextual information. We report results using multiple postprocessing methods to produce the final labeling. Among those, we propose a technique to automatically retrieve, from a pool of segmentation components, an optimal set of components that best explain the scene; these components are arbitrary, for example, they can be taken from a segmentation tree or from any family of oversegmentations. The system yields record accuracies on the SIFT Flow dataset (33 classes) and the Barcelona dataset (170 classes) and near-record accuracy on Stanford background dataset (eight classes), while being an order of magnitude faster than competing approaches, producing a 320×240 image labeling in less than a second, including feature extraction.",,Unreleased,,Unverified,2025-02-17 19:08:30+00:00,United States of America,,,,,,,,,
Fisher Vector image classifier,Vision,"Universidad Nacional de Cordoba,Inteligent Systems Lab Amsterdam,University of Amsterdam,LEAR Team,INRIA,Xerox Research Centre Europe (XRCE)","Academia,Academia,Academia,Academia,Industry","orge Sanchez, Florent Perronnin, Thomas Mensink, Jakob Verbeek",2013-06-12,Image Classification with the Fisher Vector: Theory and Practice,https://hal.inria.fr/hal-00830491v2/document,1707.0,Highly cited,,,,90842400000000.0,,,"They use a Intel Xeon E5-2470 Processor for 2 hours. This can do 12,617 MOps/Sec 
https://www.cpubenchmark.net/cpu.php?cpu=Intel+Xeon+E5-2470+%40+2.30GHz&id=2003",ImageNet,,,,,2.0,,,,,,,,,,2025-02-17 19:07:51+00:00,"Argentina,Netherlands,Netherlands,France,France,France",,,,,,,,,
SemVec,Language,Microsoft Research,Industry,"T Mikolov, W Yih, G Zweig",2013-06-09,Linguistic Regularities in Continuous Space Word Representations,https://www.aclweb.org/anthology/N13-1090/,3625.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-15 20:33:47+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Multilingual DNN,Speech,Google,Industry,"G. Heigold, Vincent Vanhoucke, A. Senior, Patrick Nguyen, Marc'Aurelio Ranzato, M. Devin, J. Dean",2013-05-26,Multilingual acoustic models using distributed deep neural networks,https://www.semanticscholar.org/paper/Multilingual-acoustic-models-using-distributed-deep-Heigold-Vanhoucke/a41b826d23957d6ad4e9e794d20a583a9b567c5d,,"SOTA improvement,Training cost",,206899200.0,"""The input for the DNN is eleven contiguous frames of 40-dimensional log-filterbank features. The DNN consists of four hidden layers each with 2560 nodes""
Network structure: 3 multilingual shared layers, 1 language specific hidden layer + output layer (Figure 2)
Language specific layer output sizes: 1600, 3300, 2900, 5700, 3500, 5500, 6200, 4700, 5100, 4900, 3700 (Table 1)
Shared: 11*40*2560+2560*2560+2560*2560=14233600
Language heads: 11*2560*2560+2560*1600+2560*3300+2560*2900+2560*5700+2560*3500+2560*5500+2560*6200+2560*4700+2560*5100+2560*4900+2560*3700=192665600
Total: 14233600+192665600=206899200=2e8",,,,Could be estimated if we knew framerate of input filterbanks.,,,77580000.0,"Trained on 80+100+220+270+920+1140+1450+1460+1490+1490=8620h of speech data (Table 1)
Conversion to words using an estimate of 150 wpm: 8620*60*150=77580000 words
",,672.0,"""increased training time of roughly four weeks""
4*7*24=672 hours of training",,,Supervised,"Today's speech recognition technology is mature enough to be useful for many practical applications. In this context, it is of paramount importance to train accurate acoustic models for many languages within given resource constraints such as data, processing power, and time. Multilingual training has the potential to solve the data issue and close the performance gap between resource-rich and resource-scarce languages. Neural networks lend themselves naturally to parameter sharing across languages, and distributed implementations have made it feasible to train large networks. In this paper, we present experimental results for cross- and multi-lingual network training of eleven Romance languages on 10k hours of data in total. The average relative gains over the monolingual baselines are 4%/2% (data-scarce/data-rich languages) for cross- and 7%/2% for multi-lingual training. However, the additional gain from jointly training the languages on all data comes at an increased training time of roughly four weeks, compared to two weeks (monolingual) and one week (crosslingual).",,,,Confident,2024-09-24 00:50:15+00:00,United States of America,,,,,,,,,
ReLU-Speech,Speech,"Google,University of Toronto,New York University (NYU)","Industry,Academia,Academia","Matthew D. Zeiler, Marc'Aurelio Ranzato, R. Monga, Mark Z. Mao, K. Yang, Quoc V. Le, Patrick Nguyen, A. Senior, Vincent Vanhoucke, J. Dean, Geoffrey E. Hinton",2013-05-26,On rectified linear units for speech processing,https://www.semanticscholar.org/paper/On-rectified-linear-units-for-speech-processing-Zeiler-Ranzato/64da1980714cfc130632c5b92b9d98c2f6763de6,,"Training cost,SOTA improvement",,101706240.0,"""The overall input dimensionality is 1040,""
""All layers of our networks have 2560 hidden units ""
""used to generate 7969 context-dependent tied acoustic states""
Largest model: 12 hidden layers (Fig 4)
Parameters: 1040*2560+12*2560*2560+2560*7969=101706240
",1.2773376e+17,,,"""across 4 machines using up to 4 CPUs each""
CPU model not specified, I assumed a Sandy Bridge with 16 FLOP/cycle and 3.3GhZ based on the publication year (4*16*3300000000=211200000000 FLOP/s per machine)
Compute: 4*211200000000*168*60*60*0.3 = 1.53e17

Alternatively, the training set is ""several hundred hours of speech"", with inputs consisting of 26 frames, each frame is 10ms apart.
If we assume 400h of training data, 400h/10ms/26= 5,538,461 inputs
6 * 101706240 * 5,538,461 = 3.38e15 FLOPs per epoch. Number of epochs unstated.",,Several hundred hours of speech,,,,168.0,"""The results we report are obtained by training for one week.""",,,,"Deep neural networks have recently become the gold standard for acoustic modeling in speech recognition systems. The key computational unit of a deep network is a linear projection followed by a point-wise non-linearity, which is typically a logistic function. In this work, we show that we can improve generalization and make training of deep networks faster and simpler by substituting the logistic units with rectified linear units. These units are linear when their input is positive and zero otherwise. In a supervised setting, we can successfully train very deep nets from random initialization on a large vocabulary speech recognition task achieving lower word error rates than using a logistic network with the same topology. Similarly in an unsupervised setting, we show how we can learn sparse features that can be useful for discriminative tasks. All our experiments are executed in a distributed environment using several hundred machines and several hundred hours of speech data.",,,,Likely,2025-02-17 19:07:40+00:00,"United States of America,Canada,United States of America",,,,,,,,,
Selective Search,Vision,"University of Trento,University of Amsterdam","Academia,Academia","JRR Uijlings, KEA Van De Sande, T Gevers",2013-04-02,Selective search for object recognition,https://link.springer.com/article/10.1007/s11263-013-0620-5,5642.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"Italy,Netherlands",,,,,,,,,
PreTrans-3L-250H,Speech,University of Toronto,Academia,"Alex Graves, Abdel-rahman Mohamed, Geoffrey Hinton",2013-03-22,Speech Recognition with Deep Recurrent Neural Networks,https://arxiv.org/abs/1303.5778,8259.0,Highly cited,,43000000.0,Table 1,,,,,,,,,,,,,,,,,,,,2024-11-01 14:03:33+00:00,Canada,,,,,,,,,
Maxout Networks,Vision,University of Montreal / Université de Montréal,Academia," Ian J. Goodfellow, David Warde-Farley, Mehdi Mirza, Aaron Courville, Yoshua Bengio",2013-02-18,Maxout Networks ,https://arxiv.org/abs/1302.4389,2576.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,Canada,,,,,,,,,
Textual Imager,Vision,Stanford University,Academia,"R Socher, M Ganjoo, H Sridhar, O Bastani",2013-01-16,Zero-Shot Learning Through Cross-Modal Transfer,https://arxiv.org/abs/1301.3666,1422.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:32+00:00,United States of America,,,,,,,,,
DistBelief NNLM,Language,Google,Industry,"Tomas Mikolov, Kai Chen, G. Corrado, J. Dean",2013-01-16,Efficient Estimation of Word Representations in Vector Space,https://arxiv.org/abs/1301.3781,41000.0,"Highly cited,SOTA improvement",,,,2.612736e+18,,,"Trained for 14 days on 180 CPU cores (Table 6)
Roughly estimating the performance of CPUs in a HPC around 2013: 16 FP32 operations per cycle, 2.5GHz, 0.3 utilization
Time: 14*24*60*60=1209600s
FLOPs: 0.3*180*16*2500000000=2160000000000
Training compute: 1209600s * 2160000000000 = 2612736000000000000 = 2.61e18
https://www.wolframalpha.com/input?i=16+FLOP+*+2.5+GHz+*+180+*+14+days+*+0.3",,,6000000000.0,Largest system is trained on 6B words (Table 6),,336.0,Trained for 14 days (Table 6),,180.0,,"We propose two novel model architectures for computing continuous vector representations of words from very large data sets. The quality of these representations is measured in a word similarity task, and the results are compared to the previously best performing techniques based on different types of neural networks. We observe large improvements in accuracy at much lower computational cost, i.e. it takes less than a day to learn high quality word vectors from a 1.6 billion words data set. Furthermore, we show that these vectors provide state-of-the-art performance on our test set for measuring syntactic and semantic word similarities.",,,,Likely,2025-02-17 19:07:22+00:00,United States of America,,,,,,,,,
RNN (SGD+CLR),Audio,University of Montreal / Université de Montréal,Academia,"Yoshua Bengio, Nicolas Boulanger-Lewandowski and Razvan Pascanu",2012-12-14,Advances in Optimizing Recurrent Networks,https://arxiv.org/abs/1212.0901,647.0,,,195600.0,"It uses 400 hidden units (selected via hyperparameter tuning)
The input size is 88 (corresponding to the 88 piano pitches)
It uses rectified linear units, so no activation function parameters
So the number of parameters would be:
Input to hidden weights: 88 * 400 = 35,200
Hidden to hidden weights: 400 * 400 = 160,000
Biases: 400
Total: ~195,600 parameters
Above estimate is by Claude 2. Should be checked manually.",,,,,,"""We evaluate our models on the four polyphonic music datasets of varying complexity used in [25]: classical piano music (Pianomidi.de), folk tunes with chords instantiated from ABC notation (Nottingham), orchestral music (MuseData) and the four-part chorales by J.S. Bach (JSB chorales)""",,,,,,,,,"After a more than decade-long period of relatively little research activity in the area of recurrent neural networks, several new developments will be reviewed here that have allowed substantial progress both in understanding and in technical solutions towards more efficient training of recurrent networks. These advances have been motivated by and related to the optimization issues surrounding deep learning. Although recurrent networks are extremely powerful in what they can in principle represent in terms of modeling sequences, their training is plagued by two aspects of the same issue regarding the learning of long-term dependencies. Experiments reported here evaluate the use of clipping gradients, spanning longer time ranges
with leaky integration, advanced momentum techniques, using more powerful output probability models, and encouraging sparser gradients to help symmetry breaking and credit assignment. The experiments are performed on text and music data and show off the combined effects of these techniques in generally improving both training and test error",,,,Speculative,2024-09-15 20:44:10+00:00,Canada,,,,,,,,,
RNN (SGD+CLR) (PTB),Language,University of Montreal / Université de Montréal,Academia,"Yoshua Bengio, Nicolas Boulanger-Lewandowski, Razvan Pascanu",2012-12-04,Advances in Optimizing Recurrent Networks,https://arxiv.org/abs/1212.0901,665.0,,,2050000.0,,,,,,,,,,,,,,,,,RNN (SGD+CLR) (PTB),Unreleased,,,2024-09-15 20:40:50+00:00,Canada,,,,,,,,,
DistBelief Speech,Speech,Google,Industry,"J. Dean, G. Corrado, R. Monga, Kai Chen, M. Devin, Quoc V. Le, Mark Z. Mao, Marc'Aurelio Ranzato, A. Senior, P. Tucker, Ke Yang, A. Ng",2012-12-03,Large Scale Distributed Deep Networks,https://www.semanticscholar.org/paper/Large-Scale-Distributed-Deep-Networks-Dean-Corrado/3127190433230b3dc1abd0680bb58dced4bcd90e,,"Highly cited,SOTA improvement",,47185920.0,"""We used a deep network with five layers: four hidden layer with sigmoidal activations and 2560 nodes each, and a softmax output layer with 8192 nodes.""
""The network was fully-connected layer-to-layer, for a total of approximately 42 million model parameters.""
2560*2560*4+2560*8192=47185920",3.114e+17,,,"https://www.wolframalpha.com/input?i=6+FLOP+*+47185920+*+1.1+billion
Number of epochs unknown but most likely 1 and probably under 30.
We could narrow down the uncertainty further if we knew something about the hardware.",,,1100000000.0,"""We trained on a data set of 1.1 billion weakly labeled examples""",,120.0,Figure 4,,,,"Recent work in unsupervised feature learning and deep learning has shown that being able to train large models can dramatically improve performance. In this paper, we consider the problem of training a deep network with billions of parameters using tens of thousands of CPU cores. We have developed a software framework called DistBelief that can utilize computing clusters with thousands of machines to train large models. Within this framework, we have developed two algorithms for large-scale distributed training: (i) Downpour SGD, an asynchronous stochastic gradient descent procedure supporting a large number of model replicas, and (ii) Sandblaster, a framework that supports a variety of distributed batch optimization procedures, including a distributed implementation of L-BFGS. Downpour SGD and Sandblaster L-BFGS both increase the scale and speed of deep network training. We have successfully used our system to train a deep network 30x larger than previously reported in the literature, and achieves state-of-the-art performance on ImageNet, a visual object recognition task with 16 million images and 21k categories. We show that these same techniques dramatically accelerate the training of a more modestly- sized deep network for a commercial speech recognition service. Although we focus on and report performance of these methods as applied to training large neural networks, the underlying algorithms are applicable to any gradient-based machine learning algorithm.",,,,Speculative,2025-02-17 19:07:08+00:00,United States of America,,,,,,,,,
DistBelief Vision,Vision,Google,Industry,"J. Dean, G. Corrado, R. Monga, Kai Chen, M. Devin, Quoc V. Le, Mark Z. Mao, Marc'Aurelio Ranzato, A. Senior, P. Tucker, Ke Yang, A. Ng",2012-12-03,Large Scale Distributed Deep Networks,https://www.semanticscholar.org/paper/Large-Scale-Distributed-Deep-Networks-Dean-Corrado/3127190433230b3dc1abd0680bb58dced4bcd90e,,"SOTA improvement,Highly cited",,1700000000.0,"""we used Downpour SGD to train the 1.7 billion parameter image model""",,,,,ImageNet,,16000000.0,For visual object recognition we trained a larger neural network with locally-connected receptive fields on the ImageNet data set of 16 million images,,,,,,,"Recent work in unsupervised feature learning and deep learning has shown that being able to train large models can dramatically improve performance. In this paper, we consider the problem of training a deep network with billions of parameters using tens of thousands of CPU cores. We have developed a software framework called DistBelief that can utilize computing clusters with thousands of machines to train large models. Within this framework, we have developed two algorithms for large-scale distributed training: (i) Downpour SGD, an asynchronous stochastic gradient descent procedure supporting a large number of model replicas, and (ii) Sandblaster, a framework that supports a variety of distributed batch optimization procedures, including a distributed implementation of L-BFGS. Downpour SGD and Sandblaster L-BFGS both increase the scale and speed of deep network training. We have successfully used our system to train a deep network 30x larger than previously reported in the literature, and achieves state-of-the-art performance on ImageNet, a visual object recognition task with 16 million images and 21k categories. We show that these same techniques dramatically accelerate the training of a more modestly- sized deep network for a commercial speech recognition service. Although we focus on and report performance of these methods as applied to training large neural networks, the underlying algorithms are applicable to any gradient-based machine learning algorithm.",,,,Likely,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
DNN EM segmentation,Vision,IDSIA,Academia,"D. Ciresan, A. Giusti, L. Gambardella, J. Schmidhuber",2012-12-03,Deep Neural Networks Segment Neuronal Membranes in Electron Microscopy Images,https://www.semanticscholar.org/paper/Deep-Neural-Networks-Segment-Neuronal-Membranes-in-Ciresan-Giusti/09193e19b59fc8f05bee9d6efbfb1607ca5b6501,,"Historical significance,Highly cited",,218896.0,"Table 1 shows architecture
1st layer CNN: 48*4*4=768
2nd layer CNN: 48*48*5*5=57600
3rd layer CNN: 48*48*4*4=36864
4th layer CNN: 48*48*4*4=36864
1st layer FC: 48*3*3*200=86400
2nd layer FC: 200*2=400
Total parameters: 768+57600+36864+36864+86400+400=218896
",4.78e+17,,,"""This amounts to 3 million training examples in total, in which both classes are equally represented. [...] We take advantage of this property, and synthetically augment the training set at the beginning of each epoch by randomly mirroring each training instance, and/or rotating it by ±90◦""
Assuming 3 x training examples per epoch due to data augmentation

Counting estimate:
1st layer CNN: 2*92*92*48*4*4=13000704
2nd layer CNN: 2*42*42*48*48*5*5=203212800
3rd layer CNN: 2*18*18*48*48*4*4=23887872
4th layer CNN: 2*6*6*4*4*48*48=2654208
1st layer FC: 2*48*3*3*200=172800
2nd layer FC: 2*200*2=800
Total forward flop: 13000704+203212800+23887872+2654208+172800+800=242929184
Training compute: 242929184*3*9000000*30=196772639040000000=1.9e17

GPU hour estimate
340 minutes per epoch, 30 epochs
4 GTX 580 with 1580000000000 FLOPs
Assumed utilization of 0.3
30*340*60*1580000000000*4*0.3=1160352000000000000=1.16e18

Geometric mean: sqrt(196772639040000000*1160352000000000000)=4.78e17
",,ISBI 2012 EM Segmentation Challenge,3000000.0,,30.0,17.0,"Training time for one epoch varies from approximately 170 minutes for N1 (w = 65) to 340 minutes for N4 (w = 95). All nets are trained for 30 epochs, which leads to a total training time of several days.",NVIDIA GeForce GTX 580,4.0,Supervised,"We address a central problem of neuroanatomy, namely, the automatic segmentation of neuronal structures depicted in stacks of electron microscopy (EM) images. This is necessary to efficiently map 3D brain structure and connectivity. To segment biological neuron membranes, we use a special type of deep artificial neural network as a pixel classifier. The label of each pixel (membrane or non-membrane) is predicted from raw pixel values in a square window centered on it. The input layer maps each window pixel to a neuron. It is followed by a succession of convolutional and max-pooling layers which preserve 2D information and extract features with increasing levels of abstraction. The output layer produces a calibrated probability for each class. The classifier is trained by plain gradient descent on a 512 × 512 × 30 stack with known ground truth, and tested on a stack of the same size (ground truth unknown to the authors) by the organizers of the ISBI 2012 EM Segmentation Challenge. Even without problem-specific postprocessing, our approach outperforms competing techniques by a large margin in all three considered metrics, i.e. rand error, warping error and pixel error. For pixel error, our approach is the only one outperforming a second human observer.",,Unreleased,,Unverified,2025-02-17 19:06:56+00:00,Switzerland,,,,,,,,,
Bayesian automated hyperparameter tuning,Other,"University of Toronto,University of Sherbrooke,Harvard University","Academia,Academia,Academia","J Snoek, H Larochelle, RP Adams",2012-12-02,Practical Bayesian optimization of machine learning algorithms,https://arxiv.org/abs/1206.2944,7308.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:32+00:00,"Canada,Canada,United States of America",,,,,,,,,
RNN+LDA+KN5+cache,Language,"Microsoft,Brno University of Technology","Industry,Academia","Tomas Mikolov, Geoffrey Zweig",2012-12-01,Context dependent recurrent neural network language model,https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/rnn_ctxt.pdf,716.0,SOTA improvement,"""We report perplexity results on the Penn Treebank data, where we achieve a new state-of-the-art""",9000000.0,,,,,,Penn TreeBank,,,,,,,,,,,RNN+LDA+KN5+cache,Unreleased,,,2024-09-15 20:49:24+00:00,"United States of America,Czechia",,,,,,,,,
AlexNet,Vision,University of Toronto,Academia,"Alex Krizhevsky, Ilya Sutskever, Geoffrey Hinton",2012-09-30,ImageNet Classification with Deep Convolutional Neural Networks,https://proceedings.neurips.cc/paper/2012/hash/c399862d3b9d6b76c8436e924a68c45b-Abstract.html,113243.0,"Highly cited,Historical significance",,60000000.0,"""Our neural network architecture has 60 million parameters.""",4.7e+17,,,"1.2M images * 90 epochs * 0.75 GFLOP * (2 add-multiply) * (3 backward pass) 
= 470 PF = 0.0054 pfs-days

Source: https://openai.com/blog/ai-and-compute/",ImageNet,,1200000.0,"""ImageNet is a dataset of over 15 million labeled high-resolution images belonging to roughly 22,000 categories. The images were collected from the web and labeled by human labelers using Amazon’s Mechanical Turk crowd-sourcing tool. Starting in 2010, as part of the Pascal Visual Object Challenge, an annual competition called the ImageNet Large-Scale Visual Recognition Challenge (ILSVRC) has been held. ILSVRC uses a subset of ImageNet with roughly 1000 images in each of 1000 categories. In all, there are roughly 1.2 million training images, 50,000 validation images, and 150,000 testing images.""",,132.0,"""Our network takes between five and six days to train on two GTX 580 3GB GPUs.""",NVIDIA GeForce GTX 580,,,,,,,,2025-02-13 20:36:06+00:00,Canada,,,,,,,,,
LSTM LM,Language,RWTH Aachen University,Academia,"M. Sundermeyer, R. Schlüter, H. Ney",2012-09-09,LSTM Neural Networks for Language Modeling,https://www.semanticscholar.org/paper/LSTM-Neural-Networks-for-Language-Modeling-Sundermeyer-Schl%C3%BCter/f9a1b3850dfd837793743565a8af95973d395a4e,,Highly cited,,102720000.0,"Multiple models were trained, the largest on transcribed French podcast data.
""We trained an LSTM LM using 300 hidden nodes and 27 M running words of indomain training data""
""Corpus sizes in number of running words; the vocabulary size of the Treebank corpus is 10 K, for Quaero French it is 170 K""
Embedding and unembedding: 2*170000*300=102000000
LSTM: 4*600*300=720000
Total: 102000000+720000=102720000=1.03e8
(Assuming the embedding dimension is the same as the LSTM layer)",1.66e+16,,,"FLOP per input for LSTM layer is 4*2*(M+N)*M, for N inputs and M outputs.

Embedding FLOPs: 2 * 170000 * 300 = 102,000,000
LSTM FLOPs: 4 * 2 * (300 + 300) * 300 = 1,440,000
Unembedding FLOPs: 2 * 170000 * 300 = 102,000,000
Total: 205,440,000 FLOPs per word per forward pass
For 27M training input words and including backward passes: 27M * 3 * 205,440,000 = 1.66e16

However, it sounds like they're doing something with a secondary acoustic model, so this may be an underestimate.",,,27000000.0,"""We trained an LSTM LM using 300 hidden nodes and 27 M running words of indomain training data.""",,,,,,,"Neural networks have become increasingly popular for the task of language modeling. Whereas feed-forward networks only exploit a fixed context length to predict the next word of a sequence, conceptually, standard recurrent neural networks can take into account all of the predecessor words. On the other hand, it is well known that recurrent networks are difficult to train and therefore are unlikely to show the full potential of recurrent models. These problems are addressed by a the Long Short-Term Memory neural network architecture. In this work, we analyze this type of network on an English and a large French language modeling task. Experiments show improvements of about 8 % relative in perplexity over standard recurrent neural network LMs. In addition, we gain considerable improvements in WER on top of a state-of-the-art speech recognition system.",,,,Speculative,2025-02-19 17:41:19+00:00,Germany,,,,,,,,,
LSTM-300units,Language,RWTH Aachen University,Academia,"Martin Sundermeyer, Ralf Schlüter, Hermann Ney",2012-09-01,LSTM Neural Networks for Language Modeling,https://www.isca-archive.org/interspeech_2012/sundermeyer12_interspeech.pdf,2503.0,Highly cited,,12000000.0,,,,,,,,,,,,,,,,,LSTM-300units,Unreleased,,,2024-09-15 21:02:38+00:00,Germany,,,,,,,,,
Context-dependent RNN,Language,"Microsoft Research,Brno University of Technology","Industry,Academia","Tomas Mikolov, Geoffrey Zweig",2012-07-27,Context Dependent Recurrent Neural Network Language Model,https://www.microsoft.com/en-us/research/wp-content/uploads/2012/07/rnn_ctxt_TR.sav_.pdf,707.0,SOTA improvement,New SOTA perplexity on PTB,,,,,,,,,,,,,,,,,"Recurrent neural network language models (RNNLMs) have recently demonstrated state-of-the-art performance across a variety of tasks. In this paper, we improve their performance by providing a contextual real-valued input vector in association with each word. This vector is used to convey contextual information about the sentence being modeled. By performing Latent Dirichlet Allocation using a block of preceding text, we achieve a topic-conditioned RNNLM. This approach has the key advantage of avoiding the data fragmentation associated with building multiple topic models on different data subsets. We report perplexity results on the Penn Treebank data, where we achieve a new state-of-the-art. We further apply the model to the Wall Street Journal speech recognition task, where we observe 
improvements in word-error-rate.",,,,Unknown,2024-09-05 18:08:31+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,Czechia",,,,,,,,,
MV-RNN,Language,Stanford University,Academia,"R. Socher, B. Huval, C. D. Manning, and A. Y. Ng",2012-07-12,Semantic Compositionality through Recursive Matrix-Vector Spaces,https://www.aclweb.org/anthology/D12-1110/,1459.0,Highly cited,,3510255.0,"""We represent a word as both a continuous vector and a matrix of parameters. We initialize all word vectors x ∈ Rn with pre-trained 50-dimensional word vectors from the unsupervised model of Collobert and Weston (2008). [...] Every word is also associated with a matrix X.  [...] If the vectors have dimensionality n, then each word’s matrix has dimensionality X ∈ Rn×n.""

""We propose the following combination function which is input dependent:
p = fA,B(a, b) = f(Ba, Ab) = g(W x (Ba Ab)) ,(2)
where A, B are matrices for single words, the global W ∈ Rn×2n is a matrix that maps both transformed words back into the same n-dimensional space.""

""For computing nonterminal phrase matrices, we define the function
P = fM(A, B) = WMA, B, (3)
where WM ∈ Rn×2n, so P ∈ Rn×n just like each input matrix.""

""If every word is represented by an n-dimensional vector and additionally by an n × n matrix, the dimensionality of the whole model may become too large with commonly used vector sizes of n = 100. In order to reduce the number of parameters, we represent word matrices by the following low-rank plus diagonal approximation: A = UV + diag(a), (5)
where U ∈ Rn×r, V ∈ Rr×n, a ∈ Rnand we set the rank for all experiments to r = 3.""

""We train these representations by adding on top of each parent node a simple softmax classifier
to predict a class distribution over, e.g., sentiment or relationship classes: d(p) = softmax(Wlabelp). If there are K labels, then d ∈ RK is a K-dimensional multinomial distribution""

In total there are V*(n+n*r + r*n) + n*2n + n*2n + (n+1)*k parameters, where n is the vector dimension, r is the low-rank decomposition dimension, V is the vocabulary size and k is the number of classes.

In the experiments we have that n=50, r=3, k=? and V=?. I'm guesstimating k=5 and V=10k.",,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Unsupervised High-level Feature Learner,Vision,Google,Industry,"Quoc V. Le, Marc'Aurelio Ranzato, Rajat Monga, Matthieu Devin, Kai Chen, Greg S. Corrado, Jeff Dean, Andrew Y. Ng",2012-07-12,Building High-level Features Using Large Scale Unsupervised Learning,https://arxiv.org/abs/1112.6209,2909.0,"Highly cited,SOTA improvement","""we trained our network to obtain 15.8% accuracy in recognizing 20,000 object categories from ImageNet, a leap of 70% relative improvement over the previous state-of-the-art""",1000000000.0,"""To answer this, we train a 9-layered locally connected sparse autoencoder with pooling and local contrast normalization on a large dataset of images (the model has 1 billion connections, the dataset has 10 million 200x200 pixel images downloaded from the Internet)""",6e+17,,,"Assuming 1 epoch, 10 million images and 1 billion parameters, 6*N*D = 6*10^17 FLOP",,10 million 200x200 images extracted from Youtube videos,10000000.0,10 million 200x200 images extracted from Youtube videos,,72.0,"""We train this network using model parallelism and asynchronous SGD on a cluster with 1,000 machines (16,000 cores) for three days. """,,,Unsupervised,"We consider the problem of building high-level, class-specific feature detectors from only unlabeled data. For example, is it possible to learn a face detector using only unlabeled images using unlabeled images? To answer this, we train a 9-layered locally connected sparse autoencoder with pooling and local contrast normalization on a large dataset of images (the model has 1 billion connections, the dataset has 10 million 200×200 pixel images downloaded from the Internet). We train this network using model parallelism and asynchronous SGD on a cluster with 1,000 machines (16,000 cores) for three days. Contrary to what appears to be a widely-held intuition, our experimental results reveal that it is possible to train a face detector without having to label images as containing a face or not. Control experiments show that this feature detector is robust not only to translation but also to scaling and out-of-plane rotation. We also find that the same network is sensitive to other high-level concepts such as cat faces and human bodies. Starting with these learned features, we trained our network to obtain 15.8% accuracy in recognizing 20,000 object categories from ImageNet, a leap of 70% relative improvement over the previous state-of-the-art.",,,,Likely,2025-02-17 19:06:45+00:00,United States of America,,,,,,,,,
Ngram corpus,Language,Google,Industry,"Yuri Lin, Jean-Baptiste Michel, Erez Lieberman Aiden, Jon Orwant, Will Brockman and Slav Petrov",2012-07-08,Syntactic Annotations for the Google Books NGram Corpus,https://aclanthology.org/P12-3029/,489.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-15 21:03:58+00:00,United States of America,,,,,,,,,
LBL,Language,University College London (UCL),Academia,"Andriy Mnih, Yee Whye Teh",2012-06-27,A Fast and Simple Algorithm for Training Neural Probabilistic Language Models,https://arxiv.org/abs/1206.6426,835.0,,,2000000.0,,502000000000000.0,,,,,,,,45.0,,,,,,,LBL,Unreleased,,,2024-09-15 21:05:32+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Dropout (ImageNet),Vision,University of Toronto,Academia,"GE Hinton, N Srivastava, A Krizhevsky",2012-06-03,Improving neural networks by preventing co-adaptation of feature detectors,https://arxiv.org/abs/1207.0580,7445.0,Highly cited,,,"""We achieved comparable performance of 48.6% error using a single neural network with five convolutional hidden layers interleaved with “max-pooling” layer followed by two globally
connected layers and a final 1000-way softmax layer""",2.731968e+17,,,"""a single NVIDIA GTX 580 GPU... Training on ImageNet takes
roughly four days with dropout and two days without.""
1.581 TFLOP/s * 4 day * 86400 s/day * 0.5 utilization",ImageNet,,1000000.0,"In 2010, a subset of 1000 classes
with roughly 1000 examples per class was the basis of an object recognition competition...",,96.0,4 days with dropout; 2 days without dropout,NVIDIA GeForce GTX 580,,,"Deep neural nets with a large number of parameters are very powerful machine learning systems. However, overfitting is a serious problem in such networks. Large networks are also slow to use, making it difficult to deal with overfitting by combining the predictions of many different large neural nets at test time. Dropout is a technique for addressing this problem. The key idea is to randomly drop units (along with their connections) from the neural network during training. This prevents units from co-adapting too much. During training, dropout samples from an exponential number of different thinned networks. At test time, it is easy to approximate the effect of averaging the predictions of all these thinned networks by simply using a single unthinned network that has smaller weights. This significantly reduces overfitting and gives major improvements over other regularization methods. We show that dropout improves the performance of neural networks on supervised learning tasks in vision, speech recognition, document classification and computational biology, obtaining state-of-the-art results on many benchmark data sets.",,Unreleased,,,2025-02-17 19:06:35+00:00,Canada,,,,,,,,,
Dropout (CIFAR),Vision,University of Toronto,Academia,"GE Hinton, N Srivastava, A Krizhevsky",2012-06-03,Improving neural networks by preventing co-adaptation of feature detectors,https://arxiv.org/abs/1207.0580,7445.0,Highly cited,,,,4268700000000000.0,,,"""a single NVIDIA GTX 580 GPU. Training on CIFAR-10 takes roughly 90 minutes"" p17
1.581 TFLOP/s * 90 min * 60 s/min * 0.5 utilization",CIFAR-10,,60000.0,,,1.5,90 minutes,NVIDIA GeForce GTX 580,,,"Deep neural nets with a large number of parameters are very powerful machine learning systems. However, overfitting is a serious problem in such networks. Large networks are also slow to use, making it difficult to deal with overfitting by combining the predictions of many different large neural nets at test time. Dropout is a technique for addressing this problem. The key idea is to randomly drop units (along with their connections) from the neural network during training. This prevents units from co-adapting too much. During training, dropout samples from an exponential number of different thinned networks. At test time, it is easy to approximate the effect of averaging the predictions of all these thinned networks by simply using a single unthinned network that has smaller weights. This significantly reduces overfitting and gives major improvements over other regularization methods. We show that dropout improves the performance of neural networks on supervised learning tasks in vision, speech recognition, document classification and computational biology, obtaining state-of-the-art results on many benchmark data sets.",,Unreleased,,,2025-02-17 19:06:40+00:00,Canada,,,,,,,,,
Dropout (MNIST),Vision,University of Toronto,Academia,"GE Hinton, N Srivastava, A Krizhevsky",2012-06-03,Improving neural networks by preventing co-adaptation of feature detectors,https://arxiv.org/abs/1207.0580,7445.0,Highly cited,,5592010.0,,6039370800000000.0,,,"Num mul-add / forward pass
2 FLOPs / mult-add
3 total mult-add / fp mult-add
3000 epochs
60000 training samples",MNIST,,60000.0,"The MNIST database contains 60,000 training images and 10,000 testing images (Wikipedia)",,,,NVIDIA GeForce GTX 580,,,"Deep neural nets with a large number of parameters are very powerful machine learning systems. However, overfitting is a serious problem in such networks. Large networks are also slow to use, making it difficult to deal with overfitting by combining the predictions of many different large neural nets at test time. Dropout is a technique for addressing this problem. The key idea is to randomly drop units (along with their connections) from the neural network during training. This prevents units from co-adapting too much. During training, dropout samples from an exponential number of different thinned networks. At test time, it is easy to approximate the effect of averaging the predictions of all these thinned networks by simply using a single unthinned network that has smaller weights. This significantly reduces overfitting and gives major improvements over other regularization methods. We show that dropout improves the performance of neural networks on supervised learning tasks in vision, speech recognition, document classification and computational biology, obtaining state-of-the-art results on many benchmark data sets.",,Unreleased,,,2025-02-17 19:06:31+00:00,Canada,,,,,,,,,
Dropout (TIMIT),Speech,University of Toronto,Academia,"GE Hinton, N Srivastava, A Krizhevsky",2012-06-03,Improving neural networks by preventing co-adaptation of feature detectors,https://arxiv.org/abs/1207.0580,7445.0,Highly cited,,48840185.0,The input to the net is 21 adjacent frames with an advance of 10ms per frame. The neural net has 4 fully-connected hidden layers of 4000 units per layer and 185 “softmax” output units that are subsequently merged into the 39 distinct classes used for the benchmark.,,,,,TIMIT,,41620.0,"4162 utterances, guesstimated avg 10 words per utterance",,,,NVIDIA GeForce GTX 580,,,"Deep neural nets with a large number of parameters are very powerful machine learning systems. However, overfitting is a serious problem in such networks. Large networks are also slow to use, making it difficult to deal with overfitting by combining the predictions of many different large neural nets at test time. Dropout is a technique for addressing this problem. The key idea is to randomly drop units (along with their connections) from the neural network during training. This prevents units from co-adapting too much. During training, dropout samples from an exponential number of different thinned networks. At test time, it is easy to approximate the effect of averaging the predictions of all these thinned networks by simply using a single unthinned network that has smaller weights. This significantly reduces overfitting and gives major improvements over other regularization methods. We show that dropout improves the performance of neural networks on supervised learning tasks in vision, speech recognition, document classification and computational biology, obtaining state-of-the-art results on many benchmark data sets.",,Unreleased,,,2024-11-01 14:03:33+00:00,Canada,,,,,,,,,
MCDNN (MNIST),Vision,IDSIA,Academia,"D Ciregan, U Meier, J Schmidhuber",2012-02-13,Multi-column Deep Neural Networks for Image Classification,https://arxiv.org/abs/1202.2745v1,4828.0,Highly cited,,1994300.0,"""We train five DNN columns per normalization, resulting in a total of 35 columns for the entire MCDNN.
[Each DNN has an architecture] 1x29x29-20C4-MP2-40C5-MP3-150N-10N DNN""",3726979200000000.0,,,"Num of multiply-adds per forward pass
2 FLOPs/mult-add
3 (fp+bp FLOPs / fp FLOPs)
800 epochs
60.000 training size
35 networks

""Training a DNN takes almost 14 hours and after 500 training epochs little additional improvement is observed""",MNIST,,60000.0,"The MNIST database contains 60,000 training images and 10,000 testing images (Wikipedia)",,,,,,,,,,,,2025-02-17 19:06:27+00:00,Switzerland,,,,,,,,,
HOGWILD!,Other,University of Wisconsin Madison,Academia,"F Niu, B Recht, C Ré, SJ Wright",2011-11-11,HOGWILD!: A Lock-Free Approach to Parallelizing Stochastic Gradient Descent,https://arxiv.org/abs/1106.5730,2222.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:46+00:00,United States of America,,,,,,,,,
NLP from scratch,Language,"NEC Laboratories,Princeton University","Industry,Academia","Ronan Collobert, J. Weston, L. Bottou, Michael Karlen, K. Kavukcuoglu, P. Kuksa",2011-11-08,Natural Language Processing (Almost) from Scratch,https://www.jmlr.org/papers/volume12/collobert11a/collobert11a.pdf,7640.0,Highly cited,,5000000.0,"""The capacity of our network architectures lies mainly in the word lookup table, which contains 50 × 100,000 parameters to train. [...] most of the trainable parameters are located in the lookup tables.""",,,,,,,852000000.0,"""Section 4 leverages large unlabeled data sets (∼ 852 million words)""",,72.0,"""Chunking and NER take about one hour to train, POS takes few hours, and SRL takes about three days.""
SRL is the longest task.",,,,,,,,,2024-09-15 21:06:14+00:00,"United States of America,United States of America",,,,,,,,,
Domain Adaptation,Vision,University of Maryland,Academia,"Raghuraman Gopalan, Ruonan Li, Rama Chellappa",2011-11-06,Domain Adaptation for Object Recognition: An Unsupervised Approach,http://ftp.idiap.ch/pub/courses/EE-700/material/05-12-2012/2011_ICCV_DomainAdaptation.pdf,1071.0,Highly cited,,15260.0,"Did not take into account initial image feature extraction, only novel stuff.

1. Perform PCA on the feature matrices from both domains. Learnable parameters are projection matrices.
= 800 (# features) x 200 (reduced dimension) x 2 (once per subdomain)

2. Perform partial least squares regression. Learnable parameters are

Matrix P with dimensions 200 (# features) x 30 (dimension of latent space)
Matrix Q with dimensions 1 (# responses) x 30 (dimension of latent space)
Projection matrix of X onto latent space:  200 (# features) x 30 (dimension of latent space)
Projection matrix of Y onto latent space:  1 (# responses) x 30 (dimension of latent space)
",,,,,Dataset introduced in 'Adapting Visual Category Models to New Domains',,4652.0,"Dataset introduced in 'Adapting Visual Category Models to New
Domains'",,,,,,Supervised,,,,,,2024-11-01 14:03:44+00:00,United States of America,,,,,,,,,
Adaptive Subgrad,Language,"Technion - Israel Institute of Technology,Google,University of California (UC) Berkeley","Academia,Industry,Academia","J Duchi, E Hazan, Y Singer",2011-10-03,Adaptive Subgradient Methods for Online Learning and Stochastic Optimization,https://dl.acm.org/doi/10.5555/1953048.2021068,10055.0,Highly cited,,,,,,,,Reuters RCV1,"They experiement with their method on different models with different modalities, I entry only information about text classification experiment 

Text Classification (Reuters RCV1): They trained binary classifiers for each of the 4 major categories using ADAGRAD and compared them to other methods like RDA, FOBOS, Passive-Aggressive, and AROW.",,,,,,,,,"We present a new family of subgradient methods that dynamically incorporate knowledge of the geometry of the data observed in earlier iterations to perform more informative gradient-based learning. Metaphorically, the adaptation allows us to find needles in haystacks in the form of very predictive but rarely seen features. Our paradigm stems from recent advances in stochastic optimization and online learning which employ proximal functions to control the gradient steps of the algorithm. We describe and analyze an apparatus for adaptively modifying the proximal function, which significantly simplifies setting a learning rate and results in regret guarantees that are provably as good as the best proximal function that can be chosen in hindsight. We give several efficient algorithms for empirical risk minimization problems with common and important regularization functions and domain constraints. We experimentally study our theoretical analysis and show that adaptive subgradient methods outperform state-of-the-art, yet non-adaptive, subgradient algorithms.",,,,Unknown,2024-11-01 14:03:46+00:00,"Israel,United States of America,United States of America",,,,,,,,,
CNN committee (traffic sign),Vision,IDSIA,Academia,"D. Ciresan, U. Meier, Jonathan Masci, J. Schmidhuber",2011-10-03,A committee of neural networks for traffic sign classification,https://www.semanticscholar.org/paper/A-committee-of-neural-networks-for-traffic-sign-Ciresan-Meier/dd7f8b53e6802787179a961e766760cbbe2d5011,,"Historical significance,SOTA improvement",,1388800.0,"Parameters
L1: 3*3*3*100=2700
L3: 100*4*4*150=240000
L5: 150*3*3*250=337500
L7: 250*4*4*200=800000
L8: 200*43=8600
Total: 2700+240000+337500+800000+8600=1388800
",991981425600000.0,,,"Training FLOP
L1: 3*3*3*46*46*100=5713200
L3: 100*4*4*20*20*150=96000000
L5: 150*3*3*8*8*250=21600000
L7: 250*4*4*200=800000
L8: 200*43=8600
Total: 2*(5713200+96000000+21600000+800000+8600)=248243600
Training Compute: 248243600*3*26640*50=991981425600000=9.9e14
",,German traffic sign dataset,26640.0,"“The training set consists of 26640 images“
“we resize all images to 48 × 48 pixels”
",50.0,,,"NVIDIA GeForce GTX 580,NVIDIA GeForce GTX 480",4.0,Supervised,"We describe the approach that won the preliminary phase of the German traffic sign recognition benchmark with a better-than-human recognition rate of 98.98%.We obtain an even better recognition rate of 99.15% by further training the nets. Our fast, fully parameterizable GPU implementation of a Convolutional Neural Network does not require careful design of pre-wired feature extractors, which are rather learned in a supervised way. A CNN/MLP committee further boosts recognition performance.",,Unreleased,,Unverified,2025-02-19 17:39:33+00:00,Switzerland,,,,,,,,,
CNN Committee (NIST),Vision,IDSIA,Academia,"D. Ciresan, U. Meier, L. Gambardella, J. Schmidhuber",2011-09-18,Convolutional Neural Network Committees for Handwritten Character Classification,https://www.semanticscholar.org/paper/Convolutional-Neural-Network-Committees-for-Ciresan-Meier/260a7615bbffec052d67dffde5bcf9b4687b50ee,,Historical significance,,128420.0,"1st CNN layer: 20*4*4=320
2nd CNN layer: 20*40*9*9=64800
1st FC layer: 40*3*3*150=54000
2nd FC layer: 150*62=9300
Total : 320+64800+54000+9300=128420
",2.6e+16,,,"GPU hour estimate:
30 epochs, 6 hours per network, 7 networks total
7*6*60*60*(2*1580000000000+2*1345000000000)*0.3=2.65e17

Counting estimate:
800000 training examples, 30 epochs
1st CNN layer: 2*20*26*26*4*4=432640
2nd CNN layer: 2*20*6*6*9*9*40=4665600
1st FC layer: 2*40*3*3*150=108000
2nd FC layer: 2*150*62=18600
Total: 432640+4665600+108000+18600=5224840

5224840*3*800000*30*7=2633319360000000=2.6e15

Geometric mean: sqrt(2.65e17*2.6e15)=2.6e16
",,NIST SD 19,800000.0,,30.0,42.0,,"NVIDIA GeForce GTX 580,NVIDIA GeForce GTX 480",4.0,Supervised,"In 2010, after many years of stagnation, the MNIST handwriting recognition benchmark record dropped from 0.40% error rate to 0.35%. Here we report 0.27% for a committee of seven deep CNNs trained on graphics cards, narrowing the gap to human performance. We also apply the same architecture to NIST SD 19, a more challenging dataset including lower and upper case letters. A committee of seven CNNs obtains the best results published so far for both NIST digits and NIST letters. The robustness of our method is verified by analyzing 78125 different 7-net committees.",,Unreleased,,Unverified,2025-02-17 19:05:59+00:00,Switzerland,,,,,,,,,
CNN Committee (MNIST),Vision,IDSIA,Academia,"D. Ciresan, U. Meier, L. Gambardella, J. Schmidhuber",2011-09-18,Convolutional Neural Network Committees for Handwritten Character Classification,https://www.semanticscholar.org/paper/Convolutional-Neural-Network-Committees-for-Ciresan-Meier/260a7615bbffec052d67dffde5bcf9b4687b50ee,,Historical significance,,120620.0,"1st CNN layer: 20*4*4=320
2nd CNN layer: 20*40*9*9=64800
1st FC layer: 40*3*3*150=54000
2nd FC layer: 150*10=1500
Total: 320+64800+54000+1500=120620
",5.2e+16,,,"GPU hour estimate:
800 epochs, 14 hours per network, 7 networks total
7*14*60*60*(2*1580000000000+2*1345000000000)*0.3=6.19e17

Counting estimate:
50000 examples, 800 epochs
1st CNN layer: 2*20*26*26*4*4=432640
2nd CNN layer: 2*20*6*6*9*9*40=4665600
1st FC layer: 2*40*3*3*150=108000
2nd FC layer: 2*150*10=3000
Total: 432640+4665600+108000+3000=5209240
5209240*3*50000*800*7=4375761600000000=4.4e15

Geometric mean: sqrt(4.4e15*6.19e17)=5.2e16
",MNIST,,50000.0,,800.0,98.0,,"NVIDIA GeForce GTX 580,NVIDIA GeForce GTX 480",4.0,Supervised,"In 2010, after many years of stagnation, the MNIST handwriting recognition benchmark record dropped from 0.40% error rate to 0.35%. Here we report 0.27% for a committee of seven deep CNNs trained on graphics cards, narrowing the gap to human performance. We also apply the same architecture to NIST SD 19, a more challenging dataset including lower and upper case letters. A committee of seven CNNs obtains the best results published so far for both NIST digits and NIST letters. The robustness of our method is verified by analyzing 78125 different 7-net committees.",,Unreleased,,Unverified,2025-02-17 19:06:05+00:00,Switzerland,,,,,,,,,
Bayesian Starcraft,Games,Collège de France,Academia,"Gabriel Synnaeve, Pierre Bessière",2011-08-31,A Bayesian Model for RTS Units Control applied to StarCraft,https://ieeexplore.ieee.org/document/6032006,86.0,,,13125.0,"It's a bayes net, parameters are probabilty tables for probability that X happens in direction i given that we go in direction i. There are 25 directions.",,,,,,,,,,,,,,,"In real-time strategy games (RTS), the player must reason about high-level strategy and planning while having effective tactics and even individual units micro-management. Enabling an artificial agent to deal with such a task entails breaking down the complexity of this environment. For that, we propose to control units locally in the Bayesian sensory motor robot fashion, with higher level orders integrated as perceptions. As complete inference encompassing global strategy down to individual unit needs is intractable, we embrace incompleteness through a hierarchical model able to deal with uncertainty. We developed and applied our approach on a StarCraft 1 AI.",,,,,2024-09-05 18:08:31+00:00,France,,,,,,,,,
High Performance CNN,Vision,IDSIA,Academia,"Dan C. Ciresan, Ueli Meier, Jonathan Masci, Luca M. Gambardella, Jürgen Schmidhuber",2011-07-16,"Flexible, High Performance Convolutional Neural Networks for Image Classification",https://people.idsia.ch/~juergen/ijcai2011.pdf,,"Historical significance,SOTA improvement",,4878300.0,"L1: 6*300*6*6=64800
L3: 500*600*4*4=4800000
L5: (108/4)*500=13500
Total: 64800+4800000+13500=4878300",2.57985e+16,,,"7 epochs, 35 min per epoch
2 GTX 480 + 2 GTX 580
580 FLOP: 1580000000000
480 FLOP: 1345000000000
FLOP: 7*35*60*(2*1580000000000+2*1345000000000)*0.3=25798500000000000=2.6e16
",NORB,,,,7.0,4.0,,"NVIDIA GeForce GTX 480,NVIDIA GeForce GTX 580",4.0,Supervised,"We present a fast, fully parameterizable GPU implementation of Convolutional Neural Network variants. Our feature extractors are neither carefully designed nor pre-wired, but rather learned in a supervised way. Our deep hierarchical architectures achieve the best published results on benchmarks for object classification (NORB, CIFAR10) and handwritten digit recognition (MNIST), with error rates of 2.53%, 19.51%, 0.35%, respectively. Deep nets trained by simple back-propagation perform better than more shallow ones. Learning is surprisingly rapid. NORB is completely trained within five epochs. Test error rates on MNIST drop to 2.42%, 0.97% and 0.48% after 1, 3 and 17 epochs, respectively.",,Unreleased,,Unverified,2025-02-17 18:46:01+00:00,Switzerland,,,,,,,,,
Recursive sentiment autoencoder,Language,Stanford University,Academia,"R. Socher, J. Pennington, E. H. Huang, A. Y. Ng, and C. D. Manning",2011-07-01,Semi-supervised recursive autoencoders for predicting sentiment distributions,https://aclanthology.org/D11-1014/,1477.0,Highly cited,,,,,,,,,,,"They use several datasets for self-supervised and supervised learning
",,,,,,,,,,,Unknown,2024-09-15 21:11:14+00:00,United States of America,,,,,,,,,
Recursive Neural Network,"Vision,Language",Stanford University,Academia,"R. Socher, Cliff Chiung-Yu Lin, A. Ng, Christopher D. Manning",2011-06-28,Parsing natural scenes and natural language with recursive neural networks,https://www.semanticscholar.org/paper/Parsing-Natural-Scenes-and-Natural-Language-with-Socher-Lin/9c0ddf74f87d154db88d79c640578c1610451eec,,Highly cited,,,,,,,,WSJ,"We train all models on the Wall Street Journal section of the Penn Treebank using the standard training (2–21), development (22) and test (23) splits.",833333.0,"Full WSJ dataset: 1000000 words (https://catalog.ldc.upenn.edu/LDC99T42) 
Using 20 out of 24 splits for training: 1000000*(20/24)=833333.333",,,,,,,"Recursive structure is commonly found in the inputs of different modalities such as natural scene images or natural language sentences. Discovering this recursive structure helps us to not only identify the units that an image or sentence contains but also how they interact to form a whole. We introduce a max-margin structure prediction architecture based on recursive neural networks that can successfully recover such structure both in complex scene images as well as sentences. The same algorithm can be used both to provide a competitive syntactic parser for natural language sentences from the Penn Treebank and to outperform alternative approaches for semantic scene segmentation, annotation and classification. For segmentation and annotation our algorithm obtains a new level of state-of-the-art performance on the Stanford background dataset (78.1%). The features from the image parse tree outperform Gist descriptors for scene classification by 4%.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Cross-Lingual POS Tagger,Language,"Carnegie Mellon University (CMU),Google Research","Academia,Industry","Dipanjan Das, Slav Petrov",2011-06-19,Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections,https://aclanthology.org/P11-1061/,316.0,SOTA improvement,"""Across eight European languages, our approach results in an average absolute improvement of 10.4% over a state-of-the-art baseline, and 16.7% over vanilla hidden Markov models induced with the Expectation Maximization algorithm.""",,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"United States of America,Multinational,United States of America",,,,,,,,,
Vector Space Model,Language,Stanford University,Academia,"Andrew L. Maas, Raymond E. Daly, Peter T. Pham, Dan Huang, A. Ng, Christopher Potts",2011-06-19,Learning Word Vectors for Sentiment Analysis,https://www.semanticscholar.org/paper/Learning-Word-Vectors-for-Sentiment-Analysis-Maas-Daly/1c61f9ef06fe74505775a833ff849185757199e7,,"Highly cited,SOTA improvement","""We evaluate the model using small,
widely used sentiment and subjectivity corpora and find it out-performs several previously introduced methods for sentiment classification""",255000.0,"""We build a fixed dictionary of the 5,000 most frequent tokens""
""For all word vector models, we use 50-dimensional vectors""
Parameters: 5000*50 + 5000=255000
",,,,,IMDb,"""We induce word representations with our model using 25,000 movie reviews from IMDB.""",75000.0,"""We train a variant of our model which uses 50,000 unlabeled reviews in addition to the labeled set of 25,000 reviews""",,,,,,,"Unsupervised vector-based approaches to semantics can model rich lexical meanings, but they largely fail to capture sentiment information that is central to many word meanings and important for a wide range of NLP tasks. We present a model that uses a mix of unsupervised and supervised techniques to learn word vectors capturing semantic term--document information as well as rich sentiment content. The proposed model can leverage both continuous and multi-dimensional sentiment information as well as non-sentiment annotations. We instantiate the model to utilize the document-level sentiment polarity annotations present in many online documents (e.g. star ratings). We evaluate the model using small, widely used sentiment and subjectivity corpora and find it out-performs several previously introduced methods for sentiment classification. We also introduce a large dataset of movie reviews to serve as a more robust benchmark for work in this area.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
RNN-SpeedUp,Language,"Brno University of Technology,Johns Hopkins University","Academia,Academia","T. Mikolov, S. Kombrink, L. Burget, J. Cernock ˇ y, and S. Khudanpur",2011-05-22,Extensions of recurrent neural network language model,https://ieeexplore.ieee.org/document/5947611,1576.0,Highly cited,,,,,,,,Penn TreeBank,,697500.0,"Section 3: ""The data used in the following experiments were obtained from
Penn Tree Bank: sections 0-20 were used as training data (about
930K tokens)""

0.75 words per token for English",,,,,,,,,,,,2024-11-01 14:03:45+00:00,"Czechia,United States of America",,,,,,,,,
Deep Autoencoders,Vision,University of Toronto,Academia,"A. Krizhevsky, Geoffrey E. Hinton",2011-04-29,Using very deep autoencoders for content-based image retrieval,https://www.semanticscholar.org/paper/Using-very-deep-autoencoders-for-content-based-Krizhevsky-Hinton/88080d28536f36588740737f3b7a1f6c1a409654,,Historical significance,,139808256.0,"2*(3072*8192+8192*4096+4096*2048+2048*1024+1024*512+512*256+256*128+128*64+64*28)=139808256
""n each autoencoder, the hidden layers halve in size until they reach the desired size, except that we use 28 instead of 32""",3.672864e+16,,,"48*60*60*708500000000*0.3=36728640000000000=3.7e16
GTX 285 with 708.5 GFLOP/s",,"""We tested our models on two subsets of the 80 million tiny images datase""",1600000.0,"""We train on 1.6 million 32 × 32 color images""",85.0,48.0,"""The entire training procedure for each autoencoder took about 2 days on an Nvidia GTX 285 GPU.""",NVIDIA GeForce GTX 285,1.0,,"We show how to learn many layers of features on color images and we use these features to initialize deep autoencoders. We then use the autoencoders to map images to short binary codes. Using semantic hashing [6], 28-bit codes can be used to retrieve images that are similar to a query image in a time that is independent of the size of the database. This extremely fast retrieval makes it possible to search using multiple di erent transformations of the query image. 256-bit binary codes allow much more accurate matching and can be used to prune the set of images found using the 28-bit codes.",,,,Confident,2025-02-18 16:00:19+00:00,Canada,,,,,,,,,
Deep rectifier networks,Vision,University of Montreal / Université de Montréal,Academia,"Xavier Glorot, Antoine Bordes, Yoshua Bengio",2011-04-13,Deep sparse rectifier neural networks,https://proceedings.mlr.press/v15/glorot11a.html,7887.0,Highly cited,,,,,,,,"CIFAR-10,MNIST,NISTP,NORB",,,,,,,,,,"While logistic sigmoid neurons are more biologically plausible than hyperbolic tangent neurons, the latter work better for training multi-layer neural networks. This paper shows that rectifying neurons are an even better model of biological neurons and yield equal or better performance than hyperbolic tangent networks in spite of the hard non-linearity and non-differentiability at zero, creating sparse representations with true zeros which seem remarkably suitable for naturally sparse data. Even though they can take advantage of semi-supervised setups with extra-unlabeled data, deep rectifier networks can reach their best performance without requiring any unsupervised pre-training on purely supervised tasks with large labeled datasets. Hence, these results can be seen as a new milestone in the attempts at understanding the difficulty in training deep but purely supervised neural networks, and closing the performance gap between neural networks learnt with and without unsupervised pre-training.",,,,Unknown,2024-11-01 14:03:44+00:00,Canada,,,,,,,,,
Optimized Single-layer Net,Vision,"University of Michigan,Stanford University","Academia,Academia","A Coates, A Ng, H Lee",2011-04-11,An analysis of single-layer networks in unsupervised feature learning,http://proceedings.mlr.press/v15/coates11a.html,3716.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:45+00:00,"United States of America,United States of America",,,,,,,,,
YouTube Video Recommendation System,Recommendation,Google,Industry,"J Davidson, B Liebald, J Liu, P Nandy",2010-09-26,The YouTube Video Recommendation System,https://dl.acm.org/doi/10.1145/1864708.1864770,1160.0,Highly cited,,,,,,,,,,10000000000.0,"""We currently handle millions of users
and tens of billions of activity events with a total footprint
of several terabytes of data""

If 10M users each watch 1000 videos, that's 10B visualizations, which matches their ""activity events"" count.",,,,,,,"We discuss the video recommendation system in use at YouTube, the world's most popular online video community. The system recommends personalized sets of videos to users based on their activity on the site. We discuss some of the unique challenges that the system faces and how we address them. In addition, we provide details on the experimentation and evaluation framework used to test and tune new algorithms. We also present some of the findings from these experiments.",,,,,2024-11-01 14:03:45+00:00,United States of America,,,,,,,,,
RNN LM,Language,Johns Hopkins University,Academia,"Tomas Mikolov, M. Karafiát, L. Burget, J. Černocký, S. Khudanpur",2010-09-26,Recurrent neural network based language model,https://www.semanticscholar.org/paper/Recurrent-neural-network-based-language-model-Mikolov-Karafi%C3%A1t/9819b600a828a57e1cde047bbe710d3446b30da5,5780.0,Highly cited,,70265000.0,"This database entry refers to the 3xRNN rows in Table 2 (static and dynamic likely use the same model ensemble, but allow the model weights to update once when testing the dynamic version).

I assume the 3xRNN represents interpolation between the three largest models shown explicitly (RNN 250/5, RNN 250/2, and RNN 400/10). This seems likely, since smaller models do considerably worse on their own.

In the following colab notebook, I estimate vocabulary sizes for the NYT Gigaword data at around 54.4k, 41.4k, and 27.6k for merge thresholds of 2, 5, and 10, respectively: https://colab.research.google.com/drive/1K5qH0EqXtFwTLESNtp4oelCM28GpGXt6#scrollTo=tedUkbgklNJ3

So the total number of parameters in each constituent model is:
- RNN 250/2: (250 + 54.4k) * 250 + (250 * 54.4k) = 27,262,500
- RNN 250/5: (250 + 41.4k) * 250 + (250 * 41.4k) = 20,762,500
- RNN 400/10: (400 + 27.6k) * 400 + (400 * 27.6k) = 22,240,000

In total: 70,265,000 parameters",5.396e+16,,,"""Convergence is usually achieved after 10-20 epochs.""
Training was done over a 6.4M subset of the NYT section of English Gigaword.

6 * 70,265,000 * 20 * 6.4M = 5.396e16",WSJ,The training corpus consists of 37M words from NYT section of English Gigaword,6400000.0,"As it is very time consuming to train RNN LM on large data, we have used only up to 6.4M words for training RNN models.",1.0,504.0,"""it takes several weeks to train the most complex models.""
Rough guess, 3 weeks = 504 hours

Assuming these models trained at the same time on different machines.",,,,"A new recurrent neural network based language model (RNN LM) with applications to speech recognition is presented. Results indicate that it is possible to obtain around 50% reduction of perplexity by using mixture of several RNN LMs, compared to a state of the art backoff language model. Speech recognition experiments show around 18% reduction of word error rate on the Wall Street Journal task when comparing models trained on the same amount of data, and around 5% on the much harder NIST RT05 task, even when the backoff model is trained on much more data than the RNN LM. We provide ample empirical evidence to suggest that connectionist language models are superior to standard n-gram techniques, except their high computational (training) complexity. Index Terms: language modeling, recurrent neural networks, speech recognition",,,,Speculative,2025-02-18 16:01:21+00:00,United States of America,,,,,,,,,
Pooling CNN (Caltech 101),Vision,University of Bonn,Academia,"Dominik Scherer, Andreas C. Müller, Sven Behnke",2010-09-15,Evaluation of Pooling Operations in Convolutional Architectures for Object Recognition,https://www.semanticscholar.org/paper/Evaluation-of-Pooling-Operations-in-Convolutional-Scherer-M%C3%BCller/5d21006fa32ff69f6b0a646f26ce0db84f2f4d33,,"Historical significance,Highly cited,SOTA improvement",,294912.0,"C1: 3*16*16*16=12288
C3: 16*128*6*6=73728
F5: 128*4*4*102=208896
Total: 12288+73728+208896=294912
",1221124128768000.0,,,"Forward FLOP
C1: 2*3*16*16*16*125*125=384000000
C3: 2*16*128*6*6*20*20=58982400
F5: 2*128*4*4*102=417792
Total: 384000000+58982400+417792=443400192

300 epochs
30*102=3060 training examples

443400192*3*3060*300=1221124128768000=1.2e15
",,Caltech-101,3060.0,,300.0,,,,,Supervised,"A common practice to gain invariant features in object recognition models is to aggregate multiple low-level features over a small neighborhood. However, the differences between those models makes a comparison of the properties of different aggregation functions hard. Our aim is to gain insight into different functions by directly comparing them on a fixed architecture for several common object recognition tasks. Empirical results show that a maximum pooling operation significantly outperforms subsampling operations. Despite their shift-invariant properties, overlapping pooling windows are no significant improvement over nonoverlapping pooling windows. By applying this knowledge, we achieve state-of-the-art error rates of 4.57% on the NORB normalized-uniform dataset and 5.6% on the NORB jittered-cluttered dataset.",,Unreleased,,Unverified,2025-02-17 18:45:20+00:00,Germany,,,,,,,,,
Pooling CNN (NORB),Vision,University of Bonn,Academia,"Dominik Scherer, Andreas C. Müller, Sven Behnke",2010-09-15,Evaluation of Pooling Operations in Convolutional Architectures for Object Recognition,https://www.semanticscholar.org/paper/Evaluation-of-Pooling-Operations-in-Convolutional-Scherer-M%C3%BCller/5d21006fa32ff69f6b0a646f26ce0db84f2f4d33,,"Historical significance,Highly cited,SOTA improvement","
",268664.0,"Figure 1
C1: 2*16*5*5=800
C3: 16*64*6*6=36864
F5: 64*6*6*100=230400
F6: 100*6=600
Total: 800+36864+230400+600=268664",1456277227200000.0,,,"Forward FLOP
C1: 2*2*16*5*5*92*92=13542400
C3: 2*16*16*6*6*18*18=5971968
F5: 2*64*6*6*100=460800
F6: 2*100*6=1200
Total: 13542400+5971968+460800+1200=19976368

1000 epochs, 24300 training examples

19976368*3*24300*1000=1456277227200000=1.5e15
",NORB,,24300.0,,1000.0,,,,,Supervised,"A common practice to gain invariant features in object recognition models is to aggregate multiple low-level features over a small neighborhood. However, the differences between those models makes a comparison of the properties of different aggregation functions hard. Our aim is to gain insight into different functions by directly comparing them on a fixed architecture for several common object recognition tasks. Empirical results show that a maximum pooling operation significantly outperforms subsampling operations. Despite their shift-invariant properties, overlapping pooling windows are no significant improvement over nonoverlapping pooling windows. By applying this knowledge, we achieve state-of-the-art error rates of 4.57% on the NORB normalized-uniform dataset and 5.6% on the NORB jittered-cluttered dataset.",,Unreleased,,Unverified,2025-02-17 18:45:14+00:00,Germany,,,,,,,,,
Fisher-Boost,Vision,Xerox Research Centre Europe (XRCE),Industry,Florent PerronninJorge SánchezThomas Mensink,2010-09-05,Improving the Fisher Kernel for Large-Scale Image Classification,https://link.springer.com/chapter/10.1007/978-3-642-15561-1_11,3062.0,Highly cited,,,,,,,,,,,,,21.5,"""Extracting and projecting the SIFT features for the 350K training images takes approx. 15h (150ms / image), learning the GMM on a random subset of 1M descriptors approx. 30 min, computing the Fisher vectors. Improving the Fisher Kernel for Large-Scale Image Classification 155
approx. 4h (40ms / image) and learning the 18 classifiers approx. 2h (7 min / class). ""
15 + 0.5 + 4 + 2 = 21.5 hours",,,,,,,,Unknown,2024-09-05 18:08:31+00:00,France,,,,,,,,,
ReLU (LFW),Vision,University of Toronto,Academia,"Nair, V., Hinton, G. E.",2010-06-15,Rectified linear units improve restricted boltzmann machines,https://dl.acm.org/doi/10.5555/3104322.3104425,16786.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:45+00:00,Canada,,,,,,,,,
ReLU (NORB),Vision,University of Toronto,Academia,"Nair, V., Hinton, G. E.",2010-06-15,Rectified linear units improve restricted boltzmann machines,https://dl.acm.org/doi/10.5555/3104322.3104425,16786.0,Highly cited,,16210006.0,"""The stereo-pair images are subsampled from their original resolution of 108 × 108 × 2 to 32 × 32 × 2 to speed up experiments [...]  the architecture
with the best results have 4000 units in the first layer
and 2000 in the second [...] there are 58,320 test
cases (9,720 cases per class) ""

So the architecture has (32*32*2+1)x4000 + (4000+1)*2000 + (2000+1)*58,320/9,720 parameters",,,,,,,291600.0,"""There are 291,600 training cases (48,600 cases per class) and 58,320 test cases (9,720 cases per class).""",,,,,,,,,,,,2024-11-01 14:03:45+00:00,Canada,,,,,,,,,
Mid-level Features,Vision,"INRIA,Ecole Normale Supèrieure,New York University (NYU)","Academia,Academia,Academia","YL Boureau, F Bach, Y LeCun, J Ponce",2010-06-13,Learning mid-level features for recognition,https://ieeexplore.ieee.org/document/5539963,1314.0,Highly cited,,,This is extracting low-level SIFT features then max-pooling them and using in a linear SVM. The training compute could be estimated loosely for the SVM part.,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"France,France,United States of America",,,,,,,,,
Deconvolutional Network,Vision,New York University (NYU),Academia,"Matthew D. Zeiler, Dilip Krishnan, Graham W. Taylor and Rob Fergus",2010-06-13,Deconvolutional Networks,https://ieeexplore.ieee.org/document/5539957,1542.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:45+00:00,United States of America,,,,,,,,,
iCCCP,Vision,Massachusetts Institute of Technology (MIT),Academia,Long Zhu; Yuanhao Chen; Alan Yuille; William Freeman,2010-06-13,Latent hierarchical structural learning for object detection,https://ieeexplore.ieee.org/document/5540096,,"Historical significance,SOTA improvement",,,,1080000000000000.0,,,"“All experiments are performed on a standard computer with a 3Ghz CPU”
“It takes 25 hours (about 25 iCCCP iterations) to train an object class with two mixture templates.”

Individual models for some of the classes.

Assuming a Core 2 with 8 FLOP/cycle was used with a utilization of 0.5:
3000000000*8*25*60*60*0.5=1080000000000000",PASCAL VOC 2007,“There are 20 object classes which consist of 10000 images for training and testing”,10000.0,,,25.0,,,1.0,Supervised,"We present a latent hierarchical structural learning method for object detection. An object is represented by a mixture of hierarchical tree models where the nodes represent object parts. The nodes can move spatially to allow both local and global shape deformations. The models can be trained discriminatively using latent structural SVM learning, where the latent variables are the node positions and the mixture component. But current learning methods are slow, due to the large number of parameters and latent variables, and have been restricted to hierarchies with two layers. In this paper we describe an incremental concave-convex procedure (iCCCP) which allows us to learn both two and three layer models efficiently. We show that iCCCP leads to a simple training algorithm which avoids complex multi-stage layer-wise training, careful part selection, and achieves good performance without requiring elaborate initialization. We perform object detection using our learnt models and obtain performance comparable with state-of-the-art methods when evaluated on challenging public PASCAL datasets. We demonstrate the advantages of three layer hierarchies - outperforming Felzenszwalb et al.'s two layer models on all 20 classes.",,Unreleased,,Unverified,2025-02-17 18:45:06+00:00,United States of America,,,,,,,,,
Word Representations,Language,"University of Montreal / Université de Montréal,University of Illinois Urbana-Champaign (UIUC)","Academia,Academia","Joseph Turian, Lev-Arie Ratinov, Yoshua Bengio",2010-06-01,Word Representations: A Simple and General Method for Semi-Supervised Learning,https://aclanthology.org/P10-1040.pdf,2510.0,Highly cited,,,,,,,,,,37000000.0,"Section 6: ""After cleaning, there are 37 million words (58%
of the original) in 1.3 million sentences""",,,,,,,,,,,,2024-10-08 17:43:57+00:00,"Canada,United States of America",,,,,,,,,
Feedforward NN,Vision,University of Montreal / Université de Montréal,Academia,"X Glorot, Y Bengio",2010-05-13,Understanding the difficulty of training deep feedforward neural networks,https://proceedings.mlr.press/v9/glorot10a.html,16706.0,Highly cited,,7082000.0,"pg250 of the paper, section 2.3: 
""We optimized feedforward neural networks with one to
five hidden layers, with one thousand hidden units per
layer""

Input is a flattened 32x32 image, which corresponds to an input vector of length 3072

Output is a number from 0-9, so 10 neurons

No. of params: 3072*1000 + 4*1000*1000 + 1000*10 = 7,082,000
",350000000000000.0,,,"Roughly two times the number of parameters for ops per forward pass. 

So 2*7082000 params*3.5*140 epochs * 50k training images = 3.5e14",MNIST,,,,,,,,,,,,,,,2025-02-17 18:44:48+00:00,Canada,,,,,,,,,
6-layer MLP (MNIST),Vision,"IDSIA,University of Lugano,SUPSI","Academia,Academia,Academia","Dan Claudiu Ciresan, Ueli Meier, Luca Maria Gambardella, Juergen Schmidhuber",2010-03-01,Deep Big Simple Neural Nets Excel on Handwritten Digit Recognition,https://arxiv.org/abs/1003.0358,1264.0,Highly cited,,12110000.0,Table 1,130788000000000.0,,,"""Networks with up to 12 million weights can successfully be trained by plain gradient descent to achieve test errors below 1% after 20-30 epochs in less than 2 hours of training.""

60k images in each MNIST epoch.

Architecture-based estimate: 6 * 12.11M * 60k * 30 = 1.31e14

We can also get a rough hardware estimate. The authors use single precision, GTX280 gets 6.221e11 FLOPs in single precision. Training 30 epochs takes less than 2 hours, but on each epoch the training set is augmented in online fashion, which takes 93 seconds.
(2*3600 - 93*30) * 6.221e11 * 0.3 = 8.23e14

The architecture approach seems less uncertain.",MNIST,,60000.0,"""MNIST consists of two datasets, one for training (60,000 images) and one for testing (10,000 images). Many studies divide the training set into two sets consisting of 50,000 images for training and 10,000 for validation. Our network is trained on slightly deformed images, continually generated in on-line fashion; hence we may use the whole un-deformed training set for validation, without wasting training images""",,2.0,"""less than 2 hours of
training""","NVIDIA GeForce GTX 280,Intel Core 2 Quad Q9450",,,,,,,Likely,2025-02-13 20:29:39+00:00,"Switzerland,Switzerland,Switzerland",,,,,,,,,
Stacked Denoising Autoencoders,Other,"University of Montreal / Université de Montréal,University of Toronto","Academia,Academia","P Vincent, H Larochelle, I Lajoie, Y Bengio",2010-01-03,Stacked denoising autoencoders: Learning useful representations in a deep network with a local denoising criterion,https://www.jmlr.org/papers/v11/vincent10a.html,6908.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:44+00:00,"Canada,Canada",,,,,,,,,
Super-vector coding,Vision,"University of Illinois Urbana-Champaign (UIUC),NEC Laboratories,Rutgers University","Academia,Industry,Academia","Xi Zhou, Kai Yu, Tong Zhang, and Thomas S. Huang",2010-01-01,Image Classification using Super-Vector Coding of Local Image Descriptors,http://tongzhang-ml.org/papers/eccv10_supervect.pdf,696.0,SOTA improvement,"""Our experiments demonstrate that the proposed classification method achieves state-of-the-art accuracy on the well-known PASCAL benchmarks.""",1025.0,"Somewhat low confidence, but it seems like the number of learnable parameters is the size of the codebook, plus parameters in the SVM used for classification. Since it is a linear SVM, there will be one parameter per input feature, plus a single bias term.

So in total, 512 learnable codebook values, plus 513 SVM parameters = 1025 parameters",,,,,"PASCAL VOC 2007,PASCAL VOC 2009","""PASCAL VOC 2007 consists of 9,963 images which are divided into
three subsets: training data (2501 images), validation data (2510 images), and test data (4952 images). PASCAL VOC 2009 consists of 14,743 images and correspondingly are divided into three subsets: training data(3473 images), validation data(3581 images), and testing data (7689 images).""",1000000.0,"""PASCAL VOC 2007 consists of 9,963 images which are divided intothree subsets: training data (2501 images), validation data (2510 images), and
test data (4952 images). PASCAL VOC 2009 consists of 14,743 images and correspondingly are divided into three subsets: training data(3473 images), validation data(3581 images), and testing data (7689 images).""

PASCAL VOC 2009 is the larger experiment; images used in training is 3473 + 3581 = 7,054

For each image, the inputs for the codebook training are generated as follows: ""128-dimensional SIFT vectors are extracted over a grid with spacing of 4 pixels on three patch scales (16x16,25x25 and 31x31). The dimension of descriptors is reduced to 80 by applying principal component analysis (PCA). The codebooks C are trained on one million randomly sampled descriptors""

Loss function for learning the SV coding seems to look at the L2 loss on SIFT vectors, so there should be one gradient per descriptor, i.e. 1M inputs.",,,,,,,,,,,Speculative,2024-10-08 17:37:09+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
LCNP LabelMe,Vision,,,"Rafael Uetz, Sven Behnke",2009-11-22,"Large-scale object recognition with CUDA-accelerated hierarchical neural networks
",https://ieeexplore.ieee.org/document/5357786,,Historical significance,,13729792.0,"Locally connected: 128*128*4*4*4*7 + 64*64*8*4*4*4 + 32*32*16*4*4*8 + 16*16*32*4*4*16=13631488
Classification head: 16*16*32*12=98304
Total: 13631488+98304=13729792
""five regular layers with the dimensions 256×256, 128×128, . . ., 16×16.""
""size of the receptive field to be 4 × 4 neurons""",3295150080000000.0,,,2*13729792*3*40000*1000=3295150080000000,,,40000.0,Table 1,1000.0,,,,,Supervised,"Robust recognition of arbitrary object classes in natural visual scenes is an aspiring goal with numerous practical applications, for instance, in the area of autonomous robotics and autonomous vehicles. One obstacle on the way towards human-like recognition performance is the limitation of computational power, restricting the size of the training and testing dataset as well as the complexity of the object recognition system. In this work, we present a hierarchical, locally-connected neural network model that is well-suited for large-scale, high-performance object recognition. By using the NVIDIA CUDA framework, we create a massively parallel implementation of the model which is executed on a state-of-the-art graphics card. This implementation is up to 82 times faster than a single-core CPU version of the system. This significant gain in computational performance allows us to evaluate the model on a very large, realistic, and challenging set of natural images which we extracted from the LabelMe dataset. To compare our model to other approaches, we also evaluate the recognition performance using the well-known MNIST and NORB datasets, achieving a testing error rate of 0.76% and 2.87%, respectively.",,,,Unverified,2025-02-17 20:53:53+00:00,,,,,,,,,,
LCNP MNIST,Vision,,,"Rafael Uetz, Sven Behnke",2009-11-22,"Large-scale object recognition with CUDA-accelerated hierarchical neural networks
",https://ieeexplore.ieee.org/document/5357786,,Historical significance,,11616256.0,"Locally connected: 128*128*4*4*4*5 + 64*64*8*4*4*4 + 32*32*16*4*4*8 + 16*16*32*4*4*16=11534336
Classification head: 16*16*32*10=81920
Total: 11534336+81920=11616256
""five regular layers with the dimensions 256×256, 128×128, . . ., 16×16.""
""size of the receptive field to be 4 × 4 neurons""",4181852160000000.0,,,2*11616256*3*60000*1000=4181852160000000,MNIST,,60000.0,,1000.0,,,,,Supervised,"Robust recognition of arbitrary object classes in natural visual scenes is an aspiring goal with numerous practical applications, for instance, in the area of autonomous robotics and autonomous vehicles. One obstacle on the way towards human-like recognition performance is the limitation of computational power, restricting the size of the training and testing dataset as well as the complexity of the object recognition system. In this work, we present a hierarchical, locally-connected neural network model that is well-suited for large-scale, high-performance object recognition. By using the NVIDIA CUDA framework, we create a massively parallel implementation of the model which is executed on a state-of-the-art graphics card. This implementation is up to 82 times faster than a single-core CPU version of the system. This significant gain in computational performance allows us to evaluate the model on a very large, realistic, and challenging set of natural images which we extracted from the LabelMe dataset. To compare our model to other approaches, we also evaluate the recognition performance using the well-known MNIST and NORB datasets, achieving a testing error rate of 0.76% and 2.87%, respectively.",,,,Unverified,2025-02-17 20:54:47+00:00,,,,,,,,,,
LCNP NORB,Vision,,,"Rafael Uetz, Sven Behnke",2009-11-22,"Large-scale object recognition with CUDA-accelerated hierarchical neural networks
",https://ieeexplore.ieee.org/document/5357786,,Historical significance,,16818176.0,"Locally connected: 128*128*4*4*4*10 + 64*64*8*4*4*4 + 32*32*16*4*4*8 + 16*16*32*4*4*16=16777216
Classification head: 16*16*32*5=40960
Total: 16777216+40960=16818176
""five regular layers with the dimensions 256×256, 128×128, . . ., 16×16.""
""size of the receptive field to be 4 × 4 neurons""",2452090060800000.0,,,2*16818176*3*24300 *1000=2452090060800000,NORB,,24300.0,,1000.0,,,,,Supervised,"Robust recognition of arbitrary object classes in natural visual scenes is an aspiring goal with numerous practical applications, for instance, in the area of autonomous robotics and autonomous vehicles. One obstacle on the way towards human-like recognition performance is the limitation of computational power, restricting the size of the training and testing dataset as well as the complexity of the object recognition system. In this work, we present a hierarchical, locally-connected neural network model that is well-suited for large-scale, high-performance object recognition. By using the NVIDIA CUDA framework, we create a massively parallel implementation of the model which is executed on a state-of-the-art graphics card. This implementation is up to 82 times faster than a single-core CPU version of the system. This significant gain in computational performance allows us to evaluate the model on a very large, realistic, and challenging set of natural images which we extracted from the LabelMe dataset. To compare our model to other approaches, we also evaluate the recognition performance using the well-known MNIST and NORB datasets, achieving a testing error rate of 0.76% and 2.87%, respectively.",,,,Unverified,2025-02-17 20:55:03+00:00,,,,,,,,,,
3D city reconstruction,3D modeling,"University of Washington,Microsoft Research,Cornell University","Academia,Industry,Academia","Sameer Agarwal, Noah Snavely, Ian Simon, Steven M. Seitz and Richard Szeliski",2009-09-29,Building Rome in a Day,https://grail.cs.washington.edu/rome/,2234.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:03:45+00:00,"United States of America,United States of America,United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
BellKor 2007,Recommendation,AT&T,Industry,"RM Bell, Y Koren, C Volinsky",2009-09-21,The BellKor solution to the Netflix Prize,https://www.semanticscholar.org/paper/The-BellKor-solution-to-the-Netflix-Prize-Bell-Koren/f4ebb542c752a0dc423f94fd121e2edb8f6275ba,241.0,SOTA improvement,Won Netflix prize,,,,,,,Netflix Prize,,100480507.0,"The training data set consists of 100,480,507
ratings",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Polarity Classifier,Language,"University of Edinburgh,University of Pittsburgh","Academia,Academia","Theresa Wilson, Janyce Wiebe, Paul Hoffmann.",2009-09-01,Recognizing Contextual Polarity: An Exploration of Features for Phrase-Level Sentiment Analysis,https://aclanthology.org/J09-3003.pdf,866.0,,,,,,,,,,,11112.0,"Section 3.3 reveals there are 11,112 sentences. Since this is phrase-level sentiment analysis sentences seem like the best unit",,,,,,,,,,,,2024-09-15 21:45:05+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
Two Stage Feature Extraction (MNIST),Vision,New York University (NYU),Academia,"Kevin Jarrett, K. Kavukcuoglu, Marc'Aurelio Ranzato, Yann LeCun",2009-09-01,What is the best multi-stage architecture for object recognition?,https://www.semanticscholar.org/paper/What-is-the-best-multi-stage-architecture-for-Jarrett-Kavukcuoglu/1f88427d7aa8225e47f946ac41a0667d7b69ac52,,"Highly cited,SOTA improvement",They claim SOTA performance on the MNIST and NORB datasets. Is also highly cited,258800.0,"CNN: 32*5*5+32*64*5*5=52000
FC: 1024*200+200*10=206800
Total: 52000+206800=258800",20754000000000.0,,,"Assuming no padding and stride 1
“on the 50,000 non-validation training samples until the best error rate on the validation set was reached (this took 30 epochs)“
First CNN layer: 2*32*24*24*5*5=921600
Second CNN layer: 2*64*16*5*5*8*8=3276800
First FC layer: 2*4*4*64*200=409600
Second FC layer: 2*200*10=4000
Total forward FLOP: 921600+3276800+409600+4000=4612000
Totral training compute: 4612000*3*30*50000=20754000000000

They train another model in this paper that I think is at least an order of magnitude larger than this one; however, they do not provide the number of epochs it was trained for, so I'm only able to calculate the FLOPs for the smaller model (which still claims SOTA performance on its own dataset). 

",MNIST,,60000.0,"""experiments were run on the MNIST dataset,
which contains 60,000 gray-scale 28x28 pixel digit images
for training and 10,000 images for testing""",33.0,,,,,,"In many recent object recognition systems, feature extraction stages are generally composed of a filter bank, a non-linear transformation, and some sort of feature pooling layer. Most systems use only one stage of feature extraction in which the filters are hard-wired, or two stages where the filters in one or both stages are learned in supervised or unsupervised mode. This paper addresses three questions: 1. How does the non-linearities that follow the filter banks influence the recognition accuracy? 2. does learning the filter banks in an unsupervised or supervised manner improve the performance over random filters or hardwired filters? 3. Is there any advantage to using an architecture with two stages of feature extraction, rather than one? We show that using non-linearities that include rectification and local contrast normalization is the single most important ingredient for good accuracy on object recognition benchmarks. We show that two stages of feature extraction yield better accuracy than one. Most surprisingly, we show that a two-stage system with random filters can yield almost 63% recognition rate on Caltech-101, provided that the proper non-linearities and pooling layers are used. Finally, we show that with supervised refinement, the system achieves state-of-the-art performance on NORB dataset (5.6%) and unsupervised pre-training followed by supervised refinement produces good accuracy on Caltech-101 (≫ 65%), and the lowest known error rate on the undistorted, unprocessed MNIST dataset (0.53%).",,Unreleased,,Unverified,2025-02-19 17:39:22+00:00,United States of America,,,,,,,,,
ConvNet Processor,Vision,Courant Institute of Mathematical Sciences,Academia,"Clément Farabet, Cyril Poulet, Jefferson Y Han, Yann LeCun",2009-08-31,CNP: An FPGA-based processor for convolutional networks,https://ieeexplore.ieee.org/abstract/document/5272559/,,,,14423.0,"C1: 6x7x7
C3: 61x7x7
C5: 305x6x6
F6: 80x2
Total = 14423",306000000000000.0,,,"(2*340 million) * 3 * 30000 * 5
""340 million connection network""
operations per fwd pass ~= 2*340 million
""With a fixed detection threshold, the system reaches a roughly 3% equal error rate on this dataset after only 5 training epochs through the training set.""
",,"""The network was trained on a dataset of faces and non-faces according to the method described in [2]. The dataset contained 45,000 images from various sources, of which 30,000 were used for training, and 15,000 for testing. Each set contains 50% faces, and 50% random images (non faces). The face examples include a wide variety of angles, and slight variations of size and position within the window to improve the robustness of the detector.""",30000.0,"""The dataset contained 45,000 images from various sources, of which 30,000
were used for training, and 15,000 for testing""",5.0,,,,,,"Convolutional networks (ConvNets) are biologically inspired hierarchical architectures that can be trained to perform a variety of detection, recognition and segmentation tasks. ConvNets have a feed-forward architecture consisting of multiple linear convolution filters interspersed with pointwise non-linear squashing functions. This paper presents an efficient implementation of ConvNets on a low-end DSP-oriented field programmable gate array (FPGA). The implementation exploits the inherent parallelism of ConvNets and takes full advantage of multiple hardware multiply accumulate units on the FPGA. The entire system uses a single FPGA with an external memory module, and no extra parts. A network compiler software was implemented, which takes a description of a trained ConvNet and compiles it into a sequence of instructions for the ConvNet Processor (CNP). A ConvNet face detection system was implemented and tested. Face detection on a 512 times 384 frame takes 100 ms (10 frames per second), which corresponds to an average performance of 3.4 times 10 9 connections per second for this 340 million connection network. The design can be used for low-power, lightweight embedded vision systems for micro-UAVs and other small robots.",,Unreleased,,Likely,2025-02-17 18:42:46+00:00,United States of America,,,,,,,,,
MatrixFac for Recommenders,Recommendation,"Yahoo Research,AT&T","Industry,Industry","Yehuda Koren, Robert Bell, and Chris Volinsky",2009-08-07,Matrix factorization techniques for recommender systems,https://ieeexplore.ieee.org/document/5197422,9234.0,Highly cited,,,,,,,,Netflix Prize,,100480507.0,,,,,,,,,,,,,2024-11-01 14:04:08+00:00,"United States of America,United States of America",,,,,,,,,
RL mapping instructions (troubleshooting),Language,Massachusetts Institute of Technology (MIT),Academia,"SRK Branavan, H Chen, LS Zettlemoyer, R Barzilay",2009-08-02,Reinforcement Learning for Mapping Instructions to Actions,https://aclanthology.org/P09-1010/,318.0,,,133140.0,"""We use a policy gradient
algorithm to estimate the parameters of a log-linear model for action selection [...] In total, there are 4,438 features [in the Windows domain]. [...]  This difficulty can be attributed in part to the large branching factor of possible actions at each step — on average, there are 27.14 choices per action in the Windows domain""",,,,,Windows Help and Support,,1327.36,"Shown at beginning of section 7
Total number of documents is 128, average number of actions per document is 10.37",,,,,,,,,,,,2024-11-01 14:04:09+00:00,United States of America,,,,,,,,,
BellKor 2009,Recommendation,AT&T,Industry,Y Koren,2009-08-01,The BellKor Solution to the Netflix Grand Prize,https://www2.seas.gwu.edu/~simhaweb/champalg/cf/papers/KorenBellKor2009.pdf,513.0,Historical significance,Introduced new algorithms; won Netflix Grand Prize,,,,,,,Netflix Prize,,100480507.0,"""Netflix provided a training data set of 100,480,507 ratings that 480,189 users gave to 17,770 movies.""",,,,,,,,,,,,2024-11-01 14:04:08+00:00,United States of America,,,,,,,,,
RL mapping instructions (games),Language,Massachusetts Institute of Technology (MIT),Academia,"SRK Branavan, H Chen, LS Zettlemoyer, R Barzilay",2009-08-01,Reinforcement Learning for Mapping Instructions to Actions,https://aclanthology.org/P09-1010/,318.0,,,80940.0,"""We use a policy gradient
algorithm to estimate the parameters of a log-linear model for action selection [...] In total, there are 8,094 features [in the Crossblock domain]. [...]  This difficulty can be attributed in part to the large branching factor of possible actions at each step — on average, there are [...] 9.78 [actions] in the Crossblock
domain""",,,,,Windows Help and Support,,293.0,"Shown at beginning of section 7
Total number of documents is 50, average number of actions per document is 5.86

source: https://en.wikipedia.org/wiki/Netflix_Prize",,,,,,,,,,,,2024-11-01 14:04:09+00:00,United States of America,,,,,,,,,
BellKor 2008,Recommendation,AT&T,Industry,"RM Bell, Y Koren, C Volinsky",2009-08-01,The BellKor 2008 Solution to the Netflix Prize,https://cseweb.ucsd.edu/classes/fa17/cse291-b/reading/ProgressPrize2008_BellKor.pdf,162.0,SOTA improvement,Won Netflix prize,,,,,,,Netflix Prize,,100480507.0,"""Netflix provided a training data set of 100,480,507 ratings that 480,189 users gave to 17,770 movies.""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Pragmatic Theory solution (Netflix 2009),Recommendation,Pragmatic Theory Inc.,Industry,"M Piotte, M Chabbert",2009-08-01,The Pragmatic Theory solution to the Netflix Grand Prize,https://www.asc.ohio-state.edu/statistics/statgen/joul_aut2009/PragmaticTheory.pdf,111.0,SOTA improvement,Netflix grand prize winner (along with two other teams),,"This is an ensemble of many smaller models. Ideally, the number of parameters of all the sub-models should be added up and recorded here.",,,,"This is an ensemble of many smaller models. Ideally, the training compute of all the sub-models should be added up and recorded here.",Netflix Prize,,100480507.0,"""Netflix provided a training data set of 100,480,507 ratings that 480,189 users gave to 17,770 movies.""",,,,,,,,,,,Confident,2024-09-05 18:08:31+00:00,Canada,,,,,,,,,
BigChaos OptiBlend,Recommendation,AT&T,Industry,"A Töscher, M Jahrer, RM Bell",2009-08-01,The BigChaos Solution to the Netflix Grand Prize,https://www.asc.ohio-state.edu/statistics/statgen/joul_aut2009/BigChaos.pdf,237.0,SOTA improvement,"won Netflix prize
",,,,,,,Netflix Prize,,100480507.0,"""Netflix provided a training data set of 100,480,507 ratings that 480,189 users gave to 17,770 movies.""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
GPU DBNs,Other,Stanford University,Academia,"R Raina, A Madhavan, AY Ng",2009-06-15,Large-scale Deep Unsupervised Learning using Graphics Processors,https://dl.acm.org/doi/abs/10.1145/1553374.1553486?utm_campaign=The+Batch&utm_source=hs_email&utm_medium=email&_hsenc=p2ANqtz-95Z7-X4Dl-RJK6gYKvjyDIrYaGhBeqWoc0ldqyPEKni0Ip6UE7452hr-ygY52z00LBpYgM,1032.0,Highly cited,,100000000.0,"""For example, we are able to reduce the time required to learn a four-layer DBN with 100 million free parameters from several weeks to around a single day.""",1000000000000000.0,,,https://www.getguesstimate.com/models/19602,,,1000000.0,"Table 2 shows the running time for processing 1 million
examples for RBMs of varying size",,,,,,,,,,,,2025-02-17 18:42:34+00:00,United States of America,,,,,,GPU DBNs,,,
Conv-DBN,Vision,Stanford University,Academia,"H Lee, R Grosse, R Ranganath, AY Ng",2009-06-14,Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations,https://dl.acm.org/doi/10.1145/1553374.1553453,2964.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 02:50:49+00:00,United States of America,,,,,,,,,
Deep Boltzmann Machines,Other,University of Toronto,Academia,"Ruslan Salakhutdinov, Geoffrey Hinton",2009-04-16,Deep Boltzmann Machines,https://www.sciencedirect.com/topics/computer-science/deep-boltzmann-machine,2666.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 04:34:20+00:00,Canada,,,,,,,,,
RBM Image Classifier,Vision,University of Toronto,Academia,Alex Krizhevsky,2009-04-08,Learning Multiple Layers of Features from Tiny Images,https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf,32057.0,Highly cited,,80000000.0,"Best performing model (see Figure 3.1) had 10,000 hidden units in one hidden layer and 8000 visible units",,,,,CIFAR-10,"This paper is the origin of CIFAR-10. However, CIFAR-10 is a labeled subset of all the training data used

""The tiny images dataset on which we based all of our experiments was collected by colleagues at MIT and NYU over the span of six months; it is described in detail in [14]. They assembled it by searching the web for images of every non-abstract English noun in the lexical database WordNet[15, 8]. They used several search engines, including Google, Flickr, and Altavista and kept roughly the rst 3000 results for each search term. After collecting all the images for a particular search term, they removed perfect duplicates and images in which an excessively large portion of the pixels were white, as they tended to be synthetic gures rather than natural images. The search term used to nd an image provides it with a rough label, although it is extremely unreliable due to the nature of online image search technology.
In total, the dataset contains 80 million colour images downscaled to 32 × 32 and spread out across 79000 search terms. Most of our experiments with unsupervised learning were performed on a subset of about 2 million images.""

""We paid students to label a subset of the tiny images dataset... We call this the CIFAR-10 dataset, after the Canadian Institute for Advanced Research, which funded the project""",2000000.0,,,,,,,,"Groups at MIT and NYU have collected a dataset of millions of tiny colour images from the web. It
is, in principle, an excellent dataset for unsupervised training of deep generative models, but previous
researchers who have tried this have found it dicult to learn a good set of lters from the images.
We show how to train a multi-layer generative model that learns to extract meaningful features which
resemble those found in the human visual cortex. Using a novel parallelization algorithm to distribute
the work among multiple machines connected on a network, we show how training such a model can be
done in reasonable time.
A second problematic aspect of the tiny images dataset is that there are no reliable class labels
which makes it hard to use for object recognition experiments. We created two sets of reliable labels.
The CIFAR-10 set has 6000 examples of each of 10 classes and the CIFAR-100 set has 600 examples of
each of 100 non-overlapping classes. Using these labels, we show that object recognition is signicantly
improved by pre-training a layer of features on a large set of unlabeled tiny images.",,,,Likely,2024-11-01 14:04:09+00:00,Canada,,,,,,,,,
Long-Range Autonomous Off-Road Driving System,"Vision,Robotics,Driving",Courant Institute of Mathematical Sciences,Academia,"Raia Hadsell, Pierre Sermanet, Jan Ben, Ayse Erkan, Marco Scoffier, Koray Kavukcuoglu, Urs Muller, Yann LeCun",2009-01-08,Learning long‐range vision for autonomous off‐road driving,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.20276,,,,12410.0,"C1: 20x7x6
C3: 369x6x5
F4: 100x5

""This particular network has two convolutional
layers and one subsampling layer. The first convolutional layer has 20 7 × 6 filters, and the second layer has 369 6 × 5 filters. The layers are not fully connected; in particular, the Y, U, and V filters are kept
separate throughout the two layers. For
the purposes of training, a final 100-component, fully
connected layer is trained with five outputs""",278721000000000.0,,,"Every filter is only connected to ⅓ of the input channels: “The layers are not fully connected; in particular, the Y, U, and V filters are kept separate throughout the two layers.”
The text of the paper and Figure 7 don’t match, the text mentions an additional D=369 convolutional layer that is not represented in the Figure
Input: 12*25
1st CNN: 2*12*25*(3/3)*7*6*20=240000
Size after layer: 6*20*20
Size after pooling layer (1x4): 6*5*20
2nd CNN: 2*6*5*(20/3)*6*5*369=4428000
FC: 2*6*5*369*100=2214000
Total forward FLOP: 240000+4428000+2214000=6882000
Total training compute: 6882000*3*450000*30=278721000000000=2.8e14


""The network was initialized with random values
and trained for 30 epochs""",,"""The offline data set consists of samples, either labeled or unlabeled, taken randomly from 130 diverse
log files. Image preprocessing and stereo labeling of
these samples was identical to the online process described in other sections of this paper""",450000.0,"""The training set contained 450,000 labeled image patches""",30.0,,,,,,"Most vision-based approaches to mobile robotics suffer from the limitations imposed by stereo obstacle detection, which is short range and prone to failure. We present a self-supervised learning process for long-range vision that is able to accurately classify complex terrain at distances up to the horizon, thus allowing superior strategic planning. The success of the learning process is due to the self-supervised training data that are generated on every frame: robust, visually consistent labels from a stereo module; normalized wide-context input windows; and a discriminative and concise feature representation. A deep hierarchical network is trained to extract informative and meaningful features from an input image, and the features are used to train a real-time classifier to predict traversability. The trained classifier sees obstacles and paths from 5 to more than 100 m, far beyond the maximum stereo range of 12 m, and adapts very quickly to new environments. The process was developed and tested on the LAGR (Learning Applied to Ground Robots) mobile robot. Results from a ground truth data set, as well as field test results, are given.",,Unreleased,,Unverified,2025-02-17 20:55:21+00:00,United States of America,,,,,,,,,
BP-DBN,Speech,University of Toronto,Academia,"Abdel-rahman Mohamed, George Dahl, and Geoffrey Hinton",2009-01-01,Deep Belief Networks for phone recognition,https://www.cs.utoronto.ca/~gdahl/papers/dbnPhoneRec.pdf,,"Historical significance,SOTA improvement",,18030592.0,"429*2048+2048*2048*4+2048*183=18030592

Table 2: largest model has 5 layers of 2048 into 183 softmax, 429 input",,,,,TIMIT,,,,,,,,1.0,Supervised,"Hidden Markov Models (HMMs) have been the state-of-the-art techniques for
acoustic modeling despite their unrealistic independence assumptions and the very limited representational capacity of their hidden states. There are many proposals in the research community for deeper models that are capable of modeling the many types of variability present in the speech generation process. Deep Belief Networks (DBNs) have recently proved to be very effective for a variety of machine learning problems and this paper applies DBNs to acoustic modeling. On the standard TIMIT corpus, DBNs consistently outperform other techniques and
the best DBN achieves a phone error rate (PER) of 23.0% on the TIMIT core test
set.",,Unreleased,,Unverified,2024-11-07 09:04:20+00:00,Canada,,,,,,,,,
Semantic Hashing,Language,University of Toronto,Academia,"R Salakhutdinov, G Hinton",2008-12-10,Semantic Hashing,https://www.cs.cmu.edu/~rsalakhu/papers/sdarticle.pdf,1487.0,Highly cited,,2600000.0,,,,,,,,310521.0,Section 4.1,,,,,,,,,,,,2024-09-15 21:50:48+00:00,Canada,,,,,,,,,
GNN,Other,University of Siena,,Franco Scarselli; Marco Gori; Ah Chung Tsoi; Markus Hagenbuchner; Gabriele Monfardini,2008-12-09,The Graph Neural Network Model,https://ieeexplore.ieee.org/document/4700287,,"Historical significance,Highly cited",,30.0,"5*5+5=30
(3 layer network with 5 hidden neurons)",1614600000.0,,,2*30 parameters *5000 epochs *207 training examples*26 nodes per example=1614600000,,,207.0,,5000.0,,,,1.0,Supervised,"Many underlying relationships among data in several areas of science and engineering, e.g., computer vision, molecular chemistry, molecular biology, pattern recognition, and data mining, can be represented in terms of graphs. In this paper, we propose a new neural network model, called graph neural network (GNN) model, that extends existing neural network methods for processing the data represented in graph domains. This GNN model, which can directly process most of the practically useful types of graphs, e.g., acyclic, cyclic, directed, and undirected, implements a function tau(G,n) isin IR m that maps a graph G and one of its nodes n into an m -dimensional Euclidean space. A supervised learning algorithm is derived to estimate the parameters of the proposed GNN model. The computational cost of the proposed algorithm is also considered. Some experimental results are shown to validate the proposed learning algorithm, and to demonstrate its generalization capabilities.",,Open weights (unrestricted),,Unverified,2025-02-17 18:42:06+00:00,Italy,,,,,,,,,
HLBL,Language,University of Toronto,Academia,"A. Mnih, Geoffrey E. Hinton",2008-12-08,A Scalable Hierarchical Distributed Language Model,https://www.semanticscholar.org/paper/A-Scalable-Hierarchical-Distributed-Language-Model-Mnih-Hinton/a9fc84f8abe740cdc7ee82e69444d1d00dbe0ceb,,Highly cited,,1846400.0,"""Except for where stated otherwise, the models used for the experiments used 100 dimensional feature vectors and a context size of 5.""
""The vocabulary size for this dataset is 17964.""
Embedding: 17964 * 100 = 1796400
Context matrices: 5 * 100 * 100 = 50000
Unembedding: 0 (tied embedding “while the matrix of weights from the hidden layer to the output layer is simply the feature vector matrix R”)
Total: 1796400 + 50000 = 1846400
",,,,"6ND: 6 * 1846400 * 14000000 = 155,097,600,000,000 FLOP per epoch.
Not stated how many epochs for training.",,"""APNews dataset containing the Associated Press news stories from 1995 and 1996.""",14000000.0,"""The dataset consists of a 14 million word training set""",,,HLBL with largest tree (T7) takes 32 minutes per epoch. Unstated how many epochs they trained for.,,,,"Neural probabilistic language models (NPLMs) have been shown to be competitive with and occasionally superior to the widely-used n-gram language models. The main drawback of NPLMs is their extremely long training and testing times. Morin and Bengio have proposed a hierarchical language model built around a binary tree of words, which was two orders of magnitude faster than the non-hierarchical model it was based on. However, it performed considerably worse than its non-hierarchical counterpart in spite of using a word tree created using expert knowledge. We introduce a fast hierarchical language model along with a simple feature-based algorithm for automatic construction of word trees from the data. We then show that the resulting models can outperform non-hierarchical neural models as well as the best n-gram models.",,,,Confident,2024-09-23 22:56:36+00:00,Canada,,,,,,,,,
ADAPTIVE NLPM,Language,University of Toronto,Academia,"Andriy Mnih, Geoffrey Hinton",2008-12-08,A Scalable Hierarchical Distributed Language Model,https://papers.nips.cc/paper_files/paper/2008/file/1e056d2b0ebd5c878c550da6ac5d3724-Paper.pdf,1297.0,Highly cited,,12198000.0,"None given but it does say "" Since each non-leaf node in a tree has its own feature vector, the number of free parameters associated with the tree is linear in this quantity"", and the largest model (T7: ADAPATIVE(0.4) x 4) has 121980 of them. The feature vectors are 100-dimensional. I've done the dubious thing of multiplying the two to give an estimate.",,,,,,,14000000.0,"""The dataset consists of a 14 million word training set""",,,"32 minutes per epoch for the largest model, but unfortunately no epoch count given.

""Models were trained using the learning rate of 10^−3 until the perplexity on the validation set started to increase. Then the learning rate was reduced to 3 × 10^−5 and training was resumed until the validation perplexity started increasing again.""",,,Unsupervised,"Neural probabilistic language models (NPLMs) have been shown to be competitive with and occasionally superior to the widely-used n-gram language models. The main drawback of NPLMs is their extremely long training and testing times. Morin and Bengio have proposed a hierarchical language model built around a binary tree of words, which was two orders of magnitude faster than the nonhierarchical model it was based on. However, it performed considerably worse than its non-hierarchical counterpart in spite of using a word tree created using expert knowledge. We introduce a fast hierarchical language model along with a simple feature-based algorithm for automatic construction of word trees from the data. We then show that the resulting models can outperform non-hierarchical neural models as well as the best n-gram models.",,Unreleased,,Confident,2024-09-24 15:40:12+00:00,Canada,,,,,,,,,
BigChaos 2008,Recommendation,AT&T,Industry,"A Töscher, M Jahrer",2008-11-25,The BigChaos Solution to the Netflix Prize 2008,https://www.asc.ohio-state.edu/statistics/statgen/joul_aut2009/BigChaos.pdf,35.0,Historical significance,Winners of the 2008 Netflix Price,,,,,,,Netflix Prize,,100480507.0,"""Netflix provided a training data set of 100,480,507 ratings that 480,189 users gave to 17,770 movies.""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Sparse digit recognition SVM,Vision,University of Lubeck,Academia,"Kai Labusch, Erhadt Barth, Thomas Martinetz",2008-11-19,Simple method for high-performance digit recognition based on sparse coding,https://pubmed.ncbi.nlm.nih.gov/19000969/,124.0,SOTA improvement,"""Finally, we train a support vector machine (SVM) on the resulting feature vectors and obtain state-of-the-art classification performance in the digit recognition task defined by the MNIST benchmark""",,,,,,,,,,,,,,,,,"In this brief paper, we propose a method of feature extraction for digit recognition that is inspired by vision research: a sparse-coding strategy and a local maximum operation. We show that our method, despite its simplicity, yields state-of-the-art classification results on a highly competitive digit-recognition benchmark. We first employ the unsupervised Sparsenet algorithm to learn a basis for representing patches of handwritten digit images. We then use this basis to extract local coefficients. In a second step, we apply a local maximum operation to implement local shift invariance. Finally, we train a support vector machine (SVM) on the resulting feature vectors and obtain state-of-the-art classification performance in the digit recognition task defined by the MNIST benchmark. We compare the different classification performances obtained with sparse coding, Gabor wavelets, and principal component analysis (PCA). We conclude that the learning of a sparse representation of local image patches combined with a local maximum operation for feature extraction can significantly improve recognition performance.",,,,Unknown,2024-11-11 01:09:48+00:00,Germany,,,,,,,,,
Boss (DARPA Urban Challenge),Driving,Carnegie Mellon University (CMU),Academia,"Chris Urmson, Joshua Anhalt, Drew Bagnell,Christopher Baker, Robert Bittner,M. N. Clark, John Dolan, Dave Duggins,Tugrul Galatali, Chris Geyer,Michele Gittleman, Sam Harbaugh,Martial Hebert, Thomas M. Howard,Sascha Kolski, Alonzo Kelly,Maxim Likhachev, Matt McNaughton,Nick Miller, Kevin Peterson, Brian Pilnick,Raj Rajkumar, Paul Rybski, Bryan Salesky,Young-Woo Seo, Sanjiv Singh, Jarrod Snider,Anthony Stentz, William “Red” Whittaker,Ziv Wolkowicki, and Jason Ziglar",2008-07-23,Autonomous driving in urban environments: Boss and the Urban Challenge,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.20255,1840.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Stacked Semisuperviser Autoencoders,Language,"New York University (NYU),Microsoft","Academia,Industry","MA Ranzato, M Szummer",2008-07-15,Semisupervised learning of compact document representations with deep networks,https://dl.acm.org/doi/10.1145/1390156.1390256,243.0,,,3000000.0,,,,,,,,66087.0,"""The 20 Newsgroups dataset contains 18845
postings taken from the Usenet newsgroup collection.
Documents are partitioned into 20 topics. The dataset
is split into 11314 training documents and 7531 test
documents. Training and test articles are separated in
time. Reuters has a predefined ModApte split of the
data into 11413 training documents and 4024 test doc-
uments. Documents belong to one of 91 topics. The
Ohsumed dataset has 34389 documents with 30689
words and each document might be assigned to more
than one topic, for a total of 23 topics. The dataset is
split into training and test by randomly selecting the
67% and the 33% of the data""

total # documents = 11314 + 11413 + 34389*0.6

I'm using #documents here since the task is document representation. Using #words would increase the size by ~3 OOMs",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America",,,,,,,,,
Denoising Autoencoders,Other,University of Montreal / Université de Montréal,Academia,"Pascal Vincent, Hugo Larechelle, Yoshua Bengio, Pierre- Antoine Manzagol",2008-07-05,Extracting and Composing Robust Features with Denoising Autoencoders,https://dl.acm.org/doi/10.1145/1390156.1390294,7192.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:04:08+00:00,Canada,,,,,,,,,
Semi-Supervised Embedding for DL,Other,"Google,NUANCE Communications,IDIAP,University of Illinois Urbana-Champaign (UIUC)","Industry,Industry,Academia,Academia","Jason Weston, Frederick, Ratle, Hossein Mobahi, Ronan Collobert",2008-07-05,Deep Learning via Semi-Supervised Embedding,https://dl.acm.org/doi/10.1145/1390156.1390303,1087.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 13:33:28+00:00,"United States of America,United States of America,Switzerland,United States of America",,,,,,,,,
Deep Multitask NLP Network,Language,NEC Laboratories,Industry,"Ronan Collobert, Jason Weston",2008-07-05,"A Unified Architecture for Natural Language Processing: Deep Neural Networks with Multitask Learning
",http://icml2008.cs.helsinki.fi/papers/391.pdf,7095.0,"Highly cited,SOTA improvement",,1500000.0,"With a word vector size of 50 and a vocabulary size of 30,000, the embedding matrix has 1,500,000 parameters. There are also some small convolutional and dense layers with far fewer parameters.",,,,,"PropBank,Penn TreeBank,Wikipedia","PropBank (1M words) for semantic role labeling task
Penn Treebank (1M words) for part-of-speech tagging and chunking tasks
Stanford NER dataset for named entity recognition task
Wikipedia text (631M words) for unsupervised pretraining",633000000.0,"Section 7: ""631 million words
from Wikipedia""",,168.0,1 week on 1 computer,,,Unsupervised,"We describe a single convolutional neural network architecture that, given a sentence, outputs a host of language processing predictions: part-of-speech tags, chunks, named entity tags, semantic roles, semantically similar words and the likelihood that the sentence makes sense (grammatically and semantically) using a language model. The entire network is trained jointly on all these tasks using weight-sharing, an instance of multitask learning. All the tasks use labeled data except the language model which is learnt from unlabeled text and represents a novel form of semi-supervised learning for the shared tasks. We show how both multitask learning and semi-supervised learning improve the generalization of the shared tasks, resulting in stateof-the-art performance.",,,,Speculative,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Multiscale deformable part model,Vision,"UC Irvine,University of Chicago,Toyota Technological Institute at Chicago","Academia,Academia,Academia","Pedro Felzenszwalb, David McAllester, Deva Ramanan",2008-06-23,"A discriminatively trained, multiscale, deformable part model",https://ieeexplore.ieee.org/abstract/document/4587597,3093.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
BLSTM for handwriting (2),Vision,"University of Bern,IDSIA,Technical University of Munich","Academia,Academia,Academia","Alex Graves, Marcus Liwicki, Horst Bunke, Jürgen Schmidhuber, Santiago Fernández",2007-12-03,Unconstrained online handwriting recognition with recurrent neural networks,https://proceedings.neurips.cc/paper/2007/hash/4b0250793549726d5c1ea3906726ebfe-Abstract.html,341.0,SOTA improvement,"""In experiments on an unconstrained
online database, we record excellent results using either raw or preprocessed data, well outperforming a state-of-the-art HMM based system in both cases.""",100881.0,"For the raw input representation,
there were 4 input units and a total of 100,881 weights",,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,"Switzerland,Switzerland,Germany",,,,,,,,,
Enhanced Neighborhood-Based Filtering,Recommendation,AT&T,Industry,"RM Bell, Y Koren",2007-10-28,Scalable Collaborative Filtering with Jointly Derived Neighborhood Interpolation Weights,https://ieeexplore.ieee.org/abstract/document/4470228,687.0,SOTA improvement,"""We evaluate these methods on the Netflix dataset, where they deliver significantly better results than the commercial Netflix Cinematch recommender system.""",,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-15 21:45:54+00:00,United States of America,,,,,,,,,
BLSTM for handwriting (1),Vision,"University of Bern,IDSIA,Technical University of Munich","Academia,Academia,Academia","M Liwicki, A Graves, S Fernàndez",2007-09-23,A Novel Approach to On-Line Handwriting Recognition Based on Bidirectional Long Short-Term Memory Networks,https://people.idsia.ch//~juergen/icdar_2007.pdf,287.0,SOTA improvement,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-15 21:56:53+00:00,"Switzerland,Switzerland,Germany",,,,,,,,,
Regularized SVD for Collaborative Filtering,Recommendation,Warsaw University,Academia,A Paterek,2007-08-12,Improving regularized singular value decomposition for collaborative filtering,https://www.semanticscholar.org/paper/Improving-regularized-singular-value-decomposition-Paterek/f732d0f69fe4e84a95c32706b28b9e4ef1753c61,1117.0,Highly cited,,,,,,,,Netflix Prize,,100480507.0,,,,,,,,,,,,,2024-09-15 21:47:42+00:00,Poland,,,,,,,,,
Fisher Kernel GMM,Vision,Xerox,Industry,"Florent Perronnin, Christopher Dance",2007-07-16,Fisher kernels on visual vocabularies for image categorization,https://ieeexplore.ieee.org/document/4270291,1915.0,Highly cited,,,,,,,2.5 hours on an AMD Opteron 2.4GHz with 4GB RAM,,"in-house image dataset of 19 object/scene categories

",30000.0,"""Approximately 30K images were available for training and 5K for testing. Both sets were manually multi-labeled""",,2.5,"""With Fisher kernels, the training
cost is reduced down to approximately 2h30.""",,,Supervised,"Within the field of pattern classification, the Fisher kernel is a powerful framework which combines the strengths of generative and discriminative approaches. The idea is to
characterize a signal with a gradient vector derived from a
generative probability model and to subsequently feed this
representation to a discriminative classifier. We propose to
apply this framework to image categorization where the input signals are images and where the underlying generative
model is a visual vocabulary: a Gaussian mixture model
which approximates the distribution of low-level features in
images. We show that Fisher kernels can actually be understood as an extension of the popular bag-of-visterms. Our approach demonstrates excellent performance on two challenging databases: an in-house database of 19 object/scene categories and the recently released VOC 2006 database. It is also very practical: it has low computational needs both at training and test time and vocabularies trained on one set of categories can be applied to another set without any significant loss in performance.",,,,Likely,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
SB-LM,Language,Google,Industry,"T. Brants, Ashok Popat, P. Xu, F. Och, J. Dean",2007-06-22,Large Language Models in Machine Translation,https://www.semanticscholar.org/paper/Large-Language-Models-in-Machine-Translation-Brants-Popat/ba786c46373892554b98df42df7af6f5da343c9d,,"Training cost,Highly cited",,300000000000.0,Table 2,1.4494464e+18,,,"Assuming a Nehalem based processor with 8 FLOP/cycle (https://www.agner.org/optimize/microarchitecture.pdf#page=105.06) , 2 cores and 2.33 GHz clock speed: 8*2*2330000000=37280000000 FLOP/s
Trained for 1 day on 1500 machines (Table 2)
Compute: 1500*37280000000*1*24*60*60*0.3=1449446400000000000=1.4e18
",,"Largest training set is dubbed ""web"", and is described as ""general web data, which was collected in January 2006 (2 trillion tokens)""
Table 2 indicates 1.8T tokens",1800000000000.0,Table 2,,24.0,Table 2,,1500.0,,"Systems, methods, and computer program products for machine translation are provided. In some implementations a system is provided. The system includes a language model including a collection of n-grams from a corpus, each n-gram having a corresponding relative frequency in the corpus and an order n corresponding to a number of tokens in the n-gram, each n-gram corresponding to a backoff n-gram having an order of n-1 and a collection of backoff scores, each backoff score associated with an n-gram, the backoff score determined as a function of a backoff factor and a relative frequency of a corresponding backoff n-gram in the corpus.",,,,Likely,2025-02-17 18:41:59+00:00,United States of America,,,,,,,,,
KN-LM,Language,Google,Industry,"T. Brants, Ashok Popat, P. Xu, F. Och, J. Dean",2007-06-22,Large Language Models in Machine Translation,https://www.semanticscholar.org/paper/Large-Language-Models-in-Machine-Translation-Brants-Popat/ba786c46373892554b98df42df7af6f5da343c9d,,"Training cost,Highly cited",,21000000000.0,Table 2,7.7303808e+17,,,"Trained for 2 days on 400 machines (Table 2)
Assuming a Nehalem based processor with 8 FLOP/cycle (https://www.agner.org/optimize/microarchitecture.pdf#page=105.06) , 2 cores and 2.33 GHz clock speed: 8*2*2330000000=37280000000 FLOP/s
Compute: 400*37280000000*2*24*60*60*0.3=773038080000000000=7.7e17",,"Largest dataset (""web"") was deemed to expensive to train with the KN methodology. Largest actually used was ""webnews"", described as ""data collected over several years, up to December 2005, from web pages containing predominantly English news articles (31 billion tokens).""",31000000000.0,Table 2,,48.0,Table 2,,400.0,,"Systems, methods, and computer program products for machine translation are provided. In some implementations a system is provided. The system includes a language model including a collection of n-grams from a corpus, each n-gram having a corresponding relative frequency in the corpus and an order n corresponding to a number of tokens in the n-gram, each n-gram corresponding to a backoff n-gram having an order of n-1 and a collection of backoff scores, each backoff score associated with an n-gram, the backoff score determined as a function of a backoff factor and a relative frequency of a corresponding backoff n-gram in the corpus.",,,,Likely,2025-02-17 18:41:54+00:00,United States of America,,,,,,,,,
Restricted Bolzmann machines,Recommendation,University of Toronto,Academia,"Russ Salukhutdinov, Andriy Mnih, GE Hinton",2007-06-20,Restricted Boltzmann machines for collaborative filtering,https://dl.acm.org/doi/abs/10.1145/1273496.1273596?casa_token=cfdkH2x12MwAAAAA:sEUzfllIGyPcOfzgUoDPHlpC1ukfCAo8ewocBXWBswIIF9eS5HdFo30nOtfmIV8gm-XpBpQJJ5zYVO8,2140.0,Highly cited,,,,,,,,Netflix Prize,,100480507.0,"The training data set consists of 100,480,507
ratings",,,,,,,,,,,,2024-09-15 21:48:33+00:00,Canada,,,,,,,,,
λ-WASP,Language,UT Austin,Academia,"YW Wong, R Mooney",2007-06-01,Learning Synchronous Grammars for Semantic Parsing with Lambda Calculus,https://www.aclweb.org/anthology/P07-1121/,383.0,SOTA improvement,"""The resulting parser is shown to be the bestperforming system so far in a database query domain""",,,,,,,,,792.0,"""Table 1 summarizes the results at the end of the learning curves (792 training examples for λWASP, WASP and SCISSOR, 600 for Z&C)""",,,,,,,,,,,,2024-09-16 02:54:10+00:00,United States of America,,,,,,,,,
Empirical evaluation of deep architectures,Other,University of Montreal / Université de Montréal,Academia,"Hugo Larechelle, Dumithru Erhan, Aaron C Courville, James Bergsta, Yoshua Bengio",2007-06-01,An empirical evaluation of deep architectures on problems with many factors of variation,https://dl.acm.org/doi/10.1145/1273496.1273556,1149.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-11-01 14:04:29+00:00,Canada,,,,,,,,,
Greedy layer-wise DNN training,Other,University of Montreal / Université de Montréal,Academia,"Y Bengio, P Lamblin, D Popovici",2006-12-04,Greedy layer-wise training of deep networks,https://dl.acm.org/doi/10.5555/2976456.2976476,5605.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 14:11:32+00:00,Canada,,,,,,,,,
Sparse Energy-Based Model,Vision,New York University (NYU),Academia,"M Ranzato, C Poultney, S Chopra, Y Cun",2006-12-04,Efficient Learning of Sparse Representations with an Energy-Based Model,https://papers.nips.cc/paper/2006/hash/87f4d79e36d68c3031ccf6c55e9bbd39-Abstract.html,1601.0,Highly cited,,,,,,,,MNIST,,60000.0,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Local Binary Patterns for facial recognition,Vision,"University of Oulu,IEEE","Academia,Industry","Timo Ahonen, Abdenour Hadid, and Matti Pietikainen",2006-12-01,Face Description with Local Binary Patterns: Application to Face Recognition,http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.456.1094&rep=rep1&type=pdf,5816.0,Highly cited,,,"Shallowly investigated, couldn't find much.
",,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 03:16:28+00:00,"Finland,Multinational",,,,,,,,,
Sparse Vision Encoding,Vision,Stanford University,Academia,"Honglak Lee, Alexis Battle, Rajat Raina, Andrew Y. Ng",2006-11-01,Efficient sparse coding algorithms,https://proceedings.neurips.cc/paper_files/paper/2006/file/2d71b2ae158c7c5912cc0bbde2bb9d95-Paper.pdf,3512.0,Highly cited,"Major caveat: the task in question is ""encoding"", which I'm not sure is a valid task. Unusually low confidence across all answers in this form due to the task and training data being atypical.",,,9604800000000.0,,,"(Just for natural images)

""All experiments were conducted on a Linux machine with AMD Opteron 2GHz CPU and 2GB RAM. ... For example, we were able to learn a set of 1,024 bases (each 14×14 pixels)in about 2 hours and a set of 2,000 bases (each 20×20 pixels) in about 10 hours.""

I filtered for 2GHz Opteron models that came out in 2005, of which there are five: https://www.techpowerup.com/cpu-specs/?mfgr=AMD&released=2005&generation=AMD%20Opteron&sort=name

Found a source which indicates 3 cycles per 32-bit multiply, and 5 per 64 bit: https://www.cse.wustl.edu/~roger/569M/m2066.pdf 
Assuming 32-bit precision, 2e9 cycles/s / 3 cycle/FLOP = 6.67e8 FLOP/s

10 * 3600 * 6.67e8 * 0.4 = 9.6048e12 FLOPs",,,2000.0,"However, these are 1000 20x20 pixel ""bases"", not images",,10.0,"""...in about 2 hours and a set of 2,000 bases (each 20×20 pixels) in about 10 hours.""",,,Unsupervised,"Sparse coding provides a class of algorithms for finding succinct representations of stimuli; given only unlabeled input data, it discovers basis functions that capture higher-level features in the data. However, finding sparse codes remains a very difficult computational problem. In this paper, we present efficient sparse coding algorithms that are based on iteratively solving two convex optimization problems: an L1-regularized least squares problem and an L2-constrained least squares problem. We propose novel algorithms to solve both of these optimization problems. Our algorithms result in a significant speedup for sparse coding, allowing us to learn larger sparse codes than possible with previously described algorithms. We apply these algorithms to natural images and demonstrate that the inferred sparse codes exhibit end-stopping and non-classical receptive field surround suppression and, therefore, may provide a partial explanation for these two phenomena in V1 neurons.",,Unreleased,,Likely,2025-02-19 17:39:12+00:00,United States of America,,,,,,,,,
Deep Belief Nets,Vision,"University of Toronto,National University of Singapore","Academia,Academia","GE Hinton, S Osindero, YW Teh",2006-07-18,A fast learning algorithm for deep belief nets,https://www.cs.toronto.edu/~hinton/absps/fastnc.pdf,16071.0,Highly cited,,1600000.0,,,,,,MNIST,,60000.0,"""The network that performed best on the validation set was
then tested and had an error rate of 1.39%. This network was
then trained on all 60,000 training images8 until its error-rate
on the full training set was as low as its final error-rate had
been on the initial training set of 44,000 images.""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"Canada,Singapore",,,,,,,,,
Dimensionality Reduction,Vision,University of Toronto,Academia,"GE Hinton, RR Salakhutdinov",2006-07-18,Reducing the dimensionality of data with neural networks.,https://www.cs.toronto.edu/~hinton/science.pdf,15697.0,Highly cited,,3800000.0,,,,,,,,70000.0,"After fine-tuning on all 60,000 training images, the autoencoder was tested on 10,000 new images and produced much better reconstructions than did PCA
(Fig. 2B)",,,,,,,,,,,,2024-10-10 16:02:34+00:00,Canada,,,,,,,,,
Semantic Taxonomy Induction,Language,Stanford University,Academia,"Rion Snow, Dan Jurafsky, and Andrew Y. Ng",2006-07-07,Semantic Taxonomy Induction from Heterogenous Evidence,https://www.aclweb.org/anthology/P06-1101/,571.0,,,100.0,"The main learning algorithm is a logistic classifier. The input is a matrix M, where the rows are pairs of words, and the columns (variables) are counts of occurrences of synthetic dependency paths between those two words.

Since there are on the order of 10~100 different types of syntactic relationships, this is the number of length-1 paths, and thus the number of parameters if only length-1 paths are used.

However, if the length of the paths considered is longer (say, 5), then the parameters would be on the order of (10~100)^5. It's not clear to me which is the case",,,,,,,850750.0,"[Classification task]

The labeled training set is
constructed by labeling the collected feature vectors as positive “known hypernym” or negative
“known non-hypernym” examples using WordNet
2.0; 49,922 feature vectors were labeled as positive training examples, and 800,828 noun pairs
were labeled as negative training examples.

800,828 + 49,922 = 850750",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
CTC-Trained LSTM,Speech,"IDSIA,Technical University of Munich","Academia,Academia","Alex Graves, Santiago Fernández, Faustino Gómez, Jürgen Schmidhuber",2006-06-25,Connectionist Temporal Classification: Labelling Unsegmented Sequence Data with Recurrent Neural Networks,https://www.cs.toronto.edu/~graves/icml_2006.pdf,4862.0,Highly cited,,114662.0,"""The hidden layers were fully connected to themselves
and the output layer, and fully connected from the input layer. The input layer was size 26, the softmax output layer size 62 (61 phoneme categories plus the blank label), and the total number of weights was
114, 662.""

https://www.cs.toronto.edu/~graves/icml_2006.pdf",,,,,TIMIT,,41620.0,"4162 utterances, guesstimated avg 10 words per utterance",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"Switzerland,Germany",,,,,,,,,
DrLIM,Other,New York University (NYU),Academia,R. Hadsell; S. Chopra; Y. LeCun,2006-06-17,Dimensionality Reduction by Learning an Invariant Mapping,https://ieeexplore.ieee.org/document/1640964,4888.0,Highly cited,,37097.0,Architecture described in figure 3,,,,,,,217470.0,"""The dataset was split into 660 training images and a 312
test images. The result of training on all 10989 similar pairs
and 206481 dissimilar pairs is a 3-dimensional manifold in
the shape of a cylinder (see figure 8).""

206481 + 10989 = 217470",,,,,,,,,,,,2024-11-01 14:04:29+00:00,United States of America,,,,,,,,,
Spatial Pyramid Matching,Vision,"INRIA,University of Illinois Urbana-Champaign (UIUC),Ecole Normale Supèrieure","Academia,Academia,Academia","S Lazebnik, C Schmid, J Ponce",2006-06-17,Beyond Bags of Features: Spatial Pyramid Matching for Recognizing Natural Scene Categories,https://inc.ucsd.edu/mplab/users/marni/Igert/Lazebnik_06.pdf,9807.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"France,United States of America,France",,,,,,,,,
Hybrid CNN/SVM Object Categorizer,Vision,Courant Institute of Mathematical Sciences,Academia,"Fu Jie Huang, Yann LeCun",2006-06-17,Large-scale learning with svm and convolutional nets for generic object categorization,https://ieeexplore.ieee.org/document/1640771/,,,,3590057.0,"For the CNN: ""In this case, the whole network has a total
of 90,857 trainable parameters.""
For the SVM: 
there are 6 binary SVM models trained 
support vectors = 0.02x291600
dimension = 100
parameters = (0.02x291600)x100x6=3499200
Total = ",97977600000000.0,,,"(291,600)*(8e6)*3*14
""A full propagation of one data sample through the network requires about 4 million multiply-add operations"" = 2*4e6 FLOPs
""The training and testing features are extracted with
the convolutional net trained after 14 passes""
""The experiments here are run on a single CPU (AMD Opteron at 2GHz) with 4GB of memory""",,"NORB Dataset
""This data set is
a collection of images of 50 different toys, with 10 toys in
each of the 5 generic categories: four-legged animals, human figures, airplanes, trucks, and cars""",291600.0,"""Each object is captured by a camera pair with 162 different views (9 elevations from 30◦ to 70◦ every 5◦, 18
azimuths sampled every 20◦ along the horizontal viewing
circle) and under 6 different illuminations.""
""To generate the training set, each image was perturbed
with 10 different configurations of the above parameters,
which makes up 291,600 image pairs of size 108×108. The
testing set has 2 drawings of perturbations, and have 58,320
pairs""",14.0,51.75,Train time = (5880+330 min*GHz) * (1/(CPU=2GHz) * (1 hr/60 min) = 51.75 hours,,,,"The detection and recognition of generic object categories with invariance to viewpoint, illumination, and clutter requires the combination of a feature extractor and a classifier. We show that architectures such as convolutional networks are good at learning invariant features, but not always optimal for classification, while Support Vector Machines are good at producing decision surfaces from wellbehaved feature vectors, but cannot learn complicated invariances. We present a hybrid system where a convolutional network is trained to detect and recognize generic objects, and a Gaussian-kernel SVM is trained from the features learned by the convolutional network. Results are given on a large generic object recognition task with six categories (human figures, four-legged animals, airplanes, trucks, cars, and ""none of the above""), with multiple instances of each object category under various poses, illuminations, and backgrounds. On the test set, which contains different object instances than the training set, an SVM alone yields a 43.3% error rate, a convolutional net alone yields 7.2% and an SVM on top of features produced by the convolutional net yields 5.9%.",,Unreleased,,Unverified,2025-02-19 17:38:09+00:00,United States of America,,,,,,,,,
SVM-CNN,Vision,New York University (NYU),Academia,"Fu Jie Huang, Yann LeCun",2006-06-17,Large-scale Learning with SVM and Convolutional for Generic Object Categorization,https://www.semanticscholar.org/paper/Large-scale-Learning-with-SVM-and-Convolutional-for-Huang-LeCun/cf03fdf52dd6e4249cbbdbd0bffbbbe5ca389feb,,Historical significance,,90857.0,,745200000000000.0,,,"Training time: 5880+330=6210 minutes (Table 1)
“The timing is normalized to hypothetical 1GHz single CPU.”
Assuming utilization of 0.5 and AMD Athlon 64 Processor with 4 FLOP/cycle
Compute: 6210*60*4*1000000000*0.5=745200000000000 = 7.4e14
",NORB,,291600.0,"To generate the training set, each image was perturbed with 10 different configurations of the above parameters, which makes up 291,600 image pairs of size 108×108. The testing set has 2 drawings of perturbations, and have ",,,Only normalized training times are reported,,1.0,Supervised,"The detection and recognition of generic object categories with invariance to viewpoint, illumination, and clutter requires the combination of a feature extractor and a classifier. We show that architectures such as convolutional networks are good at learning invariant features, but not always optimal for classification, while Support Vector Machines are good at producing decision surfaces from wellbehaved feature vectors, but cannot learn complicated invariances. We present a hybrid system where a convolutional network is trained to detect and recognize generic objects, and a Gaussian-kernel SVM is trained from the features learned by the convolutional network. Results are given on a large generic object recognition task with six categories (human figures, four-legged animals, airplanes, trucks, cars, and ""none of the above""), with multiple instances of each object category under various poses, illuminations, and backgrounds. On the test set, which contains different object instances than the training set, an SVM alone yields a 43.3% error rate, a convolutional net alone yields 7.2% and an SVM on top of features produced by the convolutional net yields 5.9%.",,Unreleased,,Unverified,2025-02-17 18:40:36+00:00,United States of America,,,,,,,,,
FAST,Video,University of Cambridge,Academia,Edward Rosten and Tom Drummond,2006-05-07,Machine Learning for High-Speed Corner Detection,https://link.springer.com/chapter/10.1007/11744023_34,5419.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
RL for helicopter flight,Driving,"University of California (UC) Berkeley,Stanford University","Academia,Academia","H. Kim, Michael Jordan, Shankar Sastry, Andrew Ng",2006-03-09,Autonomous helicopter flight via reinforcement learning,https://papers.nips.cc/paper/2003/hash/b427426b8acd2c2e53827970f2c2f526-Abstract.html,362.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-10-01 14:02:12+00:00,"United States of America,United States of America",,,,,,,,,
TFE SVM,Vision,"Centre de Recherche en Automatique de Nancy (CRAN),CENPARMI","Academia,Academia","Fabian Lauer, Ching Y Suen, Gerard Bloch",2006-02-02,A trainable feature extractor for handwritten digit recognition,https://hal.archives-ouvertes.fr/hal-00018426/en,365.0,SOTA improvement,best at affine-transformed digits in table 4,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,"France,Canada",,,,,,TFE SVM,,,
Stanley (DARPA Grand Challenge 2),Driving,Stanford University,Academia,"S Thrun, M Montemerlo, H Dahlkamp",2006-01-01,Stanley: The Robot that Won the DARPA Grand Challenge,http://robots.stanford.edu/papers/thrun.stanley05.pdf,2561.0,Highly cited,,,"""Our  approach  and  the underlying  probabilistic  Markov  model  possess  anumber  of  unknown  parameters.  These  parameters include the height threshold, the statistical acceptance  probability  threshold,  and  various  Markov chain error parameters the noise covariances of theprocess noise and the measurement noise. Stanley uses a discriminative learning algorithm for  locally  optimizing  these  parameters.""",,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Vision-based obstacle avoidance system (2005),"Robotics,Vision",New York University (NYU),Academia,"Urs Muller, Jan Ben, Eric Cosatto, Beat Flepp, Yann LeCun",2005-12-05,Off-Road Obstacle Avoidance through End-to-End Learning,https://papers.nips.cc/paper_files/paper/2005/file/fdf1bc5669e8ff5ba45d02fded729feb-Paper.pdf,742.0,,,72000.0,"""The network has 3.15 Million connections and about 72,000 trainable parameters.""",,,,"- 3150000 connections
- 190000 training images
- 18 epochs",,,190000.0,"""With 95,000 training image pairs, training took 18 epochs through the training set.""",18.0,96.0,"""A complete training session required about four days of CPU time on a 3.0GHz Pentium/Xeon-based server""",Intel Pentium 4 HT 630,1.0,Supervised,"We describe a vision-based obstacle avoidance system for off-road mobile robots. The system is trained from end to end to map raw input
images to steering angles. It is trained in supervised mode to predict the
steering angles provided by a human driver during training runs collected
in a wide variety of terrains, weather conditions, lighting conditions, and
obstacle types. The robot is a 50cm off-road truck, with two forwardpointing wireless color cameras. A remote computer processes the video
and controls the robot via radio. The learning system is a large 6-layer
convolutional network whose input is a single left/right pair of unprocessed low-resolution images. The robot exhibits an excellent ability to
detect obstacles and navigate around them in real time at speeds of 2 m/s.",,Unreleased,,Unverified,2024-09-20 21:14:21+00:00,United States of America,,,,,,,,,
Monocular Depth Prediction,Vision,Stanford University,Academia,"Ashutosh Saxena, Sung H. Chung, and Andrew Y. Ng",2005-12-05,Learning Depth from Single Monocular Images,https://papers.nips.cc/paper_files/paper/2005/file/17d8da815fa21c57af9829fb0a869602-Paper.pdf,1417.0,Highly cited,1000+ citations,1472256.0,"""In detail, we use different parameters (θr, σ1r, σ2r) for each row in the image, because the images we consider are taken from a horizontally mounted camera, and thus different rows of the image have different statistical properties.""
""We collected a total of 425 image+depthmap pairs, with an image resolution of 1704x2272 and a depthmap resolution of 86x107""

The dimensionality of each parameter set isn't totally clear, but from equation (1) it seems like θ is the same length as the absolute depth input features (646) and σ1 and σ2 are scalar. If so, then we should have:
2272 * (646 + 1 + 1) = 1,472,256 parameters",,,,,,"""We used a 3-D laser scanner to collect images and their corresponding depthmaps. The scanner uses a SICK 1-D laser range finder mounted on a motor to get 2D scans. We collected a total of 425 image+depthmap pairs, with an image resolution of 1704x2272 and a depthmap resolution of 86x107""",2933137.0,"""We collected a total of 425 image+depthmap pairs, with an image resolution of 1704x2272 and a depthmap resolution of 86x107. In the experimental results reported here, 75% of the images/depthmaps were used for training, and the remaining 25% for hold-out testing""
It seems like they do predictions over the dense values in the depthmap, so
86 * 107 * 425 * 0.75 = 2,933,137",,,,,,Supervised,"We consider the task of depth estimation from a single monocular image. We take a supervised learning approach to this problem, in which we begin by collecting a training set of monocular images (of unstructured outdoor environments which include forests, trees, buildings, etc.) and their corresponding ground-truth depthmaps. Then, we apply supervised learning to predict the depthmap as a function of the image. Depth estimation is a challenging problem, since local features alone are insufficient to estimate depth at a point, and one needs to consider the global context of the image. Our model uses a discriminatively-trained Markov Random Field (MRF) that incorporates multiscale local- and global-image features, and models both depths at individual points as well as the relation between depths at different points. We show that, even on unstructured scenes, our algorithm is frequently able to recover fairly accurate depthmaps.",,Unreleased,,Speculative,2024-09-24 21:02:20+00:00,United States of America,,,,,,,,,
RankNet,Search,"Microsoft Research,Microsoft","Industry,Industry","Chris Burges, Tal Shaked, Erin Renshaw, Ari Lazier, Matt Deeds, Nicole Hamilton, Greg HullenderAuthors Info & Claims",2005-08-07,Learning to rank using gradient descent,https://dl.acm.org/doi/abs/10.1145/1102351.1102363,,Highly cited,,5711.0,"Model is ""a two layer net with 10 hidden units""
Input is of size 569 ""In all, we use 569 features""
Parameters:
569*10 + 10 for hidden layer
10*1 + 1 for output layer",3482081588304.0,,,"FLOPs per forward pass: 2*parameters = 11422
FLOPs per pair (data point): two forward passes and one backward pass (""A forward prop is performed for the first sample; each node’s activation and gradient value are stored; a forward prop is then performed for the second sample, and the activations and gradients are again stored. The gradient of the cost is then *formula*"") = 2*11422 + 2*11422 = 45688
Total FLOPs = (FLOPs per pair = 45688)*(pairs = 3,464,289)*(epochs = 22) = 3.48E12",,"""The data comprises 17,004 queries for the
English / US market, each with up to 1000 returned
documents.""
...
""This resulted in
our training on 384,314 query/document feature vectors, and on 3,464,289 pairs.""",3464289.0,"""This resulted in our training on 384,314 query/document feature vectors, and on 3,464,289 pairs.""",22.0,5.85,Table 6,,,,"We investigate using gradient descent methods for learning ranking functions; we propose a simple probabilistic cost function, and we introduce RankNet, an implementation of these ideas using a neural network to model the underlying ranking function. We present test results on toy data and on data from a commercial internet search engine.",,Unreleased,,Confident,2025-02-17 18:40:25+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
BiLSTM for Speech,Speech,"IDSIA,Technical University of Munich","Academia,Academia","A Graves, J Schmidhuber",2005-08-01,Framewise phoneme classification with bidirectional LSTM and other neural network architectures,https://www.sciencedirect.com/science/article/abs/pii/S0893608005001206,4281.0,Highly cited,,152061.0,"""The hidden layer sizes were chosen to ensure that all networks had roughly the same number of weights W (≈100,000). However, for the MLPs the network grew with the time-window size, and W varied between 22,061 and 152,061.""",24124575958774.88,,,Extracted from AI and Compute (https://openai.com/blog/ai-and-compute/) charts by using https://automeris.io/WebPlotDigitizer/.,TIMIT,,36960.0,"https://catalog.ldc.upenn.edu/LDC93s1
One sample utterance has around 10 words

3696 utterances * 10 words = around 37k words",,,,,,,,,,,,2025-02-17 20:03:45+00:00,"Switzerland,Germany",,,,,,,,,
Histograms of Oriented Gradients,Vision,INRIA,Academia,"N Dalal, B Triggs",2005-06-25,Histograms of oriented gradients for human detection,https://ieeexplore.ieee.org/document/1467360,36578.0,Highly cited,,,,,,,,,,1805.0," we produced a new and significantly more
challenging data set, ‘INRIA’, containing 1805 64×128 im-
ages",,,,,,,,,,,,2024-09-05 18:08:31+00:00,France,,,,,,,,,
ConvNet similarity metric,Vision,New York University (NYU),Academia,"S Chopra, R Hadsell, Y LeCun",2005-06-20,"Learning a similarity metric discriminatively, with application to face verification",https://ieeexplore.ieee.org/document/1467314,4059.0,Highly cited,,,,,,,,,,140000.0,"The actual training set that was used contained
140,000 image pairs that were evenly split between genuine
and impostor.",,,,,,,,,,,,2024-11-01 14:04:28+00:00,United States of America,,,,,,,,,
Hiero,Language,University of Maryland,Academia,David Chiang,2005-06-01,A Hierarchical Phrase-Based Model for Statistical Machine Translation,https://aclanthology.org/P05-1033/,1487.0,Highly cited,,120000000.0,"Very unsure, but the paper mentions 
""We ran the training process of Section 3 on the same data, obtaining a grammar of 24M rules"" 
and 
""For our experiments we used the following features, analogous to Pharaoh’s default feature set:
• P(γ | α) and P(α | γ), the latter of which is not
found in the noisy-channel model, but has been
previously found to be a helpful feature (Och
and Ney, 2002);
• the lexical weights Pw(γ | α) and Pw(α | γ) (Koehn et al., 2003), which estimate how well the words in α translate the words in γ;
2
• a phrase penalty exp(1), which allows the
model to learn a preference for longer or
shorter derivations, analogous to Koehn’sphrase penalty (Koehn, 2003).""

Suggesting 24M rules * 5 features per rule (?)",,,,,,,171400000.0,"[WORDS]
155M words dataset for the language model plus (7.2+9.2)M words for the translation model?",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
SACHS,Biology,"Massachusetts Institute of Technology (MIT),Stanford University","Academia,Academia","K. Sachs, O. Perez, D. Pe'er, D. A. Lauffenburger and G. P. Nolan",2005-04-22,Causal Protein-Signaling Networks Derived from Multiparameter Single-Cell Data.,https://science.sciencemag.org/content/308/5721/523.long,1682.0,Highly cited,,178.0,From https://www.bnlearn.com/bnrepository/,,,,,,,5400.0,"I think? 

"" The truncated singlecell data set (420 data points) shows a large
(11-arc) decline in accuracy, missing more connections and reporting more unexplained arcs than its larger (5400 data points) counterpart (fig. S4B). ""

Seems potentially wrong by maybe 20%. Might need to add 1200.",,,,,,,,,,,,2024-10-21 15:22:55+00:00,"United States of America,United States of America",,,,,,,,,
Hierarchical LM,Language,,,"Frederic Morin, Yoshua Bengio",2005-01-06,Hierarchical Probabilistic Neural Network Language Model,https://www.semanticscholar.org/paper/Hierarchical-Probabilistic-Neural-Network-Language-Morin-Bengio/c19fbefdeead6a4154a22a9c8551a18b1530033a,,Highly cited,,,,115848000000000.0,,,"""The computations were performed on Athlon processors with a 1.2 GHz clock""
FP32 per cycle: 4 (""The bottom line is that the Athlon is capable of delivering as many as four 32-bit, single-precision floating-point results per clock cycle"", https://www.pctechguide.com/amd-technology/amd-athlon) 
Training time per epoch: 1609s (table 1)
Epochs: 30 ""Training is performed over about 20 to 30 epochs according to validation set perplexity (early stopping).""
Assumed utilization: 0.5 
Compute estimate: 0.5*1200000000*4*30*1609=115848000000000=1.16e14",Brown corpus,"""The experiments were performed on the Brown corpus, with a reduced vocabulary size of 10,000 words""",1000000.0,"""The corpus has 1,105,515 occurrences of words, split into 3 sets: 900,000 for training, 100,000 for validation (model selection), and 105,515 for testing""",30.0,13.4,"Training time per epoch: 1609s (table 1)
Total training time 30*1609/60/60=13.408h
",,1.0,,"In recent years, variants of a neural network architecture for statistical language modeling have been proposed and successfully applied, e.g. in the language modeling component of speech recognizers. The main advantage of these architectures is that they learn an embedding for words (or other symbols) in a continuous space that helps to smooth the language model and provide good generalization even when the number of training examples is insufficient. However, these models are extremely slow in comparison to the more commonly used n-gram models, both for training and recognition. As an alternative to an importance sampling method proposed to speed-up training, we introduce a hierarchical decomposition of the conditional probabilities that yields a speed-up of about 200 both during training and recognition. The hierarchical decomposition is a binary hierarchical clustering constrained by the prior knowledge extracted from the WordNet semantic hierarchy.",,,,Confident,2025-02-19 17:35:11+00:00,,,,,,,,,,
LMICA,Vision,,,"Yoshitatsu Matsuda, K. Yamaguchi",2004-12-01,"Linear Multilayer Independent Component Analysis for Large Natural Scenes
",https://www.semanticscholar.org/paper/Linear-Multilayer-Independent-Component-Analysis-Matsuda-Yamaguchi/7061b01572fbff2e223ce3abb59f397895b1ebf1,,"Training cost,Historical significance",,4096000.0,"64*64*1000=4096000
""100000 samples of natural scenes of 64 × 64 pixels were given as X""
""LMICA was carried out in 1000 layers""
",2782080000000000.0,,,"69*60*60*8*2800000000*0.5=2782080000000000=2.78e15
""it consumed about 69 hours with Intel 2.8GHz CPU""
- Assuming they used an Intel Pentium 4 processor with 8 FLOP/cycle (https://en.wikipedia.org/wiki/FLOPS)",,,100000.0,"""100000 samples of natural scenes of 64 × 64 pixels were given as X""",,,,,,,"In this paper, linear multilayer ICA (LMICA) is proposed for extracting independent components from quite high-dimensional observed signals such as large-size natural scenes. There are two phases in each layer of LMICA. One is the mapping phase, where a one-dimensional mapping is formed by a stochastic gradient algorithm which makes more highly-correlated (non-independent) signals be nearer incrementally. Another is the local-ICA phase, where each neighbor (namely, highly-correlated) pair of signals in the mapping is separated by the MaxKurt algorithm. Because LMICA separates only the highly-correlated pairs instead of all ones, it can extract independent components quite efficiently from appropriate observed signals. In addition, it is proved that LMICA always converges. Some numerical experiments verify that LMICA is quite efficient and effective in large-size natural image processing.",,,,Confident,2025-02-17 18:39:56+00:00,,,,,,,,,,
Synergistic Face Detector,Vision,"NEC Laboratories,Courant Institute of Mathematical Sciences","Industry,Academia","Margarita Osadchy, Matthew Miller, Yann LeCun",2004-12-01,Synergistic Face Detection and Pose Estimation with Energy-Based Models,https://proceedings.neurips.cc/paper/2004/hash/06c284d3f757b15c02f47f3ff06dc275-Abstract.html,,,Not currently notable,16636.0,"""We employ a network architecture similar to LeNet5 [6]. The difference is in the number of maps. In our architecture we have 8 feature maps in the bottom convolutional and subsampling layers and 20 maps in the next two layers. The last layer has 9 outputs to encode two pose parameters""
Using the general architecture of LeNet5 from ""Gradient-based learning applied to document recognition"" (LeCun, 1998), we get:
C1: CNN, D = 8, K=5, C=1; Parameters = 200
C3: CNN, D=20, K=5, C=8; Parameters = 4,000
C5: NN, D=20, K=5, C=20; Parameters = 10,000
F6: NN, N=20, M=84; Parameters = 1,680
Output: NN, N=84, M=9; Parameters = 756
Pooling layers: negligible
Parameters = 16,636",52603200000000.0,,,"26*60*60*[(2.81E+03)*((1E6)/2.5)]*0.5

""Training was performed using LUSH [1], and the total training
time was about 26 hours on a 2Ghz Pentium 4""

""The Progress of Computing"" (Nordhaus, 2001) says that a Pentium 4 runs at 2.81E+03 MSOPS, and that ""Most benchmarks find that 1 million flops correspond to between 2 and 3 MSOPS""

A utilization rate of 0.5 was estimated since this is a smaller model that ran on a CPU (both of which suggest a slightly higher utilization rate than 0.3 to 0.4)",,"""Our training set consisted of 52, 850, 32x32-pixel faces from natural images
collected at NEC Labs and hand annotated with appropriate facial poses (see [9] for a description of how the annotation was done).... Our initial negative training data consisted of 52, 850 image patches chosen randomly from non-face areas of a variety of images... Each training image was used 5 times during training, with random variations in scale (from x√2 to x(1 + √2)), in-plane rotation (±45◦), brightness (±20), contrast (from 0.8 to 1.3).""",528500.0,"52,850x2x5",9.0,26.0,"""Training was performed using LUSH [1], and the total training
time was about 26 hours on a 2Ghz Pentium 4""",Intel Pentium 4 2.40,,,"We describe a novel method for real-time, simultaneous multi-view face detection and facial pose estimation. The method employs a convolu- tional network to map face images to points on a manifold, parametrized by pose, and non-face images to points far from that manifold. This network is trained by optimizing a loss function of three variables: im- age, pose, and face/non-face label. We test the resulting system, in a single configuration, on three standard data sets one for frontal pose, one for rotated faces, and one for profiles and find that its performance on each set is comparable to previous multi-view face detectors that can only handle one form of pose variation. We also show experimentally that the system's accuracy on both face detection and pose estimation is improved by training for the two tasks together.",,Unreleased,,Unverified,2025-02-17 18:40:08+00:00,"United States of America,United States of America",,,,,,,,,
LIRA,Vision,Instituto de Ciencias Aplicadas y Technologia,Academia,"E Kussul, T Baidyk",2004-07-30,Improved method of handwritten digit recognition tested on MNIST database,https://www.sciencedirect.com/science/article/abs/pii/S0262885604000721,188.0,,,100000.0,"""For the first modification of the Rosenblatt perceptron 10 neurons were included into the R-layer. [...] The number of the A-layer neurons was 256,000"" The relation between the S-layer and A-layer is hardcoded",,,,The coding time was 20 h and the training time was 45 h.,,,10000.0,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,Mexico,,,,,,,,,
Automated WSD via WordNet,Language,University of Sussex,Academia,"D McCarthy, R Koeling, J Weeds",2004-07-01,Finding Predominant Word Senses in Untagged Text,https://aclanthology.org/P04-1036/,475.0,,,,,,,,,,,5000.0,"They do two experiments, one on a dataset of 5.000 tagged words and
another one on two datasets containing a total of around 40 million words, of which they only select 38 unique words and manually annotate the senses?
I think the first one is more representative",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Invariant CNN,Vision,New York University (NYU),Academia,"Yann LeCun, Fu Jie Huang, L. Bottou",2004-06-27,Learning methods for generic object recognition with invariance to pose and lighting,https://www.semanticscholar.org/paper/Learning-methods-for-generic-object-recognition-to-LeCun-Huang/f354310098e09c1e1dc88758fca36767fd9d084d,,"Highly cited,Historical significance",,90575.0,"""The network has a total of 90,575 trainable parameters.""",974230000000.0,,,"""A full propagation through the network requires 3,896,920 multiply-adds."" - it's not entirely clear whether this refers to a forward pass or forward + backward pass (I assumed the latter)
""We used a stochastic version of the Levenberg-Marquardt algorithm with diagonal approximation of the Hessian [7], for approximately 250,000 online updates.""
3896920*250000=974230000000=9.7e11",,,24300.0,"""normalized-uniform set: 5 classes, centered, unperturbed objects on uniform backgrounds. 24,300 training samples, 24,300 testing samples.""",10.0,,,,,,"We assess the applicability of several popular learning methods for the problem of recognizing generic visual categories with invariance to pose, lighting, and surrounding clutter. A large dataset comprising stereo image pairs of 50 uniform-colored toys under 36 azimuths, 9 elevations, and 6 lighting conditions was collected (for a total of 194,400 individual images). The objects were 10 instances of 5 generic categories: four-legged animals, human figures, airplanes, trucks, and cars. Five instances of each category were used for training, and the other five for testing. Low-resolution grayscale images of the objects with various amounts of variability and surrounding clutter were used for training and testing. Nearest neighbor methods, support vector machines, and convolutional networks, operating on raw pixels or on PCA-derived features were tested. Test error rates for unseen object instances placed on uniform backgrounds were around 13% for SVM and 7% for convolutional nets. On a segmentation/recognition task with highly cluttered images, SVM proved impractical, while convolutional nets yielded 16/7% error. A real-time version of the system was implemented that can detect and classify objects in natural scenes at around 10 frames per second.",,,,Confident,2025-03-04 14:53:09+00:00,United States of America,,,,,,,,,
Sandstorm (DARPA Grand Challenge I),Driving,Carnegie Mellon University (CMU),Academia,William Red L. Whittaker,2004-06-14,DARPA Grand Challenge Technical Paper,https://ieeexplore.ieee.org/document/1336386,66.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
GPU implementation of neural networks,Vision,Soongsil University,Academia,"KS Oh, K Jung",2004-06-01,GPU implementation of neural networks,https://www.sciencedirect.com/science/article/pii/S0031320304000524,471.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 03:28:51+00:00,Korea (Republic of),,,,,,,,,
Max-Margin Markov Networks,"Vision,Language",Stanford University,Academia,"B. Taskar, C. Guestrin, and D. Koller",2004-03-01,Max-margin markov networks,https://papers.nips.cc/paper/2003/file/878d5691c824ee2aaf770f7d36c151d6-Paper.pdf,1764.0,Highly cited,,,,,,,,,,600.0,"The data set is divided into 10 folds of ∼ 600 training and ∼ 5500 testing examples.
The accuracy results, ... are averages over the 10 folds",,,,,,,,,,,,2024-09-16 03:35:49+00:00,United States of America,,,,,,,,,
Bayesian object categorizer,Vision,"California Institute of Technology,University of Oxford","Academia,Academia","Li Fei-Fei, Rob Fergus, Pietro Perona",2003-10-13,A Bayesian Approach to Unsupervised One-Shot Learning of Object Categories,http://vision.stanford.edu/documents/Fei-Fei_ICCV03.pdf,806.0,,,100.0,"citation from section 2.1: In the constellation model, the dimensionality of \theta is large (~ 100) ",,,,"not exactly provided, but rather low number",,"description of Figure 1 ""This dataset is obtained by collecting images through the Google image search engine (www.google.com). The keyword “things”
is used to obtain hundreds of random images. """,,"description of Figure 1 ""This dataset is obtained by collecting images through the Google image search engine (www.google.com). The keyword “things”
is used to obtain hundreds of random images. """,,,,,,,"Learning visual models of object categories notoriously requires thousands of training examples; this is due to the diversity and richness of object appearance which requires models containing hundreds of parameters. We present a method for learning object categories from just a few images (1 /spl sim/ 5). It is based on incorporating ""generic"" knowledge which may be obtained from previously learnt models of unrelated categories. We operate in a variational Bayesian framework: object categories are represented by probabilistic models, and ""prior"" knowledge is represented as a probability density function on the parameters of these models. The ""posterior"" model for an object category is obtained by updating the prior in the light of one or more observations. Our ideas are demonstrated on four diverse categories (human faces, airplanes, motorcycles, spotted cats). Initially three categories are learnt from hundreds of training examples, and a ""prior"" is estimated from these. Then the model of the fourth category is learnt from 1 to 5 training examples, and is used for detecting new exemplars a set of test images.",,,,Unverified,2024-12-10 19:17:21+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
CNN Best Practices,Vision,Microsoft Research,Industry,"PY Simard, D Steinkraus, JC Platt",2003-08-06,Best practices for convolutional neural networks applied to visual document analysis,https://ieeexplore.ieee.org/document/1227801,3065.0,Highly cited,,,,,,,,MNIST,,50000.0,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
Unsupervised Scale-Invariant Learning,Vision,University of Oxford,Academia,"R Fergus, P Perona, A Zisserman",2003-06-18,Object Class Recognition by Unsupervised Scale-Invariant Learning,https://ieeexplore.ieee.org/document/1211479,2970.0,Highly cited,,451.0,"See Table 1
",,,,,,,3500.0,"See Table 2 and Figure 1.
There are 7 datasets, each with 200-800 of pictures. I pick 500 as the avg number of pictures",,,,,,,,,,,,2024-09-16 03:37:08+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Phrase-based translation,Language,University of Southern California,Academia,"Philipp Koehn, Franz Josef Och, Daniel Marcu",2003-05-01,Statistical Phrase-Based Translation,https://dl.acm.org/doi/10.3115/1073445.1073462,4270.0,Highly cited,,9178890.0,"There are various components to the system:

- Translation probability model phi
- The distortion probability distribution d
- A langage model p_LM
- A length factor w

Several translation probability models are considered. The most performant one is the AP word alignment model. The sentence length preferred by the authors is 3 words maximum. In the biggest corpus considered (320k phrase pairs) it produces a phrase translation probability table of 1996k entries.

The distortion probability model d is taken from  (Marcu and Wong, 2002).

The distortion probability model must have ~10 parameters at most

The language model p_LM is a back off trigram model from (Seymore and Rosenfeld,1997). AFAIK the cutoff used is not specified. Based on the example on section 4.3 of (Seymore and Rosefeld, 1997), a trigram probability model has about 3866964 + 2674322 + 641604 parameters.

""For each possible phrase translation anywhere in the sentence (we call it a translation option), we multiply its phrase translation probability with the language model probability for the generated English phrase. As language model probability we use the unigram probability for the first word, the bigram probability for the second, and the trigram probability for all following words""

The length factor w is an additional single parameter.

""In order to calibrate the output length, we introduce a
factor w for each generated English word in addition to
the trigram language model ""

In summary, the parameter count seems to be dominated by the trigram language model and the word alignment phrase translation model. ",,,,,,,20000000.0,"[WORDS]
""We used the freely available Europarl corpus to carry out experiments. This corpus contains over 20 million words in each of the eleven official languages of the European Union, covering the proceedings of the European Parliament 1996-2001. 1755 sentences of length 5-15 were reserved for testing.""

""These results are consistent
over training corpus sizes from 10,000 sentence pairs to
320,000 sentence pairs. ""

So 20 million words or 320k sentence pairs.",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
NPLM,Language,University of Montreal / Université de Montréal,Academia,"Yoshua Bengio, Réjean Ducharme, Pascal Vincent, Christian Jauvin",2003-03-15,A Neural Probabilistic Language Model,https://dl.acm.org/doi/10.5555/944919.944966,7627.0,Highly cited,,11904264.0,"""The number of free parameters is |V|(1 + nm + h) + h(1 + (n − 1)m) [...] For example, consider the following architecture used in the experiments on the AP (Associated Press) news data: the vocabulary size is |V| = 17,964, the number of hidden units is h = 60, the order of the model is n = 6, the number of word features is m = 100""",1303898760000000.0,,,"""For example, consider the following architecture used in the experiments on the AP (Associated
Press) news data: the vocabulary size is |V| = 17,964, the number of hidden units is h = 60, the order
of the model is n = 6, the number of word features is m = 100. The total number of numerical operations to process a single training example is approximately |V|(1+nm+h)+h(1+nm)+nm""

The first 800,000 words were used for training... reducing the vocabulary size to |V| = 16,383

convergence of the stochastic gradient ascent procedure was obtained after around 10
to 20 epochs for the Brown corpus

NOTE: there are two corpuses. The one represented in this calculation is the Brown one, which got a better improvement over sota",Brown corpus,,1000000.0,"""Comparative experiments were performed on the Brown corpus which is a stream of 1,181,041 words, from a large variety of English texts and books. The first 800,000 words were used for training, the following 200,000 for validation (model selection, weight decay, early stopping) and the remaining 181,041 for testing. The number of different words is 47,578 (including punctuation, distinguishing between upper and lower case, and including the syntactical marks used to separate texts and paragraphs). Rare words with frequency ≤ 3 were merged into a single symbol, reducing the vocabulary size to |V| = 16,383.""",,,,,,,,,,,,2025-02-19 17:33:57+00:00,Canada,,,,,,,,,
LDA,Language,Stanford University,Academia,"David M. Blei, Andrew Y. Ng, Michael I. Jordan",2003-02-02,Latent Dirichlet Allocation,https://jmlr.org/papers/volume3/blei03a/blei03a.pdf,38724.0,Highly cited,,,,,,,,,,,Multiple experiments with different tasks and datasets,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Statistical Shape Constellations,Vision,California Institute of Technology,Academia,"M. Weber, M. Welling, and P. Perona",2003-01-01,Unsupervised Learning of Models for Recognition,https://link.springer.com/content/pdf/10.1007/3-540-45054-8_2.pdf,949.0,Historical significance,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Web mining + Decision tree recommender,Recommendation,Korea Advanced Institute of Science and Technology (KAIST),Academia,"YH Cho, JK Kim, SH Kim",2002-10-01,A personalized recommender system based on web usage mining and decision tree induction,https://reader.elsevier.com/reader/sd/pii/S0957417402000520?token=155B6D1937982D7D0271AFD1CFB034DFD7F3D1DE816B66C025EBC9D0A305BA6DA685DD62989DC05246C794CAC74CDAEF&originRegion=us-east-1&originCreation=20220325235441,656.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,Korea (Republic of),,,,,,,,,
Maximum Entropy Models for machine translation,Language,"University of Southern California,RWTH Aachen University","Academia,Academia",Franz Josef Och and Hermann Ney,2002-07-06,Discriminative Training and Maximum Entropy Models for Statistical Machine Translation,https://aclanthology.org/P02-1038/,1413.0,Highly cited,,,,,,,,,,519523.0,"[WORDS]
Table 1",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,Germany",,,,,,,,,
Tagging via Viterbi Decoding,Language,AT&T,Industry,Michael Collins,2002-06-01,Discriminative Training Methods for Hidden Markov Models: Theory and Experiments with Perceptron Algorithms,https://dl.acm.org/doi/10.3115/1118693.1118694,2582.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
NEAT,Other,IDSIA,Academia,"Justin Bayer, Daan Wierstra, Julian Togelius, Jürgen Schmidhuber",2002-06-01,Evolving Neural Networks through Augmenting Topologies ,https://direct.mit.edu/evco/article/10/2/99/1123/Evolving-Neural-Networks-through-Augmenting,3402.0,Highly cited,,,,,,,,,,,,,,,,,,"An important question in neuroevolution is how to gain an advantage from evolving neural network topologies along with weights. We present a method, NeuroEvolution of Augmenting Topologies (NEAT), which outperforms the best fixed-topology method on a challenging benchmark reinforcement learning task. We claim that the increased efficiency is due to (1) employing a principled method of crossover of different topologies, (2) protecting structural innovation using speciation, and (3) incrementally growing from minimal structure. We test this claim through a series of ablation studies that demonstrate that each component is necessary to the system as a whole and to each other. What results is significantly faster learning. NEAT is also an important contribution to GAs because it shows how it is possible for evolution to both optimize and complexify solutions simultaneously, offering the possibility of evolving increasingly complex solutions over generations, and strengthening the analogy with biological evolution.",,,,Unknown,2024-11-01 14:04:56+00:00,Switzerland,,,,,,,,,
Joint Probability Machine Translation,Language,University of Southern California,Academia,"Daniel Marcu, William Wong",2002-06-01,"A Phrase-Based, Joint Probability Model for Statistical Machine Translation",https://dl.acm.org/doi/10.3115/1118693.1118711,623.0,,,,,,,,,Hansard Corpus,,1073480.0,"[WORDS]
""To evaluate our system, we trained [...] our joint
probability model on a French-English parallel corpus of 100,000 sentence pairs from the Hansard corpus. The sentences in the corpus were at most
20 words long. The English side had a total of 1,073,480 words (21,484 unique tokens). The French side had a total of 1,177,143 words (28,132
unique tokens)""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Thumbs Up?,Language,"Cornell University,IBM","Academia,Industry","Bo Pang, Lillian Lee, Shivakumar Vaithyanathan",2002-05-28,Thumbs up? Sentiment Classification using Machine Learning Techniques,https://arxiv.org/abs/cs/0205070,10656.0,Highly cited,,,,,,,,IMDb,,2053.0,"yielding a corpus of 752 negative and
1301 positive reviews",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America",,,,,,,,,
Decision tree (classification),Vision,"Mitsubishi Electric Research Labs,Compaq CRL","Industry,Industry","P. Viola, M. Jones",2001-12-08,Rapid object detection using a boosted cascade of simple features,https://www.cs.cmu.edu/~efros/courses/LBMV07/Papers/viola-cvpr-01.pdf,23449.0,Highly cited,,120000000.0,"From table 1, it looks like the number of weights depends on the dataset size, which in this case is 2*4916 faces+9544 non-faces = 19376, and multiplies that by the number of filters T = 6061, so no. of params = 1.2e8 (Note:I think ""features"" = ""filters"" in this paper)",63000000000000.0,,,"
The training compute can be tediously worked out from the pseudocode. I think for dataset size D, number of filters T, the training compute is roughly 180k * D * 3 * T = 6.3e13 FLOPs",,They scraped the dataset personally for training,14460.0,Section 5: 4916 hand labeled faces  + 9544 non-face images = 14460,,,,,,,,,,,,2025-02-17 18:39:42+00:00,"United States of America,United States of America",,,,,,,,,
Gradient Boosting Machine,Mathematics,Stanford University,Academia,Jerome H. Friedman,2001-10-01,Greedy function approximation: A gradient boosting machine,https://projecteuclid.org/journals/annals-of-statistics/volume-29/issue-5/Greedy-function-approximation-A-gradient-boostingmachine/10.1214/aos/1013203451.full,17891.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Immediate trihead,Language,Brown University,Academia,Eugene Charniak,2001-07-06,Immediate-Head Parsing for Language Models,https://dl.acm.org/doi/10.3115/1073012.1073029,422.0,SOTA improvement,"""The perplexity for both of these models significantly improve
upon the trigram model base-line as
well as the best previous grammar based language model""",,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
PoE MNIST,Vision,University College London (UCL),Academia,"Guy Mayraz, Geoffrey E. Hinton",2000-11-28,Recognizing Hand-written Digits Using Hierarchical Products of Experts,https://proceedings.neurips.cc/paper_files/paper/2000/file/1f1baa5b8edac74eb4eaa329f14a0361-Paper.pdf,,Historical significance,,3925310.0,"10 models, one for each digit. Largest models: 500 epochs, 500 hidden units (Table 2)
""The largest network was the best, even though each digit model contains 392,500 parameters trained on only 4,400 images""
""the classification network had 30 inputs and therefore 300 weights and 10 output biases.""

Total: 392500*10 + 310 = 3,925,310",51810000000000.0,,,"Each model was trained on 4400 examples: ""The largest network was the best, even though each digit model contains 392,500 parameters trained on only 4,400 images.""

Table 2, largest network trained 500 epochs.
10 * 6 * 392500 * 4400 * 500 = 51,810,000,000,000",MNIST,,60000.0,Total training data size is 60000 but the subnetworks were trained on smaller subsets.,500.0,,,,,,"The product of experts learning procedure [1] can discover a set of stochastic binary features that constitute a non-linear generative model of handwritten images of digits. The quality of generative models learned in this way can be assessed by learning a separate model for each class of digit and then comparing the unnormalized probabilities of test images under the 10 different class-specific models. To improve discriminative performance, it is helpful to learn a hierarchy of separate models for each digit class. Each model in the hierarchy has one layer of hidden units and the nth level model is trained on data that consists of the activities of the hidden units in the already trained (n - 1)th level model. After training, each level produces a separate, unnormalized log probabilty score. With a three-level hierarchy for each of the 10 digit classes, a test image produces 30 scores which can be used as inputs to a supervised, logistic classification network that is trained on separate data. On the MNIST database, our system is comparable with current state-of-the-art discriminative methods, demonstrating that the product of experts learning procedure can produce effective generative models of high-dimensional data.",,,,Confident,2025-02-18 16:07:14+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Neural LM,Language,University of Montreal / Université de Montréal,Academia,"Yoshua Bengio, Réjean Ducharme, Pascal Vincent, Christian Janvin",2000-11-28,A Neural Probabilistic Language Model,https://papers.nips.cc/paper_files/paper/2000/file/728f206c2a01bf572b5940d7d9a8fa4c-Paper.pdf,,"Training cost,Historical significance,Highly cited",,6906980.0,"(30959*100) + (8*100*120) + (120*30959) = 6,906,980
""This is obtained with a network with the direct architecture, 100 randomly initialized words features, 120 hidden units, and n = 8 words of context.""
""The Hansard corpus (Canadian parliament proceedings, French version) is a stream of about 34 million words, of which 32 millions (set A) was used for training, 1.1 million (set B) was used for validation, and 1.2 million (set C) was used for out-of-sample tests. The original data has 106, 936 different words, and those with frequency <= 10 were merged into a single token, yielding IVI = 30,959 different words.""
",6339000000000000.0,,,"The authors use a trick to avoid having to calculate the final layer for all possible words in the vocabulary. They precompute a ""short list"" of the most common word following any 2 precursor words with a smoothed trigram model, and then only calculate the softmax over words on the short list. This means only a negligible fraction of the unembedding parameters get used, so the effective number of parameters appears to be (30959*100) + (8*100*120) = 3,191,900

""Apparent convergence of the stochastic gradient descent procedure was obtained after around 10 epochs for Hansard""

6ND:
6*3191900*33100000*10=6.339e15
",Hansard Corpus,,33100000.0,"The Hansard corpus (Canadian parliament proceedings, French version) is a stream of about 34 million words, of which 32 millions (set A) was used for training, 1.1 million (set B) was used for validation, and 1.2 million (set C) was used for out-of-sample tests.",10.0,,,,,,"A goal of statistical language modeling is to learn the joint probability function of sequences of words. This is intrinsically difficult because of the curse of dimensionality: we propose to fight it with its own weapons. In the proposed approach one learns simultaneously (1) a distributed representation for each word (i.e. a similarity between words) along with (2) the probability function for word sequences, expressed with these representations. Generalization is obtained because a sequence of words that has never been seen before gets high probability if it is made of words that are similar to words forming an already seen sentence. We report on experiments using neural networks for the probability function, showing on two text corpora that the proposed approach very significantly improves on a state-of-the-art trigram model.",,,,Confident,2025-02-19 17:33:43+00:00,Canada,,,,,,,,,
FrameNet role labeling,Language,University of Rochester,Academia,"Daniel Gildea, Daniel Jurafsky",2000-09-01,Automatic Labeling of Semantic Roles,https://dl.acm.org/doi/10.1162/089120102760275983,2499.0,Highly cited,,,,,,,,FrameNet,,50000.0,"Abstract: ""The system is based on statistical classifiers trained on roughly 50,000 sentences""",,,,,,,,,,,,2024-09-16 03:39:45+00:00,United States of America,,,,,,,,,
Peephole LSTM,Mathematics,IDSIA,Academia,F.A. Gers; J. Schmidhuber,2000-07-26,Recurrent nets that time and count,https://ieeexplore.ieee.org/document/861302,630.0,,,17.0,"""In absence of the 3 peephole connections there are 14 adjustable weights""",,,,,,,64970000.0,See Table 2,,,,,,,,,,,,2024-09-05 18:08:31+00:00,Switzerland,,,,,,,,,
SVD in recommender systems,Recommendation,University of Minnesota,Academia,"B Sarwar, G Karypis, J Konstan, J Riedl",2000-07-14,Application of Dimensionality Reduction in Recommender System -- A Case Study,http://robotics.stanford.edu/~ronnyk/WEBKDD2000/papers/sarwar.pdf,2126.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-15 21:47:03+00:00,United States of America,,,,,,,,,
Perceptron for Large Margin Classification,Vision,"University of California San Diego,Shannon Laboratory,AT&T","Academia,Industry",Yoav Freund & Robert E. Schapire,1999-12-01,Large Margin Classification Using the Perceptron Algorithm,https://link.springer.com/article/10.1023/A:1007662407062,1731.0,Highly cited,,,,,,,,MNIST,,60000.0,"""The dataset consists of 60,000 training examples and 10,000 test examples.""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
IBM Model 4,Language,"University of Southern California,IBM,University of Pennsylvania","Academia,Industry,Academia","Yaser Al-Onaizan, Jan Curin, Michael Jahr, Kevin Knight, John Lafferty, Dan Melamed, Franz-Josef Och, David Purdy, Noah A. Smith, and David Yarowsky",1999-07-02,Statistical machine translation,http://www-i6.informatik.rwth-aachen.de/publications/download/266/al-onaizan--1999.pdf,1921.0,Highly cited,,,,,,,,,,800000.0,"[WORDS]
See FIgure 6",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Credibilty Network,Vision,"University College London (UCL),University of Toronto","Academia,Academia","Geoffrey E. Hinton, Zoubin Ghahramani, Vee Whye Tah",1999-07-01,Learning to Parse Images,https://proceedings.neurips.cc/paper_files/paper/1999/file/5a142a55461d5fef016acfb927fee0bd-Paper.pdf,,,,324.0,"The size of the credibility network is 256-64-4. The 64 middle layer units are meant to encode low level features, while each of the 4 top level units are meant to encode a digit class",5443200.0,,,=6*324 parameters *2800 datapoints,CEDAR CDROM-1,"700*4 classes = 2800 
The data used is a set of 4400 images of single digits from the classes 2, 3, 4 and 5 derived from the CEDAR CDROM 1 database [17]. Each image has size 16x16. The size of the credibility network is 256-64-4. The 64 middle layer units are meant to encode low level features, while each of the 4 top level units are meant to encode a digit class. We used 700 images of single digits from each class· to train the network. ",2800.0,,,,,,,,"We describe a class of probabilistic models that we call credibility networks. Using parse trees as internal representations of images, credibility networks are able to perform segmentation and recognition simultaneously, removing the need for ad hoc segmentation heuristics. Promising results in the problem of segmenting handwritten digits were obtained. ",,Unreleased,,Speculative,2025-02-17 18:39:20+00:00,"United Kingdom of Great Britain and Northern Ireland,Canada",,,,,,,,,
RECONTRA-uncategorized,Language,,,"M. A. Castaño, F. Casacuberta",1999-06-02,Text-to-text machine translation using the RECONTRA connectionist model,https://www.semanticscholar.org/paper/Text-to-Text-Machine-Translation-Using-the-RECONTRA-Casta%C3%B1o-Casacuberta/47ee046b416d9258952cb8f4b0e2b6e65f334fad,,Training cost,,112000.0,"8*61*160+160*160+160*52=112000
""a network with 61 input units, 52 outputs, 160 hidden traits and 8 (4+I+3) delayed inputs""
Table 1
",3864000000000.0,,," 2*112000*3*11.5*5000*100=3864000000000=3.9e12
""was trained for 100 epochs using the 5,000 pairs""
""The length of the non-categorized Spanish sentences ranged from 3 to 20 and the length of the non-categorized English sentences, from 3 to 17""",,,57500.0,"5000*11.5=57500
The length of the non-categorized Spanish sentences ranged from 3 to 20 and the length of the non-categorized English sentences, from 3 to 17",100.0,,,,,Supervised,"Encouragingly accurate translations have recently been obtained using a connectionist translator called RECONTRA (Recurrent Connectionist Translator). In contrast to traditional Knowledge-Based systems, this model is built from training data resulting in an Example-Based approach. It directly carries out the translation between the source and target language and employs a simple (recurrent) connectionist topology and a simple training scheme. This paper extends previous work exploring the capabilities of this RECONTRA model to perform text-to-text translations in limited-domain tasks.",,,,Unverified,2025-02-17 20:59:59+00:00,,,,,,,,,,
RECONTRA-categorized,Language,,,"M. A. Castaño, F. Casacuberta",1999-06-02,Text-to-text machine translation using the RECONTRA connectionist model,https://www.semanticscholar.org/paper/Text-to-Text-Machine-Translation-Using-the-RECONTRA-Casta%C3%B1o-Casacuberta/47ee046b416d9258952cb8f4b0e2b6e65f334fad,,Training cost,,66780.0,"6*50*140+140*140+140*37=66780
Table 1

",8013600000000.0,,,"2*66780*3*500*5000*8=8013600000000=8e12
""The number of words of the categorized sentences ranged from 3 to 13 for the Spanish ones and from 3 to 12 for the English ones.""
""was trained up to 500 epochs using the 5,000 categorized pairs""",,,40000.0,"5000*8=40000 words
The number of words of the categorized sentences ranged from 3 to 13 for the Spanish ones and from 3 to 12 for the English ones.
",500.0,,,,,Supervised,"Encouragingly accurate translations have recently been obtained using a connectionist translator called RECONTRA (Recurrent Connectionist Translator). In contrast to traditional Knowledge-Based systems, this model is built from training data resulting in an Example-Based approach. It directly carries out the translation between the source and target language and employs a simple (recurrent) connectionist topology and a simple training scheme. This paper extends previous work exploring the capabilities of this RECONTRA model to perform text-to-text translations in limited-domain tasks.",,,,Unverified,2025-02-17 21:00:06+00:00,,,,,,,,,,
LSTM with forget gates,Language,IDSIA,Academia,"F. A. Gers, J. Schmidhuber, and F. Cummins",1999-01-02,Learning to forget: Continual prediction with LSTM,https://ieeexplore.ieee.org/document/818041,6283.0,Highly cited,,276.0,See Table 1,,,,,,,30000.0,"Training was stopped after at most 30000
training streams, each of which was ended
when the first prediction error or the
100000th successive input symbol occurred

NOTE this is a weird task. Not sure how to measure dataset size (#seqs? #symbols?)",,,,,,,,,,,,2024-11-01 14:05:18+00:00,Switzerland,,,,,,,,,
LeNet-5,Vision,AT&T,Industry,"Yann LeCun, Léon Bottou, Yoshua Bengio, Patrick Haffner",1998-11-01,Gradient-based Learning Applied to Document Recognition,http://vision.stanford.edu/cs598_spring07/papers/Lecun98.pdf,50261.0,"Historical significance,Highly cited",,60000.0,"""[LeNet5] contains 390408 connections, but only 60000 trainable free parameters because of the weight sharing""",2810937600000.0,,,"""[LeNet5] contains 390408 connections"" = multiply-adds
MNIST - 60,000 data points
20 epochs",MNIST,,60000.0,"The MNIST database contains 60,000 training images and 10,000 testing images (Wikipedia)",,,,,,,,,,,,2025-02-17 18:37:38+00:00,United States of America,,,,,,,,,
Social and content-based classification,Recommendation,"AT&T,Bell Laboratories,Rutgers University","Industry,Industry,Academia","C Basu, H Hirsh, W Cohen",1998-07-01,Recommendation as Classification: Using Social and Content-based Information in Recommendation,https://www.aaai.org/Papers/AAAI/1998/AAAI98-101.pdf,1564.0,Highly cited,,,,,,,,,,45000.0,"""Our data set consists of more than 45,000 movie rat-
ings collected from approximately 260 users.""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America,United States of America",,,,,,,,,
Probabilistic modeling for object recognition,Vision,Carnegie Mellon University (CMU),Academia,"H Schneiderman, T Kanade",1998-06-23,Probabilistic modeling of local appearance and spatial relationships for object recognition,https://ieeexplore.ieee.org/document/698586,602.0,,,,,,,,,,,120472.0,"Section 5.1: ""We formed training sets from 991 faces images and 1,552
non-face images.""
""For each face image we generated
120 synthetic variations""

991*120+1552 = 120472",,,,,,,,,,,,2025-01-27 19:39:05+00:00,United States of America,,,,,,,,,
RNN for speech,Speech,National Chiao Tung University,Academia,"SH Chen, SH Hwang, YR Wang",1998-05-15,An RNN-based prosodic information synthesizer for Mandarin text-to-speech,https://ieeexplore.ieee.org/abstract/document/668817,231.0,,,7512.0,"""The RNN generated a total of eigt output prosodic parameters. [...] The numbers of nodes in the first and second hidden layers were determined empirically and set to be 35 and 30, respectively""

Figure 1 contains an overview of the architecture.

Layer 1: (102 + 35 + 1)*35 parameters
Layer 2: (43 + 35 + 1)*30 parameters
Output layer: (30+8+1)*8 parameters",226690156032.01837,,,Extracted from AI and Compute (https://openai.com/blog/ai-and-compute/) charts by using https://automeris.io/WebPlotDigitizer/.,,,14096.0,"The data base was divided into two parts: a training set and an open test set. These two sets consisted of 28 191 and 7051 syllables,
respectively.

Of the top 10,000 Chinese words, 15% have 1 syllable, 78% have 2 syllables, and 7% have more than two syllables. Assuming 2 syllables per word, the training set is around 14100 words.",,,,,,,,,,,,2025-02-17 20:03:41+00:00,Taiwan,,,,,,,,,
Sparse coding model for V1 receptive fields,Vision,"UC Davis,Cornell University","Academia,Academia","Bruno A. Olshausen, David J. Field",1997-12-01,Sparse coding with an overcomplete basis set: A strategy employed by V1?,https://www.sciencedirect.com/science/article/pii/S0042698997001697,4257.0,Highly cited,,,,,,,,,,10.0,"In Simulation Methods: ""The data for training were taken from ten 512 × 512
pixel images of natural surroundings""",,,,,,,,,,,,2024-09-16 03:43:41+00:00,"United States of America,United States of America",,,,,,,,,
LSTM,Language,Technical University of Munich,Academia,Sepp Hochreiter ; Jurgen Schmidhuber,1997-11-15,Long short-term memory,https://direct.mit.edu/neco/article-abstract/9/8/1735/6109/Long-Short-Term-Memory?redirectedFrom=fulltext,82231.0,Highly cited,,10504.0,"Table 2

http://www.bioinf.jku.at/publications/older/2604.pdf",21008000000000.0,,,"""Due to limited computation time, training is stopped after 5 million sequence presentations""

Each sequence has p=100 elements in the long-delay setting.

COMPUTE = PRESENTATIONS * PRESENTATION LENGTH * UPDATE COMPUTE PER TOKEN",,,1273000.0,"Table 8. The rightmost column lists numbers of training sequences required to achieve the stopping
criterion.

This applies to experiment 5 (multiplication)

Sequences have random lengths, on the order of 100-1000 (table 7 )",,,,,,,,,,,,2025-03-06 20:00:28+00:00,Germany,,,,,,,,,
Bidirectional RNN,Speech,Advanced Telecommunications Research Institute,Industry,"M. Schuster, KK Paliwal",1997-11-01,Bidirectional recurrent neural networks,https://ieeexplore.ieee.org/document/650093,7990.0,Highly cited,,13000.0,"Page 7: ""The structures of all networks are adjusted so that
each of them has about the same number of free parameters
(approximately 13 000 here""",,,,,TIMIT,,73920.0,"""the training data set consisting of 3696 sentences
from 462 speakers""

Assuming avg sentence length of 20 words

3696 * 20 total words",,,,,,,,,,,,2024-11-01 14:05:18+00:00,Japan,,,,,,,,,
n-gram LM,Language,"University of Cambridge,Carnegie Mellon University (CMU)","Academia,Academia","P Clarkson, R Rosenfeld",1997-07-01,Statistical language modeling using the CMU-Cambridge toolkit,https://www.semanticscholar.org/paper/Statistical-language-modeling-using-the-toolkit-Clarkson-Rosenfeld/fdf4aa623e4d5b5edaeb873ed8e8b1cef0b59c87,954.0,,,,,,,,,,,,,,,,,,Supervised,,,,,Unknown,2024-09-16 03:45:34+00:00,"United Kingdom of Great Britain and Northern Ireland,United States of America",,,,,,,,,
SVM for face detection,Vision,Massachusetts Institute of Technology (MIT),Academia,"E. Osuna, R. Freund, F. Girosi",1997-06-17,Training Support Vector Machines: An Application to Face Detection,https://ieeexplore.ieee.org/document/609310,3851.0,Highly cited,,,,,,,,,,50000.0,"Section 1: ""The problem that we have to solve involves training a classifier
to discriminate between face and non-face patterns, using a
data set of 50,000points. """,,,,,,,,,,,,2024-09-16 03:48:27+00:00,United States of America,,,,,,,,,
Deep Blue,Games,IBM,Industry,"Murray Campbell, A. Joseph Hoane Jr., Feng-hsiung Hsu",1997-05-01,Deep Blue,https://www.sciencedirect.com/science/article/pii/S0004370201001291,1992.0,"Historical significance,Highly cited","Defeated Kasparov in 1997, which was a famous AI milestone.",8000.0,"""The new chess chip had a completely redesigned evaluation function, going from around 6400 features to over 8000""",,,,"The 8000 features were tuned using a mix of human judgment and automated tools using data on chess matches. Unclear how much total ""compute"" went into this.",,,,,,,,,,,"Deep Blue is the chess machine that defeated then-reigning World Chess Champion Garry Kasparov in a six-game match in 1997. There were a number of factors that contributed to this success, including:
•a single-chip chess search engine,

•a massively parallel system with multiple levels of parallelism,

•a strong emphasis on search extensions,

•a complex evaluation function, and

•effective use of a Grandmaster game database.


This paper describes the Deep Blue system, and gives some of the rationale that went into the design decisions behind Deep Blue.",,Unreleased,,Speculative,2024-09-05 18:09:31+00:00,United States of America,,,,,,,,,
SOM-CNN,Vision,,,"S. Lawrence, C. Lee Giles, A. Tsoi, A. Back",1997-01-31,Face recognition: a convolutional neural-network approach,https://www.semanticscholar.org/paper/Face-recognition%3A-a-convolutional-neural-network-Lawrence-Giles/86890c82b589e24007c56e1f40c5f928a0e04183,,"Historical significance,Highly cited",,32015.0,"SOM: 125
L1: 20*3*3*3=540
L2: 25*3*3*20*0.3=1350
L3: 25*5*6*40=30000
Total: 125+540+1350+30000=32,015
(see Table 1)",31431600000.0,,,"Forward pass flop based on architecture (see Table 1): 
First CNN layer: 23*28 -> 3*3*20
2*21*26*3*3*20=196560
Second CNN layer: 20*11*13 -> 3*3*25*0.3
2*9*11*3*3*20*25*0.3=267300
FC layer: 25*5*6 -> 40
2*25*5*6*40=60000
Total forward FLOP: 196560+267300+60000=523860
Total training compute: 523860*3*20000=31431600000
Training steps: ""The network was trained with backpropagation [13] for a total of 20 000 updates.""",,"ORL: 10 images of 40 subjects (400 total). Input images are 92x112 pixels, grayscale.",200.0,"""a total of 200 training images and 200 test images."" but note that images are sub-sampled to smaller local windows for training.",100.0,,,,,Supervised,"We present a hybrid neural-network for human face recognition which compares favourably with other methods. The system combines local image sampling, a self-organizing map (SOM) neural network, and a convolutional neural network. The SOM provides a quantization of the image samples into a topological space where inputs that are nearby in the original space are also nearby in the output space, thereby providing dimensionality reduction and invariance to minor changes in the image sample, and the convolutional neural network provides partial invariance to translation, rotation, scale, and deformation. The convolutional network extracts successively larger features in a hierarchical set of layers. We present results using the Karhunen-Loeve transform in place of the SOM, and a multilayer perceptron (MLP) in place of the convolutional network for comparison. We use a database of 400 images of 40 individuals which contains quite a high degree of variability in expression, pose, and facial details. We analyze the computational complexity and discuss how new classes could be added to the trained recognizer.",,,,Unverified,2025-02-18 16:10:09+00:00,,,,,,,,,,
HMM Word Alignment,Language,University of Erlangen - Nuremburg,Academia,"Stephan Vogel, Hermann Ney, Christoph Tillmann",1996-08-05,HMM-Based Word Alignment in Statistical Translation,https://dl.acm.org/doi/10.3115/993268.993313,1099.0,Highly cited,,,,,,,,,,442316.0,"[WORDS]
Table 1.
I take the sum of all words. Maybe it would be better to use only the sum of English or German words?",,,,,,Supervised,,,,,,2025-02-28 18:35:24+00:00,Germany,,,,,,,,,
AdaBoost.M2 Digit Recognition,Vision,AT&T,Industry,"Yoav Freund, Robert E. Schapire",1996-07-03,Experiments with a New Boosting Algorithm,https://cseweb.ucsd.edu/~yfreund/papers/boostingexperiments.pdf,12977.0,Highly cited,Also listed in Denis Panjuta's List of 100+ AI Algorithms,,,,,,,,"""The dataset comes from the US Postal Service (USPS)
and consists of 9709 training examples""",9709.0,,,,,,,,"In an earlier paper, we introduced a new “boosting” algorithm called AdaBoost which, theoretically, can be used to significantly reduce the error of any learning algorithm that con- sistently generates classifiers whose performance is a little better than random guessing. We also introduced the related notion of a “pseudo-loss” which is a method for forcing a learning algorithm of multi-label concepts to concentrate on the labels that are hardest to discriminate. In this paper, we describe experiments we carried out to assess how well AdaBoost with and without pseudo-loss, performs on real learning problems.
We performed two sets of experiments. The first set compared boosting to Breiman’s “bagging” method when used to aggregate various classifiers (including decision trees and single attribute- value tests). We compared the performance of the two methods on a collection of machine-learning benchmarks. In the second set of experiments, we studied in more detail the performance of boosting using a nearest-neighbor classifier on an OCR problem.",,,,Confident,2024-09-24 20:13:39+00:00,United States of America,,,,,,,,,
System 11,Vision,Carnegie Mellon University (CMU),Academia,"HA Rowley, S Baluja, T Kanade",1996-06-18,Neural Network-Based Face Detection,https://ieeexplore.ieee.org/document/655647,6011.0,Highly cited,,6452.0,"System 11 is a combination of Network 1 and Network 2

Network 1 has 2095 connections and network 2 has 4357 connections (see table 1)",12930000000.0,,,"Since there is no parameter sharing, the forward compute is roughly twice that of the number of parameters. We use a 2:1 forward-backward ratio as this is a shallow network, with most connections in the first layer.

Number of passes (Section 2.1):
* ""Nearly 1,050 face examples were gathered from face databases [...]""
* ""Fifteen face examples are generated for the training set from each original image""

Training loop:
1. ""initial set of nonface images by generating 1,000 random images""
2. Train (presumably on whole set)
3. Run + collect false positives
4. ""Select up to 250 of these subimages [...] and add them into the training set [...] Go to step 2""

""A typical training run selects approximately 8,000 nonface images ""

Selecting 8,000 nonface images implies 8000/250 = 32 loops.

Assuming compute is 3 * N * D, we have
* Loop 1: D = 15*1050 + 1000
* Loop 2: D = 15*1050 + 1000 + 250
* So on.

Hence D overall is 32*(15*1050 + 1000) + 250*32/2*(32+1) = 668,000.

Hence compute = 3 * 6452 * 668e3 = 1.3e10.",,,9050.0,"""A typical training
run selects approximately 8000 non-face images from the
146,212,178 subimages that are available at all locations
and scales in the training scenery images.""

""Nearly 1050 face examples were gathered from face databases at CMU and Harvard [...] In the training set,15 face examples are generated from each
original image [...]""

""Create an initial set of non-face images by generating
1000 images with random pixel intensities""",,,,,,,,,,,,2025-02-17 20:59:42+00:00,United States of America,,,,,,,,,
MUSIC perceptron,Vision,,,M. Kocheisen; U.A. Muller; G. Troster,1996-06-03,A neural network for grey level and color correction used in photofinishing,https://ieeexplore.ieee.org/document/549237,,Historical significance,,13607.0,230*55+56*15+16*6+7*3=13607 (Figure 2),881733600000.0,,,"2*13607*3*10800000=881733600000=8.8e11
Training steps: 400*27000=10800000
""After 400 epochs the error of the network""",,,27000.0,"“The training experiments were carried out on a database of 30,000 photos. Therefor the database was split into ten sets. Nine of them were used for the training and one for the testing.”",400.0,,,,,,"The application of a multilayer perceptron for color and gray level correction in the field of photofinishing is presented. It is shown, that a neural network can improve the overall performance of a state of the art photo printer. The improved correction ability will reduce the number of unsalable pictures and thus lowers the production costs for the photo laboratory. The training experiments were carried out on a database of 30,000 photos using the MUSIC parallel supercomputer. The MUSIC system made it possible, for the first time, to process this large database in a reasonable time.",,,,Confident,2025-02-17 18:34:34+00:00,,,,,,,,,,
LISSOM,Vision,University of Texas at Austin,Academia,"Yoonsuck Choe, Joseph Sirosh, R. Miikkulainen",1995-11-27,Laterally Interconnected Self-Organizing Maps in Hand-Written Digit Recognition,https://www.semanticscholar.org/paper/Laterally-Interconnected-Self-Organizing-Maps-in-Choe-Sirosh/785f5facc76538ceba6f6b9e2d7b641d322e9854,,"SOTA improvement,Historical significance",,432800.0,"Total connections 32*32*20*20+20*20*48+20*20*10=432800
Input: 32*32, Lissom: 20*20, Output: 10 (Figure 1a), up to 48 lateral connections per Lissom neuron (Figure 1b)
",195544800000.0,,,"Lissom connections: 32*32*20*20+20*20*48=428800
Lissom compute: 2*428800*3*38*2000=195532800000=1.96e11
Perceptron connections: 20*20*10=4000
Perceptron compute: 2*4000*3*500*1700=20400000000=2e10
Total compute: 195532800000+12000000=195544800000=1.96e11
""LISSOM was trained with 2000 patterns""
""The initial self-organizing map was formed in 8 epochs over the training set, gradually reducing the neighborhood radius from 20 to 8. The lateral connections were then added to the system, and over another 30 epochs,""
""Of these, 1700 were used to train the perceptron layer, ""
""After the SOM and LISSOM maps were organized, a complete set of activation patterns on the two maps were collected. These patterns then formed the training input for the perceptron layer. Two separate versions were each trained for 500 epochs,""

",,,2000.0,"""LISSOM was trained with 2000 patterns""",38.0,,,,,,"An application of laterally interconnected self-organizing maps (LISSOM) to handwritten digit recognition is presented. The lateral connections learn the correlations of activity between units on the map. The resulting excitatory connections focus the activity into local patches and the inhibitory connections decorrelate redundant activity on the map. The map thus forms internal representations that are easy to recognize with e.g. a perceptron network. The recognition rate on a subset of NIST database 3 is 4.0% higher with LISSOM than with a regular Self-Organizing Map (SOM) as the front end, and 15.8% higher than recognition of raw input bitmaps directly. These results form a promising starting point for building pattern recognition systems with a LISSOM map as a front end.",,,,Likely,2025-02-19 17:33:01+00:00,United States of America,,,,,,,,,
Support Vector Machines,Vision,"AT&T,Bell Laboratories","Industry,Industry","C Cortes, V Vapnik",1995-09-01,Support-Vector Networks,https://link.springer.com/article/10.1007/BF00994018,48968.0,Highly cited,,100000000.0,"Section 6.2.2: ""...polynomials
of degree 4 (that have more than 10^8 free parameters)...""
They used 4-degree polynomials for MNIST",,,,,MNIST,,60000.0,"Section 6.2: ""The large database consists of 60,000 training and 10,000 test patterns""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,"United States of America,United States of America",,,,,,,,,
Random Decision Forests,Other,"AT&T,Bell Laboratories","Industry,Industry",TK Ho,1995-08-14,Random decision forests,https://ieeexplore.ieee.org/document/598994,4678.0,Highly cited,,,,,,,,MNIST,,60000.0,The images are from the 1992 NIST (National Institute of Standards and Technology) Competition,,,,,,,,,,,,2024-09-16 04:35:34+00:00,"United States of America,United States of America",,,,,,,,,
Iterative Bootstrapping WSD,Language,University of Pennsylvania,Academia,D Yarowsky,1995-06-26,Unsupervised Word Sense Disambiguation Rivaling Supervised Methods,https://dl.acm.org/doi/10.3115/981658.981684,2996.0,Highly cited,,,,,,,,,,460000000.0,the data were extracted from a 460 million word corpus,,,,,,,,,,,,2024-09-16 03:53:05+00:00,United States of America,,,,,,,,,
Multi-cause Binary Clustering,Other,Xerox,Industry,Eric Saund,1995-01-01,A Multiple Cause Mixture Model for Unsupervised Learning,https://ieeexplore.ieee.org/document/6795568,176.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 04:40:38+00:00,United States of America,,,,,,,,,
JPMAX,Vision,,,Suzanna Becker,1994-12-02,JPMAX: Learning to Recognize Moving Objects as a Model-fitting Problem,https://proceedings.neurips.cc/paper_files/paper/1994/hash/4b0250793549726d5c1ea3906726ebfe-Abstract.html,,Historical significance,,4446.0,"Inputs are 12x12 pixels (Figure 3). They first train the architecture in Figure 2 a), then freeze it and train the additional layer in Figure 3 b).

Figure 2 a): 2*(12*12*15) + 2*15 = 4,350
Figure 2 b): 2*(12*12*15) + 2*15 + 2*(15*3) + 2*3 = 4,446",80828280.0,,,"Training 2a):  ""The learning took about 3000 iterations of steepest descent"" Assuming each iteration refers to a single image.
6 * 4446 * 3000 = 80,028,000

Training 2b): ""While keeping the first layer of weights frozen, this network was trained using exactly the same cost function as the first layer for about 30 iterations using a gradient-based learning method.""

6 * 4446 * 30 = 800,280

Total: 80,828,280",,,1500.0,“Figure 3: 10 of the 1500 training patterns”,,,,,,,"Unsupervised learning procedures have been successful at low-level feature extraction and preprocessing of raw sensor data. So far, however, they have had limited success in learning higher-order representations, e.g., of objects in visual images. A promising ap(cid:173) proach is to maximize some measure of agreement between the outputs of two groups of units which receive inputs physically sep(cid:173) arated in space, time or modality, as in (Becker and Hinton, 1992; Becker, 1993; de Sa, 1993). Using the same approach, a much sim(cid:173) pler learning procedure is proposed here which discovers features in a single-layer network consisting of several populations of units, and can be applied to multi-layer networks trained one layer at a time. When trained with this algorithm on image sequences of moving geometric objects a two-layer network can learn to perform accurate position-invariant object classification.",,,,Speculative,2025-02-18 16:12:38+00:00,,,,,,,,,,
Predictive Coding NN,Language,Technical University of Munich,Academia,"J. Schmidhuber, Stefan Heil",1994-12-02,Predictive Coding with Neural Nets: Application to Text Compression,https://proceedings.neurips.cc/paper/1994/file/5705e1164a8394aace6018e27d20d237-Paper.pdf,,Historical significance,,206910.0,"5*80*430+430+430*80+80=206910
""P has nk input units and k output units. n is called the ""time-window size""
""Note that the time-window was quite small (n = 5).""
""alphabet consisted of k = 80 possible characters""
""P had 430 hidden units""",18621900000000.0,,,"2*206910*3*15000000=18621900000000=1.86e13
""The training phase consisted of 25 sweeps through the training set""",,,600000.0,"Training dataset: 15000*40=600000
""The training set for the predictor was given by a set of 40 articles from the newspaper Miinchner M erkur, each containing between 10000 and 20000 characters.""",25.0,,,,,,"To compress text files, a neural predictor network P is used to approximate the conditional probability distribution of possible ""next characters"", given n previous characters. P's outputs are fed into standard coding algorithms that generate short codes for characters with high predicted probability and long codes for highly unpredictable characters. Tested on short German newspaper articles, our method outperforms widely used Lempel-Ziv algorithms (used in UNIX functions such as ""compress"" and ""gzip"").",,,,Confident,2025-02-18 16:13:05+00:00,Germany,,,,,,,,,
Mixture of linear models,Vision,,,"Geoffrey E. Hinton, M. Revow, P. Dayan",1994-12-02,Recognizing Handwritten Digits Using Mixtures of Linear Models,https://www.semanticscholar.org/paper/Recognizing-Handwritten-Digits-Using-Mixtures-of-Hinton-Revow/9dea20c1e5bbb1f543ff08113ffde5380c679f1f,,Historical significance,,384000.0,"“In the example we describe, 7000 training images are sufficient to fit 384,000 parameters“",453600000000.0,,,"0.3*12*60*60*35000000=453600000000=4.54e11
Assuming a utilization of 0.3 and interpreting ""overnight"" as 12 hours.
“the training procedure is fast enough to do the fitting overnight on an R4400-based machine. “
R4400 has 35MFLOPS (“Compare this to the 200MHz R4400 which is rated at about 35MFLOPS”, http://www.sgidepot.co.uk/perf.html)",,,7000.0,"""7000 training images are sufficient""",,12.0,"""the training procedure is fast enough to do the fitting overnight on an R4400-based machine.""",,,,"We construct a mixture of locally linear generative models of a collection of pixel-based images of digits, and use them for recognition. Different models of a given digit are used to capture different styles of writing, and new images are classified by evaluating their log-likelihoods under each model. We use an EM-based algorithm in which the M-step is computationally straightforward principal components analysis (PCA). Incorporating tangent-plane information [12] about expected local deformations only requires adding tangent vectors into the sample covariance matrices for the PCA, and it demonstrably improves performance.",,,,Likely,2025-02-18 16:13:30+00:00,,,,,,,,,,
NeuroChess,Games,,,S. Thrun,1994-12-02,Learning to Play the Game of Chess,https://www.semanticscholar.org/paper/Learning-to-Play-the-Game-of-Chess-Thrun/4bc7a6dcb9e0e6c7a26800532e2a00f5572eea47,,"Historical significance,Highly cited",,72251.0,"""Prior to learning an evaluation function, the model M (175 input, 165 hidden, and 175 output units)"" = 58,090 parameters
""NeuroChess then learns an evaluation network V (175 input units, 0 to 80 hidden units, and one output units)."" = 14,161 parameters
Total: 58,090 + 14,161 = 72,251",858730812676.0,,,"Lower bound: 0.3*2*24*60*60*1400000=72576000000=7.26e10
Upper bound: 0.3*14*24*60*60*1400000*20=10160640000000=1.02e13
Geometric mean: 858730812676=8.59e11 (speculative)
""Thus far, experiments lasted for 2 days to 2 weeks on I to 20 SUN Sparc Stations. ""
SparcStation has 1.4 MFLOPS (https://ieeexplore.ieee.org/document/63671)
",,,120000.0,"""is trained using a database of 120,000 expert games.""",,,,,,,"This paper presents NeuroChess, a program which learns to play chess from the final outcome of games. NeuroChess learns chess board evaluation functions, represented by artificial neural networks. It integrates inductive neural network learning, temporal differencing, and a variant of explanation-based learning. Performance results illustrate some of the strengths and weaknesses of this approach.",,,,Speculative,2025-02-19 17:29:51+00:00,,,,,,,,,,
GroupLens,Recommendation,Massachusetts Institute of Technology (MIT),Academia,"Paul Resnick, Neophytos Iacovou, Mitesh Suchak, Peter Bergstrom, John Riedl",1994-10-22,GroupLens: an Open Architecture for Collaborative Filtering of Netnews,https://dl.acm.org/doi/10.1145/192844.192905,7733.0,Highly cited,,,"For each pair of users, the system computes the correlation between their scores in the articles they have rated.

Then to make the prediction of a score for a given article and user the system computes a weighted average taking into account the correlations with each other user, the average rating of each user and the average rating of the article.

So the system in total has n+m+n*n ~= n*n parameters, where n is the number of users and m is the number of articles.

To address scaling issues, the system is partioned into clusters of users. It's very unclear what is the number of users per cluster, though the Daily ratings traffic table provided suggests that is around 10k users ",,,,,,,100000000.0,"For each pair of users, the system computes the correlation between their scores in the articles they have rated.

Then to make the prediction of a score for a given article and user the system computes a weighted average taking into account the correlations with each other user, the average rating of each user and the average rating of the article.

So the system in total has n+m+n*n ~= n*n parameters, where n is the number of users and m is the number of articles.

To address scaling issues, the system is partioned into clusters of users. It's very unclear what is the number of users per cluster, though the Daily ratings traffic table provided suggests that is around 10k users ",,,,,,,,,,,,2024-09-15 21:46:40+00:00,United States of America,,,,,,,,,
Markov-driven POS tagger,Language,EURECOM,Academia,Bernard Merialdo,1994-06-01,Tagging English Text with a Probabilistic Model,https://dl.acm.org/doi/10.5555/972525.972526,788.0,,,2447124.0,"""The total number of free parameters is then:
(Nw - 1).NT + (NT - 1).NT.NT.""
Where:
Nw= Vocabulary size
NT = Number of tags

""In the treebank 159 different tags are used. These tags were projected on a smaller system of 76 tags designed by Evelyne Tzoukermann and Peter Brown (see Appendix). The results quoted in this paper all refer to this smaller system""
So NT = 76

https://www.aclweb.org/anthology/J94-2001/

There is no direct reference to Nw, but the data is from ""Lexicon and grammar in probabilistic tagging of written English."" which says

""(the new CLAWS lexicón has almost 26,500 entries)""
So tentatively Nw=26500

https://dl.acm.org/doi/10.3115/982023.982049",,,,,,,1000000.0,"""We use the ""treebank"" data described in Beale (1988). It contains 42,186 sentences (about one million words) from the Associated Press.""
https://www.aclweb.org/anthology/J94-2001.pdf",,,,,,,,,,,,2024-09-05 18:08:31+00:00,France,,,,,,,,,
Ceramic-MLP,Materials science,Sapienza Università di Roma,Academia,"G. Bonifazi, P. Burrascano",1994-01-07,Ceramic powder characterization by multilayer perceptron (MLP) data compression and classification,https://www.sciencedirect.com/science/article/abs/pii/S0921883108605506,,Historical significance,,1888.0,"Parameters: 100*16 + 16*16 + 16*2 = 1888
Architecture: ""The topology of the classifier was X-Y-Y-2, where X is the number of input components, Y is the number of neurons in each hidden layer and the number of neurons in the output layer is two, which is the number of classes. The two hidden layers were considered to have the same number of nodes for simplification purposes. ""
Input size: ""Each pattern consists of a 10 x 10 pixel sub-image.""
Hidden size: ""Experiments have been made on networks with 6, 9, 12 and 16 hidden nodes. """,4531200000.0,,,"Compute estimate: 2*1888*3*400000=4531200000=4.53e9
Training steps: ""In Fig. 6 we report the classification results obtained on the testing set in the 12 and 16 component compressed data after 400000 training iterations""",,,80.0,"After the pre-processing phase, a training set of 80 patterns and a testing set of 64 patterns were available.",5000.0,,,,,,"A neural network approach for pattern classification has been explored in the present paper as part of the recent resurgence of interest in this area. Our research has focused on how a multilayer feedforward structure performs in the particular problem of particle characterization. The proposed procedure, after suitable data preprocessing, consists of two distinct phases: in the former, a feedforward neural network is used to obtain an image data compression. In the latter, a neural classifier is trained on the compressed data. All the tests have been conducted on a sample constituted by two different typologies of ceramic particles, each characterized by a different microstructure. The sample image of different particles acquired and directly digitalized by scanning electron microscopy has been processed in order to achieve the best conditions to obtain the boundary profile of each particle. The boundary is thus assumed to be representative of the morphological characteristics of the ceramic products. Using the neural approach, a classification accuracy as high as 100% on a training set of 80 sub-images was achieved. These networks correctly classified up to 96.9% of 64 testing patterns not contained in the training set.",,,,Likely,2025-02-18 16:10:58+00:00,Italy,,,,,,,,,
ANN Eye Tracker,Vision,,,"S. Baluja, D. Pomerleau",1993-11-29,Non-Intrusive Gaze Tracking Using Artificial Neural Networks,https://www.semanticscholar.org/paper/Non-Intrusive-Gaze-Tracking-Using-Artificial-Neural-Baluja-Pomerleau/574c0cf98825bf09b0ab7bbfe9ba89cd6090745e,,Historical significance,,5620.0,"15*15*20+20+50*10*2+100=5620
Hidden layer is split, 15*15 image input, 2*50 output neurons (see Figure 2)
Hidden size up to 20 neurons (""This architecture was used with varying numbers of hidden units in the single, divided, hidden layer; experiments with 10, 16 and 20 hidden units were performed. "")",17534400000.0,,,"2*5620*3*520000=17534400000
Training examples: 2000*260=520000
""As mentioned before, 2000 image/position pairs were gathered for training""
""All of the networks described in this paper are trained with the same parameters for 260 epochs""",,"""2000 image/position pairs were gathered for training""",2000.0,,260.0,0.6,"""Training the 8x2 hidden layer network using the 15x40 input retina, with 2000 images, takes approximately 30-40 minutes on a Sun SPARC 10 machine. """,,,Supervised,"We have developed an artificial neural network based gaze tracking system which can be customized to individual users. A three layer feed forward network, trained with standard error back propagation, is used to determine the position of a user''s gaze from the appearance of the user''s eye. Unlike other gaze trackers, which normally require the user to wear cumbersome headgear, or to use a chin rest to ensure head immobility, our system is entirely non-intrusive. Currently, the best intrusive gaze tracking systems are accurate to approximately 0.75 degrees. In our experiments, we have been able to achieve an accuracy of 1.5 degrees, while allowing head mobility. In its current implementation, our system works at 15 hz. In this paper we present an empirical analysis of the performance of a large number of artificial neural network architectures for this task. Suggestions for further explorations for neurally based gaze trackers are presented, and are related to other similar artificial neural network applications such as autonomous road following.",,,,Confident,2025-02-17 20:58:33+00:00,,,,,,,,,,
Siamese-TDNN,Vision,Bell Laboratories,Industry,"J. Bromley, James W. Bentz, L. Bottou, Isabelle M Guyon, Yann LeCun, C. Moore, Eduard Säckinger, Roopak Shah",1993-08-01,"Signature Verification using a ""Siamese"" Time Delay Neural Network",https://www.semanticscholar.org/paper/Signature-Verification-Using-A-%22Siamese%22-Time-Delay-Bromley-Bentz/997dc5d9a058753f034422afe7bd0cc0b8ad808b,,"Historical significance,Highly cited",,744.0,"""The input is 8 by 200 units, the first convolutional layer is 6 by 192 units with each unit's receptive field covering 8 by 9 units of the input. The first averaging layer is 6 by 64 units, the second convolution layer is 4 by 57 with 6 by 8 receptive fields and the second averaging layer is 4 by 19""
""Two separate sub-networks based on Time Delay Neural Networks (Lang and Hinton, 1988, Guyon et al. 1990) act on each input pattern to extract features,""
""All weights could be learnt, but the two sub-networks were constrained to have identical weights.""
L1: H=1, W=200, C=8, K=9, D=6
L2: H=1, W=64, C=6, K=8, D=4
Parameters:  7*9*8+5*8*6=744",12869570138112.0,,,"8073216*3*7701*69=12869570138112=1.29e13
Forward pass flop: 2*(2*200*200*8*6+2*64*64*6*4)=8073216
""We used up to 7,701 signature pairs""
Epochs: 69 (Table 1)
",,"""In total, 219 people signed between 10 and 20 signatures each, 145 signed genuines, 74 signed forgeries."" ""We used up to 7,701 signature pairs""",7701.0,"""We used up to 7,701 signature pairs""",69.0,,,,,,"This paper describes an algorithm for verification of signatures written on a pen-input tablet. The algorithm is based on a novel, artificial neural network, called a ""Siamese"" neural network. This network consists of two identical sub-networks joined at their outputs. During training the two sub-networks extract features from two signatures, while the joining neuron measures the distance between the two feature vectors. Verification consists of comparing an extracted feature vector with a stored feature vector for the signer. Signatures closer to this stored representation than a chosen threshold are accepted, all other signatures are rejected as forgeries.",,,,Likely,2025-02-19 17:29:42+00:00,United States of America,,,,,,,,,
IBM-5,Language,IBM,Industry,"Peter F. Brown, Stephen A. Della Pietra, Vincent J. Della Pietra, Robert L. Mercer",1993-06-15,The Mathematics of Statistical Machine Translation: Parameter Estimation,https://dl.acm.org/doi/10.5555/972470.972474,5752.0,Highly cited,,1658364.0,"The model is initiallized with 2.44E+09 translation probabilities, which are progressively culled until 1,658,364 remain. There are other parameters in the models (eg the fertility probabilities that relate each word in the input to the number of words it will align to) but the parameter count is dominated by the translation probabilities.",,,,,Proceedings of the Canadian parliament,,53358600.0,"""They used the algorithm to extract a large number of translations from several years of the proceedings of the Canadian parliament. From these translations, we have chosen as our training data those for which both the English sentence and the French sentence are 30 or fewer words in length. This is a collection of 1,778,620 translations.""",,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Futures trading net,Other,,,"Lonnie Hamm, B. Wade Brorsen, and Ramesh Sharda",1993-01-01,Futures trading with a neural network,https://legacy.farmdoc.illinois.edu/nccc134/conf_1993/pdf/confp25-93.pdf,,,,,,5292000000.0,,,"0.3*35*60*60*140000=5292000000=5.29e9
“Training on the data from 1979-1985 took approximately 35 hours”
“The neural networks were trained on a 386Dx-25mhz processor”
0.14 MFLOPS taken from this benchmark: https://www.vogons.org/viewtopic.php?t=46350",,,,,,35.0,,,,,,,,,Speculative,2025-02-17 18:32:59+00:00,,,,,,,,,,
Boosting,Vision,Bell Laboratories,Industry,"H. Drucker, R. Schapire, Patrice Y. Simard",1992-11-30,Improving Performance in Neural Networks Using a Boosting Algorithm,https://www.semanticscholar.org/paper/Improving-Performance-in-Neural-Networks-Using-a-Drucker-Schapire/77b5185dafb9e5b884a677a32713e54c253a4e0b,,Historical significance,,2578.0,"“The network has 4645 neurons, 2578 different weights, and 98442 connections.“",,,,,,,9709.0,“divided into 9709 training examples and 2007 validation samples.”,,,,,,,"A boosting algorithm converts a learning machine with error rate less than 50% to one with an arbitrarily low error rate. However, the algorithm discussed here depends on having a large supply of independent training samples. We show how to circumvent this problem and generate an ensemble of learning machines whose performance in optical character recognition problems is dramatically improved over that of a single network. We report the effect of boosting on four databases (all handwritten) consisting of 12,000 digits from segmented ZIP codes from the United State Postal Service (USPS) and the following from the National Institute of Standards and Testing (NIST): 220,000 digits, 45,000 upper case alphas, and 45,000 lower case alphas. We use two performance measures: the raw error rate (no rejects) and the reject rate required to achieve a 1% error rate on the patterns not rejected. Boosting improved performance in some cases by a factor of three.",,,,Likely,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Cancer drug mechanism prediction,Medicine,National Cancer Institute,Government,"John N. Weinstein, Kurt W. Kohn, Michael R. Grever, Vellarkad N.
Viswanadhan, Lawrence V. Rubinstein, Anne P. Monks, Dominic A. Scudiero, Lester Welch, Antonis D. Koutsoukos, August J. Chiausa, Kenneth D. Paull",1992-10-16,Neural computing in cancer drug development: predicting mechanism of action,https://pubmed.ncbi.nlm.nih.gov/1411538/,,Historical significance,,594.0,"“The network shown has 60 input PEs, one for each cell line, and 6 output PEs“
“Neural networks with three to nine hidden layer PEs used”
9*60 + 6*9 = 594",53460000.0,,,"2*594*3*15000=53460000=5.35e7
“The extent of training was 15,000 presentations“",,,,,,,,,,,"Described here are neural networks capable of predicting a drug's mechanism of action from its pattern of activity against a panel of 60 malignant cell lines in the National Cancer Institute's drug screening program. Given six possible classes of mechanism, the network misses the correct category for only 12 out of 141 agents (8.5 percent), whereas linear discriminant analysis, a standard statistical technique, misses 20 out of 141 (14.2 percent). The success of the neural net indicates several things. (i) The cell line response patterns are rich in information about mechanism. (ii) Appropriately designed neural networks can make effective use of that information. (iii) Trained networks can be used to classify prospectively the more than 10,000 agents per year tested by the screening program. Related networks, in combination with classical statistical tools, will help in a variety of ways to move new anticancer agents through the pipeline from in vitro studies to clinical application.",,,,Likely,2025-02-17 20:58:15+00:00,United States of America,,,,,,,,,
Golem,Biology,Alan Turing Institute,Government,"S. Muggleton, Ross D. King, M. J. Sternberg",1992-10-01,Protein secondary structure prediction using logic-based machine learning.,https://www.semanticscholar.org/paper/Protein-secondary-structure-prediction-using-Muggleton-King/9f744e48091a24b569435d070920e60db45f4fdc,,"Historical significance,SOTA improvement",,,,,,,,,"""The input to the program consisted of 12 non-homologous proteins (1612 residues)""",1612.0,Table 1,,,,,,,"Many attempts have been made to solve the problem of predicting protein secondary structure from the primary sequence but the best performance results are still disappointing. In this paper, the use of a machine learning algorithm which allows relational descriptions is shown to lead to improved performance. The Inductive Logic Programming computer program, Golem, was applied to learning secondary structure prediction rules for alpha/alpha domain type proteins. The input to the program consisted of 12 non-homologous proteins (1612 residues) of known structure, together with a background knowledge describing the chemical and physical properties of the residues. Golem learned a small set of rules that predict which residues are part of the alpha-helices--based on their positional relationships and chemical and physical properties. The rules were tested on four independent non-homologous proteins (416 residues) giving an accuracy of 81% (+/- 2%). This is an improvement, on identical data, over the previously reported result of 73% by King and Sternberg (1990, J. Mol. Biol., 216, 441-457) using the machine learning program PROMIS, and of 72% using the standard Garnier-Osguthorpe-Robson method. The best previously reported result in the literature for the alpha/alpha domain type is 76%, achieved using a neural net approach. Machine learning also has the advantage over neural network and statistical methods in producing more understandable results.",,,,Confident,2024-10-21 15:22:55+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Fuzzy NN,Speech,Indian Statistical Institute,Academia,"SK Pal, S Mitra",1992-09-01,"Multilayer perceptron, fuzzy sets, and classification",https://ieeexplore.ieee.org/document/159058,1223.0,Highly cited,,1166.0,"Table II: ""he neural network has three hidden layers, with m hidden nodes in each layer"", m = 20, input dim. = 9, output dim. = 6",1403117760.0,,,1166 params * 2 FLOP/param * (3 for forward + backward pass) * 460 epochs * 436 examples,,,436.0,"""The above-mentioned algorithm was tested on a set of 871 Indian Telugu vowel sounds"" and 50% of the dataset was used. 871*0.5 ~= 436",,,,,,,,,,,,2025-02-17 18:32:50+00:00,India,,,,,,,,,
TD-Gammon,Games,IBM,Industry,G Tesauro,1992-05-01,Practical Issues in Temporal Difference Learning,https://papers.nips.cc/paper/1991/file/68ce199ec2c5517597ce0a4d89620f55-Paper.pdf,1344.0,Highly cited,,25000.0,"""The best performance was obtained with a network containing 80 hidden units and over 25,000 weights.""",18232157622832.703,,,Extracted from AI and Compute (https://openai.com/blog/ai-and-compute/) charts by using https://automeris.io/WebPlotDigitizer/.,,,6300000.0,"""This network was trained
for over 300,000 training games""

Each backgammon game has an avg of around 21 movements
https://www.bkgm.com/rgb/rgb.cgi?view+712",,,,,,,,,,,,2025-02-17 20:03:39+00:00,United States of America,,,,,,,,,
Weight Decay,Speech,,,"A. Krogh, J. Hertz",1991-12-02,A Simple Weight Decay Can Improve Generalization,https://www.semanticscholar.org/paper/A-Simple-Weight-Decay-Can-Improve-Generalization-Krogh-Hertz/48e1de7d085808004d5f0493d486669a3d2930b5,,"Highly cited,Historical significance",,8386.0," 7*26*40+40+40*26+26=8386
""The network had 7 x 26 input units, 40 hidden units and 26 output units""",75474000000.0,,,"2*8386*3*1500000=75474000000=7.55e10
""It was trained on 400 to 5000 random words from the data base of around 20.000 words,""
""The top full line corresponds to the generalization error after 300 epochs""
",,NetTalk dataset of 20000 words,5000.0,"""It was trained on 400 to 5000 random words from the data base of around 20.000 words,""",300.0,,,,,,"It has been observed in numerical simulations that a weight decay can improve generalization in a feed-forward neural network. This paper explains why. It is proven that a weight decay has two effects in a linear network. First, it suppresses any irrelevant components of the weight vector by choosing the smallest vector that solves the learning problem. Second, if the size is chosen right, a weight decay can suppress some of the effects of static noise on the targets, which improves generalization quite a lot. It is then shown how to extend these results to networks with hidden layers and non-linear units. Finally the theory is confirmed by some numerical simulations using the data from NetTalk.",,,,Confident,2025-02-17 20:58:09+00:00,,,,,,,,,,
SRN-Encoded Grammatical Structures,Language,University of California San Diego,Academia,J. L. Elman,1991-09-01,"Distributed representations, simple recurrent networks, and grammatical structure",https://dl.acm.org/doi/10.1007/BF00114844,1717.0,Highly cited,,,,,,,,,,177805.0,4 training sets of 10k sentences each. Total number of words calculated by multiplying 10k and the avg. number of words per sentence in the training set.,,,,,,,,,,,,2024-09-16 03:58:37+00:00,United States of America,,,,,,,,,
DIABETES,Medicine,"Aalborg University,University of London","Academia,Academia","S. Andreassen, R. Hovorka, J. Benn, K. G. Olesen, and E. R. Carson",1991-06-24,A Model-based Approach to Insulin Adjustment,https://link.springer.com/chapter/10.1007/978-3-642-48650-0_19,132.0,,,429409.0,From https://www.bnlearn.com/bnrepository/,,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,"Denmark,United Kingdom of Great Britain and Northern Ireland",,,,,,,,,
RAAM,Other,,,Jordan B. Pollack,1990-11-01,Recursive Distributed Representations,https://www.sciencedirect.com/science/article/abs/pii/000437029090005K?via%3Dihub,,Highly cited,,1536.0,"Largest model:
""A 48-16-48 RAAM learned to construct representations ""
Parameters 48*16*2 = 1536",,,,,,"Trained on sentence fragments, see Figure 10",29.0,29 sentence fragments (Figure 10),,,,,,,"A longstanding difficulty for connectionist modeling has been how to represent variable-sized recursive data structures, such as trees and lists, in fixed-width patterns. This paper presents a connectionist architecture which automatically develops compact distributed representations for such compositional structures, as well as efficient accessing mechanisms for them. Patterns which stand for the internal nodes of fixed-valence trees are devised through the recursive use of backpropagation on three-layer auto-associative encoder networks. The resulting representations are novel, in that they combine apparently immiscible aspects of features, pointers, and symbol structures. They form a bridge between the data structures necessary for high-level cognitive tasks and the associative, pattern recognition machinery provided by neural networks.",,,,Confident,2024-09-05 18:08:31+00:00,,,,,,,,,,
SexNet compression,Vision,,,"B. Golomb, D. T. Lawrence, T. Sejnowski",1990-10-01,SEXNET: A Neural Network Identifies Sex From Human Faces,https://www.semanticscholar.org/paper/SEXNET%3A-A-Neural-Network-Identifies-Sex-From-Human-Golomb-Lawrence/cbf90aa78fea0c8a1028705d92bc4bc7808ddeeb,,Historical significance,,72940.0,"900*40*2+40+900=72940
“Images sampled at 30x30 were compressed using a 900x40x900 fully connected back-propagation network”",78775200000.0,,,"2*72940*3*90*2000=78775200000
“The compression network trained for 2000 runs on each of 90 faces”",,,90.0,“The compression network trained for 2000 runs on each of 90 faces”,2000.0,,,,,Supervised,"Sex identification in animals has biological importance. Humans are good at making this determination visually, but machines have not matched this ability. A neural network was trained to discriminate sex in human faces, and performed as well as humans on a set of 90 exemplars. Images sampled at 30×30 were compressed using a 900×40×900 fully-connected back-propagation network; activities of hidden units served as input to a back-propagation ""SexNet"" trained to produce values of 1 for male and 0 for female faces. The network's average error rate of 8.1% compared favorably to humans, who averaged 11.6%. Some SexNet errors mimicked those of humans.",,,,Confident,2025-02-17 20:58:04+00:00,,,,,,,,,,
SexNet classification,Vision,,,"B. Golomb, D. T. Lawrence, T. Sejnowski",1990-10-01,SEXNET: A Neural Network Identifies Sex From Human Faces,https://www.semanticscholar.org/paper/SEXNET%3A-A-Neural-Network-Identifies-Sex-From-Human-Golomb-Lawrence/cbf90aa78fea0c8a1028705d92bc4bc7808ddeeb,,"Historical significance,Highly cited",,1640.0,Largest classification model: 40*40 + 40=1640 (Figure 2),,,,,,,80.0,"“Each training on a different 80 faces, leaving a distinct set of 10 untrained faces for testing”",,,,,,,"Sex identification in animals has biological importance. Humans are good at making this determination visually, but machines have not matched this ability. A neural network was trained to discriminate sex in human faces, and performed as well as humans on a set of 90 exemplars. Images sampled at 30×30 were compressed using a 900×40×900 fully-connected back-propagation network; activities of hidden units served as input to a back-propagation ""SexNet"" trained to produce values of 1 for male and 0 for female faces. The network's average error rate of 8.1% compared favorably to humans, who averaged 11.6%. Some SexNet errors mimicked those of humans.",,,,Likely,2024-09-05 18:08:31+00:00,,,,,,,,,,
ISR network,Vision,Stanford University,Academia,"James Keeler, David Rumelhart, Wee Leow",1990-10-01,Integrated Segmentation and Recognition of Hand-Printed Numerals,https://papers.nips.cc/paper_files/paper/1990/hash/e46de7e1bcaaced9a54f1e9d0d2f800d-Abstract.html,,Historical significance,,,,,,,,,,9000.0,"“We used a training and test set of about 9,000 and 1,800 characters respectively. “",,,,,,,"Neural network algorithms have proven useful for recognition of individ(cid:173) ual, segmented characters. However, their recognition accuracy has been limited by the accuracy of the underlying segmentation algorithm. Con(cid:173) ventional, rule-based segmentation algorithms encounter difficulty if the characters are touching, broken, or noisy. The problem in these situations is that often one cannot properly segment a character until it is recog(cid:173) nized yet one cannot properly recognize a character until it is segmented. We present here a neural network algorithm that simultaneously segments and recognizes in an integrated system. This algorithm has several novel features: it uses a supervised learning algorithm (backpropagation), but is able to take position-independent information as targets and self-organize the activities of the units in a competitive fashion to infer the positional information. We demonstrate this ability with overlapping hand-printed numerals.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Bankruptcy-NN,Other,,,"M. Odom, R. Sharda",1990-06-17,A neural network model for bankruptcy prediction,https://www.semanticscholar.org/paper/A-neural-network-model-for-bankruptcy-prediction-Odom-Sharda/ead9fa02902850a7418fb5ba720f3d9d8ab2f88b,,"Historical significance,Highly cited",,36.0,"""The input layer consisted of the five nodes, one for each of the ratios. The hidden layer consisted of 5 node.;. The output layer consisted of only one neuron""
30 weights + 6 biases = 36",3059337600.0,,," 2*36*3*74*191400=3,059,337,600=3.06e9
""Convergence was reached after 191,400 iterations""",,,370.0,"""The first (training) subsample of 74 firms data""
5 inputs per firm
74*5 = 370",191400.0,24.0,,,,,"A neural network model is developed for prediction of bankruptcy, and it is tested using financial data from various companies. The same set of data is analyzed using a more traditional method of bankruptcy prediction, multivariate discriminant analysis. A comparison of the predictive abilities of both the neural network and the discriminant analysis method is presented. The results show that neural networks might be applicable to this problem",,,,Confident,2025-02-17 20:57:57+00:00,,,,,,,,,,
NETtalk reimplementation,Speech,Oregon State University,Academia,"Thomas G. Dietterich, Hermann Hild, Ghulum Bakiri",1990-06-01,A Comparative Study of ID3 and Backpropagation for English Text-to-speech Mapping,https://www.sciencedirect.com/science/article/abs/pii/B9781558601413500079,,"Historical significance,Training cost",,27480.0,"203*120+120*26=27480
“203 input units, 120 hidden units, and 26 output units”",35811936000.0,,,Updated FLOP estimate: 2*27480*3*1000*7.24*30=35811936000=3.6e10,,,1000.0,"“This training set was further subdivided to extract smaller training sets of 1000, 800, 400, 200, 100, and 50 words“",30.0,,,,,,"The performance of the error backpropagation (BP) and ID3 learning algorithms was compared on the task of mapping English text to phonemes and stresses. Under the distributed output code developed by Sejnowski and Rosenberg, it is shown that BP consistently out-performs ID3 on this task by several percentage points. Three hypotheses explaining this difference were explored: (a) ID3 is overfitting the training data, (b) BP is able to share hidden units across several output units and hence can learn the output units better, and (c) BP captures statistical information that ID3 does not. We conclude that only hypothesis (c) is correct. By augmenting ID3 with a simple statistical learning procedure, the performance of BP can be approached but not matched. More complex statistical procedures can improve the performance of both BP and ID3 substantially. A study of the residual errors suggests that there is still substantial room for improvement in learning methods for text-to-speech mapping.",,,,Unverified,2025-02-18 16:18:08+00:00,United States of America,,,,,,,,,
Zip CNN,Vision,"AT&T,Bell Laboratories","Industry,Industry",Y. LeCun B. Boser J. S. Denker D. Henderson R. E. Howard W. Hubbard L. D. Jackel,1989-12-01,Backpropagation applied to handwritten zip code recognition,https://ieeexplore.ieee.org/document/6795724,10587.0,Highly cited,,9760.0,"""In summary, the network has 1256 units, 64,660 connections, and 9760 independent parameters""",1496338054440.0,,,"Its a deep CNN so we assume a backward-forward ratio of 2:1
 2*64660*3*23*167693=1496338054440
""The network was trained for 23
passes through the training set (167,693 pattern presentations).""",Buffalo zips,"""The data base used to train and test the network consists of 9298 segmented numerals digitized from handwritten zip codes
that appeared on U.S. mail passing through the Buffalo, NY post office.
Examples of such images are shown in Figure 1. The digits were written
by many different people, using a great variety of sizes, writing styles,
and instruments, with widely varying amounts of care; 7291 examples
are used for training the network and 2007 are used for testing the generalization performance. One important feature of this data base is that
both the training set and the testing set contain numerous examples that
are ambiguous, unclassifiable, or even misclassified. """,7291.0,"The digits were written
by many different people, using a great variety of sizes, writing styles,
and instruments, with widely varying amounts of care; 7291 examples
are used for training the network and 2007 are used for testing the generalization performance",,,,,,,,,,,Unverified,2025-02-17 18:32:21+00:00,"United States of America,United States of America",,,,,,,,,
Innervator,Mathematics,"Stanford University,California Institute of Technology","Academia,Academia","Geoffrey Miller, Peter Todd, and Shailesh Hegde",1989-12-01,Designing neural networks using genetic algorithms,https://www.researchgate.net/publication/220885651_Designing_Neural_Networks_using_Genetic_Algorithms,1132.0,Highly cited,,10.0,Each net has 5 units,120000000.0,,,10 params * 6 FLOP/param/pass * 4 datapoints * 1000 epochs * 50 individuals * 10 generations,,,4.0,,,,,,,,,,,,,2025-02-18 16:22:32+00:00,"United States of America,United States of America",,,,,,,,,
ALVINN,Driving,Carnegie Mellon University (CMU),Academia,DA Pomerleau,1989-12-01,ALVINN: an autonomous land vehicle in a neural network,https://proceedings.neurips.cc/paper/1988/hash/812b4ba287f5ee0bc9d43bbf5bbe87fb-Abstract.html,1962.0,Highly cited,,36627.0,"1217*29 + 29*46 =36627
“Each of these 1217 input units is fully connected to the hidden layer of 29 units, which is in turn fully connected to the output layer. The output layer consists of 46 units, divided into two groups.”",10548576000.0,,,"2 * 36627 * 3 * 40 * 1200 = 10548576000 = 1.05e10
36627 parameters
""After 40 epochs of training on the 1200 simulated road snapshots""",Road snapshots,,1200.0,"""Training involves first creating a set of 1200 road snapshots depicting roads with a wide variety of retinal orientations and positions, under a variety of lighting conditions and with realistic noise levels""",40.0,,,,,,,,,,,2025-02-17 18:32:34+00:00,United States of America,,,,,,,,,
Speaker-independent vowel classification,Speech,University of Washington,Academia,"L. Atlas, R. Cole, J. Connor, M. El-Sharkawi, R. Marks, Y. Muthusamy, E. Barnard",1989-11-27,Performance Comparisons Between Backpropagation Networks and Classification Trees on Three Real-World Applications,https://www.semanticscholar.org/paper/Performance-Comparisons-Between-Backpropagation-and-Atlas-Cole/e42d2b89fcb4a1a3dfa63408f424f76975ed1e1b,,Historical significance,,3040.0,"“The MLP consisted of 64 inputs (the DFf coefficients. each nonnalized between zero and one), a single hidden layer of 40 units, and 12 output units;”",7485696000.0,,,"2*3040*3*410400=7485696000=7.49e9
“The network was trained on 100 iterations through the 4104 training vectors.”",,,4104.0,,100.0,,,,,,"Multi-layer perceptrons and trained classification trees are two very different techniques which have recently become popular. Given enough data and time, both methods are capable of performing arbitrary non-linear classification. We first consider the important differences between multi-layer perceptrons and classification trees and conclude that there is not enough theoretical basis for the clear-cut superiority of one technique over the other. For this reason, we performed a number of empirical tests on three real-world problems in power system load forecasting, power system security prediction, and speaker-independent vowel identification. In all cases, even for piecewise-linear trees, the multi-layer perceptron performed as well as or better than the trained classification trees.",,,,Confident,2025-02-18 16:25:59+00:00,United States of America,,,,,,,,,
Handwritten Digit Recognition System,Vision,AT&T,Industry,"Yann LeCun, B. Boser, J. Denker, D. Henderson, R. Howard, W. Hubbard, L. Jackel",1989-11-27,Handwritten Digit Recognition with a Back-Propagation Network,https://www.semanticscholar.org/paper/Handwritten-Digit-Recognition-with-a-Network-LeCun-Boser/86ab4cae682fbd49c5a5bedb630e5a40fa7529f6,,Historical significance,,2578.0,"""In summary, the network has 4635 units, 98442 connections, and 2578 independent parameters.“",181440000000.0,,,"1.4e6 * 3 * 24 * 60* 60 * 0.5 = 181440000000 = 1.81e11
""A complete training session (30 passes through the training set plus test) takes about 3 days on a SUN SPARCstation 1""
Sparcstation 1 has an estimated compute of 1.4 MFLOPS (source: https://ieeexplore.ieee.org/document/63671 )",,,9840.0,"""After 30 training passes the error rate on training set (7291 handwritten plus 2549 printed digits)""",30.0,72.0,"""A complete training session (30 passes through the training set plus test) takes about 3 days on a SUN SPARCstation 1""",,,,"We present an application of back-propagation networks to handwritten digit recognition. Minimal preprocessing of the data was required, but architecture of the network was highly constrained and specifically designed for the task. The input of the network consists of normalized images of isolated digits. The method has 1% error rate and about a 9% reject rate on zipcode digits provided by the U.S. Postal Service.",,,,Confident,2025-02-19 17:27:21+00:00,United States of America,,,,,,,,,
Invariant image recognition,Vision,Complutense University of Madrid,Academia,"V. Cruz, G. Cristóbal, T. Michaux, S. Barquin",1989-06-18,Invariant image recognition using a multi-network neural model,https://ieeexplore.ieee.org/document/118669,,Historical significance,,,,27000000000.0,,,"0.5*6*60*60*2.5e6 = 27000000000 = 2.7e10
Trained for 6h on a SUN-4 (section 4)
Assumed utilization of 0.5
SUN-4 is estimated at 2.5e6 FLOP/s (Nordhaus, 2007)",,,,,,6.0,Section 4,,,,"A new model which permits visual patterns to be invariant to affine transforms (translations, rotations, and dimensions) is presented. A training multilayer fully connected network of ADALINE neurons is proposed as a preprocessing step for invariant image extraction. A second neural network has been trained by the popular backpropagation algorithm for recovering the real image without distortions. First, the sample invariants are obtained by the preprocessing network. In the second step, the general invariant that includes all the sample invariants is computed. Afterward, the reordered sample invariants are input to a multilayer neural network trained by the backpropagation algorithm. The original image, without distortions, is obtained in the output of this system. Several test images have been computed, and evaluation of the results shows that in the case of images with intrinsic perceptual similarity, the learning procedure leads to a global invariant extraction that requires less computational effort in comparison with an arbitrary training selection. After the training process, this system is able to extract the generalized invariant image from an arbitrary picture recovering the input image without distortions.<<ETX>>",,,,Confident,2025-02-17 18:32:12+00:00,Spain,,,,,,,,,
Truck backer-upper,Driving,Stanford University,Academia,"Derrick Nguyen, Bernard Widrow",1989-06-18,"The truck backer-upper: an example of self-learning in neural networks
",https://ieeexplore.ieee.org/document/118723,,Historical significance,,805.0,6*25+25+8*45+45*6=805 (see Figure 6),,,,,,,,,,,,,,,"Neural networks can be used to solve highly nonlinear control problems. A two-layer neural network containing 26 adaptive neural elements has learned to back up a computer-simulated trailer truck to a loading dock, even when initially jackknifed. It is not yet known how to design a controller to perform this steering task. Nevertheless, the neural net was able to learn of its own accord to do this, regardless of initial conditions. Experience gained with the truck backer-upper should be applicable to a wide variety of nonlinear control problems.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Time-delay neural networks,Speech,"Advanced Telecommunications Research Institute,Carnegie Mellon University (CMU)","Industry,Academia","A. Waibel, T. Hanazawa, G. Hinton, K. Shikano, and K. J. Lang",1989-03-03,Phoneme recognition using time-delay neural networks,https://ieeexplore.ieee.org/abstract/document/21701,3445.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 04:04:06+00:00,"Japan,United States of America",,,,,,,,,
Q-learning,"Robotics,Games",University of London,Academia,Christopher Watkins,1989-01-01,Learning from delayed rewards,http://www.cs.rhul.ac.uk/~chrisw/thesis.html,8025.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-23 04:11:11+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
MLP baggage detector,Vision,Science Applications International Corporation / SAIC,Industry,"Patrick M Shea, Vincent Lin",1989-01-01,Detection of explosives in checked airline baggage using an artificial neural system,https://www.semanticscholar.org/paper/Detection-of-explosives-in-checked-airline-baggage-Shea-Lin/71da4057401f459bc079696a029aee45a0a89728,,Historical significance,One of the first real-world use cases of neural networks,,"3 layer network, input layer (<20), hidden layer, output layer (3)",,,,,,,40000.0,"""The database contains about 20,000 bags without simulants and a like number with; although, because of changes made in the systems as they were developed, not all measurements are on the same basis.""",2000.0,,,,,,"An artificial neural system (ANS) has been applied to the problem of discriminating between suitcases with and without explosives. The input to the ANS was data gathered during the field tests of a prototype explosive detection system. The performance of the ANS is contrasted with the standard statistical technique (discriminant analysis) used, and is shown to exceed the performance of the standard technique over a substantial range. The system that generated the data, the nature of the data, the basics of discriminant analysis, and the technique used in developing the network are described.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
MLN-ASR,Speech,McGill University,Academia,"Renato De Mori, Yoshua Bengio, Régis Cardin",1988-08-01,Data-Driven Execution of Multi-Layered Networks for Automatic Speech Recognition,https://aaai.org/papers/00734-aaai88-130-data-driven-execution-of-multi-layered-networks-for-automatic-speech-recognition/,,Historical significance,,10000.0,"“For an MLN of about 10,000 links, the time was 115 CPU msecs for the recognition of a spoken letter and 317 msecs for the learning of a spoken letter on the SUN 4/280. A 20% reduction was obtained on the VAX 8650”",296425000.0,,,"“For an MLN of about 10,000 links, the time was 115 CPU msecs for the recognition of a spoken letter and 317 msecs for the learning of a spoken letter on the SUN 4/280. A 20% reduction was obtained on the VAX 8650”, “Learning and recognition were performed on a VAX 8650.”
Dataset: 70*10*2=1400 (Train) 10*10*2=200 (Test)
“The ten words of the El set were pronounced twice by 80 speakers (40 males and 40 females)”
“The data from 70 speakers were used as a training set while the data from the remaining 10 speakers (6 males and 4 females) were used for the test”
VAX 8650 FLOPS  = 1.67E+06 (Nordhaus)
Training time: 317ms * 1400  * 0.8 = 355040ms = 355s
Estimate: 0.5 * 1.67e6 * 355 = 296425000 = 2.96e8",,,1400.0,,,0.1,,,,,"A set of Multi-Layered Networks (MLN) for Automatic Speech Recognition (ASR) is proposed. Such a set allows the integration of information extracted with variable resolution in the time and frequency domains and to keep the number of links between nodes of the networks small in order to allow significant generalization during learning with a reasonable training set size. Subsets of networks can be executed depending on preconditions based on descriptions of the time evolution of signal energies allowing spectral properties that are significant in different acoustic situations to be learned.
Preliminary experiments on speaker-independent recognition of the letters of the E-set are reported. Voices from 70 speakers were used for learning. Voices of 10 new speakers were used for test. An overall error rate of 9.5% was obtained in the test showing that results better than those previously reported can be achieved.",,,,Confident,2025-02-17 20:57:32+00:00,Canada,,,,,,,,,
Adaptive Broom Balancer,Games,Stanford University,Academia,"VV Tolat, B Widrow",1988-07-24,An Adaptive “Broom Balancer” with Visual Inputs,https://ieeexplore.ieee.org/document/23982,80.0,,,110.0,Figure 3,,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
MADALINE II,Mathematics,Stanford University,Academia,"Rodney Winter, Bernard Widrow",1988-07-24,MADALINE RULE II: A Training Algorithm for Neural Networks,https://ieeexplore.ieee.org/document/23872,81.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:09:15+00:00,United States of America,,,,,,,,,
Motion-Driven 3D Feature Tracking,3D modeling,Roke Manor Research,Industry,Harris & Stephens,1988-07-01,A Combined Corner and Edge Detector,http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.434.4816&rep=rep1&type=pdf,19068.0,Highly cited,,,"""The simulation studies reported here all involved a 16-bit input pattern. """,,,,,,,1500.0,"""The total number of possible input patterns was 65,536. Training sets of 650 and 1500 patterns picked at random from this total were used.""",,,,,,,,,,,,2024-09-16 04:05:14+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Translation-invariant MLP,,Carnegie Mellon University (CMU),Academia,Geoffrey E. Hinton,1987-06-15,Learning Translation Invariant Recognition in a Massively Parallel Network,https://www.cs.toronto.edu/~hinton/absps/parle.pdf,,Historical significance,,816.0,"Network: 12-60-6-16
Weights: 6*60+60*6+6*16=816
Layer 2 was only sparsely connected to input layer",18032947200.0,,,FLOPs: 2*816*3*160*23020=18032947200=1.8e10,,,160.0,,23020.0,,,,,,,,,,Unverified,2025-02-18 16:28:26+00:00,United States of America,,,,,,,,,
NetTalk (transcription),Speech,Princeton University,Academia,"TJ Sejnowski, CR Rosenberg",1987-06-06,Parallel Networks that Learn to Pronounce English Text,http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=03A3D3EDF0BAF35405ABCF083411B55E?doi=10.1.1.154.7012&rep=rep1&type=pdf,2558.0,Highly cited,,18629.0,"""The connections in the network are specified by a total of 18629
weight parameters (including a variable threshold for each unit)""",28328002560.0,,,18629 params * 2 FLOP/param * (3 for forward + backward pass) * 55 epochs * 1024 words/epoch * 4.5 letters/word,,,1024.0,"We used the first two pages of transcriptions, which contained 1024 words from a child in firstgrade",55.0,,,,,,,,,,,2025-02-17 18:31:33+00:00,United States of America,,,,,,,,,
NetTalk (dictionary),Speech,Princeton University,Academia,"TJ Sejnowski, CR Rosenberg",1987-06-06,Parallel Networks that Learn to Pronounce English Text,http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=03A3D3EDF0BAF35405ABCF083411B55E?doi=10.1.1.154.7012&rep=rep1&type=pdf,2558.0,Highly cited,,18629.0,"""The connections in the network are specified by a total of 18629 weight parameters (including a variable threshold for each unit)""",27664065000.0,,,18629 params * 2 FLOP/param * (3 for forward + backward pass) * 55 epochs * 1000 words/epoch * 4.5 letters/word,,,1000.0,"""A subset of the 1000 most commonly occurring words was selected from this dictionary based on frequency counts in the Brown corpus""",55.0,,,,,,,,,,,2025-02-17 18:31:38+00:00,United States of America,,,,,,,,,
Optimized Multi-Scale Edge Detection,Vision,Massachusetts Institute of Technology (MIT),Academia,John Canny,1986-11-01,A Computational Approach To Edge Detection,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4767851,37931.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 04:06:39+00:00,United States of America,,,,,,,,,
Back-propagation,Mathematics,"University of California San Diego,Carnegie Mellon University (CMU)","Academia,Academia","Rumelhart, David E.; Hinton, Geoffrey E.; Williams, Ronald J.",1986-10-01,Learning representations by back-propagating errors,https://www.semanticscholar.org/paper/Learning-representations-by-back-propagating-errors-Rumelhart-Hinton/052b1d8ce63b07fec3de9dbb583772d860b7c769,25930.0,Highly cited,,144.0,Figure 4 includes a representation of the weights learned by the people to relationship network,124416000.0,,,"We assume that the number of mult-adds per pass is equal to the number of parameters.

""We trained the network for 1500 sweeps""

There are 12*12 possible pairs of people, so we assume that is the dataset size",,,144.0,"There are 12*12 possible pairs of people, so we assume that is the dataset size",,,,,,Unsupervised,,,,,,2025-02-17 18:31:23+00:00,"United States of America,United States of America",,,,,,,,,
Distributed representation NN,Other,Carnegie Mellon University (CMU),Academia,Geoffrey E. Hinton,1986-08-15,Learning distributed representations of concepts.,https://www.cs.toronto.edu/~hinton/absps/families.pdf,,"Historical significance,Highly cited",,432.0,"Parameters: 24*6 + 12*6 + 12*12 + 12*6 =432
""Figure 5: The activity levels in a five-layer network after it has learned. The bottom layer has 24 input units on the left for representing person 1 and 12 units on the right for representing the relationship. The white squares inside these two groups show the activity levels of the units. There is one active unit in the first group (representing Colin) and one in the second group (representing has-aunt). Each of the two groups of input units is totally connected to its own group of 6 units in the second layer. These two groups of 6 must learn to encode the input terms as distributed patterns of activity. The second layer is totally connected to the central layer of 12 units, and this layer is connected to the penultimate layer of 6 units.""
",388800000.0,,," 2*432*3*1500*100=388800000=3.9e8
""After 1500 sweeps through all 100 training examples the weights were very stable """,,,100.0,"""After 1500 sweeps through all 100 training examples the weights were very stable """,1500.0,,,,,,,,,,Confident,2025-02-18 16:31:17+00:00,United States of America,,,,,,,,,
PDP model for serial order,Speech,University of California San Diego,Academia,"Jordan, M.I.",1986-01-05,Serial order: A parallel distributed processing approach,https://www.osti.gov/biblio/6910294,1502.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Error Propagation,Other,"University of California San Diego,Carnegie Mellon University (CMU)","Academia,Academia","D. E. Rumelhart, G. E. Hinton, and R. J. Williams",1986-01-03,Learning internal representations by error propagation,https://stanford.edu/~jlmcc/papers/PDP/Volume%201/Chap8_PDP86.pdf,27322.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-16 13:53:26+00:00,"United States of America,United States of America",,,,,,,,,
Learning past tenses,Language,Stanford University,Academia,"Rumelhart, D. E., & McClelland, J. L",1986-01-03,Learning the past tenses of English verbs: Implicit rules or parallel distributed processing?,https://www.semanticscholar.org/paper/On-learning-the-past-tenses-of-English-verbs%3A-rules-Rumelhart-McClelland/4fa569625b5ab35e955a8d5be11a4aa9f59ca424,318.0,,,211600.0,"Source: https://files.eric.ed.gov/fulltext/ED267419.pdf
p.9: network architecture is given, with two layers of hidden units. The hidden units are  called “Wickelfeature representation”. The “modifiable connections” are only between the hidden units. p.19: “All in all then, we used only 460 of the 1,210 possible Wickelfeatures. Using this representation, a verb is represented by a pattern of activation over a set of 460 Wickelfeature units.""",,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Learnability theory of language development,Language,Massachusetts Institute of Technology (MIT),Academia,Steven Pinker,1984-07-01,Language learnability and language development,https://psycnet.apa.org/record/1985-97439-000,4730.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-23 04:21:12+00:00,United States of America,,,,,,,,,
Hierarchical Cognitron,Other,NHK Broadcasting Science Research Laboratories,Industry,K. Fukushima,1984-04-01,A hierarchical neural network model for associative memory,https://link.springer.com/article/10.1007/BF00337157,,Historical significance,,9315.0,"Parameters 5*5*9*3*3 + 3*3*9*3*3*9 + 9*3*3*9 = 9315
""The numbers of excitatory cells in these four layers were: 7x7 in U0, 5x5 in  U1, 3x3 in U2, and 9 in U3""
""Each feature-extracting cell in layer U1 receives excitatory modifiable afferent connections from 3x3 cells in layer U0""
""On the other hand, each feature, each extracting cell in layers U2 and U3 receives excitatory modifiable connections from all 9 cells in each of the 3 x 3 hypercolumns in the layer preceding it. Therefore, it receives 3 x 3 x 9 afferent excitatory modifiable connections altogether""
",,,,,,,5.0,"""Five training patterns used for the self-organization are shown in Fig. 4""",,,,,,,"A hierarchical neural network model with feedback interconnections, which has the function of associative memory and the ability to recognize patterns, is proposed. The model consists of a hierarchical multi-layered network to which efferent connections are added, so as to make positive feedback loops in pairs with afferent connections. The cell-layer at the initial stage of the network is the input layer which receives the stimulus input and at the same time works as an output layer for associative recall. The deepest layer is the output layer for pattern-recognition. Pattern-recognition is performed hierarchically by integrating information by converging afferent paths in the network. For the purpose of associative recall, the integrated information is again distributed to lower-order cells by diverging efferent paths. These two operations progress simultaneously in the network. If a fragment of a training pattern is presented to the network which has completed its self-organization, the entire pattern will gradually be recalled in the initial layer. If a stimulus consisting of a number of training patterns superposed is presented, one pattern gradually becomes predominant in the recalled output after competition between the patterns, and the others disappear. At about the same time when the recalled pattern reaches a steady state in he initial layer, in the deepest layer of the network, a response is elicited from the cell corresponding to the category of the finally-recalled pattern. Once a steady state has been reached, the response of the network is automatically extinguished by inhibitory signals from a steadiness-detecting cell. If the same stimulus is still presented after inhibition, a response for another pattern, formerly suppressed, will now appear, because the cells of the network have adaptation characteristics which makes the same response unlikely to recur. Since inhibition occurs repeatedly, the superposed input patterns are recalled one by one in turn.",,,,Speculative,2024-09-05 18:08:31+00:00,Japan,,,,,,,,,
ASE+ACE,Robotics,University of Massachusetts Amherst,Academia,"Andrew G. Barto, Richard S. Sutton, and Charles W. Anderson",1983-09-01,Neuronlike adaptive elements that can solve difficult learning control problems,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6313077,4296.0,"Highly cited,Historical significance",,324.0,"The system consists of two parts: ACE and ASE, each with 162 weights (=324 parameters). Found in Figures 2 and 3.",324000000.0,,,"324 * 2 * 500000 = 324000000 = 3.24e8. The calculation assumes ""compute per forward pass"" = ""number of parameters"" = ""compute per backward pass"". Their model only has a single layer and is trained with simple update rules instead of gradient descent. Training details are described in Section IX.

Note that this is the compute for a single run; they appear to have repeated training 10 times for the ASE+ACE system.",,,500000.0,"""Runs consisted of 100 trials unless the run's duration exceeded 500 000 time steps (approximately 2.8 h of simulated real time)"" 
""Almost all runs of the ASE/ACE system [...], were terminated after 500 000"" (Section IX)",,2.8,"""Runs consisted of 100 trials unless the run's duration exceeded 500 000 time steps (approximately 2.8 h of simulated real time)"" 
""Almost all runs of the ASE/ACE system [...], were terminated after 500 000"" (Section IX)",,,,"It is shown how a system consisting of two neuronlike adaptive elements can solve a difficult learning control problem. The task is to balance a pole that is hinged to a movable cart by applying forces to the cart's base. It is argued that the learning problems faced by adaptive elements that are components of adaptive networks are at least as difficult as this version of the pole-balancing problem. The learning system consists of a single associative search element (ASE) and a single adaptive critic element (ACE). In the course of learning to balance the pole, the ASE constructs associations between input and output by searching under the influence of reinforcement feedback, and the ACE constructs a more informative evaluation function than reinforcement feedback alone can provide. The differences between this approach and other attempts to solve problems using neurolike elements are discussed, as is the relation of this work to classical and instrumental conditioning in animal learning studies and its possible implications for research in the neurosciences.",,,,Likely,2025-02-17 18:31:10+00:00,United States of America,,,,,,,,,
Hopfield network,Other,California Institute of Technology,Academia,JJ Hopfield,1982-04-01,Neural networks and physical systems with emergent collective computational abilities,https://www.pnas.org/doi/10.1073/pnas.79.8.2554,23315.0,Highly cited,,9900.0,"My understanding is that the biggest Hopfield networks they studied had N=100 units. 

Each unit has 99 synapses Tij from each other unit, for a total of 100*99 parameters",,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Kohonen network,Mathematics,Helsinki University of Technology,Academia,T Kohonen,1981-07-25,Self-organized formation of topologically correct feature maps,https://link.springer.com/article/10.1007/BF00337288,11841.0,Highly cited,,4096.0,"The input vectors are 3D.
I could not find the grid size, but from the images it looks 8x8.
So the network was 8x8x3 parameters.",,,,,,,,??? Seemingly no info,,,,,,,,,,,,2024-09-05 18:08:31+00:00,Finland,,,,,,,,,
Neocognitron,Vision,NHK Broadcasting Science Research Laboratories,Industry,"K Fukushima, S Miyake",1980-04-01,Neocognitron: A self-organizing neural network model for a mechanism of pattern recognition unaffected by shift in position,https://link.springer.com/article/10.1007/BF00344251,5782.0,Highly cited,,1140576.0,"""The synaptic connections from S-layers to C-layers
are fixed and unmodifiable. [...]
The numbers of excitatory cells in these seven layers are: 16x16 in U0, 16x16x24 in Us1, 10x10x 24 in Uc1, 8x8x24 in Us2, 6x 6x 24 in Uc2, 2x2x24 in Us3, and 24 in Uc3 
[...]
 the number of input synapses to each S-cell is 5 x 5 in layer Us1 and 5x5x24 in layers Us2 and Us3
[...]
The number of excitatory input synapses to each C-cell is 5x5 in layers Uc1 and Uc2, and is 2x2 in
layer Uc3
""

The number of synapses into each S-layer is:

S1: (16*16*24)*(5*5) 
S2: (8*8*24)*(5*5*24)
S3: (2*2*24)*(5*5*24)

We assume one parameter a per synapse into each cell in a S-layer, and one parameter b per each cell in a S-layer.",228115200.0,,,"""It does not necessarily mean that all of these input synapses are
always fully reinforced. In usual situations, only some of these input synapses are reinforced, and the rest of them remains in small values [...] Each of the five stimulus patterns has been presented 20 times to the network. By that time, self organization of the network has almost been completed.""

We multiply by 2 to account for multadds
",,,5.0,"""In order to self-organize the network, we have presented five stimulus patterns ""0"", ""1"", ""2"", ""3"", and ""4"", which are shown in Fig. 6""",,,,,,,,,,,,2025-02-18 18:31:55+00:00,Japan,,,,,,,,,
Internal functionality of visual invariants,Vision,Utrecht University,Academia,Koenderink & van Doom,1979-05-02,The internal representation of solid shape with respect to vision,https://link.springer.com/article/10.1007/BF00337644,981.0,Historical significance,,,,,,,,,,,??? Seemingly no info,,,,,,,,,,,Unknown,2024-09-16 13:51:30+00:00,Netherlands,,,,,,,,,
TD(0),Other,University of Essex,Academia,Ian Witten,1977-08-01,An adaptive optimal controller for discrete-time Markov environments,https://www.sciencedirect.com/science/article/pii/S0019995877903540,269.0,Historical significance,,,,,,,,,,,??? Seemingly no info,,,,,,,,,,,Unknown,2024-09-16 13:48:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Statistical continuous speech recognizer,Speech,Massachusetts Institute of Technology (MIT),Academia,Frederick Jelenick,1976-04-30,Continuous speech recognition by statistical methods,https://ieeexplore.ieee.org/document/1454428,1591.0,Highly cited,,,,,,,,,"800 sentences, counting 15 words per sentence gives 12000
""All the results given are for a training set of 800 sentences and a test set of 100 sentences""",12000.0,"800 sentences, counting 15 words per sentence gives 12000 words
""All the results given are for a training set of 800 sentences and a test set of 100 sentences""",,,,,,,"Statistical methods useful in automatic recognition of continuous speech are described. They concern modeling of a speaker and of an acoustic processor, extraction of the models' statistical parameters, and hypothesis search procedures and likelihood computations of linguistic decoding. Experimental results are presented that indicate the power of the methods.",,,,Confident,2024-09-25 17:14:21+00:00,United States of America,,,,,,,,,
Cognitron,Other,Biological Cybernetics,Industry,Kunihiko Fukushima,1975-09-01,Cognitron: a self-organizing multilayered neural network,https://link.springer.com/article/10.1007%2FBF00342633,791.0,Historical significance,Precursor of the Neocognitron,28800.0,"4 layers, 288 neurons per layer, weights connect each neuron to only 25 neurons in the previous layer = 4*288*25 parameters",5760000.0,,,"Backward to forward ratio: 1 to 1 as weight updates are calculated from local activation patterns instead of gradient descent.
Total compute estimate: 100*2*4*288*25 = 5760000 = 5.76e6
",,,5.0,5 examples presented for (at least) 20 cycles = 100 training steps,20.0,,,,,,,,,,,2025-02-17 18:30:38+00:00,Japan,,,,,,,,,
Piecewise linear model,Vision,University of Kansas,Academia,"R. Haralick, K. Shanmugam, I. Dinstein",1973-11-01,Textural Features for Image Classification,https://ieeexplore.ieee.org/document/4309314,,"Historical significance,Highly cited",,357.0,"16 input features + bias = 17 input features
7*6/2 = 21 Hyperplanes
17*21 = 357 parameters
""For the multicategory problem involving NR categories, a total of NR(NR - 1)/2 hyperplanes are used to partition the pattern space.""
""The input variables to the classifier consisted of the mean variance of the four textural features (f1,f2,f3, andfg obtained from the distance 1 gray-tone spatial-dependence matrices) and eight spectral features (comprised of the mean variance of the image gray-tone values) in each of the four spectral bands""
",,,,,,,314.0,"""Number of training samples = 314;""",,,,,,,"Texture is one of the important characteristics used in identifying objects or regions of interest in an image, whether the image be a photomicrograph, an aerial photograph, or a satellite image. This paper describes some easily computable textural features based on gray-tone spatial dependancies, and illustrates their application in category-identification tasks of three different kinds of image data: photomicrographs of five kinds of sandstones, 1:20 000 panchromatic aerial photographs of eight land-use categories, and Earth Resources Technology Satellite (ERTS) multispecial imagery containing seven land-use categories. We use two kinds of decision rules: one for which the decision regions are convex polyhedra (a piecewise linear decision rule), and one for which the decision regions are rectangular parallelpipeds (a min-max decision rule). In each experiment the data set was divided into two parts, a training set and a test set. Test set identification accuracy is 89 percent for the photomicrographs, 82 percent for the aerial photographic imagery, and 83 percent for the satellite imagery. These results indicate that the easily computable textural features probably have a general applicability for a wide variety of image-classification applications.",,,,Confident,2024-09-05 18:08:31+00:00,United States of America,,,,,,,,,
Punish/Reward,Games,IEEE,Industry,"Widrow, Gupta, and Maitra",1973-09-01,Punish/Reward: Learning with a Critic in Adaptive Threshold Systems,https://ieeexplore.ieee.org/document/4309272,397.0,,,21.0,"Fig. 1 shows that there is a bias term, while Fig. 5 shows that the input is a sequence of 20 bits, corresponding to 20 weights. So the total number of parameters is 21.",,,,,,,,??? Seemingly no info,,,,,,,,,,,,2024-09-05 18:08:31+00:00,Multinational,,,,,,,,,
Graph-based structural reasoning,Vision,Massachusetts Institute of Technology (MIT),Academia,Patrick Winston,1970-09-01,Learning Structural Definitions from Examples,https://dspace.mit.edu/handle/1721.1/6884,1805.0,Highly cited,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-23 13:23:58+00:00,United States of America,,,,,,,,,
Decision tree adaline,Medicine,Tokyo Medical and Dental University,Academia,"T Sano, S Tsuchiya, F Suzuki",1969-05-01,A use of Adaline as an automatic method for interpretation of the electrocardiogram and the vectorcardiogram,https://pubmed.ncbi.nlm.nih.gov/5820353/,,Historical significance,,2450.0,"5 adaline were trained on binary decisions (p. 1)
Each adaline had up to 490 input weights (“meshes”)
Total parameters = 5*490=2450
",,,,,,,80.0,40 positive and negative training examples (p. 2),,,,,,,"A learning machine"" adaline neuron"" was employed for automatic diagnosis of the vectorcardiogram and the electrocardiogram. The frontal circle and the horizontal circle were divided into 480 meshes. The features were expressed by a binary digit, whether the vector loops passed through each mesh or not. In a part of the trials, 5 sets of binary digits were applied in addition to QRS duration and direction of inscription of QRS loops and T loops. In this trial a total of 490 meshes were used. Vectorcardiograms were taken by FRANK'S method in 235 cases. Several methods of adaline usage were tried. The best result was obtained so far by successive dichotomies based on the principle of the logical decision tree. First the normal patterns and the abnormal patterns were divided. The correct ratio was 96.5% when the 490 meshes were employed, cases of an output value within±10 units being regarded as undecided. Next the abnormal cases were divided into two groups depending on whether the QRS duration was more than 0.12 seconds or less. The group of cases with a QRS duration of less than 0.12 seconds was divided into right ventricular hypertrophy and others. The correct ratio was 98.6%. The remaining cases were divided into left ventricular hypertrophy and myocardial infarction, the correct ratio being 88.8%. The group of cases with a QRS duration of more than 0.12 seconds was easily divided into complete left and right bundle branch block in all cases. Here the number of meshes could be decreased to 59 meshes without changing the accuracy appreciably. This attempt showed that the application of the adaline for automatic diagnosis of the vectorcardiogram and the electrocardiogram is promising.",,,,Confident,2024-09-05 18:08:31+00:00,Japan,,,,,,,,,
GLEE,Games,University of Edinburgh,Academia,Michie and Chambers,1968-07-01,Boxes: An Experiment in Adaptive Control,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.474.2430,590.0,Historical significance,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
BOXES,Games,University of Edinburgh,Academia,Michie and Chambers,1968-07-01,Boxes: An Experiment in Adaptive Control,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.474.2430,590.0,Historical significance,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-05 18:08:31+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
Samuel Neural Checkers II,Games,University of Geneva,Academia,"Palmieri, G. and R. Sanna",1967-11-01,Some studies in machine learning using the game of checkers. Part II,https://www.cs.virginia.edu/~evans/greatworks/samuel.pdf,747.0,,,40.0,"""The total number of parameters used at any one time has been varied from a very few to as many as 40""",,,,,,,,,,,,,,,,,,,,2024-09-05 18:08:31+00:00,Switzerland,,,,,,,,,
LTE speaker verification system,Speech,IBM,Industry,K. P. Li; J. E. Dammann; W. D. Chapman,1966-11-01,"Experimental Studies in Speaker Verification, Using an Adaptive System",https://pubs.aip.org/asa/jasa/article-abstract/40/5/966/754180/Experimental-Studies-in-Speaker-Verification-Using?redirectedFrom=fulltext,,Historical significance,,2061.0,"2 connected systems, 1st level LTE and 2nd level LTE.
1st Level: 1810 parameters (""Thus, every 20 msec after the beginning of the utterance, the 15 filter amplitudes were each represented by a 12-bit code, resulting in a 180-bit time sample of the spectrum for that interval. Each time sample was fed to the first-level LTE's, which reduced it to a 10-bit code"")
2nd Level: 251 parameters (""This resulted in a 250-bit input pattern to the second level for the first half-second of each utterance. Each 250-bit pattern was then classified by the LTE into one of two classes"")",105917060.0,,,"1st and 2nd level system are trained separately, multiple versions of both are trained, I chose the largest clearly described training runs.

1st level LTE compute: 2*1810*28700=103894000=1.04e8
1st level steps: 28700 (""Only 287 samples were selected to train the 10 LTE's. The same algorithm was used as that used with the 100-class gain. Two LTE's
converged before 100 training passes."")

2nd level LTE compute: 2*251*4030=2023060=2e6
2nd level steps: 4030 (31 epochs, 130 training examples, see Table 3)

Total compute: 103894000+2023060=105917060=1.06e8 (assuming no backward pass since they didn't use backpropagation)
",,,417.0,"Split between both systems, 287 for 1st level, 130 for 2nd level.",131.0,,,,,,"This paper describes an investigation of the capability of a two‐level adaptive linear threshold element (LTE) system to perform speaker discriminations. The study also includes an investigation of discriminating a speaker from an unknown population. The problem has been confined to the verification of an utterance as that of an expected informant. The environment of the experiments is discussed, and the experimental system is described. At the first level LTE, four different kinds of training have been developed for effective transformation and data reduction. At the second‐level LTE, different training conditions and different decision processes are investigated and evaluated. Over 90% accuracy is obtained in separating a known speaker from impostors.",,,,Likely,2025-02-17 20:56:31+00:00,United States of America,,,,,,,,,
Heuristic Reinforcement Learning,Robotics,Purdue University,Academia,"M. Waltz, K. Fu",1965-10-01,A heuristic approach to reinforcement learning control systems,https://ieeexplore.ieee.org/document/1098193,,"Historical significance,Highly cited",,,,1080000.0,,,"Figure 10 shows their largest system is trained for 3h and was trained on an analog IBM 1620 that was simulated on a digital IBM 1710.
Nordhaus, 2007 lists the IBM 1620 at 200 multiplications per second and doesn’t contain the 1710
Flops estimate: 0.5 * 3 * 60 * 60 * 200 = 1080000 = 1.08e6
Assumed utilization of 0.5
",,,,,,3.0,Figure 10,,,,This paper describes a learning control system using a reinforcement technique. The controller is capable of controlling a plant that may be nonlinear and nonstationary. The only a priori information required by the controller is the order of the plant. The approach is to design a controller which partitions the control measurement space into sets called control situations and then learns the best control choice for each control situation. The control measurements are those indicating the state of the plant and environment. The learning is accomplished by reinforcement of the probability of choosing a particular control choice for a given control situation. The system was stimulated on an IBM 1710-GEDA hybrid computer facility. Experimental results obtained from the simulation are presented.,,,,Speculative,2025-02-17 20:56:01+00:00,United States of America,,,,,,,,,
MENACE,Games,University of Edinburgh,Academia,Donald Michie,1963-11-01,Experiments on the Mechanization of Game-Learning Part I. Characterization of the Model and its parameters,https://academic.oup.com/comjnl/article/6/3/232/360077,46.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-10-21 18:34:06+00:00,United Kingdom of Great Britain and Northern Ireland,,,,,,,,,
STeLLA,Robotics,University of Canterbury,Academia,J.H. Andreae and Peter L. Joyce,1963-06-01,STeLLA: A Scheme for a Learning Machine,https://www.sciencedirect.com/science/article/pii/S1474667017696824?via%3Dihub,34.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-10-21 18:34:06+00:00,New Zealand,,,,,,,,,
Print Recognition Logic,Vision,IBM,Industry,"L. Kamentsky, Chao-Ning Liu",1963-01-01,Computer-Automated Design of Multifont Print Recognition Logic,https://ieeexplore.ieee.org/document/5392331,,Historical significance,,,,22500000.0,,,"0.5*2.5*60*60*5000 = 22500000 = 2.25e7
Assumed utilization of 0.5
Trained for 2-3h on an IBM 7090 (from Introduction)
Estimated IBM 7090 at 5000 FLOP/s based on multiplications per second (Nordhaus, 2007)
Note: the Nordhaus estimate is very different from Wikipedia's estimate of 100000 FLOP/s, which cites a PowerPoint as source.",,,,,,2.5,2-3h (from Introduction),,,,"A computer program has been written to design character recognition logic based on the processing of data samples. This program consists of two subroutines: (1) to search for logic circuits having certain constraints on hardware design, and (2) to evaluate these logics in terms of their discriminating ability over samples of the character set they are expected to recognize. An executive routine is used to apply these subroutines to select a complete logic with a given performance and complexity. This logic consists of 39 to 96 and gates connected to a shift register and a table look-up or resistance network comparison system.",,,,Speculative,2025-02-17 18:28:54+00:00,United States of America,,,,,,,,,
MADALINE I,Other,Stanford University,Academia,William Combs Ridgway,1962-07-01,An adaptive logic system with generalizing properties,https://www.proquest.com/openview/7898314db50a218b58052ac91e3bde1e/1?,75.0,Historical significance,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-10-21 18:34:05+00:00,United States of America,,,,,,,,,
Linear Decision Functions,Mathematics,Bell Laboratories,Industry,W. Highleyman,1962-06-01,"Linear Decision Functions, with Application to Pattern Recognition",https://ieeexplore.ieee.org/document/4066882?denied=,,"Historical significance,Highly cited",,,,1559250.0,,,"0.5*45*35*1980 = 1559250 = 1.56e6
Trained using IBM punched cards, computation took 45 * 35s for all 10 digits (Section Estimating the Linear Decision Function).
Multiplications per second estimate based on publication year: 1.98e3 (regression on Nordhaus data).
Assumed utilization of 0.5",,,500.0,"""Fifty different people were asked, resulting in a sample size of 50 for each of the ten pattern classes. """,,0.4375,"""Forty-five hyperplanes are required in the complete linear decision function""
""About 35 seconds, on the average, was required to determine a hyperplane, given an initial position.""",,,,"Many pattern recognition machines may be considered to consist of two principal parts, a receptor and a categorizer. The receptor makes certain measurements on the unknown pattern to be recognized; the categorizer determines from these measurements the particular allowable pattern class to which the unknown pattern belongs. This paper is concerned with the study of a particular class of categorizers, the linear decision function. The optimum linear decision function is the best linear approximation to the optimum decision function in the following sense: 1) ""Optimum"" is taken to mean minimum loss (which includes minimum error systems). 2) ""Linear"" is taken to mean that each pair of pattern classes is separated by one and only one hyperplane in the measurement space. This class of categorizers is of practical interest for two reasons: 1) It can be empirically designed without making any assumptions whatsoever about either the distribution of the receptor measurements or the a priori probabilities of occurrence of the pattern classes, providing an appropriate pattern source is available. 2) Its implementation is quite simple and inexpensive. Various properties of linear decision functions are discussed. One such property is that a linear decision function is guaranteed to perform at least as well as a minimum distance categorizer. Procedures are then developed for the estimation (or design) of the optimum linear decision function based upon an appropriate sampling from the pattern classes to be categorized.",,,,Speculative,2025-02-17 18:28:44+00:00,United States of America,,,,,,,,,
PAPA,Other,University of Genoa,Academia,"A Gamba, L Gamberini, G Palmieri, R Sanna",1961-09-01,Further experiments with PAPA,https://www.semanticscholar.org/paper/Further-experiments-with-PAPA-Gamba-Gamberini/c3a20b9aa86033cec29f08e69f4bc81e8b329ae2,24.0,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-10-21 18:34:04+00:00,Italy,,,,,,,,,
LMS,"Other,Vision",Stanford University,Academia,Widrow and Hoff,1960-06-30,Adaptive switching circuits (technical report),https://www.scirp.org/(S(351jmbntvnsjt1aadkposzje))/reference/ReferencesPapers.aspx?ReferenceID=547230,6329.0,Highly cited,,17.0,,,,,,,,6.0,,,,,,,,,,,,,2024-10-21 18:34:04+00:00,United States of America,,,,,,,,,
ADALINE,Vision,Stanford University,Academia,Widrow and Hoff,1960-06-30,Adaptive switching circuits,https://isl.stanford.edu/~widrow/papers/c1960adaptiveswitching.pdf,6329.0,Highly cited,,17.0,"""The machine's total experience is stored in the values of the weights a0,...,a16""",9900.0,,,"""The method of searching that has proven most useful is the method of steepest descent""

Apparently each pattern was only shown once to the system.

So the training compute is (forward pass compute) * (3 for backprop) * dataset size",,,100.0,"""The best system, arrived at by slow precise adaptation on the full body of 100 noisy patterns, was able to classify these patterns as desired except for twelve errors.""

https://isl.stanford.edu/~widrow/papers/c1960adaptiveswitching.pdf",,,,,,,,,,,,2025-02-17 18:26:53+00:00,United States of America,,,,,,,,,
Perceptron (1960),Vision,Cornell Aeronautical Laboratory,Academia,Frank Rosenblatt,1960-03-30,Perceptron Simulation Experiments,https://www.semanticscholar.org/paper/Perceptron-Simulation-Experiments-Rosenblatt/ae76ce1ba27ac29addce4aab93b927e9bc7f7c67,394.0,Historical significance,,1000.0,""" The first program was designed to handle
up to 1000 A units, and a 72 by 72 sensory mosaic. It
was found that this large sensory system presented
stimuli with a fineness of grain considerably better than
the limits of discrimination of a thousand-unit percep-
tron, and at the same time, required an excessive
amount of time for stimulus transformations, since each
illuminated point in the stimulus must be transformed
individually into its image point.""",720000000.0,,,"4000 * 12000 * 15
from the text ""This program uses the IBM 704 computer to simulate per-ceptual learning, recognition, and spontaneous classification of visual stimuli in the perceptron,""
from https://en.wikipedia.org/wiki/IBM_704 The 704 can execute up to 12,000 floating-point additions per second.
"" For the first system, the computing time averaged about 15 seconds per stimulus cycle, ""
In Fig 10 we see up to 4000 stimuli",,,5000.0,"from the text ""The two main simulation programs total about 5000 words each.""",,,,,,,"An experimental simulation program, which has been in progress at the Cornell Aeronautical Laboratory since 1957, is described. This program uses the IBM 704 computer to simulate perceptual learning, recognition, and spontaneous classification of visual stimuli in the perceptron, a theoretical brain model which has been described elsewhere. The paper includes a brief review of the organization of simple perceptrons, and theoretically predicted performance curves are compared with those obtained from the simulation programs, in several types of experiments, designed to study ""forced"" and ""spontaneous"" learning of pattern discriminations.",,,,Speculative,2025-02-18 18:31:40+00:00,United States of America,,,,,,,,,
Pattern recognition and reading by machine,Vision,Sandia Corporation,Industry,"W. W. Bledsoe, I. Browning",1959-12-01,Pattern recognition and reading by machine,https://dl.acm.org/doi/10.1145/1460299.1460326,587.0,Historical significance,,2625.0,A two bit state is recorded for each of the 75 cell pairs and each of the 25+10 characters recognized.,,,,,,,,,,,,,,,,,,,,2024-10-21 18:34:03+00:00,United States of America,,,,,,,,,
Samuel Neural Checkers,Games,IBM,Industry,Arthur L. Samuel,1959-07-01,Some studies in machine learning using the game of checkers,https://ieeexplore.ieee.org/abstract/document/5392560,4671.0,Highly cited,,16.0,"""with 16 terms for generalization learning""

""Mention has been made several times of the procedure
for replacing terms in the scoring polynomial. The program, as it is currently running, contains 38 different
terms (in addition to the piece-advantage term), 16 of
these being included in the scoring polynomial at anyone
time and the remaining 22 being kept in reserve.""",428400000.0,,,"""it can learn to do this in a remarkably short period of time 8 or 10 hours of machine-playing time)""

""The availability of a larger and faster machine (the IBM 704), coupled with many detailed changes in the programming procedure, leads to a fairly interesting game being played, even without any learning.""

""The Type 704 is the first large-scale, commercially available computer to employ fully automatic floating point arithmetic commands. [...]. Floating point addition or subtraction operations require 84 microseconds.""

source: https://www.ibm.com/ibm/history/exhibits/mainframe/mainframe_PP704.html

""An idea of the learning ability of this procedure can be gained by analyzing an initial test series of 28 games""

""Each game averaged 68 moves (34 to a side), of which approximately 20 caused changes to be made in the scoring polynomial.""",,,53000.0,"Based on number of board positions

At the present time the memory tape contains something over 53,000 board positions (averaging 3.8 word search) which have been selected from a much larger
number of positions by means of the culling techniques
described. While this is still far from the number which
would tax the listing and searching procedures used in
the program, rough estimates, based on the frequency
with which the saved boards are utilized during normal
play (these figures being tabulated automatically), indicate that a library tape containing at least 20 times the
present number of board positions would be needed to
improve the midgame play significantly. At the present
rate of acquisition of new positions this would require
an inordinate amount of play and, consequently, of
machine time.",,,,,,,,,,,,2024-11-01 14:04:57+00:00,United States of America,,,,,,,,,
Pandemonium (morse),Language,Massachusetts Institute of Technology (MIT),Academia,OG Selfridge,1959-02-01,Pandemonium: A Paradigm for Learning,https://aitopics.org/doc/classics:504E1BAC/,1453.0,Highly cited,,,"The paper mentions 11 function types. Unclear how many times they are called (number of ""demons"" in their Pandemonium implementation).",600000000.0,,,"The paper mentions using an IBM 704, which can execute up to 12,000 floating-point additions per second (https://wikiless.org/wiki/IBM_704). My best guess as to how long it ran for ranges between 1h to 2 days, which when plugged into guesstimate (https://www.getguesstimate.com/models/19625), i.e., taking the log mean, gives a mean estimate of 600M",,,,??? Might need to make a guesstimate here.,,,,,,,,,,,Speculative,2025-02-17 18:26:11+00:00,United States of America,,,,,,,,,
Perceptron Mark I,Other,"Cornell Aeronautical Laboratory,Cornell University","Academia,Academia",F Rosenblatt,1957-01-01,The Perceptron—a perceiving and recognizing automaton,https://blogs.umass.edu/brain-wars/files/2016/03/rosenblatt-1957.pdf,1610.0,"Historical significance,Highly cited",First modern neural network ,1000.0,"""Figure 4.8 Illustration of the Mark 1 perceptron hardware. The photograph on the left shows how the inputs were obtained using a simple camera system in which an input scene, in this case a printed character, was illuminated by powerful lights, and an image focussed onto a 20 × 20 array of cadmium sulphide photocells, giving a primitive 400 pixel image. The perceptron also had a patch board, shown in the middle photograph, which allowed different configurations of input features to be tried. Often these were wired up at random to demonstrate the ability of the perceptron to learn without the need for precise wiring, in contrast to a modern digital computer. The photograph on the right shows one of the racks of adaptive weights. Each weight was implemented using a rotary variable resistor, also called a potentiometer, driven by an electric motor thereby allowing the value of the weight to be adjusted automatically by the learning algorithm.""

source: Bishop, Christopher M. (2006). Pattern Recognition and Machine Learning

The Perceptron had a 400-pixel visual input and 1000 neurons in the hidden layer. https://twitter.com/DiegoKuonen/status/1130352233223262208",694894.9377361819,,,Extracted from AI and Compute (https://openai.com/blog/ai-and-compute/) charts by using https://automeris.io/WebPlotDigitizer/.,,,6.0,Appendix II describes an experiment with 6 stimulus patterns,,,,,,,,,,,,2025-02-17 20:03:36+00:00,"United States of America,United States of America",,,,,,,,,
Sequence-based pattern recognition,Vision,Massachusetts Institute of Technology (MIT),Academia,O. G. Selfridge,1955-03-01,Pattern recognition and modern computers,https://dl.acm.org/doi/10.1145/1455292.1455310,290.0,Historical significance,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-10-21 18:34:02+00:00,United States of America,,,,,,,,,
Self Organizing System,Other,Massachusetts Institute of Technology (MIT),Academia,W. A. Clark and B. G. Farley,1955-03-01,Generalization of pattern recognition in a self-organizing system,https://dl.acm.org/doi/10.1145/1455292.1455309,93.0,Historical significance,,225.0,Figure 4 contains the learnt weight matrix,,,,,,,256.0,""" The modifier was then
disabled so that no further changes in the net could
occur and all 256 possible input patterns were then presented in turn.""

""For these purposes, 16-element nets (8 input and 8
output) were used because it was desired to exhaust all
possible input patterns, and we were limited to about
2^8 inputs by available time. """,,,,,,,,,,,,2024-10-21 18:34:02+00:00,United States of America,,,,,,,,,
Genetic algorithm,Mathematics,Institute for Advanced Study,Academia,NA Barricelli,1954-07-02,Numerical testing of evolution theories,https://link.springer.com/article/10.1007/BF01556771,266.0,Historical significance,Possibly first computer simulation of a genetic evolution algorithm,,,,,,,,,,,,,,,,,,,,,Unknown,2024-10-21 18:34:01+00:00,United States of America,,,,,,,,,
SNARC,Robotics,Harvard University,Academia,Marvin Minsky,1952-01-08,A Neural-Analogue Calculator Based upon a Probability Model of Reinforcement,https://en.wikipedia.org/wiki/Stochastic_neural_analog_reinforcement_calculator,33.0,Historical significance,,40.0,"The link below seems to suggest the SNARC had 40 cells, each with a dial that acts as a configurable weight.

https://www.webofstories.com/play/marvin.minsky/137",,,,,,,,,,,,,,,,,,,,2024-10-21 18:34:01+00:00,United States of America,,,,,,,,,
Theseus,Robotics,Bell Laboratories,Industry,Claude Shannon,1950-07-02,Mighty Mouse,https://www.technologyreview.com/2018/12/19/138508/mighty-mouse/,,Historical significance,,40.0,"The learned part is the maze configuration. There are 25 squares of the maze. The 16 squares to the left top corner have each one adjacent square down and one adjacent square up, for a total of 16*2 walls. We only need to count the 8 spare walls connecting the squares in the right side and the bottom side. In total there are 16*2+8 walls.",40.0,,,"The ""training"" consists on the mouse running around and checking each wall.",,,40.0,Each wall Theseus bumps into is a datapoint,,,,,,,,,,,,2025-02-18 18:30:52+00:00,United States of America,,,,,,,,,
babbage-002,Language,OpenAI,Industry,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unknown,2024-09-06 19:27:47+00:00,United States of America,,,,,,,,,
tts-1,Speech,OpenAI,Industry,,,,,,,,,,,,,,,,,,,,,,,,Text to Speech model from OpenAI,,,,Unknown,2024-09-06 20:40:52+00:00,United States of America,,,,,,,,,
tts-1-hd,Speech,OpenAI,Industry,,,,,,,,,,,,,,,,,,,,,,,,Text to speech model from OpenAI,,,,Unknown,2024-09-06 20:41:09+00:00,United States of America,,,,,,,,,
LM-Design,Biology,"ByteDance,University of Wisconsin Madison","Industry,Academia","Zaixiang Zheng, Yifan Deng, Dongyu Xue, Yi Zhou, Fei Ye, Quanquan Gu",,Structure-informed Language Models Are Protein Designers,https://proceedings.mlr.press/v202/zheng23a.html,46.0,,,6900000.0,"""That is because LMDESIGN has 6.9M parameters while ProteinMPNN+CMLM only has 1.6M parameters.""",1.400000000000012e+20,,,"1. Hardware setup: 8x NVIDIA V100 GPUs (1.25 x 10^14 FLOP/s per GPU)

2. Training duration: 4 days (345,600 seconds) - estimated based on 10 epochs over 50M sequences with 6000 residues per batch

3. Utilization rate: 40%

4. Final calculation:
(1.25 x 10^14 FLOP/s/GPU × 8 GPUs) × 345,600 seconds × 0.4 = 1.4 x 10^20 FLOPs",,,15000000001.0,"Total tokens = Number of Sequences × Average Sequence Length
Total tokens = 50,000,000 × 300 = 1.5 × 10^10 tokens

Final estimate: 1.5e10 tokens",,,,,,,"This paper demonstrates that language models are strong structure-based protein designers. We present LM-Design, a generic approach to reprogramming sequence-based protein language models (pLMs), that have learned massive sequential evolutionary knowledge from the universe of natural protein sequences, to acquire an immediate capability to design preferable protein sequences for given folds. We conduct a structural surgery on pLMs, where a lightweight structural adapter is implanted into pLMs and endows it with structural awareness. During inference, iterative refinement is performed to effectively optimize the generated protein sequences. Experiments show that LM-Design improves the state-of-the-art results by a large margin, leading to 4% to 12% accuracy gains in sequence recovery (e.g., 55.65%/56.63% on CATH 4.2/4.3 single-chain benchmarks, and >
60% when designing protein complexes). We provide extensive and in-depth analyses, which verify that LM-Design can (1) indeed leverage both structural and sequential knowledge to accurately handle structurally non-deterministic regions, (2) benefit from scaling data and model size, and (3) generalize to other proteins (e.g., antibodies and de novo proteins).
",,,,Unverified,2025-02-17 17:44:47+00:00,"China,United States of America",,,,,,,,,
Deep-LDA,,,,,,Optimization and redevelopment of single-cell data analysis workflow based on deep generative models,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2024-10-15 15:27:40+00:00,,,,,,,,,,
P-Mistral,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2024-12-13 00:02:08+00:00,,,,,,,,,,
P-Llama2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2024-12-13 00:02:08+00:00,,,,,,,,,,
P-LLama3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2024-12-13 00:02:08+00:00,,,,,,,,,,
P-gemma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2024-12-13 00:02:08+00:00,,,,,,,,,,
Microsoft MAI-1,Language,Microsoft,Industry,,,"Meet MAI-1: Microsoft Readies New AI Model to Compete With Google, OpenAI",https://www.theinformation.com/articles/meet-mai-1-microsoft-readies-new-ai-model-to-compete-with-google-openai,,,,500000000000.0,,,,,,,,,,,,,,,Supervised,,,Unreleased,,Unverified,2024-12-05 13:36:26+00:00,United States of America,,,,,,,,,
Intel Aurora 1T,Language,Intel,Industry,Intel,,"Intel SC23 Update: 1-Trillion Parameter AI Model Running on Aurora Supercomputer, Granite Rapids Benchmarks",https://www.tomshardware.com/news/intel-supercomputing-2023-aurora-xeon-max-gpu-gaudi-granite-rapids,,,,1000000000000.0,,,,,,,,,,,,,,,Supervised,"At Supercomputing 2023, Intel provided a slew of updates on its latest HPC and AI initiatives, including new information about its fifth-gen Emerald Rapids and future Granite Rapids Xeon CPUs, Guadi accelerators, new Max Series GPU benchmarks against Nvidia's H100 GPUs, and the company's work on the 'genAI' 1-trillion-parameter AI model that runs on the Aurora supercomputer.",,,,Unverified,2024-12-05 13:39:20+00:00,United States of America,,,,,,,,,
DeepL LLM,Language,DeepL,Industry,DeepL,,"DeepL's next-gen LLM outperforms ChatGPT-4, Google, and Microsoft for translation quality",https://www.deepl.com/en/blog/next-gen-language-model,,Significant use,"DeepL has ~10M monthly users: https://www.forbes.com/sites/rashishrivastava/2023/08/08/deepl-is-trying-to-take-on-google-translate-and-chatgpt/#:~:text=DeepL%20boasts%20more%20than%2010,struggle%20with%20a%20language%20barrier.= ",,,,,,,,,,,,,,,,Supervised,,,Hosted access (no API),,Unverified,2024-12-01 12:38:26+00:00,Germany,,,,,,,,,
OV-DINO,,Guangzhou AI Public Computing Center,"Government,Industry",,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2024-12-06 07:03:29+00:00,China,,,,,,,,,
Magic Cube,,,,,,Exclusive: Another 14 AI Large Models in Third Batch Registered With Regulator,https://en.tmtpost.com/post/6902830,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Yue AI,,,,,,Exclusive: Another 14 AI Large Models in Third Batch Registered With Regulator,https://en.tmtpost.com/post/6902830,,,,,,,,,,,,,,,,,,,,"IReader's ""Yue Ai Chat"" WeChat mini-program is an AI conversational robot-style product, offering ""chat about books"" and ""chat about people"" two major scenarios. Users can converse with established character images in the system and read classics or novels in the form of conversations. Currently, IReader Technology mainly uses the technical support provided by Alibaba Cloud.",,,,Unverified,,,,,,,,,,,
Mengzi-Lite,,,,,,"澜舟科技通过生成式人工智能备案并重磅发布新版孟子GPT-金融模型和孟子GPT-Code模型
",https://www.langboat.com/en/portal/mengzi-gpt,,,,,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
WeituAI 1.0,,,,,,"香港大模型公司Weitu AI首秀，打造多模态Native的技术和产品
",https://36kr.com/p/2725929816384770,,,,15000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Yiye Qingzhou-0.7B,,,,,,"36氪首发 | 专注企业级大模型落地，「识因智能」完成数千万元首轮融资
",https://36kr.com/p/3062982772761984,,,,700000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
Yiye Qingzhou-45B,,,,,,"36氪首发 | 专注企业级大模型落地，「识因智能」完成数千万元首轮融资
",https://36kr.com/p/3062982772761984,,,,45000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,,,,,,,,,,,
ministral-8b-2410,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
ministral-3b-2410,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
mistral-large-2407,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
mistral-large-2402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
open-mixtral-8x22b,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
open-mistral-nemo-2407,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
open-mistral-7b,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
open-mixtral-8x7b,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
open-mistral-nemo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-21 20:24:01+00:00,,,,,,,,,,
Eurus-2-7B-PRIME,,"Tsinghua University,University of Illinois Urbana-Champaign (UIUC)","Academia,Academia",,,,,,,,7000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-22 16:36:54+00:00,"China,United States of America",,,,,,,,,
Phi-3.5-MoE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-01-27 22:49:53+00:00,,,,,,,,,,
360Zhinao2-7B,Language,360 Security Technology,Industry,,,,https://github.com/Qihoo360/360zhinao2,,,,7000000000.0,,,,,,,,,,,,,,,,,,,,Unverified,2025-02-25 12:34:43+00:00,China,360Zhinao-7B,,,,,,,,
Yi-1.5-9B,Language,01.AI,Industry,,,01-ai/Yi-1.5-9B,https://huggingface.co/01-ai/Yi-1.5-9B,,,,8830000000.0,,,,,,,,500000000000.0,500 billion tokens,,,,,,,,,,,Unverified,2025-02-25 12:36:23+00:00,China,,,,,,,,,
Hairuo,,Inspur,Industry,,,,https://encloud.inspur.com/hairuo/cp/index.html,,SOTA improvement,Highest score at SuperGLUE Benchmark https://super.gluebenchmark.com/leaderboard/,,,,,,,,,,,,,,,,,,,,,Unverified,2025-03-04 14:33:44+00:00,China,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-03-07 22:04:45+00:00,,,,,,,,,,
DeepSeek-R1-Distill-Llama-70B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-03-07 23:40:56+00:00,,,,,,,,,,
DeepSeek-R1-Distill-Qwen-14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-03-07 23:40:56+00:00,,,,,,,,,,
DeepSeek-R1-Distill-Qwen-1.5B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-03-07 23:40:56+00:00,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-03-10 16:30:58+00:00,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-03-10 16:44:58+00:00,,,,,,,,,,
SauTech,"Speech,Audio","Saudi Data and Artificial Intelligence Authority,Saudi Company for Artificial Intelligence","Industry,Government,Industry,Government",,,"SDAIA and SCAI Unveil ""SauTech"" Speech-to-text Software
",https://globalaisummit.org/en/News/Pages/NewsDetails.aspx?NewsId=73,,,,,,,,,,,,,,,,,,,,,,,,Unverified,2025-03-11 12:45:43+00:00,"Saudi Arabia,Saudi Arabia",,,,,,,,,
